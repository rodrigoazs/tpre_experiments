Starting experiment #2 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.30658462455489577;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.0727507050110159;  // std dev = 0,411, 452,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.22005369700427527;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.5700660335451034;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.26146385222658547;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.21604367194161622;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5902917922423667;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.26502603789611584;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.06366200657312329;  // std dev = 0,411, 452,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.19110167494273014;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.10066982651267334;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4857241150912666;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.22656674054116943;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.18765883779545675;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.502390172842148;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.22197223580351752;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.05532073620678391;  // std dev = 0,411, 452,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.16231249244656062;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.08691854825779026;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.3898328464728644;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.19115743949407257;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.15949043560496148;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.4019511301081827;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.10782354562777509;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1807540745938445;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.013726136440107553;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.13511580251333344;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.07833326629993873;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.299595685697623;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.15745421419149033;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.13290248379434325;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.30789683133362616;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.14387280902051133;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01180950471417839;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11055309443231806;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.06705302811148164;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.2256090043057371;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.12710849653552952;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.1088857262918201;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.23151037584862597;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11257382780411632;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01014648949372202;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.08918423008060604;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.05693739455702494;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.16931373144833342;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.10098959576200428;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.08797283442732294;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.1738984001701338;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.06380835741947548;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.08701803110777445;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.008707281499236738;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07114130133952272;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.048011372499718916;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.12769222414583092;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07927332329813633;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.07029004176416358;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13154934159230025;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.05259581166798401;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06670254019468515;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.0074645491334548834;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.05625523041289717;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.04024316521773562;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.09704621824487523;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.061673116590251875;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.05567628272488492;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10044954142303544;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.043061399542859605;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.050840627586993974;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.006393535865873052;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04418754480386484;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.03356118743255683;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.07433620653681373;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0476691029643235;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.043807501095376906;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.07740350554216137;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.03506047229230461;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.03860254515354558;  // std dev = 0,497, 863,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.005472039517483685;  // std dev = 0,385, 216,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.03453268330884567;  // std dev = 6,964, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.02786962070122472;  // std dev = 7,102, 271,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05734086879878745;  // std dev = 0,453, 965,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.036671568052569055;  // std dev = 6,600, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.034293807183843006;  // std dev = 4,672, 95,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06012161843756343;  // std dev = 5,740, 168,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=123 */
%   | | | else return 0.028417796087898104;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.13157391548156738
   Generating paths time   = 1.6327157020568848
   Generating mappings time   = 0.09285545349121094
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 1.8571531772613525


Best mapping found: ['tweets(A,B) -> workstartdate(A,B)', 'follows(A,B) -> edge(A,B)', 'accounttype(A,B) -> worklocation(A,B)'] 

Transferred target predicate: edge 

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
0;false,false;workstartdate(A, H).;true;true
0;false,false,false;workstartdate(B, J).;false;false
0;true,false,false;workstartdate(B, F).;false;false
0;false;workstartdate(A, G), workstartdate(B, G).;false;true
0;false,false,true;workstartdate(B, I).;false;false
0;true;workstartdate(A, D), workstartdate(B, D).;false;true
0;true,false;workstartdate(A, E).;false;true
1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
1;false,false;workstartdate(A, H).;true;true
1;false,false,false;workstartdate(B, J).;false;false
1;true,false,false;workstartdate(B, F).;false;false
1;false;workstartdate(A, G), workstartdate(B, G).;false;true
1;false,false,true;workstartdate(B, I).;false;false
1;true;workstartdate(A, D), workstartdate(B, D).;false;true
1;true,false;workstartdate(A, E).;false;true
2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
2;false,false;workstartdate(A, H).;true;true
2;false,false,false;workstartdate(B, J).;false;false
2;true,false,false;workstartdate(B, F).;false;false
2;false;workstartdate(B, G), workstartdate(A, G).;false;true
2;false,false,true;workstartdate(B, I).;false;false
2;true;workstartdate(B, D), workstartdate(A, D).;false;true
2;true,false;workstartdate(A, E).;false;true
3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
3;false,false;workstartdate(A, I).;true;true
3;false,false,false;workstartdate(B, K).;false;false
3;true,false,false;workstartdate(B, G).;false;false
3;false;workstartdate(A, H), workstartdate(B, H).;false;true
3;false,false,true;workstartdate(B, J).;false;false
3;true;workstartdate(B, D), workstartdate(A, D).;false;true
3;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
4;false,false;workstartdate(A, I).;true;true
4;false,false,false;workstartdate(B, K).;false;false
4;true,false,false;workstartdate(B, G).;false;false
4;false;workstartdate(A, H), workstartdate(B, H).;false;true
4;false,false,true;workstartdate(B, J).;false;false
4;true;workstartdate(B, D), workstartdate(A, D).;false;true
4;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
5;false,false;workstartdate(A, I).;true;true
5;false,false,false;workstartdate(B, K).;false;false
5;true,false,false;workstartdate(B, G).;false;false
5;false;workstartdate(A, H), workstartdate(B, H).;false;true
5;false,false,true;workstartdate(B, J).;false;false
5;true;workstartdate(A, D), workstartdate(B, D).;false;true
5;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
6;false,false;workstartdate(A, I).;true;true
6;false,false,false;workstartdate(B, K).;false;false
6;true,false,false;workstartdate(B, G).;false;false
6;false;workstartdate(A, H), workstartdate(B, H).;false;true
6;false,false,true;workstartdate(B, J).;false;false
6;true;workstartdate(B, D), workstartdate(A, D).;false;true
6;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
7;false,false;workstartdate(A, I).;true;true
7;false,false,false;workstartdate(B, K).;false;false
7;true,false,false;workstartdate(B, G).;false;false
7;false;workstartdate(B, H), workstartdate(A, H).;false;true
7;false,false,true;workstartdate(B, J).;false;false
7;true;workstartdate(B, D), workstartdate(A, D).;false;true
7;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
8;false,false;workstartdate(A, I).;true;true
8;false,false,false;workstartdate(B, K).;false;false
8;true,false,false;workstartdate(B, G).;false;false
8;false;workstartdate(B, H), workstartdate(A, H).;false;true
8;false,false,true;workstartdate(B, J).;false;false
8;true;workstartdate(A, D), workstartdate(B, D).;false;true
8;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
9;false,false;workstartdate(A, I).;true;true
9;false,false,false;workstartdate(B, K).;false;false
9;true,false,false;workstartdate(B, G).;false;false
9;false;workstartdate(B, H), workstartdate(A, H).;false;true
9;false,false,true;workstartdate(B, J).;false;false
9;true;workstartdate(B, D), workstartdate(A, D).;false;true
9;true,false;workstartdate(B, E), workstartdate(A, F).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.6176426059855848;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.5507559389905593;  // std dev = 7,397, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.6081489350995123;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.4167426850995079;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.3684307325100177;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.2992917922423644;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.40079185918573035;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.3253317018447109;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.5248650755957723;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.46977598097788076;  // std dev = 7,397, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.5170719622367218;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.35810737984013596;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.3174275054761093;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.25882293625547353;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.3447011264825601;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.2809486743440916;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41819051868672913;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.3781724655764929;  // std dev = 7,397, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.41257245288266015;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.29456827974232286;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.2631822547287882;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.21703485971307665;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.28428235409676006;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.23458842257562476;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.31903525250597314;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.297688861899757;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.31517865761850666;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.24562035216097747;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.23352664985785082;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.2110501796916357;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.17705918060122716;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.22621241433903536;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.19013059016767803;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.23957086138580264;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.2245684994797425;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.23676009386434174;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.18551799081424625;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.18036074736826863;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.16501476110782548;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.14124645478650036;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.17538819787070037;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.1504874329462128;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.18033897205754407;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.16848633825753426;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.1780694542720749;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.13923078721990026;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.13711215693445944;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.12682337585115727;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.11078008982252101;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.13376938221942078;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.1170630854148095;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.137118172408495;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.12682894665157274;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.13513671764223464;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.10451573973495189;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.10336900741711469;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.09643156706991025;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.08582959372622294;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.10108819972015234;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.08998281455291808;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.10547265342499836;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.09609792237531584;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.10367175113685516;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.07869489968448823;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.07763780631268234;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.07286182431010968;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.06593411573750643;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.07603476413339356;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.06862241913029721;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.08200946916298817;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.07332690239327086;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.0803483330303593;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.059480897351794966;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.058237571917162584;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.054857584662649055;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.0503548266164956;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.05707184222569923;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.05206417401036541;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.06435727949526682;  // std dev = 6,580, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.05631161086825873;  // std dev = 6,943, 229,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=160 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.06282214181758168;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.04512594132929711;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.04368260174417614;  // std dev = 11,236, 512,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=286 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.04122226713440336;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.03830298394035104;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.04280788901187335;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.03937001354214693;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */


Results
   AUC ROC   = 0.500271
   AUC PR    = 0.50392
   CLL	      = -0.700773
   Precision = 0.497771 at threshold = 0.5
   Recall    = 0.133466
   F1        = 0.210493


Total learning time: 134.923 seconds
Total inference time: 3.013 seconds
AUC ROC: 0.500271


Structure after Parameter Learning
[['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, H)', 'false,false,false': 'workstartdate(B, J)', 'true,false,false': 'workstartdate(B, F)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,true': 'workstartdate(B, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E)'}, {'true,false,true': [7.397, 79, 178], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [0.816, 1, 2], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, H)', 'false,false,false': 'workstartdate(B, J)', 'true,false,false': 'workstartdate(B, F)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,true': 'workstartdate(B, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E)'}, {'true,false,true': [7.397, 79, 178], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [0.816, 1, 2], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, H)', 'false,false,false': 'workstartdate(B, J)', 'true,false,false': 'workstartdate(B, F)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,true': 'workstartdate(B, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E)'}, {'true,false,true': [7.397, 79, 178], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [0.816, 1, 2], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)'}, {'true,false,true': [6.943, 69, 160], 'true,false,false,true': [2.121, 6, 18], 'false,false,true,true': [18.114, 643, 670], 'false,false,true,false': [25.439, 1467, 1158], 'true,false,false,false': [2.664, 11, 20], 'true,true': [6.58, 57, 180], 'false,false,false,true': [23.013, 976, 1158], 'false,false,false,false': [27.195, 1583, 1388], 'false,true': [11.236, 226, 286]}]]
[{'': [0.19913719740201, 0.24984877821840049], 'false,false': [0.24871800361154414, 0.2499983788050752], 'false,false,false': [0.24818158102540086, 0.24892302920146855], 'true,false,false': [0.18749999999999956, 0.22222222222222224], 'false': [0.24656677246094033, 0.24973395262451767], 'false,false,true': [0.24989428464200322, 0.24653583673471885], 'true': [0.18266303477007464, 0.21111882562984033], 'true,false': [0.21290254205211834, 0.19204389574759964]}, {'': [0.1987812571700956, 0.2493533778812605], 'false,false': [0.24841892175715463, 0.24960186717812688], 'false,false,false': [0.24818158102537485, 0.24892302920151346], 'true,false,false': [0.1875000000000001, 0.2222222222222222], 'false': [0.24656677246094058, 0.2492968487002001], 'false,false,true': [0.24989428464200625, 0.24653583673471097], 'true': [0.18266303477006576, 0.2110339918968319], 'true,false': [0.21290254205211168, 0.19182520366853512]}, {'': [0.1984266915607298, 0.24887004793307888], 'false,false': [0.24812890417785938, 0.24921386349109798], 'false,false,false': [0.2481815810253594, 0.2489230292015141], 'true,false,false': [0.18749999999999992, 0.22222222222222224], 'false': [0.246566772460942, 0.24887076445485798], 'false,false,true': [0.24989428464201024, 0.24653583673470963], 'true': [0.18266303477006682, 0.21094943011212577], 'true,false': [0.21290254205211195, 0.19160700784015378]}, {'': [0.19821649881351125, 0.2485141121430163], 'false,false': [0.24791238913168012, 0.24892981303404219], 'false,false,false': [0.24818158102536594, 0.24892302920148782], 'true,false,false': [0.18749999999999992, 0.22901090140457475], 'false': [0.24656677246094252, 0.2485563103607407], 'false,false,true': [0.2498942846420143, 0.24653583673470286], 'true': [0.18266303477007076, 0.2108989733678133], 'true,false': [0.21052230125283472, 0.21208704963346883]}, {'': [0.19806341007220563, 0.24830376144072352], 'false,false': [0.2477811601130553, 0.24876393289843102], 'false,false,false': [0.2481815810253715, 0.24892302920148673], 'true,false,false': [0.18750000000000008, 0.22901487544823176], 'false': [0.24656677246093386, 0.24836975795803357], 'false,false,true': [0.24989428464201419, 0.24653583673466112], 'true': [0.1826630347700685, 0.21076387833187243], 'true,false': [0.21052230125283622, 0.21154509850057282]}, {'': [0.1979914448472938, 0.24819708630265605], 'false,false': [0.24771280802480353, 0.2486809872910867], 'false,false,false': [0.24818158102538626, 0.2489230292015147], 'true,false,false': [0.18750000000000008, 0.22901582783274824], 'false': [0.24656677246093717, 0.24827478005081244], 'false,false,true': [0.24989428464200347, 0.2465358367346949], 'true': [0.18266303477006876, 0.21069091807664617], 'true,false': [0.21052230125283689, 0.21127083218058768]}, {'': [0.1979561078264359, 0.24814775919365434], 'false,false': [0.2476805850044293, 0.2486430914501317], 'false,false,false': [0.2481815810253749, 0.24892302920152826], 'true,false,false': [0.18750000000000003, 0.22901531306913342], 'false': [0.2465667724609387, 0.2482307473176367], 'false,false,true': [0.24989428464201102, 0.24653583673469026], 'true': [0.18266303477006812, 0.2106525315053955], 'true,false': [0.2105223012528367, 0.21113015409360106]}, {'': [0.19793687664126813, 0.24812596993494396], 'false,false': [0.2476662701447575, 0.24862645436047742], 'false,false,false': [0.24818158102537577, 0.24892302920151044], 'true,false,false': [0.18749999999999992, 0.22901424605423412], 'false': [0.24656677246094144, 0.24821129023324148], 'false,false,true': [0.2498942846420179, 0.24653583673468277], 'true': [0.18266303477006807, 0.21063156184610926], 'true,false': [0.2105223012528356, 0.21105237315542924]}, {'': [0.19792504047238618, 0.2481164780037098], 'false,false': [0.24766010973710476, 0.24861918854538675], 'false,false,false': [0.24818158102537752, 0.24892302920151138], 'true,false,false': [0.1875, 0.22901307600851112], 'false': [0.24656677246093994, 0.24820283576017207], 'false,false,true': [0.24989428464200286, 0.2465358367346811], 'true': [0.182663034770069, 0.21061936369407214], 'true,false': [0.21052230125283616, 0.21100537828070412]}, {'': [0.19791689379762312, 0.2481123176043402], 'false,false': [0.24765749771324003, 0.24861596320532967], 'false,false,false': [0.24818158102538054, 0.24892302920149406], 'true,false,false': [0.18749999999999997, 0.22901199451091542], 'false': [0.2465667724609356, 0.24819915156644456], 'false,false,true': [0.2498942846420077, 0.24653583673469578], 'true': [0.18266303477006857, 0.21061178525963903], 'true,false': [0.210522301252837, 0.21097469036093605]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '0;false,false;workstartdate(A, H).;true;true', '0;false,false,false;workstartdate(B, J).;true;true', '0;true,false,false;workstartdate(B, F).;true;true', '0;false;workstartdate(A, G), workstartdate(B, G).;true;true', '0;false,false,true;workstartdate(B, I).;true;true', '0;true;workstartdate(A, D), workstartdate(B, D).;true;true', '0;true,false;workstartdate(A, E).;true;true', '1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '1;false,false;workstartdate(A, H).;true;true', '1;false,false,false;workstartdate(B, J).;true;true', '1;true,false,false;workstartdate(B, F).;true;true', '1;false;workstartdate(A, G), workstartdate(B, G).;true;true', '1;false,false,true;workstartdate(B, I).;true;true', '1;true;workstartdate(A, D), workstartdate(B, D).;true;true', '1;true,false;workstartdate(A, E).;true;true', '2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '2;false,false;workstartdate(A, H).;true;true', '2;false,false,false;workstartdate(B, J).;true;true', '2;true,false,false;workstartdate(B, F).;true;true', '2;false;workstartdate(B, G), workstartdate(A, G).;true;true', '2;false,false,true;workstartdate(B, I).;true;true', '2;true;workstartdate(B, D), workstartdate(A, D).;true;true', '2;true,false;workstartdate(A, E).;true;true', '3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '3;false,false;workstartdate(A, I).;true;true', '3;false,false,false;workstartdate(B, K).;true;true', '3;true,false,false;workstartdate(B, G).;true;true', '3;false;workstartdate(A, H), workstartdate(B, H).;true;true', '3;false,false,true;workstartdate(B, J).;true;true', '3;true;workstartdate(B, D), workstartdate(A, D).;true;true', '3;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '4;false,false;workstartdate(A, I).;true;true', '4;false,false,false;workstartdate(B, K).;true;true', '4;true,false,false;workstartdate(B, G).;true;true', '4;false;workstartdate(A, H), workstartdate(B, H).;true;true', '4;false,false,true;workstartdate(B, J).;true;true', '4;true;workstartdate(B, D), workstartdate(A, D).;true;true', '4;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '5;false,false;workstartdate(A, I).;true;true', '5;false,false,false;workstartdate(B, K).;true;true', '5;true,false,false;workstartdate(B, G).;true;true', '5;false;workstartdate(A, H), workstartdate(B, H).;true;true', '5;false,false,true;workstartdate(B, J).;true;true', '5;true;workstartdate(A, D), workstartdate(B, D).;true;true', '5;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '6;false,false;workstartdate(A, I).;true;true', '6;false,false,false;workstartdate(B, K).;true;true', '6;true,false,false;workstartdate(B, G).;true;true', '6;false;workstartdate(A, H), workstartdate(B, H).;true;true', '6;false,false,true;workstartdate(B, J).;true;true', '6;true;workstartdate(B, D), workstartdate(A, D).;true;true', '6;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '7;false,false;workstartdate(A, I).;true;true', '7;false,false,false;workstartdate(B, K).;true;true', '7;true,false,false;workstartdate(B, G).;true;true', '7;false;workstartdate(B, H), workstartdate(A, H).;true;true', '7;false,false,true;workstartdate(B, J).;true;true', '7;true;workstartdate(B, D), workstartdate(A, D).;true;true', '7;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '8;false,false;workstartdate(A, I).;true;true', '8;false,false,false;workstartdate(B, K).;true;true', '8;true,false,false;workstartdate(B, G).;true;true', '8;false;workstartdate(B, H), workstartdate(A, H).;true;true', '8;false,false,true;workstartdate(B, J).;true;true', '8;true;workstartdate(A, D), workstartdate(B, D).;true;true', '8;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '9;false,false;workstartdate(A, I).;true;true', '9;false,false,false;workstartdate(B, K).;true;true', '9;true,false,false;workstartdate(B, G).;true;true', '9;false;workstartdate(B, H), workstartdate(A, H).;true;true', '9;false,false,true;workstartdate(B, J).;true;true', '9;true;workstartdate(B, D), workstartdate(A, D).;true;true', '9;true,false;workstartdate(B, E), workstartdate(A, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.5836767661935578;  // std dev = 0,446, 521,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=378 */
%   else if ( workstartdate(A, D), workstartdate(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( workemployer(B, F), educationyear(B, G) )
%   | | | then return 0.5655725158855351;  // std dev = 6,885, 229,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=162 */
%   | | | else return 0.39950231855815993;  // std dev = 5,747, 133,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=72 */
%   | | else if ( educationschool(A, H), gender(A, I) )
%   | | | then return 0.09344305274657057;  // std dev = 4,284, 102,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | | else return 0.4414822684328454;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.3684307325100177;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.2992917922423644;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, L) )
%   | | | then return 0.40079185918573035;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.3253317018447109;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.49694369080294876;  // std dev = 0,446, 521,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=378 */
%   else if ( workstartdate(A, D), workstartdate(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( birthday(A, F), birthday(B, F) )
%   | | | then return 0.6499272573024979;  // std dev = 2,053, 37,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | | | else return 0.40626259746244053;  // std dev = 8,709, 325,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=202 */
%   | | else if ( educationschool(A, G), gender(A, H) )
%   | | | then return 0.08168328864042076;  // std dev = 4,284, 102,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | | else return 0.37885201797682094;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.3174275054761093;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.25882293625547353;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.3447011264825601;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.2809486743440916;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.3979982046716409;  // std dev = 0,446, 521,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=378 */
%   else if ( workstartdate(B, D), workstartdate(A, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( workemployer(B, F), educationyear(B, G) )
%   | | | then return 0.3979803726367761;  // std dev = 6,844, 229,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=162 */
%   | | | else return 0.2659485137593866;  // std dev = 5,728, 133,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=72 */
%   | | else if ( educationschool(A, H), gender(B, I) )
%   | | | then return 0.06862864638643854;  // std dev = 4,327, 105,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | | else return 0.3313233744584189;  // std dev = 3,316, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.2631822547287882;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.21703485971307665;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, L) )
%   | | | then return 0.28428235409676006;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.23458842257562476;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.3051886890428499;  // std dev = 0,446, 521,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=378 */
%   else if ( workstartdate(A, D), workstartdate(B, D) )
%   | then if ( workemployer(B, E), educationconcentration(B, F) )
%   | | then if ( educationschool(A, G), locale(B, H) )
%   | | | then return 0.3420992603405439;  // std dev = 5,999, 183,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=132 */
%   | | | else return -0.051495747368243625;  // std dev = 1,676, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( educationschool(A, I), locale(B, J) )
%   | | | then return 0.14381107400135723;  // std dev = 7,930, 285,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=126 */
%   | | | else return 0.43484798992506873;  // std dev = 2,333, 31,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | else if ( workstartdate(A, K) )
%   | | then if ( workstartdate(B, L) )
%   | | | then return 0.2110501796916357;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.17705918060122716;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, M) )
%   | | | then return 0.22621241433903536;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.19013059016767803;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.26354174475766234;  // std dev = 0,427, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else return 0.20123117246313563;  // std dev = 0,459, 284,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=198 */
%   else if ( workstartdate(A, E), workstartdate(B, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then if ( educationyear(B, G), educationyear(A, G) )
%   | | | then return 0.2977094517428159;  // std dev = 5,507, 163,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=120 */
%   | | | else return 0.14650647983933704;  // std dev = 6,838, 199,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=114 */
%   | | else return 0.08181080389767525;  // std dev = 0,444, 150,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.16501476110782548;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.14124645478650036;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.17538819787070037;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.1504874329462128;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.17239626571822367;  // std dev = 0,446, 521,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=378 */
%   else if ( workstartdate(A, D), workstartdate(B, D) )
%   | then if ( workenddate(B, E), workenddate(A, E) )
%   | | then if ( educationschool(A, F), gender(B, G) )
%   | | | then return 0.1648779564151882;  // std dev = 6,954, 231,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=145 */
%   | | | else return 0.35988634375198153;  // std dev = 2,293, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( lastname(A, H), birthday(A, I) )
%   | | | then return -0.34879791690151807;  // std dev = 0,935, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10216677827235068;  // std dev = 7,037, 241,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=119 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.12682337585115727;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.11078008982252101;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, L) )
%   | | | then return 0.13376938221942078;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.1170630854148095;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.15607135545817902;  // std dev = 0,427, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else return 0.10876377133078825;  // std dev = 0,459, 284,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=198 */
%   else if ( workstartdate(A, E), workstartdate(B, E) )
%   | then if ( educationconcentration(B, F), educationconcentration(A, F) )
%   | | then return 0.17697555611906166;  // std dev = 0,431, 150,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=104 */
%   | | else if ( hometown(A, G), workenddate(B, H) )
%   | | | then return 0.2811566119955859;  // std dev = 2,069, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.05002507590551584;  // std dev = 8,463, 328,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=157 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.09643156706991025;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.08582959372622294;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.10108819972015234;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.08998281455291808;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.09938952577917923;  // std dev = 0,446, 521,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=378 */
%   else if ( workstartdate(B, D), workstartdate(A, D) )
%   | then if ( workemployer(B, E), workemployer(A, E) )
%   | | then if ( workenddate(A, F), workenddate(B, G) )
%   | | | then return 0.10714747763790582;  // std dev = 4,110, 88,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=60 */
%   | | | else return 0.5070367328358801;  // std dev = 1,302, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( location(B, H), workposition(B, I) )
%   | | | then return 0.12869700645031035;  // std dev = 5,520, 150,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=100 */
%   | | | else return 0.012940609262174026;  // std dev = 7,186, 258,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=112 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.07286182431010968;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.06593411573750643;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, L) )
%   | | | then return 0.07603476413339356;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.06862241913029721;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.0968257289151031;  // std dev = 0,427, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else return 0.05943857154831753;  // std dev = 0,459, 284,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=198 */
%   else if ( workstartdate(B, E), workstartdate(A, E) )
%   | then if ( workwith(B, F), workemployer(A, G) )
%   | | then return 0.4330956968185906;  // std dev = 0,093, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationclasses(A, H), educationyear(B, I) )
%   | | | then return -0.06499250959252247;  // std dev = 3,765, 63,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   | | | else return 0.07127517114075115;  // std dev = 9,327, 441,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=250 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.054857584662649055;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.0503548266164956;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, L) )
%   | | | then return 0.05707184222569923;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.05206417401036541;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.07553338494847626;  // std dev = 0,427, 237,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=180 */
%   | else return 0.045822180241294475;  // std dev = 0,459, 284,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=198 */
%   else if ( workstartdate(B, E), workstartdate(A, E) )
%   | then if ( lastname(A, F), workposition(B, G) )
%   | | then return -0.0989091651998663;  // std dev = 0,438, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( workemployer(B, H), workemployer(A, H) )
%   | | | then return 0.14806900162646422;  // std dev = 4,066, 94,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=70 */
%   | | | else return 0.03362572624216823;  // std dev = 8,835, 386,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=202 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.04122226713440336;  // std dev = 18,114, 1.313,000 (wgt'ed) examples reached here.  /* #neg=643 #pos=670 */
%   | | | else return 0.03830298394035104;  // std dev = 25,439, 2.625,000 (wgt'ed) examples reached here.  /* #neg=1.467 #pos=1.158 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.04280788901187335;  // std dev = 23,013, 2.134,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.158 */
%   | | | else return 0.03937001354214693;  // std dev = 27,195, 2.971,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=1.388 */


Results
   AUC ROC   = 0.4993
   AUC PR    = 0.501262
   CLL	      = -0.701625
   Precision = 0.491855 at threshold = 0.5
   Recall    = 0.124303
   F1        = 0.198452


Total learning time: 156.95600000000002 seconds
Total inference time: 3.709 seconds
AUC ROC: 0.4993


Refined model AUC ROC: 0.4993


Dataset: 48_twitter_facebook, Fold: 1, Type: Transfer (trRDN-B), Time: 06:14:37
{'Mapping results': {'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Possible mappings': [1568], 'Generating mappings time': 0.09285545349121094, 'Total time': 1.8571531772613525, 'Generating paths time': 1.6327157020568848, 'Knowledge compiling time': 0.13157391548156738}, 'CLL': -0.701625, 'Learning time': 291.879, 'AUC PR': 0.501262, 'F1': 0.198452, 'AUC ROC': 0.4993, 'Recall': 0.124303, 'Precision': [0.491855, 0.5], 'parameter': {'CLL': -0.700773, 'Learning time': 134.923, 'AUC PR': 0.50392, 'F1': 0.210493, 'AUC ROC': 0.500271, 'Recall': 0.133466, 'Precision': [0.497771, 0.5], 'Inference time': 3.013}, 'Inference time': 3.709}


Start learning from scratch in target domain

Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.12471818923950195
   Generating paths time   = 1.7773582935333252
   Generating mappings time   = 0.1202850341796875
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.022369623184204


Best mapping found: ['tweets(A,B) -> workenddate(A,B)', 'follows(A,B) -> edge(A,B)', 'accounttype(A,B) -> worklocation(A,B)'] 

Transferred target predicate: edge 

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
0;false,false;workenddate(A, H).;true;true
0;false,false,false;workenddate(B, J).;false;false
0;true,false,false;workenddate(B, F).;false;false
0;false;workenddate(A, G), workenddate(B, G).;false;true
0;false,false,true;workenddate(B, I).;false;false
0;true;workenddate(A, D), workenddate(B, D).;false;true
0;true,false;workenddate(A, E).;false;true
1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
1;false,false;workenddate(A, H).;true;true
1;false,false,false;workenddate(B, J).;false;false
1;true,false,false;workenddate(B, F).;false;false
1;false;workenddate(A, G), workenddate(B, G).;false;true
1;false,false,true;workenddate(B, I).;false;false
1;true;workenddate(A, D), workenddate(B, D).;false;true
1;true,false;workenddate(A, E).;false;true
2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
2;false,false;workenddate(A, H).;true;true
2;false,false,false;workenddate(B, J).;false;false
2;true,false,false;workenddate(B, F).;false;false
2;false;workenddate(B, G), workenddate(A, G).;false;true
2;false,false,true;workenddate(B, I).;false;false
2;true;workenddate(B, D), workenddate(A, D).;false;true
2;true,false;workenddate(A, E).;false;true
3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
3;false,false;workenddate(A, I).;true;true
3;false,false,false;workenddate(B, K).;false;false
3;true,false,false;workenddate(B, G).;false;false
3;false;workenddate(A, H), workenddate(B, H).;false;true
3;false,false,true;workenddate(B, J).;false;false
3;true;workenddate(B, D), workenddate(A, D).;false;true
3;true,false;workenddate(A, E), workenddate(B, F).;false;true
4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
4;false,false;workenddate(A, I).;true;true
4;false,false,false;workenddate(B, K).;false;false
4;true,false,false;workenddate(B, G).;false;false
4;false;workenddate(A, H), workenddate(B, H).;false;true
4;false,false,true;workenddate(B, J).;false;false
4;true;workenddate(B, D), workenddate(A, D).;false;true
4;true,false;workenddate(A, E), workenddate(B, F).;false;true
5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
5;false,false;workenddate(A, I).;true;true
5;false,false,false;workenddate(B, K).;false;false
5;true,false,false;workenddate(B, G).;false;false
5;false;workenddate(A, H), workenddate(B, H).;false;true
5;false,false,true;workenddate(B, J).;false;false
5;true;workenddate(A, D), workenddate(B, D).;false;true
5;true,false;workenddate(A, E), workenddate(B, F).;false;true
6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
6;false,false;workenddate(A, I).;true;true
6;false,false,false;workenddate(B, K).;false;false
6;true,false,false;workenddate(B, G).;false;false
6;false;workenddate(A, H), workenddate(B, H).;false;true
6;false,false,true;workenddate(B, J).;false;false
6;true;workenddate(B, D), workenddate(A, D).;false;true
6;true,false;workenddate(A, E), workenddate(B, F).;false;true
7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
7;false,false;workenddate(A, I).;true;true
7;false,false,false;workenddate(B, K).;false;false
7;true,false,false;workenddate(B, G).;false;false
7;false;workenddate(B, H), workenddate(A, H).;false;true
7;false,false,true;workenddate(B, J).;false;false
7;true;workenddate(B, D), workenddate(A, D).;false;true
7;true,false;workenddate(A, E), workenddate(B, F).;false;true
8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
8;false,false;workenddate(A, I).;true;true
8;false,false,false;workenddate(B, K).;false;false
8;true,false,false;workenddate(B, G).;false;false
8;false;workenddate(B, H), workenddate(A, H).;false;true
8;false,false,true;workenddate(B, J).;false;false
8;true;workenddate(A, D), workenddate(B, D).;false;true
8;true,false;workenddate(A, E), workenddate(B, F).;false;true
9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
9;false,false;workenddate(A, I).;true;true
9;false,false,false;workenddate(B, K).;false;false
9;true,false,false;workenddate(B, G).;false;false
9;false;workenddate(B, H), workenddate(A, H).;false;true
9;false,false,true;workenddate(B, J).;false;false
9;true;workenddate(B, D), workenddate(A, D).;false;true
9;true,false;workenddate(B, E), workenddate(A, F).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( workenddate(B, F) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.37988806553429494;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else if ( workenddate(A, G), workenddate(B, G) )
%   | then return 0.5196873966379719;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, H) )
%   | | then if ( workenddate(B, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.32232338992816817;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, J) )
%   | | | then return 0.23441156136213387;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.3771264718926907;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E) )
%   | | then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( workenddate(B, F) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3270950940363142;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else if ( workenddate(A, G), workenddate(B, G) )
%   | then return 0.4440414452714063;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, H) )
%   | | then if ( workenddate(B, I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.278395844696304;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, J) )
%   | | | then return 0.2034164218668274;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.32476603654108727;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E) )
%   | | then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( workenddate(B, F) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.2706885169678449;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else if ( workenddate(B, G), workenddate(A, G) )
%   | then return 0.35921775963248354;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, H) )
%   | | then if ( workenddate(B, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2325712657763393;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, J) )
%   | | | then return 0.1723751068486308;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.26888287539247285;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.18382902223075037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.24385779714569147;  // std dev = 2,580, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0.2785902982710388;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.18863760048700906;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.1429673660246497;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.2151684908270948;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.14604980861094888;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1884318534679372;  // std dev = 2,578, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0.2109920216138977;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.1494388701857;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.11642824625790733;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.16784303975072526;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.11405557378101809;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.14364298732130784;  // std dev = 2,578, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0.158406272154313;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.11635389590549973;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.09341931925412059;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.12871602159176704;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.0879978236541454;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.10880634906767221;  // std dev = 2,578, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then return 0.11890841267921023;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.08951505911640209;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.07409183156074675;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.09769168344572633;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.06733625981328885;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.082239434488938;  // std dev = 2,578, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0.08958061681484078;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.06831893374601379;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.05824351305626507;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.07370870053476328;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), workenddate(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.05124268215565502;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.062156290532982286;  // std dev = 2,579, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0.06780423649996566;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.05186955200678112;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.04547981060980768;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.05543688010931698;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(B, E), workenddate(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.03885246607182053;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.04701904597503663;  // std dev = 2,579, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else if ( workenddate(B, H), workenddate(A, H) )
%   | then return 0.051558387861705114;  // std dev = 5,395, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.03924647452688003;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, K) )
%   | | | then return 0.03533582826660558;  // std dev = 13,634, 792,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=298 */
%   | | | else return 0.041626975542149586;  // std dev = 35,905, 5.164,000 (wgt'ed) examples reached here.  /* #neg=2.484 #pos=2.680 */


Results
   AUC ROC   = 0.510599
   AUC PR    = 0.528481
   CLL	      = -0.730438
   Precision = 0.64036 at threshold = 0.5
   Recall    = 0.06981
   F1        = 0.125896


Total learning time: 92.289 seconds
Total inference time: 3.695 seconds
AUC ROC: 0.510599


Structure after Parameter Learning
[['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, H)', 'false,false,false': 'workenddate(B, J)', 'true,false,false': 'workenddate(B, F)', 'false': 'workenddate(A, G), workenddate(B, G)', 'false,false,true': 'workenddate(B, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'true,false': 'workenddate(A, E)'}, {'true,false,true': [0.913, 1, 5], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.396, 11, 12], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, H)', 'false,false,false': 'workenddate(B, J)', 'true,false,false': 'workenddate(B, F)', 'false': 'workenddate(A, G), workenddate(B, G)', 'false,false,true': 'workenddate(B, I)', 'true': 'workenddate(A, D), workenddate(B, D)', 'true,false': 'workenddate(A, E)'}, {'true,false,true': [0.913, 1, 5], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.396, 11, 12], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, H)', 'false,false,false': 'workenddate(B, J)', 'true,false,false': 'workenddate(B, F)', 'false': 'workenddate(B, G), workenddate(A, G)', 'false,false,true': 'workenddate(B, I)', 'true': 'workenddate(B, D), workenddate(A, D)', 'true,false': 'workenddate(A, E)'}, {'true,false,true': [0.913, 1, 5], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.396, 11, 12], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(A, H), workenddate(B, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(B, D), workenddate(A, D)', 'true,false': 'workenddate(A, E), workenddate(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.58, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(A, H), workenddate(B, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(B, D), workenddate(A, D)', 'true,false': 'workenddate(A, E), workenddate(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.578, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(A, H), workenddate(B, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(A, D), workenddate(B, D)', 'true,false': 'workenddate(A, E), workenddate(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.578, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(A, H), workenddate(B, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(B, D), workenddate(A, D)', 'true,false': 'workenddate(A, E), workenddate(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.578, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(B, H), workenddate(A, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(B, D), workenddate(A, D)', 'true,false': 'workenddate(A, E), workenddate(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.578, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(B, H), workenddate(A, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(A, D), workenddate(B, D)', 'true,false': 'workenddate(A, E), workenddate(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.579, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workenddate(A, I)', 'false,false,false': 'workenddate(B, K)', 'true,false,false': 'workenddate(B, G)', 'false': 'workenddate(B, H), workenddate(A, H)', 'false,false,true': 'workenddate(B, J)', 'true': 'workenddate(B, D), workenddate(A, D)', 'true,false': 'workenddate(B, E), workenddate(A, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.651, 6, 5], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [12.636, 344, 298], 'true,false,false,false': [2.579, 12, 17], 'true,true': [0.0, 0, 2], 'false,false,false,true': [13.634, 494, 298], 'false,false,false,false': [35.905, 2484, 2680], 'false,true': [5.395, 44, 86]}]]
[{'': [0.2448979591836747, 0.24999980129341673], 'false,false': [0.2486111646927225, 0.2500000000000608], 'false,false,false': [0.2346890623405794, 0.24963985309720682], 'true,false,false': [0.24793388429752045, 0.24952741020793906], 'false': [0.22390532544378886, 0.24998677685955917], 'false,false,true': [0.0, 0.24871653031317864], 'true': [0.0, 0.2474999999999996], 'true,false': [0.1388888888888887, 0.24999999999999953]}, {'': [0.2374637121824024, 0.24922078843120896], 'false,false': [0.2484490275920323, 0.2493495393788838], 'false,false,false': [0.23468906234058293, 0.24963985309728395], 'true,false,false': [0.2479338842975206, 0.2495274102079397], 'false': [0.22390532544378533, 0.2493489762946983], 'false,false,true': [0.0, 0.24871653031318292], 'true': [0.0, 0.2428422959677951], 'true,false': [0.13888888888888884, 0.24971984046302864]}, {'': [0.23014351946569292, 0.2484697391473067], 'false,false': [0.24831237365018877, 0.2487255773130117], 'false,false,false': [0.23468906234058468, 0.24963985309725903], 'true,false,false': [0.24793388429752064, 0.2495274102079393], 'false': [0.22390532544378644, 0.24873832753034375], 'false,false,true': [0.0, 0.2487165303131809], 'true': [0.0, 0.23822143312834565], 'true,false': [0.13888888888888887, 0.24944705741709008]}, {'': [0.22573197098054823, 0.2479112409702294], 'false,false': [0.24820490795956035, 0.2482527908760011], 'false,false,false': [0.23468906234057096, 0.2496398530973154], 'true,false,false': [0.24793388429752064, 0.22951214021401792], 'false': [0.22390532544378688, 0.2482761160733601], 'false,false,true': [0.0, 0.24871653031317295], 'true': [0.0, 0.2352965584419028], 'true,false': [nan, 0.23529655844190273]}, {'': [0.2244890633282746, 0.24757087884367643], 'false,false': [0.24812562474180924, 0.24795654365733832], 'false,false,false': [0.23468906234057177, 0.24963985309726613], 'true,false,false': [0.24793388429752056, 0.2292234969711915], 'false': [0.22390532544378774, 0.24798640537410532], 'false,false,true': [0.0, 0.248716530313183], 'true': [0.0, 0.234726978382605], 'true,false': [nan, 0.234726978382605]}, {'': [0.22397418028822721, 0.24738960204585117], 'false,false': [0.2480698692998951, 0.24779540775227407], 'false,false,false': [0.2346890623405704, 0.2496398530972808], 'true,false,false': [0.2479338842975207, 0.22915122088306858], 'false': [0.22390532544378705, 0.24782824650837615], 'false,false,true': [0.0, 0.24871653031318083], 'true': [0.0, 0.2344909891956437], 'true,false': [nan, 0.2344909891956437]}, {'': [0.22377941979750635, 0.2473006781544658], 'false,false': [0.2480318025099302, 0.24771598208698084], 'false,false,false': [0.23468906234058548, 0.24963985309726805], 'true,false,false': [0.2479338842975206, 0.22918396382773049], 'false': [0.22390532544378713, 0.24774952164621578], 'false,false,true': [0.0, 0.24871653031317514], 'true': [0.0, 0.23442652028119365], 'true,false': [nan, 0.2344265202811937]}, {'': [0.22371950677766386, 0.24725895801153874], 'false,false': [0.2480061636234042, 0.24767934424004856], 'false,false,false': [0.23468906234057788, 0.24963985309729453], 'true,false,false': [0.2479338842975207, 0.2292594311984158], 'false': [0.22390532544378658, 0.2477124873444451], 'false,false,true': [0.0, 0.24871653031317928], 'true': [0.0, 0.2344391879083676], 'true,false': [nan, 0.23443918790836754]}, {'': [0.2237125662677808, 0.2472397257189081], 'false,false': [0.2479889209435939, 0.24766319993423322], 'false,false,false': [0.23468906234057463, 0.24963985309728123], 'true,false,false': [0.24793388429752075, 0.22934557330516242], 'false': [0.22390532544378686, 0.24769558541124276], 'false,false,true': [0.0, 0.24871653031317464], 'true': [0.0, 0.23448110575584388], 'true,false': [nan, 0.23448110575584388]}, {'': [0.22372297337583935, 0.24723082643768374], 'false,false': [0.24797724374920682, 0.24765633255563135], 'false,false,false': [0.23468906234057826, 0.24963985309725908], 'true,false,false': [0.24793388429752072, 0.22942735473542183], 'false': [0.2239053254437872, 0.2476879520390332], 'false,false,true': [0.0, 0.24871653031317612], 'true': [0.0, 0.23452994728732007], 'true,false': [nan, 0.23452994728732007]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '0;false,false;workenddate(A, H).;true;true', '0;false;workenddate(A, G), workenddate(B, G).;true;true', '0;false,false,true;workenddate(B, I).;true;true', '0;true;workenddate(A, D), workenddate(B, D).;true;true', '1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '1;false,false;workenddate(A, H).;true;true', '1;false;workenddate(A, G), workenddate(B, G).;true;true', '1;false,false,true;workenddate(B, I).;true;true', '1;true;workenddate(A, D), workenddate(B, D).;true;true', '2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '2;false,false;workenddate(A, H).;true;true', '2;false;workenddate(B, G), workenddate(A, G).;true;true', '2;false,false,true;workenddate(B, I).;true;true', '2;true;workenddate(B, D), workenddate(A, D).;true;true', '3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '3;false,false;workenddate(A, I).;true;true', '3;false;workenddate(A, H), workenddate(B, H).;true;true', '3;false,false,true;workenddate(B, J).;true;true', '3;true;workenddate(B, D), workenddate(A, D).;true;true', '4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '4;false,false;workenddate(A, I).;true;true', '4;false;workenddate(A, H), workenddate(B, H).;true;true', '4;false,false,true;workenddate(B, J).;true;true', '4;true;workenddate(B, D), workenddate(A, D).;true;true', '5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '5;false,false;workenddate(A, I).;true;true', '5;false;workenddate(A, H), workenddate(B, H).;true;true', '5;false,false,true;workenddate(B, J).;true;true', '5;true;workenddate(A, D), workenddate(B, D).;true;true', '6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '6;false,false;workenddate(A, I).;true;true', '6;false;workenddate(A, H), workenddate(B, H).;true;true', '6;false,false,true;workenddate(B, J).;true;true', '6;true;workenddate(B, D), workenddate(A, D).;true;true', '7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '7;false,false;workenddate(A, I).;true;true', '7;false;workenddate(B, H), workenddate(A, H).;true;true', '7;false,false,true;workenddate(B, J).;true;true', '7;true;workenddate(B, D), workenddate(A, D).;true;true', '8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '8;false,false;workenddate(A, I).;true;true', '8;false;workenddate(B, H), workenddate(A, H).;true;true', '8;false,false,true;workenddate(B, J).;true;true', '8;true;workenddate(A, D), workenddate(B, D).;true;true', '9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '9;false,false;workenddate(A, I).;true;true', '9;false;workenddate(B, H), workenddate(A, H).;true;true', '9;false,false,true;workenddate(B, J).;true;true', '9;true;workenddate(B, D), workenddate(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(B, E), workstartdate(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( lastname(B, G), location(B, H) )
%   | | | then return 0.33183314562582816;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( workenddate(A, I), workenddate(B, I) )
%   | then return 0.5196873966379719;  // std dev = 0,473, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.32232338992816817;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( locale(B, L), locale(A, L) )
%   | | | then return 0.48410763716440397;  // std dev = 28,173, 3.390,000 (wgt'ed) examples reached here.  /* #neg=1.268 #pos=2.122 */
%   | | | else return 0.19174207617511135;  // std dev = 23,884, 2.566,000 (wgt'ed) examples reached here.  /* #neg=1.710 #pos=856 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.34684623561019273;  // std dev = 0,473, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   else if ( workenddate(A, E), workenddate(B, E) )
%   | then if ( educationconcentration(B, F), educationyear(A, G) )
%   | | then if ( educationconcentration(A, H) )
%   | | | then return 0.6158363170662774;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.05083034960038923;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return 0.5183520403367191;  // std dev = 0,441, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.278395844696304;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( locale(B, K), locale(A, K) )
%   | | | then return 0.41445619301969094;  // std dev = 28,173, 3.390,000 (wgt'ed) examples reached here.  /* #neg=1.268 #pos=2.122 */
%   | | | else return 0.16676252263407093;  // std dev = 23,884, 2.566,000 (wgt'ed) examples reached here.  /* #neg=1.710 #pos=856 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(A, E), birthday(B, F) )
%   | | then return 0.7063577309526634;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( birthday(A, G), workenddate(B, H) )
%   | | | then return 0.6903991094382285;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1483725309382015;  // std dev = 2,543, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else if ( workenddate(B, I), workenddate(A, I) )
%   | then return 0.35745172464894986;  // std dev = 0,458, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2325712657763393;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( workenddate(B, L), educationconcentration(A, M) )
%   | | | then return -0.016910881278152823;  // std dev = 5,999, 222,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=47 */
%   | | | else return 0.26368360694153303;  // std dev = 36,971, 5.734,000 (wgt'ed) examples reached here.  /* #neg=2.803 #pos=2.931 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22404321510673814;  // std dev = 0,440, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   else if ( workenddate(A, E), workenddate(B, E) )
%   | then if ( hometown(A, F), location(A, G) )
%   | | then if ( location(B, G), workstartdate(B, H) )
%   | | | then return 0.18248774760718736;  // std dev = 1,562, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.2385008724936795;  // std dev = 1,276, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return 0.3508599293565907;  // std dev = 0,422, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.18863760048700906;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( locale(B, K), locale(A, K) )
%   | | | then return 0.28171990705510536;  // std dev = 28,120, 3.390,000 (wgt'ed) examples reached here.  /* #neg=1.268 #pos=2.122 */
%   | | | else return 0.10064245843434792;  // std dev = 23,842, 2.566,000 (wgt'ed) examples reached here.  /* #neg=1.710 #pos=856 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17531705241534268;  // std dev = 0,437, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   else if ( workenddate(A, E), workenddate(B, E) )
%   | then if ( hometown(B, F), location(B, G) )
%   | | then if ( worklocation(A, H), workstartdate(B, I) )
%   | | | then return 0.511181983393601;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17775127022710493;  // std dev = 1,889, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.2744063734658701;  // std dev = 0,409, 107,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=78 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.1494388701857;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( location(B, L), location(A, L) )
%   | | | then return 0.40697122991362;  // std dev = 9,972, 558,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=431 */
%   | | | else return 0.13245716640957364;  // std dev = 35,317, 5.398,000 (wgt'ed) examples reached here.  /* #neg=2.851 #pos=2.547 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13534041463618468;  // std dev = 0,435, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   else if ( workenddate(A, E), workenddate(B, E) )
%   | then if ( hometown(A, F), location(A, G) )
%   | | then if ( educationconcentration(B, H), educationconcentration(A, I) )
%   | | | then return 0.31689977748380693;  // std dev = 0,842, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.19004783012944765;  // std dev = 1,681, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return 0.21339789382651225;  // std dev = 0,403, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.11635389590549973;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( location(B, L), location(A, L) )
%   | | | then return 0.3109984854910015;  // std dev = 9,995, 558,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=431 */
%   | | | else return 0.10305426015582603;  // std dev = 35,280, 5.398,000 (wgt'ed) examples reached here.  /* #neg=2.851 #pos=2.547 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( location(B, E), location(A, F) )
%   | | then if ( educationdegree(A, G), workposition(A, H) )
%   | | | then return -0.36577017528475564;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.005068626082064875;  // std dev = 1,683, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.2635502862585225;  // std dev = 0,385, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else if ( workenddate(A, I), workenddate(B, I) )
%   | then return 0.1196714555719884;  // std dev = 0,415, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.08951505911640209;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( birthday(B, L), birthday(A, L) )
%   | | | then return 0.2674143273424001;  // std dev = 10,527, 505,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=341 */
%   | | | else return 0.07805040870280713;  // std dev = 35,042, 5.451,000 (wgt'ed) examples reached here.  /* #neg=2.814 #pos=2.637 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.07806621806492034;  // std dev = 0,415, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   else if ( workenddate(B, E), workenddate(A, E) )
%   | then if ( location(B, F), lastname(B, G) )
%   | | then if ( location(A, F), birthday(A, H) )
%   | | | then return 0.11280206417059996;  // std dev = 1,434, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.26483832192021073;  // std dev = 1,675, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0.14849342264500776;  // std dev = 0,384, 102,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=75 */
%   | else if ( workenddate(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.06831893374601379;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.24842508356814247;  // std dev = 19,622, 1.978,000 (wgt'ed) examples reached here.  /* #neg=567 #pos=1.411 */
%   | | | else return -0.01567484117112609;  // std dev = 29,497, 3.978,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=1.567 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(A, D), workenddate(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.05998524353106218;  // std dev = 0,415, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   else if ( workenddate(B, E), workenddate(A, E) )
%   | then if ( hometown(A, F), workstartdate(A, G) )
%   | | then if ( lastname(A, H), languages(B, I) )
%   | | | then return 0.2653227909413782;  // std dev = 0,794, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14857574749060012;  // std dev = 2,297, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.13249346631671888;  // std dev = 0,378, 94,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=70 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.05186955200678112;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.18872659686639595;  // std dev = 19,610, 1.978,000 (wgt'ed) examples reached here.  /* #neg=567 #pos=1.411 */
%   | | | else return -0.01202300247123197;  // std dev = 29,499, 3.978,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=1.567 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workenddate(B, E), workstartdate(A, F) )
%   | | then return -0.3140742961305155;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(B, G), educationdegree(B, H) )
%   | | | then return -0.13271306925076296;  // std dev = 1,345, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.19687068103755695;  // std dev = 1,848, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else if ( workenddate(B, I), workenddate(A, I) )
%   | then return 0.05527780151756388;  // std dev = 0,398, 130,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( workenddate(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.03924647452688003;  // std dev = 12,636, 642,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=298 */
%   | | else if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.1437660753647688;  // std dev = 19,602, 1.978,000 (wgt'ed) examples reached here.  /* #neg=567 #pos=1.411 */
%   | | | else return -0.009228711030788057;  // std dev = 29,501, 3.978,000 (wgt'ed) examples reached here.  /* #neg=2.411 #pos=1.567 */


Results
   AUC ROC   = 0.542626
   AUC PR    = 0.559713
   CLL	      = -0.729518
   Precision = 0.626712 at threshold = 0.5
   Recall    = 0.219233
   F1        = 0.324835


Total learning time: 124.495 seconds
Total inference time: 3.097 seconds
AUC ROC: 0.542626


Refined model AUC ROC: 0.542626


Dataset: 48_twitter_facebook, Fold: 2, Type: Transfer (trRDN-B), Time: 06:18:24
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Possible mappings': [1568], 'Generating mappings time': 0.1202850341796875, 'Total time': 2.022369623184204, 'Generating paths time': 1.7773582935333252, 'Knowledge compiling time': 0.12471818923950195}, 'CLL': -0.729518, 'Learning time': 216.784, 'AUC PR': 0.559713, 'F1': 0.324835, 'AUC ROC': 0.542626, 'Recall': 0.219233, 'Precision': [0.626712, 0.5], 'parameter': {'CLL': -0.730438, 'Learning time': 92.289, 'AUC PR': 0.528481, 'F1': 0.125896, 'AUC ROC': 0.510599, 'Recall': 0.06981, 'Precision': [0.64036, 0.5], 'Inference time': 3.695}, 'Inference time': 3.097}


Start learning from scratch in target domain

Starting fold 3

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.061333417892456055
   Generating paths time   = 1.7922067642211914
   Generating mappings time   = 0.11433982849121094
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 1.9678869247436523


Best mapping found: ['tweets(A,B) -> educationschool(A,B)', 'follows(A,B) -> edge(A,B)', 'accounttype(A,B) -> worklocation(A,B)'] 

Transferred target predicate: edge 

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
0;false,false;educationschool(A, H).;true;true
0;false,false,false;educationschool(B, J).;false;false
0;true,false,false;educationschool(B, F).;false;false
0;false;educationschool(A, G), educationschool(B, G).;false;true
0;false,false,true;educationschool(B, I).;false;false
0;true;educationschool(A, D), educationschool(B, D).;false;true
0;true,false;educationschool(A, E).;false;true
1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
1;false,false;educationschool(A, H).;true;true
1;false,false,false;educationschool(B, J).;false;false
1;true,false,false;educationschool(B, F).;false;false
1;false;educationschool(A, G), educationschool(B, G).;false;true
1;false,false,true;educationschool(B, I).;false;false
1;true;educationschool(A, D), educationschool(B, D).;false;true
1;true,false;educationschool(A, E).;false;true
2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
2;false,false;educationschool(A, H).;true;true
2;false,false,false;educationschool(B, J).;false;false
2;true,false,false;educationschool(B, F).;false;false
2;false;educationschool(B, G), educationschool(A, G).;false;true
2;false,false,true;educationschool(B, I).;false;false
2;true;educationschool(B, D), educationschool(A, D).;false;true
2;true,false;educationschool(A, E).;false;true
3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
3;false,false;educationschool(A, I).;true;true
3;false,false,false;educationschool(B, K).;false;false
3;true,false,false;educationschool(B, G).;false;false
3;false;educationschool(A, H), educationschool(B, H).;false;true
3;false,false,true;educationschool(B, J).;false;false
3;true;educationschool(B, D), educationschool(A, D).;false;true
3;true,false;educationschool(A, E), educationschool(B, F).;false;true
4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
4;false,false;educationschool(A, I).;true;true
4;false,false,false;educationschool(B, K).;false;false
4;true,false,false;educationschool(B, G).;false;false
4;false;educationschool(A, H), educationschool(B, H).;false;true
4;false,false,true;educationschool(B, J).;false;false
4;true;educationschool(B, D), educationschool(A, D).;false;true
4;true,false;educationschool(A, E), educationschool(B, F).;false;true
5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
5;false,false;educationschool(A, I).;true;true
5;false,false,false;educationschool(B, K).;false;false
5;true,false,false;educationschool(B, G).;false;false
5;false;educationschool(A, H), educationschool(B, H).;false;true
5;false,false,true;educationschool(B, J).;false;false
5;true;educationschool(A, D), educationschool(B, D).;false;true
5;true,false;educationschool(A, E), educationschool(B, F).;false;true
6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
6;false,false;educationschool(A, I).;true;true
6;false,false,false;educationschool(B, K).;false;false
6;true,false,false;educationschool(B, G).;false;false
6;false;educationschool(A, H), educationschool(B, H).;false;true
6;false,false,true;educationschool(B, J).;false;false
6;true;educationschool(B, D), educationschool(A, D).;false;true
6;true,false;educationschool(A, E), educationschool(B, F).;false;true
7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
7;false,false;educationschool(A, I).;true;true
7;false,false,false;educationschool(B, K).;false;false
7;true,false,false;educationschool(B, G).;false;false
7;false;educationschool(B, H), educationschool(A, H).;false;true
7;false,false,true;educationschool(B, J).;false;false
7;true;educationschool(B, D), educationschool(A, D).;false;true
7;true,false;educationschool(A, E), educationschool(B, F).;false;true
8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
8;false,false;educationschool(A, I).;true;true
8;false,false,false;educationschool(B, K).;false;false
8;true,false,false;educationschool(B, G).;false;false
8;false;educationschool(B, H), educationschool(A, H).;false;true
8;false,false,true;educationschool(B, J).;false;false
8;true;educationschool(A, D), educationschool(B, D).;false;true
8;true,false;educationschool(A, E), educationschool(B, F).;false;true
9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
9;false,false;educationschool(A, I).;true;true
9;false,false,false;educationschool(B, K).;false;false
9;true,false,false;educationschool(B, G).;false;false
9;false;educationschool(B, H), educationschool(A, H).;false;true
9;false,false,true;educationschool(B, J).;false;false
9;true;educationschool(B, D), educationschool(A, D).;false;true
9;true,false;educationschool(B, E), educationschool(A, F).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationschool(A, G), educationschool(B, G) )
%   | then return 0.4764895464532193;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, H) )
%   | | then if ( educationschool(B, I) )
%   | | | then return 0.23173384075988523;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.32117321766021373;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, J) )
%   | | | then return 0.3997887026915022;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.3168528741084019;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return 0.19258789115538322;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationschool(A, G), educationschool(B, G) )
%   | then return 0.40810577296704503;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, H) )
%   | | then if ( educationschool(B, I) )
%   | | | then return 0.20112120072595557;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.2774195902677488;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, J) )
%   | | | then return 0.3438571837014374;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.27375140395980674;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.16352953408429413;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.2564123687585864;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationschool(B, G), educationschool(A, G) )
%   | then return 0.33244546451671897;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, H) )
%   | | then if ( educationschool(B, I) )
%   | | | then return 0.17050339266881762;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.23179930310892133;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, J) )
%   | | | then return 0.28363296300999097;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.2288959505502679;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.13606878407651105;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20613740734453978;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.2600886486404342;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.14151170367912524;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.1880656174049646;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.22574900667177042;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.18591130965984506;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.11126948691064746;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16162857548414666;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.19836428303854145;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.11534366182183646;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.1490366961042681;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.17507258796221795;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.14751965117625565;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return 0.08970341513165919;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12455597792081965;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.149427034822833;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.09264137451967028;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.11608165909815873;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.13355766584799011;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.11505356117395953;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.07150513066226619;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.11211074615894305;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.07355276741866244;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.0893354614166229;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.10094476137530865;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.08865695312186384;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.056501932792643365;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0718608885005586;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(B, H), educationschool(A, H) )
%   | then return 0.08413624354443848;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.05788232103226086;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.0682024870265539;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.07593511453074106;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.06776289294958604;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return 0.04434895786191332;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05418307375954945;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(B, H), educationschool(A, H) )
%   | then return 0.06327296380615133;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.045246478969545555;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.051795014140522205;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.05700043593690485;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.05151426906662343;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.034633754785669255;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(B, E), educationschool(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04076025323305624;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationschool(B, H), educationschool(A, H) )
%   | then return 0.047706027590478914;  // std dev = 16,438, 1.145,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=708 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.0351917884079407;  // std dev = 11,137, 530,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=198 */
%   | | | else return 0.03919932015720585;  // std dev = 21,226, 1.812,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=839 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.04275516030980121;  // std dev = 19,610, 1.549,000 (wgt'ed) examples reached here.  /* #neg=710 #pos=839 */
%   | | | else return 0.0390224715828075;  // std dev = 19,769, 1.574,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=722 */


Results
   AUC ROC   = 0.63453
   AUC PR    = 0.615746
   CLL	      = -0.666001
   Precision = 0.608078 at threshold = 0.5
   Recall    = 0.582325
   F1        = 0.594923


Total learning time: 65.074 seconds
Total inference time: 3.608 seconds
AUC ROC: 0.63453


Structure after Parameter Learning
[['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, H)', 'false,false,false': 'educationschool(B, J)', 'true,false,false': 'educationschool(B, F)', 'false': 'educationschool(A, G), educationschool(B, G)', 'false,false,true': 'educationschool(B, I)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E)'}, {'true,false,true': [0.707, 1, 1], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.0, 0, 0], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, H)', 'false,false,false': 'educationschool(B, J)', 'true,false,false': 'educationschool(B, F)', 'false': 'educationschool(A, G), educationschool(B, G)', 'false,false,true': 'educationschool(B, I)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E)'}, {'true,false,true': [0.707, 1, 1], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.0, 0, 0], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, H)', 'false,false,false': 'educationschool(B, J)', 'true,false,false': 'educationschool(B, F)', 'false': 'educationschool(B, G), educationschool(A, G)', 'false,false,true': 'educationschool(B, I)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E)'}, {'true,false,true': [0.707, 1, 1], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.0, 0, 0], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(B, H), educationschool(A, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(B, H), educationschool(A, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(B, H), educationschool(A, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(B, E), educationschool(A, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'false,false,true,true': [11.137, 332, 198], 'false,false,true,false': [21.226, 973, 839], 'true,false,false,false': [0.707, 1, 1], 'true,true': [1.595, 7, 4], 'false,false,false,true': [19.61, 710, 839], 'false,false,false,false': [19.769, 852, 722], 'false,true': [16.438, 437, 708]}]]
[{'': [0.24489795918367352, 0.2499999771126281], 'false,false': [0.24672632308983888, 0.24999997436716287], 'false,false,false': [0.2482661297549074, 0.24829463534664178], 'true,false,false': [0.0, nan], 'false': [0.23599549970445058, 0.24939429070797106], 'false,false,true': [0.23401922392310734, 0.2486327963198731], 'true': [0.2314049586776858, 0.22222222222222224], 'true,false': [0.25, 0.0]}, {'': [0.2363483275238554, 0.24859392154071822], 'false,false': [0.2463449853740768, 0.2495091229965463], 'false,false,false': [0.24826612975489334, 0.2482946353466098], 'true,false,false': [0.0, nan], 'false': [0.2359954997044472, 0.24872612945858977], 'false,false,true': [0.23401922392310465, 0.2486327963198638], 'true': [0.23140495867768582, 0.2041557784216723], 'true,false': [0.25000000000000006, 0.0]}, {'': [0.22802962912529853, 0.2472183133811791], 'false,false': [0.2459835557425073, 0.2490294837797083], 'false,false,false': [0.24826612975490606, 0.24829463534662136], 'true,false,false': [0.0, nan], 'false': [0.23599549970442674, 0.24807998268096157], 'false,false,true': [0.2340192239230994, 0.2486327963198461], 'true': [0.23140495867768607, 0.1865274521703096], 'true,false': [0.24999999999999997, 0.0]}, {'': [0.22298498880766984, 0.24622067983071297], 'false,false': [0.2457051770229395, 0.2486772317467206], 'false,false,false': [0.24826612975488202, 0.24829463534660892], 'true,false,false': [0.0, 0.25], 'false': [0.235995499704421, 0.247597498308957], 'false,false,true': [0.2340192239231021, 0.2486327963198421], 'true': [0.2314049586776861, 0.17659553069431252], 'true,false': [nan, 0.17659553069431252]}, {'': [0.22053723758977858, 0.24564328726070472], 'false,false': [0.24552447647364725, 0.2484702755653231], 'false,false,false': [0.24826612975489815, 0.24829463534663165], 'true,false,false': [0.0, 0.24999999999999997], 'false': [0.23599549970442987, 0.2473036231384893], 'false,false,true': [0.23401922392310676, 0.2486327963198402], 'true': [0.23140495867768598, 0.17229055273936464], 'true,false': [nan, 0.17229055273936464]}, {'': [0.21937952826459556, 0.2453540117430108], 'false,false': [0.24542191362146729, 0.2483660916331442], 'false,false,false': [0.2482661297548976, 0.24829463534659954], 'true,false,false': [0.0, 0.24999999999999997], 'false': [0.23599549970443617, 0.24714870952047366], 'false,false,true': [0.23401922392310895, 0.24863279631984833], 'true': [0.23140495867768596, 0.1704579130201714], 'true,false': [nan, 0.1704579130201714]}, {'': [0.21880131018590002, 0.24521962014411183], 'false,false': [0.24536932485367982, 0.24831824178512352], 'false,false,false': [0.24826612975488901, 0.2482946353466049], 'true,false,false': [0.0, 0.25], 'false': [0.2359954997044327, 0.24707428034078177], 'false,false,true': [0.2340192239231054, 0.24863279631983842], 'true': [0.2314049586776859, 0.16959685809799083], 'true,false': [nan, 0.16959685809799083]}, {'': [0.21848814279988127, 0.24515887206699244], 'false,false': [0.24534435925117562, 0.24829719187761404], 'false,false,false': [0.2482661297548843, 0.24829463534661153], 'true,false,false': [0.0, 0.24999999999999997], 'false': [0.2359954997044257, 0.24704043715075422], 'false,false,true': [0.23401922392310806, 0.24863279631985796], 'true': [0.23140495867768582, 0.16912767410069043], 'true,false': [nan, 0.16912767410069043]}, {'': [0.21830185565061355, 0.24513132883625668], 'false,false': [0.24533321961255386, 0.24828802067068695], 'false,false,false': [0.24826612975488127, 0.2482946353466293], 'true,false,false': [0.0, 0.24999999999999997], 'false': [0.2359954997044344, 0.24702552221375546], 'false,false,true': [0.2340192239231071, 0.24863279631986543], 'true': [0.23140495867768587, 0.16882538404634606], 'true,false': [nan, 0.16882538404634606]}, {'': [0.2181796164942092, 0.2451185617134832], 'false,false': [0.24532852318457496, 0.2482839796642059], 'false,false,false': [0.248266129754876, 0.24829463534662186], 'true,false,false': [0.0, 0.25], 'false': [0.23599549970443334, 0.24701906468633203], 'false,false,true': [0.23401922392310884, 0.24863279631984767], 'true': [0.23140495867768598, 0.16859888030642625], 'true,false': [nan, 0.16859888030642625]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '0;true;educationschool(A, D), educationschool(B, D).;true;true', '0;true,false;educationschool(A, E).;true;true', '1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '1;true;educationschool(A, D), educationschool(B, D).;true;true', '1;true,false;educationschool(A, E).;true;true', '2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '2;true;educationschool(B, D), educationschool(A, D).;true;true', '2;true,false;educationschool(A, E).;true;true', '3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '3;true;educationschool(B, D), educationschool(A, D).;true;true', '3;true,false;educationschool(B, G).;true;true', '4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '4;true;educationschool(B, D), educationschool(A, D).;true;true', '4;true,false;educationschool(B, G).;true;true', '5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '5;true;educationschool(A, D), educationschool(B, D).;true;true', '5;true,false;educationschool(B, G).;true;true', '6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '6;true;educationschool(B, D), educationschool(A, D).;true;true', '6;true,false;educationschool(B, G).;true;true', '7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '7;true;educationschool(B, D), educationschool(A, D).;true;true', '7;true,false;educationschool(B, G).;true;true', '8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '8;true;educationschool(A, D), educationschool(B, D).;true;true', '8;true,false;educationschool(B, G).;true;true', '9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '9;true;educationschool(B, D), educationschool(A, D).;true;true', '9;true,false;educationschool(B, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then if ( educationyear(A, E), educationyear(B, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( hometown(B, H), location(B, I) )
%   | then return 0.4959598803731394;  // std dev = 0,481, 1.005,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=641 */
%   | else if ( birthday(B, J), educationschool(B, K) )
%   | | then if ( educationschool(A, K), gender(A, L) )
%   | | | then return 0.5159159253907702;  // std dev = 9,630, 412,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=271 */
%   | | | else return 0.3866337835843561;  // std dev = 14,338, 825,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=436 */
%   | | else if ( educationyear(B, M), locale(A, N) )
%   | | | then return 0.1867874327520899;  // std dev = 11,874, 639,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=210 */
%   | | | else return 0.3269073153623122;  // std dev = 30,473, 3.729,000 (wgt'ed) examples reached here.  /* #neg=1.981 #pos=1.748 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return 0.18782961532072429;  // std dev = 0,452, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.448295606241962;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( hometown(B, E), location(B, F) )
%   | then if ( educationclasses(B, G) )
%   | | then return 0.6016800201139682;  // std dev = 0,388, 211,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=172 */
%   | | else if ( workstartdate(B, H), gender(A, I) )
%   | | | then return -0.12089326407069034;  // std dev = 2,130, 54,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   | | | else return 0.41354117036374405;  // std dev = 13,155, 740,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=464 */
%   | else if ( birthday(B, J), educationschool(B, K) )
%   | | then if ( educationschool(A, K), gender(A, L) )
%   | | | then return 0.4409111645830638;  // std dev = 9,630, 412,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=271 */
%   | | | else return 0.3327811899611367;  // std dev = 14,338, 825,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=436 */
%   | | else if ( educationtype(B, M), locale(A, N) )
%   | | | then return 0.20130382179669762;  // std dev = 18,485, 1.457,000 (wgt'ed) examples reached here.  /* #neg=905 #pos=552 */
%   | | | else return 0.29652253798762035;  // std dev = 26,961, 2.911,000 (wgt'ed) examples reached here.  /* #neg=1.505 #pos=1.406 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.1594154606405075;  // std dev = 0,448, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.36236334632262296;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( hometown(B, E), location(B, F) )
%   | then if ( birthday(B, G) )
%   | | then if ( educationyear(B, H), locale(A, I) )
%   | | | then return 0.2626074653210265;  // std dev = 6,650, 184,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=104 */
%   | | | else return -0.2228250543720364;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | else return 0.3948100425697308;  // std dev = 0,454, 777,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=534 */
%   | else if ( lastname(B, J) )
%   | | then if ( lastname(A, J) )
%   | | | then return 0.7717425430320397;  // std dev = 0,058, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.0751084167076506;  // std dev = 9,491, 428,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=130 */
%   | | else if ( location(B, K), gender(A, L) )
%   | | | then return 0.19765083474478268;  // std dev = 17,506, 1.271,000 (wgt'ed) examples reached here.  /* #neg=724 #pos=547 */
%   | | | else return 0.2681039091603058;  // std dev = 31,000, 3.884,000 (wgt'ed) examples reached here.  /* #neg=1.918 #pos=1.966 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.13277504825941344;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( educationschool(B, E) )
%   | | then return 0.6140871870299188;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11408718702991882;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( lastname(B, F) )
%   | then if ( lastname(A, G) )
%   | | then return 0.35015088152224644;  // std dev = 0,423, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | | else if ( location(B, H), educationtype(B, I) )
%   | | | then return -0.14856277714135213;  // std dev = 2,637, 58,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return 0.07220039254604656;  // std dev = 9,162, 391,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=123 */
%   | else if ( educationclasses(B, J) )
%   | | then return 0.4002334484126096;  // std dev = 0,411, 320,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=248 */
%   | | else if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.27092704911137316;  // std dev = 14,964, 961,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=571 */
%   | | | else return 0.19206338861115957;  // std dev = 34,381, 4.832,000 (wgt'ed) examples reached here.  /* #neg=2.509 #pos=2.323 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then if ( birthday(A, E), birthday(B, E) )
%   | | then return -0.18818744733087023;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.27855814453751027;  // std dev = 0,479, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( educationschool(B, F) )
%   | | then return 0.4626791071041595;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08672385145980807;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( workemployer(B, G), educationschool(B, H) )
%   | then return -0.037737738666850526;  // std dev = 0,442, 105,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   | else if ( hometown(B, I), location(B, J) )
%   | | then if ( lastname(B, K), gender(A, L) )
%   | | | then return -0.07500871479309282;  // std dev = 2,653, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.23916952424748447;  // std dev = 13,790, 926,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=628 */
%   | | else if ( educationyear(B, M), location(B, N) )
%   | | | then return 0.02911820051140052;  // std dev = 8,944, 379,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=124 */
%   | | | else return 0.16181818040304605;  // std dev = 35,491, 5.156,000 (wgt'ed) examples reached here.  /* #neg=2.640 #pos=2.516 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.09760740173637926;  // std dev = 0,425, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( gender(B, D), educationschool(B, E) )
%   | then if ( gender(A, F), educationschool(A, E) )
%   | | then if ( workstartdate(B, G), workenddate(B, H) )
%   | | | then return 0.3239348200611309;  // std dev = 4,993, 152,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=117 */
%   | | | else return 0.16870196357743472;  // std dev = 14,709, 957,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=575 */
%   | | else if ( educationschool(A, I) )
%   | | | then return 0.016475326402010187;  // std dev = 11,004, 532,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=206 */
%   | | | else return 0.154285476494942;  // std dev = 18,751, 1.517,000 (wgt'ed) examples reached here.  /* #neg=690 #pos=827 */
%   | else if ( locale(B, J), locale(A, J) )
%   | | then if ( locale(K, J), workemployer(K, L) )
%   | | | then return 0.05841710542796785;  // std dev = 17,171, 1.249,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=503 */
%   | | | else return 0.16159491729950706;  // std dev = 11,478, 540,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=282 */
%   | | else if ( birthday(B, M) )
%   | | | then return -0.023290620072185582;  // std dev = 5,801, 158,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | | else return 0.13781103397302125;  // std dev = 19,162, 1.505,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=747 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then if ( educationyear(A, E), educationyear(B, F) )
%   | | then return -0.17473831958267738;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.195944106300813;  // std dev = 0,477, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( educationschool(B, G) )
%   | | then return 0.3296323722164257;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.041431531835185414;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( educationwith(B, H), educationschool(A, I) )
%   | then return 0.2349402468919698;  // std dev = 0,414, 242,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=184 */
%   | else if ( location(A, J), educationtype(B, K) )
%   | | then if ( educationschool(B, L) )
%   | | | then return 0.07152420193024783;  // std dev = 15,820, 1.074,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=542 */
%   | | | else return -0.10992406235211741;  // std dev = 5,497, 178,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=40 */
%   | | else if ( firstname(B, M), gender(A, N) )
%   | | | then return 0.15871655829451767;  // std dev = 11,482, 551,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=315 */
%   | | | else return 0.0928345773859757;  // std dev = 32,957, 4.565,000 (wgt'ed) examples reached here.  /* #neg=2.340 #pos=2.225 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.040230293583441344;  // std dev = 0,406, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.10783577823710366;  // std dev = 0,422, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( educationschool(B, E), educationschool(A, E) )
%   | then if ( educationconcentration(B, F), educationyear(B, G) )
%   | | then return 0.2620364548671853;  // std dev = 0,395, 127,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=103 */
%   | | else if ( educationwith(A, H), locale(B, I) )
%   | | | then return 0.20259435471332654;  // std dev = 5,891, 175,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=125 */
%   | | | else return 0.07547749978138005;  // std dev = 13,813, 843,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=480 */
%   | else if ( educationtype(B, J), educationtype(A, K) )
%   | | then if ( educationschool(A, L), location(A, M) )
%   | | | then return -0.07766942269709841;  // std dev = 8,724, 392,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=113 */
%   | | | else return 0.029798140588441106;  // std dev = 10,880, 523,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=221 */
%   | | else if ( educationconcentration(B, N), educationyear(B, P) )
%   | | | then return 0.2028713343570285;  // std dev = 5,286, 139,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=97 */
%   | | | else return 0.07492555691387667;  // std dev = 32,569, 4.411,000 (wgt'ed) examples reached here.  /* #neg=2.244 #pos=2.167 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.04305921681080408;  // std dev = 0,410, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( educationyear(B, D), educationconcentration(B, E) )
%   | then if ( location(B, F), hometown(B, G) )
%   | | then if ( languages(B, H), educationtype(A, I) )
%   | | | then return 0.1760866727278497;  // std dev = 2,845, 53,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | | | else return 0.07407523832488036;  // std dev = 4,779, 119,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=79 */
%   | | else if ( languages(B, J), gender(A, K) )
%   | | | then return 0.29483175527769784;  // std dev = 2,382, 42,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | | else return 0.18622217881628947;  // std dev = 4,429, 92,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=62 */
%   | else if ( lastname(B, L), gender(A, M) )
%   | | then if ( educationtype(B, N), educationschool(A, P) )
%   | | | then return -0.12511884069947637;  // std dev = 3,080, 75,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return -0.003454602006530699;  // std dev = 8,938, 371,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=133 */
%   | | else if ( location(B, Q), educationyear(B, R) )
%   | | | then return 0.00558724428240264;  // std dev = 13,246, 833,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=400 */
%   | | | else return 0.0635692231357543;  // std dev = 34,753, 5.025,000 (wgt'ed) examples reached here.  /* #neg=2.483 #pos=2.542 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then return 0.03407771057898452;  // std dev = 0,409, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( educationschool(B, D), gender(B, E) )
%   | then if ( languages(B, F), birthday(B, G) )
%   | | then if ( educationyear(B, H) )
%   | | | then return 0.03148792806433485;  // std dev = 7,866, 266,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=142 */
%   | | | else return -0.3993075738777343;  // std dev = 0,998, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else if ( educationyear(B, I), location(B, J) )
%   | | | then return 0.0379697731432374;  // std dev = 13,861, 921,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=512 */
%   | | | else return 0.07249668355833458;  // std dev = 21,115, 1.934,000 (wgt'ed) examples reached here.  /* #neg=864 #pos=1.070 */
%   | else if ( locale(B, K), locale(A, L) )
%   | | then if ( locale(M, K), workemployer(M, N) )
%   | | | then return -0.006193622489606979;  // std dev = 21,412, 1.961,000 (wgt'ed) examples reached here.  /* #neg=1.169 #pos=792 */
%   | | | else return 0.07670704852824638;  // std dev = 18,060, 1.349,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=712 */
%   | | else if ( locale(A, P), gender(A, Q) )
%   | | | then return 0.30068835069915667;  // std dev = 2,912, 48,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=37 */
%   | | | else return -0.015199802553616774;  // std dev = 4,743, 94,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=40 */


Results
   AUC ROC   = 0.581435
   AUC PR    = 0.578269
   CLL	      = -0.69634
   Precision = 0.634062 at threshold = 0.5
   Recall    = 0.257022
   F1        = 0.365775


Total learning time: 116.801 seconds
Total inference time: 4.888 seconds
AUC ROC: 0.581435


Refined model AUC ROC: 0.581435


Dataset: 48_twitter_facebook, Fold: 3, Type: Transfer (trRDN-B), Time: 06:21:37
{'Mapping results': {'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Possible mappings': [1568], 'Generating mappings time': 0.11433982849121094, 'Total time': 1.9678869247436523, 'Generating paths time': 1.7922067642211914, 'Knowledge compiling time': 0.061333417892456055}, 'CLL': -0.69634, 'Learning time': 181.875, 'AUC PR': 0.578269, 'F1': 0.365775, 'AUC ROC': 0.581435, 'Recall': 0.257022, 'Precision': [0.634062, 0.5], 'parameter': {'CLL': -0.666001, 'Learning time': 65.074, 'AUC PR': 0.615746, 'F1': 0.594923, 'AUC ROC': 0.63453, 'Recall': 0.582325, 'Precision': [0.608078, 0.5], 'Inference time': 3.608}, 'Inference time': 4.888}


Start learning from scratch in target domain

Starting fold 4

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.0350193977355957
   Generating paths time   = 1.4792451858520508
   Generating mappings time   = 0.09042239189147949
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 1.6046950817108154


Best mapping found: ['tweets(A,B) -> workstartdate(A,B)', 'follows(A,B) -> edge(A,B)', 'accounttype(A,B) -> worklocation(A,B)'] 

Transferred target predicate: edge 

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
0;false,false;workstartdate(A, H).;true;true
0;false,false,false;workstartdate(B, J).;false;false
0;true,false,false;workstartdate(B, F).;false;false
0;false;workstartdate(A, G), workstartdate(B, G).;false;true
0;false,false,true;workstartdate(B, I).;false;false
0;true;workstartdate(A, D), workstartdate(B, D).;false;true
0;true,false;workstartdate(A, E).;false;true
1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
1;false,false;workstartdate(A, H).;true;true
1;false,false,false;workstartdate(B, J).;false;false
1;true,false,false;workstartdate(B, F).;false;false
1;false;workstartdate(A, G), workstartdate(B, G).;false;true
1;false,false,true;workstartdate(B, I).;false;false
1;true;workstartdate(A, D), workstartdate(B, D).;false;true
1;true,false;workstartdate(A, E).;false;true
2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
2;false,false;workstartdate(A, H).;true;true
2;false,false,false;workstartdate(B, J).;false;false
2;true,false,false;workstartdate(B, F).;false;false
2;false;workstartdate(B, G), workstartdate(A, G).;false;true
2;false,false,true;workstartdate(B, I).;false;false
2;true;workstartdate(B, D), workstartdate(A, D).;false;true
2;true,false;workstartdate(A, E).;false;true
3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
3;false,false;workstartdate(A, I).;true;true
3;false,false,false;workstartdate(B, K).;false;false
3;true,false,false;workstartdate(B, G).;false;false
3;false;workstartdate(A, H), workstartdate(B, H).;false;true
3;false,false,true;workstartdate(B, J).;false;false
3;true;workstartdate(B, D), workstartdate(A, D).;false;true
3;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
4;false,false;workstartdate(A, I).;true;true
4;false,false,false;workstartdate(B, K).;false;false
4;true,false,false;workstartdate(B, G).;false;false
4;false;workstartdate(A, H), workstartdate(B, H).;false;true
4;false,false,true;workstartdate(B, J).;false;false
4;true;workstartdate(B, D), workstartdate(A, D).;false;true
4;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
5;false,false;workstartdate(A, I).;true;true
5;false,false,false;workstartdate(B, K).;false;false
5;true,false,false;workstartdate(B, G).;false;false
5;false;workstartdate(A, H), workstartdate(B, H).;false;true
5;false,false,true;workstartdate(B, J).;false;false
5;true;workstartdate(A, D), workstartdate(B, D).;false;true
5;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
6;false,false;workstartdate(A, I).;true;true
6;false,false,false;workstartdate(B, K).;false;false
6;true,false,false;workstartdate(B, G).;false;false
6;false;workstartdate(A, H), workstartdate(B, H).;false;true
6;false,false,true;workstartdate(B, J).;false;false
6;true;workstartdate(B, D), workstartdate(A, D).;false;true
6;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
7;false,false;workstartdate(A, I).;true;true
7;false,false,false;workstartdate(B, K).;false;false
7;true,false,false;workstartdate(B, G).;false;false
7;false;workstartdate(B, H), workstartdate(A, H).;false;true
7;false,false,true;workstartdate(B, J).;false;false
7;true;workstartdate(B, D), workstartdate(A, D).;false;true
7;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
8;false,false;workstartdate(A, I).;true;true
8;false,false,false;workstartdate(B, K).;false;false
8;true,false,false;workstartdate(B, G).;false;false
8;false;workstartdate(B, H), workstartdate(A, H).;false;true
8;false,false,true;workstartdate(B, J).;false;false
8;true;workstartdate(A, D), workstartdate(B, D).;false;true
8;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true
9;false,false;workstartdate(A, I).;true;true
9;false,false,false;workstartdate(B, K).;false;false
9;true,false,false;workstartdate(B, G).;false;false
9;false;workstartdate(B, H), workstartdate(A, H).;false;true
9;false,false,true;workstartdate(B, J).;false;false
9;true;workstartdate(B, D), workstartdate(A, D).;false;true
9;true,false;workstartdate(B, E), workstartdate(A, F).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2882564619812321;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.23910131605189253;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.368787232971848;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.07030324498182235;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.24942698224243812;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.20743465140990314;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.31772850645980416;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.061022104415313035;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20953215906169873;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.175647759083995;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.26341641238931107;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.05259950478597565;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17141674809743182;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.145507317725373;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.21121967285656953;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.04506156572157876;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13721307818336095;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.11831567107862011;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.16513134054600526;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.03839689936532517;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10801120442112519;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.09476899772257998;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.12690140107666334;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.03256600389501996;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08398867056391114;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.07502403390026868;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.09648341533509439;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.027510392484601905;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.064742879070461;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.05886603321787611;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.07289651810604192;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.02316052837029378;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.049604060053542356;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.045880579198031735;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.05488115765431333;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.019442152765119736;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03784406605043173;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.03558232583205149;  // std dev = 4,976, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.041238592842787164;  // std dev = 14,540, 846,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=432 */


Results
   AUC ROC   = 0.505575
   AUC PR    = 0.510323
   CLL	      = -0.738207
   Precision = 0.557757 at threshold = 0.5
   Recall    = 0.095943
   F1        = 0.163723


Total learning time: 10.207 seconds
Total inference time: 4.015 seconds
AUC ROC: 0.505575


Structure after Parameter Learning
[['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, H)', 'false,false,false': 'workstartdate(B, J)', 'true,false,false': 'workstartdate(B, F)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,true': 'workstartdate(B, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E)'}, {'true,false,true': [0.0, 0, 9], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 2], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, H)', 'false,false,false': 'workstartdate(B, J)', 'true,false,false': 'workstartdate(B, F)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,true': 'workstartdate(B, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E)'}, {'true,false,true': [2.98e-08, 0, 9], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [2.11e-08, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 2], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, H)', 'false,false,false': 'workstartdate(B, J)', 'true,false,false': 'workstartdate(B, F)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,true': 'workstartdate(B, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E)'}, {'true,false,true': [0.0, 0, 9], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 2], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [1.49e-08, 0, 5], 'false,false,true,true': [2.11e-08, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [2.58e-08, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [7.45e-09, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [1.29e-08, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [5.27e-09, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [5.27e-09, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(A, D), workstartdate(B, D)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}], ['edge(A, B)', {'': 'worklocation(A, C), worklocation(B, C)', 'false,false': 'workstartdate(A, I)', 'false,false,false': 'workstartdate(B, K)', 'true,false,false': 'workstartdate(B, G)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,true': 'workstartdate(B, J)', 'true': 'workstartdate(B, D), workstartdate(A, D)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)'}, {'true,false,true': [0.0, 0, 4], 'true,false,false,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 6], 'false,false,true,false': [4.774, 53, 40], 'true,false,false,false': [0.0, 0, 7], 'true,true': [0.894, 1, 4], 'false,false,false,true': [4.976, 65, 40], 'false,false,false,false': [14.54, 414, 432], 'false,true': [1.247, 7, 2]}]]
[{'': [0.04535147392290242, 0.24991952605527062], 'false,false': [0.24875012753800665, 0.24998645512332662], 'false,false,false': [0.23582766439909422, 0.24988682661836992], 'true,false,false': [0.0, 0.0], 'false': [0.17283950617283952, 0.24995555555554727], 'false,false,true': [-1.4802973661668753e-16, 0.2451150422014118], 'true': [0.15999999999999986, -2.220446049250313e-16], 'true,false': [-2.9605947323337506e-16, -2.5376526277146434e-16]}, {'': [0.04282402161816719, 0.24877285034786223], 'false,false': [0.24283856220777109, 0.24952936982526652], 'false,false,false': [0.2358276643990932, 0.24988682661840256], 'true,false,false': [0.0, 0.0], 'false': [0.1728395061728396, 0.2489637447023247], 'false,false,true': [7.401486830834377e-17, 0.24511504220140973], 'true': [0.16, 0.0], 'true,false': [9.868649107779169e-17, -6.344131569286608e-17]}, {'': [0.04042877159515739, 0.2476707846352926], 'false,false': [0.23706884455884636, 0.24909117263100722], 'false,false,false': [0.23582766439909308, 0.24988682661838374], 'true,false,false': [-4.4408920985006264e-17, 0.0], 'false': [0.1728395061728395, 0.24800373737729073], 'false,false,true': [-7.401486830834377e-17, 0.24511504220141103], 'true': [0.15999999999999998, -1.1102230246251565e-16], 'true,false': [-1.4802973661668753e-16, -6.344131569286608e-17]}, {'': [0.03931805341907359, 0.24692160164666055], 'false,false': [0.23370765348083675, 0.24875867703560234], 'false,false,false': [0.2358276643990925, 0.24988682661838493], 'true,false,false': [4.4408920985006264e-17, 9.516197353929913e-17], 'false': [0.17283950617283952, 0.24736613102657376], 'false,false,true': [7.401486830834377e-17, 0.24511504220140992], 'true': [0.15999999999999998, 1.1102230246251565e-16], 'true,false': [0.0, 7.401486830834377e-17]}, {'': [0.03895749707197725, 0.24649633462427156], 'false,false': [0.23217662044208806, 0.24854982199454523], 'false,false,false': [0.23582766439909217, 0.24988682661837477], 'true,false,false': [-2.2204460492503132e-17, -3.172065784643304e-17], 'false': [0.1728395061728395, 0.24701760980781126], 'false,false,true': [-3.700743415417188e-17, 0.24511504220140973], 'true': [0.16, -4.163336342344337e-17], 'true,false': [0.0, -3.700743415417188e-17]}, {'': [0.03885444656087115, 0.24627300398155838], 'false,false': [0.23149254654111537, 0.2484359641832381], 'false,false,false': [0.2358276643990937, 0.2498868266183782], 'true,false,false': [0.0, 2.3790493384824782e-17], 'false': [0.17283950617283958, 0.24684196561375454], 'false,false,true': [9.25185853854297e-18, 0.24511504220141012], 'true': [0.16, 2.7755575615628914e-17], 'true,false': [0.0, 9.25185853854297e-18]}, {'': [0.038827997455053845, 0.24616023690759065], 'false,false': [0.2311601423684899, 0.2483797838578441], 'false,false,false': [0.23582766439909206, 0.24988682661838638], 'true,false,false': [-5.551115123125783e-18, -1.586032892321652e-17], 'false': [0.1728395061728395, 0.24675675268616754], 'false,false,true': [-9.25185853854297e-18, 0.2451150422014097], 'true': [0.16, -2.0816681711721685e-17], 'true,false': [0.0, -9.25185853854297e-18]}, {'': [0.03881988105547982, 0.24610398384381044], 'false,false': [0.23097826903678678, 0.24835388817887863], 'false,false,false': [0.23582766439909392, 0.2498868266183778], 'true,false,false': [0.0, 3.96508223080413e-18], 'false': [0.1728395061728395, 0.24671561909791648], 'false,false,true': [4.625929269271485e-18, 0.24511504220141017], 'true': [0.16, 6.938893903907228e-18], 'true,false': [0.0, 4.625929269271485e-18]}, {'': [0.03881168355125032, 0.24607536762787338], 'false,false': [0.23086522762562764, 0.24834251000609706], 'false,false,false': [0.23582766439909386, 0.24988682661837353], 'true,false,false': [0.0, -7.93016446160826e-18], 'false': [0.1728395061728395, 0.2466949825436199], 'false,false,true': [-4.625929269271485e-18, 0.24511504220141103], 'true': [0.16, -3.469446951953614e-18], 'true,false': [0.0, -4.625929269271485e-18]}, {'': [0.03879839892931142, 0.24605993614248983], 'false,false': [0.23078606220527445, 0.248337695565287], 'false,false,false': [0.2358276643990936, 0.24988682661838146], 'true,false,false': [0.0, 0.0], 'false': [0.17283950617283952, 0.2466836258665827], 'false,false,true': [0.0, 0.2451150422014108], 'true': [0.16, 0.0], 'true,false': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '0;false,false;workstartdate(A, H).;true;true', '0;true,false,false;workstartdate(B, F).;true;true', '0;false;workstartdate(A, G), workstartdate(B, G).;true;true', '0;false,false,true;workstartdate(B, I).;true;true', '0;true;workstartdate(A, D), workstartdate(B, D).;true;true', '0;true,false;workstartdate(A, E).;true;true', '1;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '1;false,false;workstartdate(A, H).;true;true', '1;true,false,false;workstartdate(B, F).;true;true', '1;false;workstartdate(A, G), workstartdate(B, G).;true;true', '1;false,false,true;workstartdate(B, I).;true;true', '1;true;workstartdate(A, D), workstartdate(B, D).;true;true', '1;true,false;workstartdate(A, E).;true;true', '2;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '2;false,false;workstartdate(A, H).;true;true', '2;true,false,false;workstartdate(B, F).;true;true', '2;false;workstartdate(B, G), workstartdate(A, G).;true;true', '2;false,false,true;workstartdate(B, I).;true;true', '2;true;workstartdate(B, D), workstartdate(A, D).;true;true', '2;true,false;workstartdate(A, E).;true;true', '3;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '3;false,false;workstartdate(A, I).;true;true', '3;true,false,false;workstartdate(B, G).;true;true', '3;false;workstartdate(A, H), workstartdate(B, H).;true;true', '3;false,false,true;workstartdate(B, J).;true;true', '3;true;workstartdate(B, D), workstartdate(A, D).;true;true', '3;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '4;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '4;false,false;workstartdate(A, I).;true;true', '4;true,false,false;workstartdate(B, G).;true;true', '4;false;workstartdate(A, H), workstartdate(B, H).;true;true', '4;false,false,true;workstartdate(B, J).;true;true', '4;true;workstartdate(B, D), workstartdate(A, D).;true;true', '4;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '5;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '5;false,false;workstartdate(A, I).;true;true', '5;true,false,false;workstartdate(B, G).;true;true', '5;false;workstartdate(A, H), workstartdate(B, H).;true;true', '5;false,false,true;workstartdate(B, J).;true;true', '5;true;workstartdate(A, D), workstartdate(B, D).;true;true', '5;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '6;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '6;false,false;workstartdate(A, I).;true;true', '6;true,false,false;workstartdate(B, G).;true;true', '6;false;workstartdate(A, H), workstartdate(B, H).;true;true', '6;false,false,true;workstartdate(B, J).;true;true', '6;true;workstartdate(B, D), workstartdate(A, D).;true;true', '6;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '7;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '7;false,false;workstartdate(A, I).;true;true', '7;true,false,false;workstartdate(B, G).;true;true', '7;false;workstartdate(B, H), workstartdate(A, H).;true;true', '7;false,false,true;workstartdate(B, J).;true;true', '7;true;workstartdate(B, D), workstartdate(A, D).;true;true', '7;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '8;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '8;false,false;workstartdate(A, I).;true;true', '8;true,false,false;workstartdate(B, G).;true;true', '8;false;workstartdate(B, H), workstartdate(A, H).;true;true', '8;false,false,true;workstartdate(B, J).;true;true', '8;true;workstartdate(A, D), workstartdate(B, D).;true;true', '8;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '9;;edge(A, B) :- worklocation(A, C), worklocation(B, C).;true;true', '9;false,false;workstartdate(A, I).;true;true', '9;true,false,false;workstartdate(B, G).;true;true', '9;false;workstartdate(B, H), workstartdate(A, H).;true;true', '9;false,false,true;workstartdate(B, J).;true;true', '9;true;workstartdate(B, D), workstartdate(A, D).;true;true', '9;true,false;workstartdate(B, E), workstartdate(A, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(A, F), workstartdate(B, F) )
%   | then if ( location(B, G), hometown(A, H) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2882564619812321;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( location(B, K), locale(A, L) )
%   | | | then return 0.41659049354106736;  // std dev = 7,547, 231,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=129 */
%   | | | else return 0.33453782398839665;  // std dev = 13,401, 720,000 (wgt'ed) examples reached here.  /* #neg=377 #pos=343 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7194734122109543;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(A, F), workstartdate(B, F) )
%   | then if ( location(B, G), hometown(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16653882456488175;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.24942698224243812;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workemployer(B, K), locale(A, L) )
%   | | | then return 0.03808937097283606;  // std dev = 4,635, 122,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=28 */
%   | | | else return 0.344934124473289;  // std dev = 14,349, 829,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=444 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( workstartdate(B, F), workstartdate(A, F) )
%   | then if ( location(B, G), hometown(A, H) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20953215906169873;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.48346261601409585;  // std dev = 4,514, 105,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=77 */
%   | | | else return 0.22489963862290055;  // std dev = 14,407, 846,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=395 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then if ( location(B, H), hometown(A, I) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17141674809743182;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( workemployer(B, L), locale(A, M) )
%   | | | then return -0.008336961934314465;  // std dev = 4,607, 122,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=28 */
%   | | | else return 0.23482008291449147;  // std dev = 14,278, 829,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=444 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then if ( location(B, H), hometown(A, I) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.09841340278401862;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13721307818336095;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( hometown(B, L), hometown(A, L) )
%   | | | then return 0.505171404286941;  // std dev = 1,899, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.14653281582248237;  // std dev = 14,869, 918,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=443 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then if ( location(B, H) )
%   | | then return 0.12284474048599961;  // std dev = 0,721, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.0530667838908109;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10801120442112519;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( worklocation(B, K), educationschool(A, L) )
%   | | | then return -0.284070538595183;  // std dev = 1,222, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | | else return 0.14059555772320034;  // std dev = 14,775, 911,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=470 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then if ( location(B, H), hometown(A, I) )
%   | | then return -0.09525850619279778;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0845295955908462;  // std dev = 1,135, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08398867056391114;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( worklocation(B, L), locale(A, M) )
%   | | | then return -0.10011580952724983;  // std dev = 3,867, 94,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=19 */
%   | | | else return 0.11471415112050334;  // std dev = 14,316, 857,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=453 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then if ( hometown(A, H), educationwith(B, I) )
%   | | then return 0.11971554637089503;  // std dev = 0,717, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06609321622356953;  // std dev = 0,863, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.064742879070461;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( worklocation(B, L), educationschool(A, M) )
%   | | | then return -0.206035595352015;  // std dev = 1,228, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | | else return 0.08256128040566146;  // std dev = 14,745, 911,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=470 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 3,23e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then if ( location(B, H), hometown(A, I) )
%   | | then return -0.09738728585801593;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0750515741416052;  // std dev = 1,114, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( workstartdate(A, J) )
%   | | then if ( workstartdate(B, K) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.049604060053542356;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( hometown(B, L), locale(A, M) )
%   | | | then return 0.16211718005063;  // std dev = 6,051, 176,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=114 */
%   | | | else return 0.027876852491351904;  // std dev = 13,481, 775,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=358 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( worklocation(A, C), worklocation(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then if ( location(B, H) )
%   | | then return 0.10911070914950535;  // std dev = 0,687, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.068257939432113;  // std dev = 0,861, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03784406605043173;  // std dev = 4,774, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | else if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.1890542221863464;  // std dev = 4,460, 105,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=77 */
%   | | | else return 0.02139650741275976;  // std dev = 14,044, 846,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=395 */


Results
   AUC ROC   = 0.526726
   AUC PR    = 0.532469
   CLL	      = -0.731869
   Precision = 0.563699 at threshold = 0.5
   Recall    = 0.339541
   F1        = 0.423805


Total learning time: 13.713 seconds
Total inference time: 4.567 seconds
AUC ROC: 0.526726


Refined model AUC ROC: 0.526726


Dataset: 48_twitter_facebook, Fold: 4, Type: Transfer (trRDN-B), Time: 06:22:12
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Possible mappings': [1568], 'Generating mappings time': 0.09042239189147949, 'Total time': 1.6046950817108154, 'Generating paths time': 1.4792451858520508, 'Knowledge compiling time': 0.0350193977355957}, 'CLL': -0.731869, 'Learning time': 23.92, 'AUC PR': 0.532469, 'F1': 0.423805, 'AUC ROC': 0.526726, 'Recall': 0.339541, 'Precision': [0.563699, 0.5], 'parameter': {'CLL': -0.738207, 'Learning time': 10.207, 'AUC PR': 0.510323, 'F1': 0.163723, 'AUC ROC': 0.505575, 'Recall': 0.095943, 'Precision': [0.557757, 0.5], 'Inference time': 4.015}, 'Inference time': 4.567}


Start learning from scratch in target domain

Starting fold 5

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.12210249900817871
   Generating paths time   = 1.805631399154663
   Generating mappings time   = 0.11066985130310059
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 2.038412094116211


Best mapping found: ['tweets(A,B) -> educationschool(A,B)', 'follows(A,B) -> edge(A,B)', 'accounttype(A,B) -> workstartdate(A,B)'] 

Transferred target predicate: edge 

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
0;false,false;educationschool(A, H).;true;true
0;false,false,false;educationschool(B, J).;false;false
0;true,false,false;educationschool(B, F).;false;false
0;false;educationschool(A, G), educationschool(B, G).;false;true
0;false,false,true;educationschool(B, I).;false;false
0;true;educationschool(A, D), educationschool(B, D).;false;true
0;true,false;educationschool(A, E).;false;true
1;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
1;false,false;educationschool(A, H).;true;true
1;false,false,false;educationschool(B, J).;false;false
1;true,false,false;educationschool(B, F).;false;false
1;false;educationschool(A, G), educationschool(B, G).;false;true
1;false,false,true;educationschool(B, I).;false;false
1;true;educationschool(A, D), educationschool(B, D).;false;true
1;true,false;educationschool(A, E).;false;true
2;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
2;false,false;educationschool(A, H).;true;true
2;false,false,false;educationschool(B, J).;false;false
2;true,false,false;educationschool(B, F).;false;false
2;false;educationschool(B, G), educationschool(A, G).;false;true
2;false,false,true;educationschool(B, I).;false;false
2;true;educationschool(B, D), educationschool(A, D).;false;true
2;true,false;educationschool(A, E).;false;true
3;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
3;false,false;educationschool(A, I).;true;true
3;false,false,false;educationschool(B, K).;false;false
3;true,false,false;educationschool(B, G).;false;false
3;false;educationschool(A, H), educationschool(B, H).;false;true
3;false,false,true;educationschool(B, J).;false;false
3;true;educationschool(B, D), educationschool(A, D).;false;true
3;true,false;educationschool(A, E), educationschool(B, F).;false;true
4;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
4;false,false;educationschool(A, I).;true;true
4;false,false,false;educationschool(B, K).;false;false
4;true,false,false;educationschool(B, G).;false;false
4;false;educationschool(A, H), educationschool(B, H).;false;true
4;false,false,true;educationschool(B, J).;false;false
4;true;educationschool(B, D), educationschool(A, D).;false;true
4;true,false;educationschool(A, E), educationschool(B, F).;false;true
5;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
5;false,false;educationschool(A, I).;true;true
5;false,false,false;educationschool(B, K).;false;false
5;true,false,false;educationschool(B, G).;false;false
5;false;educationschool(A, H), educationschool(B, H).;false;true
5;false,false,true;educationschool(B, J).;false;false
5;true;educationschool(A, D), educationschool(B, D).;false;true
5;true,false;educationschool(A, E), educationschool(B, F).;false;true
6;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
6;false,false;educationschool(A, I).;true;true
6;false,false,false;educationschool(B, K).;false;false
6;true,false,false;educationschool(B, G).;false;false
6;false;educationschool(A, H), educationschool(B, H).;false;true
6;false,false,true;educationschool(B, J).;false;false
6;true;educationschool(B, D), educationschool(A, D).;false;true
6;true,false;educationschool(A, E), educationschool(B, F).;false;true
7;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
7;false,false;educationschool(A, I).;true;true
7;false,false,false;educationschool(B, K).;false;false
7;true,false,false;educationschool(B, G).;false;false
7;false;educationschool(B, H), educationschool(A, H).;false;true
7;false,false,true;educationschool(B, J).;false;false
7;true;educationschool(B, D), educationschool(A, D).;false;true
7;true,false;educationschool(A, E), educationschool(B, F).;false;true
8;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
8;false,false;educationschool(A, I).;true;true
8;false,false,false;educationschool(B, K).;false;false
8;true,false,false;educationschool(B, G).;false;false
8;false;educationschool(B, H), educationschool(A, H).;false;true
8;false,false,true;educationschool(B, J).;false;false
8;true;educationschool(A, D), educationschool(B, D).;false;true
8;true,false;educationschool(A, E), educationschool(B, F).;false;true
9;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true
9;false,false;educationschool(A, I).;true;true
9;false,false,false;educationschool(B, K).;false;false
9;true,false,false;educationschool(B, G).;false;false
9;false;educationschool(B, H), educationschool(A, H).;false;true
9;false,false,true;educationschool(B, J).;false;false
9;true;educationschool(B, D), educationschool(A, D).;false;true
9;true,false;educationschool(B, E), educationschool(A, F).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( educationschool(A, G), educationschool(B, G) )
%   | then return 0.3509025582879169;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, H) )
%   | | then if ( educationschool(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995134;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, J) )
%   | | | then return 0.331431377847605;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.3660854430360167;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( educationschool(A, G), educationschool(B, G) )
%   | then return 0.3026131137104745;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, H) )
%   | | then if ( educationschool(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3087411357856371;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, J) )
%   | | | then return 0.28612216890256387;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.3154470243571146;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( educationschool(B, G), educationschool(A, G) )
%   | then return 0.2516218025460541;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, H) )
%   | | then if ( educationschool(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25641236875858786;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, J) )
%   | | | then return 0.23866984016075093;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.2616408567909493;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3354577458812753;  // std dev = 0,830, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.2026462301319082;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20613740734454022;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.19314432679599122;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.20993373781748445;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2548712341646394;  // std dev = 0,831, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.15921339438484552;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16162857548414455;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.15259889833005302;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.16424646011444224;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.19486726226620565;  // std dev = 0,833, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.12293684137999579;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12455597792081834;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.11848869035875029;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.12630911487813265;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15084660604264227;  // std dev = 0,835, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then return 0.09385734177396857;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936730648;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.09092279872439056;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.09609003261133939;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1183235208956794;  // std dev = 0,837, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(B, H), educationschool(A, H) )
%   | then return 0.07115363395878624;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0718608885005588;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.06923334828354454;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.07263359805656192;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E), educationschool(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09393494369795893;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(B, H), educationschool(A, H) )
%   | then return 0.0537126398235934;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.054183073759549276;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.052457672768279257;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.05470284441260462;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(B, E), educationschool(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationschool(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07534450864184403;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationschool(B, H), educationschool(A, H) )
%   | then return 0.040443820380239505;  // std dev = 4,153, 69,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | else if ( educationschool(A, I) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233056126;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | else if ( educationschool(B, K) )
%   | | | then return 0.039621728103782804;  // std dev = 5,715, 131,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=62 */
%   | | | else return 0.04111540135531454;  // std dev = 7,936, 252,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=128 */


Results
   AUC ROC   = 0.534795
   AUC PR    = 0.506051
   CLL	      = -0.726129
   Precision = 0.482759 at threshold = 0.5
   Recall    = 0.011404
   F1        = 0.022282


Total learning time: 8.44 seconds
Total inference time: 4.55 seconds
AUC ROC: 0.534795


Structure after Parameter Learning
[['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, H)', 'false,false,false': 'educationschool(B, J)', 'true,false,false': 'educationschool(B, F)', 'false': 'educationschool(A, G), educationschool(B, G)', 'false,false,true': 'educationschool(B, I)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E)'}, {'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.816, 1, 2], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, H)', 'false,false,false': 'educationschool(B, J)', 'true,false,false': 'educationschool(B, F)', 'false': 'educationschool(A, G), educationschool(B, G)', 'false,false,true': 'educationschool(B, I)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E)'}, {'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.816, 1, 2], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, H)', 'false,false,false': 'educationschool(B, J)', 'true,false,false': 'educationschool(B, F)', 'false': 'educationschool(B, G), educationschool(A, G)', 'false,false,true': 'educationschool(B, I)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E)'}, {'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.816, 1, 2], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.83, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.831, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.833, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(A, H), educationschool(B, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.835, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(B, H), educationschool(A, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.837, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(B, H), educationschool(A, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(A, D), educationschool(B, D)', 'true,false': 'educationschool(A, E), educationschool(B, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.839, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}], ['edge(A, B)', {'': 'workstartdate(A, C), workstartdate(B, C)', 'false,false': 'educationschool(A, I)', 'false,false,false': 'educationschool(B, K)', 'true,false,false': 'educationschool(B, G)', 'false': 'educationschool(B, H), educationschool(A, H)', 'false,false,true': 'educationschool(B, J)', 'true': 'educationschool(B, D), educationschool(A, D)', 'true,false': 'educationschool(B, E), educationschool(A, F)'}, {'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.568, 62, 62], 'true,false,false,false': [0.841, 1, 4], 'true,true': [0.0, 1, 0], 'false,false,false,true': [5.715, 69, 62], 'false,false,false,false': [7.936, 124, 128], 'false,true': [4.153, 35, 34]}]]
[{'': [0.1874999999999999, 0.24998794367284244], 'false,false': [0.24999999999999972, 0.24998466142655956], 'false,false,false': [0.24928617213449075, 0.24993701184177747], 'true,false,false': [0.0, 0.22222222222222224], 'false': [0.24994749002310604, 0.2499912468050869], 'false,false,true': [nan, 0.24999999999999972], 'true': [0.0, 0.1224489795918368], 'true,false': [0.0, 0.15999999999999986]}, {'': [0.15716971590630235, 0.2499356659479923], 'false,false': [0.24999999999999759, 0.2499079298696926], 'false,false,false': [0.24928617213449183, 0.2499370118417739], 'true,false,false': [0.0, 0.2222222222222222], 'false': [0.2499474900231055, 0.24993248974958104], 'false,false,true': [nan, 0.24999999999999759], 'true': [0.0, 0.1132472550218071], 'true,false': [0.0, 0.15098230992137096]}, {'': [0.12874218025554657, 0.2498847199977381], 'false,false': [0.2500000000000001, 0.24983315117289845], 'false,false,false': [0.24928617213449145, 0.24993701184177078], 'true,false,false': [0.0, 0.22222222222222224], 'false': [0.24994749002310315, 0.24987523482124496], 'false,false,true': [nan, 0.2500000000000001], 'true': [0.0, 0.10436059146170769], 'true,false': [0.0, 0.14227337963247355]}, {'': [0.1105351158964253, 0.24984703425935148], 'false,false': [0.24999999999999986, 0.24977783824742872], 'false,false,false': [0.24928617213449217, 0.2499370118417741], 'true,false,false': [0.0, 0.1378221070635646], 'false': [0.2499474900231049, 0.24983287351957909], 'false,false,true': [nan, 0.24999999999999986], 'true': [0.0, 0.09981847659547406], 'true,false': [nan, 0.09981847659547406]}, {'': [0.10172699156612389, 0.24982461251531618], 'false,false': [0.24999999999999967, 0.24974493210373727], 'false,false,false': [0.2492861721344908, 0.24993701184177294], 'true,false,false': [0.0, 0.13803437048070155], 'false': [0.24994749002310412, 0.24980766032841997], 'false,false,true': [nan, 0.24999999999999967], 'true': [0.0, 0.09948067000042449], 'true,false': [nan, 0.09948067000042447]}, {'': [0.09698020700518288, 0.24981318601746233], 'false,false': [0.24999999999999972, 0.24972816456340793], 'false,false,false': [0.24928617213449075, 0.24993701184177367], 'true,false,false': [0.0, 0.1386633730851456], 'false': [0.2499474900231047, 0.24979480593969575], 'false,false,true': [nan, 0.24999999999999972], 'true': [0.0, 0.09978744825456919], 'true,false': [nan, 0.09978744825456919]}, {'': [0.09439674228314741, 0.24980790088017255], 'false,false': [0.2499999999999993, 0.24972040970984347], 'false,false,false': [0.24928617213449122, 0.24993701184177536], 'true,false,false': [0.0, 0.13941368993872877], 'false': [0.24994749002310399, 0.2497888584736705], 'false,false,true': [nan, 0.2499999999999993], 'true': [0.0, 0.10028947624870677], 'true,false': [nan, 0.10028947624870677]}, {'': [0.09295745163575272, 0.24980557896657984], 'false,false': [0.24999999999999947, 0.24971700280331866], 'false,false,false': [0.24928617213449025, 0.24993701184177544], 'true,false,false': [0.0, 0.140147411975203], 'false': [0.24994749002310448, 0.24978624525287974], 'false,false,true': [nan, 0.24999999999999947], 'true': [0.0, 0.10081024586142326], 'true,false': [nan, 0.10081024586142326]}, {'': [0.0921342779620267, 0.2498045789226374], 'false,false': [0.2499999999999993, 0.24971553529011972], 'false,false,false': [0.24928617213449059, 0.24993701184177322], 'true,false,false': [0.0, 0.14080922150681136], 'false': [0.2499474900231043, 0.24978511989111649], 'false,false,true': [nan, 0.2499999999999993], 'true': [0.0, 0.10128382932372285], 'true,false': [nan, 0.10128382932372285]}, {'': [0.09165116375901672, 0.24980414812413645], 'false,false': [0.24999999999999986, 0.249714902965934], 'false,false,false': [0.24928617213449086, 0.24993701184177344], 'true,false,false': [0.0, 0.1413836004790207], 'false': [0.2499474900231046, 0.24978463532160997], 'false,false,true': [nan, 0.24999999999999986], 'true': [0.0, 0.1016905904264507], 'true,false': [nan, 0.1016905904264507]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '0;true;educationschool(A, D), educationschool(B, D).;true;true', '0;true,false,false;educationschool(B, F).;true;true', '0;true,false;educationschool(A, E).;true;true', '1;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '1;true;educationschool(A, D), educationschool(B, D).;true;true', '1;true,false,false;educationschool(B, F).;true;true', '1;true,false;educationschool(A, E).;true;true', '2;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '2;true;educationschool(B, D), educationschool(A, D).;true;true', '2;true,false,false;educationschool(B, F).;true;true', '2;true,false;educationschool(A, E).;true;true', '3;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '3;true;educationschool(B, D), educationschool(A, D).;true;true', '3;true,false;educationschool(B, G).;true;true', '4;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '4;true;educationschool(B, D), educationschool(A, D).;true;true', '4;true,false;educationschool(B, G).;true;true', '5;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '5;true;educationschool(A, D), educationschool(B, D).;true;true', '5;true,false;educationschool(B, G).;true;true', '6;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '6;true;educationschool(B, D), educationschool(A, D).;true;true', '6;true,false;educationschool(B, G).;true;true', '7;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '7;true;educationschool(B, D), educationschool(A, D).;true;true', '7;true,false;educationschool(B, G).;true;true', '8;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '8;true;educationschool(A, D), educationschool(B, D).;true;true', '8;true,false;educationschool(B, G).;true;true', '9;;edge(A, B) :- workstartdate(A, C), workstartdate(B, C).;true;true', '9;true;educationschool(B, D), educationschool(A, D).;true;true', '9;true,false;educationschool(B, G).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.7152917922423693;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( workstartdate(B, E), educationtype(B, F) )
%   | then if ( educationconcentration(B, G) )
%   | | then return 0.6959867729373493;  // std dev = 0,369, 37,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | else if ( educationschool(A, H), workstartdate(A, I) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5338246107751874;  // std dev = 4,027, 74,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   | else if ( locale(B, J), locale(A, J) )
%   | | then if ( workenddate(B, K) )
%   | | | then return 0.18282425977483605;  // std dev = 4,109, 77,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | | else return 0.3822646907265181;  // std dev = 8,807, 311,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=163 */
%   | | else if ( educationyear(B, L), educationyear(A, M) )
%   | | | then return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.012818806835971596;  // std dev = 2,640, 62,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( workstartdate(B, E), educationtype(B, F) )
%   | then if ( location(A, G), educationyear(B, H) )
%   | | then return 0.6705448575591615;  // std dev = 0,303, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( educationschool(A, I), location(B, J) )
%   | | | then return -0.19630109937673645;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.46179029538964694;  // std dev = 4,414, 93,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=64 */
%   | else if ( locale(B, K), locale(A, K) )
%   | | then if ( workenddate(B, L) )
%   | | | then return 0.15908058616609805;  // std dev = 4,109, 77,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | | else return 0.32909889445562723;  // std dev = 8,807, 311,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=163 */
%   | | else if ( educationyear(B, M), educationyear(A, N) )
%   | | | then return 0.5580193346218546;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.011265534345483651;  // std dev = 2,640, 62,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(A, E) )
%   | | then return 0.6177907128699047;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.6177907128699047;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2844573795365714;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( educationyear(B, G), educationyear(A, G) )
%   | then return 0.5654215628605069;  // std dev = 0,334, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | else if ( workstartdate(B, H), educationtype(B, I) )
%   | | then if ( workemployer(B, J), educationyear(A, K) )
%   | | | then return 0.5069093518216945;  // std dev = 1,821, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.3124537329818516;  // std dev = 4,144, 79,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=50 */
%   | | else if ( educationyear(A, L), educationtype(B, M) )
%   | | | then return 0.10998144550337151;  // std dev = 4,794, 108,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   | | | else return 0.23540097002568378;  // std dev = 8,947, 338,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=156 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.3584190929074234;  // std dev = 0,333, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( educationyear(B, E), educationyear(A, E) )
%   | then if ( workstartdate(A, F), educationconcentration(B, G) )
%   | | then if ( workstartdate(B, H) )
%   | | | then return 0.5191909100779692;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12789919841971242;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5251398462279991;  // std dev = 0,218, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( gender(B, I), gender(A, I) )
%   | | then if ( workstartdate(B, J), locale(B, K) )
%   | | | then return 0.33620495124858907;  // std dev = 3,696, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | | | else return 0.19521022290952705;  // std dev = 8,388, 297,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=138 */
%   | | else if ( locale(A, L), locale(B, L) )
%   | | | then return 0.15393178517084846;  // std dev = 5,921, 148,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=66 */
%   | | | else return -0.1335793474535826;  // std dev = 1,155, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(B, E) )
%   | | then return 0.3784744651463955;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22703921673219468;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( locale(A, F), locale(B, F) )
%   | then if ( lastname(A, G) )
%   | | then return 0.6649611251514234;  // std dev = 0,015, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( gender(B, H), gender(A, H) )
%   | | | then return 0.19110442362482905;  // std dev = 8,596, 324,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=180 */
%   | | | else return 0.10826332734652677;  // std dev = 5,869, 152,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=68 */
%   | else if ( locale(A, I), locale(B, J) )
%   | | then return -0.13508305924259745;  // std dev = 0,207, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else if ( educationtype(A, K), educationtype(B, K) )
%   | | | then return 0.3390738860507809;  // std dev = 1,907, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.0426689031707433;  // std dev = 2,049, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(B, E) )
%   | | then return 0.29431821638909983;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1729558958944956;  // std dev = 0,863, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( educationyear(A, F), lastname(B, G) )
%   | then return -0.16937915019519648;  // std dev = 0,049, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( workemployer(B, H), workemployer(A, H) )
%   | | then if ( languages(B, I), workstartdate(A, J) )
%   | | | then return 0.26290641678403054;  // std dev = 1,117, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.555642528235144;  // std dev = 0,458, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( workenddate(B, K), locale(A, L) )
%   | | | then return 0.04154500352175016;  // std dev = 4,675, 108,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | | else return 0.132383313359495;  // std dev = 9,748, 434,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=225 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then return 0.13298399437646763;  // std dev = 0,319, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( educationyear(B, D), educationconcentration(A, E) )
%   | then if ( workstartdate(B, F), gender(A, G) )
%   | | then if ( educationyear(A, D) )
%   | | | then return 0.34023086446812534;  // std dev = 0,065, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15327894029038266;  // std dev = 1,712, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( workemployer(A, H), educationconcentration(B, E) )
%   | | | then return 0.061442556396400345;  // std dev = 1,351, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.42415976137184846;  // std dev = 1,669, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else if ( gender(B, I), gender(A, I) )
%   | | then if ( workstartdate(B, J), educationyear(B, K) )
%   | | | then return 0.26482121254253693;  // std dev = 2,494, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | | | else return 0.08466878542425131;  // std dev = 8,234, 302,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=142 */
%   | | else if ( political(A, L), educationtype(B, M) )
%   | | | then return 0.5577922738926969;  // std dev = 0,355, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.006924131633227811;  // std dev = 5,580, 163,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=57 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then return 0.10795095996005415;  // std dev = 0,318, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( educationyear(B, D), educationschool(B, E) )
%   | then if ( educationtype(A, F), languages(B, G) )
%   | | then if ( educationconcentration(B, H), educationschool(A, E) )
%   | | | then return 0.21369040517122537;  // std dev = 1,024, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.3547902948397443;  // std dev = 0,348, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( educationdegree(A, I), languages(A, J) )
%   | | | then return 0.49260153729343736;  // std dev = 0,377, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.14262551942550872;  // std dev = 4,553, 97,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=56 */
%   | else if ( educationtype(B, K), location(B, L) )
%   | | then if ( educationconcentration(A, M), educationdegree(A, N) )
%   | | | then return 0.2420689296329313;  // std dev = 1,298, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.19983916376641053;  // std dev = 2,170, 35,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( educationconcentration(A, P), locale(B, Q) )
%   | | | then return -0.0068636791137997545;  // std dev = 4,472, 102,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=42 */
%   | | | else return 0.09704776221498075;  // std dev = 7,778, 302,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=159 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(A, D), educationschool(B, D) )
%   | then return -0.09813245776935749;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1151507649211251;  // std dev = 0,332, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( locale(A, E), locale(B, E) )
%   | then if ( educationyear(A, F), educationtype(B, G) )
%   | | then if ( educationyear(B, H), workemployer(B, I) )
%   | | | then return 0.13254882424644926;  // std dev = 3,126, 59,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return -0.05439264331174684;  // std dev = 3,920, 91,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=37 */
%   | | else if ( educationschool(A, J), workstartdate(A, K) )
%   | | | then return 0.20217905208206946;  // std dev = 2,763, 35,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | | else return 0.07665198445122608;  // std dev = 8,215, 303,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=162 */
%   | else if ( locale(A, L), locale(B, M) )
%   | | then return -0.13559411719733633;  // std dev = 0,203, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else if ( educationschool(A, N) )
%   | | | then return -0.19451768594716046;  // std dev = 1,058, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13060945871694488;  // std dev = 2,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workstartdate(A, C), workstartdate(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return -0.08978344478866639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( educationschool(B, E) )
%   | | then return 0.17874010582257527;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.060058523306093736;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( lastname(A, F), lastname(B, G) )
%   | then return 0.42340940498499613;  // std dev = 0,053, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( educationdegree(B, H), educationyear(A, I) )
%   | | then if ( educationconcentration(B, J), educationschool(B, K) )
%   | | | then return -0.05734331903544014;  // std dev = 1,712, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.20511604080151075;  // std dev = 2,473, 44,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=36 */
%   | | else if ( educationyear(B, L), educationschool(B, M) )
%   | | | then return 0.08753490142388018;  // std dev = 4,727, 118,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=67 */
%   | | | else return -2.397107434377632E-4;  // std dev = 8,762, 385,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=165 */


Results
   AUC ROC   = 0.539699
   AUC PR    = 0.542559
   CLL	      = -0.772001
   Precision = 0.541035 at threshold = 0.5
   Recall    = 0.395243
   F1        = 0.456788


Total learning time: 16.247 seconds
Total inference time: 5.852 seconds
AUC ROC: 0.539699


Refined model AUC ROC: 0.539699


Dataset: 48_twitter_facebook, Fold: 5, Type: Transfer (trRDN-B), Time: 06:22:51
{'Mapping results': {'Finding best mapping': 7.152557373046875e-07, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Possible mappings': [1568], 'Generating mappings time': 0.11066985130310059, 'Total time': 2.038412094116211, 'Generating paths time': 1.805631399154663, 'Knowledge compiling time': 0.12210249900817871}, 'CLL': -0.772001, 'Learning time': 24.686999999999998, 'AUC PR': 0.542559, 'F1': 0.456788, 'AUC ROC': 0.539699, 'Recall': 0.395243, 'Precision': [0.541035, 0.5], 'parameter': {'CLL': -0.726129, 'Learning time': 8.44, 'AUC PR': 0.506051, 'F1': 0.022282, 'AUC ROC': 0.534795, 'Recall': 0.011404, 'Precision': [0.482759, 0.5], 'Inference time': 4.55}, 'Inference time': 5.852}


Start learning from scratch in target domain

