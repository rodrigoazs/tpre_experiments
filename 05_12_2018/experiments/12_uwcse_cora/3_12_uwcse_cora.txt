Starting experiment #3 for 12_uwcse_cora

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(D, H, G) )
%   | | then if ( ta(F, H, I) )
%   | | | then return 0.5611978335065895;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7312268321971792;  // std dev = 0,025, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7306147939956185;  // std dev = 0,064, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.4612985917510647;  // std dev = 2,042, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.6136633279772824;  // std dev = 2,076, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.40213606023808773;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5680093324367135;  // std dev = 0,098, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.5081090089455164;  // std dev = 0,915, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.28404984338305955;  // std dev = 1,482, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.5214230471845527;  // std dev = 1,874, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41795349175338553;  // std dev = 1,267, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( publication(L, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.05336865286910358;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.48319474013802494;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.3687172478169538;  // std dev = 0,907, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4226108524921129;  // std dev = 0,049, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return 0.19244697028644672;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.43386034739509877;  // std dev = 0,972, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.3466720368758429;  // std dev = 2,506, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( student(B) )
%   | then return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( publication(N, B) )
%   | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.04326500013633294;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.20556015166426506;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.33635974313060557;  // std dev = 0,137, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, B), publication(I, G) )
%   | | | then return 0.35778652822454904;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17413234321154955;  // std dev = 1,648, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.30384089321051955;  // std dev = 1,891, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.20279241696467903;  // std dev = 1,428, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.09299053394355025;  // std dev = 0,029, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.26650812245393835;  // std dev = 0,170, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.15818016768048737;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.26985073735302406;  // std dev = 0,057, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( publication(K, A), tempadvisedby(L, B) )
%   | | then if ( hasposition(M, C), publication(K, M) )
%   | | | then return 0.018038249629539725;  // std dev = 1,236, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4326109965620204;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(N, C), tempadvisedby(P, N) )
%   | | | then return 0.23437777865390644;  // std dev = 2,076, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.15310430987794107;  // std dev = 1,259, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( student(B) )
%   | then return -0.08516143363225746;  // std dev = 2,11e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.060448149048420934;  // std dev = 0,221, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.24364277942906923;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.17737434963780943;  // std dev = 0,890, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2133451308169809;  // std dev = 0,070, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.22074548345962924;  // std dev = 1,285, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.06867539273113105;  // std dev = 1,133, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.19635909587734818;  // std dev = 1,335, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.16093803724843922;  // std dev = 1,738, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   else return -0.07918616775536627;  // std dev = 0,028, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.063766586016557;  // std dev = 0,890, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18916493027025072;  // std dev = 0,116, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | then if ( publication(G, A), publication(I, H) )
%   | | | then return 0.20006347174419742;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06414805464909179;  // std dev = 1,663, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.23485737753029928;  // std dev = 0,620, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14057779948662996;  // std dev = 2,167, 50,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=44 */
%   else return -0.07360184780845536;  // std dev = 0,026, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.1632026247232253;  // std dev = 0,039, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | | then return 0.05878127905982491;  // std dev = 0,858, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16641065661827253;  // std dev = 0,066, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | then if ( publication(L, M), ta(N, M, P) )
%   | | | then return 0.19485503603025048;  // std dev = 0,844, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.3416420098204582;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(Q, B), publication(R, Q) )
%   | | | then return 0.22215074000610505;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11456968759835778;  // std dev = 2,423, 66,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   else if ( student(B) )
%   | then return -0.06836065097696231;  // std dev = 1,97e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.05849414407573503;  // std dev = 0,215, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.16755090800419356;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.10504458859718184;  // std dev = 0,884, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.137777098655301;  // std dev = 0,078, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return -0.021604319537092947;  // std dev = 0,774, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.14060131480163346;  // std dev = 0,953, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.08251277895942599;  // std dev = 2,360, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( student(B) )
%   | then return -0.06413331661155888;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( publication(N, B) )
%   | | then return -0.06624035145009177;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.016591651558735543;  // std dev = 0,713, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Predicates from source: ['advisedby(person,person).', 'student(person).', 'professor(person).', 'ta(course,person,quarter).', 'publication(title,person).', 'tempadvisedby(person,person).', 'hasposition(person,faculty).']

Starting fold 1

Target predicate: samebib
Mapping Results
   Knowledge compiling time   = 0.09320449829101562
   Generating paths time   = 1.8956527709960938
   Generating mappings time   = 0.006873369216918945
   Possible mappings   = [32]
   Max mapping   = 14641
   Numbers predicates mapping   = [7]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 1.9957375526428223


Best mapping found: ['hasposition(A,B) -> author(A,B)', 'publication(A,B) -> venue(B,A)', 'advisedby(A,B) -> samebib(A,B)'] 

Transferred target predicate: samebib 

Target train facts examples: 2232
Target train pos examples: 5231
Target train neg examples: 4038

Target test facts examples: 9355
Target test pos examples: 25740
Target test neg examples: 15140

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samebib(A, B) :- venue(B, C), venue(A, C).;false;false
1;;samebib(A, B) :- venue(A, J), venue(B, J).;false;false
2;;samebib(A, B) :- author(B, C).;true;true
2;false;venue(B, L).;false;false
2;true,false;author(J, C).;false;false
2;true;venue(A, H).;true;true
2;true,true;venue(B, H).;false;false
3;;samebib(A, B) :- author(B, C).;true;true
3;false;venue(B, N).;false;false
3;true,false;venue(I, J).;false;false
3;true;venue(A, D), venue(B, D).;true;true
3;true,true;venue(E, D).;false;false
4;;samebib(A, B) :- venue(A, H).;true;false
4;true;venue(B, H), venue(G, I).;false;true
4;true,false;venue(B, J).;false;false
5;;samebib(A, B) :- author(B, C).;true;false
5;true,false,true;author(M, C), venue(M, K).;false;false
5;true;venue(A, D), venue(B, D).;false;true
5;true,false,false;author(N, C).;false;false
5;true,false;venue(A, K).;true;true
6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;false
6;true,false,true;venue(J, I).;false;false
6;true;venue(D, C).;false;true
6;true,false;venue(A, I).;true;false
7;;samebib(A, B) :- venue(B, G).;true;false
7;true;venue(A, G), venue(H, I).;false;false
8;;samebib(A, B) :- author(B, C).;true;false
8;true,false,true;venue(M, L).;false;false
8;true;venue(B, D), venue(A, D).;false;true
8;true,false,false;venue(Q, R).;false;false
8;true,false;venue(A, L).;true;true
9;;samebib(A, B) :- author(B, C).;true;true
9;false;venue(B, N).;false;false
9;true,false;venue(I, J).;false;false
9;true;venue(B, D), venue(A, D).;true;true
9;true,true;venue(E, D).;false;false


WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.7075708227037019;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   else return 0.23148226843284048;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.5982607630806207;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   else return 0.20090552983685164;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then return 0.4705097990103776;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | | else return 0.1703274282184564;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.3553362655368344;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.14137474100000127;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then return 0.2672543686716681;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | else if ( venue(B, F) )
%   | | then return 0.1152415050445939;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.2040099565908864;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | else if ( venue(A, E) )
%   | | then if ( author(F, C), venue(F, E) )
%   | | | then return 0.09358700867380354;  // std dev = 26,893, 3.088,000 (wgt'ed) examples reached here.  /* #neg=1.932 #pos=1.156 */
%   | | | else return 0.0912899167101632;  // std dev = 23,983, 2.462,000 (wgt'ed) examples reached here.  /* #neg=1.546 #pos=916 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then return 0.15881844135253265;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.07350180944105522;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then return 0.12594775615875678;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | else return 0.05784812737267011;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then return 0.10147197756376168;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | else if ( venue(A, E) )
%   | | then if ( venue(F, E) )
%   | | | then return 0.04522435573890916;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.08282748484123097;  // std dev = 21,810, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.0351781082763564;  // std dev = 36,034, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.637371
   AUC PR    = 0.800323
   CLL	      = -0.649593
   Precision = 0.981791 at threshold = 0.5
   Recall    = 0.351904
   F1        = 0.518103


Total learning time: 143.924 seconds
Total inference time: 36.83 seconds
AUC ROC: 0.637371


Structure after Parameter Learning
[['samebib(A, B)', {'': 'venue(B, C), venue(A, C)'}, {'false': [36.034, 3478, 2072], 'true': [21.81, 560, 3159]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'false': [36.034, 3478, 2072], 'true': [21.81, 560, 3159]}], ['samebib(A, B)', {'': 'author(B, C)', 'true': 'venue(A, D)', 'true,true': 'venue(B, D)'}, {'true,true,true': [21.81, 560, 3159], 'false': [0.0, 0, 0], 'true,true,false': [36.034, 3478, 2072], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [36.034, 3478, 2072], 'true,true,true': [21.81, 560, 3159], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(A, C)', 'true': 'venue(B, C), venue(D, E)', 'true,false': 'venue(B, F)'}, {'true,false,true': [36.034, 3478, 2072], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [21.81, 560, 3159]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'author(F, C), venue(F, E)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [23.983, 1546, 916], 'true,true': [21.81, 560, 3159], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [26.893, 1932, 1156]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)', 'true': 'venue(D, C)'}, {'false': [36.034, 3478, 2072], 'true,true': [21.81, 560, 3159], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(B, C)', 'true': 'venue(A, C), venue(D, E)'}, {'false': [0.0, 0, 0], 'true,true': [21.81, 560, 3159], 'true,false': [36.034, 3478, 2072]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'venue(F, E)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [21.81, 560, 3159], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [36.034, 3478, 2072]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [36.034, 3478, 2072], 'true,true,true': [21.81, 560, 3159], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.12790434446313345, 0.233955555555497]}, {'': [0.12790434446313914, 0.233955555555555]}, {'': [0.21305293638810446, nan], 'true': [0.21305293638810446, nan], 'true,true': [0.12790434446310153, 0.2339555555555316]}, {'': [0.20240291789549875, nan], 'true,true': [0.12790434446310722, nan], 'true': [0.12790434446310722, 0.23395555555552583], 'true,false': [0.23395555555552583, nan]}, {'': [0.19695618581061355, nan], 'true': [0.12790434446311638, 0.23395555555555578], 'true,false': [0.23395555555555578, nan]}, {'': [0.19438830798214418, nan], 'true,false,true': [0.23421266342723554, 0.2336301382970973], 'true': [0.12790434446312327, 0.23395555555551312], 'true,false': [0.23395555555551312, nan]}, {'': [0.1279043444631167, 0.23395506615388684], 'true': [0.1279043444631167, nan]}, {'': [0.19251848565465027, nan], 'true': [0.12790434446311622, 0.23395505380758447]}, {'': [0.19216441640366008, nan], 'true,false,true': [0.2339550446443072, nan], 'true': [0.12790434446312235, 0.2339550446443072], 'true,false': [0.2339550446443072, nan]}, {'': [0.19194979429421014, nan], 'true,true': [0.1279043444631198, nan], 'true': [0.1279043444631198, 0.23395503785010968], 'true,false': [0.23395503785010968, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;samebib(A, B) :- venue(B, C), venue(A, C).;true;true', '1;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '2;;samebib(A, B) :- author(B, C).;true;true', '2;true;venue(A, D).;true;true', '2;true,true;venue(B, D).;true;true', '3;;samebib(A, B) :- author(B, C).;true;true', '3;true,false;venue(F, G).;true;true', '3;true;venue(A, D), venue(B, D).;true;true', '3;true,true;venue(E, D).;true;true', '4;;samebib(A, B) :- venue(A, C).;true;true', '4;true;venue(B, C), venue(D, E).;true;true', '4;true,false;venue(B, F).;true;true', '5;;samebib(A, B) :- author(B, C).;true;true', '5;true,false,true;author(F, C), venue(F, E).;true;true', '5;true;venue(A, D), venue(B, D).;true;true', '5;true,false;venue(A, E).;true;true', '6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '6;true;venue(D, C).;true;true', '7;;samebib(A, B) :- venue(B, C).;true;true', '7;true;venue(A, C), venue(D, E).;true;true', '8;;samebib(A, B) :- author(B, C).;true;true', '8;true,false,true;venue(F, E).;true;true', '8;true;venue(B, D), venue(A, D).;true;true', '8;true,false;venue(A, E).;true;true', '9;;samebib(A, B) :- author(B, C).;true;true', '9;true,false;venue(F, G).;true;true', '9;true;venue(B, D), venue(A, D).;true;true', '9;true,true;venue(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.8581489350995073;  // std dev = 0,000, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.6438632208137981;  // std dev = 3,071, 56,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=44 */
%   | | | else return 0.1650796281688206;  // std dev = 6,555, 202,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=62 */
%   | | else return 0.3053034066442231;  // std dev = 0,497, 738,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=330 */
%   else if ( title(A, H), title(B, H) )
%   | then if ( author(A, I), author(B, I) )
%   | | then return 0.8400329930705224;  // std dev = 0,133, 552,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=542 */
%   | | else return 0.8432513559561183;  // std dev = 0,121, 1.074,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1.058 */
%   | else if ( author(A, J), author(B, J) )
%   | | then return 0.0010060779566533865;  // std dev = 0,350, 868,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=124 */
%   | | else return -0.027976719350752858;  // std dev = 0,318, 3.056,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=348 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.7194734122109049;  // std dev = 1,39e-05, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.5463443246618185;  // std dev = 3,071, 56,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=44 */
%   | | | else return 0.14377325902223506;  // std dev = 6,555, 202,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=62 */
%   | | else return 0.26393663086941804;  // std dev = 0,497, 738,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=330 */
%   else if ( title(A, H), title(B, H) )
%   | then return 0.7066991106707255;  // std dev = 0,125, 1.626,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1.600 */
%   | else if ( author(A, I), author(B, I) )
%   | | then return 8.83564616335466E-4;  // std dev = 0,350, 868,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=124 */
%   | | else return -0.02460513438441301;  // std dev = 0,318, 3.056,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=348 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then if ( title(A, E), title(B, E) )
%   | | | then return 0.5553664367462875;  // std dev = 8,22e-06, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | | else return 0.21319363564690783;  // std dev = 15,467, 996,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=436 */
%   | | else if ( title(A, F), title(B, F) )
%   | | | then return 0.5464673984597302;  // std dev = 5,058, 1.626,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1.600 */
%   | | | else return -0.01672491631807275;  // std dev = 20,372, 3.924,000 (wgt'ed) examples reached here.  /* #neg=3.452 #pos=472 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then if ( title(A, F), title(B, F) )
%   | | | then return 0.41751358415831547;  // std dev = 6,68e-06, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | | else return 0.17422179350728076;  // std dev = 15,453, 996,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=436 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(G, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.4107105337262694;  // std dev = 5,058, 1.626,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1.600 */
%   | | | else return -0.014759485764285638;  // std dev = 20,372, 3.924,000 (wgt'ed) examples reached here.  /* #neg=3.452 #pos=472 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then if ( title(A, F), title(B, F) )
%   | | then return 0.3207118471601672;  // std dev = 0,000, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | else if ( author(A, G), author(B, G) )
%   | | | then return 0.11935721164339515;  // std dev = 7,478, 258,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=106 */
%   | | | else return 0.14632361701732496;  // std dev = 13,507, 738,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=330 */
%   | else if ( venue(B, H) )
%   | | then if ( author(A, I), author(B, I) )
%   | | | then return 0.12440098773990874;  // std dev = 12,172, 1.420,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=666 */
%   | | | else return 0.0686478841998593;  // std dev = 20,309, 4.130,000 (wgt'ed) examples reached here.  /* #neg=2.724 #pos=1.406 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.25517224256949683;  // std dev = 3,37e-07, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | else return 0.10956516535630911;  // std dev = 0,489, 996,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=436 */
%   | else if ( venue(A, F) )
%   | | then if ( author(G, C), venue(G, F) )
%   | | | then return 0.061763803099337544;  // std dev = 16,932, 3.088,000 (wgt'ed) examples reached here.  /* #neg=1.932 #pos=1.156 */
%   | | | else return 0.08138090191438804;  // std dev = 16,421, 2.462,000 (wgt'ed) examples reached here.  /* #neg=1.546 #pos=916 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then return 0.17639464929260612;  // std dev = 0,259, 3.719,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=3.159 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.27297844402839255;  // std dev = 0,133, 552,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=542 */
%   | | else return 0.28454346514971424;  // std dev = 0,121, 1.074,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1.058 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.019141743482403;  // std dev = 0,350, 868,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=124 */
%   | | else return -0.035160741953775956;  // std dev = 0,318, 3.056,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=348 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then if ( title(A, F), title(B, F) )
%   | | then return 0.18201109782081937;  // std dev = 3,68e-06, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | else if ( author(A, G), author(B, G) )
%   | | | then return 0.032359957109682584;  // std dev = 7,449, 258,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=106 */
%   | | | else return 0.04849675535460706;  // std dev = 13,507, 738,000 (wgt'ed) examples reached here.  /* #neg=408 #pos=330 */
%   | else if ( title(A, H), title(B, H) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.2421648414356758;  // std dev = 0,055, 380,000 (wgt'ed) examples reached here.  /* #pos=380 */
%   | | | else return 0.22050878889424297;  // std dev = 5,049, 1.246,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1.220 */
%   | | else if ( author(A, K), author(B, K) )
%   | | | then return -0.016559934323037047;  // std dev = 10,309, 868,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=124 */
%   | | | else return -0.03075638484792543;  // std dev = 17,554, 3.056,000 (wgt'ed) examples reached here.  /* #neg=2.708 #pos=348 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.15646194421180276;  // std dev = 2,22e-06, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | else return 0.033747306898758184;  // std dev = 0,489, 996,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=436 */
%   | else if ( venue(A, F) )
%   | | then if ( venue(G, F) )
%   | | | then return 0.037584144934182724;  // std dev = 22,164, 5.550,000 (wgt'ed) examples reached here.  /* #neg=3.478 #pos=2.072 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then if ( title(A, F), title(B, F) )
%   | | | then return 0.136903034059402;  // std dev = 1,07e-06, 2.723,000 (wgt'ed) examples reached here.  /* #pos=2.723 */
%   | | | else return 0.025668421040797036;  // std dev = 15,424, 996,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=436 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(G, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.18067429156013032;  // std dev = 5,058, 1.626,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1.600 */
%   | | | else return -0.02890318304008999;  // std dev = 20,360, 3.924,000 (wgt'ed) examples reached here.  /* #neg=3.452 #pos=472 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.937272
   AUC PR    = 0.968676
   CLL	      = -0.312857
   Precision = 0.980924 at threshold = 0.5
   Recall    = 0.865035
   F1        = 0.919342


Total learning time: 276.04200000000003 seconds
Total inference time: 62.172 seconds
AUC ROC: 0.937272


Refined model AUC ROC: 0.937272


Dataset: 12_uwcse_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 07:32:40
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 14641, 'Numbers preds mapping': [7], 'Possible mappings': [32], 'Generating mappings time': 0.006873369216918945, 'Total time': 1.9957375526428223, 'Generating paths time': 1.8956527709960938, 'Knowledge compiling time': 0.09320449829101562}, 'CLL': -0.312857, 'Learning time': 419.966, 'AUC PR': 0.968676, 'F1': 0.919342, 'AUC ROC': 0.937272, 'Recall': 0.865035, 'Precision': [0.980924, 0.5], 'parameter': {'CLL': -0.649593, 'Learning time': 143.924, 'AUC PR': 0.800323, 'F1': 0.518103, 'AUC ROC': 0.637371, 'Recall': 0.351904, 'Precision': [0.981791, 0.5], 'Inference time': 36.83}, 'Inference time': 62.172}


Start learning from scratch in target domain

Starting fold 2

Target predicate: samebib
Mapping Results
   Knowledge compiling time   = 0.1658010482788086
   Generating paths time   = 1.4158849716186523
   Generating mappings time   = 0.0052928924560546875
   Possible mappings   = [32]
   Max mapping   = 14641
   Numbers predicates mapping   = [7]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 1.586984395980835


Best mapping found: ['hasposition(A,B) -> author(A,B)', 'publication(A,B) -> venue(B,A)', 'advisedby(A,B) -> samebib(A,B)'] 

Transferred target predicate: samebib 

Target train facts examples: 2423
Target train pos examples: 6593
Target train neg examples: 588

Target test facts examples: 9164
Target test pos examples: 24378
Target test neg examples: 18590

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samebib(A, B) :- venue(B, C), venue(A, C).;false;false
1;;samebib(A, B) :- venue(A, J), venue(B, J).;false;false
2;;samebib(A, B) :- author(B, C).;true;true
2;false;venue(B, L).;false;false
2;true,false;author(J, C).;false;false
2;true;venue(A, H).;true;true
2;true,true;venue(B, H).;false;false
3;;samebib(A, B) :- author(B, C).;true;true
3;false;venue(B, N).;false;false
3;true,false;venue(I, J).;false;false
3;true;venue(A, D), venue(B, D).;true;true
3;true,true;venue(E, D).;false;false
4;;samebib(A, B) :- venue(A, H).;true;false
4;true;venue(B, H), venue(G, I).;false;true
4;true,false;venue(B, J).;false;false
5;;samebib(A, B) :- author(B, C).;true;false
5;true,false,true;author(M, C), venue(M, K).;false;false
5;true;venue(A, D), venue(B, D).;false;true
5;true,false,false;author(N, C).;false;false
5;true,false;venue(A, K).;true;true
6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;false
6;true,false,true;venue(J, I).;false;false
6;true;venue(D, C).;false;true
6;true,false;venue(A, I).;true;false
7;;samebib(A, B) :- venue(B, G).;true;false
7;true;venue(A, G), venue(H, I).;false;false
8;;samebib(A, B) :- author(B, C).;true;false
8;true,false,true;venue(M, L).;false;false
8;true;venue(B, D), venue(A, D).;false;true
8;true,false,false;venue(Q, R).;false;false
8;true,false;venue(A, L).;true;true
9;;samebib(A, B) :- author(B, C).;true;true
9;false;venue(B, N).;false;false
9;true,false;venue(I, J).;false;false
9;true;venue(B, D), venue(A, D).;true;true
9;true,true;venue(E, D).;false;false


WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.8507824525949031;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   else return 0.7309657734335869;  // std dev = 22,266, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.7135913107593423;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   else return 0.6172300473773709;  // std dev = 22,266, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then return 0.5512690416802464;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | | else return 0.4838849463256525;  // std dev = 22,266, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.4143715126142733;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.3647973343279404;  // std dev = 22,266, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then return 0.31782510301149647;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | else if ( venue(B, F) )
%   | | then return 0.2748794784446862;  // std dev = 22,266, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.2522737246322341;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | else if ( venue(A, E) )
%   | | then if ( author(F, C), venue(F, E) )
%   | | | then return 0.2057705224516604;  // std dev = 15,890, 2.199,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=1.908 */
%   | | | else return 0.2159154874907099;  // std dev = 15,593, 2.267,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=1.990 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then return 0.20677949290121939;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16544111897874533;  // std dev = 22,265, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then return 0.1740332781503795;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | else return 0.13240450683661098;  // std dev = 22,265, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then return 0.14960641871954347;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | else if ( venue(A, E) )
%   | | then if ( venue(F, E) )
%   | | | then return 0.10777615633922487;  // std dev = 22,265, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.13080838662703684;  // std dev = 4,456, 2.715,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2.695 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.08895883544659944;  // std dev = 22,265, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.697325
   AUC PR    = 0.781876
   CLL	      = -0.80779
   Precision = 0.567352 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.723963


Total learning time: 80.644 seconds
Total inference time: 23.179 seconds
AUC ROC: 0.697325


Structure after Parameter Learning
[['samebib(A, B)', {'': 'venue(B, C), venue(A, C)'}, {'false': [22.266, 568, 3898], 'true': [4.456, 20, 2695]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'false': [22.266, 568, 3898], 'true': [4.456, 20, 2695]}], ['samebib(A, B)', {'': 'author(B, C)', 'true': 'venue(A, D)', 'true,true': 'venue(B, D)'}, {'true,true,true': [4.456, 20, 2695], 'false': [0.0, 0, 0], 'true,true,false': [22.266, 568, 3898], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [22.266, 568, 3898], 'true,true,true': [4.456, 20, 2695], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(A, C)', 'true': 'venue(B, C), venue(D, E)', 'true,false': 'venue(B, F)'}, {'true,false,true': [22.266, 568, 3898], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [4.456, 20, 2695]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'author(F, C), venue(F, E)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [15.593, 277, 1990], 'true,true': [4.456, 20, 2695], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [15.89, 291, 1908]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)', 'true': 'venue(D, C)'}, {'false': [22.265, 568, 3898], 'true,true': [4.456, 20, 2695], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(B, C)', 'true': 'venue(A, C), venue(D, E)'}, {'false': [0.0, 0, 0], 'true,true': [4.456, 20, 2695], 'true,false': [22.265, 568, 3898]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'venue(F, E)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [4.456, 20, 2695], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [22.265, 568, 3898]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [22.265, 568, 3898], 'true,true,true': [4.456, 20, 2695], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.007312217440082817, 0.11100760505461431]}, {'': [0.007312217440033657, 0.11100760505456436]}, {'': [0.07287000562139255, nan], 'true': [0.07287000562139255, nan], 'true,true': [0.007312217440075238, 0.11100760505453916]}, {'': [0.07238021378121093, nan], 'true,true': [0.007312217440105512, nan], 'true': [0.007312217440105512, 0.11100760505461241], 'true,false': [0.11100760505461241, nan]}, {'': [0.07223601148424837, nan], 'true': [0.007312217440103733, 0.11100760505454882], 'true,false': [0.11100760505454882, nan]}, {'': [0.07220445251936307, nan], 'true,false,true': [0.11482088782758879, 0.10725802732634176], 'true': [0.00731221744010836, 0.11100760505458095], 'true,false': [0.11100760505458095, nan]}, {'': [0.007312217440120178, 0.11099805747227738], 'true': [0.007312217440120178, nan]}, {'': [0.07220426495081145, nan], 'true': [0.00731221744011563, 0.11099866662858138]}, {'': [0.07220854327713294, nan], 'true,false,true': [0.11099918795778127, nan], 'true': [0.007312217440110106, 0.11099918795778127], 'true,false': [0.11099918795778127, nan]}, {'': [0.07220919558936856, nan], 'true,true': [0.007312217440112324, nan], 'true': [0.007312217440112324, 0.11099962657367902], 'true,false': [0.11099962657367902, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;samebib(A, B) :- venue(B, C), venue(A, C).;true;true', '1;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '2;;samebib(A, B) :- author(B, C).;true;true', '2;true;venue(A, D).;true;true', '2;true,true;venue(B, D).;true;true', '3;;samebib(A, B) :- author(B, C).;true;true', '3;true,false;venue(F, G).;true;true', '3;true;venue(A, D), venue(B, D).;true;true', '3;true,true;venue(E, D).;true;true', '4;;samebib(A, B) :- venue(A, C).;true;true', '4;true;venue(B, C), venue(D, E).;true;true', '4;true,false;venue(B, F).;true;true', '5;;samebib(A, B) :- author(B, C).;true;true', '5;true,false,true;author(F, C), venue(F, E).;true;true', '5;true;venue(A, D), venue(B, D).;true;true', '5;true,false;venue(A, E).;true;true', '6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '6;true;venue(D, C).;true;true', '7;;samebib(A, B) :- venue(B, C).;true;true', '7;true;venue(A, C), venue(D, E).;true;true', '8;;samebib(A, B) :- author(B, C).;true;true', '8;true,false,true;venue(F, E).;true;true', '8;true;venue(B, D), venue(A, D).;true;true', '8;true,false;venue(A, E).;true;true', '9;;samebib(A, B) :- author(B, C).;true;true', '9;true,false;venue(F, G).;true;true', '9;true;venue(B, D), venue(A, D).;true;true', '9;true,true;venue(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.8581489350995073;  // std dev = 0,000, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.858148935099511;  // std dev = 5,46e-07, 110,000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return 0.7730425521207882;  // std dev = 2,705, 94,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=86 */
%   | | else return 0.7987429945054497;  // std dev = 0,236, 202,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=190 */
%   else if ( title(A, H), title(B, H) )
%   | then return 0.8581489350995072;  // std dev = 0,000, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | else return 0.46150089040676995;  // std dev = 0,489, 1.432,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=864 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.7194734122109155;  // std dev = 1,14e-05, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.7194734122109548;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return 0.6512192256228446;  // std dev = 2,705, 94,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=86 */
%   | | else return 0.6718997085241697;  // std dev = 0,236, 202,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=190 */
%   else if ( title(A, H), title(B, H) )
%   | then return 0.7194734122108989;  // std dev = 1,56e-05, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | else if ( author(A, I), author(B, I) )
%   | | then return 0.303658537321781;  // std dev = 0,500, 438,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=224 */
%   | | else return 0.4361061912820696;  // std dev = 0,479, 994,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=640 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then if ( title(A, E), title(B, E) )
%   | | | then return 0.5553664367462955;  // std dev = 5,73e-06, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | | else return 0.5278362645937555;  // std dev = 4,328, 406,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=386 */
%   | | else if ( title(A, F), title(B, F) )
%   | | | then return 0.5553664367462812;  // std dev = 1,01e-05, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | | | else return 0.3228715668824111;  // std dev = 18,460, 1.432,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=864 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then if ( title(A, F), title(B, F) )
%   | | | then return 0.4175135841583146;  // std dev = 0,000, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | | else return 0.3968146721894168;  // std dev = 4,328, 406,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=386 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(G, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.4175135841583155;  // std dev = 7,47e-06, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | | | else return 0.25344813308242026;  // std dev = 18,455, 1.432,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=864 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then if ( title(A, F), title(B, F) )
%   | | then return 0.32071184716016643;  // std dev = 0,000, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | else if ( author(A, G), author(B, G) )
%   | | | then return 0.3081318366701441;  // std dev = 2,729, 204,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=196 */
%   | | | else return 0.2960152308549061;  // std dev = 3,360, 202,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=190 */
%   | else if ( venue(B, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.3207118471601684;  // std dev = 0,000, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | | | else return 0.19390034677595985;  // std dev = 18,451, 1.432,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=864 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.2551722425694894;  // std dev = 1,90e-06, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | else return 0.23674058700693118;  // std dev = 0,215, 406,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=386 */
%   | else if ( venue(A, F) )
%   | | then if ( author(G, C), venue(G, F) )
%   | | | then return 0.21414238583756087;  // std dev = 13,108, 2.199,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=1.908 */
%   | | | else return 0.22624558554822635;  // std dev = 13,414, 2.267,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=1.990 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.2097577156325316;  // std dev = 3,03e-06, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | else if ( author(A, F), author(B, F) )
%   | | | then return 0.1967479878633583;  // std dev = 2,736, 204,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=196 */
%   | | | else return 0.18511530559507733;  // std dev = 3,360, 202,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=190 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( title(A, G), title(B, G) )
%   | then return 0.2156237363238312;  // std dev = 0,056, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | else if ( author(A, H), author(B, H) )
%   | | then return 0.024032381127322852;  // std dev = 0,500, 438,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=224 */
%   | | else return 0.12107022207488552;  // std dev = 0,479, 994,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=640 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then if ( title(A, F), title(B, F) )
%   | | then return 0.17709649774527114;  // std dev = 2,78e-06, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | else if ( author(A, G), author(B, G) )
%   | | | then return 0.16316385041241985;  // std dev = 2,739, 204,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=196 */
%   | | | else return 0.1525518059891928;  // std dev = 3,360, 202,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=190 */
%   | else if ( title(A, H), title(B, H) )
%   | | then return 0.18138732453335019;  // std dev = 0,049, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | | else if ( author(A, I), author(B, I) )
%   | | | then return 0.018026579457847806;  // std dev = 10,461, 438,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=224 */
%   | | | else return 0.09098552087909284;  // std dev = 15,099, 994,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=640 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.15274385809368105;  // std dev = 0,000, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | else return 0.13317870192797351;  // std dev = 0,215, 406,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=386 */
%   | else if ( venue(A, F) )
%   | | then if ( venue(G, F) )
%   | | | then return 0.1225715281002629;  // std dev = 18,679, 4.466,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=3.898 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then if ( title(A, F), title(B, F) )
%   | | | then return 0.13400703000801348;  // std dev = 0,000, 2.309,000 (wgt'ed) examples reached here.  /* #pos=2.309 */
%   | | | else return 0.11415777701028607;  // std dev = 4,339, 406,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=386 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(G, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.140525312048644;  // std dev = 0,040, 3.034,000 (wgt'ed) examples reached here.  /* #pos=3.034 */
%   | | | else return 0.021828559986124412;  // std dev = 18,395, 1.432,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=864 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.944181
   AUC PR    = 0.966206
   CLL	      = -0.506939
   Precision = 0.567352 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.723963


Total learning time: 132.806 seconds
Total inference time: 72.901 seconds
AUC ROC: 0.944181


Refined model AUC ROC: 0.944181


Dataset: 12_uwcse_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 07:37:53
{'Mapping results': {'Finding best mapping': 7.152557373046875e-07, 'Max mapping': 14641, 'Numbers preds mapping': [7], 'Possible mappings': [32], 'Generating mappings time': 0.0052928924560546875, 'Total time': 1.586984395980835, 'Generating paths time': 1.4158849716186523, 'Knowledge compiling time': 0.1658010482788086}, 'CLL': -0.506939, 'Learning time': 213.45000000000002, 'AUC PR': 0.966206, 'F1': 0.723963, 'AUC ROC': 0.944181, 'Recall': 1.0, 'Precision': [0.567352, 0.5], 'parameter': {'CLL': -0.80779, 'Learning time': 80.644, 'AUC PR': 0.781876, 'F1': 0.723963, 'AUC ROC': 0.697325, 'Recall': 1.0, 'Precision': [0.567352, 0.5], 'Inference time': 23.179}, 'Inference time': 72.901}


Start learning from scratch in target domain

Starting fold 3

Target predicate: samebib
Mapping Results
   Knowledge compiling time   = 0.1887965202331543
   Generating paths time   = 1.6734411716461182
   Generating mappings time   = 0.005258321762084961
   Possible mappings   = [32]
   Max mapping   = 14641
   Numbers predicates mapping   = [7]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 1.8675034046173096


Best mapping found: ['hasposition(A,B) -> author(A,B)', 'publication(A,B) -> venue(B,A)', 'advisedby(A,B) -> samebib(A,B)'] 

Transferred target predicate: samebib 

Target train facts examples: 2252
Target train pos examples: 7054
Target train neg examples: 7054

Target test facts examples: 9335
Target test pos examples: 23917
Target test neg examples: 12124

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samebib(A, B) :- venue(B, C), venue(A, C).;false;false
1;;samebib(A, B) :- venue(A, J), venue(B, J).;false;false
2;;samebib(A, B) :- author(B, C).;true;true
2;false;venue(B, L).;false;false
2;true,false;author(J, C).;false;false
2;true;venue(A, H).;true;true
2;true,true;venue(B, H).;false;false
3;;samebib(A, B) :- author(B, C).;true;true
3;false;venue(B, N).;false;false
3;true,false;venue(I, J).;false;false
3;true;venue(A, D), venue(B, D).;true;true
3;true,true;venue(E, D).;false;false
4;;samebib(A, B) :- venue(A, H).;true;false
4;true;venue(B, H), venue(G, I).;false;true
4;true,false;venue(B, J).;false;false
5;;samebib(A, B) :- author(B, C).;true;false
5;true,false,true;author(M, C), venue(M, K).;false;false
5;true;venue(A, D), venue(B, D).;false;true
5;true,false,false;author(N, C).;false;false
5;true,false;venue(A, K).;true;true
6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;false
6;true,false,true;venue(J, I).;false;false
6;true;venue(D, C).;false;true
6;true,false;venue(A, I).;true;false
7;;samebib(A, B) :- venue(B, G).;true;false
7;true;venue(A, G), venue(H, I).;false;false
8;;samebib(A, B) :- author(B, C).;true;false
8;true,false,true;venue(M, L).;false;false
8;true;venue(B, D), venue(A, D).;false;true
8;true,false,false;venue(Q, R).;false;false
8;true,false;venue(A, L).;true;true
9;;samebib(A, B) :- author(B, C).;true;true
9;false;venue(B, N).;false;false
9;true,false;venue(I, J).;false;false
9;true;venue(B, D), venue(A, D).;true;true
9;true,true;venue(E, D).;false;false


WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.8581489350995073;  // std dev = 1,72e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   else return 0.2891861991745055;  // std dev = 55,141, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.71947341221094;  // std dev = 5,95e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   else return 0.250219044847352;  // std dev = 55,141, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then return 0.5553664367463097;  // std dev = 0,000, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | | else return 0.21016573879305103;  // std dev = 55,141, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.4175135841583136;  // std dev = 0,000, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.17189453782202732;  // std dev = 55,141, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then return 0.32071184716015644;  // std dev = 0,000, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | else if ( venue(B, F) )
%   | | then return 0.1375557012630122;  // std dev = 55,141, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.2551722425694762;  // std dev = 3,18e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | else if ( venue(A, E) )
%   | | then if ( author(F, C), venue(F, E) )
%   | | | then return 0.07996671417010066;  // std dev = 45,570, 8.633,000 (wgt'ed) examples reached here.  /* #neg=5.156 #pos=3.477 */
%   | | | else return 0.17309298510085888;  // std dev = 30,679, 3.765,000 (wgt'ed) examples reached here.  /* #neg=1.898 #pos=1.867 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then return 0.20975771563253534;  // std dev = 1,03e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08408318972645867;  // std dev = 55,058, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then return 0.17709649774527642;  // std dev = 0,000, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | else return 0.06480332049182878;  // std dev = 55,056, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then return 0.15274385809366497;  // std dev = 1,67e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | else if ( venue(A, E) )
%   | | then if ( venue(F, E) )
%   | | | then return 0.049642487707393414;  // std dev = 55,055, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.1340070300080087;  // std dev = 1,48e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.037868454672659195;  // std dev = 55,054, 12.398,000 (wgt'ed) examples reached here.  /* #neg=7.054 #pos=5.344 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.706065
   AUC PR    = 0.837571
   CLL	      = -0.579343
   Precision = 0.935202 at threshold = 0.5
   Recall    = 0.439311
   F1        = 0.597804


Total learning time: 216.685 seconds
Total inference time: 22.023 seconds
AUC ROC: 0.706065


Structure after Parameter Learning
[['samebib(A, B)', {'': 'venue(B, C), venue(A, C)'}, {'false': [55.141, 7054, 5344], 'true': [1.72e-06, 0, 1710]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'false': [55.141, 7054, 5344], 'true': [5.95e-06, 0, 1710]}], ['samebib(A, B)', {'': 'author(B, C)', 'true': 'venue(A, D)', 'true,true': 'venue(B, D)'}, {'true,true,true': [0.0, 0, 1710], 'false': [0.0, 0, 0], 'true,true,false': [55.141, 7054, 5344], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [55.141, 7054, 5344], 'true,true,true': [0.0, 0, 1710], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(A, C)', 'true': 'venue(B, C), venue(D, E)', 'true,false': 'venue(B, F)'}, {'true,false,true': [55.141, 7054, 5344], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1710]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'author(F, C), venue(F, E)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [30.679, 1898, 1867], 'true,true': [3.18e-06, 0, 1710], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [45.57, 5156, 3477]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)', 'true': 'venue(D, C)'}, {'false': [55.058, 7054, 5344], 'true,true': [1.03e-06, 0, 1710], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(B, C)', 'true': 'venue(A, C), venue(D, E)'}, {'false': [0.0, 0, 0], 'true,true': [0.0, 0, 1710], 'true,false': [55.056, 7054, 5344]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'venue(F, E)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [1.67e-06, 0, 1710], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [55.055, 7054, 5344]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [55.054, 7054, 5344], 'true,true,true': [1.48e-06, 0, 1710], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [1.7285718016152145e-15, 0.24524414105373565]}, {'': [2.067637808855122e-14, 0.24524414105368028]}, {'': [0.2282115119347576, nan], 'true': [0.2282115119347576, nan], 'true,true': [-3.330824894650856e-14, 0.2452441410537388]}, {'': [0.22194463500868478, nan], 'true,true': [-4.088737146128296e-15, nan], 'true': [-4.088737146128296e-15, 0.2452441410538016], 'true,false': [0.2452441410538016, nan]}, {'': [0.2190918526684045, nan], 'true': [-2.5596159370071445e-15, 0.24524414105367462], 'true,false': [0.24524414105367462, nan]}, {'': [0.21781800273769175, nan], 'true,false,true': [0.24054377234520036, 0.24998305141540889], 'true': [5.908723802636623e-15, 0.2452441410536034], 'true,false': [0.2452441410536034, nan]}, {'': [6.149726601900282e-16, 0.2445038461148828], 'true': [6.149726601900282e-16, nan]}, {'': [0.21619782963005577, nan], 'true': [-1.1925483342874197e-15, 0.24448861599095162]}, {'': [0.21597778524708577, nan], 'true,false,true': [0.2444781970237168, nan], 'true': [1.628846505368183e-15, 0.2444781970237168], 'true,false': [0.2444781970237168, nan]}, {'': [0.2158237257180099, nan], 'true,true': [1.2798079685035722e-15, nan], 'true': [1.2798079685035722e-15, 0.24447103636649622], 'true,false': [0.24447103636649622, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;samebib(A, B) :- venue(B, C), venue(A, C).;true;true', '1;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '2;;samebib(A, B) :- venue(B, D).;true;true', '3;;samebib(A, B) :- venue(A, D), venue(B, D).;true;true', '4;;samebib(A, B) :- venue(B, C), venue(D, E).;true;true', '5;;samebib(A, B) :- venue(A, D), venue(B, D).;true;true', '6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '7;;samebib(A, B) :- venue(A, C), venue(D, E).;true;true', '8;;samebib(A, B) :- venue(B, D), venue(A, D).;true;true', '9;;samebib(A, B) :- venue(B, D), venue(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.8581489350995073;  // std dev = 1,72e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   else if ( title(A, D), title(B, D) )
%   | then if ( author(A, E), author(B, E) )
%   | | then return 0.8316802456224254;  // std dev = 0,161, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.8364384087837178;  // std dev = 0,146, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, F), author(B, F) )
%   | | then return -0.024950597298620633;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.035516693145559254;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.71947341221094;  // std dev = 5,95e-06, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   else if ( title(A, D), title(B, D) )
%   | then if ( author(A, E), author(B, E) )
%   | | then return 0.698315773069036;  // std dev = 0,161, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.7021238017336434;  // std dev = 0,146, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, F), author(B, F) )
%   | | then return -0.021940432629808975;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.031248016928196794;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then if ( haswordtitle(D, E), haswordauthor(F, E) )
%   | | then if ( author(A, G), author(B, G) )
%   | | | then return 0.5233683772383186;  // std dev = 6,250, 1.042,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.001 */
%   | | | else return 0.5225255238643881;  // std dev = 7,945, 1.610,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1.544 */
%   | | else return 0.563170825696642;  // std dev = 0,266, 3.413,000 (wgt'ed) examples reached here.  /* #pos=3.413 */
%   | else if ( author(A, H), author(B, H) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return -0.1362383391102466;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.002098195092419687;  // std dev = 18,538, 3.080,000 (wgt'ed) examples reached here.  /* #neg=2.620 #pos=460 */
%   | | else return -0.012946464684053421;  // std dev = 0,318, 4.939,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=636 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.438569897792716;  // std dev = 1,956, 1.710,000 (wgt'ed) examples reached here.  /* #pos=1.710 */
%   else if ( title(A, D), title(B, D) )
%   | then if ( author(A, E), author(B, E) )
%   | | then return 0.40487738720317745;  // std dev = 0,160, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.40789335276878197;  // std dev = 0,145, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, F), author(B, F) )
%   | | then return -0.019460723397723846;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.02608768037186604;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(B, C), venue(D, E) )
%   then if ( title(A, F), title(B, F) )
%   | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | then if ( author(A, I), author(B, I) )
%   | | | then return 0.29505464167954526;  // std dev = 6,238, 1.042,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.001 */
%   | | | else return 0.29537201955331266;  // std dev = 7,939, 1.610,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1.544 */
%   | | else return 0.3266032572188502;  // std dev = 0,410, 3.413,000 (wgt'ed) examples reached here.  /* #pos=3.413 */
%   | else if ( author(A, J), author(B, J) )
%   | | then return -7.833366251191894E-4;  // std dev = 0,327, 3.104,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=460 */
%   | | else return -0.011256921380409214;  // std dev = 0,313, 4.939,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=636 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.25447720490050646;  // std dev = 0,259, 1.476,000 (wgt'ed) examples reached here.  /* #pos=1.476 */
%   | else return 0.44918198605536713;  // std dev = 0,048, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.24359813903563124;  // std dev = 0,159, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.24650722491536223;  // std dev = 0,145, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.0170941851424658;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.02185587360010086;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.20927606651929173;  // std dev = 0,226, 1.476,000 (wgt'ed) examples reached here.  /* #pos=1.476 */
%   | else return 0.34228206906568714;  // std dev = 0,044, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.1983460794751221;  // std dev = 0,159, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.2009666499878508;  // std dev = 0,145, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.015122986643414264;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.019433100116341726;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(A, C), venue(D, E) )
%   then if ( title(A, F), title(B, F) )
%   | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | then if ( author(A, I), author(B, I) )
%   | | | then return 0.15328793919074124;  // std dev = 6,242, 1.042,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.001 */
%   | | | else return 0.15293558260211276;  // std dev = 7,941, 1.610,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1.544 */
%   | | else return 0.18244147422088478;  // std dev = 0,346, 3.413,000 (wgt'ed) examples reached here.  /* #pos=3.413 */
%   | else if ( author(A, J), author(B, J) )
%   | | then return -0.0034563783190749184;  // std dev = 0,320, 3.104,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=460 */
%   | | else return -0.010043170739681473;  // std dev = 0,308, 4.939,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=636 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.15343488827716384;  // std dev = 0,250, 1.476,000 (wgt'ed) examples reached here.  /* #pos=1.476 */
%   | else return 0.27121970475711815;  // std dev = 0,048, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.14069781145040194;  // std dev = 0,159, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.14352131489513545;  // std dev = 0,145, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.013008467024364468;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.016227773662547313;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.13455180844000947;  // std dev = 0,224, 1.476,000 (wgt'ed) examples reached here.  /* #pos=1.476 */
%   | else return 0.2210341608397138;  // std dev = 0,042, 234,000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.12202116814864038;  // std dev = 0,159, 1.549,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1.508 */
%   | | else return 0.12466980232753275;  // std dev = 0,145, 3.040,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2.974 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.011545174153549607;  // std dev = 0,321, 2.994,000 (wgt'ed) examples reached here.  /* #neg=2.644 #pos=350 */
%   | | else return -0.014493289811607427;  // std dev = 0,308, 4.815,000 (wgt'ed) examples reached here.  /* #neg=4.303 #pos=512 */


Results
   AUC ROC   = 0.939636
   AUC PR    = 0.973406
   CLL	      = -0.308967
   Precision = 0.95501 at threshold = 0.5
   Recall    = 0.901744
   F1        = 0.927613


Total learning time: 1170.233 seconds
Total inference time: 707.306 seconds
AUC ROC: 0.939636


Refined model AUC ROC: 0.939636


Dataset: 12_uwcse_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 08:13:13
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 14641, 'Numbers preds mapping': [7], 'Possible mappings': [32], 'Generating mappings time': 0.005258321762084961, 'Total time': 1.8675034046173096, 'Generating paths time': 1.6734411716461182, 'Knowledge compiling time': 0.1887965202331543}, 'CLL': -0.308967, 'Learning time': 1386.918, 'AUC PR': 0.973406, 'F1': 0.927613, 'AUC ROC': 0.939636, 'Recall': 0.901744, 'Precision': [0.95501, 0.5], 'parameter': {'CLL': -0.579343, 'Learning time': 216.685, 'AUC PR': 0.837571, 'F1': 0.597804, 'AUC ROC': 0.706065, 'Recall': 0.439311, 'Precision': [0.935202, 0.5], 'Inference time': 22.023}, 'Inference time': 707.306}


Start learning from scratch in target domain

Starting fold 4

Target predicate: samebib
Mapping Results
   Knowledge compiling time   = 0.1526014804840088
   Generating paths time   = 1.545788288116455
   Generating mappings time   = 0.005281209945678711
   Possible mappings   = [32]
   Max mapping   = 14641
   Numbers predicates mapping   = [7]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 1.7036771774291992


Best mapping found: ['hasposition(A,B) -> author(A,B)', 'publication(A,B) -> venue(B,A)', 'advisedby(A,B) -> samebib(A,B)'] 

Transferred target predicate: samebib 

Target train facts examples: 2478
Target train pos examples: 5651
Target train neg examples: 4504

Target test facts examples: 9109
Target test pos examples: 25320
Target test neg examples: 14674

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samebib(A, B) :- venue(B, C), venue(A, C).;false;false
1;;samebib(A, B) :- venue(A, J), venue(B, J).;false;false
2;;samebib(A, B) :- author(B, C).;true;true
2;false;venue(B, L).;false;false
2;true,false;author(J, C).;false;false
2;true;venue(A, H).;true;true
2;true,true;venue(B, H).;false;false
3;;samebib(A, B) :- author(B, C).;true;true
3;false;venue(B, N).;false;false
3;true,false;venue(I, J).;false;false
3;true;venue(A, D), venue(B, D).;true;true
3;true,true;venue(E, D).;false;false
4;;samebib(A, B) :- venue(A, H).;true;false
4;true;venue(B, H), venue(G, I).;false;true
4;true,false;venue(B, J).;false;false
5;;samebib(A, B) :- author(B, C).;true;false
5;true,false,true;author(M, C), venue(M, K).;false;false
5;true;venue(A, D), venue(B, D).;false;true
5;true,false,false;author(N, C).;false;false
5;true,false;venue(A, K).;true;true
6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;false
6;true,false,true;venue(J, I).;false;false
6;true;venue(D, C).;false;true
6;true,false;venue(A, I).;true;false
7;;samebib(A, B) :- venue(B, G).;true;false
7;true;venue(A, G), venue(H, I).;false;false
8;;samebib(A, B) :- author(B, C).;true;false
8;true,false,true;venue(M, L).;false;false
8;true;venue(B, D), venue(A, D).;false;true
8;true,false,false;venue(Q, R).;false;false
8;true,false;venue(A, L).;true;true
9;;samebib(A, B) :- author(B, C).;true;true
9;false;venue(B, N).;false;false
9;true,false;venue(I, J).;false;false
9;true;venue(B, D), venue(A, D).;true;true
9;true,true;venue(E, D).;false;false


WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.8581489350995074;  // std dev = 4,45e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   else return 0.3369732813156608;  // std dev = 46,439, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.7194734122109523;  // std dev = 2,13e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   else return 0.290819513285858;  // std dev = 46,439, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then return 0.5553664367463053;  // std dev = 0,000, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | | else return 0.2423680929432204;  // std dev = 46,439, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.417513584158312;  // std dev = 0,000, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.19586698997436877;  // std dev = 46,439, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then return 0.3207118471601548;  // std dev = 0,000, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | else if ( venue(B, F) )
%   | | then return 0.15450066777919857;  // std dev = 46,439, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.25517224256947674;  // std dev = 2,88e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | else if ( venue(A, E) )
%   | | then if ( author(F, C), venue(F, E) )
%   | | | then return 0.07886047094598471;  // std dev = 32,229, 4.220,000 (wgt'ed) examples reached here.  /* #neg=2.372 #pos=1.848 */
%   | | | else return 0.15881099836058976;  // std dev = 33,228, 4.422,000 (wgt'ed) examples reached here.  /* #neg=2.132 #pos=2.290 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then return 0.20975771563252585;  // std dev = 2,21e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09172483183010385;  // std dev = 46,377, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then return 0.1770964977452794;  // std dev = 7,10e-07, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | else return 0.06975911881273177;  // std dev = 46,376, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then return 0.1527438580936653;  // std dev = 1,52e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | else if ( venue(A, E) )
%   | | then if ( venue(F, E) )
%   | | | then return 0.052802076857748216;  // std dev = 46,376, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.1340070300080089;  // std dev = 1,35e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.039848012432733906;  // std dev = 46,375, 8.642,000 (wgt'ed) examples reached here.  /* #neg=4.504 #pos=4.138 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.711318
   AUC PR    = 0.825793
   CLL	      = -0.572527
   Precision = 0.936319 at threshold = 0.5
   Recall    = 0.422749
   F1        = 0.582499


Total learning time: 144.212 seconds
Total inference time: 24.275 seconds
AUC ROC: 0.711318


Structure after Parameter Learning
[['samebib(A, B)', {'': 'venue(B, C), venue(A, C)'}, {'false': [46.439, 4504, 4138], 'true': [4.45e-06, 0, 1513]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'false': [46.439, 4504, 4138], 'true': [2.13e-06, 0, 1513]}], ['samebib(A, B)', {'': 'author(B, C)', 'true': 'venue(A, D)', 'true,true': 'venue(B, D)'}, {'true,true,true': [0.0, 0, 1513], 'false': [0.0, 0, 0], 'true,true,false': [46.439, 4504, 4138], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [46.439, 4504, 4138], 'true,true,true': [0.0, 0, 1513], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(A, C)', 'true': 'venue(B, C), venue(D, E)', 'true,false': 'venue(B, F)'}, {'true,false,true': [46.439, 4504, 4138], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1513]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'author(F, C), venue(F, E)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [33.228, 2132, 2290], 'true,true': [2.88e-06, 0, 1513], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [32.229, 2372, 1848]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)', 'true': 'venue(D, C)'}, {'false': [46.377, 4504, 4138], 'true,true': [2.21e-06, 0, 1513], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(B, C)', 'true': 'venue(A, C), venue(D, E)'}, {'false': [0.0, 0, 0], 'true,true': [7.1e-07, 0, 1513], 'true,false': [46.376, 4504, 4138]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'venue(F, E)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [1.52e-06, 0, 1513], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [46.376, 4504, 4138]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [46.375, 4504, 4138], 'true,true,true': [1.35e-06, 0, 1513], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [1.3074362038044408e-14, 0.2495515916869126]}, {'': [3.005600468515956e-15, 0.24955159168697033]}, {'': [0.224792335464129, nan], 'true': [0.224792335464129, nan], 'true,true': [-2.9116754538748324e-14, 0.24955159168674126]}, {'': [0.2185996978918545, nan], 'true,true': [-5.635500878467417e-16, nan], 'true': [-5.635500878467417e-16, 0.24955159168676425], 'true,false': [0.24955159168676425, nan]}, {'': [0.21587352662458933, nan], 'true': [-1.9348553016071464e-15, 0.24955159168675026], 'true,false': [0.24955159168675026, nan]}, {'': [0.21469531773627348, nan], 'true,false,true': [0.24614541452347344, 0.24968083393729268], 'true': [5.48522085504162e-15, 0.24955159168689217], 'true,false': [0.24955159168689217, nan]}, {'': [3.2310205036546526e-15, 0.24888384660490281], 'true': [3.2310205036546526e-15, nan]}, {'': [0.21325401905164382, nan], 'true': [3.3343380197598887e-16, 0.2488729442459178]}, {'': [0.2130538817184244, nan], 'true,false,true': [0.24886616352411847, nan], 'true': [1.5356739893823713e-15, 0.24886616352411847], 'true,false': [0.24886616352411847, nan]}, {'': [0.21290796467891177, nan], 'true,true': [1.1975439366743261e-15, nan], 'true': [1.1975439366743261e-15, 0.24886193294509892], 'true,false': [0.24886193294509892, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;samebib(A, B) :- venue(B, C), venue(A, C).;true;true', '1;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '2;;samebib(A, B) :- venue(B, D).;true;true', '3;;samebib(A, B) :- venue(A, D), venue(B, D).;true;true', '4;;samebib(A, B) :- venue(B, C), venue(D, E).;true;true', '5;;samebib(A, B) :- venue(A, D), venue(B, D).;true;true', '6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '7;;samebib(A, B) :- venue(A, C), venue(D, E).;true;true', '8;;samebib(A, B) :- venue(B, D), venue(A, D).;true;true', '9;;samebib(A, B) :- venue(B, D), venue(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.8581489350995074;  // std dev = 4,45e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   else if ( title(A, D), title(B, D) )
%   | then return 0.8576027854545044;  // std dev = 1,414, 3.662,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3.660 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return -0.05329520658986239;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.04276222663169861;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.7194734122109523;  // std dev = 2,13e-06, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   else if ( title(A, D), title(B, D) )
%   | then return 0.719037479511168;  // std dev = 1,414, 3.662,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3.660 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return -0.04693060772341178;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.03763609803098914;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.555147241697386;  // std dev = 1,414, 5.073,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5.071 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordvenue(G, F) )
%   | | | then return -0.03837233086186964;  // std dev = 9,274, 1.048,000 (wgt'ed) examples reached here.  /* #neg=950 #pos=98 */
%   | | | else return -0.001654233104890187;  // std dev = 6,676, 456,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=68 */
%   | | else return -0.022396556786974088;  // std dev = 0,306, 3.578,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=414 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.4271432817162445;  // std dev = 1,386, 1.513,000 (wgt'ed) examples reached here.  /* #pos=1.513 */
%   else if ( title(A, D), title(B, D) )
%   | then return 0.4172596092759979;  // std dev = 1,414, 3.662,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3.660 */
%   | else if ( author(A, E), author(B, E) )
%   | | then return -0.038434097082220765;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.0307036375730291;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(B, C), venue(D, E) )
%   then if ( title(A, F), title(B, F) )
%   | then return 0.3199772606149553;  // std dev = 1,415, 5.073,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5.071 */
%   | else if ( author(A, G), author(B, G) )
%   | | then if ( haswordauthor(G, H), haswordvenue(I, H) )
%   | | | then return -0.030527926921842967;  // std dev = 9,237, 1.048,000 (wgt'ed) examples reached here.  /* #neg=950 #pos=98 */
%   | | | else return -0.004450452732712542;  // std dev = 6,421, 456,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=68 */
%   | | else return -0.018387542512992534;  // std dev = 0,303, 3.578,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=414 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.2535268088494909;  // std dev = 2,32e-06, 1.411,000 (wgt'ed) examples reached here.  /* #pos=1.411 */
%   | else return 0.4569783359738534;  // std dev = 0,045, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( title(A, E), title(B, E) )
%   | then return 0.2550425154010434;  // std dev = 1,414, 3.662,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3.660 */
%   | else if ( author(A, F), author(B, F) )
%   | | then return -0.03180389229654299;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.02525900969575095;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.20859472492217304;  // std dev = 0,000, 1.411,000 (wgt'ed) examples reached here.  /* #pos=1.411 */
%   | else return 0.3476339361286709;  // std dev = 0,041, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( title(A, E), title(B, E) )
%   | then return 0.20959631474645035;  // std dev = 1,414, 3.662,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3.660 */
%   | else if ( author(A, F), author(B, F) )
%   | | then return -0.028477442181929134;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.022534665848374394;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(A, C), venue(D, E) )
%   then if ( title(A, F), title(B, F) )
%   | then if ( author(A, G), author(B, G) )
%   | | then return 0.1768907566652439;  // std dev = 0,026, 1.835,000 (wgt'ed) examples reached here.  /* #pos=1.835 */
%   | | else return 0.17663274890069067;  // std dev = 0,025, 3.238,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3.236 */
%   | else if ( author(A, H), author(B, H) )
%   | | then if ( haswordauthor(H, I), haswordvenue(J, I) )
%   | | | then return -0.0222253361458002;  // std dev = 9,189, 1.048,000 (wgt'ed) examples reached here.  /* #neg=950 #pos=98 */
%   | | | else return -0.009882098017385366;  // std dev = 6,091, 456,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=68 */
%   | | else return -0.014700433668297328;  // std dev = 0,299, 3.578,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=414 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.15202565209483498;  // std dev = 0,000610, 1.411,000 (wgt'ed) examples reached here.  /* #pos=1.411 */
%   | else return 0.2762150395993144;  // std dev = 0,042, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.1530918779770146;  // std dev = 0,000, 978,000 (wgt'ed) examples reached here.  /* #pos=978 */
%   | | else return 0.152380176421817;  // std dev = 0,027, 2.684,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2.682 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.023709360626345675;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.01861250647110826;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.13344608772649635;  // std dev = 0,000547, 1.411,000 (wgt'ed) examples reached here.  /* #pos=1.411 */
%   | else return 0.22452183988147525;  // std dev = 0,037, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */
%   else if ( title(A, E), title(B, E) )
%   | then if ( author(A, F), author(B, F) )
%   | | then return 0.13427866514186695;  // std dev = 8,13e-07, 978,000 (wgt'ed) examples reached here.  /* #pos=978 */
%   | | else return 0.13364627531923423;  // std dev = 0,027, 2.684,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2.682 */
%   | else if ( author(A, G), author(B, G) )
%   | | then return -0.021368350318015226;  // std dev = 0,284, 1.468,000 (wgt'ed) examples reached here.  /* #neg=1.338 #pos=130 */
%   | | else return -0.01669335099571486;  // std dev = 0,299, 3.512,000 (wgt'ed) examples reached here.  /* #neg=3.164 #pos=348 */


Results
   AUC ROC   = 0.93615
   AUC PR    = 0.969149
   CLL	      = -0.31495
   Precision = 0.952714 at threshold = 0.5
   Recall    = 0.892022
   F1        = 0.92137


Total learning time: 530.281 seconds
Total inference time: 188.078 seconds
AUC ROC: 0.93615


Refined model AUC ROC: 0.93615


Dataset: 12_uwcse_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:28:03
{'Mapping results': {'Finding best mapping': 7.152557373046875e-07, 'Max mapping': 14641, 'Numbers preds mapping': [7], 'Possible mappings': [32], 'Generating mappings time': 0.005281209945678711, 'Total time': 1.7036771774291992, 'Generating paths time': 1.545788288116455, 'Knowledge compiling time': 0.1526014804840088}, 'CLL': -0.31495, 'Learning time': 674.4929999999999, 'AUC PR': 0.969149, 'F1': 0.92137, 'AUC ROC': 0.93615, 'Recall': 0.892022, 'Precision': [0.952714, 0.5], 'parameter': {'CLL': -0.572527, 'Learning time': 144.212, 'AUC PR': 0.825793, 'F1': 0.582499, 'AUC ROC': 0.711318, 'Recall': 0.422749, 'Precision': [0.936319, 0.5], 'Inference time': 24.275}, 'Inference time': 188.078}


Start learning from scratch in target domain

Starting fold 5

Target predicate: samebib
Mapping Results
   Knowledge compiling time   = 0.1913440227508545
   Generating paths time   = 1.8313190937042236
   Generating mappings time   = 0.006811857223510742
   Possible mappings   = [32]
   Max mapping   = 14641
   Numbers predicates mapping   = [7]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.02948260307312


Best mapping found: ['hasposition(A,B) -> author(A,B)', 'publication(A,B) -> venue(B,A)', 'advisedby(A,B) -> samebib(A,B)'] 

Transferred target predicate: samebib 

Target train facts examples: 2202
Target train pos examples: 6442
Target train neg examples: 2994

Target test facts examples: 9385
Target test pos examples: 24529
Target test neg examples: 16184

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samebib(A, B) :- venue(B, C), venue(A, C).;false;false
1;;samebib(A, B) :- venue(A, J), venue(B, J).;false;false
2;;samebib(A, B) :- author(B, C).;true;true
2;false;venue(B, L).;false;false
2;true,false;author(J, C).;false;false
2;true;venue(A, H).;true;true
2;true,true;venue(B, H).;false;false
3;;samebib(A, B) :- author(B, C).;true;true
3;false;venue(B, N).;false;false
3;true,false;venue(I, J).;false;false
3;true;venue(A, D), venue(B, D).;true;true
3;true,true;venue(E, D).;false;false
4;;samebib(A, B) :- venue(A, H).;true;false
4;true;venue(B, H), venue(G, I).;false;true
4;true,false;venue(B, J).;false;false
5;;samebib(A, B) :- author(B, C).;true;false
5;true,false,true;author(M, C), venue(M, K).;false;false
5;true;venue(A, D), venue(B, D).;false;true
5;true,false,false;author(N, C).;false;false
5;true,false;venue(A, K).;true;true
6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;false
6;true,false,true;venue(J, I).;false;false
6;true;venue(D, C).;false;true
6;true,false;venue(A, I).;true;false
7;;samebib(A, B) :- venue(B, G).;true;false
7;true;venue(A, G), venue(H, I).;false;false
8;;samebib(A, B) :- author(B, C).;true;false
8;true,false,true;venue(M, L).;false;false
8;true;venue(B, D), venue(A, D).;false;true
8;true,false,false;venue(Q, R).;false;false
8;true,false;venue(A, L).;true;true
9;;samebib(A, B) :- author(B, C).;true;true
9;false;venue(B, N).;false;false
9;true,false;venue(I, J).;false;false
9;true;venue(B, D), venue(A, D).;true;true
9;true,true;venue(E, D).;false;false


WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then return 0.8131367696493855;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   else return 0.3952341660689281;  // std dev = 39,097, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0.683455741128611;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   else return 0.3400242963932351;  // std dev = 39,097, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then return 0.5302631283741152;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | | else return 0.28068084707148455;  // std dev = 39,097, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.39851590412966365;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.22363985610001022;  // std dev = 39,097, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then return 0.30354860023200014;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | else if ( venue(B, F) )
%   | | then return 0.1736351386104038;  // std dev = 39,097, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then return 0.23813167987233427;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | else if ( venue(A, E) )
%   | | then if ( author(F, C), venue(F, E) )
%   | | | then return 0.09316003910327611;  // std dev = 30,951, 3.832,000 (wgt'ed) examples reached here.  /* #neg=1.925 #pos=1.907 */
%   | | | else return 0.19784028832715575;  // std dev = 23,553, 2.316,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=1.395 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then return 0.1923761289591207;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10025451121769144;  // std dev = 39,009, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then return 0.15932112529625697;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | else return 0.0754705363755907;  // std dev = 39,008, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then return 0.13463363249817242;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | else if ( venue(A, E) )
%   | | then if ( venue(F, E) )
%   | | | then return 0.05668064482795625;  // std dev = 39,008, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then return 0.11564012512597072;  // std dev = 11,889, 3.288,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=3.140 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(F, G) )
%   | | then return 0.04252941935268928;  // std dev = 39,008, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.69191
   AUC PR    = 0.798649
   CLL	      = -0.590007
   Precision = 0.71495 at threshold = 0.5
   Recall    = 0.657793
   F1        = 0.685182


Total learning time: 160.018 seconds
Total inference time: 25.661 seconds
AUC ROC: 0.69191


Structure after Parameter Learning
[['samebib(A, B)', {'': 'venue(B, C), venue(A, C)'}, {'false': [39.097, 2846, 3302], 'true': [11.889, 148, 3140]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'false': [39.097, 2846, 3302], 'true': [11.889, 148, 3140]}], ['samebib(A, B)', {'': 'author(B, C)', 'true': 'venue(A, D)', 'true,true': 'venue(B, D)'}, {'true,true,true': [11.889, 148, 3140], 'false': [0.0, 0, 0], 'true,true,false': [39.097, 2846, 3302], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [39.097, 2846, 3302], 'true,true,true': [11.889, 148, 3140], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(A, C)', 'true': 'venue(B, C), venue(D, E)', 'true,false': 'venue(B, F)'}, {'true,false,true': [39.097, 2846, 3302], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [11.889, 148, 3140]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'author(F, C), venue(F, E)', 'true': 'venue(A, D), venue(B, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [23.553, 921, 1395], 'true,true': [11.889, 148, 3140], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [30.951, 1925, 1907]}], ['samebib(A, B)', {'': 'venue(A, C), venue(B, C)', 'true': 'venue(D, C)'}, {'false': [39.009, 2846, 3302], 'true,true': [11.889, 148, 3140], 'true,false': [0.0, 0, 0]}], ['samebib(A, B)', {'': 'venue(B, C)', 'true': 'venue(A, C), venue(D, E)'}, {'false': [0.0, 0, 0], 'true,true': [11.889, 148, 3140], 'true,false': [39.008, 2846, 3302]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,false,true': 'venue(F, E)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(A, E)'}, {'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [11.889, 148, 3140], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [39.008, 2846, 3302]}], ['samebib(A, B)', {'': 'author(B, C)', 'true,true': 'venue(E, D)', 'true': 'venue(B, D), venue(A, D)', 'true,false': 'venue(F, G)'}, {'true,false,true': [39.008, 2846, 3302], 'true,true,true': [11.889, 148, 3140], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.04298607041160736, 0.24862468564400797]}, {'': [0.04298607041158039, 0.248624685643894]}, {'': [0.19111155860790735, nan], 'true': [0.19111155860790735, nan], 'true,true': [0.04298607041164346, 0.2486246856438984]}, {'': [0.1839124006395186, nan], 'true,true': [0.042986070411618046, nan], 'true': [0.042986070411618046, 0.24862468564389725], 'true,false': [0.24862468564389725, nan]}, {'': [0.18080110626355447, nan], 'true': [0.042986070411606146, 0.24862468564397525], 'true,false': [0.24862468564397525, nan]}, {'': [0.17949809620585233, nan], 'true,false,true': [0.24999448387604922, 0.23952824236893017], 'true': [0.04298607041160431, 0.24862468564397125], 'true,false': [0.24862468564397125, nan]}, {'': [0.04298607041160987, 0.24751318422240343], 'true': [0.04298607041160987, nan]}, {'': [0.17783544600002155, nan], 'true': [0.04298607041161426, 0.24750403624633868]}, {'': [0.1776163577333552, nan], 'true,false,true': [0.24750028986558453, nan], 'true': [0.04298607041161014, 0.24750028986558453], 'true,false': [0.24750028986558453, nan]}, {'': [0.17744962218003976, nan], 'true,true': [0.042986070411614674, nan], 'true': [0.042986070411614674, 0.24749927352492576], 'true,false': [0.24749927352492576, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;samebib(A, B) :- venue(B, C), venue(A, C).;true;true', '1;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '2;;samebib(A, B) :- author(B, C).;true;true', '2;true;venue(A, D).;true;true', '2;true,true;venue(B, D).;true;true', '3;;samebib(A, B) :- author(B, C).;true;true', '3;true,false;venue(F, G).;true;true', '3;true;venue(A, D), venue(B, D).;true;true', '3;true,true;venue(E, D).;true;true', '4;;samebib(A, B) :- venue(A, C).;true;true', '4;true;venue(B, C), venue(D, E).;true;true', '4;true,false;venue(B, F).;true;true', '5;;samebib(A, B) :- author(B, C).;true;true', '5;true,false,true;author(F, C), venue(F, E).;true;true', '5;true;venue(A, D), venue(B, D).;true;true', '5;true,false;venue(A, E).;true;true', '6;;samebib(A, B) :- venue(A, C), venue(B, C).;true;true', '6;true;venue(D, C).;true;true', '7;;samebib(A, B) :- venue(B, C).;true;true', '7;true;venue(A, C), venue(D, E).;true;true', '8;;samebib(A, B) :- author(B, C).;true;true', '8;true,false,true;venue(F, E).;true;true', '8;true;venue(B, D), venue(A, D).;true;true', '8;true,false;venue(A, E).;true;true', '9;;samebib(A, B) :- author(B, C).;true;true', '9;true,false;venue(F, G).;true;true', '9;true;venue(B, D), venue(A, D).;true;true', '9;true,true;venue(E, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samebib(A, B):
%   if ( venue(B, C), venue(A, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.8581489350995072;  // std dev = 0,000, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordvenue(G, F) )
%   | | | then return 0.0803711573217346;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | | else return 0.8581489350995117;  // std dev = 2,46e-07, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.5223825117418444;  // std dev = 0,472, 274,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=182 */
%   else if ( title(A, H), title(B, H) )
%   | then if ( author(A, I), author(B, I) )
%   | | then return 0.8222637676353928;  // std dev = 0,186, 836,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=806 */
%   | | else return 0.7531261040492789;  // std dev = 0,307, 2.190,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=1.960 */
%   | else if ( author(A, J), author(B, J) )
%   | | then return -0.03369167211111512;  // std dev = 0,311, 1.054,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=114 */
%   | | else return 0.06221083065076454;  // std dev = 0,403, 2.068,000 (wgt'ed) examples reached here.  /* #neg=1.646 #pos=422 */
WILL Produced-Tree #2
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( title(A, D), title(B, D) )
%   | then return 0.7194734122109013;  // std dev = 1,49e-05, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | else if ( author(A, E), author(B, E) )
%   | | then if ( haswordauthor(E, F), haswordvenue(G, F) )
%   | | | then return 0.07030324498182283;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | | else return 0.719473412210955;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.44627752395014;  // std dev = 0,472, 274,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=182 */
%   else if ( title(A, H), title(B, H) )
%   | then if ( author(A, I), author(B, I) )
%   | | then return 0.690773637036754;  // std dev = 0,186, 836,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=806 */
%   | | else return 0.6351513186621065;  // std dev = 0,307, 2.190,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=1.960 */
%   | else if ( author(A, J), author(B, J) )
%   | | then return -0.029639684243265237;  // std dev = 0,311, 1.054,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=114 */
%   | | else return 0.05446792667167013;  // std dev = 0,403, 2.068,000 (wgt'ed) examples reached here.  /* #neg=1.646 #pos=422 */
WILL Produced-Tree #3
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D) )
%   | then if ( venue(B, D) )
%   | | then if ( title(A, E), title(B, E) )
%   | | | then return 0.5553664367462837;  // std dev = 9,40e-06, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | | else return 0.3250961432929078;  // std dev = 9,003, 386,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=238 */
%   | | else if ( title(A, F), title(B, F) )
%   | | | then return 0.5072220206729171;  // std dev = 15,352, 3.026,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=2.766 */
%   | | | else return 0.02257103303465301;  // std dev = 21,008, 3.122,000 (wgt'ed) examples reached here.  /* #neg=2.586 #pos=536 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( venue(E, D) )
%   | | then if ( title(A, F), title(B, F) )
%   | | | then return 0.41751358415831547;  // std dev = 7,18e-06, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | | else return 0.2559611315363755;  // std dev = 8,946, 386,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=238 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(G, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.3816605246539073;  // std dev = 15,351, 3.026,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=2.766 */
%   | | | else return 0.01968708777154673;  // std dev = 21,007, 3.122,000 (wgt'ed) examples reached here.  /* #neg=2.586 #pos=536 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samebib(A, B):
%   if ( venue(A, C) )
%   then if ( venue(B, C), venue(D, E) )
%   | then if ( title(A, F), title(B, F) )
%   | | then return 0.3207118471601674;  // std dev = 0,000, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | else if ( author(A, G), author(B, G) )
%   | | | then return 0.1253430915662151;  // std dev = 4,187, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.22647965582026292;  // std dev = 7,817, 274,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=182 */
%   | else if ( venue(B, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.28898398653195784;  // std dev = 15,354, 3.026,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=2.766 */
%   | | | else return 0.017134425895915715;  // std dev = 21,006, 3.122,000 (wgt'ed) examples reached here.  /* #neg=2.586 #pos=536 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(A, D), venue(B, D) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.25517224256949894;  // std dev = 1,53e-06, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | else return 0.14948245932814574;  // std dev = 0,452, 386,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=238 */
%   | else if ( venue(A, F) )
%   | | then if ( author(G, C), venue(G, F) )
%   | | | then return 0.09990461526353508;  // std dev = 20,225, 3.832,000 (wgt'ed) examples reached here.  /* #neg=1.925 #pos=1.907 */
%   | | | else return 0.1475663498685794;  // std dev = 18,222, 2.316,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=1.395 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samebib(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then if ( venue(D, C) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.20975771563253878;  // std dev = 2,60e-06, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | else if ( author(A, F), author(B, F) )
%   | | | then return 0.06647940125940709;  // std dev = 4,163, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.13285501222285184;  // std dev = 7,817, 274,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=182 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( title(A, G), title(B, G) )
%   | then if ( author(A, H), author(B, H) )
%   | | then return 0.23486723565311163;  // std dev = 0,186, 836,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=806 */
%   | | else return 0.18522910893411923;  // std dev = 0,307, 2.190,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=1.960 */
%   | else if ( author(A, I), author(B, I) )
%   | | then return -0.045779717471970134;  // std dev = 0,311, 1.054,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=114 */
%   | | else return 0.02168984525091304;  // std dev = 0,403, 2.068,000 (wgt'ed) examples reached here.  /* #neg=1.646 #pos=422 */
WILL Produced-Tree #8
% FOR samebib(A, B):
%   if ( venue(B, C) )
%   then if ( venue(A, C), venue(D, E) )
%   | then if ( title(A, F), title(B, F) )
%   | | then return 0.1770964977452679;  // std dev = 3,28e-06, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | else if ( author(A, G), author(B, G) )
%   | | | then return 0.05188037183705502;  // std dev = 4,162, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.099957586533553;  // std dev = 7,817, 274,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=182 */
%   | else if ( title(A, H), title(B, H) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.06002499464319677;  // std dev = 4,410, 132,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=108 */
%   | | | else return 0.16490576289983383;  // std dev = 14,675, 2.894,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=2.658 */
%   | | else if ( author(A, K), author(B, K) )
%   | | | then return -0.0399112779324012;  // std dev = 10,083, 1.054,000 (wgt'ed) examples reached here.  /* #neg=940 #pos=114 */
%   | | | else return 0.018433590519784104;  // std dev = 18,311, 2.068,000 (wgt'ed) examples reached here.  /* #neg=1.646 #pos=422 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( title(A, E), title(B, E) )
%   | | then return 0.1527438580936821;  // std dev = 0,000, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | else return 0.06536182943579358;  // std dev = 0,451, 386,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=238 */
%   | else if ( venue(A, F) )
%   | | then if ( venue(G, F) )
%   | | | then return 0.06415085543785184;  // std dev = 26,493, 6.148,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=3.302 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR samebib(A, B):
%   if ( author(B, C) )
%   then if ( venue(B, D), venue(A, D) )
%   | then if ( venue(E, D) )
%   | | then if ( title(A, F), title(B, F) )
%   | | | then return 0.13400703000801806;  // std dev = 0,000, 2.902,000 (wgt'ed) examples reached here.  /* #pos=2.902 */
%   | | | else return 0.04998516530663479;  // std dev = 8,862, 386,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=238 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( venue(G, H) )
%   | | then if ( title(A, I), title(B, I) )
%   | | | then return 0.1211063054780982;  // std dev = 15,359, 3.026,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=2.766 */
%   | | | else return -0.01078927425216828;  // std dev = 20,942, 3.122,000 (wgt'ed) examples reached here.  /* #neg=2.586 #pos=536 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.943938
   AUC PR    = 0.971771
   CLL	      = -0.31357
   Precision = 0.973798 at threshold = 0.5
   Recall    = 0.880305
   F1        = 0.924694


Total learning time: 311.299 seconds
Total inference time: 69.178 seconds
AUC ROC: 0.943938


Refined model AUC ROC: 0.943938


Dataset: 12_uwcse_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:37:33
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 14641, 'Numbers preds mapping': [7], 'Possible mappings': [32], 'Generating mappings time': 0.006811857223510742, 'Total time': 2.02948260307312, 'Generating paths time': 1.8313190937042236, 'Knowledge compiling time': 0.1913440227508545}, 'CLL': -0.31357, 'Learning time': 471.317, 'AUC PR': 0.971771, 'F1': 0.924694, 'AUC ROC': 0.943938, 'Recall': 0.880305, 'Precision': [0.973798, 0.5], 'parameter': {'CLL': -0.590007, 'Learning time': 160.018, 'AUC PR': 0.798649, 'F1': 0.685182, 'AUC ROC': 0.69191, 'Recall': 0.657793, 'Precision': [0.71495, 0.5], 'Inference time': 25.661}, 'Inference time': 69.178}


Start learning from scratch in target domain

