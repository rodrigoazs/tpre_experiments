Starting experiment #3 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L) )
%   | | | then return 0.4071685429426485;  // std dev = 3,554, 51,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.3479448534668582;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, M), projectmember(N, M) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.37285481745245225;  // std dev = 4,121, 68,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | | else return 0.32689893509951234;  // std dev = 2,823, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.47540780245230163;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24779728811959792;  // std dev = 0,493, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, K, M), ta(N, A, P) )
%   | | | then return 0.41642849982537694;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.31201240418820314;  // std dev = 4,662, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, Q), projectmember(R, Q) )
%   | | then return 0.2105717177991725;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, S) )
%   | | | then return 0.4135282750962646;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.2970737521556617;  // std dev = 4,740, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.20416130465148977;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.29397282311676015;  // std dev = 0,494, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.19117730108278366;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.2660878293266564;  // std dev = 1,861, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), publication(M, A) )
%   | then if ( tempadvisedby(N, L) )
%   | | then return 0.25585005957091383;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.39693463290146314;  // std dev = 0,476, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.1845493580263703;  // std dev = 0,479, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tempadvisedby(A, R), publication(S, A) )
%   | | | then return 0.18442350965111906;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.27512835593498514;  // std dev = 4,292, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( advisedby(A, E), publication(F, A) )
%   | then return 0.16705563921046157;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.23351696359813331;  // std dev = 0,494, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.15448238129604663;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.2151796082595101;  // std dev = 1,860, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), publication(M, A) )
%   | then return 0.24092735088462816;  // std dev = 0,495, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.14725631316667226;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.32660303603588525;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, R), publication(S, R) )
%   | | | then return 0.22526128180871863;  // std dev = 2,858, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.14700950288526993;  // std dev = 2,499, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D), advisedby(A, E) )
%   then if ( advisedby(F, E), publication(G, F) )
%   | then if ( ta(H, F, I), publication(G, E) )
%   | | then if ( samecourse(C, H) )
%   | | | then return 0.1275475071783145;  // std dev = 2,652, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.25934090092141926;  // std dev = 1,812, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return 0.0789112365404242;  // std dev = 0,493, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0.26535299147925223;  // std dev = 1,142, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( tempadvisedby(A, J), publication(K, A) )
%   | then return 0.11233326395120809;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( publication(L, A) )
%   | | then if ( advisedby(A, M), tempadvisedby(N, M) )
%   | | | then return 0.1533749865629036;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.24270930163528334;  // std dev = 2,457, 26,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else if ( tempadvisedby(A, P) )
%   | | | then return 0.18792553984883198;  // std dev = 3,872, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.13909002546309765;  // std dev = 3,984, 65,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, F), publication(G, E) )
%   | then return 0.1274617305542816;  // std dev = 0,492, 86,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=41 */
%   | else return 0.09189228130100272;  // std dev = 0,495, 50,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   else if ( publication(H, A), advisedby(A, I) )
%   | then if ( publication(H, I) )
%   | | then if ( tempadvisedby(J, I), publication(H, J) )
%   | | | then return -0.06063381821446471;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13527566378779068;  // std dev = 3,104, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | else return 0.23415206905145675;  // std dev = 0,467, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( tempadvisedby(A, K) )
%   | | then if ( tempadvisedby(L, K), publication(M, L) )
%   | | | then return 0.08121587259464759;  // std dev = 1,985, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.20929120607930657;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, N) )
%   | | | then return 0.13059310611992195;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.05771758811119709;  // std dev = 1,704, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( ta(C, A, D), advisedby(A, E) )
%   then if ( advisedby(F, E), publication(G, F) )
%   | then return 0.07533959224390568;  // std dev = 0,493, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.17309550389342424;  // std dev = 1,142, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( tempadvisedby(J, H), ta(K, J, L) )
%   | | then if ( publication(I, A), publication(I, J) )
%   | | | then return -0.04625392375499652;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1643542306423924;  // std dev = 2,650, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( advisedby(M, H), ta(N, M, P) )
%   | | | then return 0.10529564835541719;  // std dev = 3,097, 40,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return -0.04490508661506008;  // std dev = 1,308, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( advisedby(A, Q), projectmember(R, Q) )
%   | | then return 0.0429167868237263;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, S) )
%   | | | then return 0.1766532086801727;  // std dev = 1,367, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09392095956003227;  // std dev = 4,941, 100,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return 0.002751195566855824;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.025022473410824288;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09854975994353025;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( advisedby(H, C), publication(I, H) )
%   | | then return 0.1391950945276648;  // std dev = 0,487, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( publication(J, C), ta(K, A, L) )
%   | | | then return 0.15098916403608328;  // std dev = 1,286, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.006143949494071359;  // std dev = 1,489, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( advisedby(A, M), projectmember(N, M) )
%   | then return 0.12633513066518803;  // std dev = 0,477, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( ta(P, A, Q) )
%   | | then return 0.05114128203458783;  // std dev = 0,492, 93,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=43 */
%   | | else return 0.07395130627459928;  // std dev = 0,493, 98,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=52 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.14300621845940995;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( advisedby(A, E), publication(F, E) )
%   | then if ( advisedby(G, E), publication(F, G) )
%   | | then if ( ta(H, G, I), ta(J, A, K) )
%   | | | then return 0.07485212258430939;  // std dev = 3,224, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.037844768560204106;  // std dev = 4,694, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else if ( advisedby(A, L), projectmember(M, L) )
%   | | | then return 0.4989530163359372;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05677862273624842;  // std dev = 2,049, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( advisedby(A, N), tempadvisedby(P, N) )
%   | | then if ( publication(Q, A), projectmember(R, N) )
%   | | | then return 0.07275674891706128;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.021308038220456384;  // std dev = 1,917, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( advisedby(A, S) )
%   | | | then return 0.14336895986882628;  // std dev = 1,162, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04773716498502186;  // std dev = 4,808, 95,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then if ( sameperson(A, D) )
%   | | | then return 0.01840831943725314;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.023271506919574504;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.007820954843739902;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06300226278573746;  // std dev = 1,226, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( advisedby(H, C), publication(I, H) )
%   | | then return 0.09228594297818177;  // std dev = 0,487, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( publication(J, C), ta(K, A, L) )
%   | | | then return 0.09863183863413173;  // std dev = 1,278, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02427001591378145;  // std dev = 1,493, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( advisedby(A, M), publication(N, M) )
%   | then return 0.04492664510011841;  // std dev = 0,490, 154,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=79 */
%   | else return 0.01816503240632207;  // std dev = 0,488, 53,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */


Predicates from source: ['inphase(person,prequals).', 'ta(course,person,quarter).', 'publication(title,person).', 'advisedby(person,person).', 'projectmember(project,person).', 'tempadvisedby(person,person).', 'samecourse(course,course).', 'sameperson(person,person).']

Starting fold 1

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.02768564224243164
   Generating paths time   = 1.8952350616455078
   Generating mappings time   = 0.23536157608032227
   Possible mappings   = [1299]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.158290386199951


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'sameperson(A,B) -> workedunder(A,B)', 'inphase(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(M, A), movie(N, M).;false;true
0;false,false,false;workedunder(P, A).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(E, A).;true;true
1;false,false;workedunder(Q, A), movie(R, Q).;false;true
1;false,false,false;workedunder(S, A).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false,false;workedunder(P, A), movie(Q, P).;false;true
2;false;workedunder(L, A), movie(M, A).;true;true
2;false,false,false;workedunder(R, A), movie(S, A).;false;false
2;false,true;workedunder(L, N).;false;false
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), movie(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true,true;workedunder(H, C).;false;false
4;false,false;movie(L, A).;true;true
4;false,false,false;workedunder(P, A).;false;false
4;true,true;movie(G, E).;true;false
4;false;workedunder(J, A), movie(K, A).;false;true
4;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
4;true;workedunder(E, F), movie(G, F).;true;false
5;;genre(A, B) :- movie(G, E).;false;true
5;false,false;workedunder(K, A).;true;true
5;false,false,false;workedunder(N, A).;false;false
5;false,true,true;workedunder(I, J), movie(H, J).;false;false
5;false,false,true;workedunder(K, L), movie(M, L).;false;false
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
6;;genre(A, B) :- workedunder(E, A).;true;true
6;false,false;workedunder(Q, A), movie(R, Q).;false;true
6;false,false,false;workedunder(S, A).;false;false
6;false,true,false;workedunder(H, M).;false;false
6;false,true,true;movie(I, A), movie(I, J).;false;false
6;false,true;workedunder(H, J).;true;true
6;false;workedunder(H, A), movie(I, H).;true;true
6;true;workedunder(E, F), movie(G, F).;false;false
7;;genre(A, B) :- workedunder(C, A).;true;true
7;true,false,false;movie(J, C).;false;false
7;true,true;workedunder(A, D), movie(E, C).;false;false
7;false;workedunder(M, A), movie(N, M).;false;false
7;true;workedunder(C, D), movie(E, D).;true;true
7;true,false;workedunder(C, H), movie(I, H).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
8;false,false;workedunder(N, A), workedunder(N, P).;true;true
8;false,false,false;workedunder(S, A).;false;false
8;false,true,false;workedunder(L, A), movie(M, L).;false;false
8;false;workedunder(E, A), movie(F, E).;true;true
8;false,false,true;movie(Q, A), movie(R, N).;false;false
8;false,true;workedunder(E, G), movie(F, G).;false;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true,false;workedunder(A, D), movie(E, C).;false;false
9;true,false,false;movie(J, C).;false;false
9;true,true;workedunder(A, D).;false;true
9;false;workedunder(M, A), movie(N, M).;false;false
9;true;workedunder(C, D), movie(E, D).;true;true
9;true,false;workedunder(C, H), movie(I, H).;false;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A), movie(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A), movie(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then if ( workedunder(F, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(H, A), movie(I, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(J, A) )
%   | | then if ( workedunder(K, A), workedunder(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.0849937455905463;  // std dev = 0,798, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then return 0.23935700108516403;  // std dev = 2,58e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0920459433977766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19852082828804782;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08463679078745934;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.16880983112775336;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07830602720680804;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, D), movie(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14642805445214568;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07283771686569031;  // std dev = 5,89e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.351463
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.218 seconds
Total inference time: 1.056 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0], 'true,true': [0.0, 0, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [5.27e-09, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [4.21e-08, 0, 11]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(I, A), movie(J, A)', 'false,false': 'workedunder(G, A), movie(H, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(H, A), movie(I, H)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [4.21e-08, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true,true': 'workedunder(F, G)', 'false,false': 'movie(J, A)', 'true,true': 'movie(E, C)', 'false': 'workedunder(H, A), movie(I, A)', 'false,false,true': 'workedunder(K, A), workedunder(K, L)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.798, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(H, A), movie(I, H)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)'}, {'false,false,false,false': [0.0, 11, 0], 'true,true': [2.58e-08, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D), movie(E, C)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 11, 0], 'true,true,false': [1.49e-08, 0, 11], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.49e-08, 0, 11], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true,false': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [5.89e-09, 11, 0], 'true,true,false,false': [0.0, 0, 11], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.24999999999999958, nan], 'true': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}, {'': [0.17847162811629388, nan], 'true': [1.6148698540002277e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [-2.0185873175002846e-16, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [1.6148698540002277e-16, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [-6.055761952500853e-17, 0.0], 'true,true,true': [-6.055761952500853e-17, nan], 'false,false': [0.0, nan], 'true,true': [-6.055761952500853e-17, nan], 'false': [nan, 0.0], 'false,false,true': [nan, 0.0], 'true': [-6.055761952500853e-17, nan]}, {'': [0.028960720834012178, nan]}, {'': [6.055761952500853e-17, -3.784851220313033e-18], 'false,false': [nan, -3.784851220313033e-18], 'false': [nan, -3.784851220313033e-18], 'false,false,false': [nan, -3.784851220313033e-18], 'true': [6.055761952500853e-17, nan]}, {'': [2.0185873175002847e-17, -1.261617073437678e-18], 'false': [nan, -1.261617073437678e-18], 'true': [2.0185873175002847e-17, nan], 'true,true': [nan, 2.0185873175002847e-17]}, {'': [2.0185873175002847e-17, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18]}, {'': [-5.046468293750712e-18, 3.1540426835941946e-18], 'false': [nan, 3.1540426835941946e-18], 'true,true,false': [nan, -5.046468293750712e-18], 'true': [-5.046468293750712e-18, nan], 'true,true': [nan, -5.046468293750712e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.065 seconds
Total inference time: 0.535 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 07:00:04
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 16384, 'Numbers preds mapping': [8], 'Possible mappings': [1299], 'Generating mappings time': 0.23536157608032227, 'Total time': 2.158290386199951, 'Generating paths time': 1.8952350616455078, 'Knowledge compiling time': 0.02768564224243164}, 'CLL': -0.352709, 'Learning time': 2.283, 'AUC PR': 0.8, 'F1': 0.888889, 'AUC ROC': 0.875, 'Recall': 1.0, 'Precision': [0.8, 0.5], 'parameter': {'CLL': -0.351463, 'Learning time': 1.218, 'AUC PR': 0.8, 'F1': 0.888889, 'AUC ROC': 0.875, 'Recall': 1.0, 'Precision': [0.8, 0.5], 'Inference time': 1.056}, 'Inference time': 0.535}


Start learning from scratch in target domain

Starting fold 2

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.018784046173095703
   Generating paths time   = 1.8895537853240967
   Generating mappings time   = 0.23748517036437988
   Possible mappings   = [1299]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.145831346511841


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'sameperson(A,B) -> workedunder(A,B)', 'inphase(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(M, A), movie(N, M).;false;true
0;false,false,false;workedunder(P, A).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(E, A).;true;true
1;false,false;workedunder(Q, A), movie(R, Q).;false;true
1;false,false,false;workedunder(S, A).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false,false;workedunder(P, A), movie(Q, P).;false;true
2;false;workedunder(L, A), movie(M, A).;true;true
2;false,false,false;workedunder(R, A), movie(S, A).;false;false
2;false,true;workedunder(L, N).;false;false
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), movie(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true,true;workedunder(H, C).;false;false
4;false,false;movie(L, A).;true;true
4;false,false,false;workedunder(P, A).;false;false
4;true,true;movie(G, E).;true;false
4;false;workedunder(J, A), movie(K, A).;false;true
4;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
4;true;workedunder(E, F), movie(G, F).;true;false
5;;genre(A, B) :- movie(G, E).;false;true
5;false,false;workedunder(K, A).;true;true
5;false,false,false;workedunder(N, A).;false;false
5;false,true,true;workedunder(I, J), movie(H, J).;false;false
5;false,false,true;workedunder(K, L), movie(M, L).;false;false
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
6;;genre(A, B) :- workedunder(E, A).;true;true
6;false,false;workedunder(Q, A), movie(R, Q).;false;true
6;false,false,false;workedunder(S, A).;false;false
6;false,true,false;workedunder(H, M).;false;false
6;false,true,true;movie(I, A), movie(I, J).;false;false
6;false,true;workedunder(H, J).;true;true
6;false;workedunder(H, A), movie(I, H).;true;true
6;true;workedunder(E, F), movie(G, F).;false;false
7;;genre(A, B) :- workedunder(C, A).;true;true
7;true,false,false;movie(J, C).;false;false
7;true,true;workedunder(A, D), movie(E, C).;false;false
7;false;workedunder(M, A), movie(N, M).;false;false
7;true;workedunder(C, D), movie(E, D).;true;true
7;true,false;workedunder(C, H), movie(I, H).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
8;false,false;workedunder(N, A), workedunder(N, P).;true;true
8;false,false,false;workedunder(S, A).;false;false
8;false,true,false;workedunder(L, A), movie(M, L).;false;false
8;false;workedunder(E, A), movie(F, E).;true;true
8;false,false,true;movie(Q, A), movie(R, N).;false;false
8;false,true;workedunder(E, G), movie(F, G).;false;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true,false;workedunder(A, D), movie(E, C).;false;false
9;true,false,false;movie(J, C).;false;false
9;true,true;workedunder(A, D).;false;true
9;false;workedunder(M, A), movie(N, M).;false;false
9;true;workedunder(C, D), movie(E, D).;true;true
9;true,false;workedunder(C, H), movie(I, H).;false;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A), movie(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3853022650638632;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A), movie(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then if ( workedunder(F, G) )
%   | | | then return 0.2920349799096258;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(H, A), movie(I, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(J, A) )
%   | | then if ( workedunder(K, A), workedunder(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.08391087641099375;  // std dev = 1,226, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then return 0.20953781621100837;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0919554842138842;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16868535375783297;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08455993709271782;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.13878447841363067;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07823997317641573;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, D), movie(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11623125909741781;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07278036876592021;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.322522
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.238 seconds
Total inference time: 0.567 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [5.27e-09, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(I, A), movie(J, A)', 'false,false': 'workedunder(G, A), movie(H, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(H, A), movie(I, H)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true,true': 'workedunder(F, G)', 'false,false': 'movie(J, A)', 'true,true': 'movie(E, C)', 'false': 'workedunder(H, A), movie(I, A)', 'false,false,true': 'workedunder(K, A), workedunder(K, L)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,true,true': [0.961, 1, 12], 'true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.226, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(H, A), movie(I, H)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)'}, {'false,false,false,false': [0.0, 11, 0], 'true,true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D), movie(E, C)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [6.45e-09, 11, 0], 'true,true,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.73e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true,false': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [3.73e-09, 11, 0], 'true,true,false,false': [0.961, 1, 12], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.24999999999999956, nan], 'true': [0.07100591715976314, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}, {'': [0.19076867375623552, nan], 'true': [0.07100591715976333, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [0.07100591715976351, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.0710059171597632, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.07100591715976336, 0.0], 'true,true,true': [0.07100591715976336, nan], 'false,false': [0.0, nan], 'true,true': [0.07100591715976336, nan], 'false': [nan, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.07100591715976336, nan]}, {'': [0.06265589574996693, nan]}, {'': [0.07100591715976332, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'true': [0.07100591715976332, nan]}, {'': [0.07100591715976336, 3.784851220313033e-18], 'false': [nan, 3.784851220313033e-18], 'true': [0.07100591715976336, nan], 'true,true': [nan, 0.07100591715976336]}, {'': [0.07100591715976332, 1.261617073437678e-18], 'false': [nan, 1.261617073437678e-18], 'false,false,false': [nan, 1.261617073437678e-18], 'false,false': [nan, 1.261617073437678e-18]}, {'': [0.07100591715976332, 1.261617073437678e-18], 'false': [nan, 1.261617073437678e-18], 'true,true,false': [nan, 0.07100591715976332], 'true': [0.07100591715976332, nan], 'true,true': [nan, 0.07100591715976332]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.221 seconds
Total inference time: 0.589 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 07:00:11
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 16384, 'Numbers preds mapping': [8], 'Possible mappings': [1299], 'Generating mappings time': 0.23748517036437988, 'Total time': 2.145831346511841, 'Generating paths time': 1.8895537853240967, 'Knowledge compiling time': 0.018784046173095703}, 'CLL': -0.320018, 'Learning time': 2.459, 'AUC PR': 0.813953, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Recall': 1.0, 'Precision': [0.813953, 0.5], 'parameter': {'CLL': -0.322522, 'Learning time': 1.238, 'AUC PR': 0.813953, 'F1': 0.897436, 'AUC ROC': 0.885714, 'Recall': 1.0, 'Precision': [0.813953, 0.5], 'Inference time': 0.567}, 'Inference time': 0.589}


Start learning from scratch in target domain

Starting fold 3

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.018746376037597656
   Generating paths time   = 1.9761664867401123
   Generating mappings time   = 0.23526859283447266
   Possible mappings   = [1299]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.230189323425293


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'sameperson(A,B) -> workedunder(A,B)', 'inphase(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(M, A), movie(N, M).;false;true
0;false,false,false;workedunder(P, A).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(E, A).;true;true
1;false,false;workedunder(Q, A), movie(R, Q).;false;true
1;false,false,false;workedunder(S, A).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false,false;workedunder(P, A), movie(Q, P).;false;true
2;false;workedunder(L, A), movie(M, A).;true;true
2;false,false,false;workedunder(R, A), movie(S, A).;false;false
2;false,true;workedunder(L, N).;false;false
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), movie(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true,true;workedunder(H, C).;false;false
4;false,false;movie(L, A).;true;true
4;false,false,false;workedunder(P, A).;false;false
4;true,true;movie(G, E).;true;false
4;false;workedunder(J, A), movie(K, A).;false;true
4;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
4;true;workedunder(E, F), movie(G, F).;true;false
5;;genre(A, B) :- movie(G, E).;false;true
5;false,false;workedunder(K, A).;true;true
5;false,false,false;workedunder(N, A).;false;false
5;false,true,true;workedunder(I, J), movie(H, J).;false;false
5;false,false,true;workedunder(K, L), movie(M, L).;false;false
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
6;;genre(A, B) :- workedunder(E, A).;true;true
6;false,false;workedunder(Q, A), movie(R, Q).;false;true
6;false,false,false;workedunder(S, A).;false;false
6;false,true,false;workedunder(H, M).;false;false
6;false,true,true;movie(I, A), movie(I, J).;false;false
6;false,true;workedunder(H, J).;true;true
6;false;workedunder(H, A), movie(I, H).;true;true
6;true;workedunder(E, F), movie(G, F).;false;false
7;;genre(A, B) :- workedunder(C, A).;true;true
7;true,false,false;movie(J, C).;false;false
7;true,true;workedunder(A, D), movie(E, C).;false;false
7;false;workedunder(M, A), movie(N, M).;false;false
7;true;workedunder(C, D), movie(E, D).;true;true
7;true,false;workedunder(C, H), movie(I, H).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
8;false,false;workedunder(N, A), workedunder(N, P).;true;true
8;false,false,false;workedunder(S, A).;false;false
8;false,true,false;workedunder(L, A), movie(M, L).;false;false
8;false;workedunder(E, A), movie(F, E).;true;true
8;false,false,true;movie(Q, A), movie(R, N).;false;false
8;false,true;workedunder(E, G), movie(F, G).;false;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true,false;workedunder(A, D), movie(E, C).;false;false
9;true,false,false;movie(J, C).;false;false
9;true,true;workedunder(A, D).;false;true
9;false;workedunder(M, A), movie(N, M).;false;false
9;true;workedunder(C, D), movie(E, D).;true;true
9;true,false;workedunder(C, H), movie(I, H).;false;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A), movie(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3029206894518932;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A), movie(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then if ( workedunder(F, G) )
%   | | | then return 0.2279628397230807;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(H, A), movie(I, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(J, A) )
%   | | then if ( workedunder(K, A), workedunder(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.09281113695383897;  // std dev = 2,354, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then return 0.14826830795057272;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09270135692417089;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11241116071955215;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08519330675011703;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.08595735780965401;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07878410101743259;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, D), movie(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06625163134300038;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07325259859736293;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.272375
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.394 seconds
Total inference time: 0.663 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [5.27e-09, 11, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(I, A), movie(J, A)', 'false,false': 'workedunder(G, A), movie(H, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(H, A), movie(I, H)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true,true': 'workedunder(F, G)', 'false,false': 'movie(J, A)', 'true,true': 'movie(E, C)', 'false': 'workedunder(H, A), movie(I, A)', 'false,false,true': 'workedunder(K, A), workedunder(K, L)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,true,true': [2.245, 7, 18], 'true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.354, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(H, A), movie(I, H)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)'}, {'false,false,false,false': [0.0, 11, 0], 'true,true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D), movie(E, C)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 11, 0], 'true,true,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true,false': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [3.73e-09, 11, 0], 'true,true,false,false': [2.245, 7, 18], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.2499999999999995, nan], 'true': [0.2015999999999996, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}, {'': [0.22099738300738728, nan], 'true': [0.2016000000000001, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [0.20160000000000053, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.2016000000000004, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.2016000000000001, 0.0], 'true,true,true': [0.2016000000000001, nan], 'false,false': [0.0, nan], 'true,true': [0.2016000000000001, nan], 'false': [nan, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.2016000000000001, nan]}, {'': [0.15394031595736635, nan]}, {'': [0.20160000000000003, -2.523234146875356e-18], 'false,false': [nan, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'false,false,false': [nan, -2.523234146875356e-18], 'true': [0.20160000000000003, nan]}, {'': [0.20160000000000003, 0.0], 'false': [nan, 0.0], 'true': [0.20160000000000003, nan], 'true,true': [nan, 0.20160000000000003]}, {'': [0.2016, -1.261617073437678e-18], 'false': [nan, -1.261617073437678e-18], 'false,false,false': [nan, -1.261617073437678e-18], 'false,false': [nan, -1.261617073437678e-18]}, {'': [0.20159999999999992, 1.261617073437678e-18], 'false': [nan, 1.261617073437678e-18], 'true,true,false': [nan, 0.20159999999999992], 'true': [0.20159999999999992, nan], 'true,true': [nan, 0.20159999999999992]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.649 seconds
Total inference time: 0.553 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 07:00:18
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 16384, 'Numbers preds mapping': [8], 'Possible mappings': [1299], 'Generating mappings time': 0.23526859283447266, 'Total time': 2.230189323425293, 'Generating paths time': 1.9761664867401123, 'Knowledge compiling time': 0.018746376037597656}, 'CLL': -0.264596, 'Learning time': 3.043, 'AUC PR': 0.935484, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Recall': 1.0, 'Precision': [0.935484, 0.5], 'parameter': {'CLL': -0.272375, 'Learning time': 1.394, 'AUC PR': 0.935484, 'F1': 0.966667, 'AUC ROC': 0.965517, 'Recall': 1.0, 'Precision': [0.935484, 0.5], 'Inference time': 0.663}, 'Inference time': 0.553}


Start learning from scratch in target domain

Starting fold 4

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.0393218994140625
   Generating paths time   = 1.9308581352233887
   Generating mappings time   = 0.2333996295928955
   Possible mappings   = [1299]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.2035887241363525


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'sameperson(A,B) -> workedunder(A,B)', 'inphase(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(M, A), movie(N, M).;false;true
0;false,false,false;workedunder(P, A).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(E, A).;true;true
1;false,false;workedunder(Q, A), movie(R, Q).;false;true
1;false,false,false;workedunder(S, A).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false,false;workedunder(P, A), movie(Q, P).;false;true
2;false;workedunder(L, A), movie(M, A).;true;true
2;false,false,false;workedunder(R, A), movie(S, A).;false;false
2;false,true;workedunder(L, N).;false;false
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), movie(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true,true;workedunder(H, C).;false;false
4;false,false;movie(L, A).;true;true
4;false,false,false;workedunder(P, A).;false;false
4;true,true;movie(G, E).;true;false
4;false;workedunder(J, A), movie(K, A).;false;true
4;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
4;true;workedunder(E, F), movie(G, F).;true;false
5;;genre(A, B) :- movie(G, E).;false;true
5;false,false;workedunder(K, A).;true;true
5;false,false,false;workedunder(N, A).;false;false
5;false,true,true;workedunder(I, J), movie(H, J).;false;false
5;false,false,true;workedunder(K, L), movie(M, L).;false;false
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
6;;genre(A, B) :- workedunder(E, A).;true;true
6;false,false;workedunder(Q, A), movie(R, Q).;false;true
6;false,false,false;workedunder(S, A).;false;false
6;false,true,false;workedunder(H, M).;false;false
6;false,true,true;movie(I, A), movie(I, J).;false;false
6;false,true;workedunder(H, J).;true;true
6;false;workedunder(H, A), movie(I, H).;true;true
6;true;workedunder(E, F), movie(G, F).;false;false
7;;genre(A, B) :- workedunder(C, A).;true;true
7;true,false,false;movie(J, C).;false;false
7;true,true;workedunder(A, D), movie(E, C).;false;false
7;false;workedunder(M, A), movie(N, M).;false;false
7;true;workedunder(C, D), movie(E, D).;true;true
7;true,false;workedunder(C, H), movie(I, H).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
8;false,false;workedunder(N, A), workedunder(N, P).;true;true
8;false,false,false;workedunder(S, A).;false;false
8;false,true,false;workedunder(L, A), movie(M, L).;false;false
8;false;workedunder(E, A), movie(F, E).;true;true
8;false,false,true;movie(Q, A), movie(R, N).;false;false
8;false,true;workedunder(E, G), movie(F, G).;false;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true,false;workedunder(A, D), movie(E, C).;false;false
9;true,false,false;movie(J, C).;false;false
9;true,true;workedunder(A, D).;false;true
9;false;workedunder(M, A), movie(N, M).;false;false
9;true;workedunder(C, D), movie(E, D).;true;true
9;true,false;workedunder(C, H), movie(I, H).;false;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A), movie(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A), movie(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then if ( workedunder(F, G) )
%   | | | then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(H, A), movie(I, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(J, A) )
%   | | then if ( workedunder(K, A), workedunder(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.08710547468208353;  // std dev = 0,971, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then return 0.1699568055648703;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0922225800678476;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.13128943076582072;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08478682953449611;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.10287419696914575;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07843495903450498;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, D), movie(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08160330498622399;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0729496378729847;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.306342
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.944 seconds
Total inference time: 0.749 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(I, A), movie(J, A)', 'false,false': 'workedunder(G, A), movie(H, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(H, A), movie(I, H)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true,true': 'workedunder(F, G)', 'false,false': 'movie(J, A)', 'true,true': 'movie(E, C)', 'false': 'workedunder(H, A), movie(I, A)', 'false,false,true': 'workedunder(K, A), workedunder(K, L)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'false,false,true,false': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.971, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(H, A), movie(I, H)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)'}, {'false,false,false,false': [0.0, 3, 0], 'true,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D), movie(E, C)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [1.86e-09, 3, 0], 'true,true,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true,false': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 3, 0], 'true,true,false,false': [0.894, 1, 4], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.24999999999999986, nan], 'true': [0.15999999999999986, 0.0], 'true,false': [nan, 0.0]}, {'': [0.20948195373304385, nan], 'true': [0.16, 0.0], 'true,false': [0.0, nan]}, {'': [0.15999999999999998, 2.3129646346357427e-18], 'false': [nan, 2.3129646346357427e-18], 'false,false,false': [nan, 2.3129646346357427e-18], 'false,false': [nan, 2.3129646346357427e-18]}, {'': [0.15999999999999998, -1.1564823173178713e-18], 'false': [nan, -1.1564823173178713e-18], 'false,false,false': [nan, -1.1564823173178713e-18], 'false,false': [nan, -1.1564823173178713e-18]}, {'': [0.16, 2.3129646346357427e-18], 'true,true,true': [0.16, nan], 'false,false': [2.3129646346357427e-18, nan], 'true,true': [0.16, nan], 'false': [nan, 2.3129646346357427e-18], 'false,false,true': [nan, 2.3129646346357427e-18], 'true': [0.16, nan]}, {'': [0.11781035319965033, nan]}, {'': [0.16, -1.1564823173178713e-18], 'false,false': [nan, -1.1564823173178713e-18], 'false': [nan, -1.1564823173178713e-18], 'false,false,false': [nan, -1.1564823173178713e-18], 'true': [0.16, nan]}, {'': [0.16, 1.1564823173178713e-18], 'false': [nan, 1.1564823173178713e-18], 'true': [0.16, nan], 'true,true': [nan, 0.16]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'true,true,false': [nan, 0.16], 'true': [0.16, nan], 'true,true': [nan, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.834 seconds
Total inference time: 0.586 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 07:00:23
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 16384, 'Numbers preds mapping': [8], 'Possible mappings': [1299], 'Generating mappings time': 0.2333996295928955, 'Total time': 2.2035887241363525, 'Generating paths time': 1.9308581352233887, 'Knowledge compiling time': 0.0393218994140625}, 'CLL': -0.300536, 'Learning time': 1.778, 'AUC PR': 0.843137, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Recall': 1.0, 'Precision': [0.843137, 0.5], 'parameter': {'CLL': -0.306342, 'Learning time': 0.944, 'AUC PR': 0.843137, 'F1': 0.914894, 'AUC ROC': 0.906977, 'Recall': 1.0, 'Precision': [0.843137, 0.5], 'Inference time': 0.749}, 'Inference time': 0.586}


Start learning from scratch in target domain

Starting fold 5

Target predicate: genre
Mapping Results
   Knowledge compiling time   = 0.018491744995117188
   Generating paths time   = 1.9186789989471436
   Generating mappings time   = 0.2349073886871338
   Possible mappings   = [1299]
   Max mapping   = 16384
   Numbers predicates mapping   = [8]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 2.172086000442505


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> movie(A,B)', 'sameperson(A,B) -> workedunder(A,B)', 'inphase(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(M, A), movie(N, M).;false;true
0;false,false,false;workedunder(P, A).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(E, A).;true;true
1;false,false;workedunder(Q, A), movie(R, Q).;false;true
1;false,false,false;workedunder(S, A).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false,false;workedunder(P, A), movie(Q, P).;false;true
2;false;workedunder(L, A), movie(M, A).;true;true
2;false,false,false;workedunder(R, A), movie(S, A).;false;false
2;false,true;workedunder(L, N).;false;false
3;;genre(A, B) :- workedunder(E, A), movie(F, A).;false;true
3;false;workedunder(L, A), movie(M, A).;false;true
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true,true;workedunder(H, C).;false;false
4;false,false;movie(L, A).;true;true
4;false,false,false;workedunder(P, A).;false;false
4;true,true;movie(G, E).;true;false
4;false;workedunder(J, A), movie(K, A).;false;true
4;false,false,true;workedunder(M, A), workedunder(M, N).;false;false
4;true;workedunder(E, F), movie(G, F).;true;false
5;;genre(A, B) :- movie(G, E).;false;true
5;false,false;workedunder(K, A).;true;true
5;false,false,false;workedunder(N, A).;false;false
5;false,true,true;workedunder(I, J), movie(H, J).;false;false
5;false,false,true;workedunder(K, L), movie(M, L).;false;false
5;false;movie(H, A), workedunder(I, A).;true;true
5;false,true;movie(H, I).;true;false
6;;genre(A, B) :- workedunder(E, A).;true;true
6;false,false;workedunder(Q, A), movie(R, Q).;false;true
6;false,false,false;workedunder(S, A).;false;false
6;false,true,false;workedunder(H, M).;false;false
6;false,true,true;movie(I, A), movie(I, J).;false;false
6;false,true;workedunder(H, J).;true;true
6;false;workedunder(H, A), movie(I, H).;true;true
6;true;workedunder(E, F), movie(G, F).;false;false
7;;genre(A, B) :- workedunder(C, A).;true;true
7;true,false,false;movie(J, C).;false;false
7;true,true;workedunder(A, D), movie(E, C).;false;false
7;false;workedunder(M, A), movie(N, M).;false;false
7;true;workedunder(C, D), movie(E, D).;true;true
7;true,false;workedunder(C, H), movie(I, H).;false;true
8;;genre(A, B) :- workedunder(C, A), movie(D, C).;false;true
8;false,false;workedunder(N, A), workedunder(N, P).;true;true
8;false,false,false;workedunder(S, A).;false;false
8;false,true,false;workedunder(L, A), movie(M, L).;false;false
8;false;workedunder(E, A), movie(F, E).;true;true
8;false,false,true;movie(Q, A), movie(R, N).;false;false
8;false,true;workedunder(E, G), movie(F, G).;false;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true,false;workedunder(A, D), movie(E, C).;false;false
9;true,false,false;movie(J, C).;false;false
9;true,true;workedunder(A, D).;false;true
9;false;workedunder(M, A), movie(N, M).;false;false
9;true;workedunder(C, D), movie(E, D).;true;true
9;true,false;workedunder(C, H), movie(I, H).;false;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), movie(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A), movie(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A), movie(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then if ( workedunder(F, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(H, A), movie(I, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(J, A) )
%   | | then if ( workedunder(K, A), workedunder(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, D) )
%   then return 0.08499374559054629;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then return 0.23935700108516422;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), movie(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09204594339777658;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D), movie(E, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19852082828804796;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08463679078745934;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.16880983112775338;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A), movie(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A), workedunder(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07830602720680806;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( workedunder(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(A, D), movie(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14642805445214568;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A), movie(G, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07283771686569032;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302038
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.813 seconds
Total inference time: 0.773 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,false,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(I, A), movie(J, A)', 'false,false': 'workedunder(G, A), movie(H, G)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, A)', 'false': 'workedunder(E, A), movie(F, A)', 'false,false,false': 'workedunder(H, A), movie(I, H)', 'false,false': 'workedunder(G, A)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true,true': 'workedunder(F, G)', 'false,false': 'movie(J, A)', 'true,true': 'movie(E, C)', 'false': 'workedunder(H, A), movie(I, A)', 'false,false,true': 'workedunder(K, A), workedunder(K, L)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.34, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false,false': 'workedunder(H, A), movie(I, H)', 'false,false,false': 'workedunder(J, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)'}, {'false,false,false,false': [0.0, 2, 0], 'true,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D), movie(E, C)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), movie(D, C)', 'false': 'workedunder(E, A), movie(F, E)', 'false,false,false': 'workedunder(I, A)', 'false,false': 'workedunder(G, A), workedunder(G, H)'}, {'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(F, A), movie(G, F)', 'true,true,false': 'workedunder(A, D), movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'true,true': 'workedunder(A, D)'}, {'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.25, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.17847162811629394, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'false,false': [0.0, nan], 'true,true': [0.0, nan], 'false': [nan, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.028960720834012167, nan]}, {'': [0.0, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'true,true,false': [nan, 0.0], 'true': [0.0, nan], 'true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(C, A), movie(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A), movie(D, C).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299463
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.678 seconds
Total inference time: 0.556 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 07:00:29
{'Mapping results': {'Finding best mapping': 7.152557373046875e-07, 'Max mapping': 16384, 'Numbers preds mapping': [8], 'Possible mappings': [1299], 'Generating mappings time': 0.2349073886871338, 'Total time': 2.172086000442505, 'Generating paths time': 1.9186789989471436, 'Knowledge compiling time': 0.018491744995117188}, 'CLL': -0.299463, 'Learning time': 1.491, 'AUC PR': 0.833333, 'F1': 0.909091, 'AUC ROC': 0.9, 'Recall': 1.0, 'Precision': [0.833333, 0.5], 'parameter': {'CLL': -0.302038, 'Learning time': 0.813, 'AUC PR': 0.833333, 'F1': 0.909091, 'AUC ROC': 0.9, 'Recall': 1.0, 'Precision': [0.833333, 0.5], 'Inference time': 0.773}, 'Inference time': 0.556}


Start learning from scratch in target domain

