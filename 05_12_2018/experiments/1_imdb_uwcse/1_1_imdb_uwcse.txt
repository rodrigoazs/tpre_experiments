Starting experiment #1 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 382

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048804;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839202;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360675;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926053;  // std dev = 1,13e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333703;  // std dev = 8,56e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420307;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202618;  // std dev = 4,71e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'director(person).', 'movie(movie,person).']

Starting fold 1

Target predicate: advisedby
Mapping Results
   Knowledge compiling time   = 0.014141559600830078
   Generating paths time   = 1.8955297470092773
   Generating mappings time   = 0.013683557510375977
   Possible mappings   = [180]
   Max mapping   = 1296
   Numbers predicates mapping   = [4]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 1.9233622550964355


Best mapping found: ['movie(A,B) -> publication(A,B)', 'actor(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

Target train facts examples: 673
Target train pos examples: 35
Target train neg examples: 35

Target test facts examples: 1601
Target test pos examples: 78
Target test neg examples: 78

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.6981489350995124;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.14185106490048777;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.5906067787080473;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.46509811886993035;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.11231637819360636;  // std dev = 1,83e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3515344950410331;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.26424079302882064;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.09269127618926096;  // std dev = 1,05e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2013224077066599;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.08518475138839685;  // std dev = 1,39e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.15627330750411392;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12348807414404181;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09908822601080444;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.08052540822653942;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.06419184008202619;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.951677
   AUC PR    = 0.929498
   CLL	      = -0.232353
   Precision = 0.886364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.939759


Total learning time: 4.784 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.951677


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 31, 0], 'true,true': [5.16e-08, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.83e-08, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 31, 0], 'true,true': [4.21e-08, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.05e-08, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.39e-08, 31, 0], 'true,true': [2.11e-08, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [7.45e-09, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 31, 0], 'true,true': [0.0, 0, 14], 'true,false': [1.833, 4, 21]}]]
[{'': [0.09204470742932458, -3.581364595565021e-18], 'true': [-2.5376526277146434e-16, 0.1343999999999997]}, {'': [0.08997522237385315, -7.162729191130042e-18], 'true': [1.9032394707859825e-16, 0.13440000000000013]}, {'': [0.08802888180425956, 1.0744093786695063e-17], 'true': [-2.5376526277146434e-16, 0.13440000000000013]}, {'': [0.08715557795546391, -7.162729191130042e-18], 'true': [1.2688263138573217e-16, 0.13439999999999988]}, {'': [0.08688766797116783, 3.581364595565021e-18], 'true': [-3.172065784643304e-17, 0.13440000000000005]}, {'': [0.08682112534527547, 6.267388042238787e-18], 'true': [3.172065784643304e-17, 0.13440000000000002]}, {'': [0.08681209971696041, -1.7906822977825105e-18], 'true': [-3.172065784643304e-17, 0.13440000000000005]}, {'': [0.08681515587005474, 1.7906822977825105e-18], 'true': [0.0, 0.13440000000000002]}, {'': [0.08681632110386207, -4.476705744456276e-18], 'true': [-1.9825411154020653e-17, 0.1344]}, {'': [0.0868120311334199, -8.953411488912552e-19], 'true': [0.0, 0.13439999999999996]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5851860008555358;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.6330362294960677;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.2209254696911421;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4804017714681302;  // std dev = 1,291, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.11231637819360636;  // std dev = 1,83e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.48057776598434526;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.2865070071763935;  // std dev = 1,073, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.34245287550262843;  // std dev = 1,271, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.1348737168804159;  // std dev = 0,647, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.33794901215064055;  // std dev = 0,835, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2201368040283639;  // std dev = 1,258, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 1,05e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1061461630818232;  // std dev = 1,021, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.37295479543070903;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20506520173887588;  // std dev = 1,267, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.08518475138839685;  // std dev = 1,39e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.26520148505250374;  // std dev = 0,115, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.012032636372851901;  // std dev = 0,975, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1720787410615045;  // std dev = 1,283, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.011651581863415639;  // std dev = 0,572, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.20158387535776146;  // std dev = 0,826, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.08023208815872493;  // std dev = 1,252, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.02740953273594702;  // std dev = 0,987, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.2451711542028255;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1047701389435901;  // std dev = 1,266, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.18014665641484673;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return -0.03610434725232062;  // std dev = 0,954, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09549199490634826;  // std dev = 1,278, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.06419184008202619;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.962853
   AUC PR    = 0.936042
   CLL	      = -0.211338
   Precision = 0.905882 at threshold = 0.5
   Recall    = 0.987179
   F1        = 0.944785


Total learning time: 5.609 seconds
Total inference time: 0.757 seconds
AUC ROC: 0.962853


Refined model AUC ROC: 0.962853


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:20
{'Mapping results': {'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 1296, 'Numbers preds mapping': [4], 'Possible mappings': [180], 'Generating mappings time': 0.013683557510375977, 'Total time': 1.9233622550964355, 'Generating paths time': 1.8955297470092773, 'Knowledge compiling time': 0.014141559600830078}, 'CLL': -0.211338, 'Learning time': 10.393, 'AUC PR': 0.936042, 'F1': 0.944785, 'AUC ROC': 0.962853, 'Recall': 0.987179, 'Precision': [0.905882, 0.5], 'parameter': {'CLL': -0.232353, 'Learning time': 4.784, 'AUC PR': 0.929498, 'F1': 0.939759, 'AUC ROC': 0.951677, 'Recall': 1.0, 'Precision': [0.886364, 0.5], 'Inference time': 0.81}, 'Inference time': 0.757}


Start learning from scratch in target domain

Starting fold 2

Target predicate: advisedby
Mapping Results
   Knowledge compiling time   = 0.013285160064697266
   Generating paths time   = 2.02143931388855
   Generating mappings time   = 0.013892889022827148
   Possible mappings   = [180]
   Max mapping   = 1296
   Numbers predicates mapping   = [4]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.048624277114868


Best mapping found: ['movie(A,B) -> publication(A,B)', 'actor(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

Target train facts examples: 402
Target train pos examples: 20
Target train neg examples: 20

Target test facts examples: 1872
Target test pos examples: 93
Target test neg examples: 93

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5956068723141557;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46863440886780416;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3540171821738477;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2662055261992428;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20307171050188988;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1579278943667103;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12508565429655724;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10063530397647748;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06842697784420272;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08201840165050943;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.952307
   AUC PR    = 0.931984
   CLL	      = -0.231667
   Precision = 0.885714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.939394


Total learning time: 6.947 seconds
Total inference time: 0.726 seconds
AUC ROC: 0.952307


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [7.45e-09, 18, 0], 'true,true': [2.98e-08, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [9.13e-09, 18, 0], 'true,true': [0.0, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 18, 0], 'true,true': [3.33e-08, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [5.27e-09, 18, 0], 'true,true': [1.83e-08, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 18, 0], 'true,true': [7.45e-09, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 18, 0], 'true,true': [0.0, 0, 9], 'true,false': [1.301, 2, 11]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [3.73e-09, 18, 0], 'true,true': [0.0, 0, 9], 'true,false': [1.301, 2, 11]}]]
[{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.13017751479289916]}, {'': [0.08063200586027203, 3.0839528461809902e-18], 'true': [9.868649107779169e-17, 0.13017751479289957]}, {'': [0.07874151912392335, 4.625929269271485e-18], 'true': [-1.4802973661668753e-16, 0.13017751479289946]}, {'': [0.07789770458547739, 0.0], 'true': [1.2335811384723962e-16, 0.13017751479289938]}, {'': [0.07764125846417015, 0.0], 'true': [-3.700743415417188e-17, 0.13017751479289943]}, {'': [0.07757925968481666, 1.5419764230904951e-18], 'true': [3.700743415417188e-17, 0.1301775147928994]}, {'': [0.07757245843873052, -1.5419764230904951e-18], 'true': [-2.4671622769447922e-17, 0.1301775147928994]}, {'': [0.07757700245374001, 0.0], 'true': [6.1679056923619804e-18, 0.13017751479289943]}, {'': [0.07757946176858431, 0.0], 'true': [-3.0839528461809902e-18, 0.13017751479289938]}, {'': [0.07757644395816753, 7.709882115452476e-19], 'true': [0.0, 0.13017751479289943]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7461114953671005;  // std dev = 0,081, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4172178425597916;  // std dev = 1,102, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5832739367563197;  // std dev = 0,105, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3318997483690509;  // std dev = 1,092, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.22417584106546817;  // std dev = 1,039, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.40431099223876665;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5480347680744185;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.43085175162699363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31177257236301215;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16016775573703448;  // std dev = 1,023, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.0992371295298921;  // std dev = 0,993, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.2490626169167326;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37391233028249643;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.30821753009761044;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20543248039516893;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06759538075359897;  // std dev = 0,983, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.23605737622951123;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.21754324355013122;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1729436618236633;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.015395453174893695;  // std dev = 0,548, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.19665490532802538;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11438492220753241;  // std dev = 0,723, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.20408034404069886;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12570467422750298;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.025968743581331027;  // std dev = 0,909, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.958781
   AUC PR    = 0.921956
   CLL	      = -0.228345
   Precision = 0.905263 at threshold = 0.5
   Recall    = 0.924731
   F1        = 0.914894


Total learning time: 6.412 seconds
Total inference time: 1.566 seconds
AUC ROC: 0.958781


Refined model AUC ROC: 0.958781


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:39
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 1296, 'Numbers preds mapping': [4], 'Possible mappings': [180], 'Generating mappings time': 0.013892889022827148, 'Total time': 2.048624277114868, 'Generating paths time': 2.02143931388855, 'Knowledge compiling time': 0.013285160064697266}, 'CLL': -0.228345, 'Learning time': 13.359, 'AUC PR': 0.921956, 'F1': 0.914894, 'AUC ROC': 0.958781, 'Recall': 0.924731, 'Precision': [0.905263, 0.5], 'parameter': {'CLL': -0.231667, 'Learning time': 6.947, 'AUC PR': 0.931984, 'F1': 0.939394, 'AUC ROC': 0.952307, 'Recall': 1.0, 'Precision': [0.885714, 0.5], 'Inference time': 0.726}, 'Inference time': 1.566}


Start learning from scratch in target domain

Starting fold 3

Target predicate: advisedby
Mapping Results
   Knowledge compiling time   = 0.022494077682495117
   Generating paths time   = 1.914208173751831
   Generating mappings time   = 0.013844728469848633
   Possible mappings   = [180]
   Max mapping   = 1296
   Numbers predicates mapping   = [4]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 1.9505553245544434


Best mapping found: ['movie(A,B) -> publication(A,B)', 'actor(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

Target train facts examples: 153
Target train pos examples: 9
Target train neg examples: 9

Target test facts examples: 2121
Target test pos examples: 104
Target test neg examples: 104

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.6581489350995122;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5580193346218546;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4419486100244409;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3354113949509431;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783628;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25176837314502193;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19047961032437188;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839687;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14620194507639955;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.11389369465607471;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.0898995618030187;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.07174810215160454;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.959689
   AUC PR    = 0.943146
   CLL	      = -0.225631
   Precision = 0.896552 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.945455


Total learning time: 2.609 seconds
Total inference time: 0.748 seconds
AUC ROC: 0.959689


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [2.63e-09, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [2.63e-09, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [2.63e-09, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.86e-09, 7, 0], 'true,true': [0.0, 0, 1], 'true,false': [1.265, 2, 8]}]]
[{'': [0.14876033057851218, 0.0], 'true': [0.0, 0.15999999999999986]}, {'': [0.14760887761736755, -1.982541115402065e-18], 'true': [0.0, 0.1600000000000001]}, {'': [0.1465176531750667, 0.0], 'true': [0.0, 0.1600000000000001]}, {'': [0.14601163384071422, -1.982541115402065e-18], 'true': [0.0, 0.16000000000000003]}, {'': [0.14584737211646895, 9.912705577010326e-19], 'true': [0.0, 0.16]}, {'': [0.14580042451791747, -9.912705577010326e-19], 'true': [0.0, 0.15999999999999998]}, {'': [0.14578837487363505, -9.912705577010326e-19], 'true': [0.0, 0.16]}, {'': [0.14578467721639113, 9.912705577010326e-19], 'true': [0.0, 0.16]}, {'': [0.14578094260960886, 9.912705577010326e-19], 'true': [0.0, 0.15999999999999998]}, {'': [0.1457748904213082, 4.956352788505163e-19], 'true': [0.0, 0.15999999999999998]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926096;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.933617
   AUC PR    = 0.880096
   CLL	      = -0.271719
   Precision = 0.896552 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.945455


Total learning time: 3.436 seconds
Total inference time: 0.894 seconds
AUC ROC: 0.933617


Refined model AUC ROC: 0.933617


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:49
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 1296, 'Numbers preds mapping': [4], 'Possible mappings': [180], 'Generating mappings time': 0.013844728469848633, 'Total time': 1.9505553245544434, 'Generating paths time': 1.914208173751831, 'Knowledge compiling time': 0.022494077682495117}, 'CLL': -0.271719, 'Learning time': 6.045, 'AUC PR': 0.880096, 'F1': 0.945455, 'AUC ROC': 0.933617, 'Recall': 1.0, 'Precision': [0.896552, 0.5], 'parameter': {'CLL': -0.225631, 'Learning time': 2.609, 'AUC PR': 0.943146, 'F1': 0.945455, 'AUC ROC': 0.959689, 'Recall': 1.0, 'Precision': [0.896552, 0.5], 'Inference time': 0.748}, 'Inference time': 0.894}


Start learning from scratch in target domain

Starting fold 4

Target predicate: advisedby
Mapping Results
   Knowledge compiling time   = 0.014417648315429688
   Generating paths time   = 1.9410831928253174
   Generating mappings time   = 0.013716936111450195
   Possible mappings   = [180]
   Max mapping   = 1296
   Numbers predicates mapping   = [4]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 1.9692249298095703


Best mapping found: ['movie(A,B) -> publication(A,B)', 'actor(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

Target train facts examples: 648
Target train pos examples: 33
Target train neg examples: 33

Target test facts examples: 1626
Target test pos examples: 80
Target test neg examples: 80

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7867203636709409;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7277141524908167;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6622329172201352;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.6145965951068212;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5154428111118985;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.4820310770235997;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.11231637819360635;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3875647182006322;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3634800616999764;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.10159632948783631;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.29398103437200096;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.273806964396987;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.09269127618926094;  // std dev = 1,29e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2288562690978686;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.20993902519493918;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.08518475138839686;  // std dev = 1,29e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18306311556471894;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.16449338179098769;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14991371797684416;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.13147590894712882;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12515667139271322;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.10686565883702655;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.06842697784420275;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.10613658840585892;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.08806971003324962;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.959375
   AUC PR    = 0.95045
   CLL	      = -0.231815
   Precision = 0.888889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941176


Total learning time: 5.754 seconds
Total inference time: 0.713 seconds
AUC ROC: 0.959375


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.97e-08, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.29e-08, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [1.29e-08, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [5.27e-09, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [3.73e-09, 29, 0], 'true,true': [0.964, 1, 13], 'true,false': [1.615, 3, 20]}]]
[{'': [0.09642074506939538, -3.828355257328126e-18], 'true': [0.06632653061224467, 0.11342155009451776]}, {'': [0.09613555191013942, -3.828355257328126e-18], 'true': [0.0663265306122444, 0.11342155009451807]}, {'': [0.09586438622896981, 1.3399243400648442e-17], 'true': [0.06632653061224501, 0.11342155009451796]}, {'': [0.09573825036240789, -5.742532885992189e-18], 'true': [0.06632653061224479, 0.11342155009451801]}, {'': [0.09569754109975936, 5.742532885992189e-18], 'true': [0.06632653061224496, 0.11342155009451796]}, {'': [0.09568598509073324, 5.742532885992189e-18], 'true': [0.0663265306122449, 0.11342155009451795]}, {'': [0.09568292100918854, -2.8712664429960945e-18], 'true': [0.06632653061224485, 0.113421550094518]}, {'': [0.09568177267331078, 9.570888143320315e-19], 'true': [0.06632653061224492, 0.11342155009451795]}, {'': [0.09568050451041507, -3.828355257328126e-18], 'true': [0.06632653061224489, 0.11342155009451797]}, {'': [0.09567858778808452, 4.785444071660157e-19], 'true': [0.0663265306122449, 0.11342155009451796]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( ta(E, C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(D, G), student(G) )
%   | | | then return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.1418510649004878;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, E), student(E) )
%   | | then if ( ta(F, A, G), ta(H, E, G) )
%   | | | then return 0.40612648817719116;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7440021872604269;  // std dev = 0,038, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.39834435642446797;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5870285591988891;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.256579751816355;  // std dev = 0,957, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( ta(G, A, H) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.6424616467697246;  // std dev = 0,192, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.30245463782795645;  // std dev = 0,605, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360635;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.5015554697892487;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.08944200149696223;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3566944779700506;  // std dev = 0,643, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.44084169679471713;  // std dev = 0,260, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3350234215815933;  // std dev = 0,617, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10159632948783631;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, E), student(E) )
%   | | then if ( publication(F, C), publication(G, A) )
%   | | | then return 0.09913056520415355;  // std dev = 0,630, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3349559313110387;  // std dev = 0,865, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.008087603175510272;  // std dev = 0,731, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3283899607891315;  // std dev = 0,062, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.09269127618926094;  // std dev = 1,29e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.1211025033484181;  // std dev = 0,650, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( ta(E, A, F) )
%   | | then if ( publication(G, A), publication(G, B) )
%   | | | then return 0.1693692606659222;  // std dev = 0,801, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2996926993496965;  // std dev = 0,387, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(H, A), publication(H, B) )
%   | | | then return 0.2756012243979694;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13948555609762808;  // std dev = 0,729, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839686;  // std dev = 1,29e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.26717739905282084;  // std dev = 0,053, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, A), ta(G, A, H) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.04790060071046555;  // std dev = 0,951, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20467021448088296;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.242613634180904;  // std dev = 0,105, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.17030349978834092;  // std dev = 0,825, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( ta(E, C, F) )
%   | | then return 0.2246741653997677;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(D, G), student(G) )
%   | | | then return 0.13775085354864336;  // std dev = 1,046, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.09129483271396976;  // std dev = 0,693, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.18263887202383544;  // std dev = 0,064, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.053662464785052266;  // std dev = 0,769, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19534276120227662;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0018918264751431769;  // std dev = 0,790, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | then return 0.24894512350742842;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.00398746967653522;  // std dev = 0,431, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15640307448042268;  // std dev = 0,056, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.06842697784420275;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( ta(E, D, F) )
%   | | then return 0.18584901266161577;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.0760521225050997;  // std dev = 0,953, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10628537722915098;  // std dev = 0,504, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(I, A) )
%   | | then return 0.13669882274968265;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(J, A, K), tempadvisedby(L, B) )
%   | | | then return 0.20971638328822279;  // std dev = 0,261, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0987848239457687;  // std dev = 0,480, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.943672
   AUC PR    = 0.901374
   CLL	      = -0.239406
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.975
   F1        = 0.934132


Total learning time: 11.425 seconds
Total inference time: 0.879 seconds
AUC ROC: 0.943672


Refined model AUC ROC: 0.943672


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:11
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 1296, 'Numbers preds mapping': [4], 'Possible mappings': [180], 'Generating mappings time': 0.013716936111450195, 'Total time': 1.9692249298095703, 'Generating paths time': 1.9410831928253174, 'Knowledge compiling time': 0.014417648315429688}, 'CLL': -0.239406, 'Learning time': 17.179000000000002, 'AUC PR': 0.901374, 'F1': 0.934132, 'AUC ROC': 0.943672, 'Recall': 0.975, 'Precision': [0.896552, 0.5], 'parameter': {'CLL': -0.231815, 'Learning time': 5.754, 'AUC PR': 0.95045, 'F1': 0.941176, 'AUC ROC': 0.959375, 'Recall': 1.0, 'Precision': [0.888889, 0.5], 'Inference time': 0.713}, 'Inference time': 0.879}


Start learning from scratch in target domain

Starting fold 5

Target predicate: advisedby
Mapping Results
   Knowledge compiling time   = 0.011813879013061523
   Generating paths time   = 1.8799021244049072
   Generating mappings time   = 0.013770103454589844
   Possible mappings   = [180]
   Max mapping   = 1296
   Numbers predicates mapping   = [4]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 1.9054934978485107


Best mapping found: ['movie(A,B) -> publication(A,B)', 'actor(A) -> student(A)', 'workedunder(A,B) -> advisedby(A,B)', 'director(A) -> professor(A)'] 

Transferred target predicate: advisedby 

Target train facts examples: 398
Target train pos examples: 16
Target train neg examples: 16

Target test facts examples: 1876
Target test pos examples: 97
Target test neg examples: 97

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, A), publication(C, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true;publication(C, A), publication(C, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;publication(C, A), publication(C, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A), publication(C, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), publication(C, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(C, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;publication(C, A), publication(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174346;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.11231637819360639;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3584548159137825;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.10159632948783627;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26974781327936176;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2062525881598365;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16095555079641383;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12802275604229368;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10349083403071092;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0847844074826777;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.956584
   AUC PR    = 0.939
   CLL	      = -0.224265
   Precision = 0.889908 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941748


Total learning time: 2.902 seconds
Total inference time: 0.734 seconds
AUC ROC: 0.956584


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [5.27e-09, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [3.73e-09, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [5.27e-09, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [3.73e-09, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'false': [0.0, 14, 0], 'true,true': [0.0, 0, 4], 'true,false': [1.309, 2, 12]}]]
[{'': [0.09876543209876518, -7.93016446160826e-18], 'true': [0.0, 0.1224489795918365]}, {'': [0.09752177624328932, 1.982541115402065e-18], 'true': [0.0, 0.12244897959183675]}, {'': [0.09635627109875718, -1.982541115402065e-18], 'true': [0.0, 0.1224489795918368]}, {'': [0.09584094873799476, 0.0], 'true': [0.0, 0.1224489795918368]}, {'': [0.09568701694786837, 0.0], 'true': [0.0, 0.12244897959183675]}, {'': [0.09565172309273523, 9.912705577010326e-19], 'true': [0.0, 0.12244897959183675]}, {'': [0.09564973867140004, -9.912705577010326e-19], 'true': [0.0, 0.12244897959183677]}, {'': [0.09565433288928334, 1.982541115402065e-18], 'true': [0.0, 0.12244897959183676]}, {'': [0.09565737974810574, 9.912705577010326e-19], 'true': [0.0, 0.12244897959183672]}, {'': [0.09565686229927794, -4.956352788505163e-19], 'true': [0.0, 0.12244897959183673]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;advisedby(A, B) :- student(A), professor(B).;true;true', '0;true;publication(C, A), publication(C, B).;true;true', '1;;advisedby(A, B) :- professor(B), student(A).;true;true', '1;true;publication(C, A), publication(C, B).;true;true', '2;;advisedby(A, B) :- student(A), professor(B).;true;true', '2;true;publication(C, A), publication(C, B).;true;true', '3;;advisedby(A, B) :- student(A), professor(B).;true;true', '3;true;publication(C, A), publication(C, B).;true;true', '4;;advisedby(A, B) :- student(A), professor(B).;true;true', '4;true;publication(C, A), publication(C, B).;true;true', '5;;advisedby(A, B) :- student(A), professor(B).;true;true', '5;true;publication(C, A), publication(C, B).;true;true', '6;;advisedby(A, B) :- professor(B), student(A).;true;true', '6;true;publication(C, A), publication(C, B).;true;true', '7;;advisedby(A, B) :- professor(B), student(A).;true;true', '7;true;publication(C, A), publication(C, B).;true;true', '8;;advisedby(A, B) :- professor(B), student(A).;true;true', '8;true;publication(C, A), publication(C, B).;true;true', '9;;advisedby(A, B) :- student(A), professor(B).;true;true', '9;true;publication(C, A), publication(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.25206564481433;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783627;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.19292386438161405;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.14565792934085833;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.10936989620321738;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.08203625432353104;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.06159524961500464;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.04632822707005526;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.94027
   AUC PR    = 0.893929
   CLL	      = -0.262004
   Precision = 0.889908 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.941748


Total learning time: 3.62 seconds
Total inference time: 0.761 seconds
AUC ROC: 0.94027


Refined model AUC ROC: 0.94027


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:21
{'Mapping results': {'Finding best mapping': 9.5367431640625e-07, 'Max mapping': 1296, 'Numbers preds mapping': [4], 'Possible mappings': [180], 'Generating mappings time': 0.013770103454589844, 'Total time': 1.9054934978485107, 'Generating paths time': 1.8799021244049072, 'Knowledge compiling time': 0.011813879013061523}, 'CLL': -0.262004, 'Learning time': 6.522, 'AUC PR': 0.893929, 'F1': 0.941748, 'AUC ROC': 0.94027, 'Recall': 1.0, 'Precision': [0.889908, 0.5], 'parameter': {'CLL': -0.224265, 'Learning time': 2.902, 'AUC PR': 0.939, 'F1': 0.941748, 'AUC ROC': 0.956584, 'Recall': 1.0, 'Precision': [0.889908, 0.5], 'Inference time': 0.734}, 'Inference time': 0.761}


Start learning from scratch in target domain

