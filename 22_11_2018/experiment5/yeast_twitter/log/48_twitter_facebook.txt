Starting experiment #1 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.30710485157282547;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.022705897124827956;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.2325331715527153;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.10721956706977373;  // std dev = 7,093, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.6000495830476718;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.2305979146913504;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.16172036367093948;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.5891430871462932;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.2654683373939499;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.019919382770061056;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.10467915008755657;  // std dev = 6,551, 223,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=58 */
%   | | | else return 0.17195911181820797;  // std dev = 7,468, 249,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=85 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.5104166107811955;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.20014733368536436;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.14087213986708674;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.5014446868296581;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.22232380519238226;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.017437519482758027;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.1758542996712;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.07776250655538644;  // std dev = 7,097, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.40776385953863115;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1697087003887462;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1207589236705913;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.4012654222875438;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1810166231699019;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.015236050630894716;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.14638678795128449;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.06644061878547905;  // std dev = 7,097, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.31188074436489177;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14089299828557916;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1020236355343599;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.3074270046611576;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.14405899304585168;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.013290345648311537;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.11960187827479168;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.05631381592251631;  // std dev = 7,097, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.23437351721893054;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1148820374315997;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.0851048614257673;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.23117410180785233;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.11270072693079072;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.011576144536083214;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0962358278887059;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.04740035861167803;  // std dev = 7,097, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.17616233347092475;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09230973482782298;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.07022664775624916;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.17363421357609404;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08710200444280136;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.010070101328655228;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.07650743934855946;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.03966178050422366;  // std dev = 7,097, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.13348754461837817;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07332256916930585;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.05742905966413552;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.13132457951287174;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06675683961366856;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.008750156541727425;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06026291719309745;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.033020563556773144;  // std dev = 7,097, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H) )
%   | then if ( tweets(A, H) )
%   | | then return 0.10218407762633143;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.0577278046766802;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.10578220284357555;  // std dev = 5,693, 167,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=123 */
%   | else if ( tweets(A, J) )
%   | | then return 0.04661809586391689;  // std dev = 0,460, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return -0.13074474326420815;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.05087502095452114;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.007595769957434004;  // std dev = 0,371, 237,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.047136257822081064;  // std dev = 6,895, 203,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | | else return 0.02737601338135484;  // std dev = 7,098, 269,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.07898416912320304;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04514647472950382;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.03761702584538795;  // std dev = 4,866, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return 0.07726211789372331;  // std dev = 0,443, 171,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=125 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.03862384851895477;  // std dev = 0,497, 862,000 (wgt'ed) examples reached here.  /* #neg=475 #pos=387 */
%   | else if ( tweets(B, E) )
%   | | then return 0.020469371151393724;  // std dev = 0,427, 440,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=115 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.03567556655171929;  // std dev = 6,551, 223,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=58 */
%   | | | else return -0.04068882848052755;  // std dev = 2,691, 46,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   else if ( tweets(B, G) )
%   | then if ( tweets(A, G) )
%   | | then return 0.061567673051422606;  // std dev = 0,438, 926,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=687 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.035129929112934846;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.06425970683269568;  // std dev = 5,693, 167,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=123 */
%   | else if ( tweets(A, I) )
%   | | then return 0.03020898244556753;  // std dev = 0,460, 112,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else return -0.11820362351747915;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.1677711009979248
   Generating paths time   = 2.481740951538086
   Generating mappings time   = 0.35915303230285645
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.0086746215820312


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> educationyear(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
0;true;languages(A, D), languages(B, D).;false;true
0;false,false;languages(A, I).;true;false
0;true,false;languages(B, E), languages(A, F).;false;true
0;false;languages(B, H), languages(A, H).;false;true
0;true,false,false;languages(B, G).;false;false
0;false,false,true;languages(B, J).;false;false
1;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
1;true;languages(B, D), languages(A, D).;false;true
1;false,false;languages(A, I).;true;false
1;true,false;languages(B, E), languages(A, F).;false;true
1;false;languages(A, H), languages(B, H).;false;true
1;true,false,false;languages(A, G).;false;false
1;false,false,true;languages(B, J).;false;false
2;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
2;true;languages(A, D), languages(B, D).;false;true
2;false,false;languages(A, I).;true;false
2;true,false;languages(B, E), languages(A, F).;false;true
2;false;languages(A, H), languages(B, H).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
3;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
3;true;languages(B, D), languages(A, D).;false;true
3;false,false;languages(A, I).;true;false
3;true,false;languages(A, E), languages(B, F).;false;true
3;false;languages(B, H), languages(A, H).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
4;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
4;true;languages(A, D), languages(B, D).;false;true
4;false,false;languages(A, I).;true;false
4;true,false;languages(B, E), languages(A, F).;false;true
4;false;languages(A, H), languages(B, H).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
5;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
5;true;languages(B, D), languages(A, D).;false;true
5;false,false;languages(A, I).;true;false
5;true,false;languages(A, E), languages(B, F).;false;true
5;false;languages(A, H), languages(B, H).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
6;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
6;true;languages(A, D), languages(B, D).;false;true
6;false,false;languages(A, I).;true;false
6;true,false;languages(B, E), languages(A, F).;false;true
6;false;languages(B, H), languages(A, H).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
7;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
7;true;languages(A, D), languages(B, D).;false;true
7;false,false;languages(A, J).;false;false
7;true,false;languages(A, E), languages(B, F).;false;true
7;false;languages(B, H).;true;true
7;true,false,false;languages(B, G).;false;false
7;false,true;languages(A, H).;false;true
7;false,true,false;languages(A, I).;false;false
8;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
8;true;languages(B, D), languages(A, D).;false;true
8;false,false;languages(A, I).;true;false
8;true,false;languages(B, E), languages(A, F).;false;true
8;false;languages(B, H), languages(A, H).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
9;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
9;true;languages(A, D), languages(B, D).;false;true
9;false,false;languages(A, I).;false;false
9;true,false;languages(B, E).;false;true
9;false;languages(B, G).;true;true
9;true,false,false;languages(A, F).;false;false
9;false,true;languages(A, G).;false;true
9;false,true,false;languages(A, H).;false;false


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5967852987358719;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.5350720120225873;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.5861709131214863;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.4649564468365968;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.40841348536405847;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.3670246747444806;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.26422928254793293;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.3366929324279426;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.5077325308926792;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.45679634380030754;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(A, G) )
%   | | | then return 0.3953183208153343;  // std dev = 10,249, 439,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=265 */
%   | | | else return 0.44735701949579754;  // std dev = 13,120, 777,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=517 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.35110995065743744;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.316240222274101;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.22892941813577228;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.2905819584401385;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.40582171483829854;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.368634303086632;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.41077921545006274;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.3206980694228077;  // std dev = 14,257, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.2892064992225873;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.2622583491472382;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.19306445838149727;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.24218123606355638;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3105493684292718;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.28506232759795114;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.31601937458720025;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.25102215545078777;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.2297199271916607;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.21038113938272515;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.1589129080880245;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.19572960984787924;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.23341432529587464;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.2154552774157716;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.23793904661618603;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.19165917726381826;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.17777471908458664;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.16455443177962156;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.1281726488456698;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.15440483647650616;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.17540097411596234;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.1616727426654549;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.17861731806076592;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.14450958278377227;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.13537187498847178;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.12651526553185546;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.10173521249174489;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.11970560730948382;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.13283332878571177;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.12147876976145222;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.13490090420569764;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.10845997760759951;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.10217768092103759;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.09622690275589434;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.07977779021175709;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.09172512571446653;  // std dev = 38,659, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.10159688885280041;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.09171953690022798;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.10279743436159448;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.08137154629378827;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H) )
%   | then if ( languages(A, H) )
%   | | then return 0.0767960722694201;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | | else if ( languages(A, I) )
%   | | | then return 0.0727249961170077;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.11465513890680745;  // std dev = 18,880, 1.429,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=748 */
%   | else if ( languages(A, J) )
%   | | then return 0.06200342572302478;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.05568585600750452;  // std dev = 33,679, 4.560,000 (wgt'ed) examples reached here.  /* #neg=2.442 #pos=2.118 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.07844784529760626;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.06964349826719593;  // std dev = 5,332, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07903684600121863;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.061137750219078565;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.0576214668542493;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.05476474496052186;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.04787796035928905;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.052785347736772986;  // std dev = 38,638, 5.989,000 (wgt'ed) examples reached here.  /* #neg=3.123 #pos=2.866 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.06107609318035996;  // std dev = 8,243, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E) )
%   | | then return 0.0591225854015965;  // std dev = 10,026, 494,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=353 */
%   | | else if ( languages(A, F) )
%   | | | then return 0.049079563718530186;  // std dev = 10,249, 439,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=265 */
%   | | | else return 0.0427889523340155;  // std dev = 9,911, 413,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=252 */
%   else if ( languages(B, G) )
%   | then if ( languages(A, G) )
%   | | then return 0.04321709787900151;  // std dev = 9,672, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | | else if ( languages(A, H) )
%   | | | then return 0.04115808804096745;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.07365766690821292;  // std dev = 18,880, 1.429,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=748 */
%   | else if ( languages(A, I) )
%   | | then return 0.03679802650492754;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else return 0.029234724195662417;  // std dev = 33,679, 4.560,000 (wgt'ed) examples reached here.  /* #neg=2.442 #pos=2.118 */


Results
   AUC ROC   = 0.498913
   AUC PR    = 0.502482
   CLL	      = -0.702221
   Precision = 0.51622 at threshold = 0.5
   Recall    = 0.097211
   F1        = 0.163612


Total learning time: 167.099 seconds
Total inference time: 4.312 seconds
AUC ROC: 0.498913


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(A, D), languages(B, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E), languages(A, F)', 'false': 'languages(B, H), languages(A, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(B, D), languages(A, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E), languages(A, F)', 'false': 'languages(A, H), languages(B, H)', 'true,false,false': 'languages(A, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [10.249, 174, 265], 'true,false,false,false': [13.12, 260, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(A, D), languages(B, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E), languages(A, F)', 'false': 'languages(A, H), languages(B, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.257, 335, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(B, D), languages(A, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(A, E), languages(B, F)', 'false': 'languages(B, H), languages(A, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(A, D), languages(B, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E), languages(A, F)', 'false': 'languages(A, H), languages(B, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(B, D), languages(A, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(A, E), languages(B, F)', 'false': 'languages(A, H), languages(B, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(A, D), languages(B, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E), languages(A, F)', 'false': 'languages(B, H), languages(A, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [38.659, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(A, D), languages(B, D)', 'false,false': 'languages(A, J)', 'true,false': 'languages(A, E), languages(B, F)', 'false': 'languages(B, H)', 'true,false,false': 'languages(B, G)', 'false,true': 'languages(A, H)', 'false,true,false': 'languages(A, I)'}, {'false,false,true': [21.077, 1094, 748], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'false,true,true': [9.672, 170, 208], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [33.679, 2442, 2118], 'false,true,false,true': [6.499, 83, 86], 'false,true,false,false': [18.88, 681, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(B, D), languages(A, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E), languages(A, F)', 'false': 'languages(B, H), languages(A, H)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)'}, {'false,false,true,true': [6.499, 83, 86], 'false,true': [9.672, 170, 208], 'true,true': [8.243, 92, 260], 'true,false,true': [5.332, 42, 88], 'true,false,false,true': [8.49, 99, 265], 'true,false,false,false': [14.258, 335, 517], 'false,false,false': [38.638, 3123, 2866], 'false,false,true,false': [21.077, 1094, 748]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true': 'languages(A, D), languages(B, D)', 'false,false': 'languages(A, I)', 'true,false': 'languages(B, E)', 'false': 'languages(B, G)', 'true,false,false': 'languages(A, F)', 'false,true': 'languages(A, G)', 'false,true,false': 'languages(A, H)'}, {'false,false,true': [21.077, 1094, 748], 'true,true': [8.243, 92, 260], 'true,false,true': [10.026, 141, 353], 'true,false,false,true': [10.249, 174, 265], 'false,true,true': [9.672, 170, 208], 'true,false,false,false': [9.911, 161, 252], 'false,false,false': [33.679, 2442, 2118], 'false,true,false,true': [6.499, 83, 86], 'false,true,false,false': [18.88, 681, 748]}]]
[{'': [0.22261345364395538, 0.24887505334733356], 'true': [0.19305268595041702, 0.22857887218526085], 'false,false': [0.24272715875714332, 0.249539639949419], 'true,false': [0.21869822485207302, 0.2295246494113556], 'false': [0.2474734749867065, 0.24859375000005773], 'true,false,false': [0.19800597753894827, 0.23859215543652754], 'false,false,true': [0.2499212212457564, 0.24117909886461525]}, {'': [0.22146090832424734, 0.2485240077477641], 'true': [0.19305268595040717, 0.22767893266920733], 'false,false': [0.24250056490741673, 0.2495396399493294], 'true,false': [0.21869822485206694, 0.22856209154714813], 'false': [0.2474734749866961, 0.24832536516555223], 'true,false,false': [0.23925778716383458, 0.2215414414588236], 'false,false,true': [0.24992122124575372, 0.24117909886461716]}, {'': [0.22069195231970717, 0.24818583577329698], 'true': [0.1930526859504104, 0.22726685596613555], 'false,false': [0.2422823101257142, 0.24953963994943917], 'true,false': [0.21869822485207135, 0.22814043434488518], 'false': [0.24747347498670497, 0.24806818655367774], 'true,false,false': [0.19800597753893984, 0.23858573444107578], 'false,false,true': [0.24992122124575658, 0.24117909886457606]}, {'': [0.21982136410837302, 0.24793117106409726], 'true': [0.1930526859504109, 0.2265119209458885], 'false,false': [0.24211767384366226, 0.2495396399494143], 'true,false': [0.2186982248520699, 0.22732672497973078], 'false': [0.24747347498670494, 0.24787260939624883], 'true,false,false': [0.1980059775389455, 0.2385888171042134], 'false,false,true': [0.24992122124575464, 0.24117909886459352]}, {'': [0.2193753147058724, 0.2477736414542746], 'true': [0.1930526859504154, 0.22610862491029238], 'false,false': [0.24201565484982476, 0.2495396399493628], 'true,false': [0.218698224852071, 0.22689130751715467], 'false': [0.24747347498669967, 0.24774936679731246], 'true,false,false': [0.19800597753894617, 0.23859084960393656], 'false,false,true': [0.24992122124575636, 0.24117909886458427]}, {'': [0.21917184409737345, 0.24768931175763445], 'true': [0.19305268595041244, 0.22591940788700607], 'false,false': [0.241961034377272, 0.24953963994937503], 'true,false': [0.21869822485207166, 0.22668673978564458], 'false': [0.24747347498670458, 0.2476820709976278], 'true,false,false': [0.1980059775389448, 0.23859178725878774], 'false,false,true': [0.2499212212457531, 0.24117909886459563]}, {'': [0.21907678510418901, 0.24764841359617923], 'true': [0.1930526859504144, 0.2258296520423138], 'false,false': [0.24193459502768222, 0.2495396399493295], 'true,false': [0.21869822485207077, 0.22658954194682748], 'false': [0.2474734749867007, 0.24764892686790405], 'true,false,false': [0.1980059775389445, 0.2385920226800274], 'false,false,true': [0.24992122124575425, 0.24117909886459374]}, {'': [0.219027702180683, 0.24762982180431575], 'true': [0.19305268595041306, 0.22578317466185416], 'false,false': [0.24117909886460745, 0.24873788088640617], 'true,false': [0.21869822485207033, 0.22653911674239194], 'false': [0.24941980869884417, 0.24657122800410372], 'true,false,false': [0.1980059775389451, 0.23859191255888296], 'false,true': [0.2474734749867041, 0.24966648873791003], 'false,true,false': [0.2499212212457538, 0.24945042729308858]}, {'': [0.2189990138657591, 0.24742752180006247], 'true': [0.19305268595041267, 0.22575625686138254], 'false,false': [0.2419174183041719, 0.24926799124162283], 'true,false': [0.21869822485207077, 0.22650985920614397], 'false': [0.24747347498670078, 0.24742376702206556], 'true,false,false': [0.19800597753894433, 0.23859167139484308], 'false,false,true': [0.24992122124575467, 0.2411790988645999]}, {'': [0.21898026746500804, 0.24742297546002834], 'true': [0.19305268595041347, 0.22573899394434838], 'false,false': [0.24117909886460062, 0.24873788088640042], 'true,false': [0.20346398634660964, 0.23859140568402618], 'false': [0.2493060983820715, 0.2465747717674491], 'true,false,false': [0.2392577871638259, 0.2378626831370274], 'false,true': [0.2474734749867034, 0.24960010687416556], 'false,true,false': [0.249921221245755, 0.24945042729307948]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '0;false,false;languages(A, I).;true;true', '0;true,false;languages(B, E), languages(A, F).;true;true', '0;false;languages(B, H), languages(A, H).;true;true', '0;true,false,false;languages(B, G).;true;true', '0;false,false,true;languages(B, J).;true;true', '1;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '1;false,false;languages(A, I).;true;true', '1;true,false;languages(B, E), languages(A, F).;true;true', '1;false;languages(A, H), languages(B, H).;true;true', '1;true,false,false;languages(A, G).;true;true', '1;false,false,true;languages(B, J).;true;true', '2;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '2;true;languages(A, D), languages(B, D).;true;true', '2;false,false;languages(A, I).;true;true', '2;true,false;languages(B, E), languages(A, F).;true;true', '2;false;languages(A, H), languages(B, H).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '3;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '3;false,false;languages(A, I).;true;true', '3;true,false;languages(A, E), languages(B, F).;true;true', '3;false;languages(B, H), languages(A, H).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '4;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '4;true;languages(A, D), languages(B, D).;true;true', '4;false,false;languages(A, I).;true;true', '4;true,false;languages(B, E), languages(A, F).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '5;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '5;true;languages(B, D), languages(A, D).;true;true', '5;false,false;languages(A, I).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '6;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '6;false,false;languages(A, I).;true;true', '6;true,false;languages(B, E), languages(A, F).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '7;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '7;true;languages(A, D), languages(B, D).;true;true', '7;false,false;languages(A, J).;true;true', '7;true,false;languages(A, E), languages(B, F).;true;true', '7;false;languages(B, H).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,true;languages(A, H).;true;true', '7;false,true,false;languages(A, I).;true;true', '8;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '8;true;languages(B, D), languages(A, D).;true;true', '8;false,false;languages(A, I).;true;true', '8;true,false;languages(B, E), languages(A, F).;true;true', '8;false;languages(B, H), languages(A, H).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '9;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '9;true;languages(A, D), languages(B, D).;true;true', '9;false,false;languages(A, I).;true;true', '9;true,false;languages(B, E).;true;true', '9;false;languages(B, G).;true;true', '9;true,false,false;languages(A, F).;true;true', '9;false,true;languages(A, G).;true;true', '9;false,true,false;languages(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5967852987358719;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.5045085190519595;  // std dev = 0,478, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( educationdegree(B, F), birthday(A, G) )
%   | | then return -0.0168510649004878;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( location(B, H), educationschool(B, I) )
%   | | | then return 0.488401035939845;  // std dev = 7,447, 238,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=150 */
%   | | | else return 0.30976183832531956;  // std dev = 5,542, 124,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=56 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.3670246747444806;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.26422928254793293;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( worklocation(B, L), educationschool(B, M) )
%   | | | then return 0.4301682321360339;  // std dev = 18,847, 1.451,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=830 */
%   | | | else return 0.30680473060413493;  // std dev = 33,504, 4.538,000 (wgt'ed) examples reached here.  /* #neg=2.502 #pos=2.036 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.5077325308926792;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.43143481281885554;  // std dev = 0,478, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( educationyear(A, F), birthday(B, G) )
%   | | then return 0.456796498422005;  // std dev = 0,471, 140,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=92 */
%   | | else if ( location(B, H), educationschool(B, I) )
%   | | | then return 0.353821379184733;  // std dev = 6,209, 158,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=89 */
%   | | | else return 0.15747047712539594;  // std dev = 4,217, 80,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.316240222274101;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.22892941813577228;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( workemployer(B, L), educationschool(B, M) )
%   | | | then return 0.40696507231544704;  // std dev = 18,039, 1.358,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=819 */
%   | | | else return 0.2562811461105113;  // std dev = 33,770, 4.631,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=2.047 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then return 0.3614666393923092;  // std dev = 0,471, 1.698,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=1.130 */
%   else if ( languages(A, D), languages(B, D) )
%   | then if ( workemployer(B, E), educationschool(B, F) )
%   | | then if ( educationyear(A, G), educationconcentration(A, H) )
%   | | | then return 0.4771961741262024;  // std dev = 3,925, 85,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=64 */
%   | | | else return 0.2635648295699015;  // std dev = 4,549, 86,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=46 */
%   | | else if ( educationtype(B, I) )
%   | | | then return 0.17222551280523646;  // std dev = 6,485, 178,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=76 */
%   | | | else return 0.5110213439737182;  // std dev = 2,259, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.2622583491472382;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.19306445838149727;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( workemployer(B, L), educationschool(B, M) )
%   | | | then return 0.3349272352135029;  // std dev = 18,042, 1.358,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=819 */
%   | | | else return 0.21438752222676818;  // std dev = 33,767, 4.631,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=2.047 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3213724590455906;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.2694273881906983;  // std dev = 0,478, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( workposition(A, F), workemployer(A, G) )
%   | | then return 0.33808938928530025;  // std dev = 0,460, 96,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=64 */
%   | | else if ( workemployer(B, H), workenddate(B, I) )
%   | | | then return 0.2852102554081677;  // std dev = 5,090, 118,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=74 */
%   | | | else return 0.12172184909551394;  // std dev = 6,126, 164,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=70 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.21038113938272515;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.1589129080880245;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( workemployer(B, L), educationschool(B, M) )
%   | | | then return 0.2644300813042063;  // std dev = 18,045, 1.358,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=819 */
%   | | | else return 0.17453235284051938;  // std dev = 33,764, 4.631,000 (wgt'ed) examples reached here.  /* #neg=2.584 #pos=2.047 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.24179708951708162;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.20438759181193822;  // std dev = 0,478, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( birthday(B, F), locale(A, G) )
%   | | then return 0.2363315945776842;  // std dev = 0,460, 171,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=109 */
%   | | else if ( educationconcentration(B, H), location(A, I) )
%   | | | then return 0.2502384775004744;  // std dev = 4,312, 80,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   | | | else return 0.048587262254541526;  // std dev = 5,240, 127,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=51 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.16455443177962156;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.1281726488456698;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( location(B, L), location(A, L) )
%   | | | then return 0.35472006397546296;  // std dev = 8,156, 321,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=223 */
%   | | | else return 0.14211011801445625;  // std dev = 37,277, 5.668,000 (wgt'ed) examples reached here.  /* #neg=3.025 #pos=2.643 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.1815972421861322;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.1535528498054573;  // std dev = 0,478, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( educationconcentration(A, F), location(B, G) )
%   | | then return 0.20290316482324014;  // std dev = 0,453, 143,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=93 */
%   | | else if ( birthday(A, H), birthday(B, I) )
%   | | | then return 0.24550108833668954;  // std dev = 3,510, 60,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | | else return 0.04052634382422327;  // std dev = 6,272, 175,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=74 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.12651526553185546;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.10173521249174489;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( hometown(B, L), hometown(A, L) )
%   | | | then return 0.6021898722607424;  // std dev = 1,940, 91,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=87 */
%   | | | else return 0.1117024623768355;  // std dev = 37,924, 5.898,000 (wgt'ed) examples reached here.  /* #neg=3.119 #pos=2.779 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.13736836047599588;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.14576903723770127;  // std dev = 0,468, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1968679383366023;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.0756534720517211;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.1019111779151565;  // std dev = 0,467, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.09622690275589434;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.07977779021175709;  // std dev = 21,077, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( educationschool(A, K), educationschool(B, K) )
%   | | | then return 0.19064185111888182;  // std dev = 18,306, 1.442,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=874 */
%   | | | else return 0.060039346667952624;  // std dev = 33,168, 4.547,000 (wgt'ed) examples reached here.  /* #neg=2.555 #pos=1.992 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.10493714503655856;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.08669461871267227;  // std dev = 0,477, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(B, E) )
%   | then if ( languages(A, E) )
%   | | then return 0.07739096575041632;  // std dev = 0,467, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | | else if ( languages(A, F) )
%   | | | then return 0.0727249961170077;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.08900349528319013;  // std dev = 18,600, 1.429,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=748 */
%   | else if ( languages(A, G) )
%   | | then if ( workemployer(B, H), gender(B, I) )
%   | | | then return 0.25225335350394223;  // std dev = 8,872, 327,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=195 */
%   | | | else return 0.020939579924757458;  // std dev = 18,739, 1.515,000 (wgt'ed) examples reached here.  /* #neg=962 #pos=553 */
%   | | else if ( educationtype(B, J), gender(B, K) )
%   | | | then return 0.02867795275237462;  // std dev = 25,727, 2.843,000 (wgt'ed) examples reached here.  /* #neg=1.572 #pos=1.271 */
%   | | | else return 0.12131386611633954;  // std dev = 20,686, 1.717,000 (wgt'ed) examples reached here.  /* #neg=870 #pos=847 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.08093739687201663;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.0885505719660512;  // std dev = 0,468, 130,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.12733211684661316;  // std dev = 8,490, 364,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=265 */
%   | | | else return 0.035515153214194545;  // std dev = 14,258, 852,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=517 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.05868152865499728;  // std dev = 0,467, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.05476474496052186;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.04764131026427842;  // std dev = 20,936, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=748 */
%   | | else if ( educationschool(A, K), educationschool(B, K) )
%   | | | then return 0.13196527919154907;  // std dev = 18,314, 1.442,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=874 */
%   | | | else return 0.027897572631565344;  // std dev = 33,077, 4.547,000 (wgt'ed) examples reached here.  /* #neg=2.555 #pos=1.992 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.06295521236586893;  // std dev = 0,439, 352,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=260 */
%   | else return 0.04977816935482317;  // std dev = 0,476, 1.346,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=870 */
%   else if ( languages(B, E) )
%   | then if ( languages(A, E) )
%   | | then return 0.04447861581092395;  // std dev = 0,467, 378,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=208 */
%   | | else if ( languages(A, F) )
%   | | | then return 0.04115808804096745;  // std dev = 6,499, 169,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
%   | | | else return 0.051897955395788044;  // std dev = 18,586, 1.429,000 (wgt'ed) examples reached here.  /* #neg=681 #pos=748 */
%   | else if ( languages(A, G) )
%   | | then if ( educationclasses(B, H), hometown(B, I) )
%   | | | then return 0.5854734031546711;  // std dev = 8,43e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.02785519678036003;  // std dev = 20,721, 1.813,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=719 */
%   | | else if ( workemployer(A, J), educationtype(B, K) )
%   | | | then return -0.09031820591513785;  // std dev = 12,083, 710,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=260 */
%   | | | else return 0.05965783080478967;  // std dev = 30,511, 3.850,000 (wgt'ed) examples reached here.  /* #neg=1.992 #pos=1.858 */


Results
   AUC ROC   = 0.561591
   AUC PR    = 0.544555
   CLL	      = -0.699179
   Precision = 0.554679 at threshold = 0.5
   Recall    = 0.196016
   F1        = 0.289667


Total learning time: 244.972 seconds
Total inference time: 4.355 seconds
AUC ROC: 0.561591


Refined model AUC ROC: 0.561591


Dataset: 48_twitter_facebook, Fold: 1, Type: transfer, Time: 00:53:37
{'AUC ROC': 0.561591, 'Recall': 0.196016, 'Mapping results': {'Generating mappings time': 0.35915303230285645, 'Total time': 3.0086746215820312, 'Possible mappings': [1568], 'Finding best mapping': 1.1920928955078125e-06, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.1677711009979248, 'Generating paths time': 2.481740951538086}, 'AUC PR': 0.544555, 'F1': 0.289667, 'CLL': -0.699179, 'Parameter Learning results': {'AUC ROC': 0.498913, 'Recall': 0.097211, 'AUC PR': 0.502482, 'F1': 0.163612, 'CLL': -0.702221, 'Inference time': 4.312, 'Precision': [0.51622, 0.5], 'Learning time': 167.099}, 'Inference time': 4.355, 'Precision': [0.554679, 0.5], 'Learning time': 412.071}


Start learning from scratch in target domain

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.5888062940291175;  // std dev = 0,444, 1.719,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=1.256 */
%   | else if ( educationtype(A, F), workenddate(B, G) )
%   | | then return 0.17475125170182898;  // std dev = 0,465, 259,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=82 */
%   | | else return 0.48672036367093724;  // std dev = 0,483, 805,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=506 */
%   else if ( educationtype(B, H), gender(B, I) )
%   | then if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( educationtype(A, H), location(B, K) )
%   | | | then return 0.4840779194099947;  // std dev = 16,839, 1.211,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=758 */
%   | | | else return 0.32243464938522226;  // std dev = 12,656, 644,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=299 */
%   | | else return 0.14896526163011964;  // std dev = 0,454, 2.744,000 (wgt'ed) examples reached here.  /* #neg=1.946 #pos=798 */
%   | else if ( educationconcentration(B, L) )
%   | | then return 0.6581489350995123;  // std dev = 0,400, 55,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=44 */
%   | | else if ( languages(B, M), locale(A, N) )
%   | | | then return 0.6297538733711147;  // std dev = 5,343, 162,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=125 */
%   | | | else return 0.33049451442934175;  // std dev = 24,847, 2.477,000 (wgt'ed) examples reached here.  /* #neg=1.307 #pos=1.170 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), location(B, E) )
%   | then return 0.5247351172418732;  // std dev = 0,430, 1.303,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=981 */
%   | else if ( hometown(A, F), educationtype(A, G) )
%   | | then return 0.1625637124111915;  // std dev = 0,467, 142,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( birthday(B, H), worklocation(B, I) )
%   | | | then return 0.5026004369793825;  // std dev = 7,963, 312,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=222 */
%   | | | else return 0.36322627625309745;  // std dev = 15,739, 1.026,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=589 */
%   else if ( location(B, J), location(A, J) )
%   | then return 0.47041929418297956;  // std dev = 0,468, 494,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=332 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( hometown(A, L), hometown(B, L) )
%   | | | then return 0.7619034220144714;  // std dev = 1,370, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else return 0.3298104814742888;  // std dev = 18,995, 1.461,000 (wgt'ed) examples reached here.  /* #neg=685 #pos=776 */
%   | | else if ( educationtype(B, M), educationschool(A, N) )
%   | | | then return -2.483068633424497E-4;  // std dev = 13,559, 1.361,000 (wgt'ed) examples reached here.  /* #neg=1.141 #pos=220 */
%   | | | else return 0.28231548311703314;  // std dev = 31,108, 3.925,000 (wgt'ed) examples reached here.  /* #neg=2.109 #pos=1.816 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( workemployer(A, C), educationyear(B, E) )
%   | then return 0.5008716606970544;  // std dev = 0,385, 507,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=413 */
%   | else if ( educationschool(A, D), gender(B, F) )
%   | | then return 0.37567901026756617;  // std dev = 0,457, 1.301,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=911 */
%   | | else return 0.2617354910595829;  // std dev = 0,488, 975,000 (wgt'ed) examples reached here.  /* #neg=455 #pos=520 */
%   else if ( location(B, G), location(A, G) )
%   | then if ( locale(A, H), locale(B, H) )
%   | | then return 0.4099229414879744;  // std dev = 0,457, 438,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=306 */
%   | | else if ( birthday(A, I), workstartdate(B, J) )
%   | | | then return -0.04990741361275843;  // std dev = 2,109, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.3740527975838035;  // std dev = 2,669, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | else if ( location(A, K), educationtype(B, L) )
%   | | then return 0.13327266810303348;  // std dev = 0,457, 2.160,000 (wgt'ed) examples reached here.  /* #neg=1.414 #pos=746 */
%   | | else if ( workposition(A, M), educationtype(B, N) )
%   | | | then return 0.07596891954367394;  // std dev = 6,965, 247,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=73 */
%   | | | else return 0.23944236647665812;  // std dev = 32,688, 4.392,000 (wgt'ed) examples reached here.  /* #neg=2.349 #pos=2.043 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workenddate(B, C), worklocation(B, D) )
%   then if ( location(B, E), worklocation(A, D) )
%   | then return 0.40142259080273973;  // std dev = 0,385, 300,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=243 */
%   | else if ( educationschool(A, F), educationschool(B, F) )
%   | | then return 0.30950348329335575;  // std dev = 0,455, 1.211,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=842 */
%   | | else if ( educationschool(A, G), gender(A, H) )
%   | | | then return 0.013550190774932074;  // std dev = 7,009, 278,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=64 */
%   | | | else return 0.30972765585113105;  // std dev = 12,532, 673,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=414 */
%   else if ( hometown(B, I), location(B, J) )
%   | then return 0.307566408989659;  // std dev = 0,449, 750,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=458 */
%   | else if ( educationtype(B, K), gender(B, L) )
%   | | then if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.21668554401155582;  // std dev = 20,687, 1.806,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=1.001 */
%   | | | else return 0.06859730761675618;  // std dev = 21,850, 2.442,000 (wgt'ed) examples reached here.  /* #neg=1.703 #pos=739 */
%   | | else if ( locale(B, N), locale(A, N) )
%   | | | then return 0.21787806699426035;  // std dev = 23,517, 2.235,000 (wgt'ed) examples reached here.  /* #neg=1.112 #pos=1.123 */
%   | | | else return 0.12752596360155016;  // std dev = 9,623, 381,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=154 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(B, C), gender(B, D) )
%   then if ( educationyear(B, E), educationyear(A, E) )
%   | then return 0.30766229329994765;  // std dev = 0,391, 883,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=689 */
%   | else if ( educationschool(A, F), gender(A, G) )
%   | | then if ( educationschool(B, F) )
%   | | | then return 0.17008957418967643;  // std dev = 14,455, 939,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=616 */
%   | | | else return 0.003343941392726938;  // std dev = 7,416, 291,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=78 */
%   | | else if ( hometown(B, H), educationschool(B, I) )
%   | | | then return 0.3631051344477431;  // std dev = 4,547, 114,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=86 */
%   | | | else return 0.22459616361135823;  // std dev = 12,968, 724,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=440 */
%   else if ( workemployer(A, J), educationtype(B, K) )
%   | then return 0.06846014342777665;  // std dev = 0,446, 1.637,000 (wgt'ed) examples reached here.  /* #neg=1.031 #pos=606 */
%   | else if ( lastname(B, L), lastname(A, L) )
%   | | then return 0.6024189333639365;  // std dev = 0,236, 67,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=64 */
%   | | else if ( hometown(B, M), hometown(A, M) )
%   | | | then return 0.5565265845919554;  // std dev = 2,371, 80,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | | | else return 0.14075063578966543;  // std dev = 35,455, 5.341,000 (wgt'ed) examples reached here.  /* #neg=2.956 #pos=2.385 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(B, C), gender(B, D) )
%   then if ( location(A, C), locale(A, E) )
%   | then return 0.23132115106916934;  // std dev = 0,434, 905,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=664 */
%   | else return 0.13900988617868218;  // std dev = 0,464, 4.079,000 (wgt'ed) examples reached here.  /* #neg=1.891 #pos=2.188 */
%   else if ( educationschool(A, F), languages(A, G) )
%   | then if ( educationconcentration(B, H), languages(B, I) )
%   | | then if ( workposition(B, J), educationschool(B, F) )
%   | | | then return -0.0640443379212686;  // std dev = 3,391, 52,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.3013786733897676;  // std dev = 4,421, 92,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=60 */
%   | | else return 0.013364168407324321;  // std dev = 0,456, 1.281,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=452 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( hometown(B, L), educationconcentration(A, M) )
%   | | | then return -0.10365041349795708;  // std dev = 2,173, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.20059648164247604;  // std dev = 11,928, 633,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=386 */
%   | | else if ( location(A, N), educationtype(B, P) )
%   | | | then return -0.024898475719219774;  // std dev = 9,043, 505,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=112 */
%   | | | else return 0.11823772675254289;  // std dev = 24,408, 2.506,000 (wgt'ed) examples reached here.  /* #neg=1.357 #pos=1.149 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( hometown(B, D), locale(B, E) )
%   | then return 0.2351404623344755;  // std dev = 0,410, 571,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=430 */
%   | else if ( educationyear(B, F), educationyear(A, F) )
%   | | then return 0.21126860017847662;  // std dev = 0,417, 1.117,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=837 */
%   | | else if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | | | then return 0.1634199879441245;  // std dev = 10,086, 471,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=310 */
%   | | | else return 0.04519870545257163;  // std dev = 18,661, 1.476,000 (wgt'ed) examples reached here.  /* #neg=703 #pos=773 */
%   else if ( educationschool(A, H), educationtype(B, I) )
%   | then return -0.050554575864267;  // std dev = 0,384, 1.697,000 (wgt'ed) examples reached here.  /* #neg=1.341 #pos=356 */
%   | else if ( languages(B, J), birthday(B, K) )
%   | | then if ( gender(B, L), locale(A, M) )
%   | | | then return 0.2308072405303952;  // std dev = 9,402, 414,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=265 */
%   | | | else return -0.37753058178807297;  // std dev = 0,938, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( hometown(B, N), educationconcentration(B, P) )
%   | | | then return 0.34770166519171886;  // std dev = 3,142, 55,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=42 */
%   | | | else return 0.09491503844309566;  // std dev = 31,995, 4.262,000 (wgt'ed) examples reached here.  /* #neg=2.238 #pos=2.024 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( lastname(B, C), lastname(A, C) )
%   then return 0.40686476619997625;  // std dev = 0,229, 83,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=80 */
%   else if ( languages(B, D), gender(B, E) )
%   | then if ( educationyear(B, F), educationyear(A, F) )
%   | | then if ( educationschool(B, G), educationschool(A, H) )
%   | | | then return 0.19284640805426348;  // std dev = 11,252, 790,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=597 */
%   | | | else return -0.11132971152908407;  // std dev = 2,426, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( educationtype(B, I) )
%   | | | then return 0.06232934012575124;  // std dev = 19,757, 1.787,000 (wgt'ed) examples reached here.  /* #neg=881 #pos=906 */
%   | | | else return 0.26789220095167887;  // std dev = 5,256, 161,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=124 */
%   | else if ( workemployer(B, J), hometown(B, K) )
%   | | then if ( birthday(B, L), educationschool(A, M) )
%   | | | then return 0.09444700766078648;  // std dev = 3,153, 57,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | | else return 0.2777419060415859;  // std dev = 4,059, 138,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=112 */
%   | | else if ( birthday(B, N), educationyear(A, P) )
%   | | | then return -0.01912769741443529;  // std dev = 13,511, 1.013,000 (wgt'ed) examples reached here.  /* #neg=601 #pos=412 */
%   | | | else return 0.05899466801440899;  // std dev = 36,798, 6.006,000 (wgt'ed) examples reached here.  /* #neg=3.246 #pos=2.760 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.12821527265573973;  // std dev = 0,378, 448,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=360 */
%   | else return 0.2992354432754615;  // std dev = 0,427, 123,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=90 */
%   else if ( workemployer(A, E), educationtype(B, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then if ( educationdegree(B, H), birthday(B, I) )
%   | | | then return -0.14757840764195013;  // std dev = 3,918, 72,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.07870967895460741;  // std dev = 17,813, 1.454,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=879 */
%   | | else return -0.10675213293833473;  // std dev = 0,330, 788,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=112 */
%   | else if ( lastname(B, J), gender(A, K) )
%   | | then if ( workposition(A, L), locale(B, M) )
%   | | | then return -0.01832216658256739;  // std dev = 6,546, 217,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=92 */
%   | | | else return 0.13471163175650647;  // std dev = 14,838, 1.078,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=629 */
%   | | else if ( hometown(A, N), hometown(B, N) )
%   | | | then return 0.34058706989688226;  // std dev = 2,424, 65,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | else return 0.04667498267869072;  // std dev = 36,344, 5.831,000 (wgt'ed) examples reached here.  /* #neg=3.039 #pos=2.792 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workenddate(B, C), worklocation(B, D) )
%   then if ( gender(B, E), locale(B, F) )
%   | then if ( educationwith(A, G), educationconcentration(B, H) )
%   | | then return -0.6034389085617107;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( birthday(B, I), lastname(B, J) )
%   | | | then return 0.20838342215370942;  // std dev = 4,726, 177,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=148 */
%   | | | else return 0.0772257711920697;  // std dev = 21,058, 2.193,000 (wgt'ed) examples reached here.  /* #neg=815 #pos=1.378 */
%   | else if ( lastname(B, K), lastname(A, L) )
%   | | then return 0.20176569006929368;  // std dev = 0,301, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.1667284620278593;  // std dev = 0,426, 75,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   else if ( educationtype(B, M), educationconcentration(A, N) )
%   | then return -0.015774679586709337;  // std dev = 0,426, 1.773,000 (wgt'ed) examples reached here.  /* #neg=1.035 #pos=738 */
%   | else if ( hometown(B, P), gender(A, Q) )
%   | | then return 0.10031317014376259;  // std dev = 0,427, 846,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=500 */
%   | | else if ( languages(B, R), birthday(B, S) )
%   | | | then return 0.11370423917599347;  // std dev = 9,259, 442,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=274 */
%   | | | else return 0.025832689167668017;  // std dev = 32,498, 4.553,000 (wgt'ed) examples reached here.  /* #neg=2.590 #pos=1.963 */


Results
   AUC ROC   = 0.620632
   AUC PR    = 0.602429
   CLL	      = -0.683142
   Precision = 0.639527 at threshold = 0.5
   Recall    = 0.251394
   F1        = 0.360915


Total learning time: 370.473 seconds
Total inference time: 4.471 seconds
AUC ROC: 0.620632


Dataset: 48_twitter_facebook, Fold: 1, Type: scratch, Time: 00:59:53
{'AUC ROC': 0.620632, 'Recall': 0.251394, 'AUC PR': 0.602429, 'F1': 0.360915, 'CLL': -0.683142, 'Inference time': 4.471, 'Precision': [0.639527, 0.5], 'Learning time': 370.473}


Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.1413133144378662
   Generating paths time   = 2.445373773574829
   Generating mappings time   = 0.3089466094970703
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 2.8956425189971924


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationyear(A,B)', 'accounttype(A,B) -> educationschool(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
0;true;educationyear(A, D), educationyear(B, D).;false;true
0;false,false;educationyear(A, I).;true;false
0;true,false;educationyear(B, E), educationyear(A, F).;false;true
0;false;educationyear(B, H), educationyear(A, H).;false;true
0;true,false,false;educationyear(B, G).;false;false
0;false,false,true;educationyear(B, J).;false;false
1;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
1;true;educationyear(B, D), educationyear(A, D).;false;true
1;false,false;educationyear(A, I).;true;false
1;true,false;educationyear(B, E), educationyear(A, F).;false;true
1;false;educationyear(A, H), educationyear(B, H).;false;true
1;true,false,false;educationyear(A, G).;false;false
1;false,false,true;educationyear(B, J).;false;false
2;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
2;true;educationyear(A, D), educationyear(B, D).;false;true
2;false,false;educationyear(A, I).;true;false
2;true,false;educationyear(B, E), educationyear(A, F).;false;true
2;false;educationyear(A, H), educationyear(B, H).;false;true
2;true,false,false;educationyear(B, G).;false;false
2;false,false,true;educationyear(B, J).;false;false
3;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
3;true;educationyear(B, D), educationyear(A, D).;false;true
3;false,false;educationyear(A, I).;true;false
3;true,false;educationyear(A, E), educationyear(B, F).;false;true
3;false;educationyear(B, H), educationyear(A, H).;false;true
3;true,false,false;educationyear(B, G).;false;false
3;false,false,true;educationyear(B, J).;false;false
4;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
4;true;educationyear(A, D), educationyear(B, D).;false;true
4;false,false;educationyear(A, I).;true;false
4;true,false;educationyear(B, E), educationyear(A, F).;false;true
4;false;educationyear(A, H), educationyear(B, H).;false;true
4;true,false,false;educationyear(B, G).;false;false
4;false,false,true;educationyear(B, J).;false;false
5;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
5;true;educationyear(B, D), educationyear(A, D).;false;true
5;false,false;educationyear(A, I).;true;false
5;true,false;educationyear(A, E), educationyear(B, F).;false;true
5;false;educationyear(A, H), educationyear(B, H).;false;true
5;true,false,false;educationyear(B, G).;false;false
5;false,false,true;educationyear(B, J).;false;false
6;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
6;true;educationyear(A, D), educationyear(B, D).;false;true
6;false,false;educationyear(A, I).;true;false
6;true,false;educationyear(B, E), educationyear(A, F).;false;true
6;false;educationyear(B, H), educationyear(A, H).;false;true
6;true,false,false;educationyear(B, G).;false;false
6;false,false,true;educationyear(B, J).;false;false
7;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
7;true;educationyear(A, D), educationyear(B, D).;false;true
7;false,false;educationyear(A, J).;false;false
7;true,false;educationyear(A, E), educationyear(B, F).;false;true
7;false;educationyear(B, H).;true;true
7;true,false,false;educationyear(B, G).;false;false
7;false,true;educationyear(A, H).;false;true
7;false,true,false;educationyear(A, I).;false;false
8;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
8;true;educationyear(B, D), educationyear(A, D).;false;true
8;false,false;educationyear(A, I).;true;false
8;true,false;educationyear(B, E), educationyear(A, F).;false;true
8;false;educationyear(B, H), educationyear(A, H).;false;true
8;true,false,false;educationyear(B, G).;false;false
8;false,false,true;educationyear(B, J).;false;false
9;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true
9;true;educationyear(A, D), educationyear(B, D).;false;true
9;false,false;educationyear(A, I).;false;false
9;true,false;educationyear(B, E).;false;true
9;false;educationyear(B, G).;true;true
9;true,false,false;educationyear(A, F).;false;false
9;false,true;educationyear(A, G).;false;true
9;false,true,false;educationyear(A, H).;false;false


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.6050776820282551;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then return 0.5210384535131054;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.5480223528210271;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.6202772606081149;  // std dev = 10,763, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(B, H), educationyear(A, H) )
%   | then return 0.23557397919121859;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.1687756380967827;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.3111584387953893;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.2802100433335829;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.5145490076651591;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then return 0.4451624752270101;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(A, G) )
%   | | | then return 0.5080797660883076;  // std dev = 9,164, 440,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=327 */
%   | | | else return 0.49749926610589545;  // std dev = 11,585, 673,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=487 */
%   else if ( educationyear(A, H), educationyear(B, H) )
%   | then return 0.20441258515474342;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.14696399805201532;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.2689138372853475;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.2425686567959148;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.4107507582320979;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then return 0.3600471421299517;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.37002714968725064;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.4247354274030242;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(A, H), educationyear(B, H) )
%   | then return 0.1731869254447485;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.12584192425670085;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.2250603336248811;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.20403751720507013;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.3139289866332093;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(A, E), educationyear(B, F) )
%   | | then return 0.2791609207982183;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.2848196533600437;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.32435431526402336;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(B, H), educationyear(A, H) )
%   | then return 0.1435980518120883;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.10612923547001687;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.1830577540449192;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.1672630198414844;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.23585394993750872;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then return 0.21138434293527097;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.2147607287429157;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.24359898744531558;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(A, H), educationyear(B, H) )
%   | then return 0.11689750287689366;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.08832258479907444;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.14550449639346527;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.13422580812968177;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.17734320303216955;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(A, E), educationyear(B, F) )
%   | | then return 0.15869128342639738;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.16112287972648476;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.18335279351149342;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(A, H), educationyear(B, H) )
%   | then return 0.09375536750711805;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.07267942593646355;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.11368482884625383;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.105948540604991;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.13450695603993298;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then return 0.11913060208908324;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.1212462969471286;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.13941038686699195;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(B, H), educationyear(A, H) )
%   | then return 0.07432429287828546;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.059250734008976264;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.08775281294188687;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.0826111650776042;  // std dev = 21,703, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.10310242226661813;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(A, E), educationyear(B, F) )
%   | | then return 0.08976388049801687;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.09178695944946846;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.10725954205181308;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(B, H) )
%   | then if ( educationyear(A, H) )
%   | | then return 0.058398994782455034;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | | else if ( educationyear(A, I) )
%   | | | then return 0.04793721843024246;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return -0.0027848147158120807;  // std dev = 16,629, 1.207,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=429 */
%   | else if ( educationyear(A, J) )
%   | | then return 0.06717774854637884;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.1749376788415693;  // std dev = 13,424, 724,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=386 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.07982538230621718;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then return 0.06796066534274384;  // std dev = 12,561, 706,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=468 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.06993536798139047;  // std dev = 10,070, 474,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=327 */
%   | | | else return 0.08343590679755292;  // std dev = 10,765, 639,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=487 */
%   else if ( educationyear(B, H), educationyear(A, H) )
%   | then return 0.04558006853319972;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.038547540679253464;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.05114197497315459;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.04882746175885871;  // std dev = 21,566, 1.931,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=815 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.06234055876711963;  // std dev = 8,771, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E) )
%   | | then return 0.05246019820187306;  // std dev = 16,099, 1.180,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=795 */
%   | | else if ( educationyear(A, F) )
%   | | | then return 0.04587530286341662;  // std dev = 9,164, 440,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=327 */
%   | | | else return 0.10895146370803306;  // std dev = 5,600, 199,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=160 */
%   else if ( educationyear(B, G) )
%   | then if ( educationyear(A, G) )
%   | | then return 0.03539759762242126;  // std dev = 11,543, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | | else if ( educationyear(A, H) )
%   | | | then return 0.03084641271692604;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return -0.013437498247335516;  // std dev = 16,629, 1.207,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=429 */
%   | else if ( educationyear(A, I) )
%   | | then return 0.03878967736204743;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else return 0.12203711779064175;  // std dev = 13,424, 724,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=386 */


Results
   AUC ROC   = 0.605374
   AUC PR    = 0.590972
   CLL	      = -0.67745
   Precision = 0.639904 at threshold = 0.5
   Recall    = 0.347201
   F1        = 0.450155


Total learning time: 140.819 seconds
Total inference time: 5.641 seconds
AUC ROC: 0.605374


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(A, D), educationyear(B, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E), educationyear(A, F)', 'false': 'educationyear(B, H), educationyear(A, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.763, 152, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(B, D), educationyear(A, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E), educationyear(A, F)', 'false': 'educationyear(A, H), educationyear(B, H)', 'true,false,false': 'educationyear(A, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [9.164, 113, 327], 'true,false,false,false': [11.585, 186, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(A, D), educationyear(B, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E), educationyear(A, F)', 'false': 'educationyear(A, H), educationyear(B, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(B, D), educationyear(A, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(A, E), educationyear(B, F)', 'false': 'educationyear(B, H), educationyear(A, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(A, D), educationyear(B, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E), educationyear(A, F)', 'false': 'educationyear(A, H), educationyear(B, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(B, D), educationyear(A, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(A, E), educationyear(B, F)', 'false': 'educationyear(A, H), educationyear(B, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(A, D), educationyear(B, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E), educationyear(A, F)', 'false': 'educationyear(B, H), educationyear(A, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [21.703, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(A, D), educationyear(B, D)', 'false,false': 'educationyear(A, J)', 'true,false': 'educationyear(A, E), educationyear(B, F)', 'false': 'educationyear(B, H)', 'true,false,false': 'educationyear(B, G)', 'false,true': 'educationyear(A, H)', 'false,true,false': 'educationyear(A, I)'}, {'false,false,true': [15.319, 518, 429], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'false,true,true': [11.543, 353, 214], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [13.424, 338, 386], 'false,true,false,true': [15.355, 759, 342], 'false,true,false,false': [16.629, 778, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(B, D), educationyear(A, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E), educationyear(A, F)', 'false': 'educationyear(B, H), educationyear(A, H)', 'true,false,false': 'educationyear(B, G)', 'false,false,true': 'educationyear(B, J)'}, {'false,false,true,true': [15.355, 759, 342], 'false,true': [11.543, 353, 214], 'true,true': [8.771, 103, 304], 'true,false,true': [12.561, 238, 468], 'true,false,false,true': [10.07, 147, 327], 'true,false,false,false': [10.765, 152, 487], 'false,false,false': [21.566, 1116, 815], 'false,false,true,false': [15.319, 518, 429]}], ['edge(A, B)', {'': 'educationschool(A, C), educationschool(B, C)', 'true': 'educationyear(A, D), educationyear(B, D)', 'false,false': 'educationyear(A, I)', 'true,false': 'educationyear(B, E)', 'false': 'educationyear(B, G)', 'true,false,false': 'educationyear(A, F)', 'false,true': 'educationyear(A, G)', 'false,true,false': 'educationyear(A, H)'}, {'false,false,true': [15.319, 518, 429], 'true,true': [8.771, 103, 304], 'true,false,true': [16.099, 385, 795], 'true,false,false,true': [9.164, 113, 327], 'false,true,true': [11.543, 353, 214], 'true,false,false,false': [5.6, 39, 160], 'false,false,false': [13.424, 338, 386], 'false,true,false,true': [15.355, 759, 342], 'false,true,false,false': [16.629, 778, 429]}]]
[{'': [0.2048485230095177, 0.23917411476836523], 'true': [0.18902619394020204, 0.2080639852803037], 'false,false': [0.23473906517031223, 0.2439255291503234], 'true,false': [0.22346700479098328, 0.19647408031683258], 'false': [0.23497538018408376, 0.23971654149858382], 'true,false,false': [0.21394808524275236, 0.18128874096605502], 'false,false,true': [0.21413775438230484, 0.24779189325708104]}, {'': [0.20426902614764977, 0.23843726710280505], 'true': [0.1890261939402047, 0.20745812741145125], 'false,false': [0.23339642541417988, 0.24392552915028246], 'true,false': [0.22346700479098308, 0.196063498784467], 'false': [0.2349753801840863, 0.23889029352688398], 'true,false,false': [0.19086260330577828, 0.19941953129255793], 'false,false,true': [0.21413775438230903, 0.2477918932570968]}, {'': [0.2038477846832538, 0.23775316972459382], 'true': [0.18902619394019143, 0.2070463442715575], 'false,false': [0.2321466645319534, 0.24392552915031337], 'true,false': [0.22346700479099738, 0.19596547489368155], 'false': [0.23497538018408526, 0.23812378940328777], 'true,false,false': [0.21394808524275094, 0.18135161653512863], 'false,false,true': [0.21413775438231417, 0.24779189325709627]}, {'': [0.20344752678767572, 0.2372179776620342], 'true': [0.1890261939401963, 0.20661882279576618], 'false,false': [0.23117064073305507, 0.24392552915030294], 'true,false': [0.22346700479098958, 0.19561956733942568], 'false': [0.23497538018407568, 0.2375237710909502], 'true,false,false': [0.21394808524274375, 0.18135812559694714], 'false,false,true': [0.21413775438231403, 0.24779189325708462]}, {'': [0.20325665793834127, 0.23685514156614623], 'true': [0.18902619394019843, 0.20641317389234773], 'false,false': [0.2305123277331069, 0.24392552915031396], 'true,false': [0.2234670047909846, 0.19544134609297226], 'false': [0.23497538018407915, 0.2371163372273545], 'true,false,false': [0.21394808524275283, 0.1813591646791523], 'false,false,true': [0.2141377543823164, 0.24779189325708492]}, {'': [0.2031731870991067, 0.23663592213510595], 'true': [0.18902619394019823, 0.20632256608665298], 'false,false': [0.2301174909812546, 0.24392552915030988], 'true,false': [0.22346700479098644, 0.195357871874831], 'false': [0.23497538018408184, 0.23686963803842703], 'true,false,false': [0.2139480852427513, 0.18135749359283995], 'false,false,true': [0.21413775438231136, 0.24779189325709264]}, {'': [0.2031339003988332, 0.2365149658644823], 'true': [0.18902619394019843, 0.20627964691063114], 'false,false': [0.22990145084984978, 0.24392552915030083], 'true,false': [0.22346700479098824, 0.19531626006090225], 'false': [0.23497538018408035, 0.2367331961860637], 'true,false,false': [0.21394808524275052, 0.18135495850542743], 'false,false,true': [0.21413775438230764, 0.24779189325709075]}, {'': [0.20311242218986467, 0.2364529023590083], 'true': [0.18902619394019912, 0.20625608328081518], 'false,false': [0.24779189325709985, 0.24890113244405737], 'true,false': [0.22346700479098744, 0.19529265694329936], 'false': [0.22526007425939623, 0.2511238453464579], 'true,false,false': [0.21394808524275125, 0.1813524029539883], 'false,true': [0.23497538018408126, 0.22260353282851858], 'false,true,false': [0.21413775438231217, 0.22909855448298763]}, {'': [0.2030986451189651, 0.23511813825781308], 'true': [0.18902619394019937, 0.20624095192457167], 'false,false': [0.22973893779636673, 0.240854729823727], 'true,false': [0.2234670047909878, 0.19527738121784974], 'false': [0.23497538018408362, 0.23513836755605302], 'true,false,false': [0.2139480852427492, 0.1813501289034483], 'false,false,true': [0.2141377543823108, 0.24779189325709364]}, {'': [0.20308863364677504, 0.23509195201182898], 'true': [0.18902619394019843, 0.20622997247182676], 'false,false': [0.24779189325709536, 0.2489011324440702], 'true,false': [0.21964417731369068, 0.18134820611003222], 'false': [0.22504254540443067, 0.24997417534607846], 'true,false,false': [0.19086260330578517, 0.1575717784904424], 'false,true': [0.23497538018408495, 0.2224509404043367], 'false,true,false': [0.21413775438232355, 0.22909855448299207]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '0;true;educationyear(A, D), educationyear(B, D).;true;true', '0;false,false;educationyear(A, I).;true;true', '0;true,false;educationyear(B, E), educationyear(A, F).;true;true', '0;false;educationyear(B, H), educationyear(A, H).;true;true', '0;true,false,false;educationyear(B, G).;true;true', '0;false,false,true;educationyear(B, J).;true;true', '1;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '1;true;educationyear(B, D), educationyear(A, D).;true;true', '1;false,false;educationyear(A, I).;true;true', '1;true,false;educationyear(B, E), educationyear(A, F).;true;true', '1;false;educationyear(A, H), educationyear(B, H).;true;true', '1;true,false,false;educationyear(A, G).;true;true', '1;false,false,true;educationyear(B, J).;true;true', '2;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '2;true;educationyear(A, D), educationyear(B, D).;true;true', '2;false,false;educationyear(A, I).;true;true', '2;true,false;educationyear(B, E), educationyear(A, F).;true;true', '2;false;educationyear(A, H), educationyear(B, H).;true;true', '2;true,false,false;educationyear(B, G).;true;true', '2;false,false,true;educationyear(B, J).;true;true', '3;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '3;true;educationyear(B, D), educationyear(A, D).;true;true', '3;false,false;educationyear(A, I).;true;true', '3;true,false;educationyear(A, E), educationyear(B, F).;true;true', '3;false;educationyear(B, H), educationyear(A, H).;true;true', '3;true,false,false;educationyear(B, G).;true;true', '3;false,false,true;educationyear(B, J).;true;true', '4;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '4;true;educationyear(A, D), educationyear(B, D).;true;true', '4;false,false;educationyear(A, I).;true;true', '4;true,false;educationyear(B, E), educationyear(A, F).;true;true', '4;false;educationyear(A, H), educationyear(B, H).;true;true', '4;true,false,false;educationyear(B, G).;true;true', '4;false,false,true;educationyear(B, J).;true;true', '5;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '5;true;educationyear(B, D), educationyear(A, D).;true;true', '5;false,false;educationyear(A, I).;true;true', '5;true,false;educationyear(A, E), educationyear(B, F).;true;true', '5;false;educationyear(A, H), educationyear(B, H).;true;true', '5;true,false,false;educationyear(B, G).;true;true', '5;false,false,true;educationyear(B, J).;true;true', '6;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '6;true;educationyear(A, D), educationyear(B, D).;true;true', '6;false,false;educationyear(A, I).;true;true', '6;true,false;educationyear(B, E), educationyear(A, F).;true;true', '6;false;educationyear(B, H), educationyear(A, H).;true;true', '6;true,false,false;educationyear(B, G).;true;true', '6;false,false,true;educationyear(B, J).;true;true', '7;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '7;true;educationyear(A, D), educationyear(B, D).;true;true', '7;false,false;educationyear(A, J).;true;true', '7;true,false;educationyear(A, E), educationyear(B, F).;true;true', '7;false;educationyear(B, H).;true;true', '7;true,false,false;educationyear(B, G).;true;true', '7;false,true;educationyear(A, H).;true;true', '7;false,true,false;educationyear(A, I).;true;true', '8;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '8;true;educationyear(B, D), educationyear(A, D).;true;true', '8;false,false;educationyear(A, I).;true;true', '8;true,false;educationyear(B, E), educationyear(A, F).;true;true', '8;false;educationyear(B, H), educationyear(A, H).;true;true', '8;true,false,false;educationyear(B, G).;true;true', '8;false,false,true;educationyear(B, J).;true;true', '9;;edge(A, B) :- educationschool(A, C), educationschool(B, C).;true;true', '9;true;educationyear(A, D), educationyear(B, D).;true;true', '9;false,false;educationyear(A, I).;true;true', '9;true,false;educationyear(B, E).;true;true', '9;false;educationyear(B, G).;true;true', '9;true,false,false;educationyear(A, F).;true;true', '9;false,true;educationyear(A, G).;true;true', '9;false,true,false;educationyear(A, H).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.6050776820282551;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.5629317828180342;  // std dev = 0,456, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(B, E), educationyear(A, E) )
%   | then if ( educationconcentration(A, F) )
%   | | then return 0.08700465649254668;  // std dev = 0,420, 201,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=46 */
%   | | else if ( educationdegree(B, G), educationconcentration(B, H) )
%   | | | then return 0.05814893509951237;  // std dev = 2,966, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.3629720862249112;  // std dev = 8,817, 311,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=157 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.1687756380967827;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.3111584387953893;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( educationschool(A, K), educationtype(B, L) )
%   | | | then return 0.05522922707031377;  // std dev = 9,312, 548,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=108 */
%   | | | else return 0.3693564549838172;  // std dev = 18,590, 1.383,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=707 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.5145490076651591;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.47983613050236873;  // std dev = 0,456, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(A, E), educationyear(B, E) )
%   | then if ( location(A, F), educationconcentration(A, G) )
%   | | then return -0.002775609449164488;  // std dev = 0,357, 100,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | else if ( lastname(A, H), location(B, I) )
%   | | | then return 0.09625456333184437;  // std dev = 4,057, 84,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | | else return 0.28086454624765456;  // std dev = 9,672, 383,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=176 */
%   | else if ( educationyear(A, J) )
%   | | then if ( educationyear(B, K) )
%   | | | then return 0.14696399805201532;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.2689138372853475;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( educationtype(B, L), educationschool(A, M) )
%   | | | then return 0.04837232097239749;  // std dev = 9,312, 548,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=108 */
%   | | | else return 0.31820908761468825;  // std dev = 18,590, 1.383,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=707 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.4107507582320979;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.3855353361437705;  // std dev = 0,456, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(A, E), educationyear(B, E) )
%   | then if ( educationconcentration(A, F) )
%   | | then return 0.058861268108807506;  // std dev = 0,417, 201,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=46 */
%   | | else if ( educationconcentration(B, G), location(A, H) )
%   | | | then return -0.03244912491343527;  // std dev = 2,534, 46,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.2708932969513732;  // std dev = 8,877, 320,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=160 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.12584192425670085;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.2250603336248811;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( educationschool(A, K), educationtype(B, L) )
%   | | | then return 0.04214405842260479;  // std dev = 9,312, 548,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=108 */
%   | | | else return 0.2637902108054429;  // std dev = 18,590, 1.383,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=707 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then return 0.2998107115380231;  // std dev = 0,452, 2.226,000 (wgt'ed) examples reached here.  /* #neg=640 #pos=1.586 */
%   else if ( educationyear(B, D), educationyear(A, D) )
%   | then if ( workemployer(B, E), hometown(B, F) )
%   | | then if ( educationconcentration(B, G), location(A, H) )
%   | | | then return 0.059268599151437985;  // std dev = 1,468, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.5514911656286285;  // std dev = 2,019, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | else if ( workstartdate(A, I), workenddate(A, J) )
%   | | | then return 0.30292945071686705;  // std dev = 4,262, 76,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.08975159848900444;  // std dev = 9,628, 452,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=148 */
%   | else if ( educationyear(A, K) )
%   | | then if ( educationyear(B, L) )
%   | | | then return 0.10612923547001687;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.1830577540449192;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( educationyear(B, M), birthday(B, N) )
%   | | | then return 0.05332619346271543;  // std dev = 11,631, 688,000 (wgt'ed) examples reached here.  /* #neg=487 #pos=201 */
%   | | | else return 0.22190622882932684;  // std dev = 17,218, 1.243,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=614 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.2393822801611255;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.2227466223301147;  // std dev = 0,456, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(A, E), educationyear(B, E) )
%   | then if ( educationconcentration(A, F) )
%   | | then return 0.028393536447710456;  // std dev = 0,409, 201,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=46 */
%   | | else if ( workstartdate(B, G), educationschool(A, H) )
%   | | | then return 0.3175762207659785;  // std dev = 3,930, 72,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=44 */
%   | | | else return 0.12082386629003664;  // std dev = 8,249, 294,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=124 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.08832258479907444;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.14550449639346527;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( educationschool(A, K), educationtype(B, L) )
%   | | | then return 0.018013686723604618;  // std dev = 9,294, 548,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=108 */
%   | | | else return 0.17337284627045557;  // std dev = 18,504, 1.383,000 (wgt'ed) examples reached here.  /* #neg=676 #pos=707 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.179941301446949;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.16713906911750792;  // std dev = 0,456, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(A, E), educationyear(B, E) )
%   | then if ( workenddate(A, F), workstartdate(A, G) )
%   | | then if ( educationdegree(B, H) )
%   | | | then return 0.021323125917115333;  // std dev = 2,408, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.32890325346058374;  // std dev = 3,441, 54,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   | | else return 0.06651831684903037;  // std dev = 0,450, 486,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=170 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.07267942593646355;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.11368482884625383;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( workenddate(B, K) )
%   | | | then return -0.06045539893580131;  // std dev = 6,657, 260,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=58 */
%   | | | else return 0.12503347441909202;  // std dev = 19,547, 1.671,000 (wgt'ed) examples reached here.  /* #neg=914 #pos=757 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.13640560718367753;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.12594617280072642;  // std dev = 0,456, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(B, E), educationyear(A, E) )
%   | then if ( location(A, F), educationconcentration(A, G) )
%   | | then return -0.04883560449575249;  // std dev = 0,343, 100,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | else if ( workemployer(B, H), languages(B, I) )
%   | | | then return 0.4019094199520292;  // std dev = 1,769, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.08135771466728357;  // std dev = 9,954, 445,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=181 */
%   | else if ( educationyear(A, J) )
%   | | then if ( educationyear(B, K) )
%   | | | then return 0.059250734008976264;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.08775281294188687;  // std dev = 15,319, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( location(B, L), location(A, L) )
%   | | | then return 0.47972709797160445;  // std dev = 2,205, 42,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | | else return 0.06923768143439;  // std dev = 20,456, 1.889,000 (wgt'ed) examples reached here.  /* #neg=1.109 #pos=780 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then return 0.09721436526763744;  // std dev = 0,452, 2.226,000 (wgt'ed) examples reached here.  /* #neg=640 #pos=1.586 */
%   else if ( educationyear(B, D) )
%   | then if ( educationyear(A, D) )
%   | | then if ( location(A, E), birthday(B, F) )
%   | | | then return -0.02290885622558264;  // std dev = 5,144, 164,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | | else return 0.0860918563499594;  // std dev = 9,400, 403,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=170 */
%   | | else if ( educationyear(A, G) )
%   | | | then return 0.04793721843024246;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.02376813987443882;  // std dev = 15,897, 1.207,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=429 */
%   | else if ( educationyear(A, H) )
%   | | then if ( educationschool(B, I), gender(A, J) )
%   | | | then return -0.09249842181617715;  // std dev = 7,886, 300,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=88 */
%   | | | else return 0.14121615829717396;  // std dev = 12,699, 647,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=341 */
%   | | else if ( educationschool(A, K), educationschool(B, L) )
%   | | | then return -0.08140623716208926;  // std dev = 2,924, 71,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
%   | | | else return 0.1452770230281887;  // std dev = 12,561, 653,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=376 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.08249144231850442;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else if ( educationyear(B, E), educationyear(A, F) )
%   | | then if ( birthday(A, G), birthday(B, G) )
%   | | | then return 0.2568066225665702;  // std dev = 2,494, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | | else return 0.008664234455286298;  // std dev = 12,166, 643,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=412 */
%   | | else return 0.09927442729852562;  // std dev = 0,443, 1.113,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=814 */
%   else if ( educationyear(B, H), educationyear(A, H) )
%   | then return 0.042543486141801354;  // std dev = 0,451, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | else if ( educationyear(A, I) )
%   | | then if ( educationyear(B, J) )
%   | | | then return 0.038547540679253464;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.05084605779494061;  // std dev = 15,165, 947,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=429 */
%   | | else if ( educationconcentration(B, K), locale(B, L) )
%   | | | then return 0.12564880533798908;  // std dev = 10,571, 519,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=263 */
%   | | | else return 0.017111406852318208;  // std dev = 17,528, 1.412,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=552 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then return 0.0643554120845532;  // std dev = 0,435, 407,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=304 */
%   | else return 0.05606711606534888;  // std dev = 0,455, 1.819,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=1.282 */
%   else if ( educationyear(B, E) )
%   | then if ( educationyear(A, E) )
%   | | then return 0.03343829095019437;  // std dev = 0,451, 567,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=214 */
%   | | else if ( educationyear(A, F) )
%   | | | then return 0.03084641271692604;  // std dev = 15,355, 1.101,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=342 */
%   | | | else return 0.006662787728628725;  // std dev = 15,823, 1.207,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=429 */
%   | else if ( educationyear(A, G) )
%   | | then if ( hometown(B, H), location(B, I) )
%   | | | then return -0.2444307574081602;  // std dev = 2,947, 76,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=10 */
%   | | | else return 0.06329326709065779;  // std dev = 14,650, 871,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=419 */
%   | | else if ( location(B, J) )
%   | | | then return 0.18831746615643408;  // std dev = 5,628, 165,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=105 */
%   | | | else return 0.053673866673884116;  // std dev = 11,578, 559,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=281 */


Results
   AUC ROC   = 0.620328
   AUC PR    = 0.609511
   CLL	      = -0.669416
   Precision = 0.620231 at threshold = 0.5
   Recall    = 0.421368
   F1        = 0.501816


Total learning time: 124.399 seconds
Total inference time: 5.938 seconds
AUC ROC: 0.620328


Refined model AUC ROC: 0.620328


Dataset: 48_twitter_facebook, Fold: 2, Type: transfer, Time: 01:04:33
{'AUC ROC': 0.620328, 'Recall': 0.421368, 'Mapping results': {'Generating mappings time': 0.3089466094970703, 'Total time': 2.8956425189971924, 'Possible mappings': [1568], 'Finding best mapping': 1.430511474609375e-06, 'Max mapping': 24389, 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.1413133144378662, 'Generating paths time': 2.445373773574829}, 'AUC PR': 0.609511, 'F1': 0.501816, 'CLL': -0.669416, 'Parameter Learning results': {'AUC ROC': 0.605374, 'Recall': 0.347201, 'AUC PR': 0.590972, 'F1': 0.450155, 'CLL': -0.67745, 'Inference time': 5.641, 'Precision': [0.639904, 0.5], 'Learning time': 140.819}, 'Inference time': 5.938, 'Precision': [0.620231, 0.5], 'Learning time': 265.21799999999996}


Start learning from scratch in target domain

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

Starting experiment #1 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29692444530358925;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.08692252000517167;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.20837934984605716;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5813068298363496;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.2305979146913504;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6081489350995096;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25680824651685535;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.0760086065078202;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.18107440977493972;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1141862376674665;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4949913846238995;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20014733368536436;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5170719622367242;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.21542855580471548;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03213570384911769;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.15408250053251327;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.09635815785231988;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3965795487720175;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1697087003887462;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4125724528826577;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1758539833644332;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.02770673478281751;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.12864717441952958;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.08269510156685003;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.3042169031521049;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14089299828557916;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31517865761850816;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1403872751805415;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.023811354785219868;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10566614367153737;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.0702729758172556;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.2288839777917651;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1148820374315997;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.23676009386434094;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11019175106572325;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02040642831585418;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0856216785941897;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.059204484659773925;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.17184452907760903;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09230973482782298;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.17806945427207632;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08543913289306276;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.03439465187579575;  // std dev = 0,419, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.06862836147485345;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.049404520079678195;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.129809923045701;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.07332256916930585;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.13513671764223337;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.06568160361017888;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.012367668197767474;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.054539038114920696;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04338361557729257;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0989064414455212;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0577278046766802;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10367175113685581;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05019549935715151;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010514198930245057;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04305573807685484;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.035915484140641434;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0760068744143967;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04514647472950382;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08034833303035839;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038205230707555556;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.008927078934572235;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0338174133803715;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.029596411144739935;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05885110169425813;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.035129929112934846;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06282214181758339;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.13838434219360352
   Generating paths time   = 2.471634864807129
   Generating mappings time   = 0.3421313762664795
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 2.952160358428955


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> workemployer(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- location(A, C), location(B, C).;true;true
0;true,false;workemployer(A, E).;false;true
0;true,false,false;workemployer(B, F).;false;false
0;false,false,true;workemployer(B, I).;false;false
0;false;workemployer(B, G), workemployer(A, G).;false;true
0;false,false,false;workemployer(B, J).;false;false
0;false,false;workemployer(A, H).;true;true
0;true;workemployer(A, D), workemployer(B, D).;false;true
1;;edge(A, B) :- location(A, C), location(B, C).;true;true
1;true,false;workemployer(A, E).;false;true
1;true,false,false;workemployer(B, F).;false;false
1;false,false,true;workemployer(B, I).;false;false
1;false;workemployer(A, G), workemployer(B, G).;false;true
1;false,false,false;workemployer(B, J).;false;false
1;false,false;workemployer(A, H).;true;true
1;true;workemployer(B, D), workemployer(A, D).;false;true
2;;edge(A, B) :- location(A, C), location(B, C).;true;true
2;true,false;workemployer(A, E), workemployer(B, F).;false;true
2;true,false,false;workemployer(B, G).;false;false
2;false,false,true;workemployer(B, J).;false;false
2;false;workemployer(B, H), workemployer(A, H).;false;true
2;false,false,false;workemployer(B, K).;false;false
2;false,false;workemployer(A, I).;true;true
2;true;workemployer(B, D), workemployer(A, D).;false;true
3;;edge(A, B) :- location(A, C), location(B, C).;true;true
3;true,false;workemployer(B, E), workemployer(A, F).;false;true
3;true,false,false;workemployer(B, G).;false;false
3;false,false,true;workemployer(B, J).;false;false
3;false;workemployer(A, H), workemployer(B, H).;false;true
3;false,false,false;workemployer(B, K).;false;false
3;false,false;workemployer(A, I).;true;true
3;true;workemployer(B, D), workemployer(A, D).;false;true
4;;edge(A, B) :- location(A, C), location(B, C).;true;true
4;true,false;workemployer(A, E), workemployer(B, F).;false;true
4;true,false,false;workemployer(B, G).;false;false
4;false,false,true;workemployer(B, J).;false;false
4;false;workemployer(A, H), workemployer(B, H).;false;true
4;false,false,false;workemployer(B, K).;false;false
4;false,false;workemployer(A, I).;true;true
4;true;workemployer(B, D), workemployer(A, D).;false;true
5;;edge(A, B) :- location(A, C), location(B, C).;true;true
5;true,false;workemployer(A, E), workemployer(B, F).;false;true
5;true,false,false;workemployer(B, G).;false;false
5;false,false,true;workemployer(B, J).;false;false
5;false;workemployer(A, H), workemployer(B, H).;false;true
5;false,false,false;workemployer(B, K).;false;false
5;false,false;workemployer(A, I).;true;true
5;true;workemployer(A, D), workemployer(B, D).;false;true
6;;edge(A, B) :- location(A, C), location(B, C).;true;true
6;true,false;workemployer(A, E).;false;true
6;true,false,false;workemployer(B, F).;false;false
6;false,false,true;workemployer(B, I).;false;false
6;false;workemployer(B, G), workemployer(A, G).;false;true
6;false,false,false;workemployer(B, J).;false;false
6;false,false;workemployer(A, H).;true;true
6;true;workemployer(A, D), workemployer(B, D).;false;true
7;;edge(A, B) :- location(A, C), location(B, C).;true;true
7;true,false;workemployer(A, E), workemployer(B, F).;false;true
7;true,false,false;workemployer(B, G).;false;false
7;false,false,true;workemployer(B, J).;false;false
7;false;workemployer(A, H), workemployer(B, H).;false;true
7;false,false,false;workemployer(B, K).;false;false
7;false,false;workemployer(A, I).;true;true
7;true;workemployer(A, D), workemployer(B, D).;false;true
8;;edge(A, B) :- location(A, C), location(B, C).;true;true
8;true,false;workemployer(A, E), workemployer(B, F).;false;true
8;true,false,false;workemployer(B, G).;false;false
8;false,false,true;workemployer(B, J).;false;false
8;false;workemployer(A, H), workemployer(B, H).;false;true
8;false,false,false;workemployer(B, K).;false;false
8;false,false;workemployer(A, I).;true;true
8;true;workemployer(A, D), workemployer(B, D).;false;true
9;;edge(A, B) :- location(A, C), location(B, C).;true;true
9;true,false;workemployer(A, E), workemployer(B, F).;false;true
9;true,false,false;workemployer(B, G).;false;false
9;false,false,true;workemployer(B, J).;false;false
9;false;workemployer(B, H), workemployer(A, H).;false;true
9;false,false,false;workemployer(B, K).;false;false
9;false,false;workemployer(A, I).;true;true
9;true;workemployer(A, D), workemployer(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.7066337835843588;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E) )
%   | | then return 0.4677746035487061;  // std dev = 9,434, 374,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=228 */
%   | | else if ( workemployer(B, F) )
%   | | | then return 0.6304261628222815;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.4958300945197985;  // std dev = 7,985, 276,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=176 */
%   else if ( workemployer(B, G), workemployer(A, G) )
%   | then return 0.6648315126651406;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, H) )
%   | | then if ( workemployer(B, I) )
%   | | | then return 0.3992881756058369;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.25236706913367285;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, J) )
%   | | | then return 0.4372995142500865;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.3067692966599258;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.5974999204454664;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E) )
%   | | then return 0.4008341716529034;  // std dev = 9,434, 374,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=228 */
%   | | else if ( workemployer(B, F) )
%   | | | then return 0.5353452038779851;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.42421709424329695;  // std dev = 7,985, 276,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=176 */
%   else if ( workemployer(A, G), workemployer(B, G) )
%   | then return 0.5634740409933644;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, H) )
%   | | then if ( workemployer(B, I) )
%   | | | then return 0.3434360605493966;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.21878972457099904;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, J) )
%   | | | then return 0.37534882602337005;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.26518304994104447;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.4699722532790561;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.3966027326030612;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.4257249003747221;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.3223015267846146;  // std dev = 11,368, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.445836645361995;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.28330883663890977;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.18486735720109376;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.3077150874579652;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.2220970468510988;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.35495799747368867;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0.309844540592121;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.32421513560098836;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.25202819537066623;  // std dev = 11,368, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.33810555993296243;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.22551763486238763;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.15262699567128662;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.24280815842452982;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.18084729059001275;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.2669532432783718;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.23524533727583521;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.24338161045640547;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.19227484988453494;  // std dev = 11,367, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.25381894395888144;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.1749149807097193;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.1235723978487322;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.18665362546841305;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.14393891890365673;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.20374027228338099;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.17666995937480448;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.18345636732611462;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.14490524848266156;  // std dev = 11,367, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.19223020134020546;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.13345195637826374;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.0985009481465182;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.14137010094522676;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.11261889075489406;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.1585622491924513;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E) )
%   | | then return 0.09997768285802541;  // std dev = 9,405, 374,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=228 */
%   | | else if ( workemployer(B, F) )
%   | | | then return 0.13987195866001573;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.12979256173963757;  // std dev = 7,985, 276,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=176 */
%   else if ( workemployer(B, G), workemployer(A, G) )
%   | then return 0.14780486965383297;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, H) )
%   | | then if ( workemployer(B, I) )
%   | | | then return 0.10087318483180167;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.07758228464453117;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, J) )
%   | | | then return 0.10632494773990801;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.08704785218643951;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.12569958959722938;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.10799624209591784;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.10799832695142038;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.0800135779276722;  // std dev = 11,364, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.11540438311855682;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.07588543845417797;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.060561620714580086;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.07977051375553715;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.06672182312000634;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.1012310020544368;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.08177267963658263;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.08435579380071519;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.060150408279503034;  // std dev = 11,364, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.09133368141270026;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.05696488558746122;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.04696413926454404;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.05983749915290698;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.05085284032597074;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.08259433832205744;  // std dev = 4,119, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.06227271557436871;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.06653882836434845;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.0453192890303611;  // std dev = 11,364, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.07310703527107269;  // std dev = 8,083, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.042728946745207934;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.03624390870023557;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.044922130488689004;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.03861010821858971;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */


Results
   AUC ROC   = 0.520402
   AUC PR    = 0.533905
   CLL	      = -0.700565
   Precision = 0.547379 at threshold = 0.5
   Recall    = 0.151129
   F1        = 0.236861


Total learning time: 202.65800000000002 seconds
Total inference time: 4.17 seconds
AUC ROC: 0.520402


Structure after Parameter Learning
[['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E)', 'true,false,false': 'workemployer(B, F)', 'false,false,true': 'workemployer(B, I)', 'false': 'workemployer(B, G), workemployer(A, G)', 'false,false,false': 'workemployer(B, J)', 'false,false': 'workemployer(A, H)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [9.434, 146, 228], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [7.985, 100, 176]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E)', 'true,false,false': 'workemployer(B, F)', 'false,false,true': 'workemployer(B, I)', 'false': 'workemployer(A, G), workemployer(B, G)', 'false,false,false': 'workemployer(B, J)', 'false,false': 'workemployer(A, H)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [9.434, 146, 228], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [7.985, 100, 176]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.368, 212, 332]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(B, E), workemployer(A, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.368, 212, 332]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.367, 212, 332]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.367, 212, 332]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E)', 'true,false,false': 'workemployer(B, F)', 'false,false,true': 'workemployer(B, I)', 'false': 'workemployer(B, G), workemployer(A, G)', 'false,false,false': 'workemployer(B, J)', 'false,false': 'workemployer(A, H)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [9.405, 146, 228], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [7.985, 100, 176]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.364, 212, 332]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.364, 212, 332]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [5.96, 46, 156], 'true,true': [4.119, 20, 112], 'false,true': [8.083, 81, 338], 'false,false,true,true': [12.527, 290, 342], 'false,false,false,false': [32.248, 2318, 1886], 'false,false,true,false': [23.35, 1383, 900], 'true,false,true': [4.806, 34, 72], 'false,false,false,true': [19.462, 654, 900], 'true,false,false,false': [11.364, 212, 332]}]]
[{'': [0.21653777513385045, 0.24960805407261394], 'false': [0.15594579661770278, 0.24873476369860115], 'true,false,false': [0.17586511126360715, 0.23104389834068997], 'false,false,true': [0.2483075628905608, 0.23881019683281077], 'true,false': [0.2379822128170704, 0.21214614590080982], 'false,false,false': [0.24373518582015063, 0.24736013275376798], 'false,false': [0.24453465690272003, 0.24973913093841085], 'true': [0.12855831037649562, 0.22526394674778255]}, {'': [0.2139949096902828, 0.24689252579786894], 'false': [0.15594579661770447, 0.24754140732735616], 'true,false,false': [0.17586511126360072, 0.23104389834068062], 'false,false,true': [0.2483075628905632, 0.23881019683281451], 'true,false': [0.2379822128170635, 0.21073903650250936], 'false,false,false': [0.24373518582010498, 0.2473601327538238], 'false,false': [0.24350749994610643, 0.2487732763074005], 'true': [0.12855831037649354, 0.22391656780541588]}, {'': [0.21146777321448976, 0.24422104082023138], 'false': [0.15594579661769134, 0.24638036634218793], 'true,false,false': [0.1758651112636025, 0.2375699573326072], 'false,false,true': [0.24830756289055406, 0.23881019683276297], 'true,false': [0.21787112851548623, 0.22297375291537888], 'false,false,false': [0.24373518582013856, 0.24736013275383428], 'false,false': [0.24251483311926642, 0.24782625745197603], 'true': [0.12855831037649115, 0.22257240574116685]}, {'': [0.20977785301875798, 0.24238928541714397], 'false': [0.15594579661769808, 0.2455239807097775], 'true,false,false': [0.17586511126360302, 0.2375415608491505], 'false,false,true': [0.2483075628905583, 0.2388101968328028], 'true,false': [0.2178711285154865, 0.221869906861751], 'false,false,false': [0.24373518582013473, 0.24736013275382385], 'false,false': [0.24177148911397572, 0.24713830640465903], 'true': [0.12855831037649307, 0.22153194888065986]}, {'': [0.20898468364283557, 0.24139742690428836], 'false': [0.155945796617703, 0.24501438378385998], 'true,false,false': [0.17586511126360085, 0.2375266227874032], 'false,false,true': [0.24830756289056014, 0.23881019683279942], 'true,false': [0.21787112851548554, 0.2213458123164054], 'false,false,false': [0.24373518582012468, 0.24736013275383525], 'false,false': [0.24131692858393586, 0.2467413344059119], 'true': [0.1285583103764931, 0.22100596534282282]}, {'': [0.20863844366992293, 0.24091826404051409], 'false': [0.15594579661770125, 0.24475254356308088], 'true,false,false': [0.1758651112636024, 0.237520515028172], 'false,false,true': [0.2483075628905546, 0.23881019683278837], 'true,false': [0.2178711285154857, 0.22111907860373226], 'false,false,false': [0.24373518582013082, 0.24736013275379187], 'false,false': [0.24107674402195728, 0.24654469817250804], 'true': [0.1285583103764928, 0.2207645338492376]}, {'': [0.20847787866528494, 0.24069426994608153], 'false': [0.1559457966176991, 0.24462927584364896], 'true,false,false': [0.1758651112636023, 0.23104389834068412], 'false,false,true': [0.24830756289056463, 0.23881019683278548], 'true,false': [0.23648706499318398, 0.20775045598665065], 'false,false,false': [0.2437351858201223, 0.24736013275379437], 'false,false': [0.24096142948924656, 0.2464550366100393], 'true': [0.12855831037649246, 0.22065082369693753]}, {'': [0.20835315115651956, 0.24058773323065663], 'false': [0.15594579661769994, 0.24457376002125117], 'true,false,false': [0.1758651112636012, 0.23737519211855282], 'false,false,true': [0.24830756289056585, 0.23881019683278096], 'true,false': [0.21787112851548582, 0.2208742851599127], 'false,false,false': [0.24373518582012316, 0.24736013275383475], 'false,false': [0.24090919010492268, 0.24641536349191304], 'true': [0.128558310376492, 0.22054600951651615]}, {'': [0.20828391056941342, 0.24053433666555163], 'false': [0.15594579661769942, 0.24454916229975276], 'true,false,false': [0.17586511126360171, 0.23737748260959748], 'false,false,true': [0.24830756289056571, 0.23881019683277804], 'true,false': [0.2178711285154857, 0.22083700792775224], 'false,false,false': [0.24373518582012801, 0.2473601327537936], 'false,false': [0.24088629987565086, 0.2463977190460766], 'true': [0.128558310376492, 0.2204927465303735]}, {'': [0.2082370453812073, 0.24050541097086614], 'false': [0.15594579661769914, 0.24453825528962053], 'true,false,false': [0.17586511126360146, 0.23737994268944942], 'false,false,true': [0.24830756289056266, 0.23881019683279583], 'true,false': [0.21787112851548604, 0.22081202041248935], 'false,false,false': [0.24373518582012488, 0.2473601327537921], 'false,false': [0.24087645821654843, 0.24638966326758968], 'true': [0.1285583103764922, 0.22045981822752778]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- location(A, C), location(B, C).;true;true', '0;true,false;workemployer(A, E).;true;true', '0;true,false,false;workemployer(B, F).;true;true', '0;false,false,true;workemployer(B, I).;true;true', '0;false;workemployer(B, G), workemployer(A, G).;true;true', '0;false,false,false;workemployer(B, J).;true;true', '0;false,false;workemployer(A, H).;true;true', '0;true;workemployer(A, D), workemployer(B, D).;true;true', '1;;edge(A, B) :- location(A, C), location(B, C).;true;true', '1;true,false;workemployer(A, E).;true;true', '1;true,false,false;workemployer(B, F).;true;true', '1;false,false,true;workemployer(B, I).;true;true', '1;false;workemployer(A, G), workemployer(B, G).;true;true', '1;false,false,false;workemployer(B, J).;true;true', '1;false,false;workemployer(A, H).;true;true', '1;true;workemployer(B, D), workemployer(A, D).;true;true', '2;;edge(A, B) :- location(A, C), location(B, C).;true;true', '2;true,false;workemployer(A, E), workemployer(B, F).;true;true', '2;true,false,false;workemployer(B, G).;true;true', '2;false,false,true;workemployer(B, J).;true;true', '2;false;workemployer(B, H), workemployer(A, H).;true;true', '2;false,false,false;workemployer(B, K).;true;true', '2;false,false;workemployer(A, I).;true;true', '2;true;workemployer(B, D), workemployer(A, D).;true;true', '3;;edge(A, B) :- location(A, C), location(B, C).;true;true', '3;true,false;workemployer(B, E), workemployer(A, F).;true;true', '3;true,false,false;workemployer(B, G).;true;true', '3;false,false,true;workemployer(B, J).;true;true', '3;false;workemployer(A, H), workemployer(B, H).;true;true', '3;false,false,false;workemployer(B, K).;true;true', '3;false,false;workemployer(A, I).;true;true', '3;true;workemployer(B, D), workemployer(A, D).;true;true', '4;;edge(A, B) :- location(A, C), location(B, C).;true;true', '4;true,false;workemployer(A, E), workemployer(B, F).;true;true', '4;true,false,false;workemployer(B, G).;true;true', '4;false,false,true;workemployer(B, J).;true;true', '4;false;workemployer(A, H), workemployer(B, H).;true;true', '4;false,false,false;workemployer(B, K).;true;true', '4;false,false;workemployer(A, I).;true;true', '4;true;workemployer(B, D), workemployer(A, D).;true;true', '5;;edge(A, B) :- location(A, C), location(B, C).;true;true', '5;true,false;workemployer(A, E), workemployer(B, F).;true;true', '5;true,false,false;workemployer(B, G).;true;true', '5;false,false,true;workemployer(B, J).;true;true', '5;false;workemployer(A, H), workemployer(B, H).;true;true', '5;false,false,false;workemployer(B, K).;true;true', '5;false,false;workemployer(A, I).;true;true', '5;true;workemployer(A, D), workemployer(B, D).;true;true', '6;;edge(A, B) :- location(A, C), location(B, C).;true;true', '6;true,false;workemployer(A, E).;true;true', '6;true,false,false;workemployer(B, F).;true;true', '6;false,false,true;workemployer(B, I).;true;true', '6;false;workemployer(B, G), workemployer(A, G).;true;true', '6;false,false,false;workemployer(B, J).;true;true', '6;false,false;workemployer(A, H).;true;true', '6;true;workemployer(A, D), workemployer(B, D).;true;true', '7;;edge(A, B) :- location(A, C), location(B, C).;true;true', '7;true,false;workemployer(A, E), workemployer(B, F).;true;true', '7;true,false,false;workemployer(B, G).;true;true', '7;false,false,true;workemployer(B, J).;true;true', '7;false;workemployer(A, H), workemployer(B, H).;true;true', '7;false,false,false;workemployer(B, K).;true;true', '7;false,false;workemployer(A, I).;true;true', '7;true;workemployer(A, D), workemployer(B, D).;true;true', '8;;edge(A, B) :- location(A, C), location(B, C).;true;true', '8;true,false;workemployer(A, E), workemployer(B, F).;true;true', '8;true,false,false;workemployer(B, G).;true;true', '8;false,false,true;workemployer(B, J).;true;true', '8;false;workemployer(A, H), workemployer(B, H).;true;true', '8;false,false,false;workemployer(B, K).;true;true', '8;false,false;workemployer(A, I).;true;true', '8;true;workemployer(A, D), workemployer(B, D).;true;true', '9;;edge(A, B) :- location(A, C), location(B, C).;true;true', '9;true,false;workemployer(A, E), workemployer(B, F).;true;true', '9;true,false,false;workemployer(B, G).;true;true', '9;false,false,true;workemployer(B, J).;true;true', '9;false;workemployer(B, H), workemployer(A, H).;true;true', '9;false,false,false;workemployer(B, K).;true;true', '9;false,false;workemployer(A, I).;true;true', '9;true;workemployer(A, D), workemployer(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.7066337835843588;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E) )
%   | | then if ( educationdegree(A, F), workenddate(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.4514636983307061;  // std dev = 9,307, 359,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=213 */
%   | | else return 0.5527096045555749;  // std dev = 0,461, 478,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=332 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.6648315126651406;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.3992881756058369;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.25236706913367285;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.4372995142500865;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.3067692966599258;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.5974999204454664;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E) )
%   | | then if ( gender(B, F), locale(B, G) )
%   | | | then return 0.41340468504284955;  // std dev = 9,194, 363,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=226 */
%   | | | else return -0.024291589769773695;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.471391132705616;  // std dev = 0,461, 478,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.5634740409933644;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.3434360605493966;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.21878972457099904;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.37534882602337005;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.26518304994104447;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.4699722532790561;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.39683560925488726;  // std dev = 0,459, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.4570728666714403;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.3107649472161884;  // std dev = 11,321, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.445836645361995;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.28330883663890977;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.18486735720109376;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.3077150874579652;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.2220970468510988;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.35495799747368867;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0.3104538054689565;  // std dev = 0,458, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.3513154370033843;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.241983028630982;  // std dev = 11,316, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.33810555993296243;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.22551763486238763;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.15262699567128662;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.24280815842452982;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.18084729059001275;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.2669532432783718;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.2361011079980036;  // std dev = 0,458, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.2641556818594106;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.18426509639561905;  // std dev = 11,314, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.25381894395888144;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.1749149807097193;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.1235723978487322;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.18665362546841305;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.14393891890365673;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.20374027228338099;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.17761052720775364;  // std dev = 0,457, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.19865514046512658;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.13883051532400914;  // std dev = 11,313, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.19223020134020546;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.13345195637826374;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.0985009481465182;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.14137010094522676;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.11261889075489406;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.1585622491924513;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E) )
%   | | then if ( workstartdate(B, F), worklocation(A, G) )
%   | | | then return 0.007021001203505002;  // std dev = 5,150, 114,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=59 */
%   | | | else return 0.1498262265213679;  // std dev = 7,637, 260,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=169 */
%   | | else return 0.12886200514087437;  // std dev = 0,456, 478,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=332 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.14780486965383297;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.10087318483180167;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.07758228464453117;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.10632494773990801;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.08704785218643951;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.12569958959722938;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.10831442412971627;  // std dev = 0,456, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.12111271992703798;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.07475712085859393;  // std dev = 11,286, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.11540438311855682;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.07588543845417797;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.060561620714580086;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.07977051375553715;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.06672182312000634;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.1012310020544368;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.08213018107342462;  // std dev = 0,456, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.09412904270574272;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.05628352073510591;  // std dev = 11,287, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.09133368141270026;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.05696488558746122;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.04696413926454404;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.05983749915290698;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.05085284032597074;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.08259433832205744;  // std dev = 0,359, 132,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.06262911857472585;  // std dev = 0,456, 106,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=72 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.07393762878140621;  // std dev = 5,960, 202,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=156 */
%   | | | else return 0.04247000127888323;  // std dev = 11,287, 544,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=332 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.07310703527107269;  // std dev = 0,395, 419,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=338 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.042728946745207934;  // std dev = 12,527, 632,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=342 */
%   | | | else return 0.03624390870023557;  // std dev = 23,350, 2.283,000 (wgt'ed) examples reached here.  /* #neg=1.383 #pos=900 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.044922130488689004;  // std dev = 19,462, 1.554,000 (wgt'ed) examples reached here.  /* #neg=654 #pos=900 */
%   | | | else return 0.03861010821858971;  // std dev = 32,248, 4.204,000 (wgt'ed) examples reached here.  /* #neg=2.318 #pos=1.886 */


Results
   AUC ROC   = 0.52037
   AUC PR    = 0.533814
   CLL	      = -0.70041
   Precision = 0.547424 at threshold = 0.5
   Recall    = 0.150996
   F1        = 0.236702


Total learning time: 169.586 seconds
Total inference time: 4.199 seconds
AUC ROC: 0.52037


Refined model AUC ROC: 0.52037


Dataset: 48_twitter_facebook, Fold: 1, Type: transfer, Time: 00:08:47
{'Learning time': 372.244, 'AUC PR': 0.533814, 'F1': 0.236702, 'AUC ROC': 0.52037, 'CLL': -0.70041, 'Inference time': 4.199, 'Mapping results': {'Generating mappings time': 0.3421313762664795, 'Generating paths time': 2.471634864807129, 'Finding best mapping': 1.6689300537109375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.13838434219360352, 'Max mapping': 24389, 'Total time': 2.952160358428955}, 'Parameter Learning results': {'Learning time': 202.65800000000002, 'AUC PR': 0.533905, 'F1': 0.236861, 'AUC ROC': 0.520402, 'CLL': -0.700565, 'Inference time': 4.17, 'Precision': [0.547379, 0.5], 'Recall': 0.151129}, 'Precision': [0.547424, 0.5], 'Recall': 0.150996}


Start learning from scratch in target domain

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.6000272576039374;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else if ( educationschool(A, F), workenddate(B, G) )
%   | | then return 0.11365554302902847;  // std dev = 0,436, 227,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=58 */
%   | | else return 0.4570189915966836;  // std dev = 0,490, 885,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=530 */
%   else if ( educationtype(B, H), gender(B, I) )
%   | then if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( hometown(B, K), hometown(A, K) )
%   | | | then return 0.8064247971684779;  // std dev = 1,687, 58,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | | else return 0.4099110496369525;  // std dev = 21,193, 1.816,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=1.002 */
%   | | else return 0.15217988572588914;  // std dev = 0,456, 2.714,000 (wgt'ed) examples reached here.  /* #neg=1.916 #pos=798 */
%   | else if ( languages(B, L), gender(A, M) )
%   | | then return 0.6345464506274601;  // std dev = 0,417, 161,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=125 */
%   | | else if ( gender(B, N), gender(A, N) )
%   | | | then return 0.3885837177082031;  // std dev = 17,750, 1.265,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=671 */
%   | | | else return 0.29012984202074915;  // std dev = 17,562, 1.257,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=543 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.5103982569917702;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else return 0.33211932441315334;  // std dev = 0,494, 1.112,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=588 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( hometown(B, G), gender(A, H) )
%   | | then return 0.5861905260914215;  // std dev = 0,409, 106,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=83 */
%   | | else if ( worklocation(A, I), workstartdate(B, J) )
%   | | | then return 0.23538452923336992;  // std dev = 4,801, 95,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=41 */
%   | | | else return 0.41082598068441506;  // std dev = 9,072, 345,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=208 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( worklocation(B, L), workenddate(B, M) )
%   | | | then return 0.4854391477779381;  // std dev = 8,058, 303,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=208 */
%   | | | else return 0.3164232184709187;  // std dev = 17,199, 1.193,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=618 */
%   | | else if ( educationschool(A, N), educationtype(B, P) )
%   | | | then return 4.2786833587831743E-4;  // std dev = 13,559, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.134 #pos=220 */
%   | | | else return 0.2872522516853153;  // std dev = 30,918, 3.875,000 (wgt'ed) examples reached here.  /* #neg=2.059 #pos=1.816 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( location(B, E), workemployer(A, C) )
%   | then return 0.5386920002667388;  // std dev = 0,349, 406,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=348 */
%   | else return 0.3238469623997469;  // std dev = 0,475, 2.399,000 (wgt'ed) examples reached here.  /* #neg=903 #pos=1.496 */
%   else if ( lastname(B, F), lastname(A, G) )
%   | then if ( languages(A, H), educationtype(B, I) )
%   | | then if ( educationschool(B, J), educationschool(A, J) )
%   | | | then return 0.43051920973526214;  // std dev = 2,353, 27,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.0904059440959425;  // std dev = 2,195, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return 0.43745048398711733;  // std dev = 0,458, 275,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=185 */
%   | else if ( educationconcentration(B, K), educationschool(B, L) )
%   | | then if ( gender(B, M), locale(A, N) )
%   | | | then return 0.2624506646498054;  // std dev = 18,726, 1.447,000 (wgt'ed) examples reached here.  /* #neg=724 #pos=723 */
%   | | | else return 0.5526334689348438;  // std dev = 3,390, 70,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=55 */
%   | | else if ( educationtype(B, P), gender(B, Q) )
%   | | | then return 0.13176364636663007;  // std dev = 24,754, 2.916,000 (wgt'ed) examples reached here.  /* #neg=1.927 #pos=989 */
%   | | | else return 0.24455211995659007;  // std dev = 24,901, 2.511,000 (wgt'ed) examples reached here.  /* #neg=1.295 #pos=1.216 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workenddate(B, C), worklocation(B, D) )
%   then if ( educationschool(B, E), educationschool(A, E) )
%   | then return 0.33792367151539854;  // std dev = 0,437, 1.449,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=1.065 */
%   | else if ( educationschool(A, F), gender(A, G) )
%   | | then return 0.015690271431204793;  // std dev = 0,426, 321,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=76 */
%   | | else return 0.30141766874179576;  // std dev = 0,487, 701,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=422 */
%   else if ( location(B, H), location(A, H) )
%   | then if ( hometown(B, I), gender(A, J) )
%   | | then return 0.4613939201897161;  // std dev = 0,368, 134,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=112 */
%   | | else if ( workemployer(B, K), languages(B, L) )
%   | | | then return 0.49078258370330835;  // std dev = 2,628, 74,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=66 */
%   | | | else return 0.24020771096156002;  // std dev = 10,204, 427,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=238 */
%   | else if ( educationtype(B, M), workemployer(A, N) )
%   | | then return 0.07882867972887207;  // std dev = 0,442, 1.549,000 (wgt'ed) examples reached here.  /* #neg=993 #pos=556 */
%   | | else if ( hometown(B, P), locale(A, Q) )
%   | | | then return 0.27228042293793164;  // std dev = 13,070, 767,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=423 */
%   | | | else return 0.17114709514996448;  // std dev = 33,325, 4.654,000 (wgt'ed) examples reached here.  /* #neg=2.574 #pos=2.080 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( lastname(B, D), educationconcentration(B, E) )
%   | then return -0.21079171488965634;  // std dev = 0,458, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.35084424892971144;  // std dev = 0,373, 538,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=446 */
%   else if ( educationschool(A, F), educationschool(B, F) )
%   | then if ( hometown(B, G), locale(B, H) )
%   | | then if ( educationyear(A, I), educationconcentration(A, J) )
%   | | | then return 0.18113843639582228;  // std dev = 7,076, 217,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=128 */
%   | | | else return 0.392926918502082;  // std dev = 6,605, 303,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=247 */
%   | | else if ( location(B, K), workenddate(B, L) )
%   | | | then return 0.2533432633480729;  // std dev = 14,931, 1.102,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=761 */
%   | | | else return 0.1650916697151431;  // std dev = 19,476, 1.572,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=854 */
%   | else if ( educationschool(A, M), educationtype(B, N) )
%   | | then return -0.04864291329574268;  // std dev = 0,373, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.349 #pos=290 */
%   | | else if ( languages(B, P), gender(B, Q) )
%   | | | then return 0.2403362666287627;  // std dev = 13,898, 839,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=493 */
%   | | | else return 0.152075028841705;  // std dev = 30,686, 3.853,000 (wgt'ed) examples reached here.  /* #neg=2.038 #pos=1.815 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(B, C), gender(B, D) )
%   then if ( workemployer(B, E), workemployer(A, E) )
%   | then return 0.27020197398628426;  // std dev = 0,339, 401,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=346 */
%   | else if ( educationyear(A, F), educationyear(B, F) )
%   | | then return 0.21681576007005068;  // std dev = 0,440, 962,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=635 */
%   | | else if ( educationyear(A, G), educationtype(B, H) )
%   | | | then return 0.06854197638288809;  // std dev = 18,532, 1.666,000 (wgt'ed) examples reached here.  /* #neg=916 #pos=750 */
%   | | | else return 0.16473817265396926;  // std dev = 21,686, 2.050,000 (wgt'ed) examples reached here.  /* #neg=929 #pos=1.121 */
%   else if ( educationtype(B, I), gender(B, J) )
%   | then if ( educationschool(A, K), educationschool(B, K) )
%   | | then return 0.1191497533813276;  // std dev = 0,483, 1.028,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=579 */
%   | | else return 0.020942541816943088;  // std dev = 0,434, 1.646,000 (wgt'ed) examples reached here.  /* #neg=1.162 #pos=484 */
%   | else if ( location(B, L) )
%   | | then return -0.1360528097845436;  // std dev = 0,400, 65,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( gender(B, M) )
%   | | | then return 0.12495877215354571;  // std dev = 22,961, 2.145,000 (wgt'ed) examples reached here.  /* #neg=1.107 #pos=1.038 */
%   | | | else return 0.28068664739596283;  // std dev = 5,039, 113,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=71 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( languages(B, C), location(B, D) )
%   then if ( educationschool(B, E), gender(B, F) )
%   | then if ( languages(A, C), educationyear(B, G) )
%   | | then return 0.22155261559600523;  // std dev = 0,411, 494,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=363 */
%   | | else return 0.13267458603927434;  // std dev = 0,458, 1.424,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=872 */
%   | else return 0.010582610272068225;  // std dev = 0,430, 196,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=79 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then if ( lastname(B, I), birthday(B, J) )
%   | | then return 0.35494383938504137;  // std dev = 0,221, 94,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=88 */
%   | | else if ( hometown(B, K), locale(A, L) )
%   | | | then return 0.2010293970783082;  // std dev = 8,604, 412,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=299 */
%   | | | else return 0.09846196835958325;  // std dev = 20,851, 1.904,000 (wgt'ed) examples reached here.  /* #neg=795 #pos=1.109 */
%   | else if ( educationschool(A, M), educationtype(B, N) )
%   | | then return -0.045202610332314985;  // std dev = 0,376, 1.440,000 (wgt'ed) examples reached here.  /* #neg=1.178 #pos=262 */
%   | | else if ( locale(B, P), locale(A, P) )
%   | | | then return 0.10444370766761292;  // std dev = 29,891, 3.676,000 (wgt'ed) examples reached here.  /* #neg=1.888 #pos=1.788 */
%   | | | else return 0.02737236317811763;  // std dev = 10,195, 436,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=178 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then if ( workposition(B, D), workemployer(A, E) )
%   | then return 0.25812459853250896;  // std dev = 0,357, 241,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=206 */
%   | else return 0.09832320059053018;  // std dev = 0,436, 263,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=172 */
%   else if ( worklocation(A, F), educationtype(B, G) )
%   | then if ( educationschool(B, H), educationschool(A, H) )
%   | | then if ( educationtype(A, G), locale(B, I) )
%   | | | then return 0.08883271930476115;  // std dev = 17,402, 1.397,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=855 */
%   | | | else return -0.10756860558095724;  // std dev = 2,715, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return -0.08513055336779728;  // std dev = 0,340, 822,000 (wgt'ed) examples reached here.  /* #neg=688 #pos=134 */
%   | else if ( languages(B, J), location(A, K) )
%   | | then if ( location(B, K), gender(B, L) )
%   | | | then return 0.2404456841516559;  // std dev = 5,539, 220,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=182 */
%   | | | else return 0.11528225006018432;  // std dev = 11,105, 613,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=360 */
%   | | else if ( educationyear(A, M), location(A, N) )
%   | | | then return 0.03392175494655109;  // std dev = 20,655, 1.901,000 (wgt'ed) examples reached here.  /* #neg=1.056 #pos=845 */
%   | | | else return 0.08355409431008894;  // std dev = 32,502, 4.583,000 (wgt'ed) examples reached here.  /* #neg=2.312 #pos=2.271 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(B, C), gender(B, D) )
%   then if ( educationclasses(B, E), languages(A, F) )
%   | then return 0.2028433616839314;  // std dev = 0,338, 169,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=145 */
%   | else if ( gender(A, D), workenddate(B, G) )
%   | | then return 0.09948635266866382;  // std dev = 0,433, 1.436,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=927 */
%   | | else if ( worklocation(A, H), educationtype(B, I) )
%   | | | then return 0.01218892151959202;  // std dev = 13,910, 1.022,000 (wgt'ed) examples reached here.  /* #neg=548 #pos=474 */
%   | | | else return 0.07095445172363378;  // std dev = 23,343, 2.452,000 (wgt'ed) examples reached here.  /* #neg=1.146 #pos=1.306 */
%   else if ( languages(A, J), educationtype(B, K) )
%   | then return -0.017769172146301526;  // std dev = 0,433, 892,000 (wgt'ed) examples reached here.  /* #neg=566 #pos=326 */
%   | else if ( gender(A, L), gender(B, L) )
%   | | then if ( firstname(B, M) )
%   | | | then return 0.38050048322148017;  // std dev = 2,201, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.06716125765099921;  // std dev = 21,783, 2.047,000 (wgt'ed) examples reached here.  /* #neg=1.062 #pos=985 */
%   | | else if ( gender(A, N), lastname(B, P) )
%   | | | then return 0.11279464263725511;  // std dev = 8,318, 298,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=152 */
%   | | | else return 0.005884292564489935;  // std dev = 19,564, 1.728,000 (wgt'ed) examples reached here.  /* #neg=1.031 #pos=697 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then return 0.14177348003042697;  // std dev = 0,378, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( educationyear(A, D), educationyear(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( lastname(B, F), educationconcentration(B, G) )
%   | | | then return -0.024747259778429596;  // std dev = 3,489, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.12700440423562875;  // std dev = 13,981, 1.031,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=737 */
%   | | else if ( gender(A, H), gender(B, I) )
%   | | | then return -0.08349871834768925;  // std dev = 6,230, 264,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=52 */
%   | | | else return 0.28769540469305505;  // std dev = 2,797, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( educationyear(A, J), educationtype(B, K) )
%   | | then if ( educationschool(A, L), educationschool(B, L) )
%   | | | then return 0.024633889856976166;  // std dev = 19,365, 1.640,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=911 */
%   | | | else return -0.0568828299406745;  // std dev = 12,913, 1.212,000 (wgt'ed) examples reached here.  /* #neg=985 #pos=227 */
%   | | else if ( gender(B, M), gender(A, M) )
%   | | | then return 0.06879971547577385;  // std dev = 25,533, 2.771,000 (wgt'ed) examples reached here.  /* #neg=1.314 #pos=1.457 */
%   | | | else return 0.02317452164967802;  // std dev = 24,007, 2.518,000 (wgt'ed) examples reached here.  /* #neg=1.365 #pos=1.153 */


Results
   AUC ROC   = 0.636454
   AUC PR    = 0.616767
   CLL	      = -0.679671
   Precision = 0.661533 at threshold = 0.5
   Recall    = 0.250996
   F1        = 0.363916


Total learning time: 344.638 seconds
Total inference time: 4.169 seconds
AUC ROC: 0.636454


Dataset: 48_twitter_facebook, Fold: 1, Type: scratch, Time: 00:14:36
{'Learning time': 344.638, 'AUC PR': 0.616767, 'F1': 0.363916, 'AUC ROC': 0.636454, 'CLL': -0.679671, 'Inference time': 4.169, 'Precision': [0.661533, 0.5], 'Recall': 0.250996}


Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.09469270706176758
   Generating paths time   = 2.451045513153076
   Generating mappings time   = 0.31369948387145996
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 2.859447956085205


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationconcentration(A,B)', 'accounttype(A,B) -> educationdegree(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
0;true,false;educationconcentration(A, E).;false;true
0;true,false,false;educationconcentration(B, F).;false;false
0;false,false,true;educationconcentration(B, I).;false;false
0;false;educationconcentration(B, G), educationconcentration(A, G).;false;true
0;false,false,false;educationconcentration(B, J).;false;false
0;false,false;educationconcentration(A, H).;true;true
0;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
1;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
1;true,false;educationconcentration(A, E).;false;true
1;true,false,false;educationconcentration(B, F).;false;false
1;false,false,true;educationconcentration(B, I).;false;false
1;false;educationconcentration(A, G), educationconcentration(B, G).;false;true
1;false,false,false;educationconcentration(B, J).;false;false
1;false,false;educationconcentration(A, H).;true;true
1;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
2;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
2;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
2;true,false,false;educationconcentration(B, G).;false;false
2;false,false,true;educationconcentration(B, J).;false;false
2;false;educationconcentration(B, H), educationconcentration(A, H).;false;true
2;false,false,false;educationconcentration(B, K).;false;false
2;false,false;educationconcentration(A, I).;true;true
2;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
3;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
3;true,false;educationconcentration(B, E), educationconcentration(A, F).;false;true
3;true,false,false;educationconcentration(B, G).;false;false
3;false,false,true;educationconcentration(B, J).;false;false
3;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
3;false,false,false;educationconcentration(B, K).;false;false
3;false,false;educationconcentration(A, I).;true;true
3;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
4;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
4;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
4;true,false,false;educationconcentration(B, G).;false;false
4;false,false,true;educationconcentration(B, J).;false;false
4;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
4;false,false,false;educationconcentration(B, K).;false;false
4;false,false;educationconcentration(A, I).;true;true
4;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
5;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
5;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
5;true,false,false;educationconcentration(B, G).;false;false
5;false,false,true;educationconcentration(B, J).;false;false
5;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
5;false,false,false;educationconcentration(B, K).;false;false
5;false,false;educationconcentration(A, I).;true;true
5;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
6;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
6;true,false;educationconcentration(A, E).;false;true
6;true,false,false;educationconcentration(B, F).;false;false
6;false,false,true;educationconcentration(B, I).;false;false
6;false;educationconcentration(B, G), educationconcentration(A, G).;false;true
6;false,false,false;educationconcentration(B, J).;false;false
6;false,false;educationconcentration(A, H).;true;true
6;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
7;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
7;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
7;true,false,false;educationconcentration(B, G).;false;false
7;false,false,true;educationconcentration(B, J).;false;false
7;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
7;false,false,false;educationconcentration(B, K).;false;false
7;false,false;educationconcentration(A, I).;true;true
7;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
8;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
8;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
8;true,false,false;educationconcentration(B, G).;false;false
8;false,false,true;educationconcentration(B, J).;false;false
8;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
8;false,false,false;educationconcentration(B, K).;false;false
8;false,false;educationconcentration(A, I).;true;true
8;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
9;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
9;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
9;true,false,false;educationconcentration(B, G).;false;false
9;false,false,true;educationconcentration(B, J).;false;false
9;false;educationconcentration(B, H), educationconcentration(A, H).;false;true
9;false,false,false;educationconcentration(B, K).;false;false
9;false,false;educationconcentration(A, I).;true;true
9;true;educationconcentration(A, D), educationconcentration(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.42957750652808374;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E) )
%   | | then return 0.3631994401500182;  // std dev = 4,975, 99,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=50 */
%   | | else if ( educationconcentration(B, F) )
%   | | | then return 0.33087620782678395;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.18373033044834958;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   else if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | then return 0.6058966828472567;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.4139684125341874;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.30182070144164924;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.37018745837398576;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.3562855810622401;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.368876976597706;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E) )
%   | | then return 0.31300921584345737;  // std dev = 4,975, 99,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=50 */
%   | | else if ( educationconcentration(B, F) )
%   | | | then return 0.2856514429535693;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.15986142429048242;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   else if ( educationconcentration(A, G), educationconcentration(B, G) )
%   | then return 0.5152218835930519;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.35577743033561376;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.260974534346619;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.3189106291749679;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.30716583752165627;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.3027909085849407;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.24448721280456598;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.2382988396382214;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.21082603518516682;  // std dev = 4,729, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.4112367470052866;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.2927846439620256;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.21874885461822066;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.26433574083562;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.25518203691476704;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.2393401664098928;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(B, E), educationconcentration(A, F) )
%   | | then return 0.19647391759850236;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.19287076943632173;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.17280966198902314;  // std dev = 4,725, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.31426233557500366;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.232261738223226;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.17834348661083338;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.21188484615048378;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.20524196859388283;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.18430382771628487;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.15416599711072487;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.15240752029073193;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.13862170769081844;  // std dev = 4,721, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.23609544565312937;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.17950187231927892;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.14216065939590686;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.16558870267044024;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.16100984073556465;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.13977569193759035;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.11896742618979356;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.11835960654119383;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.10936316168776399;  // std dev = 4,719, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.17753649839198868;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.13653366889728683;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.11140526179574535;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.12720749317750213;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.12414136623860017;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.10521075613481369;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E) )
%   | | then return 0.1159659331880225;  // std dev = 4,979, 99,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=50 */
%   | | else if ( educationconcentration(B, F) )
%   | | | then return 0.09083769459353704;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.020833080609972205;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   else if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | then return 0.13467436286598078;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.10297200244954535;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.08624412745556542;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.09668689393155626;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.09465364203773681;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.07895904348963015;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.06270518055946475;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.06917797045156292;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.06831313774096057;  // std dev = 4,705, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.10325361717690669;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.07735620122288414;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.06620215400365283;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.07303279561424754;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.07167924389078273;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.05922227782586401;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.047296815757405415;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.05242190318898927;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.05256274869701518;  // std dev = 4,704, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.07996415485513096;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.05803047053727313;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.05052410331271421;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.05497388195276001;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.05406178347686138;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.044440537654717484;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.03559935979412716;  // std dev = 3,499, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.03959873568909929;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.040265387347939864;  // std dev = 4,704, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.062468272101598006;  // std dev = 6,471, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.043525345819870664;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.03840709484861462;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.04130292769540584;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.04067821782915555;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */


Results
   AUC ROC   = 0.538978
   AUC PR    = 0.542878
   CLL	      = -0.692375
   Precision = 0.596226 at threshold = 0.5
   Recall    = 0.086038
   F1        = 0.150376


Total learning time: 122.016 seconds
Total inference time: 4.415 seconds
AUC ROC: 0.538978


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E)', 'true,false,false': 'educationconcentration(B, F)', 'false,false,true': 'educationconcentration(B, I)', 'false': 'educationconcentration(B, G), educationconcentration(A, G)', 'false,false,false': 'educationconcentration(B, J)', 'false,false': 'educationconcentration(A, H)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [4.975, 49, 50], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [3.073, 29, 14]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E)', 'true,false,false': 'educationconcentration(B, F)', 'false,false,true': 'educationconcentration(B, I)', 'false': 'educationconcentration(A, G), educationconcentration(B, G)', 'false,false,false': 'educationconcentration(B, J)', 'false,false': 'educationconcentration(A, H)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [4.975, 49, 50], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [3.073, 29, 14]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(B, H), educationconcentration(A, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.729, 53, 40]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(B, E), educationconcentration(A, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.725, 53, 40]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.721, 53, 40]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.719, 53, 40]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E)', 'true,false,false': 'educationconcentration(B, F)', 'false,false,true': 'educationconcentration(B, I)', 'false': 'educationconcentration(B, G), educationconcentration(A, G)', 'false,false,false': 'educationconcentration(B, J)', 'false,false': 'educationconcentration(A, H)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [4.979, 49, 50], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [3.073, 29, 14]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.705, 53, 40]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.704, 53, 40]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(B, H), educationconcentration(A, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [3.703, 29, 26], 'true,true': [2.619, 12, 16], 'false,true': [6.471, 56, 166], 'false,false,true,true': [10.195, 187, 234], 'false,false,false,false': [28.372, 1616, 1604], 'false,false,true,false': [18.84, 800, 638], 'true,false,true': [3.499, 25, 24], 'false,false,false,true': [17.644, 608, 638], 'true,false,false,false': [4.704, 53, 40]}]]
[{'': [0.24916543209876837, 0.2499990143061516], 'false': [0.18862105348592412, 0.24994120201843292], 'true,false,false': [0.2492561983471088, 0.21957815035154085], 'false,false,true': [0.24688418593892283, 0.24682713009297658], 'true,false': [0.2499744923987349, 0.24156601416076762], 'false,false,false': [0.24985507395736364, 0.24999652791169275], 'false,false': [0.24904329749782525, 0.24999593886349958], 'true': [0.24489795918367302, 0.24813831843129244]}, {'': [0.2475706325583995, 0.24910168136035327], 'false': [0.1886210534859169, 0.24968595640658683], 'true,false,false': [0.2492561983471081, 0.2195781503515417], 'false,false,true': [0.24688418593891, 0.24682713009298035], 'true,false': [0.24997449239873504, 0.24013066787516613], 'false,false,false': [0.24985507395738762, 0.24999652791176905], 'false,false': [0.2484144887401554, 0.24998481040959736], 'true': [0.24489795918367352, 0.24678120201421805]}, {'': [0.2460520523277392, 0.24821427295683182], 'false': [0.18862105348592031, 0.2494375181694224], 'true,false,false': [0.24925619834710733, 0.2404616871037487], 'false,false,true': [0.24688418593892156, 0.24682713009298218], 'true,false': [0.24989587671803426, 0.24390616725653955], 'false,false,false': [0.2498550739573784, 0.2499965279117336], 'false,false': [0.2478002599662835, 0.2499739177578216], 'true': [0.24489795918367316, 0.24549876518500324]}, {'': [0.24546916721833315, 0.247608832191502], 'false': [0.18862105348591765, 0.24925366506669766], 'true,false,false': [0.2492561983471067, 0.24001691160722466], 'false,false,true': [0.24688418593891684, 0.2468271300929874], 'true,false': [0.2498958767180341, 0.24354440958688048], 'false,false,false': [0.24985507395738685, 0.24999652791172888], 'false,false': [0.24734932798997528, 0.2499659393493408], 'true': [0.2448979591836735, 0.24517331188392028]}, {'': [0.24510140846746029, 0.24728714598756368], 'false': [0.188621053485917, 0.249143966404774], 'true,false,false': [0.24925619834710702, 0.23968580865669487], 'false,false,true': [0.24688418593891878, 0.24682713009297796], 'true,false': [0.24989587671803445, 0.24328675235727407], 'false,false,false': [0.2498550739573774, 0.24999652791173313], 'false,false': [0.24708431505635736, 0.24996128016776853], 'true': [0.24489795918367352, 0.24495093984895147]}, {'': [0.24488959573369729, 0.24713598748431284], 'false': [0.18862105348591904, 0.24908773324543587], 'true,false,false': [0.2492561983471072, 0.23944979432452157], 'false,false,true': [0.24688418593891925, 0.24682713009298193], 'true,false': [0.2498958767180339, 0.24311296618747616], 'false,false,false': [0.24985507395736048, 0.24999652791170401], 'false,false': [0.24695066580858244, 0.24995895381166058], 'true': [0.24489795918367366, 0.24480741113114016]}, {'': [0.2447704118163312, 0.24706706827762526], 'false': [0.18862105348591784, 0.24906151363444576], 'true,false,false': [0.2492561983471078, 0.21957815035154127], 'false,false,true': [0.2468841859389198, 0.2468271300929975], 'true,false': [0.2503665547964259, 0.2374409894223878], 'false,false,false': [0.2498550739573708, 0.24999652791171856], 'false,false': [0.24688907021459372, 0.2499578943102639], 'true': [0.24489795918367357, 0.24471621143139158]}, {'': [0.2442367098950398, 0.247034749794647], 'false': [0.1886210534859186, 0.24904989779052944], 'true,false,false': [0.24925619834710783, 0.23803650304101862], 'false,false,true': [0.24688418593892192, 0.24682713009298543], 'true,false': [0.2498958767180341, 0.24220615906193932], 'false,false,false': [0.24985507395737436, 0.24999652791171822], 'false,false': [0.24686184580569626, 0.24995743124322242], 'true': [0.2448979591836735, 0.24412539955486742]}, {'': [0.2441915518285846, 0.24701856470069233], 'false': [0.18862105348591873, 0.2490448600687616], 'true,false,false': [0.24925619834710694, 0.2379504704032709], 'false,false,true': [0.24688418593891784, 0.24682713009297721], 'true,false': [0.2498958767180344, 0.24215192798779536], 'false,false,false': [0.24985507395736656, 0.2499965279117575], 'false,false': [0.2468499218536977, 0.24995723004968318], 'true': [0.24489795918367332, 0.24408316707176664]}, {'': [0.24416220683283008, 0.24700970995763868], 'false': [0.1886210534859186, 0.24904267998529714], 'true,false,false': [0.24925619834710733, 0.2378912186150964], 'false,false,true': [0.24688418593891986, 0.24682713009298718], 'true,false': [0.24989587671803415, 0.242114794594349], 'false,false,false': [0.24985507395736573, 0.249996527911722], 'false,false': [0.24684464037030193, 0.24995714120614923], 'true': [0.2448979591836733, 0.2440538384711292]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '0;true,false;educationconcentration(A, E).;true;true', '0;true,false,false;educationconcentration(B, F).;true;true', '0;false,false,true;educationconcentration(B, I).;true;true', '0;false;educationconcentration(B, G), educationconcentration(A, G).;true;true', '0;false,false,false;educationconcentration(B, J).;true;true', '0;false,false;educationconcentration(A, H).;true;true', '0;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '1;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '1;true,false;educationconcentration(A, E).;true;true', '1;true,false,false;educationconcentration(B, F).;true;true', '1;false,false,true;educationconcentration(B, I).;true;true', '1;false;educationconcentration(A, G), educationconcentration(B, G).;true;true', '1;false,false,false;educationconcentration(B, J).;true;true', '1;false,false;educationconcentration(A, H).;true;true', '1;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '2;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '2;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '2;true,false,false;educationconcentration(B, G).;true;true', '2;false,false,true;educationconcentration(B, J).;true;true', '2;false;educationconcentration(B, H), educationconcentration(A, H).;true;true', '2;false,false,false;educationconcentration(B, K).;true;true', '2;false,false;educationconcentration(A, I).;true;true', '2;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '3;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '3;true,false;educationconcentration(B, E), educationconcentration(A, F).;true;true', '3;true,false,false;educationconcentration(B, G).;true;true', '3;false,false,true;educationconcentration(B, J).;true;true', '3;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '3;false,false,false;educationconcentration(B, K).;true;true', '3;false,false;educationconcentration(A, I).;true;true', '3;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '4;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '4;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '4;true,false,false;educationconcentration(B, G).;true;true', '4;false,false,true;educationconcentration(B, J).;true;true', '4;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '4;false,false,false;educationconcentration(B, K).;true;true', '4;false,false;educationconcentration(A, I).;true;true', '4;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '5;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '5;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '5;true,false,false;educationconcentration(B, G).;true;true', '5;false,false,true;educationconcentration(B, J).;true;true', '5;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '5;false,false,false;educationconcentration(B, K).;true;true', '5;false,false;educationconcentration(A, I).;true;true', '5;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '6;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '6;true,false;educationconcentration(A, E).;true;true', '6;true,false,false;educationconcentration(B, F).;true;true', '6;false,false,true;educationconcentration(B, I).;true;true', '6;false;educationconcentration(B, G), educationconcentration(A, G).;true;true', '6;false,false,false;educationconcentration(B, J).;true;true', '6;false,false;educationconcentration(A, H).;true;true', '6;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '7;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '7;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '7;true,false,false;educationconcentration(B, G).;true;true', '7;false,false,true;educationconcentration(B, J).;true;true', '7;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '7;false,false,false;educationconcentration(B, K).;true;true', '7;false,false;educationconcentration(A, I).;true;true', '7;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '8;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '8;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '8;true,false,false;educationconcentration(B, G).;true;true', '8;false,false,true;educationconcentration(B, J).;true;true', '8;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '8;false,false,false;educationconcentration(B, K).;true;true', '8;false,false;educationconcentration(A, I).;true;true', '8;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '9;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '9;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '9;true,false,false;educationconcentration(B, G).;true;true', '9;false,false,true;educationconcentration(B, J).;true;true', '9;false;educationconcentration(B, H), educationconcentration(A, H).;true;true', '9;false,false,false;educationconcentration(B, K).;true;true', '9;false,false;educationconcentration(A, I).;true;true', '9;true;educationconcentration(A, D), educationconcentration(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.42957750652808374;  // std dev = 0,495, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E) )
%   | | then if ( location(B, F), birthday(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.30133075328133024;  // std dev = 4,660, 88,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=39 */
%   | | else return 0.2663122004056341;  // std dev = 0,491, 98,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=40 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.6058966828472567;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.4139684125341874;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.30182070144164924;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.37018745837398576;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.3562855810622401;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then if ( workstartdate(A, E), languages(B, F) )
%   | | then return -0.20255159483086574;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4641150718358009;  // std dev = 0,471, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( educationconcentration(A, G) )
%   | | then return 0.31154836434321875;  // std dev = 0,490, 99,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=50 */
%   | | else return 0.23070850802372886;  // std dev = 0,491, 98,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.5152218835930519;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.35577743033561376;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.260974534346619;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.3189106291749679;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.30716583752165627;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.30023869905444006;  // std dev = 0,477, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.24210317209637494;  // std dev = 0,487, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.2590632386620255;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.19952038015397755;  // std dev = 4,696, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.4112367470052866;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.2927846439620256;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.21874885461822066;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.26433574083562;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.25518203691476704;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.23763880927204034;  // std dev = 0,475, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(B, E), educationconcentration(A, F) )
%   | | then return 0.19469214952430247;  // std dev = 0,486, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.21233217680397667;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.162440301904864;  // std dev = 4,690, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.31426233557500366;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.232261738223226;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.17834348661083338;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.21188484615048378;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.20524196859388283;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.183482856393971;  // std dev = 0,473, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.15300189657602822;  // std dev = 0,485, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.16941700063184925;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.12960685204030883;  // std dev = 4,685, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.23609544565312937;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.17950187231927892;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.14216065939590686;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.16558870267044024;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.16100984073556465;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.13964829361586137;  // std dev = 0,472, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.11831901601584399;  // std dev = 0,485, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.13247425158468423;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.10183693033416558;  // std dev = 4,683, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.17753649839198868;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.13653366889728683;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.11140526179574535;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.12720749317750213;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.12414136623860017;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.10553883296727808;  // std dev = 0,471, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E) )
%   | | then return 0.12093222577436501;  // std dev = 0,487, 99,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=50 */
%   | | else if ( educationconcentration(B, F) )
%   | | | then return 0.10213869124372195;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return -0.004111399308220821;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   else if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | then return 0.13467436286598078;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.10297200244954535;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.08624412745556542;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.09668689393155626;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.09465364203773681;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.0795417773200111;  // std dev = 0,471, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.06145978993501965;  // std dev = 0,484, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.07801669184653767;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.06429231380067632;  // std dev = 4,660, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.10325361717690669;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.07735620122288414;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.06620215400365283;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.07303279561424754;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.07167924389078273;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.05991774512340731;  // std dev = 0,471, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.04647533349109485;  // std dev = 0,484, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.05923262924734017;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.04938910624972251;  // std dev = 4,659, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.07996415485513096;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.05803047053727313;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.05052410331271421;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.05497388195276001;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.05406178347686138;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.04515825875017749;  // std dev = 0,470, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.03507333241454956;  // std dev = 0,484, 49,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.04479797797374889;  // std dev = 3,703, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.03778463653106219;  // std dev = 4,658, 93,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.062468272101598006;  // std dev = 0,434, 222,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=166 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.043525345819870664;  // std dev = 10,195, 421,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=234 */
%   | | | else return 0.03840709484861462;  // std dev = 18,840, 1.438,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=638 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.04130292769540584;  // std dev = 17,644, 1.246,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=638 */
%   | | | else return 0.04067821782915555;  // std dev = 28,372, 3.220,000 (wgt'ed) examples reached here.  /* #neg=1.616 #pos=1.604 */


Results
   AUC ROC   = 0.539084
   AUC PR    = 0.543055
   CLL	      = -0.692359
   Precision = 0.59757 at threshold = 0.5
   Recall    = 0.085711
   F1        = 0.149919


Total learning time: 124.702 seconds
Total inference time: 5.194 seconds
AUC ROC: 0.539084


Refined model AUC ROC: 0.539084


Dataset: 48_twitter_facebook, Fold: 2, Type: transfer, Time: 00:18:56
{'Learning time': 246.71800000000002, 'AUC PR': 0.543055, 'F1': 0.149919, 'AUC ROC': 0.539084, 'CLL': -0.692359, 'Inference time': 5.194, 'Mapping results': {'Generating mappings time': 0.31369948387145996, 'Generating paths time': 2.451045513153076, 'Finding best mapping': 1.6689300537109375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.09469270706176758, 'Max mapping': 24389, 'Total time': 2.859447956085205}, 'Parameter Learning results': {'Learning time': 122.016, 'AUC PR': 0.542878, 'F1': 0.150376, 'AUC ROC': 0.538978, 'CLL': -0.692375, 'Inference time': 4.415, 'Precision': [0.596226, 0.5], 'Recall': 0.086038}, 'Precision': [0.59757, 0.5], 'Recall': 0.085711}


Start learning from scratch in target domain

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( hometown(B, F), lastname(B, G) )
%   | | then if ( location(B, H) )
%   | | | then return 0.49451257146314903;  // std dev = 3,908, 66,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   | | | else return 0.2377785647291414;  // std dev = 5,043, 108,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
%   | | else return 0.10814893509951132;  // std dev = 0,433, 180,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=45 */
%   | else if ( educationyear(B, I), gender(A, J) )
%   | | then if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.5923926325784992;  // std dev = 13,630, 952,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=699 */
%   | | | else return 0.32379779006133974;  // std dev = 17,128, 1.179,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=549 */
%   | | else return 0.5671884831221062;  // std dev = 0,454, 1.416,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=1.004 */
%   else if ( educationconcentration(B, L), educationconcentration(A, L) )
%   | then return 0.6051368869067419;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationyear(A, M), educationyear(B, M) )
%   | | then return 0.34897462317290256;  // std dev = 0,500, 436,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=214 */
%   | | else return 0.16852308475937142;  // std dev = 0,463, 2.352,000 (wgt'ed) examples reached here.  /* #neg=1.622 #pos=730 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( location(B, F), educationyear(B, G) )
%   | | then if ( hometown(B, H) )
%   | | | then return 0.4179961745647368;  // std dev = 4,630, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   | | | else return 0.07523666860498646;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else return 0.11483908392554412;  // std dev = 0,447, 237,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=66 */
%   | else if ( educationtype(A, I), educationyear(B, J) )
%   | | then if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.5047674034455536;  // std dev = 13,662, 958,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=704 */
%   | | | else return 0.21506875457828564;  // std dev = 14,373, 860,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=345 */
%   | | else return 0.477456513262277;  // std dev = 0,459, 1.729,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=1.203 */
%   else if ( languages(B, L), hometown(B, M) )
%   | then if ( location(B, N), educationdegree(B, P) )
%   | | then return 0.019861123623130732;  // std dev = 0,390, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else return 0.3953956177688373;  // std dev = 0,493, 306,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=174 */
%   | else return 0.15800337583012883;  // std dev = 0,467, 2.513,000 (wgt'ed) examples reached here.  /* #neg=1.691 #pos=822 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workenddate(B, D), educationconcentration(A, E) )
%   | then return 0.009237126869691964;  // std dev = 0,419, 126,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | else if ( educationdegree(B, F), birthday(B, G) )
%   | | then if ( languages(B, H), educationconcentration(B, I) )
%   | | | then return 0.10509461615403866;  // std dev = 5,011, 126,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   | | | else return 0.2731325291497306;  // std dev = 8,859, 328,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=180 */
%   | | else if ( educationdegree(B, J), languages(B, K) )
%   | | | then return 0.1575983099770065;  // std dev = 5,806, 156,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=60 */
%   | | | else return 0.3589469449868981;  // std dev = 26,240, 3.165,000 (wgt'ed) examples reached here.  /* #neg=1.094 #pos=2.071 */
%   else if ( educationconcentration(B, L), educationconcentration(A, M) )
%   | then if ( location(B, N), location(A, N) )
%   | | then return 0.6608654497822519;  // std dev = 0,299, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else if ( educationdegree(A, P), location(A, Q) )
%   | | | then return 0.07060609760853231;  // std dev = 2,911, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.3011886796632795;  // std dev = 5,742, 138,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=72 */
%   | else return 0.13551824803852142;  // std dev = 0,467, 2.631,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=868 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( gender(B, D) )
%   | then return 0.41921581022716975;  // std dev = 0,420, 630,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=480 */
%   | else return -0.014976195265450479;  // std dev = 0,471, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( educationconcentration(A, F), educationyear(B, G) )
%   | | then if ( educationschool(B, H), educationschool(A, H) )
%   | | | then return 0.2835727997311;  // std dev = 8,751, 374,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=247 */
%   | | | else return -0.04336939331200063;  // std dev = 6,879, 283,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=62 */
%   | | else if ( workenddate(B, I), hometown(B, J) )
%   | | | then return 0.07288886454425071;  // std dev = 6,081, 162,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=64 */
%   | | | else return 0.272621345182972;  // std dev = 24,051, 2.625,000 (wgt'ed) examples reached here.  /* #neg=958 #pos=1.667 */
%   | else if ( location(A, K), birthday(B, L) )
%   | | then return -0.0033008812761505003;  // std dev = 0,407, 490,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=107 */
%   | | else if ( workemployer(B, M), workstartdate(B, N) )
%   | | | then return 0.4203004282137943;  // std dev = 4,209, 77,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=50 */
%   | | | else return 0.11362252385128432;  // std dev = 21,436, 2.114,000 (wgt'ed) examples reached here.  /* #neg=1.411 #pos=703 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( lastname(B, D), birthday(B, E) )
%   | then return 0.2821028910821981;  // std dev = 0,444, 599,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=417 */
%   | else if ( educationyear(B, F), birthday(B, G) )
%   | | then if ( birthday(A, G), educationschool(B, H) )
%   | | | then return 0.267448652250965;  // std dev = 5,980, 158,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=103 */
%   | | | else return 0.06167592058884846;  // std dev = 12,918, 752,000 (wgt'ed) examples reached here.  /* #neg=425 #pos=327 */
%   | | else if ( firstname(A, I), educationschool(B, J) )
%   | | | then return -0.3893909801811592;  // std dev = 0,343, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.20914275013029932;  // std dev = 22,322, 2.383,000 (wgt'ed) examples reached here.  /* #neg=850 #pos=1.533 */
%   else if ( educationtype(B, K), educationyear(A, L) )
%   | then if ( educationconcentration(A, M), birthday(B, N) )
%   | | then return 0.05191584847605207;  // std dev = 0,433, 354,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=108 */
%   | | else if ( birthday(B, P), birthday(A, P) )
%   | | | then return 0.3775966695726926;  // std dev = 6,012, 159,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=100 */
%   | | | else return 0.15042866302247504;  // std dev = 15,526, 1.052,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=427 */
%   | else return 0.04986631016542695;  // std dev = 0,442, 1.306,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=371 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.2719707714938692;  // std dev = 0,426, 647,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=486 */
%   else if ( educationyear(B, D), location(A, E) )
%   | then if ( birthday(A, F), birthday(B, F) )
%   | | then if ( workenddate(B, G) )
%   | | | then return -0.22842992716998425;  // std dev = 1,276, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.2972178576002097;  // std dev = 4,828, 109,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=70 */
%   | | else if ( educationconcentration(B, H), educationdegree(A, I) )
%   | | | then return 0.18902250758127506;  // std dev = 5,234, 149,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=86 */
%   | | | else return -0.008493503704263751;  // std dev = 14,198, 1.115,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=356 */
%   | else if ( locale(B, J), locale(A, J) )
%   | | then if ( birthday(B, K), birthday(A, L) )
%   | | | then return 0.2118856740166401;  // std dev = 11,167, 608,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=401 */
%   | | | else return 0.13556906304522204;  // std dev = 21,567, 2.122,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=1.293 */
%   | | else if ( languages(A, M), educationdegree(A, N) )
%   | | | then return 0.26656363531802457;  // std dev = 7,788, 247,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=133 */
%   | | | else return 0.06311471319629615;  // std dev = 19,175, 1.754,000 (wgt'ed) examples reached here.  /* #neg=1.195 #pos=559 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(B, C), workenddate(A, D) )
%   then if ( educationschool(B, E), educationschool(A, E) )
%   | then if ( educationconcentration(A, C), languages(A, F) )
%   | | then return 0.6089800551839845;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( lastname(B, G), hometown(B, H) )
%   | | | then return 0.2953377352340037;  // std dev = 1,974, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.028320067614312647;  // std dev = 3,032, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else return -0.16911470734650907;  // std dev = 0,391, 120,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=21 */
%   else if ( location(B, I), location(A, I) )
%   | then if ( educationtype(A, J), educationyear(B, K) )
%   | | then return 0.16683300128781167;  // std dev = 0,458, 432,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=298 */
%   | | else return 0.29796534275038317;  // std dev = 0,326, 205,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=182 */
%   | else if ( location(A, L), location(B, M) )
%   | | then return -0.0336056218870946;  // std dev = 0,415, 496,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=151 */
%   | | else if ( educationconcentration(B, N), locale(B, P) )
%   | | | then return 0.1435281817437271;  // std dev = 16,988, 1.362,000 (wgt'ed) examples reached here.  /* #neg=612 #pos=750 */
%   | | | else return 0.07984362054151246;  // std dev = 29,500, 4.089,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=1.946 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workenddate(B, C), educationconcentration(A, D) )
%   then if ( location(B, E), educationconcentration(B, F) )
%   | then return 0.1889722113658048;  // std dev = 0,459, 42,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | else return -0.12975815830056686;  // std dev = 0,355, 200,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=36 */
%   else if ( workstartdate(B, G), educationyear(A, H) )
%   | then if ( educationconcentration(B, I), workenddate(A, J) )
%   | | then return -0.15420345440334532;  // std dev = 0,361, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( workenddate(A, K), educationschool(B, L) )
%   | | | then return 0.3425359044348044;  // std dev = 3,741, 81,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=62 */
%   | | | else return 0.1315491719542182;  // std dev = 10,880, 524,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=303 */
%   | else if ( locale(B, M), locale(A, M) )
%   | | then if ( lastname(B, N), birthday(B, P) )
%   | | | then return 0.15970688213223863;  // std dev = 10,025, 528,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=373 */
%   | | | else return 0.07696548828118391;  // std dev = 24,629, 2.885,000 (wgt'ed) examples reached here.  /* #neg=1.145 #pos=1.740 */
%   | | else if ( hometown(B, Q), languages(B, R) )
%   | | | then return 0.1768153481373327;  // std dev = 8,312, 300,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=158 */
%   | | | else return 0.023241161522674966;  // std dev = 20,715, 2.182,000 (wgt'ed) examples reached here.  /* #neg=1.498 #pos=684 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(B, C), educationconcentration(A, C) )
%   then if ( educationdegree(B, D), languages(B, E) )
%   | then return -0.09102329490067007;  // std dev = 0,450, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else return 0.21259450952954248;  // std dev = 0,399, 218,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=171 */
%   else if ( educationyear(B, F), educationconcentration(A, G) )
%   | then if ( educationdegree(B, H), location(B, I) )
%   | | then if ( educationschool(A, J), educationschool(B, J) )
%   | | | then return 0.2124413505012716;  // std dev = 5,965, 168,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=119 */
%   | | | else return -0.11978847833003733;  // std dev = 2,884, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else return -0.0423813300563165;  // std dev = 0,416, 990,000 (wgt'ed) examples reached here.  /* #neg=667 #pos=323 */
%   | else if ( lastname(B, K), languages(B, L) )
%   | | then if ( educationschool(A, M), educationschool(B, M) )
%   | | | then return 0.2563898875499883;  // std dev = 5,478, 183,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=135 */
%   | | | else return 0.06231058490757686;  // std dev = 8,216, 301,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=143 */
%   | | else if ( educationdegree(B, N), educationyear(A, P) )
%   | | | then return -0.021015405340266358;  // std dev = 10,765, 550,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=211 */
%   | | | else return 0.06658317996719094;  // std dev = 29,845, 4.284,000 (wgt'ed) examples reached here.  /* #neg=2.021 #pos=2.263 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workenddate(B, C), educationconcentration(A, D) )
%   then return -0.06226516280489943;  // std dev = 0,380, 242,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=59 */
%   else if ( workemployer(B, E), lastname(A, F) )
%   | then if ( location(B, G), educationtype(A, H) )
%   | | then if ( location(A, G) )
%   | | | then return 0.22274160464105663;  // std dev = 1,990, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.018369831661857447;  // std dev = 4,131, 84,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=41 */
%   | | else if ( lastname(B, I), educationdegree(A, J) )
%   | | | then return -0.07465383011177745;  // std dev = 1,556, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2943611652300895;  // std dev = 4,024, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else if ( educationconcentration(B, K), workenddate(A, L) )
%   | | then if ( location(B, M), workstartdate(A, N) )
%   | | | then return -0.23817633422877335;  // std dev = 2,183, 62,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | | | else return -0.008912508335475439;  // std dev = 4,518, 105,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | else if ( educationconcentration(B, P), locale(B, Q) )
%   | | | then return 0.08487762905921088;  // std dev = 18,272, 1.647,000 (wgt'ed) examples reached here.  /* #neg=694 #pos=953 */
%   | | | else return 0.03234447994717392;  // std dev = 30,473, 4.509,000 (wgt'ed) examples reached here.  /* #neg=2.311 #pos=2.198 */


Results
   AUC ROC   = 0.543524
   AUC PR    = 0.550602
   CLL	      = -0.715472
   Precision = 0.531163 at threshold = 0.5
   Recall    = 0.62372
   F1        = 0.573733


Total learning time: 252.8 seconds
Total inference time: 7.254 seconds
AUC ROC: 0.543524


Dataset: 48_twitter_facebook, Fold: 2, Type: scratch, Time: 00:23:17
{'Learning time': 252.8, 'AUC PR': 0.550602, 'F1': 0.573733, 'AUC ROC': 0.543524, 'CLL': -0.715472, 'Inference time': 7.254, 'Precision': [0.531163, 0.5], 'Recall': 0.62372}


Starting fold 3

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.12912392616271973
   Generating paths time   = 3.839552402496338
   Generating mappings time   = 0.4408876895904541
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 4.409577131271362


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationtype(A,B)', 'accounttype(A,B) -> hometown(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
0;true,false;educationtype(A, E).;false;true
0;true,false,false;educationtype(B, F).;false;false
0;false,false,true;educationtype(B, I).;false;false
0;false;educationtype(B, G), educationtype(A, G).;false;true
0;false,false,false;educationtype(B, J).;false;false
0;false,false;educationtype(A, H).;true;true
0;true;educationtype(A, D), educationtype(B, D).;false;true
1;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
1;true,false;educationtype(A, E).;false;true
1;true,false,false;educationtype(B, F).;false;false
1;false,false,true;educationtype(B, I).;false;false
1;false;educationtype(A, G), educationtype(B, G).;false;true
1;false,false,false;educationtype(B, J).;false;false
1;false,false;educationtype(A, H).;true;true
1;true;educationtype(B, D), educationtype(A, D).;false;true
2;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
2;true,false;educationtype(A, E), educationtype(B, F).;false;true
2;true,false,false;educationtype(B, G).;false;false
2;false,false,true;educationtype(B, J).;false;false
2;false;educationtype(B, H), educationtype(A, H).;false;true
2;false,false,false;educationtype(B, K).;false;false
2;false,false;educationtype(A, I).;true;true
2;true;educationtype(B, D), educationtype(A, D).;false;true
3;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
3;true,false;educationtype(B, E), educationtype(A, F).;false;true
3;true,false,false;educationtype(B, G).;false;false
3;false,false,true;educationtype(B, J).;false;false
3;false;educationtype(A, H), educationtype(B, H).;false;true
3;false,false,false;educationtype(B, K).;false;false
3;false,false;educationtype(A, I).;true;true
3;true;educationtype(B, D), educationtype(A, D).;false;true
4;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
4;true,false;educationtype(A, E), educationtype(B, F).;false;true
4;true,false,false;educationtype(B, G).;false;false
4;false,false,true;educationtype(B, J).;false;false
4;false;educationtype(A, H), educationtype(B, H).;false;true
4;false,false,false;educationtype(B, K).;false;false
4;false,false;educationtype(A, I).;true;true
4;true;educationtype(B, D), educationtype(A, D).;false;true
5;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
5;true,false;educationtype(A, E), educationtype(B, F).;false;true
5;true,false,false;educationtype(B, G).;false;false
5;false,false,true;educationtype(B, J).;false;false
5;false;educationtype(A, H), educationtype(B, H).;false;true
5;false,false,false;educationtype(B, K).;false;false
5;false,false;educationtype(A, I).;true;true
5;true;educationtype(A, D), educationtype(B, D).;false;true
6;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
6;true,false;educationtype(A, E).;false;true
6;true,false,false;educationtype(B, F).;false;false
6;false,false,true;educationtype(B, I).;false;false
6;false;educationtype(B, G), educationtype(A, G).;false;true
6;false,false,false;educationtype(B, J).;false;false
6;false,false;educationtype(A, H).;true;true
6;true;educationtype(A, D), educationtype(B, D).;false;true
7;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
7;true,false;educationtype(A, E), educationtype(B, F).;false;true
7;true,false,false;educationtype(B, G).;false;false
7;false,false,true;educationtype(B, J).;false;false
7;false;educationtype(A, H), educationtype(B, H).;false;true
7;false,false,false;educationtype(B, K).;false;false
7;false,false;educationtype(A, I).;true;true
7;true;educationtype(A, D), educationtype(B, D).;false;true
8;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
8;true,false;educationtype(A, E), educationtype(B, F).;false;true
8;true,false,false;educationtype(B, G).;false;false
8;false,false,true;educationtype(B, J).;false;false
8;false;educationtype(A, H), educationtype(B, H).;false;true
8;false,false,false;educationtype(B, K).;false;false
8;false,false;educationtype(A, I).;true;true
8;true;educationtype(A, D), educationtype(B, D).;false;true
9;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true
9;true,false;educationtype(A, E), educationtype(B, F).;false;true
9;true,false,false;educationtype(B, G).;false;false
9;false,false,true;educationtype(B, J).;false;false
9;false;educationtype(B, H), educationtype(A, H).;false;true
9;false,false,false;educationtype(B, K).;false;false
9;false,false;educationtype(A, I).;true;true
9;true;educationtype(A, D), educationtype(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.42875412241939304;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.3067470659406347;  // std dev = 5,145, 107,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=48 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.4257165026670802;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.5949910403626703;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.35173476283316646;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.11901850031690216;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.3741724799000306;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.36391816586873815;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.34289749239546785;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.36818655657891963;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.26516414909476715;  // std dev = 5,145, 107,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=48 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.36563890306952207;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.5062567560764839;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.303317136448044;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.10390401933018466;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.3222739072445711;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.313616398366183;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.2958376680966176;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.3022648396092636;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.08927336557606272;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.30032237795834016;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.27810180053137523;  // std dev = 5,100, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.252172785280218;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.08965978484201699;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.2669488980851532;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2602149738190094;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.2463110240962457;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.23896908269713643;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.07325155587973721;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.23759789257837766;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.22361723317235155;  // std dev = 5,095, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.20304839577535905;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.0765599316331672;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.21377319299573763;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.20889985656791796;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.1987613533417411;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.1840523093333231;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.05954184401368847;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.1831227473365394;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.17519259139886947;  // std dev = 5,091, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.15949200365183108;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06477076548202088;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.16688580456451357;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.16353434699303063;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.1565165781718073;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.13960537010615648;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.04803040446482249;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.13897642556158543;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.13487570582606537;  // std dev = 5,090, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.12312372846432555;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.05435872923012887;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.12807549280261166;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.1258323773282447;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.12112610004939692;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.10509227046493634;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.07252602242512303;  // std dev = 5,107, 107,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=48 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.10465560923745351;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.2086133734237969;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.09398082169067248;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.0453091382242866;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.09726462437822991;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.09577370684442282;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.09266197636354923;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.07887329576557629;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.02374301817789034;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.07855818232391379;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.07920235300873919;  // std dev = 5,077, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.07123499118327978;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03754894535760287;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.07342080947868178;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07242268345909386;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.07036858633088568;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.05915772637246552;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.01880989751058184;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.05892126938442074;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.059887302639396844;  // std dev = 5,077, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.05376650929551883;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.030968545573888596;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.055239034051516915;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.054560344844148054;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.05319591801432422;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.04439035406734727;  // std dev = 9,221, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.014867778271709231;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.044207109746053574;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.045204061696443684;  // std dev = 5,077, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.040479817749121065;  // std dev = 20,228, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.025439868535518533;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.04148793359483868;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.041017450919499474;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.0401015732198744;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */


Results
   AUC ROC   = 0.50903
   AUC PR    = 0.511918
   CLL	      = -0.693448
   Precision = 0.576 at threshold = 0.5
   Recall    = 0.046672
   F1        = 0.086348


Total learning time: 77.688 seconds
Total inference time: 4.751 seconds
AUC ROC: 0.50903


Structure after Parameter Learning
[['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [5.145, 59, 48], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [1.919, 5, 14]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [5.145, 59, 48], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [1.919, 5, 14]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.1, 51, 56]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.095, 51, 56]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.091, 51, 56]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.09, 51, 56]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [5.107, 59, 48], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [1.919, 5, 14]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.077, 51, 56]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.077, 51, 56]}], ['edge(A, B)', {'': 'hometown(A, C), hometown(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [4.262, 32, 42], 'true,true': [9.221, 149, 198], 'false,true': [20.228, 829, 808], 'false,false,true,true': [5.158, 102, 36], 'false,false,false,false': [17.406, 625, 588], 'false,false,true,false': [19.541, 740, 789], 'true,false,true': [2.026, 13, 6], 'false,false,false,true': [19.747, 771, 789], 'true,false,false,false': [5.077, 51, 56]}]]
[{'': [0.24728534235267247, 0.24997800564411413], 'false': [0.24995885839416077, 0.24998356464572888], 'true,false,false': [0.2454346238130027, 0.19390581717451486], 'false,false,true': [0.19281663516068184, 0.24974324601204834], 'true,false': [0.2473578478469738, 0.23956526766100097], 'false,false,false': [0.24996671597635414, 0.2497673934954375], 'false,false': [0.24997400040090278, 0.24998826326032572], 'true': [0.24501490752352828, 0.24960000000000002]}, {'': [0.2462473950560985, 0.24960068520439355], 'false': [0.24995885839412912, 0.24946765098480192], 'true,false,false': [0.24543462381300174, 0.193905817174515], 'false,false,true': [0.19281663516068184, 0.2497432460119997], 'true,false': [0.24735784784697493, 0.23812163638917502], 'false,false,false': [0.2499667159763685, 0.24976739349545263], 'false,false': [0.2486514346182701, 0.24995730930773802], 'true': [0.24501490752352673, 0.24721592240843848]}, {'': [0.24522428231833768, 0.24924808039355362], 'false': [0.24995885839412826, 0.24898559229738315], 'true,false,false': [0.24543462381300118, 0.243077846459867], 'false,false,true': [0.19281663516068082, 0.24974324601202072], 'true,false': [0.2160664819944598, 0.24416072611935077], 'false,false,false': [0.24996671597633763, 0.24976739349546256], 'false,false': [0.24741726444322704, 0.2499270990324931], 'true': [0.24501490752352492, 0.24485937856164092]}, {'': [0.2445068398803048, 0.24897528737988459], 'false': [0.24995885839413085, 0.24861253832571661], 'true,false,false': [0.24543462381300277, 0.24256324156832715], 'false,false,true': [0.1928166351606817, 0.24974324601202533], 'true,false': [0.2160664819944598, 0.2437844172607643], 'false,false,false': [0.24996671597634462, 0.24976739349543545], 'false,false': [0.2464602421294795, 0.2499048207905493], 'true': [0.2450149075235223, 0.24324568847831768]}, {'': [0.2440435333575768, 0.24879422779232185], 'false': [0.24995885839414986, 0.2483648240039622], 'true,false,false': [0.24543462381300213, 0.24226274353918195], 'false,false,true': [0.1928166351606801, 0.24974324601203954], 'true,false': [0.21606648199445977, 0.2435747336068999], 'false,false,false': [0.24996671597632317, 0.24976739349544613], 'false,false': [0.24582242739340643, 0.24989164534250513], 'true': [0.24501490752352198, 0.24217675139575234]}, {'': [0.24377534202285997, 0.24868701994268733], 'false': [0.24995885839414397, 0.2482181009425219], 'true,false,false': [0.24543462381300227, 0.2421062225475278], 'false,false,true': [0.1928166351606814, 0.24974324601202327], 'true,false': [0.21606648199445985, 0.24347106961765905], 'false,false,false': [0.249966715976324, 0.24976739349545451], 'false,false': [0.24544328288585546, 0.2498849764228398], 'true': [0.24501490752352775, 0.241541343860442]}, {'': [0.24363035632033572, 0.2486284645638742], 'false': [0.24995885839413268, 0.24813795335128191], 'true,false,false': [0.24543462381300257, 0.1939058171745152], 'false,false,true': [0.19281663516067962, 0.2497432460120184], 'true,false': [0.2437994542898948, 0.23666407755316632], 'false,false,false': [0.24996671597633024, 0.24976739349544533], 'false,false': [0.24523562943758676, 0.24988190867947233], 'true': [0.2450149075235242, 0.24119005815218794]}, {'': [0.243368197278128, 0.24859826643580227], 'false': [0.24995885839413512, 0.24809662128031928], 'true,false,false': [0.24543462381300224, 0.24092523103300892], 'false,false,true': [0.19281663516068065, 0.24974324601201556], 'true,false': [0.2160664819944598, 0.2427689504712377], 'false,false,false': [0.2499667159763223, 0.24976739349544322], 'false,false': [0.24512837160637022, 0.24988056417974916], 'true': [0.24501490752352467, 0.2404941470011998]}, {'': [0.24332214877664132, 0.24858336247069288], 'false': [0.24995885839415033, 0.24807622413965633], 'true,false,false': [0.24543462381300227, 0.24093024659476509], 'false,false,true': [0.19281663516068076, 0.24974324601203213], 'true,false': [0.2160664819944598, 0.24277204073105546], 'false,false,false': [0.24996671597632678, 0.2497673934954443], 'false,false': [0.24507539242130483, 0.24987998399568162], 'true': [0.24501490752352353, 0.24037730660013723]}, {'': [0.24329932268068463, 0.2485762852236919], 'false': [0.24995885839412413, 0.24806653888974473], 'true,false,false': [0.24543462381300252, 0.2409432916864254], 'false,false,true': [0.19281663516068065, 0.24974324601203332], 'true,false': [0.2160664819944599, 0.24277976713919014], 'false,false,false': [0.24996671597632447, 0.2497673934954484], 'false,false': [0.24505022028049844, 0.24987973229259072], 'true': [0.24501490752352328, 0.24031901513401902]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '0;true,false;educationtype(A, E).;true;true', '0;true,false,false;educationtype(B, F).;true;true', '0;false,false,true;educationtype(B, I).;true;true', '0;false;educationtype(B, G), educationtype(A, G).;true;true', '0;false,false,false;educationtype(B, J).;true;true', '0;false,false;educationtype(A, H).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '1;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '1;true,false;educationtype(A, E).;true;true', '1;true,false,false;educationtype(B, F).;true;true', '1;false,false,true;educationtype(B, I).;true;true', '1;false;educationtype(A, G), educationtype(B, G).;true;true', '1;false,false,false;educationtype(B, J).;true;true', '1;false,false;educationtype(A, H).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '2;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '2;true,false;educationtype(A, E), educationtype(B, F).;true;true', '2;true,false,false;educationtype(B, G).;true;true', '2;false,false,true;educationtype(B, J).;true;true', '2;false;educationtype(B, H), educationtype(A, H).;true;true', '2;false,false,false;educationtype(B, K).;true;true', '2;false,false;educationtype(A, I).;true;true', '2;true;educationtype(B, D), educationtype(A, D).;true;true', '3;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '3;true,false;educationtype(B, E), educationtype(A, F).;true;true', '3;true,false,false;educationtype(B, G).;true;true', '3;false,false,true;educationtype(B, J).;true;true', '3;false;educationtype(A, H), educationtype(B, H).;true;true', '3;false,false,false;educationtype(B, K).;true;true', '3;false,false;educationtype(A, I).;true;true', '3;true;educationtype(B, D), educationtype(A, D).;true;true', '4;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '4;true,false;educationtype(A, E), educationtype(B, F).;true;true', '4;true,false,false;educationtype(B, G).;true;true', '4;false,false,true;educationtype(B, J).;true;true', '4;false;educationtype(A, H), educationtype(B, H).;true;true', '4;false,false,false;educationtype(B, K).;true;true', '4;false,false;educationtype(A, I).;true;true', '4;true;educationtype(B, D), educationtype(A, D).;true;true', '5;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '5;true,false;educationtype(A, E), educationtype(B, F).;true;true', '5;true,false,false;educationtype(B, G).;true;true', '5;false,false,true;educationtype(B, J).;true;true', '5;false;educationtype(A, H), educationtype(B, H).;true;true', '5;false,false,false;educationtype(B, K).;true;true', '5;false,false;educationtype(A, I).;true;true', '5;true;educationtype(A, D), educationtype(B, D).;true;true', '6;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '6;true,false;educationtype(A, E).;true;true', '6;true,false,false;educationtype(B, F).;true;true', '6;false,false,true;educationtype(B, I).;true;true', '6;false;educationtype(B, G), educationtype(A, G).;true;true', '6;false,false,false;educationtype(B, J).;true;true', '6;false,false;educationtype(A, H).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '7;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '7;true,false;educationtype(A, E), educationtype(B, F).;true;true', '7;true,false,false;educationtype(B, G).;true;true', '7;false,false,true;educationtype(B, J).;true;true', '7;false;educationtype(A, H), educationtype(B, H).;true;true', '7;false,false,false;educationtype(B, K).;true;true', '7;false,false;educationtype(A, I).;true;true', '7;true;educationtype(A, D), educationtype(B, D).;true;true', '8;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '8;true,false;educationtype(A, E), educationtype(B, F).;true;true', '8;true,false,false;educationtype(B, G).;true;true', '8;false,false,true;educationtype(B, J).;true;true', '8;false;educationtype(A, H), educationtype(B, H).;true;true', '8;false,false,false;educationtype(B, K).;true;true', '8;false,false;educationtype(A, I).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '9;;edge(A, B) :- hometown(A, C), hometown(B, C).;true;true', '9;true,false;educationtype(A, E), educationtype(B, F).;true;true', '9;true,false,false;educationtype(B, G).;true;true', '9;false,false,true;educationtype(B, J).;true;true', '9;false;educationtype(B, H), educationtype(A, H).;true;true', '9;false,false,false;educationtype(B, K).;true;true', '9;false,false;educationtype(A, I).;true;true', '9;true;educationtype(A, D), educationtype(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.42875412241939304;  // std dev = 0,495, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.3067470659406347;  // std dev = 0,497, 107,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=48 */
%   | | else return 0.4602994727339217;  // std dev = 0,489, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( educationtype(B, F), educationtype(A, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then return 0.46913291679287145;  // std dev = 0,488, 874,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=534 */
%   | | else return 0.21725771622663928;  // std dev = 0,480, 763,000 (wgt'ed) examples reached here.  /* #neg=489 #pos=274 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.11901850031690216;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.3741724799000306;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.36391816586873815;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.34289749239546785;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.36818655657891963;  // std dev = 0,495, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E) )
%   | | then if ( lastname(B, F), educationyear(A, G) )
%   | | | then return 0.051860135900704464;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.30545490714253454;  // std dev = 4,742, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
%   | | else return 0.394591226579445;  // std dev = 0,489, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.3025651475805951;  // std dev = 0,495, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.10390401933018466;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.3222739072445711;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.313616398366183;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.2958376680966176;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then return 0.4399929856227116;  // std dev = 0,455, 240,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=170 */
%   | | else return -0.006658104719970482;  // std dev = 0,440, 107,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | else if ( educationtype(A, F), educationtype(B, G) )
%   | | then return 0.08213648548806858;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.2880120091650596;  // std dev = 0,494, 181,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=98 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.251563125536579;  // std dev = 0,495, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.08965978484201699;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.2669488980851532;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2602149738190094;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.2463110240962457;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.23730851461922628;  // std dev = 0,478, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else return 0.21461041208823278;  // std dev = 0,493, 200,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=104 */
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then if ( educationwith(B, G) )
%   | | | then return 0.5249768276033837;  // std dev = 4,099, 125,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=105 */
%   | | | else return 0.2577405125166037;  // std dev = 13,538, 749,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=429 */
%   | | else return 0.09575588579885078;  // std dev = 0,480, 763,000 (wgt'ed) examples reached here.  /* #neg=489 #pos=274 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.0765599316331672;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.21377319299573763;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.20889985656791796;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.1987613533417411;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.18318993680028112;  // std dev = 0,477, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else return 0.16762040836323736;  // std dev = 0,493, 200,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=104 */
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( educationschool(B, F), gender(B, G) )
%   | | then if ( hometown(B, H), educationschool(A, F) )
%   | | | then return 0.3566475115468087;  // std dev = 6,788, 245,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=182 */
%   | | | else return 0.15996081763102843;  // std dev = 16,511, 1.121,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=556 */
%   | | else return -0.030404574049204044;  // std dev = 0,436, 271,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=70 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06477076548202088;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.16688580456451357;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.16353434699303063;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.1565165781718073;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.13936745590351549;  // std dev = 0,476, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else return 0.12877781785169506;  // std dev = 0,492, 200,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=104 */
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( educationwith(B, F), educationschool(A, G) )
%   | | then return 0.3186974804001765;  // std dev = 0,413, 185,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=140 */
%   | | else if ( educationschool(B, H), gender(B, I) )
%   | | | then return 0.12358989359266663;  // std dev = 16,888, 1.181,000 (wgt'ed) examples reached here.  /* #neg=583 #pos=598 */
%   | | | else return -0.024217206838535833;  // std dev = 7,177, 271,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=70 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.05435872923012887;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.12807549280261166;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.1258323773282447;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.12112610004939692;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.10526410976092303;  // std dev = 0,476, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E) )
%   | | then if ( firstname(B, F) )
%   | | | then return -0.18280541626003372;  // std dev = 1,555, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.09955460260474543;  // std dev = 4,741, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | | else return 0.13860788491851736;  // std dev = 0,489, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.0922292024076237;  // std dev = 0,479, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.0453091382242866;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.09726462437822991;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.09577370684442282;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.09266197636354923;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.07927683936120497;  // std dev = 0,476, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.056185345279400674;  // std dev = 0,468, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.06943775092096456;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.09993988297132096;  // std dev = 5,016, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.07057894983748436;  // std dev = 0,479, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03754894535760287;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.07342080947868178;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07242268345909386;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.07036858633088568;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.059668605411364074;  // std dev = 0,476, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.04317807028883825;  // std dev = 0,468, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.052083274849950276;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.07557079967393764;  // std dev = 5,014, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.05380984505023494;  // std dev = 0,479, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.030968545573888596;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.055239034051516915;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.054560344844148054;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.05319591801432422;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( hometown(A, C), hometown(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.04492986282523396;  // std dev = 0,476, 347,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=198 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.033319684574145456;  // std dev = 0,468, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.03908836127962352;  // std dev = 4,262, 74,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | | | else return 0.05697045736343834;  // std dev = 5,013, 107,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=56 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.04093239828210675;  // std dev = 0,479, 1.637,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=808 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.025439868535518533;  // std dev = 5,158, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.04148793359483868;  // std dev = 19,541, 1.529,000 (wgt'ed) examples reached here.  /* #neg=740 #pos=789 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.041017450919499474;  // std dev = 19,747, 1.560,000 (wgt'ed) examples reached here.  /* #neg=771 #pos=789 */
%   | | | else return 0.0401015732198744;  // std dev = 17,406, 1.213,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=588 */


Results
   AUC ROC   = 0.656902
   AUC PR    = 0.631602
   CLL	      = -0.671465
   Precision = 0.668769 at threshold = 0.5
   Recall    = 0.435393
   F1        = 0.527418


Total learning time: 82.39 seconds
Total inference time: 6.033 seconds
AUC ROC: 0.656902


Refined model AUC ROC: 0.656902


Dataset: 48_twitter_facebook, Fold: 3, Type: transfer, Time: 00:26:13
{'Learning time': 160.078, 'AUC PR': 0.631602, 'F1': 0.527418, 'AUC ROC': 0.656902, 'CLL': -0.671465, 'Inference time': 6.033, 'Mapping results': {'Generating mappings time': 0.4408876895904541, 'Generating paths time': 3.839552402496338, 'Finding best mapping': 1.430511474609375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.12912392616271973, 'Max mapping': 24389, 'Total time': 4.409577131271362}, 'Parameter Learning results': {'Learning time': 77.688, 'AUC PR': 0.511918, 'F1': 0.086348, 'AUC ROC': 0.50903, 'CLL': -0.693448, 'Inference time': 4.751, 'Precision': [0.576, 0.5], 'Recall': 0.046672}, 'Precision': [0.668769, 0.5], 'Recall': 0.435393}


Start learning from scratch in target domain

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationclasses(B, D) )
%   | then return 0.7297705567211316;  // std dev = 0,335, 148,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then return 0.5433341202846934;  // std dev = 0,464, 378,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=259 */
%   | | else if ( birthday(B, G), locale(B, H) )
%   | | | then return 0.48052655747713097;  // std dev = 8,199, 286,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=178 */
%   | | | else return 0.2979079712440869;  // std dev = 9,044, 332,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=146 */
%   else if ( hometown(B, I), location(B, J) )
%   | then if ( educationschool(A, K), educationschool(B, L) )
%   | | then return 0.1581489350995117;  // std dev = 0,458, 140,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
%   | | else return 0.5152370577048722;  // std dev = 0,475, 522,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=343 */
%   | else if ( educationtype(B, M), educationschool(A, N) )
%   | | then return 0.16873389331677785;  // std dev = 0,463, 718,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=223 */
%   | | else if ( firstname(B, P) )
%   | | | then return 0.4475529086094418;  // std dev = 10,470, 453,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=267 */
%   | | | else return 0.3311404349624082;  // std dev = 30,151, 3.647,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=1.725 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationwith(B, D) )
%   | then return 0.5994968464483639;  // std dev = 0,366, 173,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=145 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then return 0.46669163179502604;  // std dev = 0,462, 378,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=261 */
%   | | else if ( lastname(B, G) )
%   | | | then return 0.046457716158249035;  // std dev = 2,484, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.3367961648045966;  // std dev = 11,715, 558,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=298 */
%   else if ( educationschool(A, H), educationtype(B, I) )
%   | then return 0.1454363776788004;  // std dev = 0,462, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( hometown(B, J), location(B, K) )
%   | | then if ( lastname(B, L), gender(A, M) )
%   | | | then return -0.023192169096799123;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.46961382262516393;  // std dev = 10,281, 491,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=337 */
%   | | else if ( firstname(B, N) )
%   | | | then return 0.38393338325629295;  // std dev = 10,470, 453,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=267 */
%   | | | else return 0.28587548350986897;  // std dev = 30,151, 3.647,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=1.725 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationwith(B, D) )
%   | then return 0.4750989471772648;  // std dev = 0,365, 173,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=145 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then return 0.37556650762886695;  // std dev = 0,462, 378,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=261 */
%   | | else if ( firstname(B, G) )
%   | | | then return 0.5099883863626291;  // std dev = 3,087, 60,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return 0.23640200849765663;  // std dev = 11,466, 533,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=258 */
%   else if ( educationtype(B, H), educationschool(A, I) )
%   | then return 0.12456837324371081;  // std dev = 0,462, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( hometown(B, J), location(B, K) )
%   | | then if ( educationclasses(B, L) )
%   | | | then return 0.5532056637541618;  // std dev = 3,470, 100,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=86 */
%   | | | else return 0.30911305313714427;  // std dev = 9,916, 422,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=257 */
%   | | else if ( location(B, M), gender(A, N) )
%   | | | then return 0.19140065960992225;  // std dev = 13,895, 794,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=342 */
%   | | | else return 0.2601611126446455;  // std dev = 28,722, 3.306,000 (wgt'ed) examples reached here.  /* #neg=1.656 #pos=1.650 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( educationtype(B, E) )
%   | then return -0.025959517784718625;  // std dev = 0,406, 172,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=38 */
%   | else if ( workenddate(A, F) )
%   | | then return -0.08162632255329388;  // std dev = 0,399, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( lastname(A, C) )
%   | | | then return 0.7165358629625183;  // std dev = 0,013, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.10659943379547075;  // std dev = 7,618, 244,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=95 */
%   else if ( educationclasses(B, G) )
%   | then return 0.3960552996520269;  // std dev = 0,368, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   | else if ( educationconcentration(B, H), educationyear(B, I) )
%   | | then if ( educationclasses(A, J) )
%   | | | then return 0.5816239394528347;  // std dev = 0,823, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.32150109318376824;  // std dev = 7,235, 234,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=153 */
%   | | else if ( educationyear(B, K) )
%   | | | then return 0.14722263077192652;  // std dev = 18,763, 1.516,000 (wgt'ed) examples reached here.  /* #neg=845 #pos=671 */
%   | | | else return 0.21683025626882269;  // std dev = 31,687, 4.096,000 (wgt'ed) examples reached here.  /* #neg=2.029 #pos=2.067 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( educationtype(B, E) )
%   | then return -0.021212075860384514;  // std dev = 0,406, 172,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=38 */
%   | else if ( lastname(A, C) )
%   | | then return 0.5525191332551868;  // std dev = 0,016, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( workstartdate(A, F), birthday(B, G) )
%   | | | then return -0.27448392885790734;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07843226757021861;  // std dev = 7,861, 263,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=100 */
%   else if ( hometown(B, H), location(B, I) )
%   | then return 0.2208308060769912;  // std dev = 0,453, 974,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=635 */
%   | else if ( educationyear(B, J), location(B, K) )
%   | | then if ( educationconcentration(B, L) )
%   | | | then return 0.38393313170734444;  // std dev = 2,972, 45,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return -0.015389323202288434;  // std dev = 8,034, 336,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=92 */
%   | | else if ( firstname(B, M), location(B, N) )
%   | | | then return 0.35393146579946927;  // std dev = 5,086, 143,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=109 */
%   | | | else return 0.16181862650540402;  // std dev = 33,767, 4.670,000 (wgt'ed) examples reached here.  /* #neg=2.380 #pos=2.290 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationwith(B, D) )
%   then if ( workstartdate(A, E), location(A, F) )
%   | then return -0.1319153037769076;  // std dev = 0,471, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0.26440922291517993;  // std dev = 0,394, 236,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=179 */
%   else if ( educationyear(B, G), educationconcentration(B, H) )
%   | then if ( birthday(B, I), locale(A, J) )
%   | | then if ( languages(B, K), educationtype(A, L) )
%   | | | then return 0.42040856711378266;  // std dev = 1,266, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.221018323036744;  // std dev = 5,871, 170,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=118 */
%   | | else if ( location(A, M), hometown(A, N) )
%   | | | then return 0.3166896936958988;  // std dev = 1,766, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.08277715004437172;  // std dev = 4,959, 114,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=61 */
%   | else if ( lastname(B, P), lastname(A, P) )
%   | | then return 0.5323624311642717;  // std dev = 0,161, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( educationyear(B, Q), gender(A, R) )
%   | | | then return 0.07557952168311889;  // std dev = 18,258, 1.490,000 (wgt'ed) examples reached here.  /* #neg=852 #pos=638 */
%   | | | else return 0.1250739348043554;  // std dev = 33,045, 4.528,000 (wgt'ed) examples reached here.  /* #neg=2.283 #pos=2.245 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( lastname(B, C) )
%   then if ( educationtype(B, D), birthday(A, E) )
%   | then return -0.1090172720307616;  // std dev = 0,324, 53,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | else if ( lastname(A, F) )
%   | | then return 0.21326691195887398;  // std dev = 0,400, 47,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | else if ( gender(A, G), languages(B, H) )
%   | | | then return 0.26943528032419684;  // std dev = 2,040, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.007408738510451601;  // std dev = 8,715, 363,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=117 */
%   else if ( educationclasses(B, I) )
%   | then return 0.20287543441918074;  // std dev = 0,368, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   | else if ( location(B, J), birthday(B, K) )
%   | | then if ( educationschool(B, L), gender(B, M) )
%   | | | then return 0.09709619861806931;  // std dev = 10,521, 475,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=244 */
%   | | | else return -0.1331530458925024;  // std dev = 4,421, 129,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=26 */
%   | | else if ( workenddate(B, N), worklocation(B, P) )
%   | | | then return -0.15993653017707132;  // std dev = 2,043, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.10254805237684333;  // std dev = 35,370, 5.210,000 (wgt'ed) examples reached here.  /* #neg=2.590 #pos=2.620 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then if ( educationtype(A, D), workenddate(B, E) )
%   | then return 0.08890174281732155;  // std dev = 0,365, 83,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | else return 0.18381354888457035;  // std dev = 0,365, 222,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=185 */
%   else if ( workstartdate(B, F), location(B, G) )
%   | then if ( workemployer(A, H), location(A, G) )
%   | | then return 0.6126340140356576;  // std dev = 0,112, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hometown(B, I), gender(A, J) )
%   | | | then return -0.2829549226836121;  // std dev = 2,189, 52,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.010718786426061347;  // std dev = 5,773, 157,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=53 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( firstname(A, L), birthday(B, M) )
%   | | | then return 0.31045546008630626;  // std dev = 2,740, 61,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=51 */
%   | | | else return 0.09813685120630752;  // std dev = 14,117, 884,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=513 */
%   | | else if ( gender(A, N), gender(B, N) )
%   | | | then return 0.0921450647012584;  // std dev = 24,100, 2.422,000 (wgt'ed) examples reached here.  /* #neg=1.215 #pos=1.207 */
%   | | | else return 0.04137306716619151;  // std dev = 25,385, 2.735,000 (wgt'ed) examples reached here.  /* #neg=1.512 #pos=1.223 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( firstname(B, C), location(B, D) )
%   then if ( location(A, D), educationconcentration(A, E) )
%   | then return -0.22898519268950557;  // std dev = 0,390, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return 0.1455059889600174;  // std dev = 0,419, 285,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=209 */
%   else if ( workemployer(B, F), educationschool(B, G) )
%   | then if ( workemployer(A, H) )
%   | | then return 0.43827579064866634;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, I), educationschool(A, G) )
%   | | | then return -0.4443369426612852;  // std dev = 0,085, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08734669545995427;  // std dev = 3,800, 76,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | else if ( birthday(B, J), birthday(A, J) )
%   | | then if ( hometown(A, K), hometown(B, K) )
%   | | | then return -0.08240642884979249;  // std dev = 2,523, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.17534755722848988;  // std dev = 6,154, 170,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=104 */
%   | | else if ( educationtype(B, L), firstname(B, M) )
%   | | | then return -0.16007478361113697;  // std dev = 3,748, 82,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.05435784429575879;  // std dev = 37,162, 5.949,000 (wgt'ed) examples reached here.  /* #neg=3.013 #pos=2.936 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationtype(B, C), location(A, D) )
%   then if ( educationschool(B, E) )
%   | then return 0.03255422566650223;  // std dev = 0,461, 1.246,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=646 */
%   | else return -0.09224138016236708;  // std dev = 0,406, 180,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=41 */
%   else if ( educationschool(B, F), gender(B, G) )
%   | then if ( gender(A, G), locale(B, H) )
%   | | then if ( firstname(B, I), lastname(A, J) )
%   | | | then return -0.19476976403261637;  // std dev = 1,379, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.10836567156080645;  // std dev = 14,343, 947,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=560 */
%   | | else if ( workstartdate(B, K), locale(B, L) )
%   | | | then return 0.12590097236881873;  // std dev = 4,992, 128,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=76 */
%   | | | else return 0.02226960827911437;  // std dev = 14,439, 916,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=453 */
%   | else if ( educationyear(B, M) )
%   | | then return -0.1604791019489368;  // std dev = 0,387, 184,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=35 */
%   | | else if ( location(A, N), educationschool(A, P) )
%   | | | then return 0.08461374676555554;  // std dev = 14,275, 841,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=450 */
%   | | | else return 0.03492418812725304;  // std dev = 23,015, 2.172,000 (wgt'ed) examples reached here.  /* #neg=1.125 #pos=1.047 */


Results
   AUC ROC   = 0.604488
   AUC PR    = 0.598445
   CLL	      = -0.688945
   Precision = 0.648755 at threshold = 0.5
   Recall    = 0.284356
   F1        = 0.395403


Total learning time: 159.54500000000002 seconds
Total inference time: 4.787 seconds
AUC ROC: 0.604488


Dataset: 48_twitter_facebook, Fold: 3, Type: scratch, Time: 00:28:58
{'Learning time': 159.54500000000002, 'AUC PR': 0.598445, 'F1': 0.395403, 'AUC ROC': 0.604488, 'CLL': -0.688945, 'Inference time': 4.787, 'Precision': [0.648755, 0.5], 'Recall': 0.284356}


Starting fold 4

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.03494524955749512
   Generating paths time   = 2.4757721424102783
   Generating mappings time   = 0.31604576110839844
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.826772689819336


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> workstartdate(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;workstartdate(A, E).;false;true
0;true,false,false;workstartdate(B, F).;false;false
0;false,false,true;workstartdate(B, I).;false;false
0;false;workstartdate(B, G), workstartdate(A, G).;false;true
0;false,false,false;workstartdate(B, J).;false;false
0;false,false;workstartdate(A, H).;true;true
0;true;workstartdate(A, D), workstartdate(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;workstartdate(A, E).;false;true
1;true,false,false;workstartdate(B, F).;false;false
1;false,false,true;workstartdate(B, I).;false;false
1;false;workstartdate(A, G), workstartdate(B, G).;false;true
1;false,false,false;workstartdate(B, J).;false;false
1;false,false;workstartdate(A, H).;true;true
1;true;workstartdate(B, D), workstartdate(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
2;true,false,false;workstartdate(B, G).;false;false
2;false,false,true;workstartdate(B, J).;false;false
2;false;workstartdate(B, H), workstartdate(A, H).;false;true
2;false,false,false;workstartdate(B, K).;false;false
2;false,false;workstartdate(A, I).;true;true
2;true;workstartdate(B, D), workstartdate(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
3;true,false,false;workstartdate(B, G).;false;false
3;false,false,true;workstartdate(B, J).;false;false
3;false;workstartdate(A, H), workstartdate(B, H).;false;true
3;false,false,false;workstartdate(B, K).;false;false
3;false,false;workstartdate(A, I).;true;true
3;true;workstartdate(B, D), workstartdate(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
4;true,false,false;workstartdate(B, G).;false;false
4;false,false,true;workstartdate(B, J).;false;false
4;false;workstartdate(A, H), workstartdate(B, H).;false;true
4;false,false,false;workstartdate(B, K).;false;false
4;false,false;workstartdate(A, I).;true;true
4;true;workstartdate(B, D), workstartdate(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
5;true,false,false;workstartdate(B, G).;false;false
5;false,false,true;workstartdate(B, J).;false;false
5;false;workstartdate(A, H), workstartdate(B, H).;false;true
5;false,false,false;workstartdate(B, K).;false;false
5;false,false;workstartdate(A, I).;true;true
5;true;workstartdate(A, D), workstartdate(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;workstartdate(A, E).;false;true
6;true,false,false;workstartdate(B, F).;false;false
6;false,false,true;workstartdate(B, I).;false;false
6;false;workstartdate(B, G), workstartdate(A, G).;false;true
6;false,false,false;workstartdate(B, J).;false;false
6;false,false;workstartdate(A, H).;true;true
6;true;workstartdate(A, D), workstartdate(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
7;true,false,false;workstartdate(B, G).;false;false
7;false,false,true;workstartdate(B, J).;false;false
7;false;workstartdate(A, H), workstartdate(B, H).;false;true
7;false,false,false;workstartdate(B, K).;false;false
7;false,false;workstartdate(A, I).;true;true
7;true;workstartdate(A, D), workstartdate(B, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
8;true,false,false;workstartdate(B, G).;false;false
8;false,false,true;workstartdate(B, J).;false;false
8;false;workstartdate(A, H), workstartdate(B, H).;false;true
8;false,false,false;workstartdate(B, K).;false;false
8;false,false;workstartdate(A, I).;true;true
8;true;workstartdate(A, D), workstartdate(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
9;true,false,false;workstartdate(B, G).;false;false
9;false,false,true;workstartdate(B, J).;false;false
9;false;workstartdate(B, H), workstartdate(A, H).;false;true
9;false,false,false;workstartdate(B, K).;false;false
9;false,false;workstartdate(A, I).;true;true
9;true;workstartdate(A, D), workstartdate(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.31163730719253474;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.20328167846234313;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3707843141608795;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.2693207666359965;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.1766919687929083;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3194144601811975;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.2192721473492705;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.22538327437598277;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.15047529101699852;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2647274309620466;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18329834068531892;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.12579863076005549;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2121681176147618;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14567465119319037;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.10350066688161849;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.16578340244836537;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.11159559999632969;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.11380054224247269;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.0840313245760623;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.127337790686589;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.08637026299843623;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08782929277813077;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.06749717972007446;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.0967735496209268;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.06628370899125427;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06722722400564961;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.05375937131738323;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.07309089181843874;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.05057564362187433;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.05117339744830586;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.04253623713021117;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.05501347412557899;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.038438849075129386;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.03880925454513463;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.03348509992607587;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.04133045510283158;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */


Results
   AUC ROC   = 0.514203
   AUC PR    = 0.533901
   CLL	      = -0.703391
   Precision = 0.81198 at threshold = 0.5
   Recall    = 0.040572
   F1        = 0.077282


Total learning time: 14.122 seconds
Total inference time: 5.186 seconds
AUC ROC: 0.514203


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [2.98e-08, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.98e-08, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [4.21e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.11e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}]]
[{'': [8.198570028001156e-16, 0.24984787328654107], 'false': [0.2469135802469134, 0.2498569171951113], 'true,false,false': [-1.4802973661668753e-16, -2.220446049250313e-16], 'false,false,true': [0.24000000000000007, 0.2478366684694443], 'true,false': [-8.881784197001253e-17, -2.5376526277146434e-16], 'false,false,false': [0.22601613282167884, 0.24984034719596596], 'false,false': [0.24703460445054465, 0.24994501400458694], 'true': [0.0, -1.4802973661668753e-16]}, {'': [-2.049642507000289e-16, 0.2490537134169054], 'false': [0.24691358024691354, 0.24906054778809908], 'true,false,false': [7.401486830834377e-17, 1.1102230246251565e-16], 'false,false,true': [0.2400000000000002, 0.24783666846944397], 'true,false': [8.881784197001253e-17, 1.9032394707859825e-16], 'false,false,false': [0.22601613282167818, 0.2498403471959809], 'false,false': [0.24693561030392105, 0.24913495569564448], 'true': [0.0, 7.401486830834377e-17]}, {'': [-3.416070845000482e-16, 0.24829641550673265], 'false': [0.24691358024691365, 0.24830125538627923], 'true,false,false': [-7.401486830834377e-17, -2.5376526277146434e-16], 'false,false,true': [0.2399999999999999, 0.2478366684694436], 'true,false': [0.0, -1.7763568394002506e-16], 'false,false,false': [0.2260161328216773, 0.24984034719597015], 'false,false': [0.24684141879858895, 0.24836401928314653], 'true': [0.0, -2.590520390792032e-16]}, {'': [-6.832141690000964e-17, 0.247718900150715], 'false': [0.2469135802469136, 0.24772210355630495], 'true,false,false': [7.401486830834377e-17, 1.2688263138573217e-16], 'false,false,true': [0.23999999999999988, 0.24783666846944252], 'true,false': [0.0, 1.1102230246251565e-16], 'false,false,false': [0.2260161328216772, 0.24984034719598452], 'false,false': [0.24676912396945397, 0.24777456880851043], 'true': [0.0, 1.4802973661668753e-16]}, {'': [1.708035422500241e-17, 0.24735131193734572], 'false': [0.2469135802469136, 0.24735331595587934], 'true,false,false': [-3.700743415417188e-17, -3.172065784643304e-17], 'false,false,true': [0.23999999999999988, 0.24783666846944286], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167848, 0.24984034719597975], 'false,false': [0.24672262599945718, 0.24739727027824354], 'true': [0.0, -3.700743415417188e-17]}, {'': [-8.540177112501205e-18, 0.24714701070999995], 'false': [0.2469135802469136, 0.24714824167944255], 'true,false,false': [9.25185853854297e-18, 3.172065784643304e-17], 'false,false,true': [0.24000000000000007, 0.2478366684694432], 'true,false': [0.0, 3.3306690738754695e-17], 'false,false,false': [0.22601613282167773, 0.24984034719597314], 'false,false': [0.24669658117682075, 0.24718613256012645], 'true': [0.0, 3.700743415417188e-17]}, {'': [1.708035422500241e-17, 0.24704385923665362], 'false': [0.2469135802469136, 0.24704464861561853], 'true,false,false': [-9.25185853854297e-18, -2.0816681711721685e-17], 'false,false,true': [0.23999999999999996, 0.24783666846944277], 'true,false': [-2.7755575615628914e-17, -3.172065784643304e-17], 'false,false,false': [0.22601613282167762, 0.24984034719597487], 'false,false': [0.24668343241823093, 0.24707882506405376], 'true': [0.0, -2.7755575615628914e-17]}, {'': [-3.416070845000482e-17, 0.2469951568299833], 'false': [0.2469135802469136, 0.24699571833332412], 'true,false,false': [4.625929269271485e-18, 0.0], 'false,false,true': [0.23999999999999988, 0.24783666846944313], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167726, 0.2498403471959789], 'false,false': [0.24667729069983724, 0.24702788723139185], 'true': [0.0, 9.25185853854297e-18]}, {'': [-4.270088556250602e-18, 0.24697327025620003], 'false': [0.2469135802469136, 0.2469737237545382], 'true,false,false': [-4.625929269271485e-18, -1.9825411154020653e-17], 'false,false,true': [0.23999999999999985, 0.24783666846944233], 'true,false': [0.0, -2.7755575615628915e-18], 'false,false,false': [0.22601613282167798, 0.24984034719597234], 'false,false': [0.24667459264007158, 0.24700491282771714], 'true': [0.0, -4.625929269271485e-18]}, {'': [0.0, 0.24696383480224765], 'false': [0.2469135802469136, 0.24696424096503186], 'true,false,false': [0.0, 0.0], 'false,false,true': [0.23999999999999996, 0.24783666846944266], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167723, 0.2498403471959765], 'false,false': [0.24667347076552734, 0.24699499373270095], 'true': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;workstartdate(A, E).;true;true', '0;true,false,false;workstartdate(B, F).;true;true', '0;true;workstartdate(A, D), workstartdate(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;workstartdate(A, E).;true;true', '1;true,false,false;workstartdate(B, F).;true;true', '1;true;workstartdate(B, D), workstartdate(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '2;true,false,false;workstartdate(B, G).;true;true', '2;true;workstartdate(B, D), workstartdate(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '3;true,false,false;workstartdate(B, G).;true;true', '3;true;workstartdate(B, D), workstartdate(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '4;true,false,false;workstartdate(B, G).;true;true', '4;true;workstartdate(B, D), workstartdate(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '5;true,false,false;workstartdate(B, G).;true;true', '5;true;workstartdate(A, D), workstartdate(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;workstartdate(A, E).;true;true', '6;true,false,false;workstartdate(B, F).;true;true', '6;true;workstartdate(A, D), workstartdate(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '7;true,false,false;workstartdate(B, G).;true;true', '7;true;workstartdate(A, D), workstartdate(B, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '8;true,false,false;workstartdate(B, G).;true;true', '8;true;workstartdate(A, D), workstartdate(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '9;true,false,false;workstartdate(B, G).;true;true', '9;true;workstartdate(A, D), workstartdate(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 2,11e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( worklocation(A, G), workstartdate(B, H) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( educationtype(A, I), educationtype(B, I) )
%   | | | then return -0.12669954974897252;  // std dev = 0,992, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.09102564742827948;  // std dev = 3,611, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( languages(B, K), location(B, L) )
%   | | | then return 0.058148935099512175;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.6898321034163445;  // std dev = 3,760, 101,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=84 */
%   | | else if ( educationtype(B, M), educationtype(A, N) )
%   | | | then return 0.16895974591032312;  // std dev = 5,631, 148,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.41029617436331206;  // std dev = 12,698, 652,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=360 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.7194734122109543;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationdegree(A, G) )
%   | | | then return 0.5308235083912951;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1284253629756025;  // std dev = 0,044, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( educationschool(B, H), location(A, I) )
%   | | | then return 0.45193929652500914;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06867871972434873;  // std dev = 3,515, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( hometown(B, J) )
%   | | then if ( educationconcentration(B, K) )
%   | | | then return 0.14596076373223785;  // std dev = 3,007, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.5728340174862003;  // std dev = 4,748, 138,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=108 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return -0.05188435842534811;  // std dev = 1,803, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.32439881519349484;  // std dev = 13,133, 702,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=366 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( worklocation(A, D) )
%   | | then if ( languages(A, F) )
%   | | | then return 0.7827498658862764;  // std dev = 0,099, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5102631875437844;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( locale(B, G), educationtype(A, H) )
%   | | | then return -0.10826631838269703;  // std dev = 1,460, 59,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return 0.015525528703663348;  // std dev = 3,252, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | else if ( workemployer(A, I), locale(B, J) )
%   | | then if ( educationtype(B, K), educationtype(A, K) )
%   | | | then return -0.18266134683359414;  // std dev = 0,998, 26,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.17272399208949107;  // std dev = 3,112, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( educationschool(B, L), birthday(B, M) )
%   | | | then return 0.4870143327050658;  // std dev = 3,867, 86,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=65 */
%   | | | else return 0.27384252832768874;  // std dev = 13,386, 772,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=406 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4175135841583098;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( educationclasses(B, E), hometown(B, F) )
%   | then if ( educationyear(A, G), educationyear(B, H) )
%   | | then return 0.30757294995357404;  // std dev = 1,006, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( educationyear(B, I), gender(A, J) )
%   | | | then return 0.5571630305591394;  // std dev = 0,964, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.6023564542007246;  // std dev = 0,149, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( workemployer(B, K), locale(A, L) )
%   | | then if ( educationschool(A, M) )
%   | | | then return -0.0963256518054982;  // std dev = 1,204, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | | else return 0.05581622040355712;  // std dev = 3,690, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( birthday(B, N), educationconcentration(B, P) )
%   | | | then return 0.512715097133898;  // std dev = 1,825, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.19871534219964082;  // std dev = 13,973, 835,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=423 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3207118471601497;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( educationdegree(A, G) )
%   | | then return 0.3445782556494031;  // std dev = 0,915, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( worklocation(A, H), workstartdate(B, I) )
%   | | | then return 0.5949934781705039;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03820673082045096;  // std dev = 3,607, 135,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | else if ( worklocation(B, J), locale(A, K) )
%   | | then if ( workemployer(A, L), workstartdate(A, M) )
%   | | | then return 0.45185719723947115;  // std dev = 1,104, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.1581625406765242;  // std dev = 1,925, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else if ( worklocation(A, N), locale(B, P) )
%   | | | then return -0.0060261050853842035;  // std dev = 3,396, 59,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.2055566706471555;  // std dev = 13,386, 797,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=462 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( hometown(B, D), hometown(A, D) )
%   | then if ( location(B, E), educationyear(B, F) )
%   | | then if ( location(A, G) )
%   | | | then return 0.02151273000716819;  // std dev = 0,901, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.37266912589338114;  // std dev = 0,838, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( educationconcentration(A, H) )
%   | | | then return 0.24961311165290448;  // std dev = 0,877, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44520328714131946;  // std dev = 0,993, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( languages(B, I), educationconcentration(B, J) )
%   | | then if ( educationschool(A, K), educationschool(B, L) )
%   | | | then return -0.34867866006151177;  // std dev = 0,139, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12604427652667077;  // std dev = 1,464, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( workemployer(B, M), educationschool(A, N) )
%   | | | then return -0.08553387241011223;  // std dev = 1,118, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | | else return 0.12584637441264276;  // std dev = 14,236, 923,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=475 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.2097577156325355;  // std dev = 4,56e-09, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( hometown(B, D), educationwith(B, E) )
%   | then if ( educationyear(A, F) )
%   | | then if ( educationconcentration(A, G) )
%   | | | then return 0.417019413281714;  // std dev = 0,119, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12138783086672793;  // std dev = 0,863, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( educationyear(B, H), gender(A, I) )
%   | | | then return 0.32290194019194857;  // std dev = 0,960, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.369735065644056;  // std dev = 0,165, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( languages(B, J), locale(A, K) )
%   | | then if ( gender(A, L), gender(B, L) )
%   | | | then return -0.11055043346295684;  // std dev = 2,201, 59,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | | else return 0.021418622220036994;  // std dev = 3,503, 69,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.2892162103154733;  // std dev = 3,161, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | | | else return 0.0752096945381547;  // std dev = 13,303, 805,000 (wgt'ed) examples reached here.  /* #neg=423 #pos=382 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( hometown(B, D) )
%   | then if ( educationyear(B, E), languages(A, F) )
%   | | then if ( hometown(A, D) )
%   | | | then return 0.4716077302350376;  // std dev = 0,205, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.35576600761911464;  // std dev = 0,950, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( educationyear(B, G) )
%   | | | then return 0.1295669169636954;  // std dev = 3,787, 91,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=57 */
%   | | | else return 0.2722974737386871;  // std dev = 2,643, 70,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=61 */
%   | else if ( gender(B, H), locale(A, I) )
%   | | then if ( birthday(B, J), educationconcentration(B, K) )
%   | | | then return 0.277330660647236;  // std dev = 1,826, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.03094880795003694;  // std dev = 12,922, 805,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=338 */
%   | | else if ( locale(A, L), gender(A, M) )
%   | | | then return 0.5463997136065021;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.06552931980088761;  // std dev = 2,404, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.15274385809367075;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(A, E), educationschool(B, F) )
%   | then if ( educationdegree(B, G) )
%   | | then return 0.2041145601087455;  // std dev = 0,759, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( languages(B, H) )
%   | | | then return -0.19889658337219673;  // std dev = 0,183, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3193791724506854;  // std dev = 0,272, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( workemployer(B, I), educationschool(A, J) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.010851712710059587;  // std dev = 0,973, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.10877119757633276;  // std dev = 0,196, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( hometown(B, K) )
%   | | | then return 0.13797330905556765;  // std dev = 4,869, 170,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=122 */
%   | | | else return 0.05219429379448376;  // std dev = 13,217, 797,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=388 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( educationdegree(B, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then return 0.14793139495358437;  // std dev = 1,077, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, G), educationschool(B, H) )
%   | | | then return 0.013806057030626739;  // std dev = 1,072, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.20918078425480072;  // std dev = 0,982, 40,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
%   | else if ( educationyear(B, I), educationschool(A, J) )
%   | | then if ( educationschool(B, J) )
%   | | | then return 0.07082944127761466;  // std dev = 3,109, 63,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | | | else return -0.09877614770567911;  // std dev = 2,772, 89,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | | else if ( locale(B, K), workemployer(A, L) )
%   | | | then return -0.06096642459708987;  // std dev = 3,184, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.07083979917591211;  // std dev = 12,924, 791,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=434 */


Results
   AUC ROC   = 0.563651
   AUC PR    = 0.583926
   CLL	      = -0.729797
   Precision = 0.579932 at threshold = 0.5
   Recall    = 0.368557
   F1        = 0.450691


Total learning time: 23.823 seconds
Total inference time: 5.358 seconds
AUC ROC: 0.563651


Refined model AUC ROC: 0.563651


Dataset: 48_twitter_facebook, Fold: 4, Type: transfer, Time: 00:29:50
{'Learning time': 37.945, 'AUC PR': 0.583926, 'F1': 0.450691, 'AUC ROC': 0.563651, 'CLL': -0.729797, 'Inference time': 5.358, 'Mapping results': {'Generating mappings time': 0.31604576110839844, 'Generating paths time': 2.4757721424102783, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.03494524955749512, 'Max mapping': 24389, 'Total time': 2.826772689819336}, 'Parameter Learning results': {'Learning time': 14.122, 'AUC PR': 0.533901, 'F1': 0.077282, 'AUC ROC': 0.514203, 'CLL': -0.703391, 'Inference time': 5.186, 'Precision': [0.81198, 0.5], 'Recall': 0.040572}, 'Precision': [0.579932, 0.5], 'Recall': 0.368557}


Start learning from scratch in target domain

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, E) )
%   | then return 0.6968586125188665;  // std dev = 0,368, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else return 0.017569224954584555;  // std dev = 0,366, 138,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=22 */
%   else if ( educationschool(B, F), educationschool(A, F) )
%   | then if ( languages(B, G), location(B, H) )
%   | | then if ( location(A, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6898321034163445;  // std dev = 0,374, 101,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=84 */
%   | else if ( educationtype(B, I), educationtype(A, J) )
%   | | then if ( educationtype(A, I), birthday(A, K) )
%   | | | then return 0.3716624486130258;  // std dev = 3,040, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.10139217834275469;  // std dev = 4,520, 111,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | else if ( hometown(B, L) )
%   | | | then return 0.6157246926752705;  // std dev = 4,264, 99,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=75 */
%   | | | else return 0.37351964034363083;  // std dev = 11,752, 553,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=285 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.7508482441320854;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.006166390323414487;  // std dev = 0,363, 143,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   else if ( worklocation(B, E), locale(A, F) )
%   | then if ( workemployer(A, G), educationyear(A, H) )
%   | | then if ( worklocation(A, E) )
%   | | | then return 0.8453528209444972;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2453528209444972;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.07202180464120159;  // std dev = 0,304, 45,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | else if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( languages(B, J), location(B, K) )
%   | | | then return 0.04822967119721917;  // std dev = 1,205, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.5804432395104272;  // std dev = 3,752, 99,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else if ( workemployer(A, L), locale(B, M) )
%   | | | then return 0.09633526164905677;  // std dev = 3,340, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.35573720565326816;  // std dev = 12,953, 689,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=380 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workenddate(A, E), educationyear(A, F) )
%   | then if ( workemployer(A, C) )
%   | | then return 0.5871735495317449;  // std dev = 6,66e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1975360689422474;  // std dev = 0,129, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( workemployer(A, G) )
%   | | then return 0.41967741606540965;  // std dev = 0,335, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( educationschool(A, H) )
%   | | | then return -0.10967730078631735;  // std dev = 1,389, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | | else return 0.11164523632569343;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   else if ( educationwith(B, I), hometown(B, J) )
%   | then return 0.6098685539984063;  // std dev = 0,233, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else if ( languages(B, K), educationconcentration(B, L) )
%   | | then return -0.10209408901208765;  // std dev = 0,324, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( educationdegree(B, M) )
%   | | | then return -0.08825324960049162;  // std dev = 1,455, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.28386433411767403;  // std dev = 13,877, 821,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=445 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationwith(B, C), hometown(B, D) )
%   then return 0.4677543545978829;  // std dev = 0,229, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   else if ( birthday(B, E), educationschool(B, F) )
%   | then if ( educationconcentration(B, G) )
%   | | then if ( educationyear(A, H), educationschool(A, I) )
%   | | | then return 0.3554275705817648;  // std dev = 1,129, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.593656955154011;  // std dev = 1,362, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( languages(A, J), workenddate(B, K) )
%   | | | then return -0.17376834575523192;  // std dev = 0,834, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3377698631766487;  // std dev = 3,105, 52,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | else if ( educationyear(B, L), locale(A, M) )
%   | | then if ( worklocation(A, N), workenddate(B, P) )
%   | | | then return 0.5402450198472292;  // std dev = 1,053, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.03821990880259606;  // std dev = 6,781, 277,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=81 */
%   | | else if ( hometown(B, Q) )
%   | | | then return 0.4482339739312806;  // std dev = 2,675, 51,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   | | | else return 0.1947250432596363;  // std dev = 11,851, 599,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=294 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(B, C), locale(A, D) )
%   then if ( worklocation(A, C) )
%   | then return 0.49480162134384265;  // std dev = 0,219, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( workemployer(A, E), workenddate(B, F) )
%   | | then return 0.48613092486509907;  // std dev = 0,296, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.04920807552447667;  // std dev = 0,330, 121,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=17 */
%   else if ( workemployer(B, G), locale(A, H) )
%   | then if ( educationschool(B, I), educationdegree(A, J) )
%   | | then return 0.6389398949858739;  // std dev = 0,411, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.01136319863448905;  // std dev = 0,315, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | else if ( workemployer(A, K), locale(B, L) )
%   | | then if ( educationtype(B, M), educationtype(A, M) )
%   | | | then return -0.23469492611185533;  // std dev = 0,935, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.12926672058340613;  // std dev = 3,083, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( hometown(B, N), location(B, P) )
%   | | | then return 0.32553908588820657;  // std dev = 3,487, 88,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=69 */
%   | | | else return 0.18636872264320453;  // std dev = 12,660, 705,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=393 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( hometown(B, C), hometown(A, C) )
%   then if ( languages(A, D) )
%   | then return 0.49588021597577386;  // std dev = 0,138, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( educationconcentration(B, E) )
%   | | then return -0.06244584864205995;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3273355841897902;  // std dev = 0,298, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   else if ( educationdegree(B, F) )
%   | then if ( workemployer(A, G) )
%   | | then if ( location(A, H) )
%   | | | then return -0.2311149727974453;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3248501972900213;  // std dev = 0,923, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.14464439295885803;  // std dev = 0,250, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   | else if ( workemployer(B, I), hometown(A, J) )
%   | | then return -0.1452567390343089;  // std dev = 0,089, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( worklocation(B, K), worklocation(A, K) )
%   | | | then return 0.44057557441769335;  // std dev = 0,699, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.12203343552112553;  // std dev = 14,047, 939,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=477 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( birthday(B, C), educationschool(B, D) )
%   then if ( workemployer(A, E) )
%   | then return -0.2701185533142002;  // std dev = 0,114, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( lastname(A, F), location(B, G) )
%   | | then return -0.3921045779438907;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( educationyear(B, H) )
%   | | | then return 0.3244131228655697;  // std dev = 2,443, 54,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=46 */
%   | | | else return 0.15742845175074532;  // std dev = 2,350, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   else if ( educationclasses(B, I), locale(A, J) )
%   | then return 0.24191969698519522;  // std dev = 0,313, 69,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   | else if ( educationyear(B, K), educationschool(A, L) )
%   | | then if ( workemployer(A, M), workenddate(B, N) )
%   | | | then return 0.30596945096295947;  // std dev = 0,388, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06509467628372391;  // std dev = 3,656, 119,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=27 */
%   | | else if ( gender(B, P), locale(A, Q) )
%   | | | then return 0.07611328773701954;  // std dev = 12,676, 754,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=356 */
%   | | | else return 0.24547440996564154;  // std dev = 2,777, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then return -0.06810345890193284;  // std dev = 0,198, 74,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( languages(A, F), location(B, G) )
%   | | then if ( hometown(B, H), educationyear(B, I) )
%   | | | then return -0.3298269673907175;  // std dev = 0,792, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12691677497935655;  // std dev = 1,213, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.06966423990921497;  // std dev = 2,081, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.2964116834713561;  // std dev = 2,087, 67,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=62 */
%   | else if ( firstname(B, K), location(A, L) )
%   | | then if ( location(B, M) )
%   | | | then return -0.4216680325665343;  // std dev = 0,183, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.039722534133915244;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( educationtype(B, N), educationclasses(A, P) )
%   | | | then return -0.19561166354772078;  // std dev = 1,556, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.07984181090999014;  // std dev = 13,395, 856,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=436 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( hometown(B, C), workemployer(A, D) )
%   then return -0.26649546040781974;  // std dev = 0,071, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( educationdegree(B, E) )
%   | then if ( workemployer(A, F) )
%   | | then if ( location(A, G) )
%   | | | then return -0.21830441185040184;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21454367828243537;  // std dev = 0,829, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( educationconcentration(B, H), workenddate(B, I) )
%   | | | then return -0.021792739903427616;  // std dev = 1,243, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.19204077985589565;  // std dev = 1,044, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | else if ( hometown(B, J), location(B, K) )
%   | | then if ( languages(A, L) )
%   | | | then return -0.11687382602944307;  // std dev = 1,403, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.2073913710927771;  // std dev = 2,773, 76,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=64 */
%   | | else if ( locale(B, M), locale(A, N) )
%   | | | then return 0.060986328870107506;  // std dev = 13,174, 876,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=441 */
%   | | | else return -0.0549019702616026;  // std dev = 3,088, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( birthday(B, C), educationconcentration(B, D) )
%   then if ( educationyear(A, E), educationyear(B, E) )
%   | then return -2.189833299222066E-4;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.24986562238533902;  // std dev = 0,271, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   else if ( educationyear(B, F), location(A, G) )
%   | then if ( educationwith(B, H), educationschool(A, I) )
%   | | then return 0.2310820374145545;  // std dev = 0,142, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( workemployer(A, J), workemployer(B, J) )
%   | | | then return 0.24764876329430344;  // std dev = 0,172, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11393220482466197;  // std dev = 2,450, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( educationyear(A, L), location(B, M) )
%   | | | then return 0.069011474630102;  // std dev = 1,635, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return 0.1973309520986626;  // std dev = 2,463, 63,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=51 */
%   | | else if ( educationschool(B, N), educationschool(A, P) )
%   | | | then return -0.16658277340463126;  // std dev = 2,114, 63,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | | else return 0.04754295597678618;  // std dev = 13,035, 811,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=409 */


Results
   AUC ROC   = 0.566464
   AUC PR    = 0.58265
   CLL	      = -0.722547
   Precision = 0.580454 at threshold = 0.5
   Recall    = 0.357499
   F1        = 0.442478


Total learning time: 25.856 seconds
Total inference time: 5.432 seconds
AUC ROC: 0.566464


Dataset: 48_twitter_facebook, Fold: 4, Type: scratch, Time: 00:30:22
{'Learning time': 25.856, 'AUC PR': 0.58265, 'F1': 0.442478, 'AUC ROC': 0.566464, 'CLL': -0.722547, 'Inference time': 5.432, 'Precision': [0.580454, 0.5], 'Recall': 0.357499}


Starting fold 5

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.03332972526550293
   Generating paths time   = 2.502267360687256
   Generating mappings time   = 0.3216993808746338
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.8573062419891357


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;languages(A, E).;false;true
6;true,false,false;languages(B, F).;false;false
6;false,false,true;languages(B, I).;false;false
6;false;languages(B, G), languages(A, G).;false;true
6;false,false,false;languages(B, J).;false;false
6;false,false;languages(A, H).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;languages(A, E), languages(B, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(A, D), languages(B, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35212483871396993;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3906164675670447;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.3362980353565776;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3036471074356998;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.33613622477485544;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.29024732799427866;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.252430972421101;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2776815057599904;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.24191799003155462;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2032367914389215;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.22149269749116546;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.19553603401769268;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1596224832162085;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1721700230048887;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.15426978223939478;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12321124182105614;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13161234234128258;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.11961467331782805;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09403865161628217;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.09963181205576573;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.09166516745018691;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07127311168687667;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07502901594074947;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.06971704917859212;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05379177169426425;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05635680723069602;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.052771025092935735;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0404967198952263;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04228454666387357;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.03982414183310802;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */


Results
   AUC ROC   = 0.497403
   AUC PR    = 0.521819
   CLL	      = -0.707217
   Precision = 0.54071 at threshold = 0.5
   Recall    = 0.168785
   F1        = 0.257263


Total learning time: 11.654 seconds
Total inference time: 6.736 seconds
AUC ROC: 0.497403


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [2.11e-08, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [2.11e-08, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [4.21e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [2.11e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [1.05e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [1.05e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}]]
[{'': [0.08999999999999968, 0.24979880287712244], 'false': [0.24000000000000007, 0.24985982130119305], 'true,false,false': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'false,false,true': [nan, 0.2499637102627387], 'true,false': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'false,false,false': [0.2489458593354706, 0.2495225381804284], 'false,false': [0.2499637102627387, 0.2498342205603378], 'true': [0.0, 0.0]}, {'': [0.06424978612186587, 0.24964521600728384], 'false': [0.2400000000000002, 0.24975924254864396], 'true,false,false': [7.401486830834377e-17, 7.401486830834377e-17], 'false,false,true': [nan, 0.24996371026273861], 'true,false': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,false,false': [0.24894585933546987, 0.24952253818042153], 'false,false': [0.24996371026273861, 0.24971770830212706], 'true': [0.0, 9.868649107779169e-17]}, {'': [0.040122030722944804, 0.24949601538837465], 'false': [0.2399999999999999, 0.2496608223416793], 'true,false,false': [-7.401486830834377e-17, -2.590520390792032e-16], 'false,false,true': [nan, 0.2499637102627374], 'true,false': [nan, -1.4802973661668753e-16], 'false,false,false': [0.24894585933546895, 0.24952253818042583], 'false,false': [0.2499637102627374, 0.2496036704863974], 'true': [0.0, -1.4802973661668753e-16]}, {'': [0.02425275922011396, 0.24938530072350942], 'false': [0.23999999999999988, 0.24958873033597875], 'true,false,false': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,false,true': [nan, 0.24996371026273814], 'true,false': [nan, 9.868649107779169e-17], 'false,false,false': [0.24894585933546948, 0.24952253818042844], 'false,false': [0.24996371026273814, 0.2495201822467733], 'true': [0.0, 9.868649107779169e-17]}, {'': [0.015381192815554334, 0.2493188248441593], 'false': [0.23999999999999988, 0.24954660483659358], 'true,false,false': [-3.700743415417188e-17, -5.551115123125783e-17], 'false,false,true': [nan, 0.24996371026273786], 'true,false': [nan, -4.9343245538895844e-17], 'false,false,false': [0.24894585933546953, 0.24952253818042255], 'false,false': [0.24996371026273786, 0.24947144637818947], 'true': [0.0, -4.9343245538895844e-17]}, {'': [0.010425859500244394, 0.2492844517161369], 'false': [0.24000000000000007, 0.24952554151907533], 'true,false,false': [9.25185853854297e-18, 3.700743415417188e-17], 'false,false,true': [nan, 0.24996371026273725], 'true,false': [nan, 3.700743415417188e-17], 'false,false,false': [0.24894585933546926, 0.24952253818042416], 'false,false': [0.24996371026273725, 0.24944710469562237], 'true': [0.0, 3.700743415417188e-17]}, {'': [0.007492692652921679, 0.24926827214419164], 'false': [0.23999999999999996, 0.24951592838892056], 'true,false,false': [-9.25185853854297e-18, -9.25185853854297e-18], 'false,false,true': [nan, 0.24996371026273764], 'true,false': [-9.25185853854297e-18, -2.7755575615628914e-17], 'false,false,false': [0.2489458593354694, 0.24952253818042733], 'false,false': [0.24996371026273764, 0.24943600430387952], 'true': [0.0, -1.850371707708594e-17]}, {'': [0.005640433129233938, 0.24926104527307402], 'false': [0.23999999999999988, 0.2495117169195606], 'true,false,false': [4.625929269271485e-18, 9.25185853854297e-18], 'false,false,true': [nan, 0.24996371026273725], 'true,false': [nan, 6.1679056923619804e-18], 'false,false,false': [0.24894585933546975, 0.24952253818042303], 'false,false': [0.24996371026273725, 0.2494311421020891], 'true': [0.0, 6.1679056923619804e-18]}, {'': [0.004402488480251224, 0.24925789669070889], 'false': [0.23999999999999985, 0.24950988315847408], 'true,false,false': [-4.625929269271485e-18, 9.25185853854297e-18], 'false,false,true': [nan, 0.2499637102627378], 'true,false': [nan, 0.0], 'false,false,false': [0.24894585933546962, 0.2495225381804204], 'false,false': [0.2499637102627378, 0.24942902356591917], 'true': [0.0, 0.0]}, {'': [0.003535451289447075, 0.24925653585586674], 'false': [0.23999999999999996, 0.24950907206650982], 'true,false,false': [0.0, 0.0], 'false,false,true': [nan, 0.24996371026273756], 'true,false': [nan, 0.0], 'false,false,false': [0.24894585933546975, 0.24952253818042774], 'false,false': [0.24996371026273756, 0.24942808503579625], 'true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;languages(B, G).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;languages(B, G).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;languages(B, G).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;languages(B, G).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;languages(A, E).;true;true', '6;true,false,false;languages(B, F).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;languages(B, G).;true;true', '7;true;languages(A, D), languages(B, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;languages(B, G).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;languages(B, G).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( workemployer(B, F), workstartdate(B, G) )
%   | | then if ( educationtype(A, H) )
%   | | | then return 0.8181489350995119;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.597279369882121;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else if ( workenddate(B, I), educationtype(A, J) )
%   | | | then return 0.15125238337537444;  // std dev = 3,467, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.391482268432842;  // std dev = 9,466, 360,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=192 */
%   | else if ( locale(A, K), locale(B, L) )
%   | | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( workemployer(B, M), educationyear(A, N) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2137044906550679;  // std dev = 3,211, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.7194734122109545;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( workstartdate(B, F), educationtype(B, G) )
%   | | then if ( educationschool(B, H), educationschool(A, H) )
%   | | | then return 0.15578437856144203;  // std dev = 1,924, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.5701898881333382;  // std dev = 3,606, 83,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | | else if ( lastname(A, I) )
%   | | | then return 0.8035320457179348;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.277674813754935;  // std dev = 9,356, 353,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=166 */
%   | else if ( locale(A, J), locale(B, K) )
%   | | then return -0.08763477038348894;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( workemployer(B, L), educationyear(A, M) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18564982421862505;  // std dev = 3,211, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.48859815525229555;  // std dev = 0,200, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( locale(B, D), locale(A, D) )
%   | then if ( workstartdate(B, E), workemployer(B, F) )
%   | | then if ( languages(B, G) )
%   | | | then return 0.6208274862852808;  // std dev = 0,100, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.41601366427703673;  // std dev = 2,312, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else if ( workenddate(B, H), educationtype(A, I) )
%   | | | then return 0.09081043204165927;  // std dev = 3,455, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.2806637810578733;  // std dev = 9,364, 360,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=192 */
%   | else if ( locale(A, J), locale(B, K) )
%   | | then if ( workenddate(A, L), hometown(B, M) )
%   | | | then return 0.21275158127818636;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09785447932787433;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else if ( workstartdate(B, N), languages(A, P) )
%   | | | then return 0.6541343936659164;  // std dev = 0,270, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15574807519977177;  // std dev = 3,155, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.3733536693400759;  // std dev = 0,181, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( locale(B, D), locale(A, D) )
%   | then if ( workstartdate(B, E), educationtype(B, F) )
%   | | then if ( workstartdate(A, G), educationconcentration(B, H) )
%   | | | then return 0.08471524292039573;  // std dev = 1,736, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.3705439663674072;  // std dev = 3,578, 83,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=64 */
%   | | else if ( educationtype(B, I) )
%   | | | then return 0.14354328570532257;  // std dev = 6,914, 199,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=86 */
%   | | | else return 0.25244925873279894;  // std dev = 6,334, 166,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | else if ( locale(A, J), locale(B, K) )
%   | | then if ( workstartdate(B, L), educationtype(A, M) )
%   | | | then return 0.2227490843679821;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09020508266336617;  // std dev = 0,957, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else if ( educationdegree(B, N), locale(B, P) )
%   | | | then return 0.585061139819161;  // std dev = 0,383, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.130500566534727;  // std dev = 3,124, 47,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.2877559308223874;  // std dev = 0,173, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( workstartdate(B, D), educationyear(B, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then if ( educationyear(A, E), gender(A, G) )
%   | | | then return 0.4210701453290615;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10710580106485194;  // std dev = 1,237, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( educationschool(B, H) )
%   | | | then return 0.4004992664105334;  // std dev = 1,689, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.2538883858965062;  // std dev = 2,844, 60,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=47 */
%   | else if ( location(B, I), location(A, I) )
%   | | then if ( educationdegree(A, J) )
%   | | | then return 0.6906236322157832;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4135272267773262;  // std dev = 1,215, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workstartdate(A, K), educationyear(B, L) )
%   | | | then return 0.2807383837518475;  // std dev = 2,917, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return 0.10532089596591117;  // std dev = 9,536, 418,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=174 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.2265750611827157;  // std dev = 0,171, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( educationyear(B, D), educationyear(A, D) )
%   | then if ( workemployer(B, E), locale(A, F) )
%   | | then if ( languages(B, G), gender(A, H) )
%   | | | then return 0.26773910608033913;  // std dev = 1,015, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.5366510397464431;  // std dev = 0,463, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( workemployer(A, I), educationschool(B, J) )
%   | | | then return 0.4968560100981086;  // std dev = 0,914, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.16145829363747374;  // std dev = 0,876, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( educationtype(B, K), workemployer(A, L) )
%   | | then if ( workemployer(B, M), educationyear(B, N) )
%   | | | then return 0.2658085425455192;  // std dev = 2,191, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return -0.04092698386904721;  // std dev = 3,796, 87,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | else if ( location(B, P), location(A, P) )
%   | | | then return 0.46143238145243615;  // std dev = 0,954, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.11620983053572669;  // std dev = 9,309, 407,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=198 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.33380778941990236;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.23977651196287036;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( languages(B, E), educationschool(B, F) )
%   | then if ( workstartdate(A, G) )
%   | | then return -0.3633067475184843;  // std dev = 0,162, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( workenddate(B, H) )
%   | | | then return -0.24448778275968433;  // std dev = 0,948, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.12224172067693803;  // std dev = 1,804, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( educationyear(B, I), workemployer(B, J) )
%   | | then if ( educationschool(B, K), gender(A, L) )
%   | | | then return 0.38726280149850106;  // std dev = 2,170, 27,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.12288482273650951;  // std dev = 3,483, 81,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=54 */
%   | | else if ( lastname(A, M), lastname(B, N) )
%   | | | then return 0.47623426974228505;  // std dev = 0,047, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.06446685045839179;  // std dev = 9,280, 416,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=179 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.1525296382584867;  // std dev = 0,139, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( workstartdate(B, D), educationtype(B, E) )
%   | then if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( educationconcentration(A, H), workemployer(A, I) )
%   | | | then return 0.276727545704256;  // std dev = 0,945, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.07856028493733933;  // std dev = 1,296, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( educationschool(B, J), educationyear(B, K) )
%   | | | then return 0.3207764389928096;  // std dev = 1,203, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.12350537225806896;  // std dev = 3,467, 74,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=51 */
%   | else if ( location(A, L), educationconcentration(B, M) )
%   | | then if ( location(B, L) )
%   | | | then return 0.264024362896805;  // std dev = 0,810, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2507828709030404;  // std dev = 1,527, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( educationyear(B, N), educationschool(B, P) )
%   | | | then return 0.17364337213087003;  // std dev = 3,913, 75,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | | | else return 0.03998418465509899;  // std dev = 8,431, 345,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=143 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.12859295046036112;  // std dev = 0,141, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( educationtype(B, D), locale(A, E) )
%   | then if ( locale(B, E), educationyear(B, F) )
%   | | then if ( workemployer(B, G), educationyear(A, H) )
%   | | | then return 0.1585369501578602;  // std dev = 2,749, 53,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=38 */
%   | | | else return 0.04567011862429003;  // std dev = 5,386, 154,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=84 */
%   | | else if ( locale(B, I), educationyear(A, J) )
%   | | | then return -0.1151584068859533;  // std dev = 2,739, 58,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return 0.023131121138862235;  // std dev = 4,124, 95,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | else if ( workenddate(B, K), educationyear(A, L) )
%   | | then if ( educationtype(B, M) )
%   | | | then return 0.05004780178443239;  // std dev = 0,447, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.33140631899261863;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( gender(A, N), gender(B, N) )
%   | | | then return 0.16264316499112905;  // std dev = 5,335, 129,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=75 */
%   | | | else return -0.008089118476347482;  // std dev = 3,744, 68,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.3221960037240025;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.15778469629815695;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( educationtype(A, F) )
%   | | then if ( educationdegree(B, G), educationschool(A, H) )
%   | | | then return 0.09728819041579932;  // std dev = 0,695, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.39650570885500797;  // std dev = 0,185, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.08761793231175885;  // std dev = 0,729, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( political(B, I) )
%   | | then if ( educationtype(A, J) )
%   | | | then return 0.034372906451919816;  // std dev = 1,278, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.4312958675533852;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( workemployer(B, K), educationyear(B, L) )
%   | | | then return 0.09757667999718884;  // std dev = 4,361, 118,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=78 */
%   | | | else return 0.02387493300454879;  // std dev = 9,073, 419,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=180 */


Results
   AUC ROC   = 0.558524
   AUC PR    = 0.555111
   CLL	      = -0.773134
   Precision = 0.565043 at threshold = 0.5
   Recall    = 0.321277
   F1        = 0.409639


Total learning time: 29.431 seconds
Total inference time: 6.435 seconds
AUC ROC: 0.558524


Refined model AUC ROC: 0.558524


Dataset: 48_twitter_facebook, Fold: 5, Type: transfer, Time: 00:31:20
{'Learning time': 41.085, 'AUC PR': 0.555111, 'F1': 0.409639, 'AUC ROC': 0.558524, 'CLL': -0.773134, 'Inference time': 6.435, 'Mapping results': {'Generating mappings time': 0.3216993808746338, 'Generating paths time': 2.502267360687256, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.03332972526550293, 'Max mapping': 24389, 'Total time': 2.8573062419891357}, 'Parameter Learning results': {'Learning time': 11.654, 'AUC PR': 0.521819, 'F1': 0.257263, 'AUC ROC': 0.497403, 'CLL': -0.707217, 'Inference time': 6.736, 'Precision': [0.54071, 0.5], 'Recall': 0.168785}, 'Precision': [0.565043, 0.5], 'Recall': 0.321277}


Start learning from scratch in target domain

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workemployer(B, D), workstartdate(B, E) )
%   | then return 0.6974346493852267;  // std dev = 0,367, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( educationtype(B, F), educationyear(A, G) )
%   | | then if ( educationyear(B, H) )
%   | | | then return 0.3819584589090368;  // std dev = 4,577, 84,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=44 */
%   | | | else return 0.08037115732173458;  // std dev = 2,789, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( languages(B, I), workenddate(B, J) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4178758975568469;  // std dev = 8,497, 293,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=164 */
%   else if ( workemployer(B, K), educationyear(A, L) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( locale(B, M), locale(A, N) )
%   | | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( educationschool(A, P), gender(A, Q) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2905813675319448;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), workemployer(B, E) )
%   | then return 0.5900261806591002;  // std dev = 0,367, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( workemployer(B, H), gender(A, I) )
%   | | | then return 0.4786296009743002;  // std dev = 1,975, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.02282791479337651;  // std dev = 2,663, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( educationyear(B, J), educationschool(B, K) )
%   | | | then return 0.45422946518087665;  // std dev = 4,408, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   | | | else return 0.3122772621769436;  // std dev = 8,321, 280,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=142 */
%   else if ( locale(A, L), locale(B, M) )
%   | then return -0.08763477038348894;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( educationyear(A, N), workemployer(B, P) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationschool(A, Q), gender(A, R) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2514074646610238;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), workemployer(B, E) )
%   | then return 0.4646872405714429;  // std dev = 0,367, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( workemployer(A, H), educationschool(B, I) )
%   | | | then return 0.334543225799511;  // std dev = 2,560, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.04135090775903227;  // std dev = 2,011, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( workstartdate(B, J), educationschool(B, K) )
%   | | | then return 0.618095245653152;  // std dev = 1,344, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.2662397793817388;  // std dev = 9,231, 346,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=180 */
%   else if ( locale(A, L), locale(B, M) )
%   | then return -0.07802856056578536;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workstartdate(B, N), languages(A, P) )
%   | | then return 0.6298054749672771;  // std dev = 0,258, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(A, Q), gender(B, R) )
%   | | | then return -0.036558721159517374;  // std dev = 1,311, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.2539137449422883;  // std dev = 2,655, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(B, C), educationyear(A, D) )
%   then if ( languages(B, E), educationschool(B, F) )
%   | then if ( educationschool(A, F), educationconcentration(B, G) )
%   | | then return 0.4288055763168177;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.31488524411957497;  // std dev = 0,055, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( educationdegree(A, H), locale(A, I) )
%   | | then if ( workenddate(B, J) )
%   | | | then return 0.6004928365005873;  // std dev = 0,214, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18367507392001897;  // std dev = 2,415, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | else return 0.48715243956755633;  // std dev = 0,240, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( lastname(A, K), lastname(B, L) )
%   | then return 0.6907455372249088;  // std dev = 5,96e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( lastname(B, M) )
%   | | then return -0.11254934177814095;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( location(B, N), workstartdate(A, P) )
%   | | | then return 0.46498757656667494;  // std dev = 1,917, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return 0.16289563244043959;  // std dev = 9,978, 446,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=204 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( gender(B, C), gender(A, C) )
%   then if ( educationconcentration(B, D), educationyear(A, E) )
%   | then if ( languages(B, F), workenddate(A, G) )
%   | | then return 0.5526559690979733;  // std dev = 0,094, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06646605935689644;  // std dev = 0,404, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( locale(B, H), workstartdate(B, I) )
%   | | then return 0.32458346950229094;  // std dev = 0,355, 71,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else if ( workemployer(A, J), workemployer(B, J) )
%   | | | then return 0.5870682827927223;  // std dev = 0,264, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1619251403122731;  // std dev = 7,613, 264,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=127 */
%   else if ( educationconcentration(B, K), educationyear(A, L) )
%   | then return 0.34966383647080795;  // std dev = 0,426, 22,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | else if ( locale(A, M), locale(B, M) )
%   | | then if ( gender(B, N), gender(A, P) )
%   | | | then return 0.12642611097351694;  // std dev = 5,058, 112,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=55 */
%   | | | else return -0.04400027734416859;  // std dev = 1,888, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.11700478302939443;  // std dev = 0,154, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationconcentration(A, D), educationyear(B, E) )
%   | then return -0.055370335535930876;  // std dev = 0,926, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4045715852613915;  // std dev = 0,092, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( educationyear(B, F), workstartdate(B, G) )
%   | then if ( educationyear(A, F), workemployer(A, H) )
%   | | then return 0.543730275040525;  // std dev = 0,144, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( educationschool(B, I), workenddate(B, J) )
%   | | | then return 0.030907170350094628;  // std dev = 1,790, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.22091998178437952;  // std dev = 3,009, 67,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=52 */
%   | else if ( location(B, K), location(A, K) )
%   | | then if ( educationdegree(A, L) )
%   | | | then return 0.662991696412515;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34822030736890164;  // std dev = 1,124, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( educationtype(B, M), location(A, N) )
%   | | | then return -0.0721263447216299;  // std dev = 2,627, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.09885538706514592;  // std dev = 9,256, 411,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=183 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(B, C), workstartdate(A, D) )
%   then if ( workemployer(B, E), workemployer(A, F) )
%   | then return -0.206257669238876;  // std dev = 0,830, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( educationconcentration(B, G), workemployer(A, H) )
%   | | then return -0.03820372030801885;  // std dev = 0,750, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( educationdegree(A, I) )
%   | | | then return 0.5019076235224567;  // std dev = 0,298, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.20927217539626009;  // std dev = 1,430, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( lastname(A, J), lastname(B, K) )
%   | then return 0.4689788887080015;  // std dev = 0,014, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( workemployer(B, L), educationyear(A, M) )
%   | | then if ( educationyear(B, N), workemployer(A, P) )
%   | | | then return 0.26444892686227167;  // std dev = 1,718, 35,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return 0.09237255566663191;  // std dev = 2,224, 39,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | else if ( lastname(B, Q) )
%   | | | then return -0.11464541767682236;  // std dev = 0,064, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.06950667821366092;  // std dev = 9,659, 446,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=204 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(B, C), location(A, D) )
%   then if ( workstartdate(B, E), workemployer(B, F) )
%   | then return 0.34768725633996234;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationconcentration(A, C), gender(B, G) )
%   | | then if ( workemployer(B, H) )
%   | | | then return -0.07126817712257849;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35385745693644;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( political(A, I) )
%   | | | then return 0.26241549322966096;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.273489455336445;  // std dev = 1,222, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   else if ( location(A, J), educationdegree(B, K) )
%   | then return 0.37559990625679607;  // std dev = 0,291, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( workemployer(B, L), educationschool(A, M) )
%   | | then return 0.18609793986900966;  // std dev = 0,336, 47,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | else if ( workenddate(A, N), educationschool(B, P) )
%   | | | then return -0.17875114123570887;  // std dev = 1,336, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.07141906473069186;  // std dev = 9,537, 474,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=230 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( languages(B, C), workenddate(B, D) )
%   then return -0.18897081381689415;  // std dev = 0,308, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( educationyear(B, E), educationschool(B, F) )
%   | then if ( educationconcentration(B, G), location(A, H) )
%   | | then if ( gender(B, I), educationconcentration(A, G) )
%   | | | then return 0.24198821620485736;  // std dev = 0,787, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17764951283869582;  // std dev = 1,198, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.42826951220431264;  // std dev = 0,271, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.12489956722873481;  // std dev = 4,010, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | else if ( gender(A, K), gender(B, K) )
%   | | then if ( locale(A, L), educationtype(B, M) )
%   | | | then return 0.018912955368361045;  // std dev = 5,394, 180,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=88 */
%   | | | else return 0.14518705754675368;  // std dev = 5,301, 131,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=77 */
%   | | else if ( workenddate(B, N), gender(B, P) )
%   | | | then return -0.3924300938892105;  // std dev = 0,452, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.0059780523557482505;  // std dev = 4,689, 130,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationtype(B, C), workstartdate(B, D) )
%   then if ( workstartdate(A, E), educationconcentration(B, F) )
%   | then if ( educationconcentration(A, F), languages(B, G) )
%   | | then return -0.3545679610971126;  // std dev = 0,678, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.04535460928934104;  // std dev = 0,337, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( languages(B, H), educationyear(A, I) )
%   | | then return 0.3315621256946524;  // std dev = 0,145, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(A, J), educationschool(B, K) )
%   | | | then return 0.3039753321402021;  // std dev = 0,601, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.08048793144705696;  // std dev = 3,487, 90,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=61 */
%   else if ( locale(A, L), locale(B, L) )
%   | then if ( lastname(A, M) )
%   | | then return 0.3328594017929725;  // std dev = 0,048, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( workstartdate(A, N), educationyear(B, P) )
%   | | | then return 0.1576327068901806;  // std dev = 2,140, 32,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | | else return 0.022100550429551766;  // std dev = 8,400, 331,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=154 */
%   | else return -0.0517485749123956;  // std dev = 0,320, 79,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */


Results
   AUC ROC   = 0.556831
   AUC PR    = 0.549621
   CLL	      = -0.766602
   Precision = 0.552128 at threshold = 0.5
   Recall    = 0.36885
   F1        = 0.442252


Total learning time: 25.048 seconds
Total inference time: 6.272 seconds
AUC ROC: 0.556831


Dataset: 48_twitter_facebook, Fold: 5, Type: scratch, Time: 00:31:52
{'Learning time': 25.048, 'AUC PR': 0.549621, 'F1': 0.442252, 'AUC ROC': 0.556831, 'CLL': -0.766602, 'Inference time': 6.272, 'Precision': [0.552128, 0.5], 'Recall': 0.36885}


Starting experiment #2 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29692444530358925;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.08692252000517167;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.20837934984605716;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5813068298363496;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.2305979146913504;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6081489350995096;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25680824651685535;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.0760086065078202;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.18107440977493972;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1141862376674665;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4949913846238995;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20014733368536436;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5170719622367242;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.21542855580471548;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03213570384911769;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.15408250053251327;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.09635815785231988;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3965795487720175;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1697087003887462;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4125724528826577;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1758539833644332;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.02770673478281751;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.12864717441952958;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.08269510156685003;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.3042169031521049;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14089299828557916;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31517865761850816;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1403872751805415;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.023811354785219868;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10566614367153737;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.0702729758172556;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.2288839777917651;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1148820374315997;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.23676009386434094;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11019175106572325;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02040642831585418;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0856216785941897;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.059204484659773925;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.17184452907760903;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09230973482782298;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.17806945427207632;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08543913289306276;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.017446089481275212;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06862836147485345;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04951153175763231;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.129809923045701;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07332256916930585;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13513671764223337;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06568160361017888;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.014884115659231437;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.054539038114920696;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04114669855937214;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0989064414455212;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0577278046766802;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10367175113685581;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05019549935715151;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01267564229810578;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04305573807685484;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.03401590243533729;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0760068744143967;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04514647472950382;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08034833303035839;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038205230707555556;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010778315187231052;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0338174133803715;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.02799842689093084;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05885110169425813;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.035129929112934846;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06282214181758339;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.1430506706237793
   Generating paths time   = 2.500582218170166
   Generating mappings time   = 0.3369486331939697
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 2.980591297149658


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> educationconcentration(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5441954467274165;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then return 0.44799268509950874;  // std dev = 7,870, 256,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.4940712651965965;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.5751300671749804;  // std dev = 7,333, 265,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=190 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.5027161542523624;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.481630716476027;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2797550536463524;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.40427896605925967;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.323960900911473;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4643495512259643;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then return 0.3843013558677138;  // std dev = 7,870, 256,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.42275341854095105;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.48990056354445655;  // std dev = 7,333, 265,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=190 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.42994472298977077;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.41239205123047606;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2421806659031011;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3476340341499199;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.2797855302537561;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3741901739506694;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.14132867737022245;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.343402122337593;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.3759869448926816;  // std dev = 10,121, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.34875894246505046;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.33565805659203235;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.203726212528392;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.28653741242639086;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.23366960966582584;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2888750739814853;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.11225504731031953;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.2676819853824615;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.29161184441416926;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.27138292424169036;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.26231860139042446;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.16702713920825674;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2278201023511056;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.18945082422256151;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21809993172339343;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.08797804891832743;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.20352855150287047;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.2208268631489006;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20605374944172242;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.19987893050505776;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.1340556991125888;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17648256523974618;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.15001022951646806;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1636339963798434;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06828132133541301;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.15305628288816425;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1659066449616995;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.1548516450666213;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15048589029716836;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.10583076277216062;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13450385894167247;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.11674043685542754;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.12304706742562875;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.05262457088193414;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.11481148164037995;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1247747656806084;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.11617077403022498;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11289230347694161;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.08253233312019644;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10158669777755826;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.08977002433966023;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.09304409139630085;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.040356224243913955;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.08626033614676239;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.09428774405022951;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.08734923979735322;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08474542299938842;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.06379842622273633;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07638212524123399;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.06848431984663257;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07079641309226019;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.030838364314781336;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.06501219493357335;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.07165668393198386;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06591863566290139;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06376764590255186;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.04900959466481981;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05732172078026133;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.05197554629211091;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.054180185535357445;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02350551990061447;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.049164682343474556;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.05475331463815629;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04993537398656564;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04811800951360075;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.0374830377215972;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04299320137287683;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.03931368006422889;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */


Results
   AUC ROC   = 0.503723
   AUC PR    = 0.512593
   CLL	      = -0.700683
   Precision = 0.506944 at threshold = 0.5
   Recall    = 0.155113
   F1        = 0.237543


Total learning time: 160.876 seconds
Total inference time: 4.337 seconds
AUC ROC: 0.503723


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [7.87, 105, 151], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [7.333, 75, 190]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [7.87, 105, 151], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [7.333, 75, 190]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.121, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}]]
[{'': [0.22557507352750047, 0.24976560346629592], 'false': [0.22910031914640303, 0.24935662505964112], 'true,false,false': [0.23152512018098273, 0.20291918832325193], 'false,false,true': [0.23475224966808667, 0.2438543993507329], 'true,false': [0.24192810058594214, 0.21704734471986975], 'false,false,false': [0.24787202024367527, 0.24883117831830423], 'false,false': [0.2467423675099923, 0.2498155236231481], 'true': [0.215386695511091, 0.22772638776680518]}, {'': [0.2247664137879627, 0.24867106245597487], 'false': [0.22910031914642195, 0.24869554157332857], 'true,false,false': [0.23152512018098098, 0.20291918832324865], 'false,false,true': [0.23475224966808633, 0.2438543993506893], 'true,false': [0.24192810058593597, 0.2165399852495191], 'false,false,false': [0.24787202024361196, 0.2488311783184148], 'false,false': [0.2456295797861256, 0.24946312978305335], 'true': [0.21538669551108391, 0.22680569336274298]}, {'': [0.22395827446881808, 0.2475966409968811], 'false': [0.2291003191464122, 0.2480499409901824], 'true,false,false': [0.23152512018098173, 0.21657646445229164], 'false,false,true': [0.23475224966808025, 0.24385439935073028], 'true,false': [0.24305555555555605, 0.2213360955502945], 'false,false,false': [0.24787202024364127, 0.24883117831837123], 'false,false': [0.24453718962175694, 0.24911820453095088], 'true': [0.21538669551108974, 0.2258856217869818]}, {'': [0.22273866590965308, 0.24682388366636523], 'false': [0.22910031914641643, 0.24757758842842884], 'true,false,false': [0.23152512018097549, 0.21646863321090923], 'false,false,true': [0.23475224966808192, 0.2438543993506975], 'true,false': [0.24305555555555522, 0.22115760398537415], 'false,false,false': [0.24787202024364588, 0.24883117831831478], 'false,false': [0.2437508483761969, 0.2488659017117335], 'true': [0.2153866955110866, 0.22442977642121711]}, {'': [0.22198816846145822, 0.2463833362107555], 'false': [0.22910031914640794, 0.247300726261734], 'true,false,false': [0.2315251201809795, 0.21642805910995805], 'false,false,true': [0.2347522496680826, 0.24385439935071046], 'true,false': [0.2430555555555555, 0.2210715568628804], 'false,false,false': [0.24787202024365357, 0.24883117831833657], 'false,false': [0.24330242586959833, 0.2487187666806107], 'true': [0.2153866955110873, 0.22352707921879222]}, {'': [0.22158026183536483, 0.24616626090881188], 'false': [0.2291003191464104, 0.24716086893667288], 'true,false,false': [0.2315251201809773, 0.216421326275097], 'false,false,true': [0.23475224966808145, 0.2438543993507183], 'true,false': [0.24305555555555589, 0.2210385255733106], 'false,false,false': [0.24787202024366045, 0.2488311783183354], 'false,false': [0.24308154537702495, 0.24864528748954862], 'true': [0.21538669551108744, 0.22303390700435907]}, {'': [0.22137019848259068, 0.24606677803512786], 'false': [0.22910031914640852, 0.24709599193436751], 'true,false,false': [0.23152512018097923, 0.21642961218626777], 'false,false,true': [0.23475224966808136, 0.2438543993507051], 'true,false': [0.24305555555555544, 0.22103037755422847], 'false,false,false': [0.24787202024364777, 0.24883117831834464], 'false,false': [0.2429802625523915, 0.24861173644350384], 'true': [0.21538669551108744, 0.2227792597009386]}, {'': [0.221263839663253, 0.24602210487618745], 'false': [0.22910031914641066, 0.2470670368331146], 'true,false,false': [0.23152512018097812, 0.21644349768286295], 'false,false,true': [0.23475224966808136, 0.24385439935070546], 'true,false': [0.24305555555555577, 0.22103268974959212], 'false,false,false': [0.24787202024365135, 0.24883117831836277], 'false,false': [0.24293464821474073, 0.2485970006729667], 'true': [0.2153866955110873, 0.22265027172774163]}, {'': [0.22121018596545206, 0.24600176665469367], 'false': [0.22910031914640988, 0.2470542089133309], 'true,false,false': [0.23152512018097834, 0.21645845181264217], 'false,false,true': [0.2347522496680831, 0.24385439935071349], 'true,false': [0.24305555555555566, 0.2210388188177894], 'false,false,false': [0.24787202024365454, 0.248831178318346], 'false,false': [0.2429137771563896, 0.24859055507400518], 'true': [0.21538669551108722, 0.22258531405695556]}, {'': [0.2211832729591703, 0.2459921735606135], 'false': [0.22910031914641132, 0.24704845146501284], 'true,false,false': [0.23152512018097882, 0.21647243334764996], 'false,false,true': [0.2347522496680817, 0.2438543993507194], 'true,false': [0.243055555555556, 0.22104582873061135], 'false,false,false': [0.24787202024364582, 0.2488311783183665], 'false,false': [0.2429038885680211, 0.2485876859267417], 'true': [0.21538669551108686, 0.2225528703960873]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5441954467274165;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else return 0.5073924013993708;  // std dev = 0,477, 727,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=472 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( educationschool(B, F), gender(B, G) )
%   | | then return 0.5579281845476317;  // std dev = 0,458, 453,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=317 */
%   | | else if ( educationtype(B, H), educationschool(A, I) )
%   | | | then return -0.03768439823382107;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.5248156017661785;  // std dev = 3,055, 42,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.481630716476027;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2797550536463524;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.40427896605925967;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.323960900911473;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4643495512259643;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then if ( workemployer(B, F), workenddate(A, G) )
%   | | | then return 0.5323359730099377;  // std dev = 4,576, 111,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=83 */
%   | | | else return 0.25355374250356977;  // std dev = 6,009, 145,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=68 */
%   | | else return 0.46611688768256676;  // std dev = 0,466, 471,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.4286014131194956;  // std dev = 0,471, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.41239205123047606;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2421806659031011;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.3476340341499199;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.2797855302537561;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3741901739506694;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then if ( worklocation(B, G), workposition(A, H) )
%   | | | then return 0.5539917969650539;  // std dev = 1,302, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.022184072039625264;  // std dev = 2,564, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else return 0.36664443691194165;  // std dev = 0,469, 679,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=452 */
%   else if ( languages(B, I), languages(A, I) )
%   | then return 0.3477493552748322;  // std dev = 0,469, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.33565805659203235;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.203726212528392;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.28653741242639086;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.23366960966582584;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2888750739814853;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.10316499007477566;  // std dev = 0,460, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.24890003752420303;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.30044279652124717;  // std dev = 10,057, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.2709078894844993;  // std dev = 0,467, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.26231860139042446;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.16702713920825674;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2278201023511056;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.18945082422256151;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21809993172339343;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.08106912907897092;  // std dev = 0,459, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1884641981803982;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.2278553229322798;  // std dev = 10,052, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20607050006955618;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.19987893050505776;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.1340556991125888;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17648256523974618;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.15001022951646806;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1636339963798434;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06318777656774598;  // std dev = 0,459, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.14154260294760956;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1711976826075794;  // std dev = 10,050, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15520055057633966;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15048589029716836;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.10583076277216062;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13450385894167247;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.11674043685542754;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.12304706742562875;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.04896154184691104;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.10619230027456356;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.128675621547484;  // std dev = 10,051, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.11669658007785684;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11289230347694161;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.08253233312019644;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10158669777755826;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.08977002433966023;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.09304409139630085;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.03777826929728152;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07984601758461196;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.09715515669796297;  // std dev = 10,052, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.0879424418671904;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08474542299938842;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.06379842622273633;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07638212524123399;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.06848431984663257;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07079641309226019;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02906088162838516;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.060233824720602194;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.07377441758753923;  // std dev = 10,053, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06651292666751375;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06376764590255186;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.04900959466481981;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05732172078026133;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.05197554629211091;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.054180185535357445;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02230594527658654;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.045591613713555704;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.05632879089963338;  // std dev = 10,055, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.050494615954497;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04811800951360075;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.0374830377215972;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04299320137287683;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.03931368006422889;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */


Results
   AUC ROC   = 0.503672
   AUC PR    = 0.512732
   CLL	      = -0.700822
   Precision = 0.507645 at threshold = 0.5
   Recall    = 0.154316
   F1        = 0.236684


Total learning time: 171.79399999999998 seconds
Total inference time: 4.142 seconds
AUC ROC: 0.503672


Refined model AUC ROC: 0.503672


Dataset: 48_twitter_facebook, Fold: 1, Type: transfer, Time: 01:23:24
{'Learning time': 332.66999999999996, 'AUC PR': 0.512732, 'F1': 0.236684, 'AUC ROC': 0.503672, 'CLL': -0.700822, 'Inference time': 4.142, 'Mapping results': {'Generating mappings time': 0.3369486331939697, 'Generating paths time': 2.500582218170166, 'Finding best mapping': 1.6689300537109375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.1430506706237793, 'Max mapping': 24389, 'Total time': 2.980591297149658}, 'Parameter Learning results': {'Learning time': 160.876, 'AUC PR': 0.512593, 'F1': 0.237543, 'AUC ROC': 0.503723, 'CLL': -0.700683, 'Inference time': 4.337, 'Precision': [0.506944, 0.5], 'Recall': 0.155113}, 'Precision': [0.507645, 0.5], 'Recall': 0.154316}


Start learning from scratch in target domain

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.6000272576039374;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else return 0.3869259135167738;  // std dev = 0,499, 1.112,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=588 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( hometown(B, G), gender(A, H) )
%   | | then return 0.6411678030240394;  // std dev = 0,412, 106,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=83 */
%   | | else if ( worklocation(A, I), workstartdate(B, J) )
%   | | | then return 0.28972788246793296;  // std dev = 4,828, 95,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=41 */
%   | | | else return 0.4610474858241479;  // std dev = 9,088, 345,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=208 */
%   | else if ( educationtype(B, K), gender(B, L) )
%   | | then if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.4032925739503966;  // std dev = 19,040, 1.462,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=797 */
%   | | | else return 0.14565368253589178;  // std dev = 23,224, 2.633,000 (wgt'ed) examples reached here.  /* #neg=1.876 #pos=757 */
%   | | else if ( lastname(B, N), lastname(A, P) )
%   | | | then return 0.530876207826786;  // std dev = 4,921, 110,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=74 */
%   | | | else return 0.3478314747820471;  // std dev = 25,094, 2.520,000 (wgt'ed) examples reached here.  /* #neg=1.286 #pos=1.234 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( gender(B, E), educationschool(A, D) )
%   | then return 0.5103982569917702;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else return 0.33302733346304514;  // std dev = 0,499, 1.112,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=588 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( hometown(A, G), languages(B, H) )
%   | | then return 0.6030203232601851;  // std dev = 0,386, 47,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | else if ( hometown(B, I), gender(A, J) )
%   | | | then return 0.5287972218687705;  // std dev = 4,202, 99,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=76 */
%   | | | else return 0.3428752894909978;  // std dev = 9,934, 400,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=218 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( workenddate(B, L), worklocation(B, M) )
%   | | | then return 0.4881295337687546;  // std dev = 8,076, 303,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=208 */
%   | | | else return 0.31992980230231016;  // std dev = 17,264, 1.193,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=618 */
%   | | else if ( educationschool(A, N), educationtype(B, P) )
%   | | | then return 9.90487204434195E-4;  // std dev = 13,552, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.134 #pos=220 */
%   | | | else return 0.28809131088387674;  // std dev = 30,995, 3.875,000 (wgt'ed) examples reached here.  /* #neg=2.059 #pos=1.816 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( location(B, E), workemployer(A, C) )
%   | then return 0.5365197466206386;  // std dev = 0,350, 406,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=348 */
%   | else if ( educationschool(A, D), gender(B, F) )
%   | | then return 0.37804938399858473;  // std dev = 0,453, 1.355,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=965 */
%   | | else if ( hometown(A, G) )
%   | | | then return 0.03098558943141168;  // std dev = 4,859, 116,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | | | else return 0.28314076184519077;  // std dev = 15,191, 928,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=498 */
%   else if ( lastname(B, H), lastname(A, H) )
%   | then return 0.7344573418020155;  // std dev = 0,409, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( educationtype(B, I), gender(B, J) )
%   | | then if ( educationschool(B, K), educationschool(A, K) )
%   | | | then return 0.29137800521711665;  // std dev = 21,179, 1.845,000 (wgt'ed) examples reached here.  /* #neg=817 #pos=1.028 */
%   | | | else return 0.10421117490353173;  // std dev = 23,194, 2.695,000 (wgt'ed) examples reached here.  /* #neg=1.916 #pos=779 */
%   | | else if ( languages(B, L), gender(A, M) )
%   | | | then return 0.5328939869910586;  // std dev = 5,274, 159,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=123 */
%   | | | else return 0.23809116675595904;  // std dev = 24,956, 2.501,000 (wgt'ed) examples reached here.  /* #neg=1.308 #pos=1.193 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(B, C), workenddate(B, D) )
%   then if ( worklocation(A, C), workposition(B, E) )
%   | then return 0.4370204820535243;  // std dev = 0,364, 281,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=235 */
%   | else if ( location(B, F), gender(B, G) )
%   | | then return 0.300065606588173;  // std dev = 0,459, 1.604,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=1.049 */
%   | | else if ( workstartdate(B, H), lastname(A, I) )
%   | | | then return -0.01392933889606221;  // std dev = 3,852, 78,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.19208975594067565;  // std dev = 11,051, 508,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=256 */
%   else if ( hometown(B, J), location(B, K) )
%   | then return 0.28760153550215806;  // std dev = 0,451, 778,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=458 */
%   | else if ( languages(B, L), birthday(B, M) )
%   | | then if ( educationtype(B, N) )
%   | | | then return 0.23867881975423264;  // std dev = 12,054, 654,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=362 */
%   | | | else return 0.5425285753796669;  // std dev = 2,670, 72,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=64 */
%   | | else if ( educationtype(B, P), workemployer(A, Q) )
%   | | | then return 0.06104360788264261;  // std dev = 16,196, 1.333,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=460 */
%   | | | else return 0.17259968356330815;  // std dev = 33,755, 4.768,000 (wgt'ed) examples reached here.  /* #neg=2.637 #pos=2.131 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workenddate(B, D), location(B, E) )
%   | then return 0.2648437341679875;  // std dev = 0,430, 1.549,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=1.132 */
%   | else if ( hometown(B, F), locale(A, G) )
%   | | then return 0.29930598640967115;  // std dev = 0,438, 382,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=276 */
%   | | else if ( gender(B, H), locale(A, I) )
%   | | | then return 0.15248292451684448;  // std dev = 19,754, 1.629,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=891 */
%   | | | else return 0.36779697211172746;  // std dev = 3,899, 71,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=51 */
%   else if ( educationschool(A, J), educationtype(B, K) )
%   | then return -0.029896318922253504;  // std dev = 0,389, 1.727,000 (wgt'ed) examples reached here.  /* #neg=1.371 #pos=356 */
%   | else if ( languages(B, L), gender(B, M) )
%   | | then if ( workemployer(A, N), educationyear(A, P) )
%   | | | then return 0.42492677866521333;  // std dev = 3,505, 94,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=78 */
%   | | | else return 0.2367977484444976;  // std dev = 13,301, 762,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=430 */
%   | | else if ( workposition(B, Q), workenddate(B, R) )
%   | | | then return 0.29541775805819126;  // std dev = 8,128, 291,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=184 */
%   | | | else return 0.1498893829370328;  // std dev = 29,582, 3.571,000 (wgt'ed) examples reached here.  /* #neg=1.931 #pos=1.640 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.24045791851771847;  // std dev = 0,421, 1.358,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=1.010 */
%   | else return 0.06253385805707305;  // std dev = 0,443, 353,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=120 */
%   else if ( educationyear(A, E), educationtype(B, F) )
%   | then if ( educationschool(A, G), educationschool(B, G) )
%   | | then if ( workenddate(B, H), workenddate(A, H) )
%   | | | then return 0.1849883318253965;  // std dev = 7,128, 252,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=176 */
%   | | | else return 0.08942075694155287;  // std dev = 18,979, 1.535,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=840 */
%   | | else return -0.025561065656066462;  // std dev = 0,390, 1.271,000 (wgt'ed) examples reached here.  /* #neg=1.002 #pos=269 */
%   | else if ( hometown(B, I), gender(A, J) )
%   | | then if ( hometown(A, I) )
%   | | | then return 0.5237061798702027;  // std dev = 2,428, 69,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | | else return 0.19392808967762923;  // std dev = 11,168, 577,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=327 */
%   | | else if ( worklocation(B, K), educationschool(B, L) )
%   | | | then return 0.1958309310117538;  // std dev = 13,642, 819,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=496 */
%   | | | else return 0.10660977498693988;  // std dev = 30,283, 3.842,000 (wgt'ed) examples reached here.  /* #neg=2.105 #pos=1.737 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.19736905941127927;  // std dev = 0,371, 437,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=360 */
%   | else return 0.4070852034457468;  // std dev = 0,386, 114,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=90 */
%   else if ( workemployer(A, E), educationtype(B, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then if ( workenddate(B, H), workposition(A, I) )
%   | | | then return 0.1630510249819544;  // std dev = 9,376, 435,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=304 */
%   | | | else return 0.07005956096401088;  // std dev = 15,885, 1.095,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=600 */
%   | | else return -0.0887200079516555;  // std dev = 0,334, 821,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=112 */
%   | else if ( lastname(B, J), lastname(A, K) )
%   | | then if ( locale(A, L), locale(B, L) )
%   | | | then return 0.227952414974314;  // std dev = 7,680, 309,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=207 */
%   | | | else return 0.43348802181542817;  // std dev = 1,573, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | else if ( location(B, M), gender(B, N) )
%   | | | then return 0.12003710719418148;  // std dev = 25,992, 3.054,000 (wgt'ed) examples reached here.  /* #neg=1.385 #pos=1.669 */
%   | | | else return 0.0727459944108362;  // std dev = 29,728, 3.786,000 (wgt'ed) examples reached here.  /* #neg=2.112 #pos=1.674 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( lastname(B, D), educationconcentration(B, E) )
%   | then if ( educationconcentration(A, E), location(A, F) )
%   | | then return 0.08461059837682888;  // std dev = 0,870, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.5505154574394601;  // std dev = 0,306, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.19907132074730927;  // std dev = 0,368, 538,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=446 */
%   else if ( workemployer(A, G), educationtype(B, H) )
%   | then if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( languages(B, J), location(A, K) )
%   | | | then return 0.13227104178871193;  // std dev = 9,840, 462,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=307 */
%   | | | else return 0.04753217931201835;  // std dev = 15,578, 1.068,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=597 */
%   | | else return -0.07400350601701777;  // std dev = 0,334, 821,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=112 */
%   | else if ( hometown(B, L), hometown(A, L) )
%   | | then return 0.40377564156044665;  // std dev = 0,265, 104,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=97 */
%   | | else if ( lastname(B, M), lastname(A, N) )
%   | | | then return 0.1690419867486146;  // std dev = 7,778, 310,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=205 */
%   | | | else return 0.06829778939033611;  // std dev = 39,298, 6.760,000 (wgt'ed) examples reached here.  /* #neg=3.490 #pos=3.270 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationclasses(B, C), languages(A, D) )
%   then return 0.20631795152572263;  // std dev = 0,360, 209,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=175 */
%   else if ( educationyear(A, E), educationyear(B, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then if ( lastname(B, G), worklocation(A, H) )
%   | | | then return -0.04074241364852713;  // std dev = 4,479, 91,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=50 */
%   | | | else return 0.1356939610966053;  // std dev = 14,428, 1.181,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=882 */
%   | | else if ( birthday(B, I), languages(B, J) )
%   | | | then return 0.19941464016390498;  // std dev = 3,850, 79,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.033481298246952264;  // std dev = 6,579, 269,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=68 */
%   | else if ( educationschool(A, K), educationtype(B, L) )
%   | | then if ( educationtype(A, L), educationschool(B, K) )
%   | | | then return 0.04697356012619463;  // std dev = 22,031, 2.147,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=1.259 */
%   | | | else return -0.06113105667400226;  // std dev = 14,021, 1.438,000 (wgt'ed) examples reached here.  /* #neg=1.180 #pos=258 */
%   | | else if ( educationconcentration(B, M), educationschool(B, N) )
%   | | | then return 0.12438093624261792;  // std dev = 13,810, 802,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=453 */
%   | | | else return 0.057392870039989774;  // std dev = 30,320, 3.860,000 (wgt'ed) examples reached here.  /* #neg=2.014 #pos=1.846 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.09272391360074139;  // std dev = 0,365, 437,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=360 */
%   | else return 0.2580907511372187;  // std dev = 0,376, 114,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=90 */
%   else if ( educationconcentration(A, E), hometown(B, F) )
%   | then if ( educationclasses(B, G), locale(A, H) )
%   | | then return 0.3239735287147571;  // std dev = 0,223, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( location(B, I), educationyear(B, J) )
%   | | | then return 0.026526252144943065;  // std dev = 6,118, 183,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=108 */
%   | | | else return -0.16416383452793595;  // std dev = 5,329, 239,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=54 */
%   | else if ( locale(B, K), hometown(B, L) )
%   | | then if ( hometown(A, L) )
%   | | | then return 0.32408050456867094;  // std dev = 2,645, 107,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=101 */
%   | | | else return 0.07837751409286936;  // std dev = 12,721, 819,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=437 */
%   | | else if ( lastname(B, M), hometown(A, N) )
%   | | | then return 0.13874402721108903;  // std dev = 6,597, 208,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=126 */
%   | | | else return 0.029795035356947157;  // std dev = 41,783, 7.945,000 (wgt'ed) examples reached here.  /* #neg=4.206 #pos=3.739 */


Results
   AUC ROC   = 0.623137
   AUC PR    = 0.602189
   CLL	      = -0.68301
   Precision = 0.642594 at threshold = 0.5
   Recall    = 0.277689
   F1        = 0.387797


Total learning time: 364.342 seconds
Total inference time: 4.208 seconds
AUC ROC: 0.623137


Dataset: 48_twitter_facebook, Fold: 1, Type: scratch, Time: 01:29:33
{'Learning time': 364.342, 'AUC PR': 0.602189, 'F1': 0.387797, 'AUC ROC': 0.623137, 'CLL': -0.68301, 'Inference time': 4.208, 'Precision': [0.642594, 0.5], 'Recall': 0.277689}


Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.06844973564147949
   Generating paths time   = 2.5894994735717773
   Generating mappings time   = 0.30906081199645996
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.9670193195343018


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationdegree(A,B)', 'accounttype(A,B) -> birthday(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
0;true,false;educationdegree(A, E).;false;true
0;true,false,false;educationdegree(B, F).;false;false
0;false,false,true;educationdegree(B, I).;false;false
0;false;educationdegree(B, G), educationdegree(A, G).;false;true
0;false,false,false;educationdegree(B, J).;false;false
0;false,false;educationdegree(A, H).;true;true
0;true;educationdegree(A, D), educationdegree(B, D).;false;true
1;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
1;true,false;educationdegree(A, E).;false;true
1;true,false,false;educationdegree(B, F).;false;false
1;false,false,true;educationdegree(B, I).;false;false
1;false;educationdegree(A, G), educationdegree(B, G).;false;true
1;false,false,false;educationdegree(B, J).;false;false
1;false,false;educationdegree(A, H).;true;true
1;true;educationdegree(B, D), educationdegree(A, D).;false;true
2;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
2;true,false;educationdegree(A, E), educationdegree(B, F).;false;true
2;true,false,false;educationdegree(B, G).;false;false
2;false,false,true;educationdegree(B, J).;false;false
2;false;educationdegree(B, H), educationdegree(A, H).;false;true
2;false,false,false;educationdegree(B, K).;false;false
2;false,false;educationdegree(A, I).;true;true
2;true;educationdegree(B, D), educationdegree(A, D).;false;true
3;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
3;true,false;educationdegree(B, E), educationdegree(A, F).;false;true
3;true,false,false;educationdegree(B, G).;false;false
3;false,false,true;educationdegree(B, J).;false;false
3;false;educationdegree(A, H), educationdegree(B, H).;false;true
3;false,false,false;educationdegree(B, K).;false;false
3;false,false;educationdegree(A, I).;true;true
3;true;educationdegree(B, D), educationdegree(A, D).;false;true
4;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
4;true,false;educationdegree(A, E), educationdegree(B, F).;false;true
4;true,false,false;educationdegree(B, G).;false;false
4;false,false,true;educationdegree(B, J).;false;false
4;false;educationdegree(A, H), educationdegree(B, H).;false;true
4;false,false,false;educationdegree(B, K).;false;false
4;false,false;educationdegree(A, I).;true;true
4;true;educationdegree(B, D), educationdegree(A, D).;false;true
5;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
5;true,false;educationdegree(A, E), educationdegree(B, F).;false;true
5;true,false,false;educationdegree(B, G).;false;false
5;false,false,true;educationdegree(B, J).;false;false
5;false;educationdegree(A, H), educationdegree(B, H).;false;true
5;false,false,false;educationdegree(B, K).;false;false
5;false,false;educationdegree(A, I).;true;true
5;true;educationdegree(A, D), educationdegree(B, D).;false;true
6;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
6;true,false;educationdegree(A, E), educationdegree(B, F).;false;true
6;true,false,false;educationdegree(B, G).;false;false
6;false,false,true;educationdegree(B, J).;false;false
6;false;educationdegree(B, H), educationdegree(A, H).;false;true
6;false,false,false;educationdegree(B, K).;false;false
6;false,false;educationdegree(A, I).;true;true
6;true;educationdegree(A, D), educationdegree(B, D).;false;true
7;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
7;true,false;educationdegree(B, E), educationdegree(A, F).;false;true
7;true,false,false;educationdegree(B, G).;false;false
7;false,false,true;educationdegree(B, J).;false;false
7;false;educationdegree(A, H), educationdegree(B, H).;false;true
7;false,false,false;educationdegree(B, K).;false;false
7;false,false;educationdegree(A, I).;true;true
7;true;educationdegree(B, D), educationdegree(A, D).;false;true
8;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
8;true,false;educationdegree(A, E), educationdegree(B, F).;false;true
8;true,false,false;educationdegree(B, G).;false;false
8;false,false,true;educationdegree(B, J).;false;false
8;false;educationdegree(A, H), educationdegree(B, H).;false;true
8;false,false,false;educationdegree(B, K).;false;false
8;false,false;educationdegree(A, I).;true;true
8;true;educationdegree(A, D), educationdegree(B, D).;false;true
9;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true
9;true,false;educationdegree(A, E), educationdegree(B, F).;false;true
9;true,false,false;educationdegree(B, G).;false;false
9;false,false,true;educationdegree(B, J).;false;false
9;false;educationdegree(B, H), educationdegree(A, H).;false;true
9;false,false,false;educationdegree(B, K).;false;false
9;false,false;educationdegree(A, I).;true;true
9;true;educationdegree(A, D), educationdegree(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E) )
%   | | then return 0.5869624944215446;  // std dev = 4,829, 118,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=86 */
%   | | else if ( educationdegree(B, F) )
%   | | | then return 0.4820021461086876;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.5099595200577255;  // std dev = 9,026, 359,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=234 */
%   else if ( educationdegree(B, G), educationdegree(A, G) )
%   | then return 0.332896409846984;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, H) )
%   | | then if ( educationdegree(B, I) )
%   | | | then return 0.32499243642576814;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.3517997287503011;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, J) )
%   | | | then return 0.3437070927888127;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.3418820931672036;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.261631808675212;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E) )
%   | | then return 0.4996495186661365;  // std dev = 4,829, 118,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=86 */
%   | | else if ( educationdegree(B, F) )
%   | | | then return 0.4127016197308782;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.4359646257071002;  // std dev = 9,026, 359,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=234 */
%   else if ( educationdegree(A, G), educationdegree(B, G) )
%   | then return 0.2873642215148537;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, H) )
%   | | then if ( educationdegree(B, I) )
%   | | | then return 0.28066081945033977;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.30337209309120705;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, J) )
%   | | | then return 0.2965231873873318;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.2949778028148331;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.4537580440623139;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.33588987422357863;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.36028521440636974;  // std dev = 10,044, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(B, H), educationdegree(A, H) )
%   | then return 0.23964841306280094;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.2343610757328424;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.2522157887638258;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.24684902690587282;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.24563597787399724;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.1787352457468729;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(B, E), educationdegree(A, F) )
%   | | then return 0.34715401703615484;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.2624793955308882;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.27916029093767025;  // std dev = 10,043, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.19386550440010034;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.18996243701459378;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.2030797773451459;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.1991556125467547;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.198266439435992;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.14243924477676276;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.2607416346423869;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.19998820233465398;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.21133215658729398;  // std dev = 10,043, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.15310316298965937;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.15036942045440194;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.1595137395617919;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.15679072823298487;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.1561722864686172;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.11159559999632997;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.19641174090691224;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.15056245269495805;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.15867429675069203;  // std dev = 10,043, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.11882869721785803;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.11698331050515279;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.1231383073155777;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.12131033282121713;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.12089467570807493;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.08637026299843599;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.1497088563236278;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.11294901754573951;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.11916823317823892;  // std dev = 10,043, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(B, H), educationdegree(A, H) )
%   | then return 0.0911469617741583;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.08993020449866496;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.09399045521180242;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.09278352744521479;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.09250930729082603;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.06628370899125427;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(B, E), educationdegree(A, F) )
%   | | then return 0.11566672465480654;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.08478980470545233;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.08984755195103657;  // std dev = 10,043, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.06937928164691032;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.06858826935353375;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.07124134063027292;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.0704482164109145;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.07026862914061788;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.050575643621874215;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.09048789094183822;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.06380381923071447;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.06807486588091083;  // std dev = 10,044, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.05255203531561988;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.05204224727107225;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.05377071610960598;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.053248085012934;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.05313050963766016;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.038438849075129344;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.0715480461460355;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.04814822971862154;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.05182449454423344;  // std dev = 10,044, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(B, H), educationdegree(A, H) )
%   | then return 0.03968249371303276;  // std dev = 7,027, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.03935606452491716;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.040482631443830346;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.040135879466589475;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.040058635686386596;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */


Results
   AUC ROC   = 0.50282
   AUC PR    = 0.512886
   CLL	      = -0.695013
   Precision = 0.657244 at threshold = 0.5
   Recall    = 0.040514
   F1        = 0.076323


Total learning time: 117.47999999999999 seconds
Total inference time: 4.122 seconds
AUC ROC: 0.50282


Structure after Parameter Learning
[['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E)', 'true,false,false': 'educationdegree(B, F)', 'false,false,true': 'educationdegree(B, I)', 'false': 'educationdegree(B, G), educationdegree(A, G)', 'false,false,false': 'educationdegree(B, J)', 'false,false': 'educationdegree(A, H)', 'true': 'educationdegree(A, D), educationdegree(B, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [4.829, 32, 86], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [9.026, 125, 234]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E)', 'true,false,false': 'educationdegree(B, F)', 'false,false,true': 'educationdegree(B, I)', 'false': 'educationdegree(A, G), educationdegree(B, G)', 'false,false,false': 'educationdegree(B, J)', 'false,false': 'educationdegree(A, H)', 'true': 'educationdegree(B, D), educationdegree(A, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [4.829, 32, 86], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [9.026, 125, 234]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E), educationdegree(B, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(B, H), educationdegree(A, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(B, D), educationdegree(A, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.044, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(B, E), educationdegree(A, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(A, H), educationdegree(B, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(B, D), educationdegree(A, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.043, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E), educationdegree(B, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(A, H), educationdegree(B, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(B, D), educationdegree(A, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.043, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E), educationdegree(B, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(A, H), educationdegree(B, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(A, D), educationdegree(B, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.043, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E), educationdegree(B, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(B, H), educationdegree(A, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(A, D), educationdegree(B, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.043, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(B, E), educationdegree(A, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(A, H), educationdegree(B, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(B, D), educationdegree(A, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.043, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E), educationdegree(B, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(A, H), educationdegree(B, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(A, D), educationdegree(B, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.044, 152, 302]}], ['edge(A, B)', {'': 'birthday(A, C), birthday(B, C)', 'true,false': 'educationdegree(A, E), educationdegree(B, F)', 'true,false,false': 'educationdegree(B, G)', 'false,false,true': 'educationdegree(B, J)', 'false': 'educationdegree(B, H), educationdegree(A, H)', 'false,false,false': 'educationdegree(B, K)', 'false,false': 'educationdegree(A, I)', 'true': 'educationdegree(A, D), educationdegree(B, D)'}, {'true,false,false,true': [5.057, 41, 68], 'true,true': [2.582, 15, 12], 'false,true': [7.027, 104, 94], 'false,false,true,true': [9.687, 201, 176], 'false,false,false,false': [27.567, 1571, 1472], 'false,false,true,false': [17.747, 638, 622], 'true,false,true': [1.978, 5, 18], 'false,false,false,true': [17.888, 659, 622], 'true,false,false,false': [10.044, 152, 302]}]]
[{'': [0.2267350420071853, 0.24976953614951877], 'false': [0.24936230996837308, 0.24977958137047349], 'true,false,false': [0.2346603821227162, 0.22695354629464784], 'false,false,true': [0.24890064659570243, 0.24995968757872802], 'true,false': [0.19764435507038372, 0.22888815837534077], 'false,false,false': [0.2497914331906655, 0.2497353898535131], 'false,false': [0.24984317678130533, 0.24975268727943215], 'true': [0.2469135802469131, 0.2237183892648747]}, {'': [0.22577656481272204, 0.24975832382347787], 'false': [0.24936230996837216, 0.24976897999833658], 'true,false,false': [0.23466038212271703, 0.22695354629464157], 'false,false,true': [0.24890064659569655, 0.2499596875787415], 'true,false': [0.19764435507037983, 0.22884519986974042], 'false,false,false': [0.2497914331906694, 0.24973538985355997], 'false,false': [0.24980722300390884, 0.24975249079887743], 'true': [0.2469135802469134, 0.2233303740783323]}, {'': [0.22482543922011788, 0.2497474279605174], 'false': [0.24936230996836908, 0.24975867788911052], 'true,false,false': [0.2346603821227147, 0.22222023706861493], 'false,false,true': [0.24890064659570071, 0.24995968757874187], 'true,false': [0.17013232514177695, 0.22472163346541907], 'false,false,false': [0.24979143319066904, 0.24973538985352187], 'false,false': [0.24977230049852864, 0.24975229967326446], 'true': [0.24691358024691332, 0.22294265294741947]}, {'': [0.22418293243162327, 0.24973932074311447], 'false': [0.2493623099683718, 0.24975101248244502], 'true,false,false': [0.23466038212271775, 0.22218465464911752], 'false,false,true': [0.24890064659569594, 0.24995968757873147], 'true,false': [0.1701323251417769, 0.22464346784467745], 'false,false,false': [0.24979143319068192, 0.24973538985355684], 'false,false': [0.24974629159232156, 0.24975215772270104], 'true': [0.24691358024691365, 0.22269523857434215]}, {'': [0.22384270766227782, 0.2497344425933326], 'false': [0.24936230996837117, 0.24974640014691882], 'true,false,false': [0.2346603821227165, 0.22217143442709922], 'false,false,true': [0.24890064659569758, 0.24995968757875303], 'true,false': [0.17013232514177695, 0.22460945635952229], 'false,false,false': [0.24979143319067873, 0.24973538985352928], 'false,false': [0.24973061350944975, 0.24975207262678673], 'true': [0.24691358024691382, 0.2225716992956545]}, {'': [0.2236867359820851, 0.24973192529307975], 'false': [0.24936230996836992, 0.24974401996744], 'true,false,false': [0.23466038212271675, 0.22217006820050225], 'false,false,true': [0.24890064659569788, 0.24995968757873352], 'true,false': [0.170132325141777, 0.22459853714518987], 'false,false,false': [0.2497914331906806, 0.2497353898535575], 'false,false': [0.24972250652590858, 0.24975202890713386], 'true': [0.24691358024691357, 0.22251904897712374]}, {'': [0.22361854909246598, 0.24973074946520035], 'false': [0.24936230996836994, 0.2497429081492418], 'true,false,false': [0.23466038212271703, 0.22217395441855653], 'false,false,true': [0.24890064659570055, 0.2499596875787395], 'true,false': [0.170132325141777, 0.2245974364002415], 'false,false,false': [0.24979143319067867, 0.24973538985358462], 'false,false': [0.2497187134213033, 0.24975200856416438], 'true': [0.24691358024691337, 0.22249772723948044]}, {'': [0.2235885512000224, 0.24973023080842133], 'false': [0.2493623099683702, 0.24974241770596264], 'true,false,false': [0.23466038212271675, 0.2221796308050666], 'false,false,true': [0.2489006465956963, 0.24995968757872924], 'true,false': [0.17013232514177695, 0.22459996893887577], 'false,false,false': [0.24979143319066893, 0.24973538985356108], 'false,false': [0.24971703885828048, 0.2497519996106385], 'true': [0.24691358024691382, 0.2224892409840475]}, {'': [0.22357489310350107, 0.24973000832066122], 'false': [0.24936230996836892, 0.2497422073121062], 'true,false,false': [0.23466038212271687, 0.2221854595355297], 'false,false,true': [0.24890064659569805, 0.24995968757874115], 'true,false': [0.17013232514177698, 0.22460352341583603], 'false,false,false': [0.2497914331906687, 0.24973538985357627], 'false,false': [0.24971632073939132, 0.24975199576872237], 'true': [0.24691358024691362, 0.22248594157948254]}, {'': [0.22356834521540073, 0.2497299137801528], 'false': [0.2493623099683716, 0.24974211790742387], 'true,false,false': [0.23466038212271675, 0.22219075059538274], 'false,false,true': [0.24890064659570077, 0.24995968757873496], 'true,false': [0.17013232514177698, 0.2246070521183109], 'false,false,false': [0.24979143319067726, 0.24973538985353472], 'false,false': [0.2497160161240065, 0.24975199413053248], 'true': [0.24691358024691384, 0.2224847127493618]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '0;true,false;educationdegree(A, E).;true;true', '0;true,false,false;educationdegree(B, F).;true;true', '0;false,false,true;educationdegree(B, I).;true;true', '0;false;educationdegree(B, G), educationdegree(A, G).;true;true', '0;false,false,false;educationdegree(B, J).;true;true', '0;false,false;educationdegree(A, H).;true;true', '0;true;educationdegree(A, D), educationdegree(B, D).;true;true', '1;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '1;true,false;educationdegree(A, E).;true;true', '1;true,false,false;educationdegree(B, F).;true;true', '1;false,false,true;educationdegree(B, I).;true;true', '1;false;educationdegree(A, G), educationdegree(B, G).;true;true', '1;false,false,false;educationdegree(B, J).;true;true', '1;false,false;educationdegree(A, H).;true;true', '1;true;educationdegree(B, D), educationdegree(A, D).;true;true', '2;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '2;true,false;educationdegree(A, E), educationdegree(B, F).;true;true', '2;true,false,false;educationdegree(B, G).;true;true', '2;false,false,true;educationdegree(B, J).;true;true', '2;false;educationdegree(B, H), educationdegree(A, H).;true;true', '2;false,false,false;educationdegree(B, K).;true;true', '2;false,false;educationdegree(A, I).;true;true', '2;true;educationdegree(B, D), educationdegree(A, D).;true;true', '3;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '3;true,false;educationdegree(B, E), educationdegree(A, F).;true;true', '3;true,false,false;educationdegree(B, G).;true;true', '3;false,false,true;educationdegree(B, J).;true;true', '3;false;educationdegree(A, H), educationdegree(B, H).;true;true', '3;false,false,false;educationdegree(B, K).;true;true', '3;false,false;educationdegree(A, I).;true;true', '3;true;educationdegree(B, D), educationdegree(A, D).;true;true', '4;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '4;true,false;educationdegree(A, E), educationdegree(B, F).;true;true', '4;true,false,false;educationdegree(B, G).;true;true', '4;false,false,true;educationdegree(B, J).;true;true', '4;false;educationdegree(A, H), educationdegree(B, H).;true;true', '4;false,false,false;educationdegree(B, K).;true;true', '4;false,false;educationdegree(A, I).;true;true', '4;true;educationdegree(B, D), educationdegree(A, D).;true;true', '5;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '5;true,false;educationdegree(A, E), educationdegree(B, F).;true;true', '5;true,false,false;educationdegree(B, G).;true;true', '5;false,false,true;educationdegree(B, J).;true;true', '5;false;educationdegree(A, H), educationdegree(B, H).;true;true', '5;false,false,false;educationdegree(B, K).;true;true', '5;false,false;educationdegree(A, I).;true;true', '5;true;educationdegree(A, D), educationdegree(B, D).;true;true', '6;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '6;true,false;educationdegree(A, E), educationdegree(B, F).;true;true', '6;true,false,false;educationdegree(B, G).;true;true', '6;false,false,true;educationdegree(B, J).;true;true', '6;false;educationdegree(B, H), educationdegree(A, H).;true;true', '6;false,false,false;educationdegree(B, K).;true;true', '6;false,false;educationdegree(A, I).;true;true', '6;true;educationdegree(A, D), educationdegree(B, D).;true;true', '7;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '7;true,false;educationdegree(B, E), educationdegree(A, F).;true;true', '7;true,false,false;educationdegree(B, G).;true;true', '7;false,false,true;educationdegree(B, J).;true;true', '7;false;educationdegree(A, H), educationdegree(B, H).;true;true', '7;false,false,false;educationdegree(B, K).;true;true', '7;false,false;educationdegree(A, I).;true;true', '7;true;educationdegree(B, D), educationdegree(A, D).;true;true', '8;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '8;true,false;educationdegree(A, E), educationdegree(B, F).;true;true', '8;true,false,false;educationdegree(B, G).;true;true', '8;false,false,true;educationdegree(B, J).;true;true', '8;false;educationdegree(A, H), educationdegree(B, H).;true;true', '8;false,false,false;educationdegree(B, K).;true;true', '8;false,false;educationdegree(A, I).;true;true', '8;true;educationdegree(A, D), educationdegree(B, D).;true;true', '9;;edge(A, B) :- birthday(A, C), birthday(B, C).;true;true', '9;true,false;educationdegree(A, E), educationdegree(B, F).;true;true', '9;true,false,false;educationdegree(B, G).;true;true', '9;false,false,true;educationdegree(B, J).;true;true', '9;false;educationdegree(B, H), educationdegree(A, H).;true;true', '9;false,false,false;educationdegree(B, K).;true;true', '9;false,false;educationdegree(A, I).;true;true', '9;true;educationdegree(A, D), educationdegree(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.30259337954395676;  // std dev = 0,497, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else return 0.52026497605514;  // std dev = 0,473, 586,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=388 */
%   else if ( educationdegree(B, E), educationdegree(A, E) )
%   | then if ( languages(A, F), educationyear(A, G) )
%   | | then return 0.20025419825740592;  // std dev = 0,474, 76,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | else if ( location(B, H), educationyear(A, I) )
%   | | | then return 0.5672398441904211;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | | | else return 0.29098475599503365;  // std dev = 4,056, 67,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | else if ( educationdegree(A, J) )
%   | | then if ( educationdegree(B, K) )
%   | | | then return 0.32499243642576814;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.3517997287503011;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return 0.3437070927888127;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.3418820931672036;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.261631808675212;  // std dev = 0,497, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else return 0.4445207092161428;  // std dev = 0,473, 586,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=388 */
%   else if ( educationdegree(A, E), educationdegree(B, E) )
%   | then if ( hometown(A, F), lastname(A, G) )
%   | | then return 0.13947190707887658;  // std dev = 0,463, 82,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | else if ( languages(B, H) )
%   | | | then return 0.19352917339084283;  // std dev = 3,058, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.4975092767016786;  // std dev = 3,960, 75,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=52 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.28066081945033977;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.30337209309120705;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.2965231873873318;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.2949778028148331;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.2192721473492705;  // std dev = 0,497, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else return 0.3595723800291166;  // std dev = 0,473, 586,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=388 */
%   else if ( educationdegree(B, E), educationdegree(A, E) )
%   | then if ( lastname(A, F), hometown(A, G) )
%   | | then return 0.11823270071626141;  // std dev = 0,463, 82,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | else if ( location(B, H), hometown(B, I) )
%   | | | then return 0.5567094679491231;  // std dev = 1,757, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.2558102672140377;  // std dev = 4,656, 91,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=47 */
%   | else if ( educationdegree(A, J) )
%   | | then if ( educationdegree(B, K) )
%   | | | then return 0.2343610757328424;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.2522157887638258;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return 0.24684902690587282;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.24563597787399724;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then if ( workposition(B, E), location(A, F) )
%   | | then return -0.2657091986975716;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( educationconcentration(A, G), hometown(A, H) )
%   | | | then return 0.7342908013024284;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17873524574687288;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return 0.2788342953432861;  // std dev = 0,473, 586,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=388 */
%   else if ( educationdegree(A, I), educationdegree(B, I) )
%   | then return 0.18934051633280632;  // std dev = 0,473, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, J) )
%   | | then if ( educationdegree(B, K) )
%   | | | then return 0.18996243701459378;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.2030797773451459;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return 0.1991556125467547;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.198266439435992;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.1391996401586368;  // std dev = 0,464, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.3316524057451431;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.17289692110214366;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.21424194797843504;  // std dev = 10,055, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.15034749729052815;  // std dev = 0,472, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.15036942045440194;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.1595137395617919;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.15679072823298487;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.1561722864686172;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.10946640848446441;  // std dev = 0,463, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.24894849253900575;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.1298306057911994;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.1608397711275577;  // std dev = 10,055, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.11755664003405693;  // std dev = 0,471, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.11698331050515279;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.1231383073155777;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.12131033282121713;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.12089467570807493;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.08512656224851255;  // std dev = 0,462, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.1878210315467189;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.09739796799877391;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.12074738242099985;  // std dev = 10,055, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(B, H), educationdegree(A, H) )
%   | then return 0.09095481072669832;  // std dev = 0,470, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.08993020449866496;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.09399045521180242;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.09278352744521479;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.09250930729082603;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, D) )
%   | then return 0.06568481393697441;  // std dev = 0,461, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(B, E), educationdegree(A, F) )
%   | | then return 0.14347311490219464;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.07319812597923298;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.09099495018699615;  // std dev = 10,055, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.06988569045696422;  // std dev = 0,470, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.06858826935353375;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.07124134063027292;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.0704482164109145;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.07026862914061788;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.050412528211810165;  // std dev = 0,461, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.11108438131133191;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.05516134676561639;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.06891158765393181;  // std dev = 10,055, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(A, H), educationdegree(B, H) )
%   | then return 0.05345582498952569;  // std dev = 0,470, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.05204224727107225;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.05377071610960598;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.053248085012934;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.05313050963766016;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( birthday(A, C), birthday(B, C) )
%   then if ( educationdegree(A, D), educationdegree(B, D) )
%   | then return 0.0385493137529978;  // std dev = 0,461, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( educationdegree(A, E), educationdegree(B, F) )
%   | | then return 0.087063829328774;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( educationdegree(B, G) )
%   | | | then return 0.041685770415029716;  // std dev = 5,057, 109,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | | else return 0.05243840072979459;  // std dev = 10,055, 454,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=302 */
%   else if ( educationdegree(B, H), educationdegree(A, H) )
%   | then return 0.04076985463779827;  // std dev = 0,470, 198,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=94 */
%   | else if ( educationdegree(A, I) )
%   | | then if ( educationdegree(B, J) )
%   | | | then return 0.03935606452491716;  // std dev = 9,687, 377,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=176 */
%   | | | else return 0.040482631443830346;  // std dev = 17,747, 1.260,000 (wgt'ed) examples reached here.  /* #neg=638 #pos=622 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.040135879466589475;  // std dev = 17,888, 1.281,000 (wgt'ed) examples reached here.  /* #neg=659 #pos=622 */
%   | | | else return 0.040058635686386596;  // std dev = 27,567, 3.043,000 (wgt'ed) examples reached here.  /* #neg=1.571 #pos=1.472 */


Results
   AUC ROC   = 0.505625
   AUC PR    = 0.515867
   CLL	      = -0.694866
   Precision = 0.65812 at threshold = 0.5
   Recall    = 0.04193
   F1        = 0.078837


Total learning time: 116.144 seconds
Total inference time: 4.538 seconds
AUC ROC: 0.505625


Refined model AUC ROC: 0.505625


Dataset: 48_twitter_facebook, Fold: 2, Type: transfer, Time: 01:33:39
{'Learning time': 233.624, 'AUC PR': 0.515867, 'F1': 0.078837, 'AUC ROC': 0.505625, 'CLL': -0.694866, 'Inference time': 4.538, 'Mapping results': {'Generating mappings time': 0.30906081199645996, 'Generating paths time': 2.5894994735717773, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.06844973564147949, 'Max mapping': 24389, 'Total time': 2.9670193195343018}, 'Parameter Learning results': {'Learning time': 117.47999999999999, 'AUC PR': 0.512886, 'F1': 0.076323, 'AUC ROC': 0.50282, 'CLL': -0.695013, 'Inference time': 4.122, 'Precision': [0.657244, 0.5], 'Recall': 0.040514}, 'Precision': [0.65812, 0.5], 'Recall': 0.04193}


Start learning from scratch in target domain

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationyear(B, D), gender(A, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then return 0.5560561234525557;  // std dev = 0,459, 1.099,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=767 */
%   | | else if ( educationconcentration(A, G), educationschool(A, H) )
%   | | | then return 0.06467067422994731;  // std dev = 6,725, 276,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=57 */
%   | | | else return 0.3633425139474774;  // std dev = 16,270, 1.059,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=535 */
%   | else return 0.5541271218752402;  // std dev = 0,460, 1.467,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=1.021 */
%   else if ( educationconcentration(B, I), educationconcentration(A, J) )
%   | then if ( location(B, K), location(A, K) )
%   | | then return 0.7581489350995125;  // std dev = 0,300, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else if ( educationconcentration(B, J), locale(B, L) )
%   | | | then return 0.511995088945665;  // std dev = 3,431, 52,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | | | else return 0.24877393509951334;  // std dev = 5,520, 128,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=50 */
%   | else if ( hometown(B, M), languages(B, N) )
%   | | then return 0.3566009474834093;  // std dev = 0,500, 323,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=161 */
%   | | else return 0.16447475832307765;  // std dev = 0,461, 2.308,000 (wgt'ed) examples reached here.  /* #neg=1.601 #pos=707 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( lastname(B, F), location(B, G) )
%   | | then if ( educationconcentration(B, H), gender(A, I) )
%   | | | then return 0.22916374064911305;  // std dev = 3,232, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.6012971018193272;  // std dev = 2,149, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | else return 0.09442053820280913;  // std dev = 0,454, 279,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=83 */
%   | else if ( educationyear(B, J), educationtype(A, K) )
%   | | then if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.511116154802649;  // std dev = 13,662, 958,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=704 */
%   | | | else return 0.22059486825878108;  // std dev = 14,258, 860,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=345 */
%   | | else return 0.478183206166109;  // std dev = 0,460, 1.729,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=1.203 */
%   else if ( educationyear(A, M), educationyear(B, M) )
%   | then if ( educationschool(A, N), educationschool(B, N) )
%   | | then return 0.526445813291313;  // std dev = 0,449, 180,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=128 */
%   | | else return 0.18191379999287127;  // std dev = 0,476, 268,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=94 */
%   | else return 0.1548216586968543;  // std dev = 0,465, 2.423,000 (wgt'ed) examples reached here.  /* #neg=1.639 #pos=784 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationyear(B, D), educationconcentration(A, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then return 0.34708254397583843;  // std dev = 0,465, 469,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=310 */
%   | | else return 0.045708386831131924;  // std dev = 0,417, 295,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=67 */
%   | else if ( educationdegree(B, G), languages(B, H) )
%   | | then if ( hometown(B, I), lastname(B, J) )
%   | | | then return 0.2726242625623239;  // std dev = 5,171, 113,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
%   | | | else return 0.05424742430872868;  // std dev = 4,904, 120,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else return 0.3624354187010736;  // std dev = 0,468, 2.904,000 (wgt'ed) examples reached here.  /* #neg=993 #pos=1.911 */
%   else if ( educationtype(B, K), educationyear(A, L) )
%   | then if ( educationconcentration(A, M), birthday(B, N) )
%   | | then return 0.09794509281120722;  // std dev = 0,443, 354,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=108 */
%   | | else if ( educationdegree(B, P), location(B, Q) )
%   | | | then return 0.0668518733926642;  // std dev = 5,578, 167,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=48 */
%   | | | else return 0.25919511336089984;  // std dev = 15,910, 1.044,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=479 */
%   | else return 0.09435117544031826;  // std dev = 0,448, 1.306,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=371 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.4057932433860379;  // std dev = 0,427, 647,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=486 */
%   else if ( locale(B, D), locale(A, D) )
%   | then if ( lastname(B, E), birthday(B, F) )
%   | | then if ( educationconcentration(A, G), hometown(B, H) )
%   | | | then return 0.05692429266388428;  // std dev = 3,125, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.36524442165317367;  // std dev = 9,688, 501,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=364 */
%   | | else if ( workenddate(B, I), educationconcentration(A, J) )
%   | | | then return -0.0413043069075352;  // std dev = 3,737, 99,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | | | else return 0.2282786465419094;  // std dev = 25,155, 2.800,000 (wgt'ed) examples reached here.  /* #neg=1.161 #pos=1.639 */
%   | else if ( languages(A, K), educationdegree(A, L) )
%   | | then if ( birthday(B, M), birthday(A, M) )
%   | | | then return 0.5616681756912545;  // std dev = 2,813, 49,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=39 */
%   | | | else return 0.1938904784749888;  // std dev = 7,559, 236,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=100 */
%   | | else if ( birthday(B, N), birthday(A, N) )
%   | | | then return 0.2714997436463912;  // std dev = 6,535, 179,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=91 */
%   | | | else return 0.06718302126511291;  // std dev = 20,961, 2.217,000 (wgt'ed) examples reached here.  /* #neg=1.587 #pos=630 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( gender(B, D) )
%   | then return 0.3238080155953859;  // std dev = 0,420, 630,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=480 */
%   | else return -0.12330095632604472;  // std dev = 0,468, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( educationdegree(B, F), birthday(B, G) )
%   | | then if ( languages(B, H), educationconcentration(B, I) )
%   | | | then return -0.12341139713247172;  // std dev = 2,871, 50,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.19393038683589311;  // std dev = 8,054, 279,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=158 */
%   | | else if ( birthday(A, J), birthday(B, J) )
%   | | | then return 0.4827623383664932;  // std dev = 3,027, 123,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=113 */
%   | | | else return 0.2812132924993633;  // std dev = 16,675, 1.374,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=935 */
%   | else if ( educationschool(B, K), location(A, L) )
%   | | then return -0.06033926333591717;  // std dev = 0,393, 975,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=208 */
%   | | else if ( educationschool(B, M), educationschool(A, N) )
%   | | | then return 0.07010695333504925;  // std dev = 16,293, 1.214,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=429 */
%   | | | else return 0.15710989423540583;  // std dev = 21,541, 2.110,000 (wgt'ed) examples reached here.  /* #neg=1.063 #pos=1.047 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationyear(B, D), educationschool(A, E) )
%   | then if ( lastname(B, F), educationschool(B, E) )
%   | | then return 0.2288780253790716;  // std dev = 0,414, 497,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=380 */
%   | | else if ( educationschool(B, E), educationconcentration(B, G) )
%   | | | then return 0.22857939542982592;  // std dev = 7,325, 318,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=237 */
%   | | | else return 0.04403066408077797;  // std dev = 16,441, 1.202,000 (wgt'ed) examples reached here.  /* #neg=701 #pos=501 */
%   | else if ( workenddate(B, H), hometown(B, I) )
%   | | then return -0.15842902117108162;  // std dev = 0,449, 82,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | else return 0.19821205277740708;  // std dev = 0,450, 1.802,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=1.239 */
%   else if ( workemployer(B, J), workstartdate(B, K) )
%   | then if ( worklocation(B, L) )
%   | | then if ( lastname(A, M), workenddate(B, N) )
%   | | | then return 0.4220292827897549;  // std dev = 1,664, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.022315866645648576;  // std dev = 2,287, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else return 0.6900413085304397;  // std dev = 0,265, 40,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else return 0.06921312787594418;  // std dev = 0,450, 2.784,000 (wgt'ed) examples reached here.  /* #neg=1.837 #pos=947 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationdegree(B, D), languages(B, E) )
%   | then return -0.020232979511117383;  // std dev = 0,450, 354,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=128 */
%   | else if ( educationyear(A, F), workemployer(A, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.06292651599619965;  // std dev = 5,267, 131,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=79 */
%   | | | else return -0.2644732554849092;  // std dev = 2,928, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( workenddate(B, I), worklocation(B, J) )
%   | | | then return -0.1701317265397808;  // std dev = 3,088, 73,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.14080131273200772;  // std dev = 25,856, 3.300,000 (wgt'ed) examples reached here.  /* #neg=1.147 #pos=2.153 */
%   else if ( workemployer(B, K), educationyear(B, L) )
%   | then if ( location(B, M), educationtype(A, N) )
%   | | then return 0.04116103390030022;  // std dev = 0,421, 78,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | else if ( lastname(B, P), educationdegree(A, Q) )
%   | | | then return -0.02944138448103607;  // std dev = 2,017, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.3839334884711958;  // std dev = 4,608, 118,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=86 */
%   | else return 0.050548110111436555;  // std dev = 0,447, 2.656,000 (wgt'ed) examples reached here.  /* #neg=1.771 #pos=885 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(B, C), workenddate(A, D) )
%   then if ( educationconcentration(A, E) )
%   | then if ( location(B, F), hometown(A, G) )
%   | | then if ( workstartdate(B, H), workstartdate(A, H) )
%   | | | then return 0.3702787749723111;  // std dev = 1,210, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.2101611241979643;  // std dev = 1,258, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( educationschool(B, I), educationdegree(B, J) )
%   | | | then return 0.0982796582925012;  // std dev = 2,290, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.4620197370935328;  // std dev = 1,490, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else return -0.1713959747557704;  // std dev = 0,377, 120,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=26 */
%   else if ( location(B, K), location(A, K) )
%   | then return 0.18243469971973283;  // std dev = 0,424, 637,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=480 */
%   | else if ( location(A, L), educationyear(B, M) )
%   | | then return 0.003231311358404963;  // std dev = 0,422, 1.312,000 (wgt'ed) examples reached here.  /* #neg=827 #pos=485 */
%   | | else if ( lastname(B, N), educationyear(B, P) )
%   | | | then return 0.12868582181782698;  // std dev = 14,571, 1.023,000 (wgt'ed) examples reached here.  /* #neg=464 #pos=559 */
%   | | | else return 0.06656036633842308;  // std dev = 27,553, 3.612,000 (wgt'ed) examples reached here.  /* #neg=1.809 #pos=1.803 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(B, C), locale(B, D) )
%   then if ( educationschool(A, E), educationschool(B, E) )
%   | then return 0.15106066791025796;  // std dev = 0,430, 983,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=695 */
%   | else if ( educationschool(A, F), educationschool(B, G) )
%   | | then return -0.07926677006097566;  // std dev = 0,411, 555,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=133 */
%   | | else if ( languages(B, H), locale(A, D) )
%   | | | then return 0.03000634055570814;  // std dev = 4,398, 86,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=38 */
%   | | | else return 0.19725421461316797;  // std dev = 8,632, 363,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=234 */
%   else if ( workenddate(A, I), educationschool(B, J) )
%   | then if ( location(B, K), educationdegree(B, L) )
%   | | then return -0.277040886424103;  // std dev = 0,280, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( educationyear(B, M), workstartdate(A, N) )
%   | | | then return 0.22371621731131788;  // std dev = 8,547, 330,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=215 */
%   | | | else return 0.06152891352792089;  // std dev = 5,388, 142,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=74 */
%   | else if ( educationyear(B, P), educationconcentration(A, Q) )
%   | | then return -0.07748581154026261;  // std dev = 0,386, 740,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=203 */
%   | | else return 0.04873243197897444;  // std dev = 0,453, 3.554,000 (wgt'ed) examples reached here.  /* #neg=1.761 #pos=1.793 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(B, C), educationconcentration(A, C) )
%   then if ( educationdegree(B, D), languages(B, E) )
%   | then if ( educationdegree(A, F), educationschool(B, G) )
%   | | then return -0.28273352088721293;  // std dev = 0,390, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( birthday(A, H), hometown(A, I) )
%   | | | then return 0.545365028582599;  // std dev = 0,364, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.018315160210224956;  // std dev = 1,109, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.19587503383096005;  // std dev = 0,401, 218,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=171 */
%   else if ( educationyear(B, J), educationconcentration(A, K) )
%   | then return -0.009099209122393401;  // std dev = 0,418, 1.204,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=452 */
%   | else if ( educationconcentration(A, L), educationschool(A, M) )
%   | | then if ( educationschool(B, M) )
%   | | | then return 0.21744371455958458;  // std dev = 6,103, 262,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=214 */
%   | | | else return 0.05174338045646747;  // std dev = 10,154, 476,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=249 */
%   | | else if ( educationschool(B, N), educationschool(A, N) )
%   | | | then return 0.11582759843025452;  // std dev = 15,576, 1.288,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=888 */
%   | | | else return 0.00778160095536943;  // std dev = 26,094, 3.292,000 (wgt'ed) examples reached here.  /* #neg=1.891 #pos=1.401 */


Results
   AUC ROC   = 0.576998
   AUC PR    = 0.57149
   CLL	      = -0.704315
   Precision = 0.540467 at threshold = 0.5
   Recall    = 0.648007
   F1        = 0.589372


Total learning time: 244.099 seconds
Total inference time: 5.38 seconds
AUC ROC: 0.576998


Dataset: 48_twitter_facebook, Fold: 2, Type: scratch, Time: 01:37:49
{'Learning time': 244.099, 'AUC PR': 0.57149, 'F1': 0.589372, 'AUC ROC': 0.576998, 'CLL': -0.704315, 'Inference time': 5.38, 'Precision': [0.540467, 0.5], 'Recall': 0.648007}


Starting fold 3

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.061434268951416016
   Generating paths time   = 3.3566370010375977
   Generating mappings time   = 0.3088653087615967
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 3.7269461154937744


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationtype(A,B)', 'accounttype(A,B) -> firstname(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
0;true,false;educationtype(A, E).;false;true
0;true,false,false;educationtype(B, F).;false;false
0;false,false,true;educationtype(B, I).;false;false
0;false;educationtype(B, G), educationtype(A, G).;false;true
0;false,false,false;educationtype(B, J).;false;false
0;false,false;educationtype(A, H).;true;true
0;true;educationtype(A, D), educationtype(B, D).;false;true
1;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
1;true,false;educationtype(A, E).;false;true
1;true,false,false;educationtype(B, F).;false;false
1;false,false,true;educationtype(B, I).;false;false
1;false;educationtype(A, G), educationtype(B, G).;false;true
1;false,false,false;educationtype(B, J).;false;false
1;false,false;educationtype(A, H).;true;true
1;true;educationtype(B, D), educationtype(A, D).;false;true
2;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
2;true,false;educationtype(A, E), educationtype(B, F).;false;true
2;true,false,false;educationtype(B, G).;false;false
2;false,false,true;educationtype(B, J).;false;false
2;false;educationtype(B, H), educationtype(A, H).;false;true
2;false,false,false;educationtype(B, K).;false;false
2;false,false;educationtype(A, I).;true;true
2;true;educationtype(B, D), educationtype(A, D).;false;true
3;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
3;true,false;educationtype(B, E), educationtype(A, F).;false;true
3;true,false,false;educationtype(B, G).;false;false
3;false,false,true;educationtype(B, J).;false;false
3;false;educationtype(A, H), educationtype(B, H).;false;true
3;false,false,false;educationtype(B, K).;false;false
3;false,false;educationtype(A, I).;true;true
3;true;educationtype(B, D), educationtype(A, D).;false;true
4;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
4;true,false;educationtype(A, E), educationtype(B, F).;false;true
4;true,false,false;educationtype(B, G).;false;false
4;false,false,true;educationtype(B, J).;false;false
4;false;educationtype(A, H), educationtype(B, H).;false;true
4;false,false,false;educationtype(B, K).;false;false
4;false,false;educationtype(A, I).;true;true
4;true;educationtype(B, D), educationtype(A, D).;false;true
5;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
5;true,false;educationtype(A, E), educationtype(B, F).;false;true
5;true,false,false;educationtype(B, G).;false;false
5;false,false,true;educationtype(B, J).;false;false
5;false;educationtype(A, H), educationtype(B, H).;false;true
5;false,false,false;educationtype(B, K).;false;false
5;false,false;educationtype(A, I).;true;true
5;true;educationtype(A, D), educationtype(B, D).;false;true
6;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
6;true,false;educationtype(A, E), educationtype(B, F).;false;true
6;true,false,false;educationtype(B, G).;false;false
6;false,false,true;educationtype(B, J).;false;false
6;false;educationtype(B, H), educationtype(A, H).;false;true
6;false,false,false;educationtype(B, K).;false;false
6;false,false;educationtype(A, I).;true;true
6;true;educationtype(A, D), educationtype(B, D).;false;true
7;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
7;true,false;educationtype(B, E), educationtype(A, F).;false;true
7;true,false,false;educationtype(B, G).;false;false
7;false,false,true;educationtype(B, J).;false;false
7;false;educationtype(A, H), educationtype(B, H).;false;true
7;false,false,false;educationtype(B, K).;false;false
7;false,false;educationtype(A, I).;true;true
7;true;educationtype(B, D), educationtype(A, D).;false;true
8;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
8;true,false;educationtype(A, E), educationtype(B, F).;false;true
8;true,false,false;educationtype(B, G).;false;false
8;false,false,true;educationtype(B, J).;false;false
8;false;educationtype(A, H), educationtype(B, H).;false;true
8;false,false,false;educationtype(B, K).;false;false
8;false,false;educationtype(A, I).;true;true
8;true;educationtype(A, D), educationtype(B, D).;false;true
9;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true
9;true,false;educationtype(A, E), educationtype(B, F).;false;true
9;true,false,false;educationtype(B, G).;false;false
9;false,false,true;educationtype(B, J).;false;false
9;false;educationtype(B, H), educationtype(A, H).;false;true
9;false,false,false;educationtype(B, K).;false;false
9;false,false;educationtype(A, I).;true;true
9;true;educationtype(A, D), educationtype(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.36371010800142844;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.12566485866639054;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.372063591871307;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.36702829823484107;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.34423731480490843;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5580193346218546;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.3134406352782979;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.10966887608690734;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.32049423737690114;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.3162432822129565;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.29697211256819966;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.44194861002444086;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.26007801466559044;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.09453783589912806;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.26556660230834106;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2622607308727106;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.24720126583799315;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.335411394950943;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.20880049377136514;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.08059282944206136;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.21277474206645441;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.21038286466634365;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.1994136536590798;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25176837314502193;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.16346587593813885;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06803401753911975;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.16620020612980466;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.16455561917181954;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.1569701009744415;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19047961032437172;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.12578653305334506;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.056947345783579566;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.12761671468175137;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.12651606032248733;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.12143085317268901;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.14620194507639933;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.09574330208071118;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04732502147393409;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.0969591310691665;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.0962274305455089;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.09286305025251125;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11389369465607464;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.0724024337140324;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.039091498782752546;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.0732154318431486;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07272534872406093;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.0705003360060797;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08989956180301868;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.05454668868787603;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03212871857084946;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.05509847525072671;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05476498394486186;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.05328225855704525;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationtype(B, G) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07174810215160456;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.041008087252322314;  // std dev = 22,236, 1.978,000 (wgt'ed) examples reached here.  /* #neg=978 #pos=1.000 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.026297112840132076;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.04138966976425391;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.041158253006797034;  // std dev = 20,202, 1.633,000 (wgt'ed) examples reached here.  /* #neg=802 #pos=831 */
%   | | | else return 0.040158382334416376;  // std dev = 17,472, 1.222,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=594 */


Results
   AUC ROC   = 0.504144
   AUC PR    = 0.503223
   CLL	      = -0.693496
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.000648
   F1        = 0.001295


Total learning time: 77.911 seconds
Total inference time: 4.619 seconds
AUC ROC: 0.504144


Structure after Parameter Learning
[['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [2.11e-08, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [2.11e-08, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [7.45e-09, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [5.27e-09, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}], ['edge(A, B)', {'': 'firstname(A, C), firstname(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 6], 'false,true': [22.236, 978, 1000], 'false,false,true,true': [5.547, 115, 42], 'false,false,false,false': [17.472, 628, 594], 'false,false,true,false': [20.098, 786, 831], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [20.202, 802, 831], 'true,false,false,false': [1.265, 2, 8]}]]
[{'': [0.14532871972318315, 0.24999930702632855], 'false': [0.2499690733559789, 0.2499872944483139], 'true,false,false': [0.0, 0.15999999999999986], 'false,false,true': [0.19595115420503992, 0.249806382326946], 'true,false': [nan, 0.19834710743801634], 'false,false,false': [0.24992115691033392, 0.24980646682077107], 'false,false': [0.24993771996611264, 0.24999923322523612], 'true': [-1.4802973661668753e-16, 0.19834710743801634]}, {'': [0.13051416695828055, 0.24962479305088028], 'false': [0.24996907335597246, 0.24945943736038123], 'true,false,false': [0.0, 0.1600000000000001], 'false,false,true': [0.19595115420503972, 0.24980638232689784], 'true,false': [nan, 0.18405975228052246], 'false,false,false': [0.24992115691030992, 0.24980646682078042], 'false,false': [0.248625651243812, 0.24996298753683838], 'true': [7.401486830834377e-17, 0.18405975228052246]}, {'': [0.11667375441155088, 0.24927448002572697], 'false': [0.24996907335591537, 0.24896569317468326], 'true,false,false': [0.0, 0.15999999999999998], 'false,false,true': [0.19595115420503878, 0.2498063823269354], 'true,false': [nan, 0.17084377497226047], 'false,false,false': [0.24992115691032185, 0.24980646682078145], 'false,false': [0.2473997772130496, 0.24992758903335488], 'true': [-7.401486830834377e-17, 0.17084377497226047]}, {'': [0.10771991105613987, 0.2490034120984947], 'false': [0.2499690733559339, 0.24858364995692656], 'true,false,false': [0.0, 0.16000000000000011], 'false,false,true': [0.19595115420503847, 0.2498063823269186], 'true,false': [nan, 0.16123766539001336], 'false,false,false': [0.2499211569102999, 0.24980646682079397], 'false,false': [0.2464496039944965, 0.24990152464582877], 'true': [7.401486830834377e-17, 0.16123766539001336]}, {'': [0.10275823360249736, 0.24882366388316537], 'false': [0.24996907335596324, 0.24833031767275635], 'true,false,false': [0.0, 0.16], 'false,false,true': [0.1959511542050383, 0.24980638232692318], 'true,false': [nan, 0.1552605330594626], 'false,false,false': [0.24992115691030445, 0.24980646682076688], 'false,false': [0.24581753163733377, 0.2498861540495982], 'true': [-3.700743415417188e-17, 0.1552605330594626]}, {'': [0.1000210169661229, 0.24871750792978073], 'false': [0.24996907335595647, 0.2481807012650553], 'true,false,false': [0.0, 0.16], 'false,false,true': [0.19595115420503753, 0.24980638232691071], 'true,false': [nan, 0.15173478019161227], 'false,false,false': [0.2499211569103138, 0.24980646682077134], 'false,false': [0.245443034223133, 0.24987839799809639], 'true': [9.25185853854297e-18, 0.15173478019161227]}, {'': [0.09843608012269159, 0.24865978665604274], 'false': [0.24996907335594232, 0.24809934285937854], 'true,false,false': [0.0, 0.15999999999999998], 'false,false,true': [0.19595115420503967, 0.24980638232693747], 'true,false': [nan, 0.14963763763364207], 'false,false,false': [0.24992115691029285, 0.24980646682078694], 'false,false': [0.24523889404185753, 0.24987483826163082], 'true': [-9.25185853854297e-18, 0.14963763763364207]}, {'': [0.09745992398798635, 0.24863020461293345], 'false': [0.24996907335595814, 0.2480576419229004], 'true,false,false': [0.0, 0.16000000000000003], 'false,false,true': [0.1959511542050397, 0.24980638232692126], 'true,false': [nan, 0.1483488718855028], 'false,false,false': [0.249921156910315, 0.24980646682078111], 'false,false': [0.24513409780155387, 0.24987327916274427], 'true': [4.625929269271485e-18, 0.1483488718855028]}, {'': [0.09682054151612256, 0.24861571860018652], 'false': [0.24996907335595447, 0.24803721838175594], 'true,false,false': [0.0, 0.15999999999999998], 'false,false,true': [0.19595115420503906, 0.24980638232693075], 'true,false': [nan, 0.14752622257493084], 'false,false,false': [0.249921156910305, 0.24980646682078098], 'false,false': [0.24508272561398456, 0.2498726053700939], 'true': [-4.625929269271485e-18, 0.14752622257493084]}, {'': [0.09637738365897709, 0.2486089036448976], 'false': [0.24996907335595656, 0.24802760848353417], 'true,false,false': [0.0, 0.15999999999999998], 'false,false,true': [0.1959511542050383, 0.24980638232692143], 'true,false': [nan, 0.1469817907350812], 'false,false,false': [0.2499211569103005, 0.24980646682078592], 'false,false': [0.24505853931130953, 0.24987231189739653], 'true': [0.0, 0.1469817907350812]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '0;true,false;educationtype(B, F).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '1;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '1;true,false;educationtype(B, F).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '2;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '2;true,false;educationtype(B, G).;true;true', '2;true;educationtype(B, D), educationtype(A, D).;true;true', '3;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '3;true,false;educationtype(B, G).;true;true', '3;true;educationtype(B, D), educationtype(A, D).;true;true', '4;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '4;true,false;educationtype(B, G).;true;true', '4;true;educationtype(B, D), educationtype(A, D).;true;true', '5;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '5;true,false;educationtype(B, G).;true;true', '5;true;educationtype(A, D), educationtype(B, D).;true;true', '6;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '6;true,false;educationtype(B, G).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '7;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '7;true,false;educationtype(B, G).;true;true', '7;true;educationtype(B, D), educationtype(A, D).;true;true', '8;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '8;true,false;educationtype(B, G).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '9;;edge(A, B) :- firstname(A, C), firstname(B, C).;true;true', '9;true,false;educationtype(B, G).;true;true', '9;true;educationtype(A, D), educationtype(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( locale(A, F), locale(B, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( educationclasses(B, G) )
%   | then return 0.6832314433503336;  // std dev = 0,380, 303,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=250 */
%   | else if ( educationschool(B, H), educationschool(A, H) )
%   | | then if ( hometown(B, I), locale(A, J) )
%   | | | then return 0.5424990677255029;  // std dev = 9,024, 377,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=258 */
%   | | | else return 0.3816497454722794;  // std dev = 12,406, 617,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=323 */
%   | | else if ( educationschool(A, K), educationtype(B, L) )
%   | | | then return 0.16429550720352648;  // std dev = 13,406, 846,000 (wgt'ed) examples reached here.  /* #neg=587 #pos=259 */
%   | | | else return 0.3527725910134858;  // std dev = 33,405, 4.464,000 (wgt'ed) examples reached here.  /* #neg=2.256 #pos=2.208 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49330548889817033;  // std dev = 0,407, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( educationclasses(B, E) )
%   | then if ( educationwith(B, F), location(B, G) )
%   | | then return 0.6325834559217366;  // std dev = 0,326, 149,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=131 */
%   | | else if ( gender(A, H), gender(B, H) )
%   | | | then return 0.5995426712030972;  // std dev = 3,187, 78,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=66 */
%   | | | else return 0.45075724610188317;  // std dev = 4,005, 76,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   | else if ( lastname(B, I), educationtype(B, J) )
%   | | then if ( educationschool(B, K), firstname(A, L) )
%   | | | then return 0.34848012419459623;  // std dev = 1,807, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.02830255774383097;  // std dev = 5,281, 170,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=36 */
%   | | else if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.3928807253740903;  // std dev = 15,083, 953,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=570 */
%   | | | else return 0.2849252340377171;  // std dev = 35,801, 5.168,000 (wgt'ed) examples reached here.  /* #neg=2.733 #pos=2.435 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then return 0.4521778660376166;  // std dev = 0,329, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( hometown(B, D), location(B, E) )
%   | then if ( lastname(B, F), gender(A, G) )
%   | | then if ( gender(B, G) )
%   | | | then return 0.22327619189451187;  // std dev = 2,099, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.133397354011104;  // std dev = 1,358, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( birthday(B, H) )
%   | | | then return 0.21342803913731487;  // std dev = 7,164, 223,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=108 */
%   | | | else return 0.42165116232260513;  // std dev = 12,258, 749,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=525 */
%   | else if ( educationyear(B, I), locale(B, J) )
%   | | then if ( educationschool(B, K), gender(B, L) )
%   | | | then return 0.23224906297845163;  // std dev = 14,924, 904,000 (wgt'ed) examples reached here.  /* #neg=476 #pos=428 */
%   | | | else return -0.028008075991174487;  // std dev = 6,492, 276,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=53 */
%   | | else if ( lastname(B, M) )
%   | | | then return 0.13690967707994178;  // std dev = 9,290, 379,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=138 */
%   | | | else return 0.2643579442477103;  // std dev = 31,561, 4.026,000 (wgt'ed) examples reached here.  /* #neg=1.990 #pos=2.036 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.442801437863873;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationtype(B, E) )
%   | | then return -0.26965617202013403;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( locale(A, F), locale(B, F) )
%   | | | then return 0.12160535064146294;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.49909192848956413;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( lastname(B, G), lastname(A, G) )
%   | then return 0.757528401365545;  // std dev = 0,154, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( hometown(B, H), location(B, I) )
%   | | then if ( workstartdate(B, J), educationyear(B, K) )
%   | | | then return -0.14481592426225903;  // std dev = 2,474, 54,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | | else return 0.30263045913839515;  // std dev = 14,129, 966,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=634 */
%   | | else if ( location(B, L), educationyear(B, M) )
%   | | | then return 0.056090514585962085;  // std dev = 9,003, 380,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=124 */
%   | | | else return 0.19770400360392365;  // std dev = 35,607, 5.183,000 (wgt'ed) examples reached here.  /* #neg=2.674 #pos=2.509 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then return 0.26114056128181734;  // std dev = 0,293, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( educationclasses(B, D) )
%   | then if ( lastname(A, E) )
%   | | then if ( educationyear(A, F), location(B, G) )
%   | | | then return 0.45496754952801466;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08255716109308957;  // std dev = 1,407, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( workemployer(A, H) )
%   | | | then return -0.5197179138761028;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.32810435735423993;  // std dev = 6,069, 286,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=241 */
%   | else if ( firstname(B, I) )
%   | | then if ( hometown(B, J), gender(A, K) )
%   | | | then return 0.07777399497348725;  // std dev = 5,073, 114,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=50 */
%   | | | else return 0.2578633198018665;  // std dev = 10,663, 479,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=280 */
%   | | else if ( educationwith(B, L), location(A, M) )
%   | | | then return 0.33165139818728073;  // std dev = 4,124, 78,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return 0.1430153508176238;  // std dev = 36,821, 5.633,000 (wgt'ed) examples reached here.  /* #neg=2.968 #pos=2.665 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.2821661178467083;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15930581351241743;  // std dev = 0,357, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( lastname(B, E), gender(A, F) )
%   | then if ( lastname(A, E) )
%   | | then return 0.5608673493943038;  // std dev = 0,216, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( hometown(B, G), gender(B, F) )
%   | | | then return 0.1441895970477726;  // std dev = 3,851, 62,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   | | | else return -0.035628769891737105;  // std dev = 8,337, 370,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=100 */
%   | else if ( educationclasses(B, H) )
%   | | then if ( educationyear(A, I), firstname(A, J) )
%   | | | then return 0.4075519129358463;  // std dev = 0,132, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.22868289824130075;  // std dev = 6,373, 294,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=241 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.11211035364458048;  // std dev = 27,950, 3.293,000 (wgt'ed) examples reached here.  /* #neg=1.708 #pos=1.585 */
%   | | | else return 0.1442238391635114;  // std dev = 25,190, 2.555,000 (wgt'ed) examples reached here.  /* #neg=1.245 #pos=1.310 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then return 0.16069295397978403;  // std dev = 0,292, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( location(B, D), hometown(B, E) )
%   | then if ( educationtype(B, F) )
%   | | then if ( birthday(B, G), languages(B, H) )
%   | | | then return -0.09890332670687979;  // std dev = 3,507, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.14482111727524105;  // std dev = 13,398, 909,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=581 */
%   | | else if ( educationyear(A, I), hometown(A, E) )
%   | | | then return -0.017931469710897183;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.40718930323596286;  // std dev = 2,284, 46,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else if ( educationyear(B, J), educationconcentration(B, K) )
%   | | then if ( languages(B, L), educationtype(A, M) )
%   | | | then return 0.4719273122523849;  // std dev = 1,304, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.2515891804937308;  // std dev = 5,301, 119,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=75 */
%   | | else if ( educationyear(B, N), location(B, P) )
%   | | | then return -0.0638898318135438;  // std dev = 8,016, 335,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=91 */
%   | | | else return 0.09023060349596383;  // std dev = 35,127, 5.106,000 (wgt'ed) examples reached here.  /* #neg=2.640 #pos=2.466 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then return 0.12853919271646208;  // std dev = 0,294, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( educationschool(B, D), educationschool(A, D) )
%   | then if ( educationwith(B, E) )
%   | | then if ( workenddate(A, F), location(A, G) )
%   | | | then return -0.06809111857941683;  // std dev = 1,964, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.2630054051953283;  // std dev = 4,107, 153,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else if ( hometown(B, H), educationclasses(A, I) )
%   | | | then return 0.2604692937024474;  // std dev = 3,288, 67,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=53 */
%   | | | else return 0.0980404008923394;  // std dev = 14,422, 901,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=511 */
%   | else if ( educationtype(B, J), educationschool(A, K) )
%   | | then if ( birthday(B, L), birthday(A, L) )
%   | | | then return 0.1393864382257198;  // std dev = 4,749, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return -0.06939544062920783;  // std dev = 12,183, 764,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=217 */
%   | | else if ( firstname(B, M), locale(A, N) )
%   | | | then return 0.1373368390111403;  // std dev = 10,551, 479,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=289 */
%   | | | else return 0.07397797500967859;  // std dev = 31,495, 4.132,000 (wgt'ed) examples reached here.  /* #neg=2.094 #pos=2.038 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then return 0.10408258266798691;  // std dev = 0,296, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( educationconcentration(B, D), educationyear(B, E) )
%   | then if ( birthday(A, F), firstname(A, G) )
%   | | then if ( birthday(B, H) )
%   | | | then return 0.02255242295136477;  // std dev = 1,245, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.4884131606566225;  // std dev = 0,266, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( lastname(B, I) )
%   | | | then return -0.07734609690496051;  // std dev = 1,971, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.17720815512493873;  // std dev = 7,559, 294,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=209 */
%   | else if ( educationtype(B, J), location(A, K) )
%   | | then if ( educationschool(B, L), locale(B, M) )
%   | | | then return 0.03889224446902528;  // std dev = 15,583, 1.092,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=552 */
%   | | | else return -0.10570005920689826;  // std dev = 5,841, 203,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=46 */
%   | | else if ( educationschool(B, N), educationschool(A, N) )
%   | | | then return 0.12950735565583107;  // std dev = 9,149, 397,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=259 */
%   | | | else return 0.05245306421055729;  // std dev = 33,044, 4.585,000 (wgt'ed) examples reached here.  /* #neg=2.363 #pos=2.222 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( firstname(A, C), firstname(B, C) )
%   then return 0.08515860466548307;  // std dev = 0,298, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( lastname(B, D), gender(A, E) )
%   | then if ( educationtype(B, F), educationschool(A, G) )
%   | | then if ( educationconcentration(A, H), locale(A, I) )
%   | | | then return 0.3636858173876728;  // std dev = 1,467, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.17670598810285765;  // std dev = 2,539, 87,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=9 */
%   | | else if ( lastname(A, D) )
%   | | | then return 0.362756401209594;  // std dev = 0,168, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.027256706057574496;  // std dev = 8,555, 337,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=115 */
%   | else if ( educationyear(B, J), educationconcentration(B, K) )
%   | | then if ( locale(B, L), languages(A, M) )
%   | | | then return -0.04353147009773747;  // std dev = 2,416, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.139324536485279;  // std dev = 7,327, 278,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=198 */
%   | | else if ( educationyear(B, N), location(A, P) )
%   | | | then return -0.007932857596272136;  // std dev = 11,244, 595,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=257 */
%   | | | else return 0.04823652510032282;  // std dev = 35,243, 5.252,000 (wgt'ed) examples reached here.  /* #neg=2.576 #pos=2.676 */


Results
   AUC ROC   = 0.604574
   AUC PR    = 0.596364
   CLL	      = -0.686664
   Precision = 0.640547 at threshold = 0.5
   Recall    = 0.333838
   F1        = 0.43892


Total learning time: 129.857 seconds
Total inference time: 4.37 seconds
AUC ROC: 0.604574


Refined model AUC ROC: 0.604574


Dataset: 48_twitter_facebook, Fold: 3, Type: transfer, Time: 01:41:30
{'Learning time': 207.768, 'AUC PR': 0.596364, 'F1': 0.43892, 'AUC ROC': 0.604574, 'CLL': -0.686664, 'Inference time': 4.37, 'Mapping results': {'Generating mappings time': 0.3088653087615967, 'Generating paths time': 3.3566370010375977, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.061434268951416016, 'Max mapping': 24389, 'Total time': 3.7269461154937744}, 'Parameter Learning results': {'Learning time': 77.911, 'AUC PR': 0.503223, 'F1': 0.001295, 'AUC ROC': 0.504144, 'CLL': -0.693496, 'Inference time': 4.619, 'Precision': [0.75, 0.5], 'Recall': 0.000648}, 'Precision': [0.640547, 0.5], 'Recall': 0.333838}


Start learning from scratch in target domain

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then return 0.6843784432962298;  // std dev = 0,379, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   else if ( educationschool(B, D), educationschool(A, D) )
%   | then if ( hometown(B, E), locale(A, F) )
%   | | then if ( workstartdate(B, G), location(B, H) )
%   | | | then return 0.058148935099512224;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.5633830948791231;  // std dev = 8,687, 363,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=256 */
%   | | else if ( birthday(B, I), locale(B, J) )
%   | | | then return 0.48052655747713097;  // std dev = 8,199, 286,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=178 */
%   | | | else return 0.2979079712440869;  // std dev = 9,044, 332,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=146 */
%   | else if ( educationschool(A, K), educationtype(B, L) )
%   | | then if ( birthday(B, M), birthday(A, M) )
%   | | | then return 0.3636434405940186;  // std dev = 4,769, 91,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=46 */
%   | | | else return 0.14216478714706568;  // std dev = 12,407, 757,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=215 */
%   | | else if ( hometown(B, N), location(B, P) )
%   | | | then return 0.467153674436001;  // std dev = 10,024, 422,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=257 */
%   | | | else return 0.34149460497367456;  // std dev = 31,814, 4.053,000 (wgt'ed) examples reached here.  /* #neg=2.094 #pos=1.959 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( hometown(B, D), locale(A, E) )
%   | then return 0.4965917073563858;  // std dev = 0,443, 474,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=343 */
%   | else if ( educationwith(B, F) )
%   | | then return 0.5928152391180027;  // std dev = 0,384, 77,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=63 */
%   | | else if ( firstname(B, G) )
%   | | | then return 0.5770025070805893;  // std dev = 3,089, 60,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return 0.29102695481187646;  // std dev = 11,504, 533,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=258 */
%   else if ( educationtype(B, H), educationschool(A, I) )
%   | then return 0.144393652258295;  // std dev = 0,461, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( hometown(B, J), location(B, K) )
%   | | then if ( lastname(B, L), gender(A, M) )
%   | | | then return -0.015140552243291432;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.4698985548822868;  // std dev = 10,222, 491,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=337 */
%   | | else if ( firstname(B, N) )
%   | | | then return 0.3974999815067261;  // std dev = 10,462, 453,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=267 */
%   | | | else return 0.2839448216167454;  // std dev = 30,142, 3.647,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=1.725 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then if ( educationwith(B, D), location(B, E) )
%   | then return 0.5355793847521556;  // std dev = 0,323, 150,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=132 */
%   | else return 0.4308180406222505;  // std dev = 0,412, 155,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=120 */
%   else if ( educationtype(B, F), lastname(B, G) )
%   | then if ( lastname(A, G) )
%   | | then return 0.7829537614820393;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( firstname(A, H), educationschool(B, I) )
%   | | | then return 0.3208365359448606;  // std dev = 1,782, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.04627661132458373;  // std dev = 4,618, 161,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=27 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( educationconcentration(B, K), educationclasses(A, L) )
%   | | | then return 0.6447169785600096;  // std dev = 0,908, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.31269584494270986;  // std dev = 14,799, 938,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=556 */
%   | | else if ( educationschool(A, M), educationyear(B, N) )
%   | | | then return 0.08695984482140474;  // std dev = 8,827, 398,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=108 */
%   | | | else return 0.25000638765665645;  // std dev = 34,409, 4.783,000 (wgt'ed) examples reached here.  /* #neg=2.446 #pos=2.337 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then if ( hometown(B, D) )
%   | then return 0.3960556915234132;  // std dev = 0,342, 204,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=176 */
%   | else return 0.30909453091191624;  // std dev = 0,423, 101,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=76 */
%   else if ( location(B, E), firstname(B, F) )
%   | then if ( educationconcentration(A, G), location(A, E) )
%   | | then return -0.174808345828668;  // std dev = 0,354, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( educationyear(B, H), locale(A, I) )
%   | | | then return 0.21826164315889052;  // std dev = 4,419, 88,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.4819001678155393;  // std dev = 3,730, 90,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=73 */
%   | else if ( educationtype(B, J) )
%   | | then if ( educationschool(B, K), gender(B, L) )
%   | | | then return 0.20090409686693234;  // std dev = 25,671, 2.767,000 (wgt'ed) examples reached here.  /* #neg=1.395 #pos=1.372 */
%   | | | else return 0.0306427924605856;  // std dev = 10,264, 546,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=149 */
%   | | else if ( birthday(B, M) )
%   | | | then return 0.08823191667324942;  // std dev = 8,002, 274,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=102 */
%   | | | else return 0.2280201923203145;  // std dev = 25,138, 2.542,000 (wgt'ed) examples reached here.  /* #neg=1.229 #pos=1.313 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, E), gender(B, D) )
%   | then return 0.4164243719394703;  // std dev = 0,403, 29,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | else if ( location(B, F), educationtype(B, G) )
%   | | then return -0.1243680215692649;  // std dev = 0,310, 65,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | else if ( educationtype(B, H), location(A, I) )
%   | | | then return -0.1119840801719067;  // std dev = 1,976, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | | else return 0.060070203189897226;  // std dev = 8,559, 318,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=118 */
%   else if ( educationyear(B, J), educationconcentration(B, K) )
%   | then if ( educationyear(A, J), birthday(A, L) )
%   | | then return 0.006025745488667823;  // std dev = 0,450, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.30114519308094184;  // std dev = 0,443, 291,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=207 */
%   | else if ( educationwith(B, M), educationschool(A, N) )
%   | | then return 0.2920148179272142;  // std dev = 0,415, 252,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=186 */
%   | | else if ( location(B, P), birthday(B, Q) )
%   | | | then return 0.08692323982679279;  // std dev = 11,125, 559,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=237 */
%   | | | else return 0.16403639377484613;  // std dev = 34,861, 5.052,000 (wgt'ed) examples reached here.  /* #neg=2.529 #pos=2.523 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( hometown(B, C), location(B, D) )
%   then if ( birthday(B, E) )
%   | then return 0.04728849779342308;  // std dev = 0,462, 223,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=108 */
%   | else return 0.209131671574012;  // std dev = 0,438, 801,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=537 */
%   else if ( birthday(B, F), educationschool(B, G) )
%   | then if ( gender(B, H), locale(B, I) )
%   | | then if ( educationyear(B, J), hometown(B, K) )
%   | | | then return -0.0025466534726463737;  // std dev = 5,561, 143,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | | else return 0.20082148052706178;  // std dev = 15,264, 1.017,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=602 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.3190690473173457;  // std dev = 2,752, 48,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=37 */
%   | | | else return -0.12726459768682954;  // std dev = 3,831, 93,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | else if ( educationyear(B, M), location(B, N) )
%   | | then return -0.07790336786310717;  // std dev = 0,424, 255,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=63 */
%   | | else if ( hometown(B, P), educationtype(B, Q) )
%   | | | then return -0.036213879769061416;  // std dev = 6,188, 188,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=60 */
%   | | | else return 0.1188376358315262;  // std dev = 30,580, 3.856,000 (wgt'ed) examples reached here.  /* #neg=2.020 #pos=1.836 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( lastname(B, C), lastname(A, C) )
%   then return 0.5316444336542819;  // std dev = 0,076, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( lastname(B, D), gender(A, E) )
%   | then if ( gender(B, E), hometown(B, F) )
%   | | then if ( educationyear(A, G), hometown(A, F) )
%   | | | then return -0.052569871115110973;  // std dev = 1,689, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.1841069478693479;  // std dev = 3,323, 48,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | else if ( location(B, H), educationtype(B, I) )
%   | | | then return -0.23486427056940395;  // std dev = 1,008, 48,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | | | else return -0.026042912186570663;  // std dev = 8,114, 322,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=99 */
%   | else if ( educationschool(A, J), educationschool(B, J) )
%   | | then if ( educationwith(B, K), birthday(A, L) )
%   | | | then return 0.26711519198208455;  // std dev = 2,497, 77,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | | | else return 0.12901872579728862;  // std dev = 14,929, 1.026,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=631 */
%   | | else if ( educationtype(B, M), educationschool(A, N) )
%   | | | then return 0.0308449506689673;  // std dev = 12,982, 802,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=260 */
%   | | | else return 0.10475913470891085;  // std dev = 32,048, 4.263,000 (wgt'ed) examples reached here.  /* #neg=2.065 #pos=2.198 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, E) )
%   | then return 0.16200724226125574;  // std dev = 0,391, 51,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | else if ( educationconcentration(A, F), educationtype(B, G) )
%   | | then if ( birthday(A, H), hometown(A, I) )
%   | | | then return -0.24004448389528316;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.5139125086381187;  // std dev = 1,219, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.02961866493628842;  // std dev = 0,435, 391,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=114 */
%   else if ( workstartdate(B, J), workemployer(A, K) )
%   | then if ( workemployer(B, L) )
%   | | then return 0.6130526066479427;  // std dev = 0,059, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.08415622936215054;  // std dev = 1,347, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( workemployer(B, M), educationschool(B, N) )
%   | | then return -0.16362791185250883;  // std dev = 0,425, 91,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | else if ( hometown(B, P), location(B, Q) )
%   | | | then return 0.13158822168627807;  // std dev = 13,585, 944,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=632 */
%   | | | else return 0.07040860467870623;  // std dev = 34,856, 5.119,000 (wgt'ed) examples reached here.  /* #neg=2.625 #pos=2.494 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, C) )
%   | then return 0.36560494703623375;  // std dev = 0,070, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( educationtype(B, E), location(B, F) )
%   | | then return -0.1195607488083887;  // std dev = 0,285, 66,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=8 */
%   | | else if ( educationyear(A, G), hometown(A, H) )
%   | | | then return -0.0870662649711842;  // std dev = 3,515, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return 0.02019439938830231;  // std dev = 7,958, 288,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=104 */
%   else if ( educationclasses(B, I), location(B, J) )
%   | then return 0.13728354345532226;  // std dev = 0,359, 251,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=211 */
%   | else if ( workemployer(B, K), educationschool(B, L) )
%   | | then if ( educationyear(B, M), gender(A, N) )
%   | | | then return -0.32001650685337524;  // std dev = 1,361, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.0015221881537103303;  // std dev = 3,773, 69,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( lastname(A, P), educationyear(B, Q) )
%   | | | then return -0.04668419562003986;  // std dev = 4,564, 90,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | | | else return 0.05946434393850311;  // std dev = 36,709, 5.730,000 (wgt'ed) examples reached here.  /* #neg=2.846 #pos=2.884 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( lastname(B, C), educationtype(B, D) )
%   then return -0.03674663725171051;  // std dev = 0,355, 183,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=43 */
%   else if ( educationwith(B, E), birthday(A, F) )
%   | then if ( educationconcentration(A, G), location(A, H) )
%   | | then if ( educationclasses(B, I), location(B, J) )
%   | | | then return 0.20591309876077035;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3766871720364218;  // std dev = 0,808, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( location(A, K), gender(A, L) )
%   | | | then return 0.30804002965869204;  // std dev = 1,527, 32,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return 0.12489070706663423;  // std dev = 4,043, 100,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=74 */
%   | else if ( languages(B, M), locale(B, N) )
%   | | then if ( locale(A, P), educationyear(B, Q) )
%   | | | then return 0.025089485271698964;  // std dev = 10,261, 466,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=250 */
%   | | | else return -0.11932973758843587;  // std dev = 4,631, 101,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | else if ( hometown(B, R), location(B, S) )
%   | | | then return 0.09828118300579543;  // std dev = 11,305, 662,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=437 */
%   | | | else return 0.03898348104516828;  // std dev = 34,620, 5.069,000 (wgt'ed) examples reached here.  /* #neg=2.627 #pos=2.442 */


Results
   AUC ROC   = 0.588491
   AUC PR    = 0.581848
   CLL	      = -0.705329
   Precision = 0.629928 at threshold = 0.5
   Recall    = 0.245138
   F1        = 0.352932


Total learning time: 167.05599999999998 seconds
Total inference time: 5.686 seconds
AUC ROC: 0.588491


Dataset: 48_twitter_facebook, Fold: 3, Type: scratch, Time: 01:44:23
{'Learning time': 167.05599999999998, 'AUC PR': 0.581848, 'F1': 0.352932, 'AUC ROC': 0.588491, 'CLL': -0.705329, 'Inference time': 5.686, 'Precision': [0.629928, 0.5], 'Recall': 0.245138}


Starting fold 4

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.061273813247680664
   Generating paths time   = 2.469838857650757
   Generating mappings time   = 0.3196103572845459
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 2.8507323265075684


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> workstartdate(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;workstartdate(A, E).;false;true
0;true,false,false;workstartdate(B, F).;false;false
0;false,false,true;workstartdate(B, I).;false;false
0;false;workstartdate(B, G), workstartdate(A, G).;false;true
0;false,false,false;workstartdate(B, J).;false;false
0;false,false;workstartdate(A, H).;true;true
0;true;workstartdate(A, D), workstartdate(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;workstartdate(A, E).;false;true
1;true,false,false;workstartdate(B, F).;false;false
1;false,false,true;workstartdate(B, I).;false;false
1;false;workstartdate(A, G), workstartdate(B, G).;false;true
1;false,false,false;workstartdate(B, J).;false;false
1;false,false;workstartdate(A, H).;true;true
1;true;workstartdate(B, D), workstartdate(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
2;true,false,false;workstartdate(B, G).;false;false
2;false,false,true;workstartdate(B, J).;false;false
2;false;workstartdate(B, H), workstartdate(A, H).;false;true
2;false,false,false;workstartdate(B, K).;false;false
2;false,false;workstartdate(A, I).;true;true
2;true;workstartdate(B, D), workstartdate(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
3;true,false,false;workstartdate(B, G).;false;false
3;false,false,true;workstartdate(B, J).;false;false
3;false;workstartdate(A, H), workstartdate(B, H).;false;true
3;false,false,false;workstartdate(B, K).;false;false
3;false,false;workstartdate(A, I).;true;true
3;true;workstartdate(B, D), workstartdate(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
4;true,false,false;workstartdate(B, G).;false;false
4;false,false,true;workstartdate(B, J).;false;false
4;false;workstartdate(A, H), workstartdate(B, H).;false;true
4;false,false,false;workstartdate(B, K).;false;false
4;false,false;workstartdate(A, I).;true;true
4;true;workstartdate(B, D), workstartdate(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
5;true,false,false;workstartdate(B, G).;false;false
5;false,false,true;workstartdate(B, J).;false;false
5;false;workstartdate(A, H), workstartdate(B, H).;false;true
5;false,false,false;workstartdate(B, K).;false;false
5;false,false;workstartdate(A, I).;true;true
5;true;workstartdate(A, D), workstartdate(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
6;true,false,false;workstartdate(B, G).;false;false
6;false,false,true;workstartdate(B, J).;false;false
6;false;workstartdate(B, H), workstartdate(A, H).;false;true
6;false,false,false;workstartdate(B, K).;false;false
6;false,false;workstartdate(A, I).;true;true
6;true;workstartdate(A, D), workstartdate(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
7;true,false,false;workstartdate(B, G).;false;false
7;false,false,true;workstartdate(B, J).;false;false
7;false;workstartdate(A, H), workstartdate(B, H).;false;true
7;false,false,false;workstartdate(B, K).;false;false
7;false,false;workstartdate(A, I).;true;true
7;true;workstartdate(B, D), workstartdate(A, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
8;true,false,false;workstartdate(B, G).;false;false
8;false,false,true;workstartdate(B, J).;false;false
8;false;workstartdate(A, H), workstartdate(B, H).;false;true
8;false,false,false;workstartdate(B, K).;false;false
8;false,false;workstartdate(A, I).;true;true
8;true;workstartdate(A, D), workstartdate(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
9;true,false,false;workstartdate(B, G).;false;false
9;false,false,true;workstartdate(B, J).;false;false
9;false;workstartdate(B, H), workstartdate(A, H).;false;true
9;false,false,false;workstartdate(B, K).;false;false
9;false,false;workstartdate(A, I).;true;true
9;true;workstartdate(A, D), workstartdate(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.31163730719253474;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.20328167846234313;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3707843141608795;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.2693207666359965;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.1766919687929083;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3194144601811975;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.2192721473492705;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.22538327437598277;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.15047529101699852;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2647274309620466;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18329834068531892;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.12579863076005549;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2121681176147618;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14567465119319037;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.10350066688161849;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.16578340244836537;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.11159559999632969;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.11380054224247269;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.0840313245760623;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.127337790686589;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.08637026299843623;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08782929277813077;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.06749717972007446;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.0967735496209268;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.06628370899125427;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06722722400564961;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.05375937131738323;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.07309089181843874;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.05057564362187433;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.05117339744830586;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.04253623713021117;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.05501347412557899;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.038438849075129386;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.03880925454513463;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.03348509992607587;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.04133045510283158;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */


Results
   AUC ROC   = 0.514203
   AUC PR    = 0.533901
   CLL	      = -0.703391
   Precision = 0.81198 at threshold = 0.5
   Recall    = 0.040572
   F1        = 0.077282


Total learning time: 13.298 seconds
Total inference time: 4.922 seconds
AUC ROC: 0.514203


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [2.98e-08, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.98e-08, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [4.21e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.11e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}]]
[{'': [8.198570028001156e-16, 0.24984787328654107], 'false': [0.2469135802469134, 0.2498569171951113], 'true,false,false': [-1.4802973661668753e-16, -2.220446049250313e-16], 'false,false,true': [0.24000000000000007, 0.2478366684694443], 'true,false': [-8.881784197001253e-17, -2.5376526277146434e-16], 'false,false,false': [0.22601613282167884, 0.24984034719596596], 'false,false': [0.24703460445054465, 0.24994501400458694], 'true': [0.0, -1.4802973661668753e-16]}, {'': [-2.049642507000289e-16, 0.2490537134169054], 'false': [0.24691358024691354, 0.24906054778809908], 'true,false,false': [7.401486830834377e-17, 1.1102230246251565e-16], 'false,false,true': [0.2400000000000002, 0.24783666846944397], 'true,false': [8.881784197001253e-17, 1.9032394707859825e-16], 'false,false,false': [0.22601613282167818, 0.2498403471959809], 'false,false': [0.24693561030392105, 0.24913495569564448], 'true': [0.0, 7.401486830834377e-17]}, {'': [-3.416070845000482e-16, 0.24829641550673265], 'false': [0.24691358024691365, 0.24830125538627923], 'true,false,false': [-7.401486830834377e-17, -2.5376526277146434e-16], 'false,false,true': [0.2399999999999999, 0.2478366684694436], 'true,false': [0.0, -1.7763568394002506e-16], 'false,false,false': [0.2260161328216773, 0.24984034719597015], 'false,false': [0.24684141879858895, 0.24836401928314653], 'true': [0.0, -2.590520390792032e-16]}, {'': [-6.832141690000964e-17, 0.247718900150715], 'false': [0.2469135802469136, 0.24772210355630495], 'true,false,false': [7.401486830834377e-17, 1.2688263138573217e-16], 'false,false,true': [0.23999999999999988, 0.24783666846944252], 'true,false': [0.0, 1.1102230246251565e-16], 'false,false,false': [0.2260161328216772, 0.24984034719598452], 'false,false': [0.24676912396945397, 0.24777456880851043], 'true': [0.0, 1.4802973661668753e-16]}, {'': [1.708035422500241e-17, 0.24735131193734572], 'false': [0.2469135802469136, 0.24735331595587934], 'true,false,false': [-3.700743415417188e-17, -3.172065784643304e-17], 'false,false,true': [0.23999999999999988, 0.24783666846944286], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167848, 0.24984034719597975], 'false,false': [0.24672262599945718, 0.24739727027824354], 'true': [0.0, -3.700743415417188e-17]}, {'': [-8.540177112501205e-18, 0.24714701070999995], 'false': [0.2469135802469136, 0.24714824167944255], 'true,false,false': [9.25185853854297e-18, 3.172065784643304e-17], 'false,false,true': [0.24000000000000007, 0.2478366684694432], 'true,false': [0.0, 3.3306690738754695e-17], 'false,false,false': [0.22601613282167773, 0.24984034719597314], 'false,false': [0.24669658117682075, 0.24718613256012645], 'true': [0.0, 3.700743415417188e-17]}, {'': [1.708035422500241e-17, 0.24704385923665362], 'false': [0.2469135802469136, 0.24704464861561853], 'true,false,false': [-9.25185853854297e-18, -3.172065784643304e-17], 'false,false,true': [0.23999999999999996, 0.24783666846944277], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167762, 0.24984034719597487], 'false,false': [0.24668343241823093, 0.24707882506405376], 'true': [0.0, -2.7755575615628914e-17]}, {'': [-3.416070845000482e-17, 0.2469951568299833], 'false': [0.2469135802469136, 0.24699571833332412], 'true,false,false': [4.625929269271485e-18, 0.0], 'false,false,true': [0.23999999999999988, 0.24783666846944313], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167726, 0.2498403471959789], 'false,false': [0.24667729069983724, 0.24702788723139185], 'true': [0.0, 9.25185853854297e-18]}, {'': [-4.270088556250602e-18, 0.24697327025620003], 'false': [0.2469135802469136, 0.2469737237545382], 'true,false,false': [-4.625929269271485e-18, -1.9825411154020653e-17], 'false,false,true': [0.23999999999999985, 0.24783666846944233], 'true,false': [0.0, -2.7755575615628915e-18], 'false,false,false': [0.22601613282167798, 0.24984034719597234], 'false,false': [0.24667459264007158, 0.24700491282771714], 'true': [0.0, -4.625929269271485e-18]}, {'': [0.0, 0.24696383480224765], 'false': [0.2469135802469136, 0.24696424096503186], 'true,false,false': [0.0, 0.0], 'false,false,true': [0.23999999999999996, 0.24783666846944266], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167723, 0.2498403471959765], 'false,false': [0.24667347076552734, 0.24699499373270095], 'true': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;workstartdate(A, E).;true;true', '0;true,false,false;workstartdate(B, F).;true;true', '0;true;workstartdate(A, D), workstartdate(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;workstartdate(A, E).;true;true', '1;true,false,false;workstartdate(B, F).;true;true', '1;true;workstartdate(B, D), workstartdate(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '2;true,false,false;workstartdate(B, G).;true;true', '2;true;workstartdate(B, D), workstartdate(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '3;true,false,false;workstartdate(B, G).;true;true', '3;true;workstartdate(B, D), workstartdate(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '4;true,false,false;workstartdate(B, G).;true;true', '4;true;workstartdate(B, D), workstartdate(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '5;true,false,false;workstartdate(B, G).;true;true', '5;true;workstartdate(A, D), workstartdate(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '6;true,false,false;workstartdate(B, G).;true;true', '6;true;workstartdate(A, D), workstartdate(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '7;true,false,false;workstartdate(B, G).;true;true', '7;true;workstartdate(B, D), workstartdate(A, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '8;true,false,false;workstartdate(B, G).;true;true', '8;true;workstartdate(A, D), workstartdate(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '9;true,false,false;workstartdate(B, G).;true;true', '9;true;workstartdate(A, D), workstartdate(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.8581489350995118;  // std dev = 2,98e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationschool(B, F), locale(B, E) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( location(A, G), educationschool(B, H) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08481560176617904;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( educationyear(B, J), location(B, K) )
%   | | | then return 0.39148226843284567;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.7223464659637094;  // std dev = 3,083, 81,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=70 */
%   | | else if ( educationtype(B, L), educationtype(A, M) )
%   | | | then return 0.16895974591032312;  // std dev = 5,631, 148,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.41029617436331206;  // std dev = 12,698, 652,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=360 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationschool(B, F), locale(B, E) )
%   | | | then return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( hometown(A, G) )
%   | | | then return -0.1524924839781627;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.1253446052862888;  // std dev = 3,769, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | else if ( worklocation(B, H), locale(A, I) )
%   | | then if ( workstartdate(A, J), workemployer(A, K) )
%   | | | then return 0.6140898711056153;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.07446763636891998;  // std dev = 2,042, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else if ( workemployer(A, L), locale(B, M) )
%   | | | then return 0.09568143613978441;  // std dev = 3,511, 63,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.38226514345572465;  // std dev = 13,770, 793,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=462 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( worklocation(A, G), workstartdate(B, H) )
%   | | then return 0.8305935618624747;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( educationtype(A, I), educationtype(B, I) )
%   | | | then return -0.11007731737375512;  // std dev = 0,963, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.0668478829811477;  // std dev = 3,548, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.23781749812147374;  // std dev = 2,689, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.5527964420375653;  // std dev = 2,990, 80,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | else if ( educationtype(A, L), educationtype(B, M) )
%   | | | then return 0.1030019405466734;  // std dev = 5,477, 148,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.2900775611459024;  // std dev = 12,631, 652,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=360 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4175135841583098;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( educationdegree(A, G) )
%   | | then return 0.4149351984672232;  // std dev = 0,999, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( educationschool(A, H) )
%   | | | then return -0.1077151265737095;  // std dev = 0,131, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0.061516803532083844;  // std dev = 3,656, 78,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | else if ( hometown(B, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.03724843761007004;  // std dev = 2,986, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.44482007393880324;  // std dev = 4,519, 138,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=108 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return -0.12992269463530917;  // std dev = 1,720, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.2045969806939224;  // std dev = 12,920, 702,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=366 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3207118471601497;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( hometown(B, E), educationwith(B, F) )
%   | then if ( educationyear(B, G), educationyear(A, H) )
%   | | then return 0.26249370145457257;  // std dev = 0,988, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( educationtype(A, I), location(B, J) )
%   | | | then return 0.4250128899713385;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.524075108411753;  // std dev = 0,989, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( birthday(B, K), educationschool(B, L) )
%   | | then if ( educationconcentration(B, M) )
%   | | | then return 0.4802385192675521;  // std dev = 1,885, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.23735838031875772;  // std dev = 3,372, 58,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | else if ( educationyear(B, N), locale(A, P) )
%   | | | then return 0.01594664322673014;  // std dev = 6,856, 275,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=78 */
%   | | | else return 0.15964240553180895;  // std dev = 12,144, 645,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=331 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(A, E), educationschool(B, F) )
%   | then if ( educationdegree(B, G) )
%   | | then return 0.22326694772185204;  // std dev = 0,753, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( educationschool(A, F) )
%   | | | then return -0.4315375058217536;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.26044569209234814;  // std dev = 0,245, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( hometown(B, H) )
%   | | then if ( languages(A, I), educationtype(B, J) )
%   | | | then return -0.03528370687111738;  // std dev = 1,814, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.28747608363809524;  // std dev = 4,711, 153,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=115 */
%   | | else if ( birthday(B, K), educationconcentration(B, L) )
%   | | | then return 0.38690821779515233;  // std dev = 1,750, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.08542882413117318;  // std dev = 13,331, 826,000 (wgt'ed) examples reached here.  /* #neg=465 #pos=361 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), educationschool(A, F) )
%   | then if ( educationdegree(B, G), educationschool(B, F) )
%   | | then return 0.16571062620185034;  // std dev = 0,688, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(B, H), educationschool(B, F) )
%   | | | then return -0.18191525599578776;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09391015972541701;  // std dev = 0,799, 56,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
%   | else if ( hometown(B, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return -0.025200757744900028;  // std dev = 2,964, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.2308750523259368;  // std dev = 4,141, 138,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=108 */
%   | | else if ( gender(B, K), locale(A, L) )
%   | | | then return 0.07512036236682898;  // std dev = 13,090, 775,000 (wgt'ed) examples reached here.  /* #neg=410 #pos=365 */
%   | | | else return 0.2631559905409678;  // std dev = 2,818, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( worklocation(A, D) )
%   | | then if ( languages(B, F) )
%   | | | then return 0.46533923960066464;  // std dev = 0,724, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6585815449576071;  // std dev = 0,127, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( workemployer(B, G) )
%   | | | then return -0.028004747012914624;  // std dev = 2,756, 72,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=10 */
%   | | | else return -0.16828050548094464;  // std dev = 1,986, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | else if ( birthday(B, H), educationyear(B, I) )
%   | | then if ( languages(A, J), location(B, K) )
%   | | | then return -0.4162594790596175;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2667760958093271;  // std dev = 2,541, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return -0.1309145082579547;  // std dev = 1,886, 40,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.08148379442426332;  // std dev = 13,319, 823,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=437 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.15274385809367083;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( educationdegree(B, D) )
%   | then if ( workemployer(A, E) )
%   | | then if ( location(A, F) )
%   | | | then return -0.18186524386031552;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2692324086715348;  // std dev = 0,836, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( workenddate(B, G), educationconcentration(B, H) )
%   | | | then return -0.021323992438441377;  // std dev = 1,140, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.20815924903388452;  // std dev = 1,009, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | else if ( hometown(B, I), hometown(A, I) )
%   | | then if ( languages(A, J), educationyear(B, K) )
%   | | | then return 0.5689886973346476;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22166021336293165;  // std dev = 1,864, 36,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | else if ( worklocation(B, L), worklocation(A, L) )
%   | | | then return 0.5205971068629415;  // std dev = 0,216, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.046329399808021574;  // std dev = 13,876, 951,000 (wgt'ed) examples reached here.  /* #neg=488 #pos=463 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.13400703000801117;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( hometown(B, D), educationwith(B, E) )
%   | then if ( educationyear(A, F) )
%   | | then if ( hometown(A, D) )
%   | | | then return 0.26567948740666814;  // std dev = 0,171, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03526630751396767;  // std dev = 0,860, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( educationyear(B, G), gender(A, H) )
%   | | | then return 0.21381834889293128;  // std dev = 0,967, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.2561823756095223;  // std dev = 0,168, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( languages(B, I), locale(A, J) )
%   | | then if ( lastname(B, K) )
%   | | | then return 0.08651260088759488;  // std dev = 2,286, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return -0.10503926294067009;  // std dev = 3,498, 106,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | else if ( gender(B, L), gender(A, L) )
%   | | | then return 0.08455366340094943;  // std dev = 9,792, 471,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=253 */
%   | | | else return 0.0032880801876070233;  // std dev = 9,105, 412,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=191 */


Results
   AUC ROC   = 0.567376
   AUC PR    = 0.583353
   CLL	      = -0.721561
   Precision = 0.567893 at threshold = 0.5
   Recall    = 0.467326
   F1        = 0.512725


Total learning time: 24.363 seconds
Total inference time: 5.633 seconds
AUC ROC: 0.567376


Refined model AUC ROC: 0.567376


Dataset: 48_twitter_facebook, Fold: 4, Type: transfer, Time: 01:45:15
{'Learning time': 37.661, 'AUC PR': 0.583353, 'F1': 0.512725, 'AUC ROC': 0.567376, 'CLL': -0.721561, 'Inference time': 5.633, 'Mapping results': {'Generating mappings time': 0.3196103572845459, 'Generating paths time': 2.469838857650757, 'Finding best mapping': 1.430511474609375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.061273813247680664, 'Max mapping': 24389, 'Total time': 2.8507323265075684}, 'Parameter Learning results': {'Learning time': 13.298, 'AUC PR': 0.533901, 'F1': 0.077282, 'AUC ROC': 0.514203, 'CLL': -0.703391, 'Inference time': 4.922, 'Precision': [0.81198, 0.5], 'Recall': 0.040572}, 'Precision': [0.567893, 0.5], 'Recall': 0.467326}


Start learning from scratch in target domain

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( hometown(B, C), educationwith(B, D) )
%   then return 0.7883814932390467;  // std dev = 0,255, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   else if ( languages(B, E), locale(A, F) )
%   | then if ( educationschool(A, G), worklocation(B, H) )
%   | | then if ( workemployer(A, I), workemployer(B, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( educationtype(A, J), worklocation(B, K) )
%   | | | then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.15360348055405781;  // std dev = 4,280, 88,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | else if ( workemployer(B, L), locale(A, M) )
%   | | then if ( educationschool(B, N), educationdegree(A, P) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11776431971489681;  // std dev = 4,471, 104,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | | else if ( educationschool(B, Q), educationschool(A, Q) )
%   | | | then return 0.7032193576347241;  // std dev = 3,049, 71,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=60 */
%   | | | else return 0.37132507934361364;  // std dev = 13,421, 721,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=370 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.8032971252242231;  // std dev = 0,254, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( educationschool(A, E) )
%   | | then return -0.11604129678861712;  // std dev = 0,152, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else if ( locale(B, D), educationconcentration(B, F) )
%   | | | then return 0.5098670117990489;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05421703797733302;  // std dev = 3,501, 74,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   else if ( workemployer(A, G), educationschool(B, H) )
%   | then return -0.12094788915463893;  // std dev = 0,264, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( worklocation(B, I), locale(A, J) )
%   | | then if ( workstartdate(A, K), workemployer(A, L) )
%   | | | then return 0.6860145182066331;  // std dev = 0,868, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.07981730828661562;  // std dev = 2,053, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else if ( educationdegree(B, M) )
%   | | | then return -0.12595082805203686;  // std dev = 0,969, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.38328581606745593;  // std dev = 13,939, 819,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=477 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), hometown(A, D) )
%   then return -0.1416810136500558;  // std dev = 0,109, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( workemployer(B, E), workemployer(A, E) )
%   | then if ( languages(B, F) )
%   | | then return 0.5811971567003967;  // std dev = 0,099, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( educationschool(B, G), workenddate(A, H) )
%   | | | then return 0.6205926964803632;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7066022153463941;  // std dev = 2,98e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( workemployer(B, I), locale(A, J) )
%   | | then if ( educationschool(A, K) )
%   | | | then return -0.08488188762853338;  // std dev = 1,203, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | | else return 0.10615009760432832;  // std dev = 3,716, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.47260563618329104;  // std dev = 4,140, 111,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=86 */
%   | | | else return 0.25409827207391006;  // std dev = 13,855, 800,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=406 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( hometown(B, C), educationwith(B, D) )
%   then if ( educationyear(A, E) )
%   | then return 0.36634411441241205;  // std dev = 0,360, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5459276779786287;  // std dev = 0,170, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( languages(B, F), locale(A, G) )
%   | then if ( workemployer(A, H), workemployer(B, H) )
%   | | then return 0.43760249651115013;  // std dev = 0,033, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( lastname(B, I) )
%   | | | then return 0.2578781687254414;  // std dev = 2,327, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return -0.034655685269738036;  // std dev = 3,690, 106,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | else if ( birthday(B, J), educationschool(B, K) )
%   | | then if ( educationconcentration(B, L) )
%   | | | then return 0.5309937549963333;  // std dev = 1,850, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.27828279435296654;  // std dev = 3,499, 58,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | else if ( hometown(B, M) )
%   | | | then return 0.3313002476483517;  // std dev = 4,773, 108,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=71 */
%   | | | else return 0.16921952779880803;  // std dev = 12,607, 701,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=325 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then if ( educationconcentration(B, D), educationyear(A, E) )
%   | then return 0.2762035964418173;  // std dev = 0,649, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5627927981334702;  // std dev = 0,145, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( workemployer(B, F), locale(A, G) )
%   | then if ( workemployer(A, F) )
%   | | then return 0.4383333197351464;  // std dev = 0,085, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( educationtype(A, H), educationtype(B, H) )
%   | | | then return -0.11315476287661806;  // std dev = 1,293, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | | else return 0.03725942415129635;  // std dev = 3,501, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( workemployer(A, I), educationtype(B, J) )
%   | | then if ( educationtype(A, J), locale(B, K) )
%   | | | then return -0.21758222142128508;  // std dev = 1,254, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.17721989806501476;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( hometown(B, L) )
%   | | | then return 0.285668327612345;  // std dev = 5,390, 170,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=122 */
%   | | | else return 0.15842728911994525;  // std dev = 12,813, 699,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=357 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationdegree(B, C) )
%   then if ( workemployer(A, D) )
%   | then return 0.19412213158830158;  // std dev = 0,352, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.15282514929153912;  // std dev = 0,242, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( educationyear(B, E), educationschool(A, F) )
%   | then if ( educationschool(B, F) )
%   | | then if ( languages(A, G), location(B, H) )
%   | | | then return -0.23020684876408215;  // std dev = 1,282, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.22546724391748388;  // std dev = 2,794, 56,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=42 */
%   | | else if ( educationconcentration(A, I), location(B, J) )
%   | | | then return 0.3565546359886775;  // std dev = 0,847, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.10896134274950824;  // std dev = 2,714, 88,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | else if ( birthday(B, K), educationconcentration(B, L) )
%   | | then return 0.4254454459930015;  // std dev = 0,300, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( educationschool(A, M), educationschool(B, M) )
%   | | | then return 0.31409416680026503;  // std dev = 2,022, 54,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   | | | else return 0.13160974609662124;  // std dev = 13,370, 790,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=404 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(B, C), hometown(A, D) )
%   then if ( languages(B, E), educationtype(A, F) )
%   | then return -0.08139666492927687;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1509039602421566;  // std dev = 0,030, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( educationdegree(B, G) )
%   | then if ( educationschool(A, H), educationschool(B, H) )
%   | | then return 0.3063792760852363;  // std dev = 1,012, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( workemployer(A, I), workemployer(B, I) )
%   | | | then return 0.34766051443335444;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1448064729013664;  // std dev = 1,479, 42,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | else if ( location(B, J), educationyear(A, K) )
%   | | then if ( educationtype(B, L), locale(A, M) )
%   | | | then return 0.008256493018340026;  // std dev = 3,198, 71,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return -0.3177457365329129;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( gender(B, N), locale(A, P) )
%   | | | then return 0.11013038259440514;  // std dev = 13,601, 882,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=471 */
%   | | | else return 0.30869580520368084;  // std dev = 2,547, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( hometown(B, C), hometown(A, C) )
%   then if ( educationconcentration(B, D), location(B, E) )
%   | then return -0.1351136605067663;  // std dev = 0,863, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, F), educationyear(A, G) )
%   | | then if ( educationwith(B, H) )
%   | | | then return 0.34667075543914416;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026744049600471564;  // std dev = 1,123, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.37318842746628533;  // std dev = 0,193, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( birthday(B, I), educationconcentration(B, J) )
%   | then if ( educationyear(A, K), educationyear(B, K) )
%   | | then return 0.06343057162205734;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2938972761302505;  // std dev = 0,277, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( worklocation(B, L), worklocation(A, L) )
%   | | then return 0.36433472873600076;  // std dev = 0,181, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( educationyear(B, M), locale(A, N) )
%   | | | then return -0.024585187615230986;  // std dev = 6,890, 314,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=108 */
%   | | | else return 0.08022969950194031;  // std dev = 12,149, 673,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=349 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationclasses(B, C), locale(A, D) )
%   then if ( educationyear(A, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then return 0.24406441399526665;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.32990772751966957;  // std dev = 0,259, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.21216569079715816;  // std dev = 0,339, 62,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=51 */
%   else if ( birthday(B, G), educationschool(B, H) )
%   | then if ( languages(A, I), location(B, J) )
%   | | then return -0.2313803206542092;  // std dev = 0,661, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2153295767053239;  // std dev = 0,356, 70,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=56 */
%   | else if ( educationyear(B, K), locale(A, L) )
%   | | then if ( worklocation(A, M), workenddate(B, N) )
%   | | | then return 0.33597692632837733;  // std dev = 0,810, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.05074188450747089;  // std dev = 6,348, 277,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=81 */
%   | | else if ( gender(B, P), gender(A, Q) )
%   | | | then return 0.049344143449875054;  // std dev = 11,476, 594,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=297 */
%   | | | else return 0.24865842952300515;  // std dev = 2,278, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationdegree(B, C) )
%   then if ( workemployer(A, D) )
%   | then return 0.1024000857158582;  // std dev = 0,297, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.12371028212921154;  // std dev = 0,238, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( hometown(B, E) )
%   | then if ( educationtype(B, F), languages(A, G) )
%   | | then if ( hometown(A, E) )
%   | | | then return 0.35906031607677924;  // std dev = 0,325, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2984921049175904;  // std dev = 0,976, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( educationconcentration(B, H) )
%   | | | then return -0.0815454364991443;  // std dev = 2,651, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.22432170198431964;  // std dev = 3,485, 121,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=102 */
%   | else if ( worklocation(B, I), worklocation(A, I) )
%   | | then return 0.2766895296555545;  // std dev = 0,095, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( locale(B, J), locale(A, K) )
%   | | | then return 0.03467513572714388;  // std dev = 12,636, 781,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=375 */
%   | | | else return -0.1272371435656982;  // std dev = 2,881, 44,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */


Results
   AUC ROC   = 0.555181
   AUC PR    = 0.577785
   CLL	      = -0.731605
   Precision = 0.57825 at threshold = 0.5
   Recall    = 0.341287
   F1        = 0.429236


Total learning time: 26.311 seconds
Total inference time: 5.502 seconds
AUC ROC: 0.555181


Dataset: 48_twitter_facebook, Fold: 4, Type: scratch, Time: 01:45:47
{'Learning time': 26.311, 'AUC PR': 0.577785, 'F1': 0.429236, 'AUC ROC': 0.555181, 'CLL': -0.731605, 'Inference time': 5.502, 'Precision': [0.57825, 0.5], 'Recall': 0.341287}


Starting fold 5

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.03463268280029297
   Generating paths time   = 2.4759464263916016
   Generating mappings time   = 0.2904045581817627
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.800992012023926


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> educationconcentration(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E) )
%   | | then return 0.44148226843284566;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3776294545800314;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3986894756400525;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.3451955672238605;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.22373365448410584;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E) )
%   | | then return 0.3788520179768205;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.5398498420741675;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3251902936540025;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.34293230716935624;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.29778337194978927;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.18886832215749735;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.4289562725350853;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2713310430973817;  // std dev = 2,276, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.10782354562777509;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26921191644490505;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.28292103907752525;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.2478376368751269;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.1557002943717436;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.32644004768013724;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2169758424818816;  // std dev = 2,275, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.09150383240113759;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21540569319777966;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2252407474751511;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.19987966910077348;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.12582628229372092;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.24503149911444544;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1691789680052859;  // std dev = 2,274, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.07678249969777719;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16800567301532854;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1747263436556596;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.1572939289583583;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.10008916917880555;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.18482045881522163;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.12972987191880264;  // std dev = 2,274, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06380835741947548;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12882484745414027;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13332544843957556;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.12164839227259294;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07866279780602584;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.1410881440687913;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.09848780476508603;  // std dev = 2,274, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.05259581166798401;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09776430630513994;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10078756179754482;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.09300660426362677;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.06127260860742234;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.10912169797108993;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.07435205318784761;  // std dev = 2,273, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.043061399542859605;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07375775082160288;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07582605692300522;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.07059446873462835;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.04741549148811429;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.08540523411308514;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.05596649182598475;  // std dev = 2,273, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.03506047229230461;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05547068463658658;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05692242992166792;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.05334403813400608;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.036517889972878755;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.0675192639640355;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.042066970029544355;  // std dev = 2,273, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.028417796087898104;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.041650817699756364;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04269767463199203;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.040199123112349855;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */


Results
   AUC ROC   = 0.485576
   AUC PR    = 0.504223
   CLL	      = -0.709072
   Precision = 0.526896 at threshold = 0.5
   Recall    = 0.163571
   F1        = 0.249643


Total learning time: 11.594 seconds
Total inference time: 6.014 seconds
AUC ROC: 0.485576


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [1.708, 5, 7], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [1.491, 5, 4]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [1.708, 5, 7], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [1.491, 5, 4]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.276, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.275, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.274, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.274, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.274, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.273, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.273, 10, 11]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [1.247, 2, 7], 'true,true': [1.549, 6, 4], 'false,true': [1.195, 5, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.82, 198, 188], 'false,false,true,false': [4.384, 37, 40], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 34, 40], 'true,false,false,false': [2.273, 10, 11]}]]
[{'': [0.2475000000000011, 0.24998648356401668], 'false': [0.20408163265306126, 0.2499991330552205], 'true,false,false': [0.17283950617283939, 0.2469135802469134], 'false,false,true': [nan, 0.2496205093607702], 'true,false': [0.2430555555555555, 0.23765432098765396], 'false,false,false': [0.24835646457268185, 0.24983221026068217], 'false,false': [0.2496205093607702, 0.2499810964083209], 'true': [0.23999999999999985, 0.23999999999999977]}, {'': [0.2414633117218114, 0.24971774352023796], 'false': [0.20408163265306117, 0.2498840458692575], 'true,false,false': [0.1728395061728397, 0.24691358024691354], 'false,false,true': [nan, 0.2496205093607691], 'true,false': [0.24305555555555558, 0.22922786173697218], 'false,false,false': [0.24835646457268004, 0.2498322102606779], 'false,false': [0.2496205093607691, 0.24986997598413307], 'true': [0.2399999999999999, 0.23487392803783785]}, {'': [0.23549801236620369, 0.24946119822323864], 'false': [0.2040816326530612, 0.24977121454758802], 'true,false,false': [0.17283950617283944, 0.24674159117887914], 'false,false,true': [nan, 0.24962050936076882], 'true,false': [nan, 0.229788565397678], 'false,false,false': [0.2483564645726806, 0.24983221026067326], 'false,false': [0.24962050936076882, 0.24976096014963803], 'true': [0.23999999999999985, 0.22978856539767786]}, {'': [0.2318361320243305, 0.24926745764403951], 'false': [0.20408163265306117, 0.24968895970376825], 'true,false,false': [0.17283950617283966, 0.24647469275904965], 'false,false,true': [nan, 0.2496205093607693], 'true,false': [nan, 0.22690044334932066], 'false,false,false': [0.2483564645726805, 0.24983221026067462], 'false,false': [0.2496205093607693, 0.2496816314942309], 'true': [0.24, 0.22690044334932066]}, {'': [0.22992382500790293, 0.249145655096315], 'false': [0.2040816326530612, 0.24964131316252572], 'true,false,false': [0.1728395061728395, 0.24630344167464452], 'false,false,true': [nan, 0.24962050936076804], 'true,false': [nan, 0.2254725183839929], 'false,false,false': [0.24835646457268098, 0.24983221026067376], 'false,false': [0.24962050936076804, 0.249635829847272], 'true': [0.2399999999999999, 0.22547251838399288]}, {'': [0.22902241770699558, 0.24907822491624879], 'false': [0.20408163265306117, 0.24961770782076542], 'true,false,false': [0.1728395061728395, 0.24620165602640348], 'false,false,true': [nan, 0.24962050936076882], 'true,false': [nan, 0.2248303553508986], 'false,false,false': [0.2483564645726807, 0.24983221026067542], 'false,false': [0.24962050936076882, 0.24961321414618834], 'true': [0.24000000000000005, 0.2248303553508986]}, {'': [0.2285998211908813, 0.24904378241181271], 'false': [0.2040816326530612, 0.24960700372125877], 'true,false,false': [0.1728395061728395, 0.246144329694273], 'false,false,true': [nan, 0.24962050936076932], 'true,false': [nan, 0.224533988308689], 'false,false,false': [0.2483564645726805, 0.24983221026067637], 'false,false': [0.24962050936076932, 0.24960298046675342], 'true': [0.24, 0.224533988308689]}, {'': [0.2283924641476205, 0.24902704391684635], 'false': [0.2040816326530612, 0.24960231996187665], 'true,false,false': [0.1728395061728395, 0.24611339251179276], 'false,false,true': [nan, 0.24962050936076918], 'true,false': [nan, 0.2243851015317609], 'false,false,false': [0.2483564645726809, 0.24983221026068117], 'false,false': [0.24962050936076918, 0.24959850231931158], 'true': [0.23999999999999994, 0.2243851015317609]}, {'': [0.22828317266494688, 0.2490191763706353], 'false': [0.2040816326530612, 0.24960026919394512], 'true,false,false': [0.1728395061728395, 0.2460973978580691], 'false,false,true': [nan, 0.2496205093607691], 'true,false': [nan, 0.22430202465746396], 'false,false,false': [0.2483564645726804, 0.24983221026067876], 'false,false': [0.2496205093607691, 0.24959653623230119], 'true': [0.23999999999999994, 0.22430202465746396]}, {'': [0.2282205462097132, 0.249015576612041], 'false': [0.20408163265306126, 0.24959935026765856], 'true,false,false': [0.1728395061728395, 0.24608958312394602], 'false,false,true': [nan, 0.2496205093607696], 'true,false': [nan, 0.2242506020845849], 'false,false,false': [0.24835646457268104, 0.24983221026067703], 'false,false': [0.2496205093607696, 0.24959565040703086], 'true': [0.24, 0.2242506020845849]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5248156017661788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( languages(A, G) )
%   | | then return 0.44148226843284566;  // std dev = 0,493, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.4692600462106234;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3776294545800314;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.3986894756400525;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.3451955672238605;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21879950833382064;  // std dev = 0,461, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E) )
%   | | then if ( gender(B, F), workemployer(A, G) )
%   | | | then return 0.0812329703577729;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.7955186846434872;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.40207411659007225;  // std dev = 0,487, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.12543301544918353;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3251902936540025;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.34293230716935624;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.29778337194978927;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.18460804376843393;  // std dev = 0,457, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.4945823121894871;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.24337534738006555;  // std dev = 2,169, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.10782354562777509;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26921191644490505;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.28292103907752525;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.2478376368751269;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.15236451044067484;  // std dev = 0,453, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.38462613152827146;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.19257812437493382;  // std dev = 2,159, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.09150383240113759;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21540569319777966;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2252407474751511;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.19987966910077348;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.12347277390251817;  // std dev = 0,451, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.29013960646334763;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14935805184166656;  // std dev = 2,153, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.07678249969777719;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16800567301532854;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1747263436556596;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.1572939289583583;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.09862584778187772;  // std dev = 0,449, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.21789601470058984;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.11438079011233995;  // std dev = 2,150, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06380835741947548;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12882484745414027;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13332544843957556;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.12164839227259294;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07791878929967302;  // std dev = 0,447, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.16510093969854825;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0869496629044629;  // std dev = 2,148, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.05259581166798401;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09776430630513994;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10078756179754482;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.09300660426362677;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.06105881830001512;  // std dev = 0,446, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.12672292317585715;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.06582991729124542;  // std dev = 2,148, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.043061399542859605;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07375775082160288;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07582605692300522;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.07059446873462835;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.04756092877712235;  // std dev = 0,445, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.09851147139595455;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04973612276323263;  // std dev = 2,147, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.03506047229230461;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05547068463658658;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05692242992166792;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.05334403813400608;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.03688480816265359;  // std dev = 0,444, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04950926754424612;  // std dev = 0,454, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   else if ( languages(B, G), languages(A, G) )
%   | then if ( workstartdate(A, H) )
%   | | then return -0.007296489626387584;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.07603684370694574;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.041650817699756364;  // std dev = 4,384, 77,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=40 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04269767463199203;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.040199123112349855;  // std dev = 9,820, 386,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=188 */


Results
   AUC ROC   = 0.495915
   AUC PR    = 0.508569
   CLL	      = -0.709095
   Precision = 0.543851 at threshold = 0.5
   Recall    = 0.183366
   F1        = 0.274261


Total learning time: 8.854 seconds
Total inference time: 5.581 seconds
AUC ROC: 0.495915


Refined model AUC ROC: 0.495915


Dataset: 48_twitter_facebook, Fold: 5, Type: transfer, Time: 01:46:23
{'Learning time': 20.448, 'AUC PR': 0.508569, 'F1': 0.274261, 'AUC ROC': 0.495915, 'CLL': -0.709095, 'Inference time': 5.581, 'Mapping results': {'Generating mappings time': 0.2904045581817627, 'Generating paths time': 2.4759464263916016, 'Finding best mapping': 9.5367431640625e-07, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.03463268280029297, 'Max mapping': 24389, 'Total time': 2.800992012023926}, 'Parameter Learning results': {'Learning time': 11.594, 'AUC PR': 0.504223, 'F1': 0.249643, 'AUC ROC': 0.485576, 'CLL': -0.709072, 'Inference time': 6.014, 'Precision': [0.526896, 0.5], 'Recall': 0.163571}, 'Precision': [0.543851, 0.5], 'Recall': 0.183366}


Start learning from scratch in target domain

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workemployer(B, D), workstartdate(B, E) )
%   | then if ( workstartdate(A, E), languages(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7235335504841275;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else if ( lastname(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( location(B, H), location(A, H) )
%   | | | then return 0.7152917922423694;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.343223561965181;  // std dev = 10,021, 402,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=195 */
%   else if ( workemployer(B, I), educationyear(A, J) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( locale(B, K), locale(A, L) )
%   | | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( languages(A, M), languages(B, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2581489350995123;  // std dev = 3,098, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), workemployer(B, E) )
%   | then return 0.5896044542095693;  // std dev = 0,363, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( educationschool(B, H), workemployer(A, I) )
%   | | | then return 0.38246771561928145;  // std dev = 2,619, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.043774244359764805;  // std dev = 2,040, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( location(B, J), workstartdate(A, K) )
%   | | | then return 0.5447070837407693;  // std dev = 2,258, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.33099389082517167;  // std dev = 9,126, 339,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=178 */
%   else if ( locale(A, L), locale(B, M) )
%   | then return -0.08763477038348894;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workemployer(B, N), educationyear(A, P) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationschool(A, Q) )
%   | | | then return -0.05386152174089355;  // std dev = 0,933, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.2446354633997306;  // std dev = 2,938, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workemployer(B, D), workstartdate(B, E) )
%   | then return 0.46448629818671777;  // std dev = 0,362, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( educationconcentration(B, F), location(A, G) )
%   | | then if ( educationconcentration(A, F), gender(B, H) )
%   | | | then return 0.3601485175549369;  // std dev = 1,383, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.04081729612757593;  // std dev = 1,956, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( educationyear(B, I), educationschool(B, J) )
%   | | | then return 0.39115956886074665;  // std dev = 4,868, 106,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=68 */
%   | | | else return 0.2395682998475073;  // std dev = 8,339, 289,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=141 */
%   else if ( locale(A, K), locale(B, L) )
%   | then return -0.07802856056578536;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workstartdate(B, M), languages(A, N) )
%   | | then return 0.6320329579590092;  // std dev = 0,266, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(A, P), gender(B, Q) )
%   | | | then return -0.02067563737921284;  // std dev = 1,285, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.24981496966203512;  // std dev = 2,718, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then if ( educationdegree(A, E), workstartdate(A, F) )
%   | | then return -0.10097315365888752;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6268479644426591;  // std dev = 0,087, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( lastname(A, G) )
%   | | then return 0.591770379135071;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( workenddate(B, H), languages(B, I) )
%   | | | then return -0.22252506566313854;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.21670731578835406;  // std dev = 10,074, 443,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=237 */
%   else if ( locale(A, J), locale(B, K) )
%   | then return -0.06999615028877926;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( educationschool(A, L), gender(A, M) )
%   | | then return -0.10901067423366202;  // std dev = 0,216, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( educationdegree(B, N), workstartdate(A, P) )
%   | | | then return 0.6335394803917326;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19176877158853428;  // std dev = 2,865, 40,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationyear(B, C), workstartdate(B, D) )
%   then if ( educationtype(A, E), educationschool(B, F) )
%   | then if ( educationyear(A, C), workemployer(A, G) )
%   | | then return 0.6145412421010339;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(B, H), educationdegree(A, I) )
%   | | | then return 0.5784991642273948;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21561159989788733;  // std dev = 1,256, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0.3314233178969475;  // std dev = 0,372, 79,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=63 */
%   else if ( workemployer(B, J), workemployer(A, J) )
%   | then return 0.47730425514737845;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( educationtype(B, K), locale(A, L) )
%   | | then if ( educationyear(B, M), educationschool(B, N) )
%   | | | then return 0.18917304249564992;  // std dev = 4,257, 82,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | | else return 0.025553199582363205;  // std dev = 5,769, 183,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=60 */
%   | | else if ( locale(A, P), locale(B, P) )
%   | | | then return 0.20507853345602914;  // std dev = 6,275, 166,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | | | else return 0.026039943968043027;  // std dev = 2,228, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(B, C), educationyear(A, D) )
%   then if ( educationschool(B, E), languages(B, F) )
%   | then return -0.08623904765413336;  // std dev = 0,383, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0.2688701099421087;  // std dev = 0,363, 70,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=55 */
%   else if ( educationtype(B, G), educationyear(A, H) )
%   | then if ( location(B, I), educationyear(B, J) )
%   | | then return 0.3875583305096412;  // std dev = 0,293, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( locale(B, K), gender(B, L) )
%   | | | then return -0.07462067409131633;  // std dev = 3,497, 81,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | | else return 0.1562672202314233;  // std dev = 2,052, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( gender(B, M), gender(A, M) )
%   | | then if ( workstartdate(A, N), locale(B, P) )
%   | | | then return 0.27838275095690185;  // std dev = 3,390, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.1419614581170548;  // std dev = 6,550, 206,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=109 */
%   | | else if ( locale(A, Q), locale(B, Q) )
%   | | | then return 0.07950188484659046;  // std dev = 4,853, 103,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=50 */
%   | | | else return -0.1397783900380728;  // std dev = 0,307, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workstartdate(B, C), educationtype(B, D) )
%   then if ( educationschool(A, E), educationschool(B, E) )
%   | then return 0.0045458554260270085;  // std dev = 0,341, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( educationschool(B, F), educationyear(B, G) )
%   | | then return 0.3406931316403125;  // std dev = 0,325, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else return 0.14957651064111363;  // std dev = 0,387, 86,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   else if ( location(A, H), educationconcentration(B, I) )
%   | then if ( location(B, H) )
%   | | then return 0.32630680588767125;  // std dev = 0,896, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18355254441850583;  // std dev = 0,353, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( educationyear(B, J), educationschool(B, K) )
%   | | then if ( languages(B, L), location(B, M) )
%   | | | then return -0.1946436298614464;  // std dev = 0,919, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.20940080466716698;  // std dev = 3,692, 72,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=48 */
%   | | else if ( educationtype(B, N), locale(B, P) )
%   | | | then return -0.0029993758189170105;  // std dev = 4,971, 143,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
%   | | | else return 0.10031911428488473;  // std dev = 6,693, 208,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=103 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then if ( workemployer(A, E), educationyear(A, F) )
%   | then return 0.330112742415727;  // std dev = 0,201, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( educationyear(B, G), educationyear(A, G) )
%   | | then return 0.3768104144514431;  // std dev = 0,120, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( workemployer(A, C) )
%   | | | then return 0.3430785494473501;  // std dev = 0,137, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.00811233479938678;  // std dev = 2,256, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   else if ( workenddate(A, H), educationschool(B, I) )
%   | then return -0.17204791208073758;  // std dev = 0,359, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( gender(B, J), gender(A, J) )
%   | | then if ( educationtype(B, K), educationschool(A, L) )
%   | | | then return -0.03101100041453094;  // std dev = 2,241, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.1122736823836804;  // std dev = 7,709, 302,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=171 */
%   | | else if ( educationconcentration(B, M), educationyear(A, N) )
%   | | | then return 0.24778206004816467;  // std dev = 1,824, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.01646754393044561;  // std dev = 5,145, 152,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=54 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workstartdate(B, C), educationtype(B, D) )
%   then if ( workstartdate(A, E), educationconcentration(B, F) )
%   | then if ( languages(B, G), workenddate(A, H) )
%   | | then return 0.30423143418498905;  // std dev = 0,272, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15246110087022635;  // std dev = 0,356, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0.14113021928034597;  // std dev = 0,361, 109,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=79 */
%   else if ( workstartdate(A, I), educationyear(B, J) )
%   | then if ( languages(B, K), educationschool(B, L) )
%   | | then return -0.17817702978661284;  // std dev = 0,272, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( languages(A, M), workemployer(A, N) )
%   | | | then return -0.01126634021159334;  // std dev = 1,350, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3014554233250487;  // std dev = 1,628, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else if ( lastname(A, P), lastname(B, Q) )
%   | | then return 0.37573245270467986;  // std dev = 0,135, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( educationtype(B, R), workstartdate(A, S) )
%   | | | then return -0.1063668688814821;  // std dev = 2,363, 38,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.030157387793919563;  // std dev = 8,540, 362,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=158 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workstartdate(B, C), location(A, D) )
%   then if ( workstartdate(A, E), educationconcentration(B, F) )
%   | then return -0.08802669562309698;  // std dev = 0,476, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.2074405751670616;  // std dev = 0,314, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( gender(B, G), gender(A, G) )
%   | then if ( educationtype(B, H), locale(A, I) )
%   | | then if ( educationyear(B, J), workemployer(B, K) )
%   | | | then return 0.08846121862207743;  // std dev = 3,493, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | | | else return -0.005231123685575501;  // std dev = 5,067, 152,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=63 */
%   | | else if ( educationschool(A, L), workstartdate(A, M) )
%   | | | then return 0.28643884041276857;  // std dev = 1,370, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.08060416590423264;  // std dev = 5,080, 118,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=66 */
%   | else if ( lastname(A, N), lastname(B, P) )
%   | | then return 0.3059040851421386;  // std dev = 0,085, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationconcentration(B, Q), educationyear(A, R) )
%   | | | then return 0.1615206693134807;  // std dev = 1,865, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.039786469710988225;  // std dev = 5,262, 158,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */


Results
   AUC ROC   = 0.557858
   AUC PR    = 0.550028
   CLL	      = -0.786439
   Precision = 0.553865 at threshold = 0.5
   Recall    = 0.435973
   F1        = 0.487898


Total learning time: 21.846 seconds
Total inference time: 5.759 seconds
AUC ROC: 0.557858


Dataset: 48_twitter_facebook, Fold: 5, Type: scratch, Time: 01:46:51
{'Learning time': 21.846, 'AUC PR': 0.550028, 'F1': 0.487898, 'AUC ROC': 0.557858, 'CLL': -0.786439, 'Inference time': 5.759, 'Precision': [0.553865, 0.5], 'Recall': 0.435973}


Starting experiment #3 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29692444530358925;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.08692252000517167;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.20837934984605716;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5813068298363496;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.2305979146913504;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6081489350995096;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25680824651685535;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.0760086065078202;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.18107440977493972;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1141862376674665;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4949913846238995;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20014733368536436;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5170719622367242;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.21542855580471548;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03213570384911769;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.15408250053251327;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.09635815785231988;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3965795487720175;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1697087003887462;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4125724528826577;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1758539833644332;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.02770673478281751;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.12864717441952958;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.08269510156685003;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.3042169031521049;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14089299828557916;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31517865761850816;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1403872751805415;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.023811354785219868;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10566614367153737;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.0702729758172556;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.2288839777917651;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1148820374315997;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.23676009386434094;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11019175106572325;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02040642831585418;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0856216785941897;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.059204484659773925;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.17184452907760903;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09230973482782298;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.17806945427207632;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08543913289306276;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.017446089481275212;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06862836147485345;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04951153175763231;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.129809923045701;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07332256916930585;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13513671764223337;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06568160361017888;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.014884115659231437;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.054539038114920696;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04114669855937214;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0989064414455212;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0577278046766802;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10367175113685581;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05019549935715151;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01267564229810578;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04305573807685484;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.03401590243533729;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0760068744143967;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04514647472950382;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08034833303035839;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038205230707555556;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010778315187231052;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0338174133803715;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.02799842689093084;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05885110169425813;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.035129929112934846;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06282214181758339;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.13443875312805176
   Generating paths time   = 2.5050790309906006
   Generating mappings time   = 0.33716869354248047
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 2.976696729660034


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> educationconcentration(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5441954467274165;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then return 0.44799268509950874;  // std dev = 7,870, 256,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.4940712651965965;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.5751300671749804;  // std dev = 7,333, 265,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=190 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.5027161542523624;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.481630716476027;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2797550536463524;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.40427896605925967;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.323960900911473;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4643495512259643;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then return 0.3843013558677138;  // std dev = 7,870, 256,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.42275341854095105;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.48990056354445655;  // std dev = 7,333, 265,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=190 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.42994472298977077;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.41239205123047606;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2421806659031011;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3476340341499199;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.2797855302537561;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3741901739506694;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.14132867737022245;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.343402122337593;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.3759869448926816;  // std dev = 10,121, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.34875894246505046;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.33565805659203235;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.203726212528392;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.28653741242639086;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.23366960966582584;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2888750739814853;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.11225504731031953;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.2676819853824615;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.29161184441416926;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.27138292424169036;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.26231860139042446;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.16702713920825674;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2278201023511056;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.18945082422256151;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21809993172339343;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.08797804891832743;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.20352855150287047;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.2208268631489006;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20605374944172242;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.19987893050505776;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.1340556991125888;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17648256523974618;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.15001022951646806;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1636339963798434;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06828132133541301;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.15305628288816425;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1659066449616995;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.1548516450666213;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15048589029716836;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.10583076277216062;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13450385894167247;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.11674043685542754;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.12304706742562875;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.05262457088193414;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.11481148164037995;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1247747656806084;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.11617077403022498;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11289230347694161;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.08253233312019644;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10158669777755826;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.08977002433966023;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.09304409139630085;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.040356224243913955;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.08626033614676239;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.09428774405022951;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.08734923979735322;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08474542299938842;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.06379842622273633;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07638212524123399;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.06848431984663257;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07079641309226019;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.030838364314781336;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.06501219493357335;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.07165668393198386;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06591863566290139;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06376764590255186;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.04900959466481981;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05732172078026133;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.05197554629211091;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.054180185535357445;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02350551990061447;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.049164682343474556;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.05475331463815629;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04993537398656564;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04811800951360075;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.0374830377215972;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04299320137287683;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.03931368006422889;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */


Results
   AUC ROC   = 0.503723
   AUC PR    = 0.512593
   CLL	      = -0.700683
   Precision = 0.506944 at threshold = 0.5
   Recall    = 0.155113
   F1        = 0.237543


Total learning time: 160.56 seconds
Total inference time: 4.015 seconds
AUC ROC: 0.503723


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [7.87, 105, 151], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [7.333, 75, 190]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [7.87, 105, 151], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [7.333, 75, 190]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.121, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}]]
[{'': [0.22557507352750047, 0.24976560346629592], 'false': [0.22910031914640303, 0.24935662505964112], 'true,false,false': [0.23152512018098273, 0.20291918832325193], 'false,false,true': [0.23475224966808667, 0.2438543993507329], 'true,false': [0.24192810058594214, 0.21704734471986975], 'false,false,false': [0.24787202024367527, 0.24883117831830423], 'false,false': [0.2467423675099923, 0.2498155236231481], 'true': [0.215386695511091, 0.22772638776680518]}, {'': [0.2247664137879627, 0.24867106245597487], 'false': [0.22910031914642195, 0.24869554157332857], 'true,false,false': [0.23152512018098098, 0.20291918832324865], 'false,false,true': [0.23475224966808633, 0.2438543993506893], 'true,false': [0.24192810058593597, 0.2165399852495191], 'false,false,false': [0.24787202024361196, 0.2488311783184148], 'false,false': [0.2456295797861256, 0.24946312978305335], 'true': [0.21538669551108391, 0.22680569336274298]}, {'': [0.22395827446881808, 0.2475966409968811], 'false': [0.2291003191464122, 0.2480499409901824], 'true,false,false': [0.23152512018098173, 0.21657646445229164], 'false,false,true': [0.23475224966808025, 0.24385439935073028], 'true,false': [0.24305555555555605, 0.2213360955502945], 'false,false,false': [0.24787202024364127, 0.24883117831837123], 'false,false': [0.24453718962175694, 0.24911820453095088], 'true': [0.21538669551108974, 0.2258856217869818]}, {'': [0.22273866590965308, 0.24682388366636523], 'false': [0.22910031914641643, 0.24757758842842884], 'true,false,false': [0.23152512018097549, 0.21646863321090923], 'false,false,true': [0.23475224966808192, 0.2438543993506975], 'true,false': [0.24305555555555522, 0.22115760398537415], 'false,false,false': [0.24787202024364588, 0.24883117831831478], 'false,false': [0.2437508483761969, 0.2488659017117335], 'true': [0.2153866955110866, 0.22442977642121711]}, {'': [0.22198816846145822, 0.2463833362107555], 'false': [0.22910031914640794, 0.247300726261734], 'true,false,false': [0.2315251201809795, 0.21642805910995805], 'false,false,true': [0.2347522496680826, 0.24385439935071046], 'true,false': [0.2430555555555555, 0.2210715568628804], 'false,false,false': [0.24787202024365357, 0.24883117831833657], 'false,false': [0.24330242586959833, 0.2487187666806107], 'true': [0.2153866955110873, 0.22352707921879222]}, {'': [0.22158026183536483, 0.24616626090881188], 'false': [0.2291003191464104, 0.24716086893667288], 'true,false,false': [0.2315251201809773, 0.216421326275097], 'false,false,true': [0.23475224966808145, 0.2438543993507183], 'true,false': [0.24305555555555589, 0.2210385255733106], 'false,false,false': [0.24787202024366045, 0.2488311783183354], 'false,false': [0.24308154537702495, 0.24864528748954862], 'true': [0.21538669551108744, 0.22303390700435907]}, {'': [0.22137019848259068, 0.24606677803512786], 'false': [0.22910031914640852, 0.24709599193436751], 'true,false,false': [0.23152512018097923, 0.21642961218626777], 'false,false,true': [0.23475224966808136, 0.2438543993507051], 'true,false': [0.24305555555555544, 0.22103037755422847], 'false,false,false': [0.24787202024364777, 0.24883117831834464], 'false,false': [0.2429802625523915, 0.24861173644350384], 'true': [0.21538669551108744, 0.2227792597009386]}, {'': [0.221263839663253, 0.24602210487618745], 'false': [0.22910031914641066, 0.2470670368331146], 'true,false,false': [0.23152512018097812, 0.21644349768286295], 'false,false,true': [0.23475224966808136, 0.24385439935070546], 'true,false': [0.24305555555555577, 0.22103268974959212], 'false,false,false': [0.24787202024365135, 0.24883117831836277], 'false,false': [0.24293464821474073, 0.2485970006729667], 'true': [0.2153866955110873, 0.22265027172774163]}, {'': [0.22121018596545206, 0.24600176665469367], 'false': [0.22910031914640988, 0.2470542089133309], 'true,false,false': [0.23152512018097834, 0.21645845181264217], 'false,false,true': [0.2347522496680831, 0.24385439935071349], 'true,false': [0.24305555555555566, 0.2210388188177894], 'false,false,false': [0.24787202024365454, 0.248831178318346], 'false,false': [0.2429137771563896, 0.24859055507400518], 'true': [0.21538669551108722, 0.22258531405695556]}, {'': [0.2211832729591703, 0.2459921735606135], 'false': [0.22910031914641132, 0.24704845146501284], 'true,false,false': [0.23152512018097882, 0.21647243334764996], 'false,false,true': [0.2347522496680817, 0.2438543993507194], 'true,false': [0.243055555555556, 0.22104582873061135], 'false,false,false': [0.24787202024364582, 0.2488311783183665], 'false,false': [0.2429038885680211, 0.2485876859267417], 'true': [0.21538669551108686, 0.2225528703960873]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5441954467274165;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else return 0.5073924013993708;  // std dev = 0,477, 727,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=472 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( educationschool(B, F), gender(B, G) )
%   | | then return 0.5579281845476317;  // std dev = 0,458, 453,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=317 */
%   | | else if ( educationtype(B, H), educationschool(A, I) )
%   | | | then return -0.03768439823382107;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.5248156017661785;  // std dev = 3,055, 42,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.481630716476027;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2797550536463524;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.40427896605925967;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.323960900911473;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4643495512259643;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then if ( workemployer(B, F), workenddate(A, G) )
%   | | | then return 0.5323359730099377;  // std dev = 4,576, 111,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=83 */
%   | | | else return 0.25355374250356977;  // std dev = 6,009, 145,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=68 */
%   | | else return 0.46611688768256676;  // std dev = 0,466, 471,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.4286014131194956;  // std dev = 0,471, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.41239205123047606;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2421806659031011;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.3476340341499199;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.2797855302537561;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3741901739506694;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then if ( worklocation(B, G), workposition(A, H) )
%   | | | then return 0.5539917969650539;  // std dev = 1,302, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.022184072039625264;  // std dev = 2,564, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else return 0.36664443691194165;  // std dev = 0,469, 679,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=452 */
%   else if ( languages(B, I), languages(A, I) )
%   | then return 0.3477493552748322;  // std dev = 0,469, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.33565805659203235;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.203726212528392;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.28653741242639086;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.23366960966582584;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2888750739814853;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.10316499007477566;  // std dev = 0,460, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.24890003752420303;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.30044279652124717;  // std dev = 10,057, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.2709078894844993;  // std dev = 0,467, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.26231860139042446;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.16702713920825674;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2278201023511056;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.18945082422256151;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21809993172339343;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.08106912907897092;  // std dev = 0,459, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1884641981803982;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.2278553229322798;  // std dev = 10,052, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20607050006955618;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.19987893050505776;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.1340556991125888;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17648256523974618;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.15001022951646806;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1636339963798434;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06318777656774598;  // std dev = 0,459, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.14154260294760956;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1711976826075794;  // std dev = 10,050, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15520055057633966;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15048589029716836;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.10583076277216062;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13450385894167247;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.11674043685542754;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.12304706742562875;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.04896154184691104;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.10619230027456356;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.128675621547484;  // std dev = 10,051, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.11669658007785684;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11289230347694161;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.08253233312019644;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10158669777755826;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.08977002433966023;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.09304409139630085;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.03777826929728152;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07984601758461196;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.09715515669796297;  // std dev = 10,052, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.0879424418671904;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08474542299938842;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.06379842622273633;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07638212524123399;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.06848431984663257;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07079641309226019;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02906088162838516;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.060233824720602194;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.07377441758753923;  // std dev = 10,053, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06651292666751375;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06376764590255186;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.04900959466481981;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05732172078026133;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.05197554629211091;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.054180185535357445;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02230594527658654;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.045591613713555704;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.05632879089963338;  // std dev = 10,055, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.050494615954497;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04811800951360075;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.0374830377215972;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04299320137287683;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.03931368006422889;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */


Results
   AUC ROC   = 0.503672
   AUC PR    = 0.512732
   CLL	      = -0.700822
   Precision = 0.507645 at threshold = 0.5
   Recall    = 0.154316
   F1        = 0.236684


Total learning time: 179.23 seconds
Total inference time: 4.019 seconds
AUC ROC: 0.503672


Refined model AUC ROC: 0.503672


Dataset: 48_twitter_facebook, Fold: 1, Type: transfer, Time: 02:36:38
{'Learning time': 339.78999999999996, 'AUC PR': 0.512732, 'F1': 0.236684, 'AUC ROC': 0.503672, 'CLL': -0.700822, 'Inference time': 4.019, 'Mapping results': {'Generating mappings time': 0.33716869354248047, 'Generating paths time': 2.5050790309906006, 'Finding best mapping': 1.6689300537109375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.13443875312805176, 'Max mapping': 24389, 'Total time': 2.976696729660034}, 'Parameter Learning results': {'Learning time': 160.56, 'AUC PR': 0.512593, 'F1': 0.237543, 'AUC ROC': 0.503723, 'CLL': -0.700683, 'Inference time': 4.015, 'Precision': [0.506944, 0.5], 'Recall': 0.155113}, 'Precision': [0.507645, 0.5], 'Recall': 0.154316}


Start learning from scratch in target domain

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( workemployer(B, D), gender(B, E) )
%   | then return 0.6000272576039374;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else if ( lastname(B, F), gender(A, G) )
%   | | then return 0.539183417858129;  // std dev = 0,466, 348,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=237 */
%   | | else if ( location(B, H), hometown(B, I) )
%   | | | then return 0.5768989350995097;  // std dev = 5,687, 160,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=115 */
%   | | | else return 0.3770300539806266;  // std dev = 18,894, 1.430,000 (wgt'ed) examples reached here.  /* #neg=688 #pos=742 */
%   else if ( educationtype(A, J), educationtype(B, K) )
%   | then return 0.10430278125335345;  // std dev = 0,431, 2.015,000 (wgt'ed) examples reached here.  /* #neg=1.519 #pos=496 */
%   | else if ( workemployer(B, L), educationschool(B, M) )
%   | | then if ( location(B, N), worklocation(B, P) )
%   | | | then return 0.5596414724129412;  // std dev = 8,376, 335,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=235 */
%   | | | else return 0.419055450680246;  // std dev = 9,324, 353,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=198 */
%   | | else if ( languages(B, Q), educationyear(A, R) )
%   | | | then return 0.6642713840791032;  // std dev = 3,914, 98,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=79 */
%   | | | else return 0.3191807682498915;  // std dev = 30,091, 3.644,000 (wgt'ed) examples reached here.  /* #neg=1.964 #pos=1.680 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.5103982569917702;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else if ( educationschool(A, F), hometown(A, G) )
%   | | then return -0.07551905132666942;  // std dev = 0,276, 73,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
%   | | else return 0.366254230885124;  // std dev = 0,491, 1.039,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=582 */
%   else if ( educationtype(B, H), gender(B, I) )
%   | then if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( hometown(B, K), hometown(A, K) )
%   | | | then return 0.734126221368525;  // std dev = 1,670, 58,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | | else return 0.35017388998460375;  // std dev = 21,124, 1.816,000 (wgt'ed) examples reached here.  /* #neg=814 #pos=1.002 */
%   | | else return 0.12626346264067165;  // std dev = 0,453, 2.714,000 (wgt'ed) examples reached here.  /* #neg=1.916 #pos=798 */
%   | else if ( languages(B, L), gender(A, M) )
%   | | then return 0.555910134135895;  // std dev = 0,415, 161,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=125 */
%   | | else if ( gender(B, N), gender(A, N) )
%   | | | then return 0.345131071543598;  // std dev = 17,750, 1.265,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=671 */
%   | | | else return 0.247616857459344;  // std dev = 17,558, 1.257,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=543 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( location(B, E), workemployer(A, C) )
%   | then return 0.5436827246995114;  // std dev = 0,353, 406,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=348 */
%   | else return 0.3249594455349672;  // std dev = 0,471, 2.399,000 (wgt'ed) examples reached here.  /* #neg=903 #pos=1.496 */
%   else if ( educationschool(A, F), educationschool(B, F) )
%   | then if ( worklocation(B, G), workenddate(B, H) )
%   | | then if ( hometown(B, I), languages(B, J) )
%   | | | then return -0.18405776356788392;  // std dev = 0,884, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.43046440608207276;  // std dev = 8,871, 374,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=261 */
%   | | else if ( hometown(B, K), locale(A, L) )
%   | | | then return 0.43213869652308673;  // std dev = 7,645, 304,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=221 */
%   | | | else return 0.2366960669591716;  // std dev = 17,427, 1.217,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=603 */
%   | else if ( educationtype(B, M), educationschool(A, N) )
%   | | then return 5.195712997488411E-4;  // std dev = 0,378, 1.413,000 (wgt'ed) examples reached here.  /* #neg=1.168 #pos=245 */
%   | | else if ( languages(B, P), gender(A, Q) )
%   | | | then return 0.3172577336700146;  // std dev = 11,223, 539,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=300 */
%   | | | else return 0.23346452430989023;  // std dev = 29,035, 3.411,000 (wgt'ed) examples reached here.  /* #neg=1.848 #pos=1.563 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( location(B, E), educationschool(A, D) )
%   | then return 0.34095717614075705;  // std dev = 0,420, 1.286,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=981 */
%   | else if ( educationtype(A, F), workenddate(B, G) )
%   | | then return 0.1411520671637615;  // std dev = 0,475, 582,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=283 */
%   | | else if ( languages(B, H), location(B, I) )
%   | | | then return 0.3942710707588612;  // std dev = 7,642, 299,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=221 */
%   | | | else return 0.21972396004548087;  // std dev = 12,273, 638,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=359 */
%   else if ( educationtype(B, J), worklocation(A, K) )
%   | then return 0.10761708731866258;  // std dev = 0,454, 1.651,000 (wgt'ed) examples reached here.  /* #neg=1.041 #pos=610 */
%   | else if ( location(A, L), location(B, L) )
%   | | then if ( languages(B, M), hometown(A, N) )
%   | | | then return 0.6006638251008024;  // std dev = 1,360, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.3127185935891643;  // std dev = 7,921, 272,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=168 */
%   | | else if ( lastname(B, P), gender(A, Q) )
%   | | | then return 0.2410476188432674;  // std dev = 15,244, 1.003,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=521 */
%   | | | else return 0.1674152776224911;  // std dev = 31,926, 4.316,000 (wgt'ed) examples reached here.  /* #neg=2.448 #pos=1.868 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workenddate(B, C), worklocation(B, D) )
%   then if ( educationclasses(B, E), birthday(B, F) )
%   | then return 0.4443843664370976;  // std dev = 0,260, 132,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | else if ( workenddate(A, C), educationyear(B, G) )
%   | | then return 0.3073599466205491;  // std dev = 0,419, 487,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=363 */
%   | | else if ( location(B, H), educationconcentration(B, I) )
%   | | | then return 0.2398614863241577;  // std dev = 13,305, 846,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=563 */
%   | | | else return 0.14222884635801633;  // std dev = 14,991, 1.006,000 (wgt'ed) examples reached here.  /* #neg=491 #pos=515 */
%   else if ( workemployer(B, J), hometown(B, K) )
%   | then return 0.3072316967231583;  // std dev = 0,410, 272,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=199 */
%   | else if ( educationtype(B, L), workemployer(A, M) )
%   | | then if ( educationschool(B, N), educationschool(A, N) )
%   | | | then return 0.14160466701264213;  // std dev = 15,639, 1.031,000 (wgt'ed) examples reached here.  /* #neg=481 #pos=550 */
%   | | | else return -0.04143856927954813;  // std dev = 9,595, 724,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=124 */
%   | | else if ( lastname(A, P), lastname(B, P) )
%   | | | then return 0.6451908247585716;  // std dev = 0,694, 60,000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return 0.14369531999655116;  // std dev = 36,016, 5.518,000 (wgt'ed) examples reached here.  /* #neg=2.976 #pos=2.542 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.2384803240778036;  // std dev = 0,373, 437,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=360 */
%   | else return 0.45460556907990396;  // std dev = 0,394, 114,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=90 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( workenddate(B, F), workenddate(A, F) )
%   | | then if ( educationyear(B, G) )
%   | | | then return 0.23114636029343308;  // std dev = 8,521, 398,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=292 */
%   | | | else return 0.4997137433761207;  // std dev = 1,441, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( hometown(B, H), hometown(A, H) )
%   | | | then return 0.3943922042199195;  // std dev = 1,949, 72,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | | else return 0.1475099046296036;  // std dev = 24,868, 2.702,000 (wgt'ed) examples reached here.  /* #neg=1.092 #pos=1.610 */
%   | else if ( educationtype(B, I), educationschool(A, J) )
%   | | then return -0.04826226757211545;  // std dev = 0,374, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.349 #pos=290 */
%   | | else if ( lastname(B, K), lastname(A, L) )
%   | | | then return 0.2708231489223786;  // std dev = 6,812, 220,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=144 */
%   | | | else return 0.12470059452075204;  // std dev = 32,880, 4.472,000 (wgt'ed) examples reached here.  /* #neg=2.308 #pos=2.164 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( worklocation(A, D), worklocation(B, E) )
%   | then if ( educationconcentration(B, F), birthday(B, G) )
%   | | then return -0.10689185544095081;  // std dev = 0,476, 56,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else return 0.1382980298415228;  // std dev = 0,439, 139,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=97 */
%   | else return 0.2085482734349521;  // std dev = 0,443, 789,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=550 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then if ( workenddate(B, I), workposition(A, J) )
%   | | then return 0.1950758475842768;  // std dev = 0,424, 643,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=478 */
%   | | else if ( educationyear(A, K), educationyear(B, K) )
%   | | | then return 0.17494430370915126;  // std dev = 11,584, 679,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=470 */
%   | | | else return 0.07353423615770054;  // std dev = 18,595, 1.510,000 (wgt'ed) examples reached here.  /* #neg=662 #pos=848 */
%   | else if ( educationschool(A, L), educationtype(B, M) )
%   | | then return -0.04120620015919486;  // std dev = 0,371, 1.633,000 (wgt'ed) examples reached here.  /* #neg=1.333 #pos=300 */
%   | | else if ( languages(B, N), gender(B, P) )
%   | | | then return 0.14159314316152505;  // std dev = 13,702, 836,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=490 */
%   | | | else return 0.09127695578426794;  // std dev = 30,408, 3.791,000 (wgt'ed) examples reached here.  /* #neg=2.011 #pos=1.780 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then return 0.18852086262255188;  // std dev = 0,384, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( educationyear(A, D), educationyear(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( lastname(B, F), worklocation(A, G) )
%   | | | then return 9.843177946890149E-4;  // std dev = 4,650, 94,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   | | | else return 0.16904897759959261;  // std dev = 13,640, 991,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=715 */
%   | | else if ( gender(A, H), gender(B, I) )
%   | | | then return -0.04076947555530555;  // std dev = 6,242, 264,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=52 */
%   | | | else return 0.33701219937669785;  // std dev = 2,925, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( educationyear(A, J), educationtype(B, K) )
%   | | then if ( educationschool(A, L), gender(B, M) )
%   | | | then return -0.0027275853823808985;  // std dev = 22,174, 2.621,000 (wgt'ed) examples reached here.  /* #neg=1.595 #pos=1.026 */
%   | | | else return 0.13917424537140133;  // std dev = 7,608, 231,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=112 */
%   | | else if ( lastname(B, N), lastname(A, P) )
%   | | | then return 0.20133179493903136;  // std dev = 7,061, 256,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=174 */
%   | | | else return 0.07066460993810939;  // std dev = 34,383, 5.033,000 (wgt'ed) examples reached here.  /* #neg=2.597 #pos=2.436 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then return 0.15698907420230768;  // std dev = 0,403, 504,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=378 */
%   else if ( location(B, D), gender(B, E) )
%   | then if ( location(A, D), gender(A, E) )
%   | | then if ( hometown(B, F), locale(A, G) )
%   | | | then return 0.2827196207150091;  // std dev = 2,725, 85,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=77 */
%   | | | else return 0.130002462832865;  // std dev = 9,021, 389,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=265 */
%   | | else if ( workenddate(A, H), educationtype(B, I) )
%   | | | then return 0.025965977126240013;  // std dev = 16,760, 1.539,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=771 */
%   | | | else return 0.07700929535616183;  // std dev = 24,447, 2.712,000 (wgt'ed) examples reached here.  /* #neg=1.250 #pos=1.462 */
%   | else if ( workemployer(A, J), educationtype(B, K) )
%   | | then if ( educationconcentration(B, L), workenddate(B, M) )
%   | | | then return 0.06759673618973785;  // std dev = 7,453, 247,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=138 */
%   | | | else return -0.07623308727262366;  // std dev = 10,106, 683,000 (wgt'ed) examples reached here.  /* #neg=508 #pos=175 */
%   | | else if ( educationconcentration(A, N), hometown(B, P) )
%   | | | then return -0.16700778648157488;  // std dev = 2,885, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.04748265550386241;  // std dev = 29,988, 3.856,000 (wgt'ed) examples reached here.  /* #neg=2.099 #pos=1.757 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( hometown(B, C), hometown(A, C) )
%   then return 0.3522363599421372;  // std dev = 0,291, 129,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=120 */
%   else if ( languages(B, D), location(B, E) )
%   | then if ( gender(B, F), educationschool(B, G) )
%   | | then if ( languages(A, D), educationyear(B, H) )
%   | | | then return 0.15123774811818091;  // std dev = 9,059, 490,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=359 */
%   | | | else return 0.06728543065088788;  // std dev = 17,040, 1.420,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=868 */
%   | | else if ( lastname(B, I), hometown(B, J) )
%   | | | then return 0.23237222339931493;  // std dev = 2,905, 65,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=55 */
%   | | | else return -0.2107760982998909;  // std dev = 4,257, 129,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=24 */
%   | else if ( worklocation(B, K), workenddate(B, L) )
%   | | then if ( birthday(B, M), lastname(B, N) )
%   | | | then return 0.2598301365134644;  // std dev = 1,602, 80,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=77 */
%   | | | else return 0.05885087348293133;  // std dev = 16,885, 1.364,000 (wgt'ed) examples reached here.  /* #neg=568 #pos=796 */
%   | | else if ( educationtype(B, P), gender(B, Q) )
%   | | | then return -0.007001345167543061;  // std dev = 27,504, 3.799,000 (wgt'ed) examples reached here.  /* #neg=2.330 #pos=1.469 */
%   | | | else return 0.05265689679518937;  // std dev = 25,193, 2.600,000 (wgt'ed) examples reached here.  /* #neg=1.330 #pos=1.270 */


Results
   AUC ROC   = 0.627729
   AUC PR    = 0.608005
   CLL	      = -0.683372
   Precision = 0.651309 at threshold = 0.5
   Recall    = 0.260956
   F1        = 0.372618


Total learning time: 336.456 seconds
Total inference time: 4.713 seconds
AUC ROC: 0.627729


Dataset: 48_twitter_facebook, Fold: 1, Type: scratch, Time: 02:42:19
{'Learning time': 336.456, 'AUC PR': 0.608005, 'F1': 0.372618, 'AUC ROC': 0.627729, 'CLL': -0.683372, 'Inference time': 4.713, 'Precision': [0.651309, 0.5], 'Recall': 0.260956}


Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.13295936584472656
   Generating paths time   = 2.51435923576355
   Generating mappings time   = 0.3082408905029297
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 2.9555697441101074


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationconcentration(A,B)', 'accounttype(A,B) -> locale(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
0;true,false;educationconcentration(A, E).;false;true
0;true,false,false;educationconcentration(B, F).;false;false
0;false,false,true;educationconcentration(B, I).;false;false
0;false;educationconcentration(B, G), educationconcentration(A, G).;false;true
0;false,false,false;educationconcentration(B, J).;false;false
0;false,false;educationconcentration(A, H).;true;true
0;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
1;true,false;educationconcentration(A, E).;false;true
1;true,false,false;educationconcentration(B, F).;false;false
1;false,false,true;educationconcentration(B, I).;false;false
1;false;educationconcentration(A, G), educationconcentration(B, G).;false;true
1;false,false,false;educationconcentration(B, J).;false;false
1;false,false;educationconcentration(A, H).;true;true
1;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
2;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
2;true,false,false;educationconcentration(B, G).;false;false
2;false,false,true;educationconcentration(B, J).;false;false
2;false;educationconcentration(B, H), educationconcentration(A, H).;false;true
2;false,false,false;educationconcentration(B, K).;false;false
2;false,false;educationconcentration(A, I).;true;true
2;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
3;true,false;educationconcentration(B, E), educationconcentration(A, F).;false;true
3;true,false,false;educationconcentration(B, G).;false;false
3;false,false,true;educationconcentration(B, J).;false;false
3;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
3;false,false,false;educationconcentration(B, K).;false;false
3;false,false;educationconcentration(A, I).;true;true
3;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
4;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
4;true,false,false;educationconcentration(B, G).;false;false
4;false,false,true;educationconcentration(B, J).;false;false
4;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
4;false,false,false;educationconcentration(B, K).;false;false
4;false,false;educationconcentration(A, I).;true;true
4;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
5;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
5;true,false,false;educationconcentration(B, G).;false;false
5;false,false,true;educationconcentration(B, J).;false;false
5;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
5;false,false,false;educationconcentration(B, K).;false;false
5;false,false;educationconcentration(A, I).;true;true
5;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
6;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
6;true,false,false;educationconcentration(B, G).;false;false
6;false,false,true;educationconcentration(B, J).;false;false
6;false;educationconcentration(B, H), educationconcentration(A, H).;false;true
6;false,false,false;educationconcentration(B, K).;false;false
6;false,false;educationconcentration(A, I).;true;true
6;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
7;true,false;educationconcentration(B, E), educationconcentration(A, F).;false;true
7;true,false,false;educationconcentration(B, G).;false;false
7;false,false,true;educationconcentration(B, J).;false;false
7;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
7;false,false,false;educationconcentration(B, K).;false;false
7;false,false;educationconcentration(A, I).;true;true
7;true;educationconcentration(B, D), educationconcentration(A, D).;false;true
8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
8;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
8;true,false,false;educationconcentration(B, G).;false;false
8;false,false,true;educationconcentration(B, J).;false;false
8;false;educationconcentration(A, H), educationconcentration(B, H).;false;true
8;false,false,false;educationconcentration(B, K).;false;false
8;false,false;educationconcentration(A, I).;true;true
8;true;educationconcentration(A, D), educationconcentration(B, D).;false;true
9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
9;true,false;educationconcentration(A, E), educationconcentration(B, F).;false;true
9;true,false,false;educationconcentration(B, G).;false;false
9;false,false,true;educationconcentration(B, J).;false;false
9;false;educationconcentration(B, H), educationconcentration(A, H).;false;true
9;false,false,false;educationconcentration(B, K).;false;false
9;false,false;educationconcentration(A, I).;true;true
9;true;educationconcentration(A, D), educationconcentration(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.5767118093510066;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E) )
%   | | then return 0.4226792248273389;  // std dev = 16,733, 1.139,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=643 */
%   | | else if ( educationconcentration(B, F) )
%   | | | then return 0.47611140158744336;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.483351747430497;  // std dev = 20,815, 1.849,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=1.156 */
%   else if ( educationconcentration(B, G), educationconcentration(A, G) )
%   | then return 0.6051368869067419;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.3422253682205322;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.16479546077926602;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.2239147008652736;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.18488160836683412;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.4912045664290238;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E) )
%   | | then return 0.36309065001768004;  // std dev = 16,733, 1.139,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=643 */
%   | | else if ( educationconcentration(B, F) )
%   | | | then return 0.40779040693973384;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.4138263349202136;  // std dev = 20,815, 1.849,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=1.156 */
%   else if ( educationconcentration(A, G), educationconcentration(B, G) )
%   | then return 0.5145976514458478;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.2952685076513735;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.1435278873061613;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.1944151519294689;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.1608534688731533;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.3938252171832137;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.3153168236684335;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.3322088851930368;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.32290654303342187;  // std dev = 25,261, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.41078589492528483;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.2458642254971864;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.1229763211796684;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.1650248650346257;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.13738661535212515;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.3023302815012581;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(B, E), educationconcentration(A, F) )
%   | | then return 0.2494164416607639;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.25992431028217705;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.2533194254090161;  // std dev = 25,258, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.3139530867031908;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.1984338086985336;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.10381661696765863;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.137238408403873;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.11539454263788435;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.22754393957028954;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.1919892497699305;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.19825271345458534;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.1937085114428704;  // std dev = 25,257, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.23587140403097484;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.15628873739768745;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.08651219186689194;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.11214748906090985;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.09552130509728865;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.17080495717534394;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.14549315730973983;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.1493492127659706;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.1461811698635802;  // std dev = 25,256, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.1773571671804112;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.12097295812763173;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.07130139842358797;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.09033866390307226;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.07810829637125602;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.12893656631511943;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.10944401777563977;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.11205350904304807;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.10975680914591647;  // std dev = 25,256, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.1345190448741407;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.0925609475911273;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.05822901416623814;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.07194947841717504;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.06323234245546995;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.0981367400428099;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(B, E), educationconcentration(A, F) )
%   | | then return 0.08211225695110196;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.08409180931391524;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.08235044283736741;  // std dev = 25,256, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.10311333680224419;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.07030243242025462;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.04719882395257282;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.05680263832325182;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.050778889000403;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.07531381907324952;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.061594670881073996;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.06323701645634448;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.06186563530393707;  // std dev = 25,256, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.07983539750646215;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.053152619978870726;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.03802787465661435;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.044545282055599655;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.04051857461019674;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.05822328694108919;  // std dev = 5,811, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.046243979115240925;  // std dev = 8,728, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.04767618545845971;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.04656689068960921;  // std dev = 25,256, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.06234977383426483;  // std dev = 3,961, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.040073140594262424;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.030491412124022513;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.034756384934845404;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.03216962971647079;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */


Results
   AUC ROC   = 0.530365
   AUC PR    = 0.540775
   CLL	      = -0.720542
   Precision = 0.501503 at threshold = 0.5
   Recall    = 0.726857
   F1        = 0.593508


Total learning time: 127.08 seconds
Total inference time: 4.964 seconds
AUC ROC: 0.530365


Structure after Parameter Learning
[['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E)', 'true,false,false': 'educationconcentration(B, F)', 'false,false,true': 'educationconcentration(B, I)', 'false': 'educationconcentration(B, G), educationconcentration(A, G)', 'false,false,false': 'educationconcentration(B, J)', 'false,false': 'educationconcentration(A, H)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [16.733, 496, 643], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [20.815, 693, 1156]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E)', 'true,false,false': 'educationconcentration(B, F)', 'false,false,true': 'educationconcentration(B, I)', 'false': 'educationconcentration(A, G), educationconcentration(B, G)', 'false,false,false': 'educationconcentration(B, J)', 'false,false': 'educationconcentration(A, H)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [16.733, 496, 643], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [20.815, 693, 1156]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(B, H), educationconcentration(A, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.261, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(B, E), educationconcentration(A, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.258, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.257, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.256, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(B, H), educationconcentration(A, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.256, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(B, E), educationconcentration(A, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(B, D), educationconcentration(A, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.256, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(A, H), educationconcentration(B, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.256, 1058, 1617]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationconcentration(A, E), educationconcentration(B, F)', 'true,false,false': 'educationconcentration(B, G)', 'false,false,true': 'educationconcentration(B, J)', 'false': 'educationconcentration(B, H), educationconcentration(A, H)', 'false,false,false': 'educationconcentration(B, K)', 'false,false': 'educationconcentration(A, I)', 'true': 'educationconcentration(A, D), educationconcentration(B, D)'}, {'true,false,false,true': [13.271, 285, 461], 'true,true': [5.811, 47, 120], 'false,true': [3.961, 21, 62], 'false,false,true,true': [6.262, 81, 76], 'false,false,false,false': [17.637, 952, 462], 'false,false,true,false': [11.864, 459, 203], 'true,false,true': [8.728, 131, 182], 'false,false,false,true': [11.347, 352, 203], 'true,false,false,false': [25.256, 1058, 1617]}]]
[{'': [0.2378779956446586, 0.22762000674300964], 'true,false': [0.24583584170763823, 0.23484112399342325], 'true,false,false': [0.2360848565000779, 0.23432425578443455], 'false,false,true': [0.24974644001785037, 0.2126144339682941], 'false': [0.18899695166206928, 0.22394809482738706], 'false,false,false': [0.23198117035955163, 0.2199784334868972], 'false,false': [0.22461055428088583, 0.22367003433874347], 'true': [0.2022302699989283, 0.23892263480761716]}, {'': [0.23750282927961994, 0.22582268630336388], 'true,false': [0.24583584170763634, 0.23483784866846644], 'true,false,false': [0.23608485650007488, 0.23432425578444924], 'false,false,true': [0.24974644001785237, 0.2126144339682816], 'false': [0.18899695166206884, 0.22350573346511787], 'false,false,false': [0.23198117035955132, 0.21997843348692295], 'false,false': [0.22330027813535175, 0.22358963443244148], 'true': [0.2022302699989221, 0.23870161442344956]}, {'': [0.2371285623747972, 0.22408145249939054], 'true,false': [0.24336269636313473, 0.23802704612029138], 'true,false,false': [0.2360848565000754, 0.23854981112372467], 'false,false,true': [0.24974644001784993, 0.21261443396828747], 'false': [0.18899695166207106, 0.2230925188093285], 'false,false,false': [0.23198117035955465, 0.21997843348690105], 'false,false': [0.2220724935303267, 0.22351625482008566], 'true': [0.20223026999892554, 0.23848140795476458]}, {'': [0.2369761609374034, 0.22283285813703468], 'true,false': [0.24336269636313582, 0.23797785966778454], 'true,false,false': [0.23608485650008165, 0.2384962645876834], 'false,false,true': [0.24974644001784935, 0.2126144339682825], 'false': [0.1889969516620704, 0.22277129254456354], 'false,false,false': [0.2319811703595469, 0.2199784334869205], 'false,false': [0.22111970607504314, 0.2234582176156241], 'true': [0.20223026999892355, 0.23843143255060154]}, {'': [0.23690180161206031, 0.2221039086234821], 'true,false': [0.24336269636313673, 0.2379514785633568], 'true,false,false': [0.2360848565000791, 0.23846753634284723], 'false,false,true': [0.24974644001785096, 0.2126144339682865], 'false': [0.1889969516620697, 0.22255670671007027], 'false,false,false': [0.2319811703595517, 0.21997843348693155], 'false,false': [0.2204869475627567, 0.22341758719687285], 'true': [0.20223026999892554, 0.2384056342909353]}, {'': [0.23686998423088476, 0.22172164824443577], 'true,false': [0.24336269636313537, 0.23793973616737357], 'true,false,false': [0.23608485650008373, 0.23845483362794198], 'false,false,true': [0.24974644001784965, 0.21261443396828872], 'false': [0.18899695166206998, 0.22242935200333372], 'false,false,false': [0.231981170359548, 0.21997843348692483], 'false,false': [0.22011483624894393, 0.223391910749276], 'true': [0.20223026999892438, 0.2383944581127639]}, {'': [0.23685719388836535, 0.22152970274694067], 'true,false': [0.243362696363135, 0.23793585622227062], 'true,false,false': [0.23608485650008446, 0.2384509100016141], 'false,false,true': [0.24974644001785024, 0.21261443396829535], 'false': [0.18899695166207006, 0.22236022700909377], 'false,false,false': [0.23198117035955035, 0.2199784334869049], 'false,false': [0.21991517123948803, 0.22337701405142552], 'true': [0.2022302699989245, 0.23839080822955427]}, {'': [0.23685244692156784, 0.22143436798076102], 'true,false': [0.24336269636313418, 0.23793572311951125], 'true,false,false': [0.23608485650008096, 0.23845122878403643], 'false,false,true': [0.2497464400178512, 0.21261443396829222], 'false': [0.18899695166206992, 0.22232518582873093], 'false,false,false': [0.23198117035954938, 0.21997843348690974], 'false,false': [0.21981524362169516, 0.22336897743523262], 'true': [0.20223026999892418, 0.23839066476852816]}, {'': [0.23685104039181773, 0.22138675238415764], 'true,false': [0.2433626963631349, 0.2379371519896678], 'true,false,false': [0.2360848565000836, 0.23845330727436406], 'false,false,true': [0.2497464400178511, 0.21261443396828938], 'false': [0.18899695166206973, 0.2223083926294135], 'false,false,false': [0.2319811703595468, 0.21997843348690707], 'false,false': [0.21976798114774385, 0.2233649146493708], 'true': [0.20223026999892446, 0.23839196949447025]}, {'': [0.23685096611473241, 0.22136257813247867], 'true,false': [0.24336269636313518, 0.2379390669591708], 'true,false,false': [0.23608485650008307, 0.2384558980628907], 'false,false,true': [0.24974644001785165, 0.21261443396828805], 'false': [0.18899695166206976, 0.2223007557452042], 'false,false,false': [0.2319811703595465, 0.21997843348690124], 'false,false': [0.21974676107819943, 0.22336298700039608], 'true': [0.20223026999892416, 0.2383937234893638]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '0;true,false;educationconcentration(A, E).;true;true', '0;true,false,false;educationconcentration(B, F).;true;true', '0;false,false,true;educationconcentration(B, I).;true;true', '0;false;educationconcentration(B, G), educationconcentration(A, G).;true;true', '0;false,false,false;educationconcentration(B, J).;true;true', '0;false,false;educationconcentration(A, H).;true;true', '0;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '1;true,false;educationconcentration(A, E).;true;true', '1;true,false,false;educationconcentration(B, F).;true;true', '1;false,false,true;educationconcentration(B, I).;true;true', '1;false;educationconcentration(A, G), educationconcentration(B, G).;true;true', '1;false,false,false;educationconcentration(B, J).;true;true', '1;false,false;educationconcentration(A, H).;true;true', '1;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '2;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '2;true,false,false;educationconcentration(B, G).;true;true', '2;false,false,true;educationconcentration(B, J).;true;true', '2;false;educationconcentration(B, H), educationconcentration(A, H).;true;true', '2;false,false,false;educationconcentration(B, K).;true;true', '2;false,false;educationconcentration(A, I).;true;true', '2;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '3;true,false;educationconcentration(B, E), educationconcentration(A, F).;true;true', '3;true,false,false;educationconcentration(B, G).;true;true', '3;false,false,true;educationconcentration(B, J).;true;true', '3;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '3;false,false,false;educationconcentration(B, K).;true;true', '3;false,false;educationconcentration(A, I).;true;true', '3;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '4;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '4;true,false,false;educationconcentration(B, G).;true;true', '4;false,false,true;educationconcentration(B, J).;true;true', '4;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '4;false,false,false;educationconcentration(B, K).;true;true', '4;false,false;educationconcentration(A, I).;true;true', '4;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '5;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '5;true,false,false;educationconcentration(B, G).;true;true', '5;false,false,true;educationconcentration(B, J).;true;true', '5;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '5;false,false,false;educationconcentration(B, K).;true;true', '5;false,false;educationconcentration(A, I).;true;true', '5;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '6;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '6;true,false,false;educationconcentration(B, G).;true;true', '6;false,false,true;educationconcentration(B, J).;true;true', '6;false;educationconcentration(B, H), educationconcentration(A, H).;true;true', '6;false,false,false;educationconcentration(B, K).;true;true', '6;false,false;educationconcentration(A, I).;true;true', '6;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '7;true,false;educationconcentration(B, E), educationconcentration(A, F).;true;true', '7;true,false,false;educationconcentration(B, G).;true;true', '7;false,false,true;educationconcentration(B, J).;true;true', '7;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '7;false,false,false;educationconcentration(B, K).;true;true', '7;false,false;educationconcentration(A, I).;true;true', '7;true;educationconcentration(B, D), educationconcentration(A, D).;true;true', '8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '8;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '8;true,false,false;educationconcentration(B, G).;true;true', '8;false,false,true;educationconcentration(B, J).;true;true', '8;false;educationconcentration(A, H), educationconcentration(B, H).;true;true', '8;false,false,false;educationconcentration(B, K).;true;true', '8;false,false;educationconcentration(A, I).;true;true', '8;true;educationconcentration(A, D), educationconcentration(B, D).;true;true', '9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '9;true,false;educationconcentration(A, E), educationconcentration(B, F).;true;true', '9;true,false,false;educationconcentration(B, G).;true;true', '9;false,false,true;educationconcentration(B, J).;true;true', '9;false;educationconcentration(B, H), educationconcentration(A, H).;true;true', '9;false,false,false;educationconcentration(B, K).;true;true', '9;false,false;educationconcentration(A, I).;true;true', '9;true;educationconcentration(A, D), educationconcentration(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.5767118093510066;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E) )
%   | | then if ( educationschool(B, F), educationschool(A, F) )
%   | | | then return 0.5635060779566508;  // std dev = 10,788, 560,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=395 */
%   | | | else return 0.2864736328542607;  // std dev = 11,907, 579,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=248 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.47611140158744336;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.483351747430497;  // std dev = 20,815, 1.849,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=1.156 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.6051368869067419;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.3422253682205322;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.16479546077926602;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else return 0.1958838259070238;  // std dev = 0,473, 1.969,000 (wgt'ed) examples reached here.  /* #neg=1.304 #pos=665 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.4912045664290238;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E) )
%   | | then if ( educationyear(B, F) )
%   | | | then return 0.242510773815115;  // std dev = 12,285, 632,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=283 */
%   | | | else return 0.5113326194010676;  // std dev = 10,113, 507,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=360 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.40779040693973384;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.4138263349202136;  // std dev = 20,815, 1.849,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=1.156 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.5145976514458478;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then return 0.17261613809273432;  // std dev = 0,473, 819,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=279 */
%   | | else if ( educationconcentration(B, J) )
%   | | | then return 0.1983586570418153;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.15932556454335817;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.3938252171832137;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then if ( languages(B, G), educationschool(A, H) )
%   | | | then return 0.038410352603794225;  // std dev = 3,968, 78,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.4047343374364932;  // std dev = 7,014, 235,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=159 */
%   | | else if ( educationconcentration(B, I) )
%   | | | then return 0.3322088851930368;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.3225924445977999;  // std dev = 25,037, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(B, J), educationconcentration(A, J) )
%   | then return 0.41078589492528483;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, K) )
%   | | then return 0.1471047279181783;  // std dev = 0,472, 819,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=279 */
%   | | else if ( educationconcentration(B, L) )
%   | | | then return 0.1688616960115204;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.1359280820120177;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.3023302815012581;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(B, E), educationconcentration(A, F) )
%   | | then return 0.24678412389860052;  // std dev = 0,471, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.25992431028217705;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.2531814342264421;  // std dev = 25,005, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.3139530867031908;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.24139856199701698;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.09507585175743415;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.1407889905997385;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.1140554265937753;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.22754393957028954;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.19065462749546777;  // std dev = 0,469, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.19825271345458534;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.19372986067499262;  // std dev = 24,986, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.23587140403097484;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.1943380944051275;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.07878183614378255;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.11529569816018599;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.09433238102617436;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.17080495717534394;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.1451666577075101;  // std dev = 0,469, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.1493492127659706;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.14631029208035648;  // std dev = 24,977, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.1773571671804112;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.15277773790626364;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.06462457244961137;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.09303489882891182;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.07708171650846661;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.12893656631511943;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.10977033215687013;  // std dev = 0,468, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.11205350904304807;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.10994302247005161;  // std dev = 24,973, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.1345190448741407;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.11810514818826603;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.052572634929966354;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.07419681789687359;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.06236566152927859;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(B, D), educationconcentration(A, D) )
%   | then return 0.0981367400428099;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(B, E), educationconcentration(A, F) )
%   | | then return 0.08280079054585815;  // std dev = 0,468, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.08409180931391524;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.08255730136638395;  // std dev = 24,972, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.10311333680224419;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.09029252877189847;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.04248089919261472;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.05863749687369214;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.05006012219542625;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.07531381907324952;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.06244551390407135;  // std dev = 0,468, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.06323701645634448;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.06207079192417601;  // std dev = 24,972, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(A, H), educationconcentration(B, H) )
%   | then return 0.07983539750646215;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.06854426061580257;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.03414107271222433;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.046020329427999794;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.039930718301068854;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationconcentration(A, D), educationconcentration(B, D) )
%   | then return 0.05822328694108919;  // std dev = 0,450, 167,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=120 */
%   | else if ( educationconcentration(A, E), educationconcentration(B, F) )
%   | | then return 0.04713254269203353;  // std dev = 0,468, 313,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=182 */
%   | | else if ( educationconcentration(B, G) )
%   | | | then return 0.04767618545845971;  // std dev = 13,271, 746,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=461 */
%   | | | else return 0.04675817370627448;  // std dev = 24,973, 2.675,000 (wgt'ed) examples reached here.  /* #neg=1.058 #pos=1.617 */
%   else if ( educationconcentration(B, H), educationconcentration(A, H) )
%   | then return 0.06234977383426483;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationconcentration(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.05180689285352559;  // std dev = 6,262, 157,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=76 */
%   | | | else return 0.027320420854799875;  // std dev = 11,864, 662,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=203 */
%   | | else if ( educationconcentration(B, K) )
%   | | | then return 0.0359285924473878;  // std dev = 11,347, 555,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=203 */
%   | | | else return 0.03169399986337099;  // std dev = 17,637, 1.414,000 (wgt'ed) examples reached here.  /* #neg=952 #pos=462 */


Results
   AUC ROC   = 0.533905
   AUC PR    = 0.542388
   CLL	      = -0.719032
   Precision = 0.510099 at threshold = 0.5
   Recall    = 0.712372
   F1        = 0.594501


Total learning time: 111.85300000000001 seconds
Total inference time: 4.704 seconds
AUC ROC: 0.533905


Refined model AUC ROC: 0.533905


Dataset: 48_twitter_facebook, Fold: 2, Type: transfer, Time: 02:46:32
{'Learning time': 238.933, 'AUC PR': 0.542388, 'F1': 0.594501, 'AUC ROC': 0.533905, 'CLL': -0.719032, 'Inference time': 4.704, 'Mapping results': {'Generating mappings time': 0.3082408905029297, 'Generating paths time': 2.51435923576355, 'Finding best mapping': 1.6689300537109375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.13295936584472656, 'Max mapping': 24389, 'Total time': 2.9555697441101074}, 'Parameter Learning results': {'Learning time': 127.08, 'AUC PR': 0.540775, 'F1': 0.593508, 'AUC ROC': 0.530365, 'CLL': -0.720542, 'Inference time': 4.964, 'Precision': [0.501503, 0.5], 'Recall': 0.726857}, 'Precision': [0.510099, 0.5], 'Recall': 0.712372}


Start learning from scratch in target domain

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationyear(B, D), gender(A, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then return 0.5560561234525557;  // std dev = 0,459, 1.099,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=767 */
%   | | else if ( educationconcentration(A, G), educationschool(A, H) )
%   | | | then return 0.06467067422994731;  // std dev = 6,725, 276,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=57 */
%   | | | else return 0.3633425139474774;  // std dev = 16,270, 1.059,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=535 */
%   | else return 0.5541271218752402;  // std dev = 0,460, 1.467,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=1.021 */
%   else if ( educationconcentration(B, I), educationconcentration(A, J) )
%   | then if ( educationschool(A, K), educationschool(B, K) )
%   | | then return 0.5689923085934856;  // std dev = 0,453, 166,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=118 */
%   | | else return 0.12841920536978263;  // std dev = 0,444, 74,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( hometown(B, L), languages(B, M) )
%   | | then if ( location(B, N), educationdegree(B, P) )
%   | | | then return 0.03206197857777323;  // std dev = 2,571, 46,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.41049550549662117;  // std dev = 8,276, 277,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=153 */
%   | | else return 0.16447475832307765;  // std dev = 0,461, 2.308,000 (wgt'ed) examples reached here.  /* #neg=1.601 #pos=707 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( lastname(B, F), location(B, G) )
%   | | then if ( educationconcentration(B, H), gender(A, I) )
%   | | | then return 0.22916374064911305;  // std dev = 3,232, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.6012971018193272;  // std dev = 2,149, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | else return 0.09442053820280913;  // std dev = 0,454, 279,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=83 */
%   | else if ( educationyear(B, J), educationtype(A, K) )
%   | | then if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.511116154802649;  // std dev = 13,662, 958,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=704 */
%   | | | else return 0.22059486825878108;  // std dev = 14,258, 860,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=345 */
%   | | else return 0.478183206166109;  // std dev = 0,460, 1.729,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=1.203 */
%   else if ( educationyear(A, M), educationyear(B, M) )
%   | then if ( educationschool(A, N), educationschool(B, N) )
%   | | then return 0.5245689804121573;  // std dev = 0,454, 180,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=128 */
%   | | else return 0.1829118300812999;  // std dev = 0,475, 268,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=94 */
%   | else return 0.15476317110418475;  // std dev = 0,464, 2.423,000 (wgt'ed) examples reached here.  /* #neg=1.639 #pos=784 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationdegree(B, D), languages(B, E) )
%   | then if ( lastname(B, F), hometown(B, G) )
%   | | then if ( worklocation(A, H), educationyear(A, I) )
%   | | | then return -0.028194204949320994;  // std dev = 1,894, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.276449706795798;  // std dev = 5,899, 150,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=78 */
%   | | else return 0.02665617859757432;  // std dev = 0,430, 180,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=45 */
%   | else if ( workenddate(B, J), educationconcentration(A, K) )
%   | | then return 0.049713286075680485;  // std dev = 0,430, 106,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( educationyear(B, L), birthday(B, M) )
%   | | | then return 0.298751839160682;  // std dev = 16,295, 1.141,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=648 */
%   | | | else return 0.3801565268173313;  // std dev = 21,991, 2.300,000 (wgt'ed) examples reached here.  /* #neg=727 #pos=1.573 */
%   else if ( educationconcentration(B, N), educationconcentration(A, N) )
%   | then return 0.4933656772573851;  // std dev = 0,427, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationyear(A, P), educationtype(B, Q) )
%   | | then return 0.1914902439053507;  // std dev = 0,481, 1.504,000 (wgt'ed) examples reached here.  /* #neg=913 #pos=591 */
%   | | else return 0.08599958942802227;  // std dev = 0,444, 1.284,000 (wgt'ed) examples reached here.  /* #neg=931 #pos=353 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workenddate(B, D), hometown(B, E) )
%   | then if ( lastname(B, F), location(B, G) )
%   | | then return 0.42568546782838507;  // std dev = 0,425, 65,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=50 */
%   | | else return -0.03573880145783212;  // std dev = 0,426, 184,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=46 */
%   | else if ( educationdegree(B, H), languages(B, I) )
%   | | then if ( lastname(B, J), birthday(B, K) )
%   | | | then return 0.4122848231921064;  // std dev = 2,958, 40,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.08873363960857641;  // std dev = 7,412, 265,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=93 */
%   | | else return 0.2775408745259099;  // std dev = 0,464, 3.347,000 (wgt'ed) examples reached here.  /* #neg=1.183 #pos=2.164 */
%   else if ( languages(B, L), hometown(B, M) )
%   | then if ( location(B, N), educationdegree(B, P) )
%   | | then return -0.011786457867796139;  // std dev = 0,385, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( educationdegree(A, Q), educationdegree(B, R) )
%   | | | then return 0.08063636581591349;  // std dev = 3,341, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.34105758701908867;  // std dev = 7,740, 258,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=157 */
%   | else return 0.10887885695270737;  // std dev = 0,461, 2.513,000 (wgt'ed) examples reached here.  /* #neg=1.691 #pos=822 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( gender(B, D) )
%   | then return 0.3688304873389007;  // std dev = 0,421, 630,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=480 */
%   | else return -0.07813694799354277;  // std dev = 0,468, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( educationdegree(B, F), birthday(B, G) )
%   | | then if ( languages(B, H), educationdegree(A, I) )
%   | | | then return -0.05308696520925866;  // std dev = 3,174, 54,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.19195479723657408;  // std dev = 7,907, 275,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=155 */
%   | | else if ( birthday(B, J), birthday(A, K) )
%   | | | then return 0.40596853453637716;  // std dev = 6,533, 297,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=244 */
%   | | | else return 0.2628026320863285;  // std dev = 15,614, 1.200,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=804 */
%   | else if ( location(A, L), educationschool(B, M) )
%   | | then return -0.0663507583358567;  // std dev = 0,394, 975,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=208 */
%   | | else if ( locale(B, N), locale(A, N) )
%   | | | then return 0.16123975365863735;  // std dev = 20,009, 1.750,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=991 */
%   | | | else return 0.07677111322434023;  // std dev = 18,118, 1.574,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=485 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workenddate(B, D), worklocation(B, E) )
%   | then return -0.14352275814872426;  // std dev = 0,374, 78,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   | else if ( worklocation(B, F) )
%   | | then return 0.2816714885197344;  // std dev = 0,400, 266,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=207 */
%   | | else if ( lastname(B, G), birthday(B, H) )
%   | | | then return 0.23123116484963496;  // std dev = 10,391, 570,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=398 */
%   | | | else return 0.1261994405099224;  // std dev = 25,341, 2.987,000 (wgt'ed) examples reached here.  /* #neg=1.225 #pos=1.762 */
%   else if ( languages(A, I), hometown(A, J) )
%   | then if ( workenddate(A, K) )
%   | | then return 0.4588339478613031;  // std dev = 0,436, 56,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | | else if ( location(A, L), educationdegree(A, M) )
%   | | | then return -0.07529328491485171;  // std dev = 2,702, 47,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return 0.1877249283161844;  // std dev = 8,183, 285,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=133 */
%   | else if ( workemployer(B, N), educationyear(B, P) )
%   | | then return 0.25402713602383425;  // std dev = 0,487, 194,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=108 */
%   | | else return 0.04908549624960884;  // std dev = 0,442, 2.289,000 (wgt'ed) examples reached here.  /* #neg=1.575 #pos=714 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( educationdegree(B, D), educationdegree(A, E) )
%   | then if ( lastname(B, F), lastname(A, G) )
%   | | then return -0.3459998805673593;  // std dev = 0,319, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.16509570339537774;  // std dev = 0,441, 50,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=34 */
%   | else return 0.26172452064615975;  // std dev = 0,418, 582,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=450 */
%   else if ( educationschool(A, H), educationschool(B, H) )
%   | then if ( birthday(A, I), birthday(B, I) )
%   | | then return 0.30770698445475203;  // std dev = 0,369, 184,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=150 */
%   | | else if ( educationdegree(B, J), birthday(B, K) )
%   | | | then return 0.06426414817932441;  // std dev = 7,711, 268,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=131 */
%   | | | else return 0.17263138102316689;  // std dev = 16,495, 1.374,000 (wgt'ed) examples reached here.  /* #neg=439 #pos=935 */
%   | else if ( location(A, L), educationschool(B, M) )
%   | | then return -0.07337996832767053;  // std dev = 0,390, 975,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=208 */
%   | | else if ( educationschool(A, N), educationconcentration(B, P) )
%   | | | then return -0.04118642974986873;  // std dev = 8,541, 371,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=104 */
%   | | | else return 0.08275208468602115;  // std dev = 25,350, 2.953,000 (wgt'ed) examples reached here.  /* #neg=1.581 #pos=1.372 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationyear(B, C), educationconcentration(A, D) )
%   then if ( birthday(B, E), birthday(A, E) )
%   | then return 0.302643266209326;  // std dev = 0,438, 102,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=72 */
%   | else return -0.007267280599421545;  // std dev = 0,421, 1.293,000 (wgt'ed) examples reached here.  /* #neg=775 #pos=518 */
%   else if ( educationconcentration(A, F), educationschool(A, G) )
%   | then if ( educationschool(B, G) )
%   | | then return 0.24106117090534063;  // std dev = 0,382, 309,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=251 */
%   | | else if ( educationschool(B, H) )
%   | | | then return -0.21385240945191128;  // std dev = 3,651, 103,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | | | else return 0.176321562338652;  // std dev = 9,009, 385,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=241 */
%   | else if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( educationyear(A, J), educationdegree(B, K) )
%   | | | then return 0.0694107788815014;  // std dev = 7,836, 273,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=150 */
%   | | | else return 0.16424667288502814;  // std dev = 13,608, 1.015,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=738 */
%   | | else if ( birthday(B, L), birthday(A, L) )
%   | | | then return 0.17982908700024572;  // std dev = 8,550, 315,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=176 */
%   | | | else return 0.031298576408956766;  // std dev = 24,813, 2.977,000 (wgt'ed) examples reached here.  /* #neg=1.752 #pos=1.225 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workemployer(A, D), hometown(A, E) )
%   | then if ( workstartdate(A, F) )
%   | | then if ( workenddate(A, G) )
%   | | | then return 0.2014306907779582;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.5097369799788625;  // std dev = 1,661, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return 0.07158866748630037;  // std dev = 0,457, 120,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=76 */
%   | else return 0.12411736337619171;  // std dev = 0,431, 2.155,000 (wgt'ed) examples reached here.  /* #neg=650 #pos=1.505 */
%   else if ( educationschool(A, H), educationschool(B, I) )
%   | then return -0.023279089524380014;  // std dev = 0,435, 2.269,000 (wgt'ed) examples reached here.  /* #neg=1.575 #pos=694 */
%   | else if ( educationconcentration(B, J), locale(B, K) )
%   | | then if ( birthday(B, L), workposition(B, M) )
%   | | | then return -0.27413091571710546;  // std dev = 1,006, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.20739693265357506;  // std dev = 9,508, 431,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=271 */
%   | | else if ( educationconcentration(A, N), locale(B, P) )
%   | | | then return 0.11482691284850312;  // std dev = 9,653, 433,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=257 */
%   | | | else return 0.014978136699040492;  // std dev = 16,266, 1.324,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=577 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workenddate(B, C), educationconcentration(A, D) )
%   then if ( educationconcentration(B, E) )
%   | then return 0.09692251622804719;  // std dev = 0,451, 69,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   | else return -0.15598027568508688;  // std dev = 0,307, 173,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=26 */
%   else if ( workstartdate(B, F), educationyear(A, G) )
%   | then if ( workenddate(A, H), educationconcentration(B, I) )
%   | | then return -0.16259329944978265;  // std dev = 0,339, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( workemployer(B, J), educationconcentration(A, K) )
%   | | | then return 0.42245182120054603;  // std dev = 1,901, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return 0.11550175263439488;  // std dev = 11,212, 572,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=335 */
%   | else if ( educationschool(A, L), educationschool(B, L) )
%   | | then if ( educationdegree(B, M), birthday(B, N) )
%   | | | then return 0.010440110179446538;  // std dev = 8,778, 358,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=186 */
%   | | | else return 0.10961480081138764;  // std dev = 16,808, 1.592,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=1.166 */
%   | | else if ( educationschool(A, P), educationtype(B, Q) )
%   | | | then return -0.030300609295283422;  // std dev = 19,189, 1.935,000 (wgt'ed) examples reached here.  /* #neg=1.354 #pos=581 */
%   | | | else return 0.05455495275195636;  // std dev = 20,261, 2.010,000 (wgt'ed) examples reached here.  /* #neg=988 #pos=1.022 */


Results
   AUC ROC   = 0.569819
   AUC PR    = 0.560605
   CLL	      = -0.704116
   Precision = 0.548709 at threshold = 0.5
   Recall    = 0.645938
   F1        = 0.593367


Total learning time: 231.639 seconds
Total inference time: 6.638 seconds
AUC ROC: 0.569819


Dataset: 48_twitter_facebook, Fold: 2, Type: scratch, Time: 02:50:30
{'Learning time': 231.639, 'AUC PR': 0.560605, 'F1': 0.593367, 'AUC ROC': 0.569819, 'CLL': -0.704116, 'Inference time': 6.638, 'Precision': [0.548709, 0.5], 'Recall': 0.645938}


Starting fold 3

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.09384441375732422
   Generating paths time   = 2.6919639110565186
   Generating mappings time   = 0.4946415424346924
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 3.280458688735962


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationtype(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- location(A, C), location(B, C).;true;true
0;true,false;educationtype(A, E).;false;true
0;true,false,false;educationtype(B, F).;false;false
0;false,false,true;educationtype(B, I).;false;false
0;false;educationtype(B, G), educationtype(A, G).;false;true
0;false,false,false;educationtype(B, J).;false;false
0;false,false;educationtype(A, H).;true;true
0;true;educationtype(A, D), educationtype(B, D).;false;true
1;;edge(A, B) :- location(A, C), location(B, C).;true;true
1;true,false;educationtype(A, E).;false;true
1;true,false,false;educationtype(B, F).;false;false
1;false,false,true;educationtype(B, I).;false;false
1;false;educationtype(A, G), educationtype(B, G).;false;true
1;false,false,false;educationtype(B, J).;false;false
1;false,false;educationtype(A, H).;true;true
1;true;educationtype(B, D), educationtype(A, D).;false;true
2;;edge(A, B) :- location(A, C), location(B, C).;true;true
2;true,false;educationtype(A, E), educationtype(B, F).;false;true
2;true,false,false;educationtype(B, G).;false;false
2;false,false,true;educationtype(B, J).;false;false
2;false;educationtype(B, H), educationtype(A, H).;false;true
2;false,false,false;educationtype(B, K).;false;false
2;false,false;educationtype(A, I).;true;true
2;true;educationtype(B, D), educationtype(A, D).;false;true
3;;edge(A, B) :- location(A, C), location(B, C).;true;true
3;true,false;educationtype(B, E), educationtype(A, F).;false;true
3;true,false,false;educationtype(B, G).;false;false
3;false,false,true;educationtype(B, J).;false;false
3;false;educationtype(A, H), educationtype(B, H).;false;true
3;false,false,false;educationtype(B, K).;false;false
3;false,false;educationtype(A, I).;true;true
3;true;educationtype(B, D), educationtype(A, D).;false;true
4;;edge(A, B) :- location(A, C), location(B, C).;true;true
4;true,false;educationtype(A, E), educationtype(B, F).;false;true
4;true,false,false;educationtype(B, G).;false;false
4;false,false,true;educationtype(B, J).;false;false
4;false;educationtype(A, H), educationtype(B, H).;false;true
4;false,false,false;educationtype(B, K).;false;false
4;false,false;educationtype(A, I).;true;true
4;true;educationtype(B, D), educationtype(A, D).;false;true
5;;edge(A, B) :- location(A, C), location(B, C).;true;true
5;true,false;educationtype(A, E), educationtype(B, F).;false;true
5;true,false,false;educationtype(B, G).;false;false
5;false,false,true;educationtype(B, J).;false;false
5;false;educationtype(A, H), educationtype(B, H).;false;true
5;false,false,false;educationtype(B, K).;false;false
5;false,false;educationtype(A, I).;true;true
5;true;educationtype(A, D), educationtype(B, D).;false;true
6;;edge(A, B) :- location(A, C), location(B, C).;true;true
6;true,false;educationtype(A, E), educationtype(B, F).;false;true
6;true,false,false;educationtype(B, G).;false;false
6;false,false,true;educationtype(B, J).;false;false
6;false;educationtype(B, H), educationtype(A, H).;false;true
6;false,false,false;educationtype(B, K).;false;false
6;false,false;educationtype(A, I).;true;true
6;true;educationtype(A, D), educationtype(B, D).;false;true
7;;edge(A, B) :- location(A, C), location(B, C).;true;true
7;true,false;educationtype(B, E), educationtype(A, F).;false;true
7;true,false,false;educationtype(B, G).;false;false
7;false,false,true;educationtype(B, J).;false;false
7;false;educationtype(A, H), educationtype(B, H).;false;true
7;false,false,false;educationtype(B, K).;false;false
7;false,false;educationtype(A, I).;true;true
7;true;educationtype(B, D), educationtype(A, D).;false;true
8;;edge(A, B) :- location(A, C), location(B, C).;true;true
8;true,false;educationtype(A, E), educationtype(B, F).;false;true
8;true,false,false;educationtype(B, G).;false;false
8;false,false,true;educationtype(B, J).;false;false
8;false;educationtype(A, H), educationtype(B, H).;false;true
8;false,false,false;educationtype(B, K).;false;false
8;false,false;educationtype(A, I).;true;true
8;true;educationtype(A, D), educationtype(B, D).;false;true
9;;edge(A, B) :- location(A, C), location(B, C).;true;true
9;true,false;educationtype(A, E), educationtype(B, F).;false;true
9;true,false,false;educationtype(B, G).;false;false
9;false,false,true;educationtype(B, J).;false;false
9;false;educationtype(B, H), educationtype(A, H).;false;true
9;false,false,false;educationtype(B, K).;false;false
9;false,false;educationtype(A, I).;true;true
9;true;educationtype(A, D), educationtype(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.3614169089557176;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.24451257146314734;  // std dev = 4,568, 88,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.4463842292171583;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.3658962533355026;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.1335112539400907;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.37559079556462366;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.3641501985233861;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.3479448534668544;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.3115031129252515;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.21206851081177833;  // std dev = 4,568, 88,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.3829554279400097;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.12543301544918353;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.31528724007868153;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.11646943703709463;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.32347057056467043;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.3138124099908764;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.3001104399107207;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.25856759076607355;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.0035779347748075125;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.313486392675019;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.21678061222871692;  // std dev = 4,298, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.2615164428264581;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.10027883948180798;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.26787779645958226;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.26036769948240723;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.24966186463774137;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.20770403635367152;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.0029901057179098707;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.24686056424534744;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.17930556192367683;  // std dev = 4,298, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.2098435700403452;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.08532080762211278;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.21444359902040136;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2090106461960497;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.20121431971324968;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.16270992376288484;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.0024979081266749445;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.18939831465027143;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.1449571546965672;  // std dev = 4,297, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.16418437889893475;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.07183938853263214;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.1673458562113947;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.1636106855757793;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.15822055308882219;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.12528032444799755;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.0020860711489823023;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.14324053978445073;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.11508463729305698;  // std dev = 4,297, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.12626755700238484;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.059945925844890925;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.1283833343637225;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.1258834881471829;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.12227059726121989;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.09540772936105432;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.0017416748597284873;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.10764416962019922;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.09013152040555035;  // std dev = 4,297, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.09606244730275232;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04964163292948673;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.09746979030149412;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.09580760729434412;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.09341732000363269;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.07217920233321795;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.001453815363839165;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.08074344532804137;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.06989322660950763;  // std dev = 4,296, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.07261518755221497;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04084779392804677;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.0735590006614658;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07244526606970023;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.07086413207508485;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.05439643230395964;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.00121330904428896;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.060585260580884884;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.053817970318845464;  // std dev = 4,296, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.05469038665394067;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03343555017323557;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.05533388291877464;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05457557941612133;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.05352144821165142;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.040905327938548536;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.001012434274335175;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.045515119000555944;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.041233506083721505;  // std dev = 4,296, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.04110682057233403;  // std dev = 20,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.02725073875958796;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.0415544851144926;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.04102790165235326;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.04031654801271173;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */


Results
   AUC ROC   = 0.475444
   AUC PR    = 0.496427
   CLL	      = -0.693431
   Precision = 0.848485 at threshold = 0.5
   Recall    = 0.00605
   F1        = 0.012015


Total learning time: 70.80199999999999 seconds
Total inference time: 4.345 seconds
AUC ROC: 0.475444


Structure after Parameter Learning
[['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [4.568, 54, 34], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [1.195, 5, 2]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [4.568, 54, 34], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [1.195, 5, 2]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.298, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.298, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.297, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.297, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.297, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.296, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.296, 44, 32]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [3.515, 21, 30], 'true,true': [8.746, 152, 154], 'false,true': [20.479, 826, 852], 'false,false,true,true': [5.247, 100, 38], 'false,false,false,false': [17.496, 625, 600], 'false,false,true,false': [19.66, 747, 801], 'true,false,true': [1.777, 15, 4], 'false,false,false,true': [19.892, 782, 801], 'true,false,false,false': [4.296, 44, 32]}]]
[{'': [0.24982379199624427, 0.24999905495894137], 'false': [0.2499399790601734, 0.24999757378129986], 'true,false,false': [0.24221453287197386, 0.20408163265306126], 'false,false,true': [0.19953791220331996, 0.24969578150353822], 'true,false': [0.23708677685950563, 0.24732461355529295], 'false,false,false': [0.2499639848373401, 0.24989587671802657], 'false,false': [0.24999437134227517, 0.2499988585725443], 'true': [0.24998932034687935, 0.24770125727153464]}, {'': [0.2487252758883272, 0.2496626355633142], 'false': [0.24993997906013118, 0.2495419268975755], 'true,false,false': [0.2422145328719717, 0.20408163265306117], 'false,false,true': [0.1995379122033185, 0.2496957815035096], 'true,false': [0.23708677685950458, 0.24465017335620223], 'false,false,false': [0.2499639848373207, 0.24989587671802574], 'false,false': [0.24881051461771003, 0.2499804455057159], 'true': [0.24998932034688084, 0.2447715712717033]}, {'': [0.24766773646677498, 0.24934716567613208], 'false': [0.24993997906016424, 0.2491146949347858], 'true,false,false': [0.24221453287197248, 0.24311349014267025], 'false,false,true': [0.19953791220331962, 0.24969578150351887], 'true,false': [0.16620498614958437, 0.24499989578816025], 'false,false,false': [0.24996398483731186, 0.24989587671804006], 'false,false': [0.24770128107810002, 0.24996246040260253], 'true': [0.24998932034687113, 0.2419366295486566]}, {'': [0.24641102089407974, 0.2491035047714953], 'false': [0.24993997906015775, 0.2487846889208404], 'true,false,false': [0.24221453287197242, 0.2430366154242712], 'false,false,true': [0.19953791220331765, 0.24969578150350422], 'true,false': [0.16620498614958465, 0.24380319664750189], 'false,false,false': [0.2499639848373215, 0.2498958767180388], 'false,false': [0.24684330324685647, 0.24994922110728562], 'true': [0.24998932034687138, 0.23839013507964896]}, {'': [0.24557826754001083, 0.24894273938395226], 'false': [0.24993997906014923, 0.24856690971726475], 'true,false,false': [0.24221453287197228, 0.2429760708028564], 'false,false,true': [0.19953791220331943, 0.2496957815035115], 'true,false': [0.16620498614958445, 0.24314487752015018], 'false,false,false': [0.24996398483732335, 0.24989587671804778], 'false,false': [0.24627582209176882, 0.24994141774760084], 'true': [0.24998932034687857, 0.23604119078454266]}, {'': [0.2450714811922125, 0.24884847215971398], 'false': [0.24993997906014181, 0.2484391741748226], 'true,false,false': [0.24221453287197195, 0.2429307171777381], 'false,false,true': [0.19953791220331799, 0.24969578150352822], 'true,false': [0.16620498614958462, 0.24283362448948606], 'false,false,false': [0.24996398483730853, 0.24989587671804356], 'false,false': [0.2459423163905616, 0.2499374826306858], 'true': [0.2499893203468767, 0.2346105690050396]}, {'': [0.2447762976522451, 0.24879765070353513], 'false': [0.2499399790601417, 0.24837028641503697], 'true,false,false': [0.24221453287197237, 0.24289781461521912], 'false,false,true': [0.19953791220331887, 0.24969578150352142], 'true,false': [0.16620498614958437, 0.24269712801106624], 'false,false,false': [0.24996398483730745, 0.24989587671803112], 'false,false': [0.24576224354660792, 0.24993567757876578], 'true': [0.2499893203468761, 0.2337734204915474]}, {'': [0.24460754814700253, 0.24877184940098304], 'false': [0.24993997906014334, 0.24833530185433628], 'true,false,false': [0.2422145328719721, 0.2428743493934824], 'false,false,true': [0.19953791220331799, 0.24969578150351665], 'true,false': [0.1662049861495844, 0.24263767503032313], 'false,false,false': [0.24996398483731805, 0.2498958767180305], 'false,false': [0.24567074645415582, 0.2499348872649397], 'true': [0.24998932034687582, 0.2332908480193673]}, {'': [0.24451165048925746, 0.24875934227197313], 'false': [0.24993997906014676, 0.2483183384326792], 'true,false,false': [0.24221453287197195, 0.24285771631924094], 'false,false,true': [0.19953791220331807, 0.24969578150351712], 'true,false': [0.16620498614958445, 0.24261043545564312], 'false,false,false': [0.2499639848373071, 0.24989587671803265], 'false,false': [0.24562637082146738, 0.24993454571042165], 'true': [0.2499893203468765, 0.23301371889954503]}, {'': [0.24445716400219575, 0.24875352190460356], 'false': [0.24993997906014256, 0.24831044256986248], 'true,false,false': [0.24221453287197225, 0.24284591241118897], 'false,false,true': [0.19953791220331757, 0.24969578150351346], 'true,false': [0.1662049861495846, 0.24259677175567607], 'false,false,false': [0.24996398483731846, 0.2498958767180377], 'false,false': [0.24560570881267843, 0.24993439687742477], 'true': [0.24998932034687624, 0.23285449641954734]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- location(A, C), location(B, C).;true;true', '0;true,false;educationtype(A, E).;true;true', '0;true,false,false;educationtype(B, F).;true;true', '0;false,false,true;educationtype(B, I).;true;true', '0;false;educationtype(B, G), educationtype(A, G).;true;true', '0;false,false,false;educationtype(B, J).;true;true', '0;false,false;educationtype(A, H).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '1;;edge(A, B) :- location(A, C), location(B, C).;true;true', '1;true,false;educationtype(A, E).;true;true', '1;true,false,false;educationtype(B, F).;true;true', '1;false,false,true;educationtype(B, I).;true;true', '1;false;educationtype(A, G), educationtype(B, G).;true;true', '1;false,false,false;educationtype(B, J).;true;true', '1;false,false;educationtype(A, H).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '2;;edge(A, B) :- location(A, C), location(B, C).;true;true', '2;true,false;educationtype(A, E), educationtype(B, F).;true;true', '2;true,false,false;educationtype(B, G).;true;true', '2;false,false,true;educationtype(B, J).;true;true', '2;false;educationtype(B, H), educationtype(A, H).;true;true', '2;false,false,false;educationtype(B, K).;true;true', '2;false,false;educationtype(A, I).;true;true', '2;true;educationtype(B, D), educationtype(A, D).;true;true', '3;;edge(A, B) :- location(A, C), location(B, C).;true;true', '3;true,false;educationtype(B, E), educationtype(A, F).;true;true', '3;true,false,false;educationtype(B, G).;true;true', '3;false,false,true;educationtype(B, J).;true;true', '3;false;educationtype(A, H), educationtype(B, H).;true;true', '3;false,false,false;educationtype(B, K).;true;true', '3;false,false;educationtype(A, I).;true;true', '3;true;educationtype(B, D), educationtype(A, D).;true;true', '4;;edge(A, B) :- location(A, C), location(B, C).;true;true', '4;true,false;educationtype(A, E), educationtype(B, F).;true;true', '4;true,false,false;educationtype(B, G).;true;true', '4;false,false,true;educationtype(B, J).;true;true', '4;false;educationtype(A, H), educationtype(B, H).;true;true', '4;false,false,false;educationtype(B, K).;true;true', '4;false,false;educationtype(A, I).;true;true', '4;true;educationtype(B, D), educationtype(A, D).;true;true', '5;;edge(A, B) :- location(A, C), location(B, C).;true;true', '5;true,false;educationtype(A, E), educationtype(B, F).;true;true', '5;true,false,false;educationtype(B, G).;true;true', '5;false,false,true;educationtype(B, J).;true;true', '5;false;educationtype(A, H), educationtype(B, H).;true;true', '5;false,false,false;educationtype(B, K).;true;true', '5;false,false;educationtype(A, I).;true;true', '5;true;educationtype(A, D), educationtype(B, D).;true;true', '6;;edge(A, B) :- location(A, C), location(B, C).;true;true', '6;true,false;educationtype(A, E), educationtype(B, F).;true;true', '6;true,false,false;educationtype(B, G).;true;true', '6;false,false,true;educationtype(B, J).;true;true', '6;false;educationtype(B, H), educationtype(A, H).;true;true', '6;false,false,false;educationtype(B, K).;true;true', '6;false,false;educationtype(A, I).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '7;;edge(A, B) :- location(A, C), location(B, C).;true;true', '7;true,false;educationtype(B, E), educationtype(A, F).;true;true', '7;true,false,false;educationtype(B, G).;true;true', '7;false,false,true;educationtype(B, J).;true;true', '7;false;educationtype(A, H), educationtype(B, H).;true;true', '7;false,false,false;educationtype(B, K).;true;true', '7;false,false;educationtype(A, I).;true;true', '7;true;educationtype(B, D), educationtype(A, D).;true;true', '8;;edge(A, B) :- location(A, C), location(B, C).;true;true', '8;true,false;educationtype(A, E), educationtype(B, F).;true;true', '8;true,false,false;educationtype(B, G).;true;true', '8;false,false,true;educationtype(B, J).;true;true', '8;false;educationtype(A, H), educationtype(B, H).;true;true', '8;false,false,false;educationtype(B, K).;true;true', '8;false,false;educationtype(A, I).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '9;;edge(A, B) :- location(A, C), location(B, C).;true;true', '9;true,false;educationtype(A, E), educationtype(B, F).;true;true', '9;true,false,false;educationtype(B, G).;true;true', '9;false,false,true;educationtype(B, J).;true;true', '9;false;educationtype(B, H), educationtype(A, H).;true;true', '9;false,false,false;educationtype(B, K).;true;true', '9;false,false;educationtype(A, I).;true;true', '9;true;educationtype(A, D), educationtype(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationclasses(B, E) )
%   | | then return 0.7118074716848772;  // std dev = 0,353, 41,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | else return 0.3072055388730936;  // std dev = 0,497, 265,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=119 */
%   | else return 0.310203729620059;  // std dev = 0,498, 146,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=66 */
%   else if ( educationtype(B, F), educationtype(A, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then return 0.49649316167902824;  // std dev = 0,480, 918,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=586 */
%   | | else return 0.20814893509950916;  // std dev = 0,477, 760,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=266 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.1335112539400907;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.37559079556462366;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.3641501985233861;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.3479448534668544;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.3105930833899921;  // std dev = 0,494, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.20241132827433683;  // std dev = 0,487, 88,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.40428298602834756;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.10176197762498619;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.3143050154418501;  // std dev = 0,494, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.11646943703709463;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.32347057056467043;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.3138124099908764;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.3001104399107207;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.25786817083459185;  // std dev = 0,493, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.005769449602576629;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.3357711967359287;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.20628341966086428;  // std dev = 4,301, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.2607283101371143;  // std dev = 0,493, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.10027883948180798;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.26787779645958226;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.26036769948240723;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.24966186463774137;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( educationclasses(B, E) )
%   | | then return 0.48074346364654463;  // std dev = 0,353, 41,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | else return 0.1649808069107662;  // std dev = 0,497, 265,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=119 */
%   | else return 0.18098274503622272;  // std dev = 0,490, 146,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=66 */
%   else if ( educationtype(A, F), educationtype(B, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then return 0.31281443269697334;  // std dev = 0,480, 918,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=586 */
%   | | else return 0.08435227033938031;  // std dev = 0,477, 760,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=266 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.08532080762211278;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.21444359902040136;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.2090106461960497;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.20121431971324968;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.16150670021437813;  // std dev = 0,487, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.03693993241709653;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.2267121447852124;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.1338903535587935;  // std dev = 4,300, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.16233658362085146;  // std dev = 0,487, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.07183938853263214;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.1673458562113947;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.1636106855757793;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.15822055308882219;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationyear(B, E), educationschool(A, F) )
%   | | then return 0.022509407927454622;  // std dev = 0,479, 145,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=57 */
%   | | else return 0.2170817109130915;  // std dev = 0,476, 161,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=97 */
%   | else if ( educationtype(A, G), educationtype(B, H) )
%   | | then return -0.030125078380048333;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return 0.1327114266413591;  // std dev = 0,494, 127,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=62 */
%   else if ( educationtype(A, I), educationtype(B, I) )
%   | then return 0.12534306416201677;  // std dev = 0,486, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.059945925844890925;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.1283833343637225;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.1258834881471829;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.12227059726121989;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.09530603101070964;  // std dev = 0,483, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else return 0.08559950466036233;  // std dev = 0,485, 146,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=66 */
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then if ( educationschool(B, F), gender(B, G) )
%   | | then if ( hometown(B, H), educationschool(A, F) )
%   | | | then return 0.26919615782298634;  // std dev = 8,714, 392,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=289 */
%   | | | else return 0.08468312470762338;  // std dev = 15,865, 1.032,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=506 */
%   | | else return -0.12658426190696132;  // std dev = 0,416, 254,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=57 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04964163292948673;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.09746979030149412;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.09580760729434412;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.09341732000363269;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.07253793490950275;  // std dev = 0,483, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return -0.04040768194904507;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.11912995265196923;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.056826587093291324;  // std dev = 4,300, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.07192775449613414;  // std dev = 0,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04084779392804677;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.0735590006614658;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07244526606970023;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.07086413207508485;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.05500245640235596;  // std dev = 0,483, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.032889097862431375;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.08938687054159082;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.043571370652466614;  // std dev = 4,299, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.054666603249477363;  // std dev = 0,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03343555017323557;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.05533388291877464;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05457557941612133;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.05352144821165142;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.041615257278128474;  // std dev = 0,483, 306,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=154 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return -0.02688332164616807;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.06705284125793866;  // std dev = 3,515, 51,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.03328128456595459;  // std dev = 4,299, 76,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.04147262761399607;  // std dev = 0,479, 1.678,000 (wgt'ed) examples reached here.  /* #neg=826 #pos=852 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.02725073875958796;  // std dev = 5,247, 138,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.0415544851144926;  // std dev = 19,660, 1.548,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=801 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.04102790165235326;  // std dev = 19,892, 1.583,000 (wgt'ed) examples reached here.  /* #neg=782 #pos=801 */
%   | | | else return 0.04031654801271173;  // std dev = 17,496, 1.225,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=600 */


Results
   AUC ROC   = 0.631092
   AUC PR    = 0.613931
   CLL	      = -0.673807
   Precision = 0.654932 at threshold = 0.5
   Recall    = 0.345722
   F1        = 0.452553


Total learning time: 64.117 seconds
Total inference time: 5.906 seconds
AUC ROC: 0.631092


Refined model AUC ROC: 0.631092


Dataset: 48_twitter_facebook, Fold: 3, Type: transfer, Time: 02:53:00
{'Learning time': 134.91899999999998, 'AUC PR': 0.613931, 'F1': 0.452553, 'AUC ROC': 0.631092, 'CLL': -0.673807, 'Inference time': 5.906, 'Mapping results': {'Generating mappings time': 0.4946415424346924, 'Generating paths time': 2.6919639110565186, 'Finding best mapping': 1.430511474609375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.09384441375732422, 'Max mapping': 24389, 'Total time': 3.280458688735962}, 'Parameter Learning results': {'Learning time': 70.80199999999999, 'AUC PR': 0.496427, 'F1': 0.012015, 'AUC ROC': 0.475444, 'CLL': -0.693431, 'Inference time': 4.345, 'Precision': [0.848485, 0.5], 'Recall': 0.00605}, 'Precision': [0.654932, 0.5], 'Recall': 0.345722}


Start learning from scratch in target domain

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationwith(B, D) )
%   | then return 0.6962992241168505;  // std dev = 0,368, 173,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=145 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then if ( workstartdate(B, G), location(B, H) )
%   | | | then return 0.058148935099512224;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.5688927367524013;  // std dev = 8,639, 363,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=258 */
%   | | else if ( firstname(B, I) )
%   | | | then return 0.6581489350995126;  // std dev = 3,098, 60,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return 0.34220146793252854;  // std dev = 11,538, 533,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=258 */
%   else if ( educationschool(A, J), educationtype(B, K) )
%   | then return 0.16700674395731643;  // std dev = 0,462, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( firstname(B, L), location(B, M) )
%   | | then return 0.5535131735101059;  // std dev = 0,460, 151,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=105 */
%   | | else if ( hometown(B, N), location(B, P) )
%   | | | then return 0.5064540198452707;  // std dev = 10,374, 472,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=306 */
%   | | | else return 0.3392692151695248;  // std dev = 31,596, 3.999,000 (wgt'ed) examples reached here.  /* #neg=2.075 #pos=1.924 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationclasses(B, D) )
%   | then return 0.6274723466574023;  // std dev = 0,334, 148,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then return 0.46072437574743746;  // std dev = 0,461, 378,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=259 */
%   | | else if ( birthday(B, G), locale(B, H) )
%   | | | then return 0.4168185508571301;  // std dev = 8,121, 286,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=178 */
%   | | | else return 0.25079460132285913;  // std dev = 9,041, 332,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=146 */
%   else if ( educationtype(B, I), educationschool(A, J) )
%   | then return 0.14543708120554247;  // std dev = 0,462, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( hometown(B, K), location(B, L) )
%   | | then if ( educationclasses(B, M) )
%   | | | then return 0.6424106378929482;  // std dev = 3,475, 100,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=86 */
%   | | | else return 0.39335064376857515;  // std dev = 10,023, 422,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=257 */
%   | | else if ( firstname(B, N) )
%   | | | then return 0.39325527475966404;  // std dev = 10,447, 453,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=267 */
%   | | | else return 0.2846359208378823;  // std dev = 30,151, 3.647,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=1.725 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( lastname(B, C), educationtype(B, D) )
%   then return 0.005649604582372023;  // std dev = 0,419, 183,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=43 */
%   else if ( hometown(B, E), location(B, F) )
%   | then if ( birthday(B, G) )
%   | | then if ( educationconcentration(B, H) )
%   | | | then return 0.46709089950158866;  // std dev = 2,856, 54,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   | | | else return 0.11590131461578675;  // std dev = 6,191, 169,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=64 */
%   | | else if ( educationclasses(B, I) )
%   | | | then return 0.5218737572421592;  // std dev = 3,948, 150,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=132 */
%   | | | else return 0.3729584060495458;  // std dev = 11,374, 598,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=393 */
%   | else if ( educationyear(B, J), location(B, K) )
%   | | then if ( educationconcentration(B, L) )
%   | | | then return 0.4971821617992187;  // std dev = 2,960, 45,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return 0.048962455489200765;  // std dev = 8,073, 336,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=92 */
%   | | else if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.3421924735081828;  // std dev = 12,059, 643,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=400 */
%   | | | else return 0.24279722796002468;  // std dev = 33,156, 4.446,000 (wgt'ed) examples reached here.  /* #neg=2.335 #pos=2.111 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then return 0.3790665204714437;  // std dev = 0,368, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   else if ( lastname(B, D), gender(A, E) )
%   | then if ( gender(B, E), lastname(A, F) )
%   | | then if ( educationschool(A, G), educationyear(B, H) )
%   | | | then return 0.13282879711058473;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5390581949025488;  // std dev = 2,025, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( educationtype(B, I), location(B, J) )
%   | | | then return -0.1256517874274593;  // std dev = 2,594, 65,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | | else return 0.07516474489623527;  // std dev = 8,913, 362,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=123 */
%   | else if ( educationtype(B, K) )
%   | | then if ( educationschool(B, L), gender(B, M) )
%   | | | then return 0.21463715200121863;  // std dev = 25,762, 2.800,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=1.445 */
%   | | | else return 0.04100648929126082;  // std dev = 10,049, 498,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=144 */
%   | | else if ( location(B, N), locale(A, P) )
%   | | | then return 0.16686588002203595;  // std dev = 9,980, 412,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=192 */
%   | | | else return 0.23724067764179116;  // std dev = 23,152, 2.153,000 (wgt'ed) examples reached here.  /* #neg=1.027 #pos=1.126 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then if ( gender(A, D), gender(B, D) )
%   | then return 0.3293824948704382;  // std dev = 0,339, 154,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | else if ( location(B, E) )
%   | | then return 0.2686664516072439;  // std dev = 0,371, 132,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=108 */
%   | | else return 0.06547285215277784;  // std dev = 0,466, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   else if ( educationyear(B, F), educationconcentration(B, G) )
%   | then if ( worklocation(B, H), educationtype(A, I) )
%   | | then return 0.4974166434178017;  // std dev = 0,257, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( lastname(B, J) )
%   | | | then return 0.016941085370402627;  // std dev = 2,183, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.2550315526954739;  // std dev = 7,099, 225,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=146 */
%   | else if ( lastname(B, K), lastname(A, K) )
%   | | then return 0.6456522237300097;  // std dev = 0,055, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( educationyear(B, L), gender(A, M) )
%   | | | then return 0.10686125912711941;  // std dev = 18,393, 1.506,000 (wgt'ed) examples reached here.  /* #neg=860 #pos=646 */
%   | | | else return 0.16048511570081814;  // std dev = 33,149, 4.513,000 (wgt'ed) examples reached here.  /* #neg=2.298 #pos=2.215 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, E) )
%   | then return 0.21298354252704343;  // std dev = 0,422, 51,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | else return -0.0018298946918679315;  // std dev = 0,449, 405,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=121 */
%   else if ( educationschool(A, F), educationschool(B, F) )
%   | then if ( educationwith(B, G), birthday(A, H) )
%   | | then return 0.3023951003332345;  // std dev = 0,287, 77,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | | else if ( firstname(B, I), birthday(A, J) )
%   | | | then return 0.27917179483669324;  // std dev = 2,669, 47,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | | else return 0.16017514944054229;  // std dev = 14,737, 979,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=593 */
%   | else if ( educationtype(B, K), educationschool(A, L) )
%   | | then if ( educationclasses(A, M), educationschool(B, N) )
%   | | | then return -0.22902018505026644;  // std dev = 1,668, 48,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.06387180414710812;  // std dev = 12,867, 754,000 (wgt'ed) examples reached here.  /* #neg=497 #pos=257 */
%   | | else if ( firstname(B, P) )
%   | | | then return 0.18149775831352402;  // std dev = 10,838, 503,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=304 */
%   | | | else return 0.12949509785143618;  // std dev = 30,247, 3.760,000 (wgt'ed) examples reached here.  /* #neg=1.866 #pos=1.894 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( lastname(B, C), educationtype(B, D) )
%   then return -0.03553071389751026;  // std dev = 0,395, 183,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=43 */
%   else if ( hometown(B, E), location(B, F) )
%   | then if ( birthday(B, G) )
%   | | then if ( educationyear(B, H), gender(A, I) )
%   | | | then return 0.08099032030306877;  // std dev = 6,444, 194,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=104 */
%   | | | else return -0.27147492216648617;  // std dev = 1,637, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( workstartdate(B, J), educationtype(A, K) )
%   | | | then return -8.423981658606535E-4;  // std dev = 3,309, 72,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=44 */
%   | | | else return 0.19533528199138162;  // std dev = 11,391, 676,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=481 */
%   | else if ( location(B, L), locale(A, M) )
%   | | then if ( firstname(B, N), educationtype(B, P) )
%   | | | then return 0.19654218310519267;  // std dev = 5,162, 142,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=99 */
%   | | | else return 0.03837314409649413;  // std dev = 16,642, 1.191,000 (wgt'ed) examples reached here.  /* #neg=711 #pos=480 */
%   | | else if ( hometown(B, Q), firstname(B, R) )
%   | | | then return -0.10147725138815213;  // std dev = 3,601, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.10428881256297437;  // std dev = 31,335, 4.076,000 (wgt'ed) examples reached here.  /* #neg=2.036 #pos=2.040 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, C) )
%   | then return 0.4375484830848677;  // std dev = 0,087, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( gender(B, D), hometown(B, E) )
%   | | then if ( educationwith(A, F) )
%   | | | then return 0.482822346393233;  // std dev = 0,952, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10725159964761002;  // std dev = 3,647, 57,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else return -0.04419578939884046;  // std dev = 0,434, 370,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=100 */
%   else if ( hometown(B, G), location(B, H) )
%   | then return 0.1100364883547825;  // std dev = 0,443, 974,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=635 */
%   | else if ( educationyear(B, I), location(B, J) )
%   | | then if ( gender(A, K), educationconcentration(B, L) )
%   | | | then return 0.2637747273230855;  // std dev = 2,722, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | | else return -0.04940795577097145;  // std dev = 8,075, 341,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=95 */
%   | | else if ( educationyear(B, M), hometown(B, N) )
%   | | | then return -0.006171721002314313;  // std dev = 8,225, 317,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=130 */
%   | | | else return 0.08344513042395527;  // std dev = 33,009, 4.496,000 (wgt'ed) examples reached here.  /* #neg=2.227 #pos=2.269 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationwith(B, C), educationschool(A, D) )
%   then return 0.15070223495894836;  // std dev = 0,407, 252,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=186 */
%   else if ( educationtype(B, E), location(A, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then if ( firstname(A, H), birthday(B, I) )
%   | | | then return 0.26022028656337526;  // std dev = 2,932, 54,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=43 */
%   | | | else return 0.03670464235295385;  // std dev = 10,930, 540,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=290 */
%   | | else if ( educationschool(A, J) )
%   | | | then return -0.06381007385795531;  // std dev = 8,142, 383,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=91 */
%   | | | else return 0.048379980622246;  // std dev = 8,726, 317,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=162 */
%   | else if ( location(A, K), educationschool(A, L) )
%   | | then if ( birthday(B, M), gender(A, N) )
%   | | | then return -0.04617698865286063;  // std dev = 4,226, 78,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.10931991210991875;  // std dev = 13,584, 763,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=421 */
%   | | else if ( educationschool(B, P), gender(B, Q) )
%   | | | then return 0.07448550623818578;  // std dev = 20,592, 1.881,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=1.008 */
%   | | | else return 0.033609807982540645;  // std dev = 23,726, 2.356,000 (wgt'ed) examples reached here.  /* #neg=1.274 #pos=1.082 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationwith(B, D), birthday(A, E) )
%   | then return 0.1667474833378595;  // std dev = 0,283, 77,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | else if ( worklocation(B, F), educationyear(B, G) )
%   | | then return 0.17078105020453452;  // std dev = 0,390, 60,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=47 */
%   | | else if ( workenddate(B, H), educationyear(A, I) )
%   | | | then return 0.1411076670550168;  // std dev = 4,518, 104,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=74 */
%   | | | else return 0.045908878966023185;  // std dev = 14,075, 903,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=521 */
%   else if ( educationtype(B, J), educationschool(A, K) )
%   | then return -0.006912250356608877;  // std dev = 0,447, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( birthday(B, L), birthday(A, L) )
%   | | then if ( educationconcentration(A, M) )
%   | | | then return -0.41430547417102853;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.25726718879035404;  // std dev = 2,546, 31,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | else if ( location(A, N), educationschool(A, P) )
%   | | | then return 0.07258957466836234;  // std dev = 14,244, 839,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=450 */
%   | | | else return 0.03578186180149496;  // std dev = 29,787, 3.749,000 (wgt'ed) examples reached here.  /* #neg=1.886 #pos=1.863 */


Results
   AUC ROC   = 0.612359
   AUC PR    = 0.603589
   CLL	      = -0.684129
   Precision = 0.643292 at threshold = 0.5
   Recall    = 0.331029
   F1        = 0.437121


Total learning time: 145.313 seconds
Total inference time: 6.618 seconds
AUC ROC: 0.612359


Dataset: 48_twitter_facebook, Fold: 3, Type: scratch, Time: 02:55:32
{'Learning time': 145.313, 'AUC PR': 0.603589, 'F1': 0.437121, 'AUC ROC': 0.612359, 'CLL': -0.684129, 'Inference time': 6.618, 'Precision': [0.643292, 0.5], 'Recall': 0.331029}


Starting fold 4

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.03580832481384277
   Generating paths time   = 2.403724431991577
   Generating mappings time   = 0.3123445510864258
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.751885414123535


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> workstartdate(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;workstartdate(A, E).;false;true
0;true,false,false;workstartdate(B, F).;false;false
0;false,false,true;workstartdate(B, I).;false;false
0;false;workstartdate(B, G), workstartdate(A, G).;false;true
0;false,false,false;workstartdate(B, J).;false;false
0;false,false;workstartdate(A, H).;true;true
0;true;workstartdate(A, D), workstartdate(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;workstartdate(A, E).;false;true
1;true,false,false;workstartdate(B, F).;false;false
1;false,false,true;workstartdate(B, I).;false;false
1;false;workstartdate(A, G), workstartdate(B, G).;false;true
1;false,false,false;workstartdate(B, J).;false;false
1;false,false;workstartdate(A, H).;true;true
1;true;workstartdate(B, D), workstartdate(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
2;true,false,false;workstartdate(B, G).;false;false
2;false,false,true;workstartdate(B, J).;false;false
2;false;workstartdate(B, H), workstartdate(A, H).;false;true
2;false,false,false;workstartdate(B, K).;false;false
2;false,false;workstartdate(A, I).;true;true
2;true;workstartdate(B, D), workstartdate(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
3;true,false,false;workstartdate(B, G).;false;false
3;false,false,true;workstartdate(B, J).;false;false
3;false;workstartdate(A, H), workstartdate(B, H).;false;true
3;false,false,false;workstartdate(B, K).;false;false
3;false,false;workstartdate(A, I).;true;true
3;true;workstartdate(B, D), workstartdate(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
4;true,false,false;workstartdate(B, G).;false;false
4;false,false,true;workstartdate(B, J).;false;false
4;false;workstartdate(A, H), workstartdate(B, H).;false;true
4;false,false,false;workstartdate(B, K).;false;false
4;false,false;workstartdate(A, I).;true;true
4;true;workstartdate(B, D), workstartdate(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
5;true,false,false;workstartdate(B, G).;false;false
5;false,false,true;workstartdate(B, J).;false;false
5;false;workstartdate(A, H), workstartdate(B, H).;false;true
5;false,false,false;workstartdate(B, K).;false;false
5;false,false;workstartdate(A, I).;true;true
5;true;workstartdate(A, D), workstartdate(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
6;true,false,false;workstartdate(B, G).;false;false
6;false,false,true;workstartdate(B, J).;false;false
6;false;workstartdate(B, H), workstartdate(A, H).;false;true
6;false,false,false;workstartdate(B, K).;false;false
6;false,false;workstartdate(A, I).;true;true
6;true;workstartdate(A, D), workstartdate(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
7;true,false,false;workstartdate(B, G).;false;false
7;false,false,true;workstartdate(B, J).;false;false
7;false;workstartdate(A, H), workstartdate(B, H).;false;true
7;false,false,false;workstartdate(B, K).;false;false
7;false,false;workstartdate(A, I).;true;true
7;true;workstartdate(B, D), workstartdate(A, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
8;true,false,false;workstartdate(B, G).;false;false
8;false,false,true;workstartdate(B, J).;false;false
8;false;workstartdate(A, H), workstartdate(B, H).;false;true
8;false,false,false;workstartdate(B, K).;false;false
8;false,false;workstartdate(A, I).;true;true
8;true;workstartdate(A, D), workstartdate(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
9;true,false,false;workstartdate(B, G).;false;false
9;false,false,true;workstartdate(B, J).;false;false
9;false;workstartdate(B, H), workstartdate(A, H).;false;true
9;false,false,false;workstartdate(B, K).;false;false
9;false,false;workstartdate(A, I).;true;true
9;true;workstartdate(A, D), workstartdate(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.31163730719253474;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.20328167846234313;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3707843141608795;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.2693207666359965;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.1766919687929083;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3194144601811975;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.2192721473492705;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.22538327437598277;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.15047529101699852;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2647274309620466;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18329834068531892;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.12579863076005549;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2121681176147618;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14567465119319037;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.10350066688161849;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.16578340244836537;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.11159559999632969;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.11380054224247269;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.0840313245760623;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.127337790686589;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.08637026299843623;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08782929277813077;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.06749717972007446;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.0967735496209268;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.06628370899125427;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06722722400564961;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.05375937131738323;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.07309089181843874;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.05057564362187433;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.05117339744830586;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.04253623713021117;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.05501347412557899;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.038438849075129386;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.03880925454513463;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.03348509992607587;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.04133045510283158;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */


Results
   AUC ROC   = 0.514203
   AUC PR    = 0.533901
   CLL	      = -0.703391
   Precision = 0.81198 at threshold = 0.5
   Recall    = 0.040572
   F1        = 0.077282


Total learning time: 14.979 seconds
Total inference time: 5.545 seconds
AUC ROC: 0.514203


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [2.98e-08, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.98e-08, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [4.21e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.11e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}]]
[{'': [8.198570028001156e-16, 0.24984787328654107], 'false': [0.2469135802469134, 0.2498569171951113], 'true,false,false': [-1.4802973661668753e-16, -2.220446049250313e-16], 'false,false,true': [0.24000000000000007, 0.2478366684694443], 'true,false': [-8.881784197001253e-17, -2.5376526277146434e-16], 'false,false,false': [0.22601613282167884, 0.24984034719596596], 'false,false': [0.24703460445054465, 0.24994501400458694], 'true': [0.0, -1.4802973661668753e-16]}, {'': [-2.049642507000289e-16, 0.2490537134169054], 'false': [0.24691358024691354, 0.24906054778809908], 'true,false,false': [7.401486830834377e-17, 1.1102230246251565e-16], 'false,false,true': [0.2400000000000002, 0.24783666846944397], 'true,false': [8.881784197001253e-17, 1.9032394707859825e-16], 'false,false,false': [0.22601613282167818, 0.2498403471959809], 'false,false': [0.24693561030392105, 0.24913495569564448], 'true': [0.0, 7.401486830834377e-17]}, {'': [-3.416070845000482e-16, 0.24829641550673265], 'false': [0.24691358024691365, 0.24830125538627923], 'true,false,false': [-7.401486830834377e-17, -2.5376526277146434e-16], 'false,false,true': [0.2399999999999999, 0.2478366684694436], 'true,false': [0.0, -1.7763568394002506e-16], 'false,false,false': [0.2260161328216773, 0.24984034719597015], 'false,false': [0.24684141879858895, 0.24836401928314653], 'true': [0.0, -2.590520390792032e-16]}, {'': [-6.832141690000964e-17, 0.247718900150715], 'false': [0.2469135802469136, 0.24772210355630495], 'true,false,false': [7.401486830834377e-17, 1.2688263138573217e-16], 'false,false,true': [0.23999999999999988, 0.24783666846944252], 'true,false': [0.0, 1.1102230246251565e-16], 'false,false,false': [0.2260161328216772, 0.24984034719598452], 'false,false': [0.24676912396945397, 0.24777456880851043], 'true': [0.0, 1.4802973661668753e-16]}, {'': [1.708035422500241e-17, 0.24735131193734572], 'false': [0.2469135802469136, 0.24735331595587934], 'true,false,false': [-3.700743415417188e-17, -3.172065784643304e-17], 'false,false,true': [0.23999999999999988, 0.24783666846944286], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167848, 0.24984034719597975], 'false,false': [0.24672262599945718, 0.24739727027824354], 'true': [0.0, -3.700743415417188e-17]}, {'': [-8.540177112501205e-18, 0.24714701070999995], 'false': [0.2469135802469136, 0.24714824167944255], 'true,false,false': [9.25185853854297e-18, 3.172065784643304e-17], 'false,false,true': [0.24000000000000007, 0.2478366684694432], 'true,false': [0.0, 3.3306690738754695e-17], 'false,false,false': [0.22601613282167773, 0.24984034719597314], 'false,false': [0.24669658117682075, 0.24718613256012645], 'true': [0.0, 3.700743415417188e-17]}, {'': [1.708035422500241e-17, 0.24704385923665362], 'false': [0.2469135802469136, 0.24704464861561853], 'true,false,false': [-9.25185853854297e-18, -3.172065784643304e-17], 'false,false,true': [0.23999999999999996, 0.24783666846944277], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167762, 0.24984034719597487], 'false,false': [0.24668343241823093, 0.24707882506405376], 'true': [0.0, -2.7755575615628914e-17]}, {'': [-3.416070845000482e-17, 0.2469951568299833], 'false': [0.2469135802469136, 0.24699571833332412], 'true,false,false': [4.625929269271485e-18, 0.0], 'false,false,true': [0.23999999999999988, 0.24783666846944313], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167726, 0.2498403471959789], 'false,false': [0.24667729069983724, 0.24702788723139185], 'true': [0.0, 9.25185853854297e-18]}, {'': [-4.270088556250602e-18, 0.24697327025620003], 'false': [0.2469135802469136, 0.2469737237545382], 'true,false,false': [-4.625929269271485e-18, -1.9825411154020653e-17], 'false,false,true': [0.23999999999999985, 0.24783666846944233], 'true,false': [0.0, -2.7755575615628915e-18], 'false,false,false': [0.22601613282167798, 0.24984034719597234], 'false,false': [0.24667459264007158, 0.24700491282771714], 'true': [0.0, -4.625929269271485e-18]}, {'': [0.0, 0.24696383480224765], 'false': [0.2469135802469136, 0.24696424096503186], 'true,false,false': [0.0, 0.0], 'false,false,true': [0.23999999999999996, 0.24783666846944266], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167723, 0.2498403471959765], 'false,false': [0.24667347076552734, 0.24699499373270095], 'true': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;workstartdate(A, E).;true;true', '0;true,false,false;workstartdate(B, F).;true;true', '0;true;workstartdate(A, D), workstartdate(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;workstartdate(A, E).;true;true', '1;true,false,false;workstartdate(B, F).;true;true', '1;true;workstartdate(B, D), workstartdate(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '2;true,false,false;workstartdate(B, G).;true;true', '2;true;workstartdate(B, D), workstartdate(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '3;true,false,false;workstartdate(B, G).;true;true', '3;true;workstartdate(B, D), workstartdate(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '4;true,false,false;workstartdate(B, G).;true;true', '4;true;workstartdate(B, D), workstartdate(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '5;true,false,false;workstartdate(B, G).;true;true', '5;true;workstartdate(A, D), workstartdate(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '6;true,false,false;workstartdate(B, G).;true;true', '6;true;workstartdate(A, D), workstartdate(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '7;true,false,false;workstartdate(B, G).;true;true', '7;true;workstartdate(B, D), workstartdate(A, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '8;true,false,false;workstartdate(B, G).;true;true', '8;true;workstartdate(A, D), workstartdate(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '9;true,false,false;workstartdate(B, G).;true;true', '9;true;workstartdate(A, D), workstartdate(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.8581489350995118;  // std dev = 2,98e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationschool(B, F), locale(B, E) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( workstartdate(A, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0714822684328457;  // std dev = 3,548, 75,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | else if ( hometown(B, H), educationwith(B, I) )
%   | | then if ( educationyear(B, J), educationyear(A, K) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8311219080724852;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.5921914882910024;  // std dev = 4,284, 94,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=69 */
%   | | | else return 0.35298097644317744;  // std dev = 13,910, 774,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=383 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationdegree(B, G), educationschool(B, F) )
%   | | | then return 0.19627648422603836;  // std dev = 0,788, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11226163503539589;  // std dev = 0,963, 60,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=1 */
%   | | else if ( workstartdate(A, H), workstartdate(B, I) )
%   | | | then return 0.7580193346218546;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.058548994858434206;  // std dev = 3,561, 76,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( languages(A, K), location(A, L) )
%   | | | then return 0.019910960771237107;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.5796676790531354;  // std dev = 3,912, 103,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=84 */
%   | | else if ( educationtype(A, M), educationtype(B, N) )
%   | | | then return 0.1192123814372989;  // std dev = 5,621, 148,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.35883040797263305;  // std dev = 12,644, 652,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=360 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationschool(B, F), locale(B, E) )
%   | | | then return 0.133865945319271;  // std dev = 1,170, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.11488635955200677;  // std dev = 0,049, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( workstartdate(A, G), workstartdate(B, H) )
%   | | | then return 0.5947969362557473;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.050855162214915144;  // std dev = 3,561, 76,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | else if ( educationwith(B, I), hometown(B, J) )
%   | | then if ( educationyear(B, K), educationyear(A, L) )
%   | | | then return 0.3805631975329378;  // std dev = 1,077, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.602722445092428;  // std dev = 0,982, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( educationdegree(B, M) )
%   | | | then return -0.10559033047482831;  // std dev = 1,765, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.279798006540972;  // std dev = 14,258, 838,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=448 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( workstartdate(A, F), educationyear(A, G) )
%   | | then if ( worklocation(A, D), workenddate(A, H) )
%   | | | then return 0.7537998657375514;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.26591820253874193;  // std dev = 1,322, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( workemployer(B, I) )
%   | | | then return -0.0010431320363368925;  // std dev = 2,858, 72,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=10 */
%   | | | else return -0.18018110505049367;  // std dev = 1,743, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | else if ( workemployer(A, J), educationtype(B, K) )
%   | | then if ( educationdegree(B, L), educationschool(A, M) )
%   | | | then return 0.26402698791700363;  // std dev = 0,826, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2615183991141166;  // std dev = 0,119, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( birthday(B, N), educationyear(B, P) )
%   | | | then return 0.5030537809295708;  // std dev = 2,776, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | else return 0.21682149426975927;  // std dev = 13,854, 838,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=440 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationtype(A, F), educationtype(B, F) )
%   | | then if ( workstartdate(A, G), workstartdate(B, H) )
%   | | | then return 0.10972980973792229;  // std dev = 0,742, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.11276387154633993;  // std dev = 0,899, 61,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=1 */
%   | | else if ( workenddate(B, I), locale(B, E) )
%   | | | then return -0.10858063468536702;  // std dev = 0,949, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.10501600044960775;  // std dev = 3,400, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | else if ( languages(B, J), location(B, K) )
%   | | then if ( location(A, L) )
%   | | | then return -0.4048030800866359;  // std dev = 0,253, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.01475124881144059;  // std dev = 1,938, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( birthday(B, M), educationconcentration(B, N) )
%   | | | then return 0.4349678896645313;  // std dev = 1,828, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.17564361415723198;  // std dev = 13,890, 853,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=457 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( worklocation(A, D) )
%   | | then if ( languages(B, F) )
%   | | | then return 0.2850150323193418;  // std dev = 0,662, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5531112605166766;  // std dev = 0,105, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( workemployer(B, G) )
%   | | | then return -9.814341876395074E-4;  // std dev = 2,813, 72,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=10 */
%   | | | else return -0.15399226584532288;  // std dev = 2,108, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | else if ( workemployer(A, H), educationtype(B, I) )
%   | | then if ( educationdegree(B, J), educationschool(A, K) )
%   | | | then return 0.18961247167014197;  // std dev = 0,774, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.23904968868219215;  // std dev = 0,184, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( hometown(B, L) )
%   | | | then return 0.2762217053259343;  // std dev = 5,198, 160,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=119 */
%   | | | else return 0.1167350992661169;  // std dev = 12,928, 735,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=368 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( educationdegree(B, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then return 0.17238129247992284;  // std dev = 1,091, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, G), educationschool(B, H) )
%   | | | then return 0.0484514837470116;  // std dev = 1,164, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.20451124897190462;  // std dev = 0,886, 40,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=1 */
%   | else if ( hometown(B, I), hometown(A, I) )
%   | | then if ( educationconcentration(B, J), location(B, K) )
%   | | | then return -0.09257056557277098;  // std dev = 0,842, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3697554447132892;  // std dev = 1,679, 36,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | else if ( educationyear(B, L), educationschool(A, M) )
%   | | | then return -0.030789790735237865;  // std dev = 4,314, 140,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return 0.10990871700955107;  // std dev = 13,446, 822,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=427 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( birthday(B, E), educationconcentration(B, F) )
%   | then if ( educationyear(A, G), educationyear(B, G) )
%   | | then return 0.0872386450074345;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return 0.21264356844251647;  // std dev = 0,908, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3393739346550892;  // std dev = 1,157, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( educationyear(B, I), locale(A, J) )
%   | | then if ( educationconcentration(B, K), languages(B, L) )
%   | | | then return -0.21154212983294476;  // std dev = 1,747, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.012488518379109248;  // std dev = 6,848, 296,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=112 */
%   | | else if ( hometown(B, M) )
%   | | | then return 0.29291775952786997;  // std dev = 2,646, 70,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=61 */
%   | | | else return 0.06827441035192237;  // std dev = 11,955, 625,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=308 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.1527438580936709;  // std dev = 5,89e-09, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( birthday(B, D), educationschool(B, E) )
%   | then if ( educationschool(A, E), hometown(A, F) )
%   | | then if ( educationconcentration(B, G) )
%   | | | then return 0.3023090858522076;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4070827121528769;  // std dev = 0,057, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( languages(A, H) )
%   | | | then return -0.2872823028905555;  // std dev = 0,654, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1706663035453195;  // std dev = 3,372, 70,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=50 */
%   | else if ( educationclasses(B, I), locale(A, J) )
%   | | then if ( educationyear(A, K), firstname(B, L) )
%   | | | then return 0.04184126855044191;  // std dev = 1,532, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.25285222091820436;  // std dev = 1,914, 54,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | else if ( educationyear(B, M), locale(A, N) )
%   | | | then return -0.04120268922003681;  // std dev = 6,495, 275,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=78 */
%   | | | else return 0.057404523453808726;  // std dev = 11,830, 619,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=314 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( languages(B, E), educationconcentration(B, F) )
%   | then if ( worklocation(A, G) )
%   | | then return 0.15931188512128763;  // std dev = 0,762, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( educationschool(B, H), educationschool(A, I) )
%   | | | then return -0.3964659325281097;  // std dev = 0,195, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1571041050722306;  // std dev = 1,285, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( hometown(B, J) )
%   | | then if ( languages(A, K), educationtype(B, L) )
%   | | | then return -0.1123540971316638;  // std dev = 1,697, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.18695280548403867;  // std dev = 4,199, 142,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=112 */
%   | | else if ( gender(B, M), locale(A, N) )
%   | | | then return 0.016828220155490375;  // std dev = 12,930, 825,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=366 */
%   | | | else return 0.20633231936547664;  // std dev = 2,788, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */


Results
   AUC ROC   = 0.561246
   AUC PR    = 0.580238
   CLL	      = -0.732563
   Precision = 0.580627 at threshold = 0.5
   Recall    = 0.343365
   F1        = 0.431534


Total learning time: 27.502 seconds
Total inference time: 8.009 seconds
AUC ROC: 0.561246


Refined model AUC ROC: 0.561246


Dataset: 48_twitter_facebook, Fold: 4, Type: transfer, Time: 02:56:32
{'Learning time': 42.480999999999995, 'AUC PR': 0.580238, 'F1': 0.431534, 'AUC ROC': 0.561246, 'CLL': -0.732563, 'Inference time': 8.009, 'Mapping results': {'Generating mappings time': 0.3123445510864258, 'Generating paths time': 2.403724431991577, 'Finding best mapping': 9.5367431640625e-07, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.03580832481384277, 'Max mapping': 24389, 'Total time': 2.751885414123535}, 'Parameter Learning results': {'Learning time': 14.979, 'AUC PR': 0.533901, 'F1': 0.077282, 'AUC ROC': 0.514203, 'CLL': -0.703391, 'Inference time': 5.545, 'Precision': [0.81198, 0.5], 'Recall': 0.040572}, 'Precision': [0.580627, 0.5], 'Recall': 0.343365}


Start learning from scratch in target domain

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.011995088945665944;  // std dev = 0,361, 143,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   else if ( educationschool(B, E), educationschool(A, E) )
%   | then if ( educationyear(B, F), location(B, G) )
%   | | then if ( languages(B, H), location(A, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.5248156017661789;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else return 0.7223464659637094;  // std dev = 0,343, 81,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=70 */
%   | else if ( educationtype(A, I), educationtype(B, J) )
%   | | then if ( educationtype(A, J), birthday(A, K) )
%   | | | then return 0.3716624486130258;  // std dev = 3,040, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.10139217834275469;  // std dev = 4,520, 111,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | else if ( hometown(B, L) )
%   | | | then return 0.6157246926752705;  // std dev = 4,264, 99,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=75 */
%   | | | else return 0.37351964034363083;  // std dev = 11,752, 553,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=285 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( worklocation(A, E), workstartdate(B, F) )
%   | | then return 0.8566824985653688;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.013821098556933026;  // std dev = 0,336, 139,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=18 */
%   else if ( worklocation(B, G), locale(A, H) )
%   | then if ( workstartdate(A, I), workemployer(A, J) )
%   | | then if ( worklocation(A, G) )
%   | | | then return 0.8453528209444972;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3453528209444972;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07408369241395717;  // std dev = 0,300, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | else if ( workemployer(A, K), educationtype(B, L) )
%   | | then return -0.09408399392426368;  // std dev = 0,244, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( hometown(B, M) )
%   | | | then return 0.5159620946245204;  // std dev = 5,419, 160,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=119 */
%   | | | else return 0.34108504475334334;  // std dev = 12,798, 670,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=359 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then return -0.01099448468879123;  // std dev = 0,287, 74,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( languages(B, F) )
%   | | then if ( educationwith(B, G) )
%   | | | then return 0.6368438163235917;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11031995945530676;  // std dev = 2,216, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( languages(A, H), location(A, I) )
%   | | | then return -0.10139038309943453;  // std dev = 0,860, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.5923595111365696;  // std dev = 2,364, 74,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | else if ( birthday(B, J), educationconcentration(B, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.4302448082811668;  // std dev = 0,837, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6578026384466433;  // std dev = 1,279, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( educationdegree(B, M) )
%   | | | then return -0.09397498734039857;  // std dev = 1,743, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.2521524979258353;  // std dev = 13,928, 832,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=417 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(B, C), hometown(A, D) )
%   then return -0.14870301334897357;  // std dev = 0,087, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( educationwith(B, E), hometown(B, F) )
%   | then if ( educationyear(A, G) )
%   | | then if ( hometown(A, F) )
%   | | | then return 0.5457658124154738;  // std dev = 0,198, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24797118427401577;  // std dev = 0,831, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( educationschool(A, H), educationschool(B, H) )
%   | | | then return 0.48677716322821285;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5640690117266913;  // std dev = 0,989, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( birthday(B, I), educationschool(B, J) )
%   | | then if ( educationconcentration(B, K) )
%   | | | then return 0.47808158570728004;  // std dev = 1,815, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.2903943811523798;  // std dev = 3,310, 58,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | else if ( educationyear(B, L), locale(A, M) )
%   | | | then return 0.08378911837757029;  // std dev = 7,110, 276,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=99 */
%   | | | else return 0.22380262746109705;  // std dev = 12,167, 638,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=336 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationclasses(B, C), locale(A, D) )
%   then if ( educationyear(A, E), location(A, F) )
%   | then if ( hometown(A, G), hometown(B, G) )
%   | | then return 0.4347796706299886;  // std dev = 0,196, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.19583532883276908;  // std dev = 0,280, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.3373688534243926;  // std dev = 0,331, 75,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   else if ( educationschool(B, H), birthday(B, I) )
%   | then if ( workemployer(A, J) )
%   | | then return -0.25545296702465564;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(B, K), languages(A, L) )
%   | | | then return -0.13344024323336778;  // std dev = 0,690, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.37027758632715885;  // std dev = 2,823, 67,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=56 */
%   | else if ( workemployer(B, M), workemployer(A, M) )
%   | | then return 0.49605632245441506;  // std dev = 0,190, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( educationyear(B, N), locale(A, P) )
%   | | | then return 0.020066829301304715;  // std dev = 6,812, 275,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=78 */
%   | | | else return 0.16306374264096754;  // std dev = 11,957, 619,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=314 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(B, C), languages(B, D) )
%   then if ( worklocation(A, E) )
%   | then return 0.23667304099079642;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.21498952052107714;  // std dev = 0,270, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   else if ( hometown(B, F) )
%   | then if ( workemployer(A, G) )
%   | | then return -0.2198333877329962;  // std dev = 0,098, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( educationyear(B, H) )
%   | | | then return 0.21253926250293803;  // std dev = 3,689, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.3339268966581102;  // std dev = 2,603, 69,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   | else if ( gender(B, I), locale(A, J) )
%   | | then if ( workemployer(B, K), workemployer(A, K) )
%   | | | then return 0.37539987523503016;  // std dev = 0,179, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.08979505181954468;  // std dev = 13,152, 825,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=366 */
%   | | else if ( locale(A, L), gender(A, M) )
%   | | | then return 0.6097773571375464;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.09428600416911757;  // std dev = 2,369, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then return -0.06787964165368289;  // std dev = 0,226, 74,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   else if ( hometown(B, E), location(B, F) )
%   | then if ( languages(A, G) )
%   | | then if ( hometown(A, E) )
%   | | | then return 0.41378945209820117;  // std dev = 0,321, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3100580559594369;  // std dev = 0,814, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( educationconcentration(B, H) )
%   | | | then return 0.024751830160405698;  // std dev = 2,184, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.3305825668704076;  // std dev = 1,531, 58,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | else if ( educationyear(A, I), workenddate(B, J) )
%   | | then if ( worklocation(A, K), worklocation(B, K) )
%   | | | then return 0.5567372103897077;  // std dev = 0,484, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.11762758406005033;  // std dev = 1,572, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( educationschool(A, L), educationschool(B, L) )
%   | | | then return 0.2316557414150302;  // std dev = 2,912, 72,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=55 */
%   | | | else return 0.07680701272264691;  // std dev = 13,226, 808,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=380 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then return 0.39165366601430296;  // std dev = 0,195, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( workemployer(B, F), educationconcentration(B, G) )
%   | | then if ( educationschool(A, H) )
%   | | | then return -0.15616430168642084;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22127147737245573;  // std dev = 1,298, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( workenddate(A, I) )
%   | | | then return 0.03062664513787773;  // std dev = 1,355, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.10778540173386386;  // std dev = 2,913, 94,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=11 */
%   | else if ( educationdegree(B, J) )
%   | | then if ( workemployer(A, K) )
%   | | | then return 0.18606092451986625;  // std dev = 0,819, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.16317522667732132;  // std dev = 1,768, 35,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else if ( workemployer(A, L), locale(B, M) )
%   | | | then return -0.05332179472922534;  // std dev = 3,303, 68,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.10311899585345753;  // std dev = 12,936, 820,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=465 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(B, C), educationyear(A, D) )
%   then if ( educationtype(B, E), locale(A, F) )
%   | then if ( birthday(A, G), educationyear(B, H) )
%   | | then if ( educationconcentration(B, I) )
%   | | | then return 0.4719871394711419;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18564258111981574;  // std dev = 0,891, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( locale(B, F), educationschool(B, J) )
%   | | | then return -0.15550189466634343;  // std dev = 1,590, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.031582244658577195;  // std dev = 1,824, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return -0.3389683299982746;  // std dev = 0,295, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( hometown(B, K), location(B, L) )
%   | then return 0.17746807194657918;  // std dev = 0,312, 68,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=55 */
%   | else if ( languages(B, M), educationconcentration(B, N) )
%   | | then return -0.15978693967383412;  // std dev = 0,308, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( educationdegree(B, P) )
%   | | | then return -0.07756518528729811;  // std dev = 2,075, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.06867597444155453;  // std dev = 13,135, 853,000 (wgt'ed) examples reached here.  /* #neg=415 #pos=438 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(A, D) )
%   | then return 0.2992241296357183;  // std dev = 0,114, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21326959340108678;  // std dev = 0,186, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( workemployer(B, E), educationschool(A, F) )
%   | then if ( educationschool(B, F) )
%   | | then if ( birthday(A, G) )
%   | | | then return -0.17045480686144202;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.2320714887550565;  // std dev = 1,050, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.15481107584137932;  // std dev = 0,201, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( languages(B, H), educationconcentration(B, I) )
%   | | then if ( worklocation(A, J) )
%   | | | then return 0.15535727033993108;  // std dev = 0,750, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17416490556770345;  // std dev = 1,382, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( educationschool(A, K), educationschool(B, K) )
%   | | | then return 0.14590423456226453;  // std dev = 3,239, 108,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=85 */
%   | | | else return 0.0402095463410139;  // std dev = 13,332, 853,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=423 */


Results
   AUC ROC   = 0.559654
   AUC PR    = 0.578093
   CLL	      = -0.725155
   Precision = 0.568312 at threshold = 0.5
   Recall    = 0.379032
   F1        = 0.454763


Total learning time: 35.53 seconds
Total inference time: 7.067 seconds
AUC ROC: 0.559654


Dataset: 48_twitter_facebook, Fold: 4, Type: scratch, Time: 02:57:15
{'Learning time': 35.53, 'AUC PR': 0.578093, 'F1': 0.454763, 'AUC ROC': 0.559654, 'CLL': -0.725155, 'Inference time': 7.067, 'Precision': [0.568312, 0.5], 'Recall': 0.379032}


Starting fold 5

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.09648585319519043
   Generating paths time   = 2.692840814590454
   Generating mappings time   = 0.49175095558166504
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.9073486328125e-06
   Total time   = 3.2810914516448975


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35212483871396993;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3906164675670447;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.3362980353565776;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3036471074356998;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.33613622477485544;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.29024732799427866;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.252430972421101;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2776815057599904;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.24191799003155462;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2032367914389215;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.22149269749116546;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.19553603401769268;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1596224832162085;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1721700230048887;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.15426978223939478;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12321124182105614;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13161234234128258;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.11961467331782805;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09403865161628217;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.09963181205576573;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.09166516745018691;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07127311168687667;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07502901594074947;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.06971704917859212;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05379177169426425;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05635680723069602;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.052771025092935735;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0404967198952263;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04228454666387357;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.03982414183310802;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */


Results
   AUC ROC   = 0.495478
   AUC PR    = 0.520682
   CLL	      = -0.707352
   Precision = 0.54071 at threshold = 0.5
   Recall    = 0.168785
   F1        = 0.257263


Total learning time: 12.945 seconds
Total inference time: 6.108 seconds
AUC ROC: 0.495478


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [2.11e-08, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [2.11e-08, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [4.21e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [2.11e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [1.05e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [1.05e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}]]
[{'': [0.08999999999999968, 0.24979880287712244], 'false': [0.24000000000000007, 0.24985982130119305], 'true,false,false': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'false,false,true': [nan, 0.2499637102627387], 'true,false': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'false,false,false': [0.2489458593354706, 0.2495225381804284], 'false,false': [0.2499637102627387, 0.2498342205603378], 'true': [0.0, 0.0]}, {'': [0.06424978612186587, 0.24964521600728384], 'false': [0.2400000000000002, 0.24975924254864396], 'true,false,false': [7.401486830834377e-17, 7.401486830834377e-17], 'false,false,true': [nan, 0.24996371026273861], 'true,false': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,false,false': [0.24894585933546987, 0.24952253818042153], 'false,false': [0.24996371026273861, 0.24971770830212706], 'true': [0.0, 9.868649107779169e-17]}, {'': [0.040122030722944804, 0.24949601538837465], 'false': [0.2399999999999999, 0.2496608223416793], 'true,false,false': [-7.401486830834377e-17, -2.590520390792032e-16], 'false,false,true': [nan, 0.2499637102627374], 'true,false': [nan, -1.4802973661668753e-16], 'false,false,false': [0.24894585933546895, 0.24952253818042583], 'false,false': [0.2499637102627374, 0.2496036704863974], 'true': [0.0, -1.4802973661668753e-16]}, {'': [0.02425275922011396, 0.24938530072350942], 'false': [0.23999999999999988, 0.24958873033597875], 'true,false,false': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,false,true': [nan, 0.24996371026273814], 'true,false': [nan, 9.868649107779169e-17], 'false,false,false': [0.24894585933546948, 0.24952253818042844], 'false,false': [0.24996371026273814, 0.2495201822467733], 'true': [0.0, 9.868649107779169e-17]}, {'': [0.015381192815554334, 0.2493188248441593], 'false': [0.23999999999999988, 0.24954660483659358], 'true,false,false': [-3.700743415417188e-17, -5.551115123125783e-17], 'false,false,true': [nan, 0.24996371026273786], 'true,false': [nan, -4.9343245538895844e-17], 'false,false,false': [0.24894585933546953, 0.24952253818042255], 'false,false': [0.24996371026273786, 0.24947144637818947], 'true': [0.0, -4.9343245538895844e-17]}, {'': [0.010425859500244394, 0.2492844517161369], 'false': [0.24000000000000007, 0.24952554151907533], 'true,false,false': [9.25185853854297e-18, 3.700743415417188e-17], 'false,false,true': [nan, 0.24996371026273725], 'true,false': [nan, 3.700743415417188e-17], 'false,false,false': [0.24894585933546926, 0.24952253818042416], 'false,false': [0.24996371026273725, 0.24944710469562237], 'true': [0.0, 3.700743415417188e-17]}, {'': [0.007492692652921679, 0.24926827214419164], 'false': [0.23999999999999996, 0.24951592838892056], 'true,false,false': [-9.25185853854297e-18, -2.7755575615628914e-17], 'false,false,true': [nan, 0.24996371026273764], 'true,false': [nan, -1.850371707708594e-17], 'false,false,false': [0.2489458593354694, 0.24952253818042733], 'false,false': [0.24996371026273764, 0.24943600430387952], 'true': [0.0, -1.850371707708594e-17]}, {'': [0.005640433129233938, 0.24926104527307402], 'false': [0.23999999999999988, 0.2495117169195606], 'true,false,false': [4.625929269271485e-18, 9.25185853854297e-18], 'false,false,true': [nan, 0.24996371026273725], 'true,false': [nan, 6.1679056923619804e-18], 'false,false,false': [0.24894585933546975, 0.24952253818042303], 'false,false': [0.24996371026273725, 0.2494311421020891], 'true': [0.0, 6.1679056923619804e-18]}, {'': [0.004402488480251224, 0.24925789669070889], 'false': [0.23999999999999985, 0.24950988315847408], 'true,false,false': [-4.625929269271485e-18, 9.25185853854297e-18], 'false,false,true': [nan, 0.2499637102627378], 'true,false': [nan, 0.0], 'false,false,false': [0.24894585933546962, 0.2495225381804204], 'false,false': [0.2499637102627378, 0.24942902356591917], 'true': [0.0, 0.0]}, {'': [0.003535451289447075, 0.24925653585586674], 'false': [0.23999999999999996, 0.24950907206650982], 'true,false,false': [0.0, 0.0], 'false,false,true': [nan, 0.24996371026273756], 'true,false': [nan, 0.0], 'false,false,false': [0.24894585933546975, 0.24952253818042774], 'false,false': [0.24996371026273756, 0.24942808503579625], 'true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;languages(B, G).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;languages(B, G).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;languages(B, G).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;languages(B, G).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;languages(B, G).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;languages(B, G).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;languages(B, G).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;languages(B, G).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( workemployer(B, F), workstartdate(B, G) )
%   | | then if ( educationtype(A, H) )
%   | | | then return 0.8181489350995119;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.597279369882121;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else if ( workenddate(B, I), educationtype(A, J) )
%   | | | then return 0.15125238337537444;  // std dev = 3,467, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.391482268432842;  // std dev = 9,466, 360,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=192 */
%   | else if ( locale(A, K), locale(B, L) )
%   | | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( workstartdate(B, M), languages(A, N) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22771415249081667;  // std dev = 3,274, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.7194734122109545;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( workemployer(B, H), gender(A, I) )
%   | | | then return 0.5053478068598369;  // std dev = 1,963, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.04326716993165154;  // std dev = 2,676, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( workstartdate(B, J), educationtype(B, K) )
%   | | | then return 0.5767015107242799;  // std dev = 3,434, 76,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=61 */
%   | | | else return 0.31273449970566103;  // std dev = 9,026, 326,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=166 */
%   | else if ( workemployer(B, L), educationyear(A, M) )
%   | | then return 0.7737913209968591;  // std dev = 0,133, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( locale(A, N), locale(B, P) )
%   | | | then return -0.08763477038348894;  // std dev = 1,384, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.17883652677957237;  // std dev = 3,171, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.48859815525229555;  // std dev = 0,200, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( locale(B, D), locale(A, D) )
%   | then if ( workstartdate(B, E), educationtype(B, F) )
%   | | then if ( educationschool(B, G), educationschool(A, G) )
%   | | | then return 0.12512708976175294;  // std dev = 1,845, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.4620034296761634;  // std dev = 3,561, 83,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | | else if ( educationtype(B, H), educationyear(A, I) )
%   | | | then return 0.14669781525066156;  // std dev = 4,721, 97,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=37 */
%   | | | else return 0.27810852151045723;  // std dev = 8,154, 268,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=141 */
%   | else if ( locale(A, J), locale(B, K) )
%   | | then if ( workenddate(A, L), hometown(B, M) )
%   | | | then return 0.21275158127818636;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09785447932787433;  // std dev = 0,989, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else if ( workemployer(B, N), educationyear(A, P) )
%   | | | then return 0.6157843393704475;  // std dev = 0,181, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15140302678054418;  // std dev = 3,167, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.3733536693400759;  // std dev = 0,181, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( locale(B, D), locale(A, D) )
%   | then if ( location(B, E), location(A, E) )
%   | | then if ( educationdegree(A, F) )
%   | | | then return 0.7118899500771774;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48143337291972177;  // std dev = 1,232, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( workstartdate(B, G), workemployer(B, H) )
%   | | | then return 0.37208897129635005;  // std dev = 2,409, 48,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=41 */
%   | | | else return 0.1908315935333806;  // std dev = 9,847, 404,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=197 */
%   | else if ( locale(A, I), locale(B, J) )
%   | | then if ( workstartdate(B, K), educationtype(A, L) )
%   | | | then return 0.2227490843679821;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09020508266336617;  // std dev = 0,957, 44,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | else if ( educationschool(A, M), gender(A, N) )
%   | | | then return -0.13856545530007072;  // std dev = 0,726, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.2313005751737097;  // std dev = 3,021, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.23052593460878676;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.34534280475918466;  // std dev = 9,86e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( location(B, E), workstartdate(A, F) )
%   | then if ( workemployer(A, G), workemployer(B, H) )
%   | | then return -0.12076401343467247;  // std dev = 0,864, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( educationyear(B, I), educationyear(A, J) )
%   | | | then return 0.633455357228239;  // std dev = 0,194, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.32216543562028016;  // std dev = 1,810, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( workemployer(B, K), educationyear(A, L) )
%   | | then if ( educationyear(B, M), workemployer(A, N) )
%   | | | then return 0.4580585433492462;  // std dev = 1,575, 27,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return 0.14193435716423314;  // std dev = 2,365, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | else if ( educationyear(A, P), educationtype(B, Q) )
%   | | | then return 0.006455754272835207;  // std dev = 4,309, 103,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | | | else return 0.14954375371591863;  // std dev = 9,040, 370,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.19218574654803539;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.27191723823797265;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( languages(B, E), educationschool(B, F) )
%   | then if ( workenddate(B, G) )
%   | | then if ( educationtype(A, H), gender(A, I) )
%   | | | then return -0.3385377213418471;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2049863065136457;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( educationtype(A, J), gender(A, K) )
%   | | | then return -0.13216260318832168;  // std dev = 1,197, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.24614383750237195;  // std dev = 1,378, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( lastname(A, L), lastname(B, M) )
%   | | then return 0.61710995622572;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( educationyear(B, N), educationschool(B, P) )
%   | | | then return 0.233881739335021;  // std dev = 4,384, 100,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=61 */
%   | | | else return 0.08606349307766867;  // std dev = 9,278, 424,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=193 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.18295772085778933;  // std dev = 0,116, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( educationyear(B, D), educationyear(A, D) )
%   | then if ( workemployer(A, E), workstartdate(B, F) )
%   | | then if ( workemployer(B, G) )
%   | | | then return 0.26254828945918063;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6689320675828893;  // std dev = 0,179, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( workemployer(B, H) )
%   | | | then return 0.3483984066752921;  // std dev = 1,151, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.060864870484055776;  // std dev = 1,337, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( gender(B, I), gender(A, I) )
%   | | then if ( educationschool(A, J), educationtype(B, K) )
%   | | | then return -0.03823287554880544;  // std dev = 3,038, 64,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.13855677850517903;  // std dev = 7,862, 291,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=160 */
%   | | else if ( educationdegree(B, L), educationschool(A, M) )
%   | | | then return 0.42900182598023234;  // std dev = 0,948, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.010503292473841932;  // std dev = 5,637, 171,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=64 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.1533440975054515;  // std dev = 0,115, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( educationyear(B, D), workstartdate(B, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then if ( location(A, G), workemployer(A, H) )
%   | | | then return 0.33069633743799254;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15334473407298893;  // std dev = 1,060, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( workstartdate(A, I), educationyear(A, J) )
%   | | | then return 0.08737701995063758;  // std dev = 1,829, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.23057742069609174;  // std dev = 2,629, 60,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=50 */
%   | else if ( educationconcentration(B, K), location(A, L) )
%   | | then if ( location(B, L) )
%   | | | then return 0.30359700687858915;  // std dev = 0,945, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.24227922595517767;  // std dev = 1,582, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( educationyear(B, M), educationschool(B, N) )
%   | | | then return 0.15760598736223166;  // std dev = 3,859, 75,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | | | else return 0.04243053585221729;  // std dev = 8,661, 367,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=154 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.21555611978010492;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.16894313638191805;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( educationschool(B, E), languages(B, F) )
%   | then if ( workenddate(B, G) )
%   | | then if ( educationtype(A, H), gender(A, I) )
%   | | | then return -0.3345003794906864;  // std dev = 0,152, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.21300881653911471;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( workstartdate(A, J) )
%   | | | then return -0.371371792712543;  // std dev = 0,187, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07220976186523433;  // std dev = 1,697, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( lastname(A, K), lastname(B, L) )
%   | | then return 0.44146878154496455;  // std dev = 0,051, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( workemployer(B, M), educationyear(A, N) )
%   | | | then return 0.18482985061205698;  // std dev = 2,562, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | | else return 0.036631305478606165;  // std dev = 9,655, 466,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=209 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.18133781379295588;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.14653012967828027;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( educationdegree(A, F) )
%   | | then return 0.46405064329006895;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(A, G) )
%   | | | then return 0.40691532342318176;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13129806299937327;  // std dev = 1,098, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( location(A, H), educationconcentration(B, I) )
%   | | then if ( educationconcentration(A, I), educationdegree(B, J) )
%   | | | then return 0.33484256890298275;  // std dev = 0,809, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1529466806320374;  // std dev = 1,833, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( educationyear(B, K), educationschool(B, L) )
%   | | | then return 0.10847871194607997;  // std dev = 4,200, 102,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   | | | else return 0.027286761557517983;  // std dev = 8,957, 415,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=191 */


Results
   AUC ROC   = 0.54953
   AUC PR    = 0.553472
   CLL	      = -0.778116
   Precision = 0.555523 at threshold = 0.5
   Recall    = 0.30971
   F1        = 0.397699


Total learning time: 20.318 seconds
Total inference time: 5.687 seconds
AUC ROC: 0.54953


Refined model AUC ROC: 0.54953


Dataset: 48_twitter_facebook, Fold: 5, Type: transfer, Time: 02:58:04
{'Learning time': 33.263000000000005, 'AUC PR': 0.553472, 'F1': 0.397699, 'AUC ROC': 0.54953, 'CLL': -0.778116, 'Inference time': 5.687, 'Mapping results': {'Generating mappings time': 0.49175095558166504, 'Generating paths time': 2.692840814590454, 'Finding best mapping': 1.9073486328125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.09648585319519043, 'Max mapping': 24389, 'Total time': 3.2810914516448975}, 'Parameter Learning results': {'Learning time': 12.945, 'AUC PR': 0.520682, 'F1': 0.257263, 'AUC ROC': 0.495478, 'CLL': -0.707352, 'Inference time': 6.108, 'Precision': [0.54071, 0.5], 'Recall': 0.168785}, 'Precision': [0.555523, 0.5], 'Recall': 0.30971}


Start learning from scratch in target domain

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D) )
%   | then if ( workenddate(B, E), educationtype(A, F) )
%   | | then if ( workemployer(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07554023944733843;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else return 0.6438632208137983;  // std dev = 0,410, 84,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=66 */
%   | else if ( lastname(A, H) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( workstartdate(A, I), educationyear(B, J) )
%   | | | then return 0.5456489350995116;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | | else return 0.33054157313631916;  // std dev = 9,014, 326,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=154 */
%   else if ( locale(A, K), locale(B, L) )
%   | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workemployer(B, M), educationyear(A, N) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2137044906550679;  // std dev = 0,479, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), educationtype(B, E) )
%   | then if ( educationconcentration(B, F), workstartdate(A, G) )
%   | | then if ( languages(B, H), workenddate(A, I) )
%   | | | then return 0.7606300389475333;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04916169263118482;  // std dev = 1,702, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.5557847785898583;  // std dev = 0,396, 89,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=70 */
%   | else if ( educationtype(B, J), educationyear(A, K) )
%   | | then if ( educationyear(B, L), workemployer(B, M) )
%   | | | then return 0.4085648720086978;  // std dev = 2,924, 36,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.08931402096649822;  // std dev = 3,564, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( lastname(A, N) )
%   | | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.32950016562591056;  // std dev = 8,089, 263,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=136 */
%   else if ( workemployer(B, P), educationyear(A, Q) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.04603704219363191;  // std dev = 0,389, 92,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=18 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workstartdate(B, C), workemployer(B, D) )
%   then return 0.45523665596694074;  // std dev = 0,368, 65,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=52 */
%   else if ( educationyear(B, E), educationschool(B, F) )
%   | then if ( educationconcentration(B, G), location(A, H) )
%   | | then if ( gender(B, I), educationconcentration(A, G) )
%   | | | then return 0.42608312675153814;  // std dev = 0,819, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0922668526582058;  // std dev = 1,225, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( languages(B, J), location(B, K) )
%   | | | then return -0.13552808177179254;  // std dev = 0,957, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.39533883923983204;  // std dev = 4,658, 105,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=69 */
%   | else if ( educationtype(B, L), gender(A, M) )
%   | | then if ( educationdegree(B, N), educationtype(A, L) )
%   | | | then return 0.27141589973860775;  // std dev = 3,251, 48,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.07311590385856205;  // std dev = 5,193, 145,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
%   | | else if ( locale(A, P), locale(B, P) )
%   | | | then return 0.30387738796968944;  // std dev = 6,393, 170,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=94 */
%   | | | else return 0.03946799479040038;  // std dev = 1,973, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(B, C), workstartdate(B, D) )
%   then return 0.3493535161269822;  // std dev = 0,363, 65,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=52 */
%   else if ( gender(A, E), gender(B, E) )
%   | then if ( educationconcentration(B, F), educationyear(A, G) )
%   | | then if ( workenddate(A, H), languages(B, I) )
%   | | | then return 0.6425203355638982;  // std dev = 0,175, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06551217210939461;  // std dev = 2,234, 35,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( workstartdate(A, J), location(B, K) )
%   | | | then return 0.4629611780614988;  // std dev = 1,745, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.2219769507406079;  // std dev = 7,921, 280,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=141 */
%   | else if ( educationconcentration(B, L), educationyear(A, M) )
%   | | then if ( location(A, N), educationschool(B, P) )
%   | | | then return 0.08582422685603908;  // std dev = 1,092, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5281008776353557;  // std dev = 1,315, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( locale(A, Q), locale(B, Q) )
%   | | | then return 0.13735774154483196;  // std dev = 5,360, 129,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=57 */
%   | | | else return -0.12483623639211273;  // std dev = 0,967, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.5716938721025028;  // std dev = 0,084, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( educationyear(A, E), workenddate(A, F) )
%   | | then return 0.41540803525412023;  // std dev = 0,293, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4514965249022675;  // std dev = 0,146, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.019011622408725913;  // std dev = 2,161, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( workenddate(A, H), workenddate(B, H) )
%   | then if ( gender(B, I), educationtype(B, J) )
%   | | then return -0.0028558062739571168;  // std dev = 0,404, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.2534032682496624;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( location(B, K), location(A, K) )
%   | | then return 0.46866786153284756;  // std dev = 0,320, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( educationtype(B, L), educationschool(A, M) )
%   | | | then return -0.007145245175444372;  // std dev = 3,002, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.15835214476883036;  // std dev = 9,590, 439,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=221 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), workenddate(B, E) )
%   | then if ( workemployer(B, F), gender(A, G) )
%   | | then return 0.2719077900434441;  // std dev = 0,349, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | else if ( location(A, H), educationconcentration(A, I) )
%   | | | then return 0.6297336362323959;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12381679569012138;  // std dev = 2,200, 41,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | else if ( workstartdate(B, J), educationschool(B, K) )
%   | | then return 0.29530793870182426;  // std dev = 0,327, 32,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else if ( lastname(A, L) )
%   | | | then return 0.42825792747981145;  // std dev = 0,103, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.13720482959442437;  // std dev = 9,053, 371,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=198 */
%   else if ( locale(A, M), locale(B, N) )
%   | then return -0.13548778586840954;  // std dev = 0,203, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( educationschool(A, P), gender(A, Q) )
%   | | then return -0.1649748634946886;  // std dev = 0,177, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.20838147633568277;  // std dev = 0,450, 44,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.3854859078821095;  // std dev = 0,091, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( educationyear(A, E), workemployer(A, F) )
%   | | then return 0.33822715201059317;  // std dev = 0,242, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.07813405097265796;  // std dev = 0,400, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else if ( educationtype(B, G), educationschool(A, H) )
%   | then if ( workenddate(A, I), educationyear(A, J) )
%   | | then return -0.1537777689138295;  // std dev = 0,241, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( educationdegree(B, K) )
%   | | | then return 0.1916473802998037;  // std dev = 1,827, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.02813503723918492;  // std dev = 2,069, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( lastname(B, L), lastname(A, M) )
%   | | then return 0.32833345630742533;  // std dev = 0,093, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( lastname(B, N) )
%   | | | then return -0.15232579940672825;  // std dev = 0,101, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.09862335900629766;  // std dev = 9,493, 426,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=219 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workstartdate(B, C), educationtype(B, D) )
%   then if ( workstartdate(A, E), educationschool(A, F) )
%   | then return -0.028244062150971902;  // std dev = 0,320, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( lastname(A, G) )
%   | | then return -0.2834965839894149;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( educationschool(A, H), languages(A, I) )
%   | | | then return -0.08370270445904274;  // std dev = 0,512, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1788824354416436;  // std dev = 3,866, 105,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=80 */
%   else if ( lastname(B, J), educationyear(A, K) )
%   | then return -0.13218708287035172;  // std dev = 0,066, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(B, L), location(A, L) )
%   | | then if ( educationschool(B, M) )
%   | | | then return 0.2088591220399089;  // std dev = 1,077, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.49508423708801497;  // std dev = 0,204, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, N), educationtype(B, P) )
%   | | | then return -0.08500661708039663;  // std dev = 2,436, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.06516922535653177;  // std dev = 8,954, 392,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=185 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then if ( location(A, E), languages(B, F) )
%   | then if ( educationdegree(A, G) )
%   | | then return 0.033822230753490556;  // std dev = 0,811, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.16776147573220962;  // std dev = 0,680, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.1692718533142094;  // std dev = 0,321, 49,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=38 */
%   else if ( workstartdate(B, H), educationyear(B, I) )
%   | then if ( educationschool(A, J), educationschool(B, J) )
%   | | then return -0.085818056222283;  // std dev = 0,340, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( workstartdate(A, K), languages(B, L) )
%   | | | then return -0.062232766190572934;  // std dev = 1,478, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.16912542738333836;  // std dev = 2,739, 64,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=52 */
%   | else if ( languages(B, M), workenddate(B, N) )
%   | | then return -0.2991162617470168;  // std dev = 0,338, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( educationdegree(B, P), languages(A, Q) )
%   | | | then return 0.3447080167209726;  // std dev = 1,178, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.03474155893737238;  // std dev = 9,083, 418,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=182 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( workstartdate(B, D), educationdegree(B, E) )
%   | then return -0.2963030468771307;  // std dev = 0,626, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2711096132813665;  // std dev = 0,077, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( educationschool(B, F), languages(B, G) )
%   | then if ( workstartdate(A, H) )
%   | | then return -0.3855679729073238;  // std dev = 0,199, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( workenddate(B, I) )
%   | | | then return -0.19538324419176578;  // std dev = 0,972, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.03964258458671545;  // std dev = 1,644, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( location(B, J), location(A, J) )
%   | | then if ( educationschool(A, K), educationdegree(B, L) )
%   | | | then return 0.07410022412033146;  // std dev = 0,711, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35038742318148947;  // std dev = 0,308, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workemployer(B, M), educationtype(A, N) )
%   | | | then return 0.11778987106962355;  // std dev = 3,125, 76,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   | | | else return 0.02605222647427568;  // std dev = 9,288, 447,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=201 */


Results
   AUC ROC   = 0.564573
   AUC PR    = 0.557883
   CLL	      = -0.770684
   Precision = 0.571239 at threshold = 0.5
   Recall    = 0.315168
   F1        = 0.406216


Total learning time: 21.202 seconds
Total inference time: 6.736 seconds
AUC ROC: 0.564573


Dataset: 48_twitter_facebook, Fold: 5, Type: scratch, Time: 02:58:33
{'Learning time': 21.202, 'AUC PR': 0.557883, 'F1': 0.406216, 'AUC ROC': 0.564573, 'CLL': -0.770684, 'Inference time': 6.736, 'Precision': [0.571239, 0.5], 'Recall': 0.315168}


Starting experiment #4 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29692444530358925;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.08692252000517167;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.20837934984605716;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5813068298363496;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.2305979146913504;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6081489350995096;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25680824651685535;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.0760086065078202;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.18107440977493972;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1141862376674665;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4949913846238995;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20014733368536436;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5170719622367242;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.21542855580471548;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03213570384911769;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.15408250053251327;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.09635815785231988;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3965795487720175;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1697087003887462;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4125724528826577;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1758539833644332;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.02770673478281751;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.12864717441952958;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.08269510156685003;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.3042169031521049;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14089299828557916;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31517865761850816;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1403872751805415;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.023811354785219868;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10566614367153737;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.0702729758172556;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.2288839777917651;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1148820374315997;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.23676009386434094;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11019175106572325;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02040642831585418;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0856216785941897;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.059204484659773925;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.17184452907760903;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09230973482782298;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.17806945427207632;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08543913289306276;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.017446089481275212;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06862836147485345;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04951153175763231;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.129809923045701;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07332256916930585;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13513671764223337;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06568160361017888;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.014884115659231437;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.054539038114920696;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04114669855937214;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0989064414455212;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0577278046766802;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10367175113685581;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05019549935715151;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01267564229810578;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04305573807685484;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.03401590243533729;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0760068744143967;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04514647472950382;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08034833303035839;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038205230707555556;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010778315187231052;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0338174133803715;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.02799842689093084;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05885110169425813;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.035129929112934846;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06282214181758339;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.12868595123291016
   Generating paths time   = 2.483157157897949
   Generating mappings time   = 0.3378446102142334
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.6689300537109375e-06
   Total time   = 2.949697494506836


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> educationconcentration(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5441954467274165;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then return 0.44799268509950874;  // std dev = 7,870, 256,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.4940712651965965;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.5751300671749804;  // std dev = 7,333, 265,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=190 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.5027161542523624;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.481630716476027;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2797550536463524;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.40427896605925967;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.323960900911473;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4643495512259643;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then return 0.3843013558677138;  // std dev = 7,870, 256,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.42275341854095105;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.48990056354445655;  // std dev = 7,333, 265,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=190 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.42994472298977077;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.41239205123047606;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2421806659031011;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3476340341499199;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.2797855302537561;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3741901739506694;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.14132867737022245;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.343402122337593;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.3759869448926816;  // std dev = 10,121, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.34875894246505046;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.33565805659203235;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.203726212528392;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.28653741242639086;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.23366960966582584;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2888750739814853;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.11225504731031953;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.2676819853824615;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.29161184441416926;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.27138292424169036;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.26231860139042446;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.16702713920825674;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2278201023511056;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.18945082422256151;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21809993172339343;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.08797804891832743;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.20352855150287047;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.2208268631489006;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20605374944172242;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.19987893050505776;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.1340556991125888;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17648256523974618;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.15001022951646806;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1636339963798434;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06828132133541301;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.15305628288816425;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1659066449616995;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.1548516450666213;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15048589029716836;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.10583076277216062;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13450385894167247;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.11674043685542754;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.12304706742562875;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.05262457088193414;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.11481148164037995;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1247747656806084;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.11617077403022498;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11289230347694161;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.08253233312019644;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10158669777755826;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.08977002433966023;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.09304409139630085;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.040356224243913955;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.08626033614676239;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.09428774405022951;  // std dev = 10,118, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.08734923979735322;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08474542299938842;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.06379842622273633;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07638212524123399;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.06848431984663257;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07079641309226019;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.030838364314781336;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.06501219493357335;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.07165668393198386;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06591863566290139;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06376764590255186;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.04900959466481981;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05732172078026133;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.05197554629211091;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.054180185535357445;  // std dev = 6,087, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02350551990061447;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.049164682343474556;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.05475331463815629;  // std dev = 10,119, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04993537398656564;  // std dev = 11,154, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04811800951360075;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.0374830377215972;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04299320137287683;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.03931368006422889;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */


Results
   AUC ROC   = 0.503723
   AUC PR    = 0.512593
   CLL	      = -0.700683
   Precision = 0.506944 at threshold = 0.5
   Recall    = 0.155113
   F1        = 0.237543


Total learning time: 159.975 seconds
Total inference time: 3.711 seconds
AUC ROC: 0.503723


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [7.87, 105, 151], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [7.333, 75, 190]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [7.87, 105, 151], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [7.333, 75, 190]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.121, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.118, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [6.906, 75, 131], 'true,true': [6.087, 54, 118], 'false,true': [11.154, 193, 350], 'false,false,true,true': [7.615, 93, 154], 'false,false,false,false': [34.125, 2500, 2180], 'false,false,true,false': [22.586, 1210, 882], 'true,false,true': [3.416, 28, 20], 'false,false,false,true': [20.008, 733, 882], 'true,false,false,false': [10.119, 152, 321]}]]
[{'': [0.22557507352750047, 0.24976560346629592], 'false': [0.22910031914640303, 0.24935662505964112], 'true,false,false': [0.23152512018098273, 0.20291918832325193], 'false,false,true': [0.23475224966808667, 0.2438543993507329], 'true,false': [0.24192810058594214, 0.21704734471986975], 'false,false,false': [0.24787202024367527, 0.24883117831830423], 'false,false': [0.2467423675099923, 0.2498155236231481], 'true': [0.215386695511091, 0.22772638776680518]}, {'': [0.2247664137879627, 0.24867106245597487], 'false': [0.22910031914642195, 0.24869554157332857], 'true,false,false': [0.23152512018098098, 0.20291918832324865], 'false,false,true': [0.23475224966808633, 0.2438543993506893], 'true,false': [0.24192810058593597, 0.2165399852495191], 'false,false,false': [0.24787202024361196, 0.2488311783184148], 'false,false': [0.2456295797861256, 0.24946312978305335], 'true': [0.21538669551108391, 0.22680569336274298]}, {'': [0.22395827446881808, 0.2475966409968811], 'false': [0.2291003191464122, 0.2480499409901824], 'true,false,false': [0.23152512018098173, 0.21657646445229164], 'false,false,true': [0.23475224966808025, 0.24385439935073028], 'true,false': [0.24305555555555605, 0.2213360955502945], 'false,false,false': [0.24787202024364127, 0.24883117831837123], 'false,false': [0.24453718962175694, 0.24911820453095088], 'true': [0.21538669551108974, 0.2258856217869818]}, {'': [0.22273866590965308, 0.24682388366636523], 'false': [0.22910031914641643, 0.24757758842842884], 'true,false,false': [0.23152512018097549, 0.21646863321090923], 'false,false,true': [0.23475224966808192, 0.2438543993506975], 'true,false': [0.24305555555555522, 0.22115760398537415], 'false,false,false': [0.24787202024364588, 0.24883117831831478], 'false,false': [0.2437508483761969, 0.2488659017117335], 'true': [0.2153866955110866, 0.22442977642121711]}, {'': [0.22198816846145822, 0.2463833362107555], 'false': [0.22910031914640794, 0.247300726261734], 'true,false,false': [0.2315251201809795, 0.21642805910995805], 'false,false,true': [0.2347522496680826, 0.24385439935071046], 'true,false': [0.2430555555555555, 0.2210715568628804], 'false,false,false': [0.24787202024365357, 0.24883117831833657], 'false,false': [0.24330242586959833, 0.2487187666806107], 'true': [0.2153866955110873, 0.22352707921879222]}, {'': [0.22158026183536483, 0.24616626090881188], 'false': [0.2291003191464104, 0.24716086893667288], 'true,false,false': [0.2315251201809773, 0.216421326275097], 'false,false,true': [0.23475224966808145, 0.2438543993507183], 'true,false': [0.24305555555555589, 0.2210385255733106], 'false,false,false': [0.24787202024366045, 0.2488311783183354], 'false,false': [0.24308154537702495, 0.24864528748954862], 'true': [0.21538669551108744, 0.22303390700435907]}, {'': [0.22137019848259068, 0.24606677803512786], 'false': [0.22910031914640852, 0.24709599193436751], 'true,false,false': [0.23152512018097923, 0.21642961218626777], 'false,false,true': [0.23475224966808136, 0.2438543993507051], 'true,false': [0.24305555555555544, 0.22103037755422847], 'false,false,false': [0.24787202024364777, 0.24883117831834464], 'false,false': [0.2429802625523915, 0.24861173644350384], 'true': [0.21538669551108744, 0.2227792597009386]}, {'': [0.221263839663253, 0.24602210487618745], 'false': [0.22910031914641066, 0.2470670368331146], 'true,false,false': [0.23152512018097812, 0.21644349768286295], 'false,false,true': [0.23475224966808136, 0.24385439935070546], 'true,false': [0.24305555555555577, 0.22103268974959212], 'false,false,false': [0.24787202024365135, 0.24883117831836277], 'false,false': [0.24293464821474073, 0.2485970006729667], 'true': [0.2153866955110873, 0.22265027172774163]}, {'': [0.22121018596545206, 0.24600176665469367], 'false': [0.22910031914640988, 0.2470542089133309], 'true,false,false': [0.23152512018097834, 0.21645845181264217], 'false,false,true': [0.2347522496680831, 0.24385439935071349], 'true,false': [0.24305555555555566, 0.2210388188177894], 'false,false,false': [0.24787202024365454, 0.248831178318346], 'false,false': [0.2429137771563896, 0.24859055507400518], 'true': [0.21538669551108722, 0.22258531405695556]}, {'': [0.2211832729591703, 0.2459921735606135], 'false': [0.22910031914641132, 0.24704845146501284], 'true,false,false': [0.23152512018097882, 0.21647243334764996], 'false,false,true': [0.2347522496680817, 0.2438543993507194], 'true,false': [0.243055555555556, 0.22104582873061135], 'false,false,false': [0.24787202024364582, 0.2488311783183665], 'false,false': [0.2429038885680211, 0.2485876859267417], 'true': [0.21538669551108686, 0.2225528703960873]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.5441954467274165;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else return 0.5073924013993708;  // std dev = 0,477, 727,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=472 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( educationschool(B, F), gender(B, G) )
%   | | then return 0.5579281845476317;  // std dev = 0,458, 453,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=317 */
%   | | else if ( educationschool(A, H), educationtype(B, I) )
%   | | | then return -0.03768439823382107;  // std dev = 2,116, 48,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.5248156017661787;  // std dev = 3,055, 42,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.481630716476027;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2797550536463524;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.40427896605925967;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.323960900911473;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4643495512259643;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E) )
%   | | then if ( workemployer(B, F), workenddate(A, G) )
%   | | | then return 0.5323359730099377;  // std dev = 4,576, 111,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=83 */
%   | | | else return 0.25355374250356977;  // std dev = 6,009, 145,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=68 */
%   | | else return 0.46611688768256676;  // std dev = 0,466, 471,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.4286014131194956;  // std dev = 0,471, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.41239205123047606;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.2421806659031011;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.3476340341499199;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.2797855302537561;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.3741901739506694;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then if ( worklocation(B, G), workposition(A, H) )
%   | | | then return 0.5539917969650539;  // std dev = 1,302, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.022184072039625264;  // std dev = 2,564, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else return 0.36664443691194165;  // std dev = 0,469, 679,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=452 */
%   else if ( languages(B, I), languages(A, I) )
%   | then return 0.3477493552748322;  // std dev = 0,469, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.33565805659203235;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.203726212528392;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.28653741242639086;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.23366960966582584;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2888750739814853;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.10316499007477566;  // std dev = 0,460, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.24890003752420303;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.30044279652124717;  // std dev = 10,057, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.2709078894844993;  // std dev = 0,467, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.26231860139042446;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.16702713920825674;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2278201023511056;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.18945082422256151;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.21809993172339343;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.08106912907897092;  // std dev = 0,459, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1884641981803982;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.2278553229322798;  // std dev = 10,052, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20607050006955618;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.19987893050505776;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.1340556991125888;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17648256523974618;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.15001022951646806;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1636339963798434;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06318777656774598;  // std dev = 0,459, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.14154260294760956;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.1711976826075794;  // std dev = 10,050, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15520055057633966;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15048589029716836;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.10583076277216062;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13450385894167247;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.11674043685542754;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.12304706742562875;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.04896154184691104;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.10619230027456356;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.128675621547484;  // std dev = 10,051, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.11669658007785684;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11289230347694161;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.08253233312019644;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10158669777755826;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.08977002433966023;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.09304409139630085;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.03777826929728152;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07984601758461196;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.09715515669796297;  // std dev = 10,052, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.0879424418671904;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08474542299938842;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.06379842622273633;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07638212524123399;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.06848431984663257;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07079641309226019;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02906088162838516;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.060233824720602194;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.07377441758753923;  // std dev = 10,053, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06651292666751375;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06376764590255186;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.04900959466481981;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05732172078026133;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.05197554629211091;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.054180185535357445;  // std dev = 0,464, 172,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.02230594527658654;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.045591613713555704;  // std dev = 6,906, 206,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=131 */
%   | | | else return 0.05632879089963338;  // std dev = 10,055, 473,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=321 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.050494615954497;  // std dev = 0,466, 543,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=350 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04811800951360075;  // std dev = 7,615, 247,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=154 */
%   | | | else return 0.0374830377215972;  // std dev = 22,586, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.210 #pos=882 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04299320137287683;  // std dev = 20,008, 1.615,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=882 */
%   | | | else return 0.03931368006422889;  // std dev = 34,125, 4.680,000 (wgt'ed) examples reached here.  /* #neg=2.500 #pos=2.180 */


Results
   AUC ROC   = 0.503672
   AUC PR    = 0.512732
   CLL	      = -0.700822
   Precision = 0.507645 at threshold = 0.5
   Recall    = 0.154316
   F1        = 0.236684


Total learning time: 175.78199999999998 seconds
Total inference time: 4.171 seconds
AUC ROC: 0.503672


Refined model AUC ROC: 0.503672


Dataset: 48_twitter_facebook, Fold: 1, Type: transfer, Time: 03:49:59
{'Learning time': 335.75699999999995, 'AUC PR': 0.512732, 'F1': 0.236684, 'AUC ROC': 0.503672, 'CLL': -0.700822, 'Inference time': 4.171, 'Mapping results': {'Generating mappings time': 0.3378446102142334, 'Generating paths time': 2.483157157897949, 'Finding best mapping': 1.6689300537109375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.12868595123291016, 'Max mapping': 24389, 'Total time': 2.949697494506836}, 'Parameter Learning results': {'Learning time': 159.975, 'AUC PR': 0.512593, 'F1': 0.237543, 'AUC ROC': 0.503723, 'CLL': -0.700683, 'Inference time': 3.711, 'Precision': [0.506944, 0.5], 'Recall': 0.155113}, 'Precision': [0.507645, 0.5], 'Recall': 0.154316}


Start learning from scratch in target domain

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.6000272576039374;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else if ( educationschool(A, F), workenddate(B, G) )
%   | | then return 0.11365554302902847;  // std dev = 0,436, 227,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=58 */
%   | | else return 0.4570189915966836;  // std dev = 0,490, 885,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=530 */
%   else if ( educationtype(B, H), gender(B, I) )
%   | then if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( hometown(B, K), locale(A, L) )
%   | | | then return 0.5473381242886974;  // std dev = 8,903, 370,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=255 */
%   | | | else return 0.3913936159505712;  // std dev = 19,348, 1.504,000 (wgt'ed) examples reached here.  /* #neg=702 #pos=802 */
%   | | else return 0.15217988572588914;  // std dev = 0,456, 2.714,000 (wgt'ed) examples reached here.  /* #neg=1.916 #pos=798 */
%   | else if ( languages(B, M), gender(A, N) )
%   | | then return 0.6345464506274601;  // std dev = 0,417, 161,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=125 */
%   | | else if ( gender(B, P), gender(A, P) )
%   | | | then return 0.3885837177082031;  // std dev = 17,750, 1.265,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=671 */
%   | | | else return 0.29012984202074915;  // std dev = 17,562, 1.257,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=543 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.5103982569917702;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else return 0.33211932441315334;  // std dev = 0,494, 1.112,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=588 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( hometown(B, G), gender(A, H) )
%   | | then return 0.5710229441740197;  // std dev = 0,410, 106,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=83 */
%   | | else if ( worklocation(A, I), workstartdate(B, J) )
%   | | | then return 0.2380765817424345;  // std dev = 4,803, 95,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=41 */
%   | | | else return 0.4127791357126345;  // std dev = 9,075, 345,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=208 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( gender(B, L), workenddate(A, M) )
%   | | | then return 0.30068938944003804;  // std dev = 14,677, 865,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=434 */
%   | | | else return 0.42034556752453944;  // std dev = 12,175, 631,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=392 */
%   | | else if ( educationschool(A, N), educationtype(B, P) )
%   | | | then return 4.2786833587831743E-4;  // std dev = 13,559, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.134 #pos=220 */
%   | | | else return 0.2872522516853153;  // std dev = 30,918, 3.875,000 (wgt'ed) examples reached here.  /* #neg=2.059 #pos=1.816 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( location(B, E), workemployer(A, C) )
%   | then return 0.5386920002667388;  // std dev = 0,349, 406,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=348 */
%   | else return 0.3238469623997469;  // std dev = 0,475, 2.399,000 (wgt'ed) examples reached here.  /* #neg=903 #pos=1.496 */
%   else if ( lastname(B, F), lastname(A, G) )
%   | then if ( hometown(B, H), hometown(A, H) )
%   | | then return 0.7205604681089134;  // std dev = 0,171, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( educationschool(B, I), hometown(B, J) )
%   | | | then return 0.19278135373170877;  // std dev = 3,900, 70,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | | else return 0.4444923408987728;  // std dev = 7,079, 234,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=158 */
%   | else if ( educationtype(B, K), gender(B, L) )
%   | | then if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.2857872932990621;  // std dev = 20,886, 1.786,000 (wgt'ed) examples reached here.  /* #neg=801 #pos=985 */
%   | | | else return 0.10084660863312368;  // std dev = 22,664, 2.592,000 (wgt'ed) examples reached here.  /* #neg=1.854 #pos=738 */
%   | | else if ( languages(B, N), gender(A, P) )
%   | | | then return 0.4782614277063089;  // std dev = 5,123, 149,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=115 */
%   | | | else return 0.23737654436243072;  // std dev = 24,485, 2.417,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=1.145 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( worklocation(B, C), workenddate(B, D) )
%   then if ( educationschool(B, E), educationschool(A, E) )
%   | then return 0.3409580841656422;  // std dev = 0,438, 1.449,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=1.065 */
%   | else if ( educationschool(A, F), gender(A, G) )
%   | | then return 0.01967400949758943;  // std dev = 0,426, 321,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=76 */
%   | | else if ( educationtype(A, H), educationschool(B, I) )
%   | | | then return 0.14589646053420688;  // std dev = 4,276, 74,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=33 */
%   | | | else return 0.3256922195009342;  // std dev = 12,075, 627,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=389 */
%   else if ( location(B, J), location(A, J) )
%   | then return 0.30695510329486114;  // std dev = 0,462, 635,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=416 */
%   | else if ( educationtype(B, K), gender(B, L) )
%   | | then if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.21073597644806757;  // std dev = 19,781, 1.654,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=931 */
%   | | | else return 0.0833489457830575;  // std dev = 23,069, 2.671,000 (wgt'ed) examples reached here.  /* #neg=1.855 #pos=816 */
%   | | else if ( gender(B, N), gender(A, N) )
%   | | | then return 0.2377128733468467;  // std dev = 17,888, 1.295,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=695 */
%   | | | else return 0.1753198220489793;  // std dev = 18,044, 1.350,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=617 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workenddate(B, D), location(B, E) )
%   | then return 0.2694229613416098;  // std dev = 0,432, 1.549,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=1.132 */
%   | else if ( hometown(B, F), locale(A, G) )
%   | | then return 0.2847691224078187;  // std dev = 0,439, 382,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=276 */
%   | | else if ( gender(B, H), locale(A, I) )
%   | | | then return 0.13437269618196024;  // std dev = 19,802, 1.629,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=891 */
%   | | | else return 0.34597501226063093;  // std dev = 3,849, 71,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=51 */
%   else if ( educationschool(A, J), gender(A, K) )
%   | then return 0.06706651923215305;  // std dev = 0,451, 3.410,000 (wgt'ed) examples reached here.  /* #neg=2.233 #pos=1.177 */
%   | else if ( location(B, L), languages(B, M) )
%   | | then if ( lastname(A, N), educationdegree(B, P) )
%   | | | then return -0.26314707799361464;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.27315544362863153;  // std dev = 11,219, 551,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=333 */
%   | | else if ( location(B, Q), hometown(B, R) )
%   | | | then return 0.27374650145369506;  // std dev = 6,898, 204,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=113 */
%   | | | else return 0.1648725889785973;  // std dev = 23,450, 2.272,000 (wgt'ed) examples reached here.  /* #neg=1.207 #pos=1.065 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then return 0.25595225565675894;  // std dev = 0,419, 504,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=378 */
%   else if ( educationyear(A, D), educationyear(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( languages(B, F), location(A, G) )
%   | | | then return 0.2869207490337169;  // std dev = 8,491, 456,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=358 */
%   | | | else return 0.19832826691670752;  // std dev = 11,720, 680,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=470 */
%   | | else if ( workemployer(A, H), workemployer(B, H) )
%   | | | then return 0.45957444607083536;  // std dev = 1,783, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return -0.014990696048750283;  // std dev = 7,061, 290,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=68 */
%   | else if ( educationyear(A, I), educationtype(B, J) )
%   | | then if ( educationschool(A, K), educationschool(B, K) )
%   | | | then return 0.0859963705294206;  // std dev = 19,514, 1.619,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=901 */
%   | | | else return -0.03859846933322563;  // std dev = 13,391, 1.221,000 (wgt'ed) examples reached here.  /* #neg=984 #pos=237 */
%   | | else if ( hometown(B, L), hometown(A, L) )
%   | | | then return 0.5016279563004483;  // std dev = 2,457, 69,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | | else return 0.1323574008186254;  // std dev = 35,051, 5.211,000 (wgt'ed) examples reached here.  /* #neg=2.670 #pos=2.541 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.1925297518696137;  // std dev = 0,371, 437,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=360 */
%   | else if ( workposition(B, E) )
%   | | then return 0.5291791494754088;  // std dev = 0,323, 54,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | else return 0.2802239312914913;  // std dev = 0,400, 60,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   else if ( workemployer(A, F), educationtype(B, G) )
%   | then if ( educationschool(B, H), educationschool(A, H) )
%   | | then if ( worklocation(B, I), workenddate(B, J) )
%   | | | then return 0.15867725019059606;  // std dev = 10,631, 556,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=396 */
%   | | | else return 0.046596540748487035;  // std dev = 15,181, 974,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=508 */
%   | | else return -0.09121275460030727;  // std dev = 0,332, 821,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=112 */
%   | else if ( lastname(B, K), lastname(A, K) )
%   | | then return 0.5295082188136913;  // std dev = 0,096, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | else if ( location(B, L), gender(B, M) )
%   | | | then return 0.1253213654988779;  // std dev = 26,527, 3.201,000 (wgt'ed) examples reached here.  /* #neg=1.447 #pos=1.754 */
%   | | | else return 0.0776584090377524;  // std dev = 30,161, 3.900,000 (wgt'ed) examples reached here.  /* #neg=2.155 #pos=1.745 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(B, C), languages(B, D) )
%   then if ( gender(B, E), educationschool(B, F) )
%   | then if ( educationclasses(B, G), languages(A, H) )
%   | | then return 0.3104517086274458;  // std dev = 0,256, 73,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=68 */
%   | | else if ( workemployer(B, I), birthday(B, J) )
%   | | | then return 0.17028084911932825;  // std dev = 9,280, 491,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=366 */
%   | | | else return 0.1002253668976867;  // std dev = 16,939, 1.354,000 (wgt'ed) examples reached here.  /* #neg=553 #pos=801 */
%   | else return -0.018946370023604962;  // std dev = 0,435, 196,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=79 */
%   else if ( location(A, K), educationtype(B, L) )
%   | then return 0.027896120051691075;  // std dev = 0,438, 3.079,000 (wgt'ed) examples reached here.  /* #neg=1.699 #pos=1.380 */
%   | else if ( location(B, M), worklocation(B, N) )
%   | | then if ( workemployer(A, P), workenddate(A, Q) )
%   | | | then return 0.04754859647935913;  // std dev = 4,027, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   | | | else return 0.17839094592234755;  // std dev = 9,013, 392,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=254 */
%   | | else if ( educationconcentration(A, R), educationschool(B, S) )
%   | | | then return -0.021343053685293954;  // std dev = 8,403, 366,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=147 */
%   | | | else return 0.07941118475722947;  // std dev = 31,035, 4.030,000 (wgt'ed) examples reached here.  /* #neg=2.143 #pos=1.887 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( hometown(B, C), hometown(A, C) )
%   then return 0.36295246157880523;  // std dev = 0,270, 129,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=120 */
%   else if ( location(B, D), gender(B, E) )
%   | then if ( workemployer(B, F), workemployer(A, F) )
%   | | then if ( educationyear(A, G), educationyear(B, G) )
%   | | | then return 0.21352837998614085;  // std dev = 4,566, 266,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=244 */
%   | | | else return 0.07936323625183475;  // std dev = 4,866, 133,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=100 */
%   | | else if ( educationtype(A, H), educationtype(B, I) )
%   | | | then return 0.04116344022069471;  // std dev = 24,815, 3.076,000 (wgt'ed) examples reached here.  /* #neg=1.475 #pos=1.601 */
%   | | | else return 0.09987124385950387;  // std dev = 18,915, 1.534,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=842 */
%   | else if ( educationschool(A, J), educationtype(B, K) )
%   | | then if ( educationconcentration(B, L), educationconcentration(A, L) )
%   | | | then return 0.11503104642446335;  // std dev = 7,886, 292,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=178 */
%   | | | else return -0.027933916966717567;  // std dev = 17,345, 1.643,000 (wgt'ed) examples reached here.  /* #neg=1.087 #pos=556 */
%   | | else if ( educationtype(A, M), educationtype(B, N) )
%   | | | then return 0.1958875241617207;  // std dev = 5,725, 133,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=71 */
%   | | | else return 0.048389112162210875;  // std dev = 26,281, 2.870,000 (wgt'ed) examples reached here.  /* #neg=1.544 #pos=1.326 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( workenddate(B, D), workenddate(A, D) )
%   | then return 0.13244219563204285;  // std dev = 0,403, 601,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=464 */
%   | else if ( educationclasses(B, E), hometown(B, F) )
%   | | then return 0.30507684478623903;  // std dev = 0,280, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else if ( educationyear(A, G), educationyear(B, G) )
%   | | | then return 0.1089911334809202;  // std dev = 13,945, 1.032,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=739 */
%   | | | else return 0.017612840272653172;  // std dev = 21,127, 1.937,000 (wgt'ed) examples reached here.  /* #neg=846 #pos=1.091 */
%   else if ( educationschool(A, H), educationtype(B, I) )
%   | then return -0.046540432692904726;  // std dev = 0,375, 1.727,000 (wgt'ed) examples reached here.  /* #neg=1.371 #pos=356 */
%   | else if ( educationconcentration(B, J), educationschool(B, K) )
%   | | then if ( educationyear(B, L), locale(A, M) )
%   | | | then return 0.0800923652894295;  // std dev = 13,324, 753,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=416 */
%   | | | else return 0.2861507537490669;  // std dev = 3,893, 71,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | | else if ( gender(B, N), gender(A, N) )
%   | | | then return 0.07612553881502251;  // std dev = 22,127, 2.042,000 (wgt'ed) examples reached here.  /* #neg=976 #pos=1.066 */
%   | | | else return 0.010492746353582508;  // std dev = 20,754, 1.852,000 (wgt'ed) examples reached here.  /* #neg=1.051 #pos=801 */


Results
   AUC ROC   = 0.629841
   AUC PR    = 0.610438
   CLL	      = -0.681494
   Precision = 0.652835 at threshold = 0.5
   Recall    = 0.29668
   F1        = 0.407962


Total learning time: 362.328 seconds
Total inference time: 5.781 seconds
AUC ROC: 0.629841


Dataset: 48_twitter_facebook, Fold: 1, Type: scratch, Time: 03:56:08
{'Learning time': 362.328, 'AUC PR': 0.610438, 'F1': 0.407962, 'AUC ROC': 0.629841, 'CLL': -0.681494, 'Inference time': 5.781, 'Precision': [0.652835, 0.5], 'Recall': 0.29668}


Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.17865753173828125
   Generating paths time   = 3.871788740158081
   Generating mappings time   = 0.371021032333374
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 4.421477794647217


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> educationyear(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.25814893509951203;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E) )
%   | | then return 0.4089510741369425;  // std dev = 6,802, 187,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=103 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.324495088945663;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.4029386974395444;  // std dev = 11,647, 547,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=298 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.40609414057896404;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.3490833841929526;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.318279654053756;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.3612456478198502;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.22373365448410518;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E) )
%   | | then return 0.3515617844303455;  // std dev = 6,802, 187,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=103 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.2802388176480902;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.3465069098538818;  // std dev = 11,647, 547,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=298 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.34916026481482515;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.261631808675212;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.3010739110579105;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.2749630071408201;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.31135839433988677;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.18886832215749785;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.33875103755661345;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.2340277313951238;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.2859406472235299;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.2877098388112756;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.25041663424982225;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.22985541364011358;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.25845472495637234;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.15570029437174387;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.268350955663494;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1897158311562367;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.22734707438553312;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.22865502408648747;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.1787352457468729;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.2017659947518279;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1866237771980977;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.20762205555721247;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.12582628229372078;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.20644307574208823;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.15019630951644714;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.1761256883202881;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.17705056970677052;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.14243924477676276;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.15860322592022802;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.14802177017880605;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.16265337377178504;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1000891691788059;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.15624644056851417;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.11686627063445519;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.13424124238600085;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.13488530800990134;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11159559999632997;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.12252743879894679;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.11539405858577126;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.1252424516150997;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07866279780602627;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.11741685837449559;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.08985301616100168;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.10139472965111504;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.10184615212087907;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.08637026299843599;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.09358691996085744;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.08888171985136693;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.09538263395263033;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.061272608607422445;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.08807195695569567;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.06853817301851753;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.07624125554657447;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.07656356771579118;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06628370899125427;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.07097564100486324;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.06790846189520847;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.07216252726393182;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.047415491488114414;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06610377474473414;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.052010094174499116;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.057217467141829174;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.05745284284358503;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.050575643621874215;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.05359499946392585;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05160712822462562;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.05438522938840016;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.036517889972878824;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.04969651862450795;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.03933562411860743;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.0429153085329874;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.043090930830680906;  // std dev = 4,252, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.038438849075129344;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.040365419834828234;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.039080836608129964;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.04089768596090371;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */


Results
   AUC ROC   = 0.503594
   AUC PR    = 0.520031
   CLL	      = -0.697561
   Precision = 0.599234 at threshold = 0.5
   Recall    = 0.102265
   F1        = 0.174714


Total learning time: 127.652 seconds
Total inference time: 4.632 seconds
AUC ROC: 0.503594


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [6.802, 84, 103], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [11.647, 249, 298]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [6.802, 84, 103], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [11.647, 249, 298]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}], ['edge(A, B)', {'': 'educationyear(A, C), educationyear(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.195, 111, 97], 'true,true': [3.464, 30, 20], 'false,true': [4.252, 33, 40], 'false,false,true,true': [2.582, 15, 12], 'false,false,false,false': [32.395, 2086, 2112], 'false,false,true,false': [13.386, 365, 352], 'true,false,true': [1.549, 4, 6], 'false,false,false,true': [13.785, 413, 352], 'true,false,false,false': [13.398, 329, 395]}]]
[{'': [0.24950816207075227, 0.2499855126255574], 'false': [0.24770125727153416, 0.24998003521595683], 'true,false,false': [0.24886741863905587, 0.2479938771895257], 'false,false,true': [0.2469135802469131, 0.24991781578674838], 'true,false': [0.2474191426692243, 0.2494627428621453], 'false,false,false': [0.24841044042888158, 0.24999041037027778], 'false,false': [0.24988437969706284, 0.24998756666747335], 'true': [0.23999999999999966, 0.24917846565782864]}, {'': [0.2489851632994237, 0.2499128491457913], 'false': [0.24770125727153378, 0.24991645550846703], 'true,false,false': [0.24886741863905104, 0.24799387718953173], 'false,false,true': [0.2469135802469134, 0.24991781578675448], 'true,false': [0.24741914266921658, 0.24911106276431413], 'false,false,false': [0.24841044042889024, 0.24999041037029116], 'false,false': [0.2498631984082313, 0.24991957902237572], 'true': [0.24000000000000055, 0.24886165576526487]}, {'': [0.2484758806852966, 0.24984213541372446], 'false': [0.24770125727153283, 0.2498546751440689], 'true,false,false': [0.248867418639051, 0.24792074763586214], 'false,false,true': [0.24691358024691332, 0.24991781578676298], 'true,false': [0.24000000000000005, 0.24859924131017988], 'false,false,false': [0.2484104404289031, 0.2499904103703847], 'false,false': [0.24984271451273696, 0.24985351434634723], 'true': [0.23999999999999994, 0.24855150877552612]}, {'': [0.24808975208335404, 0.24978971450261772], 'false': [0.247701257271533, 0.2498087107736], 'true,false,false': [0.2488674186390534, 0.2479206501161473], 'false,false,true': [0.24691358024691365, 0.24991781578675792], 'true,false': [0.24, 0.248377454977883], 'false,false,false': [0.24841044042889016, 0.24999041037030875], 'false,false': [0.24982734150540842, 0.2498043615187313], 'true': [0.24000000000000024, 0.24831415583560065]}, {'': [0.2478590452105905, 0.24975837361686595], 'false': [0.24770125727153333, 0.24978105270817352], 'true,false,false': [0.24886741863905476, 0.24792060180919018], 'false,false,true': [0.24691358024691382, 0.24991781578676264], 'true,false': [0.24000000000000005, 0.2482484698477095], 'false,false,false': [0.24841044042888655, 0.24999041037030226], 'false,false': [0.24981792874307637, 0.24977478531919423], 'true': [0.24000000000000046, 0.24817459729784044]}, {'': [0.24774056491377103, 0.24974229961539307], 'false': [0.247701257271533, 0.2497667748680325], 'true,false,false': [0.24886741863905204, 0.24792057932851416], 'false,false,true': [0.24691358024691357, 0.24991781578676606], 'true,false': [0.24, 0.24818422924672925], 'false,false,false': [0.24841044042888938, 0.24999041037033676], 'false,false': [0.24981297060180768, 0.24975951858408219], 'true': [0.2399999999999998, 0.24810438404740123]}, {'': [0.24768501087326233, 0.24973481863150712], 'false': [0.24770125727153294, 0.2497601004372938], 'true,false,false': [0.24886741863905215, 0.24792056922319497], 'false,false,true': [0.24691358024691337, 0.24991781578676012], 'true,false': [0.24000000000000007, 0.24815497786710233], 'false,false,false': [0.2484104404288906, 0.24999041037034606], 'false,false': [0.24981061252601702, 0.2497523829507489], 'true': [0.23999999999999988, 0.24807203980456038]}, {'': [0.24766011423894943, 0.24973151796420548], 'false': [0.24770125727153325, 0.2497571529162075], 'true,false,false': [0.24886741863905326, 0.24792056495448409], 'false,false,true': [0.24691358024691382, 0.2499178157867631], 'true,false': [0.24, 0.24814216718712945], 'false,false,false': [0.24841044042890134, 0.24999041037032965], 'false,false': [0.24980956102081728, 0.24974923231104068], 'true': [0.24000000000000032, 0.24805766062732956]}, {'': [0.24764911671192827, 0.24973009503855295], 'false': [0.24770125727153314, 0.24975588670641902], 'true,false,false': [0.2488674186390546, 0.24792056345438918], 'false,false,true': [0.24691358024691362, 0.24991781578676192], 'true,false': [0.24000000000000005, 0.24813657996068725], 'false,false,false': [0.24841044042890023, 0.249990410370346], 'false,false': [0.24980910994466082, 0.24974787905402415], 'true': [0.23999999999999982, 0.24805126488493148]}, {'': [0.24764423499804436, 0.24972948403859524], 'false': [0.24770125727153308, 0.24975534780922168], 'true,false,false': [0.2488674186390517, 0.24792056324807865], 'false,false,true': [0.24691358024691384, 0.24991781578676303], 'true,false': [0.24, 0.24813410018203236], 'false,false,false': [0.24841044042889002, 0.24999041037030528], 'false,false': [0.24980892091956383, 0.24974730317225177], 'true': [0.23999999999999988, 0.248048354406253]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- educationyear(A, C), educationyear(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.25814893509951203;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E) )
%   | | then return 0.4089510741369425;  // std dev = 0,497, 187,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=103 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.324495088945663;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.4029386974395444;  // std dev = 11,647, 547,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=298 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.40609414057896404;  // std dev = 0,498, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.3490833841929526;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.318279654053756;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.3612456478198502;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.22373365448410518;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E) )
%   | | then return 0.3515617844303455;  // std dev = 0,497, 187,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=103 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.2802388176480902;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.3465069098538818;  // std dev = 11,647, 547,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=298 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.34916026481482515;  // std dev = 0,498, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.261631808675212;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.3010739110579105;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.2749630071408201;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.31135839433988677;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.18886832215749785;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.33875103755661345;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.2340277313951238;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.2859406472235299;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.2877098388112756;  // std dev = 0,498, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.2192721473492705;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.25041663424982225;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.22985541364011358;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.25845472495637234;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.15570029437174387;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.268350955663494;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1897158311562367;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.22734707438553312;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.22865502408648747;  // std dev = 0,498, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.1787352457468729;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.2017659947518279;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1866237771980977;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.20762205555721247;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.12582628229372078;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.20644307574208823;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.15019630951644714;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.1761256883202881;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.17705056970677052;  // std dev = 0,498, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.14243924477676276;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.15860322592022802;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.14802177017880605;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.16265337377178504;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1000891691788059;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.15624644056851417;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.11686627063445519;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.13424124238600085;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.13488530800990134;  // std dev = 0,498, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.11159559999632997;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.12252743879894679;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.11539405858577126;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.1252424516150997;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07866279780602627;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else return 0.0990163271896409;  // std dev = 0,498, 942,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=498 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( workenddate(B, F), educationdegree(A, G) )
%   | | then return 0.5539009466414268;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workenddate(A, H), birthday(B, I) )
%   | | | then return 0.5539009466414266;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.035384767644287614;  // std dev = 3,682, 56,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.08637026299843599;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.09358691996085744;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.08888171985136693;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.09538263395263033;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.061272608607422445;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.09267035128075436;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.06634099753255837;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.07683357339980929;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.07652559189236392;  // std dev = 0,470, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.06628370899125427;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.07097564100486324;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.06790846189520847;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.07216252726393182;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.047415491488114414;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06954000399512103;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.050318677448365524;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.05766373449049574;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.05771606258582795;  // std dev = 0,470, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.050575643621874215;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.05359499946392585;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05160712822462562;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.05438522938840016;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.036517889972878824;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.052263080546550565;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.03804455121432215;  // std dev = 7,195, 208,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=97 */
%   | | | else return 0.04325025258506702;  // std dev = 13,398, 724,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=395 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04350662468407127;  // std dev = 0,470, 73,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.038438849075129344;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.040365419834828234;  // std dev = 13,386, 717,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=352 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.039080836608129964;  // std dev = 13,785, 765,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=352 */
%   | | | else return 0.04089768596090371;  // std dev = 32,395, 4.198,000 (wgt'ed) examples reached here.  /* #neg=2.086 #pos=2.112 */


Results
   AUC ROC   = 0.503872
   AUC PR    = 0.521426
   CLL	      = -0.697554
   Precision = 0.615693 at threshold = 0.5
   Recall    = 0.083751
   F1        = 0.147445


Total learning time: 133.927 seconds
Total inference time: 6.158 seconds
AUC ROC: 0.503872


Refined model AUC ROC: 0.503872


Dataset: 48_twitter_facebook, Fold: 2, Type: transfer, Time: 04:00:46
{'Learning time': 261.579, 'AUC PR': 0.521426, 'F1': 0.147445, 'AUC ROC': 0.503872, 'CLL': -0.697554, 'Inference time': 6.158, 'Mapping results': {'Generating mappings time': 0.371021032333374, 'Generating paths time': 3.871788740158081, 'Finding best mapping': 1.430511474609375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.17865753173828125, 'Max mapping': 24389, 'Total time': 4.421477794647217}, 'Parameter Learning results': {'Learning time': 127.652, 'AUC PR': 0.520031, 'F1': 0.174714, 'AUC ROC': 0.503594, 'CLL': -0.697561, 'Inference time': 4.632, 'Precision': [0.599234, 0.5], 'Recall': 0.102265}, 'Precision': [0.615693, 0.5], 'Recall': 0.083751}


Start learning from scratch in target domain

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( location(B, F), lastname(B, G) )
%   | | then if ( educationconcentration(B, H), gender(A, I) )
%   | | | then return 0.30000940021579137;  // std dev = 3,256, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.6706489350995116;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | else return 0.15563997452603665;  // std dev = 0,457, 279,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=83 */
%   | else if ( workenddate(B, J), worklocation(B, K) )
%   | | then return 0.02481560176617904;  // std dev = 0,373, 78,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   | | else if ( educationtype(A, L), educationyear(B, M) )
%   | | | then return 0.4483595213260298;  // std dev = 20,614, 1.757,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=1.037 */
%   | | | else return 0.5602517388378253;  // std dev = 18,923, 1.712,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=1.202 */
%   else if ( educationconcentration(B, N), educationconcentration(A, N) )
%   | then return 0.6051368869067419;  // std dev = 0,435, 83,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=62 */
%   | else if ( educationyear(A, P), educationyear(B, P) )
%   | | then return 0.34897462317290256;  // std dev = 0,500, 436,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=214 */
%   | | else return 0.16852308475937142;  // std dev = 0,463, 2.352,000 (wgt'ed) examples reached here.  /* #neg=1.622 #pos=730 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationyear(B, D), gender(A, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then return 0.49633189397022115;  // std dev = 0,456, 1.099,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=767 */
%   | | else if ( educationconcentration(A, G), educationschool(A, H) )
%   | | | then return 0.012378351292542238;  // std dev = 6,689, 276,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=57 */
%   | | | else return 0.3007427039492291;  // std dev = 16,106, 1.059,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=535 */
%   | else return 0.47372167577125035;  // std dev = 0,458, 1.467,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=1.021 */
%   else if ( educationyear(A, I), educationtype(B, J) )
%   | then if ( workemployer(B, K), hometown(B, L) )
%   | | then if ( location(B, M) )
%   | | | then return 0.14509886435758756;  // std dev = 3,034, 44,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.5716693742680097;  // std dev = 3,772, 76,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=57 */
%   | | else if ( location(B, N), location(A, N) )
%   | | | then return 0.5700014432352688;  // std dev = 5,146, 145,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=109 */
%   | | | else return 0.17755077413123557;  // std dev = 17,139, 1.300,000 (wgt'ed) examples reached here.  /* #neg=845 #pos=455 */
%   | else return 0.1192870465627513;  // std dev = 0,450, 1.306,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=371 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( hometown(B, F), lastname(B, G) )
%   | | then return 0.2336190664215492;  // std dev = 0,481, 174,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=83 */
%   | | else return 0.027319635666798084;  // std dev = 0,430, 180,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=45 */
%   | else if ( educationyear(B, H), birthday(B, I) )
%   | | then if ( lastname(B, J), gender(A, K) )
%   | | | then return 0.44139295904682213;  // std dev = 8,170, 344,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=247 */
%   | | | else return 0.22483424177039887;  // std dev = 14,170, 834,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=410 */
%   | | else return 0.3735372206756885;  // std dev = 0,462, 2.369,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=1.595 */
%   else if ( hometown(B, L), languages(B, M) )
%   | then if ( location(B, N), educationdegree(B, P) )
%   | | then return -0.013838543544797847;  // std dev = 0,381, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( educationdegree(A, Q), educationdegree(B, R) )
%   | | | then return 0.1310918518524945;  // std dev = 3,334, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.3973163798420461;  // std dev = 7,679, 258,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=157 */
%   | else return 0.13169443401342645;  // std dev = 0,462, 2.513,000 (wgt'ed) examples reached here.  /* #neg=1.691 #pos=822 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( educationtype(A, D), educationyear(B, E) )
%   | then return 0.35868040100873744;  // std dev = 0,460, 437,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=301 */
%   | else return 0.5015045472400472;  // std dev = 0,327, 210,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=185 */
%   else if ( locale(B, F), locale(A, F) )
%   | then if ( educationdegree(B, G), languages(B, H) )
%   | | then if ( lastname(B, I), birthday(B, J) )
%   | | | then return 0.2665766074499479;  // std dev = 3,884, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.02658976930864699;  // std dev = 6,859, 253,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=69 */
%   | | else if ( workenddate(B, K), worklocation(B, L) )
%   | | | then return -0.06735807712079611;  // std dev = 3,138, 75,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   | | | else return 0.26298396098558396;  // std dev = 26,123, 3.055,000 (wgt'ed) examples reached here.  /* #neg=1.128 #pos=1.927 */
%   | else if ( location(A, M), birthday(B, N) )
%   | | then return -0.004839549503853703;  // std dev = 0,403, 490,000 (wgt'ed) examples reached here.  /* #neg=383 #pos=107 */
%   | | else if ( birthday(A, P), birthday(B, P) )
%   | | | then return 0.37082149317305635;  // std dev = 5,874, 148,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=89 */
%   | | | else return 0.1087521895175946;  // std dev = 20,899, 2.043,000 (wgt'ed) examples reached here.  /* #neg=1.379 #pos=664 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationdegree(B, D), languages(B, E) )
%   | then return 0.08202646161331516;  // std dev = 0,455, 354,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=128 */
%   | else if ( educationconcentration(B, F), workenddate(A, G) )
%   | | then if ( educationyear(A, H), workstartdate(A, I) )
%   | | | then return -0.23517310319661366;  // std dev = 2,590, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | | else return 0.1933355162002955;  // std dev = 2,765, 36,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | else if ( educationconcentration(B, J), gender(A, K) )
%   | | | then return 0.2811210845002294;  // std dev = 13,434, 944,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=671 */
%   | | | else return 0.1833308426526691;  // std dev = 23,685, 2.521,000 (wgt'ed) examples reached here.  /* #neg=969 #pos=1.552 */
%   else if ( educationdegree(A, L), languages(A, M) )
%   | then if ( location(A, N), hometown(A, P) )
%   | | then return -0.04701355979801493;  // std dev = 0,380, 47,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( educationconcentration(B, Q), educationdegree(B, R) )
%   | | | then return 0.0067042120300914755;  // std dev = 2,562, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.346653697043975;  // std dev = 7,150, 219,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=131 */
%   | else return 0.08825026204181645;  // std dev = 0,455, 2.569,000 (wgt'ed) examples reached here.  /* #neg=1.714 #pos=855 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workenddate(B, C), educationconcentration(A, D) )
%   then return -0.07136599643428164;  // std dev = 0,399, 242,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=59 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( gender(B, F) )
%   | | then if ( educationdegree(A, G), educationdegree(B, H) )
%   | | | then return 0.0824945287106627;  // std dev = 3,753, 59,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | else return 0.3038094463360085;  // std dev = 9,517, 559,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=442 */
%   | | else if ( educationdegree(A, I), educationyear(A, J) )
%   | | | then return 0.3232290538999581;  // std dev = 0,889, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.29640940229322593;  // std dev = 1,263, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( location(A, K), location(B, L) )
%   | | then if ( educationconcentration(B, M), educationdegree(A, N) )
%   | | | then return 0.2741362102617737;  // std dev = 3,851, 78,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=51 */
%   | | | else return -0.06957132087262993;  // std dev = 8,066, 400,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=100 */
%   | | else if ( locale(B, P), locale(A, P) )
%   | | | then return 0.15290320213479883;  // std dev = 26,006, 3.100,000 (wgt'ed) examples reached here.  /* #neg=1.192 #pos=1.908 */
%   | | | else return 0.08213175470907742;  // std dev = 22,242, 2.317,000 (wgt'ed) examples reached here.  /* #neg=1.529 #pos=788 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.20427509524432844;  // std dev = 0,420, 647,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=486 */
%   else if ( location(A, D), educationyear(B, E) )
%   | then if ( birthday(B, F), birthday(A, F) )
%   | | then if ( workenddate(B, G) )
%   | | | then return -0.2560033663545954;  // std dev = 1,267, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.29138126399595826;  // std dev = 4,916, 109,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=70 */
%   | | else if ( birthday(B, H), educationconcentration(A, I) )
%   | | | then return -0.10754317045027904;  // std dev = 6,588, 317,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=67 */
%   | | | else return 0.03568988352914054;  // std dev = 13,588, 947,000 (wgt'ed) examples reached here.  /* #neg=572 #pos=375 */
%   | else if ( lastname(B, J), educationyear(B, K) )
%   | | then if ( birthday(B, L), birthday(A, L) )
%   | | | then return 0.34523819542039375;  // std dev = 4,331, 127,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=101 */
%   | | | else return 0.12030083521346283;  // std dev = 14,152, 920,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=468 */
%   | | else if ( locale(B, M), locale(A, M) )
%   | | | then return 0.10605627463264472;  // std dev = 21,799, 2.157,000 (wgt'ed) examples reached here.  /* #neg=833 #pos=1.324 */
%   | | | else return 0.053756837707499894;  // std dev = 17,929, 1.527,000 (wgt'ed) examples reached here.  /* #neg=1.034 #pos=493 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(B, C), educationconcentration(A, C) )
%   then if ( educationdegree(B, D), languages(B, E) )
%   | then return -0.03143764395477836;  // std dev = 0,452, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else return 0.2545460731500845;  // std dev = 0,403, 218,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=171 */
%   else if ( educationyear(B, F), educationconcentration(A, G) )
%   | then if ( educationschool(B, H), educationschool(A, H) )
%   | | then if ( location(B, I), educationyear(A, J) )
%   | | | then return 0.2122138503017502;  // std dev = 6,817, 231,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=158 */
%   | | | else return 0.0888812990915703;  // std dev = 8,163, 300,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=158 */
%   | | else return -0.10618049638799965;  // std dev = 0,376, 673,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=136 */
%   | else if ( educationconcentration(A, K), educationschool(A, L) )
%   | | then if ( educationschool(B, L) )
%   | | | then return 0.2629281646864263;  // std dev = 6,117, 262,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=214 */
%   | | | else return 0.07514277741307063;  // std dev = 10,315, 476,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=249 */
%   | | else if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.19881643157704532;  // std dev = 15,758, 1.288,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=888 */
%   | | | else return 0.017957599614235143;  // std dev = 26,301, 3.292,000 (wgt'ed) examples reached here.  /* #neg=1.891 #pos=1.401 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workenddate(B, C), location(A, D) )
%   then if ( educationyear(A, E), locale(A, F) )
%   | then return 0.010110057672990393;  // std dev = 0,433, 269,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=113 */
%   | else return -0.18034739131963756;  // std dev = 0,284, 99,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=11 */
%   else if ( workstartdate(B, G), educationyear(B, H) )
%   | then if ( workemployer(B, I), workenddate(B, J) )
%   | | then return -0.0777461069923454;  // std dev = 0,402, 53,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( birthday(B, K), location(B, L) )
%   | | | then return 0.05478073508270856;  // std dev = 6,199, 190,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=78 */
%   | | | else return 0.15987506945486776;  // std dev = 11,072, 591,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=360 */
%   | else if ( languages(B, M), lastname(B, N) )
%   | | then if ( workenddate(A, P), educationyear(B, Q) )
%   | | | then return 0.3293903357894691;  // std dev = 3,304, 67,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=50 */
%   | | | else return 0.10375300022282316;  // std dev = 9,860, 490,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=264 */
%   | | else if ( languages(B, R), location(B, S) )
%   | | | then return -0.20443286548319364;  // std dev = 2,799, 69,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | | else return 0.04500063652937993;  // std dev = 31,767, 4.944,000 (wgt'ed) examples reached here.  /* #neg=2.457 #pos=2.487 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( lastname(B, C), location(B, D) )
%   then if ( educationschool(B, E), educationschool(A, E) )
%   | then return 0.17603235974671677;  // std dev = 0,406, 548,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=417 */
%   | else if ( educationschool(A, F), educationschool(B, G) )
%   | | then return -0.10016900600404474;  // std dev = 0,415, 406,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=125 */
%   | | else if ( workenddate(B, H), workstartdate(B, I) )
%   | | | then return -0.030046874980815475;  // std dev = 2,489, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.1874923322544613;  // std dev = 6,541, 246,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=167 */
%   else if ( workenddate(B, J), educationconcentration(A, K) )
%   | then return -0.13677777607109187;  // std dev = 0,351, 170,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | else if ( educationconcentration(B, L), educationconcentration(A, M) )
%   | | then if ( educationschool(A, N), educationschool(B, N) )
%   | | | then return 0.15848540705341166;  // std dev = 8,195, 396,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=287 */
%   | | | else return -0.043466852086483834;  // std dev = 4,823, 120,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | | else if ( workemployer(B, P), educationyear(B, Q) )
%   | | | then return 0.1619940268068744;  // std dev = 6,774, 218,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=133 */
%   | | | else return 0.024313925398165532;  // std dev = 30,997, 4.635,000 (wgt'ed) examples reached here.  /* #neg=2.451 #pos=2.184 */


Results
   AUC ROC   = 0.518551
   AUC PR    = 0.531487
   CLL	      = -0.738077
   Precision = 0.500811 at threshold = 0.5
   Recall    = 0.538227
   F1        = 0.518845


Total learning time: 270.233 seconds
Total inference time: 5.007 seconds
AUC ROC: 0.518551


Dataset: 48_twitter_facebook, Fold: 2, Type: scratch, Time: 04:05:21
{'Learning time': 270.233, 'AUC PR': 0.531487, 'F1': 0.518845, 'AUC ROC': 0.518551, 'CLL': -0.738077, 'Inference time': 5.007, 'Precision': [0.500811, 0.5], 'Recall': 0.538227}


Starting fold 3

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.11065673828125
   Generating paths time   = 3.5704240798950195
   Generating mappings time   = 0.5018520355224609
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 4.18294358253479


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationtype(A,B)', 'accounttype(A,B) -> locale(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
0;true,false;educationtype(A, E).;false;true
0;true,false,false;educationtype(B, F).;false;false
0;false,false,true;educationtype(B, I).;false;false
0;false;educationtype(B, G), educationtype(A, G).;false;true
0;false,false,false;educationtype(B, J).;false;false
0;false,false;educationtype(A, H).;true;true
0;true;educationtype(A, D), educationtype(B, D).;false;true
1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
1;true,false;educationtype(A, E).;false;true
1;true,false,false;educationtype(B, F).;false;false
1;false,false,true;educationtype(B, I).;false;false
1;false;educationtype(A, G), educationtype(B, G).;false;true
1;false,false,false;educationtype(B, J).;false;false
1;false,false;educationtype(A, H).;true;true
1;true;educationtype(B, D), educationtype(A, D).;false;true
2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
2;true,false;educationtype(A, E), educationtype(B, F).;false;true
2;true,false,false;educationtype(B, G).;false;false
2;false,false,true;educationtype(B, J).;false;false
2;false;educationtype(B, H), educationtype(A, H).;false;true
2;false,false,false;educationtype(B, K).;false;false
2;false,false;educationtype(A, I).;true;true
2;true;educationtype(B, D), educationtype(A, D).;false;true
3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
3;true,false;educationtype(B, E), educationtype(A, F).;false;true
3;true,false,false;educationtype(B, G).;false;false
3;false,false,true;educationtype(B, J).;false;false
3;false;educationtype(A, H), educationtype(B, H).;false;true
3;false,false,false;educationtype(B, K).;false;false
3;false,false;educationtype(A, I).;true;true
3;true;educationtype(B, D), educationtype(A, D).;false;true
4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
4;true,false;educationtype(A, E), educationtype(B, F).;false;true
4;true,false,false;educationtype(B, G).;false;false
4;false,false,true;educationtype(B, J).;false;false
4;false;educationtype(A, H), educationtype(B, H).;false;true
4;false,false,false;educationtype(B, K).;false;false
4;false,false;educationtype(A, I).;true;true
4;true;educationtype(B, D), educationtype(A, D).;false;true
5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
5;true,false;educationtype(A, E), educationtype(B, F).;false;true
5;true,false,false;educationtype(B, G).;false;false
5;false,false,true;educationtype(B, J).;false;false
5;false;educationtype(A, H), educationtype(B, H).;false;true
5;false,false,false;educationtype(B, K).;false;false
5;false,false;educationtype(A, I).;true;true
5;true;educationtype(A, D), educationtype(B, D).;false;true
6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
6;true,false;educationtype(A, E), educationtype(B, F).;false;true
6;true,false,false;educationtype(B, G).;false;false
6;false,false,true;educationtype(B, J).;false;false
6;false;educationtype(B, H), educationtype(A, H).;false;true
6;false,false,false;educationtype(B, K).;false;false
6;false,false;educationtype(A, I).;true;true
6;true;educationtype(A, D), educationtype(B, D).;false;true
7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
7;true,false;educationtype(B, E), educationtype(A, F).;false;true
7;true,false,false;educationtype(B, G).;false;false
7;false,false,true;educationtype(B, J).;false;false
7;false;educationtype(A, H), educationtype(B, H).;false;true
7;false,false,false;educationtype(B, K).;false;false
7;false,false;educationtype(A, I).;true;true
7;true;educationtype(B, D), educationtype(A, D).;false;true
8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
8;true,false;educationtype(A, E), educationtype(B, F).;false;true
8;true,false,false;educationtype(B, G).;false;false
8;false,false,true;educationtype(B, J).;false;false
8;false;educationtype(A, H), educationtype(B, H).;false;true
8;false,false,false;educationtype(B, K).;false;false
8;false,false;educationtype(A, I).;true;true
8;true;educationtype(A, D), educationtype(B, D).;false;true
9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
9;true,false;educationtype(A, E), educationtype(B, F).;false;true
9;true,false,false;educationtype(B, G).;false;false
9;false,false,true;educationtype(B, J).;false;false
9;false;educationtype(B, H), educationtype(A, H).;false;true
9;false,false,false;educationtype(B, K).;false;false
9;false,false;educationtype(A, I).;true;true
9;true;educationtype(A, D), educationtype(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.36043204012233854;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.336409804664725;  // std dev = 14,961, 897,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=429 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.37747883200672416;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.35567776541252266;  // std dev = 12,319, 607,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=302 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.37108481811413074;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.08350104777556872;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.3891663048265548;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.35698343393400644;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.3381489350995078;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.31067084365762127;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.2903420413038387;  // std dev = 14,961, 897,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=429 */
%   | | else if ( educationtype(B, F) )
%   | | | then return 0.3250632486836558;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.3066519123340033;  // std dev = 12,319, 607,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=302 */
%   else if ( educationtype(A, G), educationtype(B, G) )
%   | then return 0.3196681152776981;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.0730294421202145;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.3349147756756395;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.30775584820313845;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.2918156270860231;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.2579184133981348;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.06605721431365544;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.26911339019436614;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.2581368873278975;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.264924597750124;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06335859422192762;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.2767382698485028;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.25564293764001816;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.24315142121867653;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.20723240990425973;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.053930626343668825;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.2153346723765457;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.20809086526319767;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.21231067920951394;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.0545723384737647;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.2208165565940603;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2055775083386976;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.1964426926375951;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.1623845434276989;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.043726058600262525;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.1679569818938772;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.1635328377975395;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.16588137234989772;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04670472950234825;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.17170826709116524;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.16124175133850874;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.15490211061494352;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.12506239900382382;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.035254573652136974;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.12879226577266287;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.1262465069488532;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.12740335310972334;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03974848838056776;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.13130310795535127;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.12429678236256528;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.12004033477981821;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.09526334713885784;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.028297288059541834;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.09774256149495536;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.09634258214956301;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.09681716152278623;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.033665086837223024;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.09942388426769357;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.09475647013079562;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.09194584337439973;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.07208330066363575;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.022632068892999554;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.07374306124839503;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.07300111889671292;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.07312014395535815;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.028394708055954225;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.07488648723214343;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07174728715216376;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.06990025076684588;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.05433204163310764;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.018049846631575706;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.0554605579147922;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.05508065080080375;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.055033423601323975;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.02386498070767678;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.056256486659579046;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05410717952566539;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.05289015892593955;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.04086144143827674;  // std dev = 16,545, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.01436311467294702;  // std dev = 4,259, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.04164367277511674;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.04145618804719681;  // std dev = 18,828, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.04134433842011351;  // std dev = 14,903, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.019997977332815477;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.04221196360052301;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.040708884791933554;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.039901577765126164;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */


Results
   AUC ROC   = 0.486615
   AUC PR    = 0.483201
   CLL	      = -0.694354
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 71.751 seconds
Total inference time: 4.319 seconds
AUC ROC: 0.486615


Structure after Parameter Learning
[['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(B, G), educationtype(A, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [14.961, 468, 429], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [12.319, 305, 302]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E)', 'true,false,false': 'educationtype(B, F)', 'false,false,true': 'educationtype(B, I)', 'false': 'educationtype(A, G), educationtype(B, G)', 'false,false,false': 'educationtype(B, J)', 'false,false': 'educationtype(A, H)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [14.961, 468, 429], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [12.319, 305, 302]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(B, E), educationtype(A, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(A, H), educationtype(B, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationtype(A, E), educationtype(B, F)', 'true,false,false': 'educationtype(B, G)', 'false,false,true': 'educationtype(B, J)', 'false': 'educationtype(B, H), educationtype(A, H)', 'false,false,false': 'educationtype(B, K)', 'false,false': 'educationtype(A, I)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false,false,true': [13.918, 373, 403], 'true,true': [16.545, 545, 550], 'false,true': [14.903, 433, 456], 'false,false,true,true': [3.521, 55, 16], 'false,false,false,false': [12.49, 325, 300], 'false,false,true,false': [14.168, 378, 428], 'true,false,true': [4.259, 60, 26], 'false,false,false,true': [14.646, 430, 428], 'true,false,false,false': [18.828, 713, 705]}]]
[{'': [0.2499989245541426, 0.24999883952262159], 'false': [0.24983266293062317, 0.24998850904913328], 'true,false,false': [0.24962635508554656, 0.24999389332038047], 'false,false,true': [0.1745685379884938, 0.24903792277520687], 'true,false': [0.24952741020792882, 0.24990471529874553], 'false,false,false': [0.24999864160702323, 0.24960000000000238], 'false,false': [0.24996066979660478, 0.24991713230960075], 'true': [0.249994787431447, 0.24999307479225294]}, {'': [0.24993813040637192, 0.24946130606000314], 'true,false': [0.24952741020795222, 0.24987114685432174], 'true,false,false': [0.24962635508556935, 0.24999389332037839], 'false,false,true': [0.17456853798849395, 0.24903792277521922], 'false': [0.24983266293062056, 0.24926839936542453], 'false,false,false': [0.24999864160703458, 0.24959999999999735], 'false,false': [0.24811193854798375, 0.24989259150226695], 'true': [0.24999478743144762, 0.24990528038534632]}, {'': [0.24987875124495187, 0.24896043840547366], 'true,false': [0.21092482422931286, 0.2498956341009338], 'true,false,false': [0.2496263550855521, 0.2500003828699527], 'false,false,true': [0.17456853798849412, 0.24903792277521708], 'false': [0.2498326629306496, 0.24859773609286223], 'false,false,false': [0.24999864160703034, 0.249600000000005], 'false,false': [0.24639670822998194, 0.24986868343809807], 'true': [0.24999478743145012, 0.24981950986755766]}, {'': [0.24952937484442622, 0.24857389309943528], 'true,false': [0.21092482422931322, 0.24988175771991078], 'true,false,false': [0.24962635508556252, 0.25000296753854684], 'false,false,true': [0.174568537988495, 0.24903792277521286], 'false': [0.24983266293063636, 0.24807999453922813], 'false,false,false': [0.24999864160703306, 0.24960000000000082], 'false,false': [0.24506534833642438, 0.24985098314355783], 'true': [0.24999478743144962, 0.2493038412435351]}, {'': [0.24928369343709555, 0.24831730329933677], 'true,false': [0.2109248242293128, 0.24987556061208838], 'true,false,false': [0.24962635508555664, 0.2500050154192803], 'false,false,true': [0.17456853798849456, 0.24903792277521342], 'false': [0.24983266293063544, 0.2477359915991962], 'false,false,false': [0.24999864160702917, 0.24960000000000596], 'false,false': [0.24417166715192493, 0.24984043661810237], 'true': [0.24999478743145756, 0.24894105273297096]}, {'': [0.2491278509648189, 0.24816435505536902], 'true,false': [0.21092482422931338, 0.2498734950731053], 'true,false,false': [0.2496263550855542, 0.25000645010664724], 'false,false,true': [0.17456853798849375, 0.24903792277522074], 'false': [0.24983266293062698, 0.2475306516830671], 'false,false,false': [0.2499986416070359, 0.2495999999999959], 'false,false': [0.24363271423731345, 0.2498350544146632], 'true': [0.24999478743144618, 0.2487108740206609]}, {'': [0.24903551015617248, 0.2480794646975545], 'true,false': [0.21092482422931294, 0.24987305943672186], 'true,false,false': [0.24962635508555434, 0.2500073750902709], 'false,false,true': [0.17456853798849467, 0.24903792277521938], 'false': [0.2498326629306355, 0.24741650028326226], 'false,false,false': [0.24999864160703064, 0.24960000000000024], 'false,false': [0.24333078209937825, 0.24983256303946755], 'true': [0.24999478743145656, 0.24857447306578043]}, {'': [0.24898309874700178, 0.24803451017830927], 'true,false': [0.21092482422931288, 0.2498731031413662], 'true,false,false': [0.24962635508555173, 0.2500079412281422], 'false,false,true': [0.17456853798849412, 0.24903792277521505], 'false': [0.24983266293063502, 0.24735595522525816], 'false,false,false': [0.2499986416070255, 0.24960000000000354], 'false,false': [0.2431698668164366, 0.24983146871644873], 'true': [0.24999478743145195, 0.24849704926302282]}, {'': [0.2489541316661906, 0.24801148455669803], 'true,false': [0.2109248242293136, 0.2498732275146487], 'true,false,false': [0.2496263550855594, 0.2500082773162684], 'false,false,true': [0.17456853798849392, 0.24903792277521652], 'false': [0.24983266293062958, 0.24732490081764827], 'false,false,false': [0.24999864160703567, 0.24959999999999927], 'false,false': [0.24308710943878575, 0.2498309980282882], 'true': [0.2499947874314512, 0.24845425569485433]}, {'': [0.24893838609258337, 0.2480000103986261], 'true,false': [0.21092482422931352, 0.24987332938553483], 'true,false,false': [0.2496263550855604, 0.25000847355165634], 'false,false,true': [0.17456853798849484, 0.24903792277521067], 'false': [0.249832662930635, 0.2473094078649918], 'false,false,false': [0.24999864160702534, 0.24959999999999835], 'false,false': [0.24304575972754086, 0.24983079579802303], 'true': [0.24999478743145323, 0.2484309926095741]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '0;true,false;educationtype(A, E).;true;true', '0;true,false,false;educationtype(B, F).;true;true', '0;false,false,true;educationtype(B, I).;true;true', '0;false;educationtype(B, G), educationtype(A, G).;true;true', '0;false,false,false;educationtype(B, J).;true;true', '0;false,false;educationtype(A, H).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '1;true,false;educationtype(A, E).;true;true', '1;true,false,false;educationtype(B, F).;true;true', '1;false,false,true;educationtype(B, I).;true;true', '1;false;educationtype(A, G), educationtype(B, G).;true;true', '1;false,false,false;educationtype(B, J).;true;true', '1;false,false;educationtype(A, H).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '2;true,false;educationtype(A, E), educationtype(B, F).;true;true', '2;true,false,false;educationtype(B, G).;true;true', '2;false,false,true;educationtype(B, J).;true;true', '2;false;educationtype(B, H), educationtype(A, H).;true;true', '2;false,false,false;educationtype(B, K).;true;true', '2;false,false;educationtype(A, I).;true;true', '2;true;educationtype(B, D), educationtype(A, D).;true;true', '3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '3;true,false;educationtype(B, E), educationtype(A, F).;true;true', '3;true,false,false;educationtype(B, G).;true;true', '3;false,false,true;educationtype(B, J).;true;true', '3;false;educationtype(A, H), educationtype(B, H).;true;true', '3;false,false,false;educationtype(B, K).;true;true', '3;false,false;educationtype(A, I).;true;true', '3;true;educationtype(B, D), educationtype(A, D).;true;true', '4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '4;true,false;educationtype(A, E), educationtype(B, F).;true;true', '4;true,false,false;educationtype(B, G).;true;true', '4;false,false,true;educationtype(B, J).;true;true', '4;false;educationtype(A, H), educationtype(B, H).;true;true', '4;false,false,false;educationtype(B, K).;true;true', '4;false,false;educationtype(A, I).;true;true', '4;true;educationtype(B, D), educationtype(A, D).;true;true', '5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '5;true,false;educationtype(A, E), educationtype(B, F).;true;true', '5;true,false,false;educationtype(B, G).;true;true', '5;false,false,true;educationtype(B, J).;true;true', '5;false;educationtype(A, H), educationtype(B, H).;true;true', '5;false,false,false;educationtype(B, K).;true;true', '5;false,false;educationtype(A, I).;true;true', '5;true;educationtype(A, D), educationtype(B, D).;true;true', '6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '6;true,false;educationtype(A, E), educationtype(B, F).;true;true', '6;true,false,false;educationtype(B, G).;true;true', '6;false,false,true;educationtype(B, J).;true;true', '6;false;educationtype(B, H), educationtype(A, H).;true;true', '6;false,false,false;educationtype(B, K).;true;true', '6;false,false;educationtype(A, I).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '7;true,false;educationtype(B, E), educationtype(A, F).;true;true', '7;true,false,false;educationtype(B, G).;true;true', '7;false,false,true;educationtype(B, J).;true;true', '7;false;educationtype(A, H), educationtype(B, H).;true;true', '7;false,false,false;educationtype(B, K).;true;true', '7;false,false;educationtype(A, I).;true;true', '7;true;educationtype(B, D), educationtype(A, D).;true;true', '8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '8;true,false;educationtype(A, E), educationtype(B, F).;true;true', '8;true,false,false;educationtype(B, G).;true;true', '8;false,false,true;educationtype(B, J).;true;true', '8;false;educationtype(A, H), educationtype(B, H).;true;true', '8;false,false,false;educationtype(B, K).;true;true', '8;false,false;educationtype(A, I).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '9;true,false;educationtype(A, E), educationtype(B, F).;true;true', '9;true,false,false;educationtype(B, G).;true;true', '9;false,false,true;educationtype(B, J).;true;true', '9;false;educationtype(B, H), educationtype(A, H).;true;true', '9;false,false,false;educationtype(B, K).;true;true', '9;false,false;educationtype(A, I).;true;true', '9;true;educationtype(A, D), educationtype(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then return 0.4945125714631442;  // std dev = 0,481, 594,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=378 */
%   | | else return 0.20146230835300205;  // std dev = 0,475, 501,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=172 */
%   | else if ( educationtype(A, F) )
%   | | then return 0.336409804664725;  // std dev = 0,500, 897,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=429 */
%   | | else return 0.36791032338584145;  // std dev = 0,500, 1.383,000 (wgt'ed) examples reached here.  /* #neg=678 #pos=705 */
%   else if ( educationtype(B, G), educationtype(A, G) )
%   | then return 0.37108481811413074;  // std dev = 0,500, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.08350104777556872;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.3891663048265548;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.35698343393400644;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.3381489350995078;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.3096552159182139;  // std dev = 0,494, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E) )
%   | | then return 0.2903420413038387;  // std dev = 0,500, 897,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=429 */
%   | | else return 0.31698809107597625;  // std dev = 0,500, 1.383,000 (wgt'ed) examples reached here.  /* #neg=678 #pos=705 */
%   else if ( educationtype(A, F), educationtype(B, F) )
%   | then if ( educationschool(B, G), educationschool(A, G) )
%   | | then return 0.4336553091861532;  // std dev = 0,484, 520,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=326 */
%   | | else return 0.15903575529831293;  // std dev = 0,478, 369,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=130 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.0730294421202145;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.3349147756756395;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.30775584820313845;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.2918156270860231;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.25710002561455914;  // std dev = 0,493, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.06605721431365544;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.2724088777495938;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.25635070216364336;  // std dev = 18,829, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.2640627287080538;  // std dev = 0,494, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06335859422192762;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.2767382698485028;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.25564293764001816;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.24315142121867653;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.20670204787463556;  // std dev = 0,492, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.053930626343668825;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.21836192504055074;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.2064475910324086;  // std dev = 18,829, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.2117180741942347;  // std dev = 0,493, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.0545723384737647;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.2208165565940603;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.2055775083386976;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.1964426926375951;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.1621427555839969;  // std dev = 0,491, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.043726058600262525;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.17053277249735857;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.16212711226568471;  // std dev = 18,829, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.16556551547862153;  // std dev = 0,492, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.04670472950234825;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.17170826709116524;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.16124175133850874;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.15490211061494352;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.12505057487845248;  // std dev = 0,491, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.035254573652136974;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.13087176144490062;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.12510444379206484;  // std dev = 18,829, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.1273119425137662;  // std dev = 0,492, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03974848838056776;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.13130310795535127;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.12429678236256528;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.12004033477981821;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.09540586682287444;  // std dev = 0,491, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.028297288059541834;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.09936713230562289;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.09544548816471198;  // std dev = 18,830, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.0968798351826571;  // std dev = 0,492, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.033665086837223024;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.09942388426769357;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.09475647013079562;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.09194584337439973;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.0723134168424659;  // std dev = 0,491, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(B, E), educationtype(A, F) )
%   | | then return 0.022632068892999554;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.07498805878032114;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.07231098988231772;  // std dev = 18,830, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.07327411633659793;  // std dev = 0,492, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.028394708055954225;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.07488648723214343;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.07174728715216376;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.06990025076684588;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.0546004936254995;  // std dev = 0,491, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.018049846631575706;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.05640448967924707;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.054556312184491;  // std dev = 18,830, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(A, H), educationtype(B, H) )
%   | then return 0.055232022211202214;  // std dev = 0,492, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.02386498070767678;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.056256486659579046;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05410717952566539;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.05289015892593955;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.041135777436805826;  // std dev = 0,491, 1.095,000 (wgt'ed) examples reached here.  /* #neg=545 #pos=550 */
%   | else if ( educationtype(A, E), educationtype(B, F) )
%   | | then return 0.01436311467294702;  // std dev = 0,459, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( educationtype(B, G) )
%   | | | then return 0.04235524182028866;  // std dev = 13,918, 776,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=403 */
%   | | | else return 0.04106070907530478;  // std dev = 18,830, 1.418,000 (wgt'ed) examples reached here.  /* #neg=713 #pos=705 */
%   else if ( educationtype(B, H), educationtype(A, H) )
%   | then return 0.041556479729446344;  // std dev = 0,492, 889,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=456 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.019997977332815477;  // std dev = 3,521, 71,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.04221196360052301;  // std dev = 14,168, 806,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=428 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.040708884791933554;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=428 */
%   | | | else return 0.039901577765126164;  // std dev = 12,490, 625,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=300 */


Results
   AUC ROC   = 0.650029
   AUC PR    = 0.613919
   CLL	      = -0.680336
   Precision = 0.66557 at threshold = 0.5
   Recall    = 0.437122
   F1        = 0.527682


Total learning time: 69.202 seconds
Total inference time: 3.825 seconds
AUC ROC: 0.650029


Refined model AUC ROC: 0.650029


Dataset: 48_twitter_facebook, Fold: 3, Type: transfer, Time: 04:07:55
{'Learning time': 140.953, 'AUC PR': 0.613919, 'F1': 0.527682, 'AUC ROC': 0.650029, 'CLL': -0.680336, 'Inference time': 3.825, 'Mapping results': {'Generating mappings time': 0.5018520355224609, 'Generating paths time': 3.5704240798950195, 'Finding best mapping': 1.430511474609375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.11065673828125, 'Max mapping': 24389, 'Total time': 4.18294358253479}, 'Parameter Learning results': {'Learning time': 71.751, 'AUC PR': 0.483201, 'F1': nan, 'AUC ROC': 0.486615, 'CLL': -0.694354, 'Inference time': 4.319, 'Precision': [nan, 0.5], 'Recall': 0.0}, 'Precision': [0.66557, 0.5], 'Recall': 0.437122}


Start learning from scratch in target domain

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then return 0.6843784432962298;  // std dev = 0,379, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   else if ( educationschool(B, D), educationschool(A, D) )
%   | then if ( hometown(B, E), locale(A, F) )
%   | | then if ( locale(B, G), educationyear(B, H) )
%   | | | then return 0.48693681388738747;  // std dev = 7,850, 264,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=166 */
%   | | | else return 0.6739384087837235;  // std dev = 4,139, 114,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=93 */
%   | | else if ( birthday(B, I), locale(B, J) )
%   | | | then return 0.48052655747713097;  // std dev = 8,199, 286,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=178 */
%   | | | else return 0.2979079712440869;  // std dev = 9,044, 332,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=146 */
%   | else if ( educationschool(A, K), educationtype(B, L) )
%   | | then if ( birthday(B, M), birthday(A, M) )
%   | | | then return 0.3636434405940186;  // std dev = 4,769, 91,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=46 */
%   | | | else return 0.14216478714706568;  // std dev = 12,407, 757,000 (wgt'ed) examples reached here.  /* #neg=542 #pos=215 */
%   | | else if ( lastname(B, N), gender(A, P) )
%   | | | then return 0.23976453398530212;  // std dev = 9,204, 359,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=137 */
%   | | | else return 0.3632509759158338;  // std dev = 32,076, 4.116,000 (wgt'ed) examples reached here.  /* #neg=2.037 #pos=2.079 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( hometown(B, C), location(B, D) )
%   then if ( birthday(B, E) )
%   | then if ( educationconcentration(B, F) )
%   | | then return 0.5679904721065279;  // std dev = 0,388, 54,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   | | else if ( gender(A, G), gender(B, G) )
%   | | | then return 0.2958870872626348;  // std dev = 5,169, 109,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=53 */
%   | | | else return -0.006178015678571046;  // std dev = 2,970, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | else return 0.46539410605741427;  // std dev = 0,462, 801,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=537 */
%   else if ( educationyear(B, H), location(B, I) )
%   | then return 0.1443720596670531;  // std dev = 0,466, 381,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=125 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( educationwith(B, K), birthday(B, L) )
%   | | | then return 0.5885389613000371;  // std dev = 3,363, 75,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | | | else return 0.3710385028133629;  // std dev = 12,025, 603,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=347 */
%   | | else if ( educationschool(A, M), educationtype(B, N) )
%   | | | then return 0.16850983005358738;  // std dev = 11,640, 613,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=204 */
%   | | | else return 0.3001790033473238;  // std dev = 31,301, 3.928,000 (wgt'ed) examples reached here.  /* #neg=1.998 #pos=1.930 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then return 0.4843011081597277;  // std dev = 0,376, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   else if ( educationschool(B, D), educationschool(A, D) )
%   | then if ( hometown(B, E), locale(A, F) )
%   | | then if ( educationyear(B, G), locale(B, F) )
%   | | | then return 0.2889624508333174;  // std dev = 5,646, 132,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=76 */
%   | | | else return 0.4387358895338278;  // std dev = 6,752, 246,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=183 */
%   | | else if ( birthday(B, H), locale(B, I) )
%   | | | then return 0.34074982169904067;  // std dev = 8,169, 286,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=178 */
%   | | | else return 0.20402756702740046;  // std dev = 9,013, 332,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=146 */
%   | else if ( educationtype(B, J), educationschool(A, K) )
%   | | then if ( educationwith(B, L), gender(A, M) )
%   | | | then return 0.3334779572220051;  // std dev = 4,162, 69,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   | | | else return 0.0963495155393982;  // std dev = 12,582, 779,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=224 */
%   | | else if ( firstname(B, N) )
%   | | | then return 0.34427682186746833;  // std dev = 10,418, 449,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=264 */
%   | | | else return 0.24260630756671298;  // std dev = 31,615, 4.026,000 (wgt'ed) examples reached here.  /* #neg=2.074 #pos=1.952 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, C) )
%   | then return 0.7372382429087899;  // std dev = 0,105, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( educationtype(B, E) )
%   | | then return -0.08331114419088416;  // std dev = 0,376, 163,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
%   | | else if ( hometown(B, F), gender(B, D) )
%   | | | then return 0.23447562309963743;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.08114228976630342;  // std dev = 7,139, 225,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=78 */
%   else if ( hometown(B, G), location(B, H) )
%   | then return 0.29715837919757343;  // std dev = 0,454, 974,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=635 */
%   | else if ( educationyear(B, I), location(B, J) )
%   | | then if ( educationconcentration(B, K) )
%   | | | then return 0.4679076871741897;  // std dev = 2,950, 45,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return 0.0338876270090932;  // std dev = 8,084, 336,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=92 */
%   | | else if ( educationschool(A, L), educationschool(B, L) )
%   | | | then return 0.27212625513715016;  // std dev = 12,035, 643,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=400 */
%   | | | else return 0.19666753789052024;  // std dev = 32,054, 4.170,000 (wgt'ed) examples reached here.  /* #neg=2.171 #pos=1.999 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( firstname(B, C) )
%   then if ( location(B, D), educationtype(B, E) )
%   | then return 0.30554137310350427;  // std dev = 0,425, 267,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=196 */
%   | else if ( educationtype(B, F), locale(A, G) )
%   | | then return -0.023404541485376386;  // std dev = 0,431, 92,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | else if ( gender(B, H) )
%   | | | then return 0.20312254576161928;  // std dev = 8,703, 308,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=172 */
%   | | | else return 0.4093607722926607;  // std dev = 3,029, 51,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=39 */
%   else if ( lastname(B, I), gender(A, J) )
%   | then if ( lastname(A, K) )
%   | | then return 0.283895496177883;  // std dev = 0,427, 51,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | | else return 0.027359236932551843;  // std dev = 0,451, 405,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=121 */
%   | else if ( educationconcentration(B, L), educationyear(B, M) )
%   | | then return 0.2865164279964136;  // std dev = 0,445, 248,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=176 */
%   | | else if ( birthday(B, N), location(B, P) )
%   | | | then return 0.050194012228667366;  // std dev = 9,990, 459,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=168 */
%   | | | else return 0.1631750117901476;  // std dev = 33,734, 4.743,000 (wgt'ed) examples reached here.  /* #neg=2.360 #pos=2.383 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationyear(B, C), workemployer(B, D) )
%   then return -0.32696498803214985;  // std dev = 0,300, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   else if ( educationwith(B, E), educationschool(A, F) )
%   | then if ( workenddate(A, G), location(A, H) )
%   | | then if ( educationclasses(B, I), educationyear(A, J) )
%   | | | then return 0.41527936187398573;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1515735065509262;  // std dev = 1,665, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( educationschool(B, F) )
%   | | | then return 0.32105923701467354;  // std dev = 4,060, 154,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=135 */
%   | | | else return 0.1611777817507702;  // std dev = 4,513, 79,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=41 */
%   | else if ( educationtype(B, K), lastname(B, L) )
%   | | then if ( lastname(A, L) )
%   | | | then return 0.5105504910294268;  // std dev = 0,139, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.06763230886869556;  // std dev = 5,098, 174,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=34 */
%   | | else if ( gender(B, M), gender(A, M) )
%   | | | then return 0.14662750189498278;  // std dev = 26,352, 2.949,000 (wgt'ed) examples reached here.  /* #neg=1.409 #pos=1.540 */
%   | | | else return 0.10518901345173855;  // std dev = 27,531, 3.211,000 (wgt'ed) examples reached here.  /* #neg=1.671 #pos=1.540 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then return 0.1977809420310446;  // std dev = 0,372, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   else if ( workstartdate(B, D), gender(A, E) )
%   | then if ( workenddate(B, F), locale(B, G) )
%   | | then if ( educationschool(B, H), gender(B, I) )
%   | | | then return 0.1809567034281711;  // std dev = 6,700, 198,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=114 */
%   | | | else return -0.0603369044417946;  // std dev = 4,652, 116,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | else if ( languages(B, J), locale(A, K) )
%   | | | then return 0.05067579142159736;  // std dev = 2,559, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return -0.2424985445500071;  // std dev = 2,599, 80,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=8 */
%   | else if ( educationyear(B, L), educationconcentration(B, M) )
%   | | then if ( worklocation(B, N), educationtype(A, P) )
%   | | | then return 0.36431373867369177;  // std dev = 1,273, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.137882207139843;  // std dev = 7,482, 252,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=153 */
%   | | else if ( lastname(B, Q), lastname(A, Q) )
%   | | | then return 0.4450334522133337;  // std dev = 0,181, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.08940482402086512;  // std dev = 36,495, 5.598,000 (wgt'ed) examples reached here.  /* #neg=2.901 #pos=2.697 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( lastname(A, C) )
%   | then return 0.3407897949423601;  // std dev = 0,173, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( location(B, E), educationtype(B, F) )
%   | | then return -0.14361128509850854;  // std dev = 0,313, 66,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=8 */
%   | | else return 0.014614841707227664;  // std dev = 0,463, 366,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=121 */
%   else if ( educationschool(B, G), educationschool(A, G) )
%   | then if ( educationwith(B, H), birthday(A, I) )
%   | | then return 0.23863236536600774;  // std dev = 0,283, 77,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | | else if ( firstname(A, J), birthday(B, K) )
%   | | | then return 0.24525532699834582;  // std dev = 3,386, 66,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=52 */
%   | | | else return 0.09082176202922697;  // std dev = 14,385, 960,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=579 */
%   | else if ( educationyear(B, L), educationschool(A, M) )
%   | | then return -0.03383127936306416;  // std dev = 0,429, 403,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=112 */
%   | | else if ( educationtype(B, N), educationclasses(A, P) )
%   | | | then return -0.1726162313982724;  // std dev = 2,327, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.08053543744120965;  // std dev = 33,422, 4.622,000 (wgt'ed) examples reached here.  /* #neg=2.282 #pos=2.340 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( hometown(B, C), location(B, D) )
%   then if ( birthday(B, E) )
%   | then return 0.004850313359132412;  // std dev = 0,449, 223,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=108 */
%   | else return 0.12991538474496298;  // std dev = 0,432, 801,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=537 */
%   else if ( location(B, F), firstname(B, G) )
%   | then if ( educationyear(B, H) )
%   | | then if ( educationyear(A, I), location(A, J) )
%   | | | then return 0.24270131105770712;  // std dev = 1,175, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.11393650581590377;  // std dev = 2,377, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else return 0.2060583643652177;  // std dev = 0,430, 143,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=109 */
%   | else if ( location(B, K), gender(A, L) )
%   | | then if ( workemployer(A, M), location(A, K) )
%   | | | then return 0.3524409750205765;  // std dev = 2,151, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return -0.011247919700303245;  // std dev = 15,843, 1.115,000 (wgt'ed) examples reached here.  /* #neg=686 #pos=429 */
%   | | else if ( educationtype(B, N), firstname(B, P) )
%   | | | then return -0.07843745771656771;  // std dev = 4,111, 94,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.057311352556795724;  // std dev = 31,589, 4.186,000 (wgt'ed) examples reached here.  /* #neg=2.115 #pos=2.071 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( hometown(B, C), location(B, D) )
%   then if ( educationtype(B, E) )
%   | then if ( location(A, F), birthday(B, G) )
%   | | then if ( firstname(A, H), educationyear(A, I) )
%   | | | then return 0.3117240658631537;  // std dev = 0,936, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.1044802382339405;  // std dev = 3,903, 83,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   | | else return 0.08233542600193094;  // std dev = 0,435, 876,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=562 */
%   | else return 0.2599056253114669;  // std dev = 0,400, 55,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=44 */
%   else if ( workenddate(B, J), firstname(A, K) )
%   | then return -0.1415673431580411;  // std dev = 0,427, 70,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | else if ( educationschool(B, L), birthday(B, M) )
%   | | then if ( gender(B, N), locale(B, P) )
%   | | | then return 0.09244036291373366;  // std dev = 16,064, 1.129,000 (wgt'ed) examples reached here.  /* #neg=490 #pos=639 */
%   | | | else return -0.06855415801931893;  // std dev = 4,941, 136,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=54 */
%   | | else if ( educationtype(B, Q) )
%   | | | then return -0.014418242885106746;  // std dev = 17,851, 1.471,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=562 */
%   | | | else return 0.046853126510573495;  // std dev = 26,190, 2.794,000 (wgt'ed) examples reached here.  /* #neg=1.405 #pos=1.389 */


Results
   AUC ROC   = 0.589509
   AUC PR    = 0.580882
   CLL	      = -0.704403
   Precision = 0.630605 at threshold = 0.5
   Recall    = 0.235523
   F1        = 0.342956


Total learning time: 143.815 seconds
Total inference time: 4.999 seconds
AUC ROC: 0.589509


Dataset: 48_twitter_facebook, Fold: 3, Type: scratch, Time: 04:10:25
{'Learning time': 143.815, 'AUC PR': 0.580882, 'F1': 0.342956, 'AUC ROC': 0.589509, 'CLL': -0.704403, 'Inference time': 4.999, 'Precision': [0.630605, 0.5], 'Recall': 0.235523}


Starting fold 4

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.03624916076660156
   Generating paths time   = 2.4587714672088623
   Generating mappings time   = 0.31635022163391113
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.430511474609375e-06
   Total time   = 2.811380386352539


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> workstartdate(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;workstartdate(A, E).;false;true
0;true,false,false;workstartdate(B, F).;false;false
0;false,false,true;workstartdate(B, I).;false;false
0;false;workstartdate(B, G), workstartdate(A, G).;false;true
0;false,false,false;workstartdate(B, J).;false;false
0;false,false;workstartdate(A, H).;true;true
0;true;workstartdate(A, D), workstartdate(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;workstartdate(A, E).;false;true
1;true,false,false;workstartdate(B, F).;false;false
1;false,false,true;workstartdate(B, I).;false;false
1;false;workstartdate(A, G), workstartdate(B, G).;false;true
1;false,false,false;workstartdate(B, J).;false;false
1;false,false;workstartdate(A, H).;true;true
1;true;workstartdate(B, D), workstartdate(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
2;true,false,false;workstartdate(B, G).;false;false
2;false,false,true;workstartdate(B, J).;false;false
2;false;workstartdate(B, H), workstartdate(A, H).;false;true
2;false,false,false;workstartdate(B, K).;false;false
2;false,false;workstartdate(A, I).;true;true
2;true;workstartdate(B, D), workstartdate(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
3;true,false,false;workstartdate(B, G).;false;false
3;false,false,true;workstartdate(B, J).;false;false
3;false;workstartdate(A, H), workstartdate(B, H).;false;true
3;false,false,false;workstartdate(B, K).;false;false
3;false,false;workstartdate(A, I).;true;true
3;true;workstartdate(B, D), workstartdate(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
4;true,false,false;workstartdate(B, G).;false;false
4;false,false,true;workstartdate(B, J).;false;false
4;false;workstartdate(A, H), workstartdate(B, H).;false;true
4;false,false,false;workstartdate(B, K).;false;false
4;false,false;workstartdate(A, I).;true;true
4;true;workstartdate(B, D), workstartdate(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
5;true,false,false;workstartdate(B, G).;false;false
5;false,false,true;workstartdate(B, J).;false;false
5;false;workstartdate(A, H), workstartdate(B, H).;false;true
5;false,false,false;workstartdate(B, K).;false;false
5;false,false;workstartdate(A, I).;true;true
5;true;workstartdate(A, D), workstartdate(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
6;true,false,false;workstartdate(B, G).;false;false
6;false,false,true;workstartdate(B, J).;false;false
6;false;workstartdate(B, H), workstartdate(A, H).;false;true
6;false,false,false;workstartdate(B, K).;false;false
6;false,false;workstartdate(A, I).;true;true
6;true;workstartdate(A, D), workstartdate(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;workstartdate(B, E), workstartdate(A, F).;false;true
7;true,false,false;workstartdate(B, G).;false;false
7;false,false,true;workstartdate(B, J).;false;false
7;false;workstartdate(A, H), workstartdate(B, H).;false;true
7;false,false,false;workstartdate(B, K).;false;false
7;false,false;workstartdate(A, I).;true;true
7;true;workstartdate(B, D), workstartdate(A, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
8;true,false,false;workstartdate(B, G).;false;false
8;false,false,true;workstartdate(B, J).;false;false
8;false;workstartdate(A, H), workstartdate(B, H).;false;true
8;false,false,false;workstartdate(B, K).;false;false
8;false,false;workstartdate(A, I).;true;true
8;true;workstartdate(A, D), workstartdate(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;workstartdate(A, E), workstartdate(B, F).;false;true
9;true,false,false;workstartdate(B, G).;false;false
9;false,false,true;workstartdate(B, J).;false;false
9;false;workstartdate(B, H), workstartdate(A, H).;false;true
9;false,false,false;workstartdate(B, K).;false;false
9;false,false;workstartdate(A, I).;true;true
9;true;workstartdate(A, D), workstartdate(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(B, G), workstartdate(A, G) )
%   | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.31163730719253474;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.20328167846234313;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3707843141608795;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( workstartdate(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( workstartdate(A, G), workstartdate(B, G) )
%   | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, H) )
%   | | then if ( workstartdate(B, I) )
%   | | | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.2693207666359965;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, J) )
%   | | | then return 0.1766919687929083;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.3194144601811975;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.2192721473492705;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.22538327437598277;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.15047529101699852;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2647274309620466;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18329834068531892;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.12579863076005549;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.2121681176147618;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14567465119319037;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.10350066688161849;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.16578340244836537;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.11159559999632969;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.11380054224247269;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.0840313245760623;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.127337790686589;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.08637026299843623;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08782929277813077;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.06749717972007446;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.0967735496209268;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(B, E), workstartdate(A, F) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.06628370899125427;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06722722400564961;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.05375937131738323;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.07309089181843874;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(A, H), workstartdate(B, H) )
%   | then return 0.05057564362187433;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.05117339744830586;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.04253623713021117;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.05501347412557899;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workstartdate(A, E), workstartdate(B, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( workstartdate(B, H), workstartdate(A, H) )
%   | then return 0.038438849075129386;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( workstartdate(A, I) )
%   | | then if ( workstartdate(B, J) )
%   | | | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.03880925454513463;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | else if ( workstartdate(B, K) )
%   | | | then return 0.03348509992607587;  // std dev = 5,054, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return 0.04133045510283158;  // std dev = 14,409, 831,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=426 */


Results
   AUC ROC   = 0.514203
   AUC PR    = 0.533901
   CLL	      = -0.703391
   Precision = 0.81198 at threshold = 0.5
   Recall    = 0.040572
   F1        = 0.077282


Total learning time: 13.15 seconds
Total inference time: 5.708 seconds
AUC ROC: 0.514203


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(B, G), workstartdate(A, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E)', 'true,false,false': 'workstartdate(B, F)', 'false,false,true': 'workstartdate(B, I)', 'false': 'workstartdate(A, G), workstartdate(B, G)', 'false,false,false': 'workstartdate(B, J)', 'false,false': 'workstartdate(A, H)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [2.98e-08, 0, 10], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.98e-08, 0, 8]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [4.21e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [2.11e-08, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(B, E), workstartdate(A, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(B, D), workstartdate(A, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(A, H), workstartdate(B, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'workstartdate(A, E), workstartdate(B, F)', 'true,false,false': 'workstartdate(B, G)', 'false,false,true': 'workstartdate(B, J)', 'false': 'workstartdate(B, H), workstartdate(A, H)', 'false,false,false': 'workstartdate(B, K)', 'false,false': 'workstartdate(A, I)', 'true': 'workstartdate(A, D), workstartdate(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 0, 2], 'false,true': [1.491, 5, 4], 'false,false,true,true': [1.897, 9, 6], 'false,false,false,false': [14.409, 405, 426], 'false,false,true,false': [4.617, 47, 39], 'true,false,true': [0.0, 0, 4], 'false,false,false,true': [5.054, 74, 39], 'true,false,false,false': [0.0, 0, 14]}]]
[{'': [8.198570028001156e-16, 0.24984787328654107], 'false': [0.2469135802469134, 0.2498569171951113], 'true,false,false': [-1.4802973661668753e-16, -2.220446049250313e-16], 'false,false,true': [0.24000000000000007, 0.2478366684694443], 'true,false': [-8.881784197001253e-17, -2.5376526277146434e-16], 'false,false,false': [0.22601613282167884, 0.24984034719596596], 'false,false': [0.24703460445054465, 0.24994501400458694], 'true': [0.0, -1.4802973661668753e-16]}, {'': [-2.049642507000289e-16, 0.2490537134169054], 'false': [0.24691358024691354, 0.24906054778809908], 'true,false,false': [7.401486830834377e-17, 1.1102230246251565e-16], 'false,false,true': [0.2400000000000002, 0.24783666846944397], 'true,false': [8.881784197001253e-17, 1.9032394707859825e-16], 'false,false,false': [0.22601613282167818, 0.2498403471959809], 'false,false': [0.24693561030392105, 0.24913495569564448], 'true': [0.0, 7.401486830834377e-17]}, {'': [-3.416070845000482e-16, 0.24829641550673265], 'false': [0.24691358024691365, 0.24830125538627923], 'true,false,false': [-7.401486830834377e-17, -2.5376526277146434e-16], 'false,false,true': [0.2399999999999999, 0.2478366684694436], 'true,false': [0.0, -1.7763568394002506e-16], 'false,false,false': [0.2260161328216773, 0.24984034719597015], 'false,false': [0.24684141879858895, 0.24836401928314653], 'true': [0.0, -2.590520390792032e-16]}, {'': [-6.832141690000964e-17, 0.247718900150715], 'false': [0.2469135802469136, 0.24772210355630495], 'true,false,false': [7.401486830834377e-17, 1.2688263138573217e-16], 'false,false,true': [0.23999999999999988, 0.24783666846944252], 'true,false': [0.0, 1.1102230246251565e-16], 'false,false,false': [0.2260161328216772, 0.24984034719598452], 'false,false': [0.24676912396945397, 0.24777456880851043], 'true': [0.0, 1.4802973661668753e-16]}, {'': [1.708035422500241e-17, 0.24735131193734572], 'false': [0.2469135802469136, 0.24735331595587934], 'true,false,false': [-3.700743415417188e-17, -3.172065784643304e-17], 'false,false,true': [0.23999999999999988, 0.24783666846944286], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167848, 0.24984034719597975], 'false,false': [0.24672262599945718, 0.24739727027824354], 'true': [0.0, -3.700743415417188e-17]}, {'': [-8.540177112501205e-18, 0.24714701070999995], 'false': [0.2469135802469136, 0.24714824167944255], 'true,false,false': [9.25185853854297e-18, 3.172065784643304e-17], 'false,false,true': [0.24000000000000007, 0.2478366684694432], 'true,false': [0.0, 3.3306690738754695e-17], 'false,false,false': [0.22601613282167773, 0.24984034719597314], 'false,false': [0.24669658117682075, 0.24718613256012645], 'true': [0.0, 3.700743415417188e-17]}, {'': [1.708035422500241e-17, 0.24704385923665362], 'false': [0.2469135802469136, 0.24704464861561853], 'true,false,false': [-9.25185853854297e-18, -3.172065784643304e-17], 'false,false,true': [0.23999999999999996, 0.24783666846944277], 'true,false': [0.0, -2.2204460492503132e-17], 'false,false,false': [0.22601613282167762, 0.24984034719597487], 'false,false': [0.24668343241823093, 0.24707882506405376], 'true': [0.0, -2.7755575615628914e-17]}, {'': [-3.416070845000482e-17, 0.2469951568299833], 'false': [0.2469135802469136, 0.24699571833332412], 'true,false,false': [4.625929269271485e-18, 0.0], 'false,false,true': [0.23999999999999988, 0.24783666846944313], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167726, 0.2498403471959789], 'false,false': [0.24667729069983724, 0.24702788723139185], 'true': [0.0, 9.25185853854297e-18]}, {'': [-4.270088556250602e-18, 0.24697327025620003], 'false': [0.2469135802469136, 0.2469737237545382], 'true,false,false': [-4.625929269271485e-18, -1.9825411154020653e-17], 'false,false,true': [0.23999999999999985, 0.24783666846944233], 'true,false': [0.0, -2.7755575615628915e-18], 'false,false,false': [0.22601613282167798, 0.24984034719597234], 'false,false': [0.24667459264007158, 0.24700491282771714], 'true': [0.0, -4.625929269271485e-18]}, {'': [0.0, 0.24696383480224765], 'false': [0.2469135802469136, 0.24696424096503186], 'true,false,false': [0.0, 0.0], 'false,false,true': [0.23999999999999996, 0.24783666846944266], 'true,false': [0.0, 0.0], 'false,false,false': [0.22601613282167723, 0.2498403471959765], 'false,false': [0.24667347076552734, 0.24699499373270095], 'true': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;workstartdate(A, E).;true;true', '0;true,false,false;workstartdate(B, F).;true;true', '0;true;workstartdate(A, D), workstartdate(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;workstartdate(A, E).;true;true', '1;true,false,false;workstartdate(B, F).;true;true', '1;true;workstartdate(B, D), workstartdate(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '2;true,false,false;workstartdate(B, G).;true;true', '2;true;workstartdate(B, D), workstartdate(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '3;true,false,false;workstartdate(B, G).;true;true', '3;true;workstartdate(B, D), workstartdate(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '4;true,false,false;workstartdate(B, G).;true;true', '4;true;workstartdate(B, D), workstartdate(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '5;true,false,false;workstartdate(B, G).;true;true', '5;true;workstartdate(A, D), workstartdate(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '6;true,false,false;workstartdate(B, G).;true;true', '6;true;workstartdate(A, D), workstartdate(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;workstartdate(B, E), workstartdate(A, F).;true;true', '7;true,false,false;workstartdate(B, G).;true;true', '7;true;workstartdate(B, D), workstartdate(A, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '8;true,false,false;workstartdate(B, G).;true;true', '8;true;workstartdate(A, D), workstartdate(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;workstartdate(A, E), workstartdate(B, F).;true;true', '9;true,false,false;workstartdate(B, G).;true;true', '9;true;workstartdate(A, D), workstartdate(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 2,11e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( worklocation(A, G), workstartdate(B, H) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( educationtype(A, I), educationtype(B, I) )
%   | | | then return -0.12669954974897252;  // std dev = 0,992, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.09102564742827948;  // std dev = 3,611, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( educationyear(B, K), location(B, L) )
%   | | | then return 0.39148226843284567;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.7223464659637094;  // std dev = 3,083, 81,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=70 */
%   | | else if ( educationtype(B, M), educationtype(A, N) )
%   | | | then return 0.16895974591032312;  // std dev = 5,631, 148,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.41029617436331206;  // std dev = 12,698, 652,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=360 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.7194734122109543;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( worklocation(A, D) )
%   | | then if ( languages(A, F) )
%   | | | then return 0.816838979808357;  // std dev = 0,107, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.527892752769396;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( languages(B, G), educationtype(A, H) )
%   | | | then return -0.13771959436620637;  // std dev = 0,094, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.022280994243389002;  // std dev = 3,581, 85,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | else if ( workemployer(B, I), locale(A, J) )
%   | | then if ( educationdegree(A, K) )
%   | | | then return 0.5308235083912951;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03507580534466622;  // std dev = 2,424, 65,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
%   | | else if ( workemployer(A, L), educationtype(B, M) )
%   | | | then return -0.09970126575751655;  // std dev = 1,249, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.37561014716492946;  // std dev = 14,124, 830,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=478 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( worklocation(A, G), workstartdate(B, H) )
%   | | then return 0.6154459129120434;  // std dev = 0,141, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( educationtype(A, I), educationtype(B, I) )
%   | | | then return -0.1073853884383135;  // std dev = 0,921, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.0797514170445828;  // std dev = 3,588, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( hometown(B, J) )
%   | | then if ( educationconcentration(B, K) )
%   | | | then return 0.09149860377225155;  // std dev = 3,012, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.5170254741720867;  // std dev = 4,579, 138,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=108 */
%   | | else if ( birthday(B, L), locale(B, M) )
%   | | | then return 0.4024174068679663;  // std dev = 4,566, 101,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=67 */
%   | | | else return 0.2213042237644593;  // std dev = 12,354, 631,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=303 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), locale(A, E) )
%   | then if ( educationschool(A, F) )
%   | | then if ( educationdegree(A, G) )
%   | | | then return 0.4833504486055841;  // std dev = 0,738, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11063994550716515;  // std dev = 0,076, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( educationconcentration(B, H), locale(B, E) )
%   | | | then return 0.5101048629201579;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0362966864556287;  // std dev = 3,266, 74,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | else if ( hometown(B, I), educationwith(B, J) )
%   | | then if ( educationyear(A, K) )
%   | | | then return 0.39471104575812754;  // std dev = 1,070, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.5702066344312922;  // std dev = 0,986, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else if ( birthday(B, L), educationschool(B, M) )
%   | | | then return 0.36227194544679586;  // std dev = 4,092, 91,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=65 */
%   | | | else return 0.18947336509902268;  // std dev = 13,574, 777,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=387 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( workstartdate(A, F), educationyear(A, G) )
%   | | then if ( educationschool(B, H) )
%   | | | then return -0.045446651113746905;  // std dev = 0,596, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4562010409143769;  // std dev = 1,187, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( workemployer(B, I) )
%   | | | then return -0.002860289802887788;  // std dev = 2,771, 72,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=10 */
%   | | | else return -0.17376586561191018;  // std dev = 1,725, 43,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | else if ( educationdegree(B, J) )
%   | | then if ( educationschool(A, K), educationschool(B, K) )
%   | | | then return 0.24494384049016174;  // std dev = 1,147, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.15768114805355982;  // std dev = 1,375, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | else if ( workstartdate(A, L), educationyear(A, M) )
%   | | | then return -0.04864085370713033;  // std dev = 2,710, 39,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.1960363842558471;  // std dev = 13,692, 845,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=473 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(A, D), workstartdate(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( hometown(B, E), hometown(A, E) )
%   | then if ( educationconcentration(B, F), location(B, G) )
%   | | then return 6.046207440476755E-4;  // std dev = 0,840, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( educationyear(A, H), location(A, I) )
%   | | | then return 0.23786173889036327;  // std dev = 1,165, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4554297793621806;  // std dev = 1,007, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( birthday(B, J), educationconcentration(B, K) )
%   | | then if ( educationyear(A, L), educationschool(A, M) )
%   | | | then return 0.2401513606155034;  // std dev = 1,098, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.43048401213119925;  // std dev = 1,366, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( educationyear(B, N), locale(A, P) )
%   | | | then return 0.01451611790914676;  // std dev = 7,145, 309,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=102 */
%   | | | else return 0.13185655726143639;  // std dev = 12,323, 673,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=349 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.2097577156325355;  // std dev = 4,56e-09, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( workemployer(B, D), educationschool(A, E) )
%   | then if ( educationschool(B, E) )
%   | | then if ( educationyear(A, F) )
%   | | | then return -0.11552884262666806;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16279433178066016;  // std dev = 0,825, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( languages(B, G) )
%   | | | then return -0.10098402346062384;  // std dev = 0,064, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11595963779198533;  // std dev = 0,096, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( hometown(B, H) )
%   | | then if ( languages(A, I), educationtype(B, J) )
%   | | | then return -0.11095367275565898;  // std dev = 1,821, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2358628024772038;  // std dev = 4,835, 157,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=115 */
%   | | else if ( educationschool(A, K), educationschool(B, K) )
%   | | | then return 0.2242986094359167;  // std dev = 3,195, 62,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | | | else return 0.06602780268456179;  // std dev = 12,970, 750,000 (wgt'ed) examples reached here.  /* #neg=406 #pos=344 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( workstartdate(B, D), workstartdate(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( languages(B, E), educationconcentration(B, F) )
%   | then if ( birthday(A, G), hometown(B, H) )
%   | | then return -0.4386545570869403;  // std dev = 0,135, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( educationyear(A, I) )
%   | | | then return -0.03178213045300321;  // std dev = 1,132, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.2675397935062895;  // std dev = 0,951, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( hometown(B, J) )
%   | | then if ( workemployer(A, K) )
%   | | | then return -0.30263740423375024;  // std dev = 0,149, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.21271491512479856;  // std dev = 4,585, 154,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=119 */
%   | | else if ( educationyear(B, L), location(A, M) )
%   | | | then return -0.11985687595550894;  // std dev = 2,274, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.0646394504405219;  // std dev = 13,154, 809,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=380 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.1527438580936709;  // std dev = 5,89e-09, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( birthday(B, D), educationconcentration(B, E) )
%   | then if ( educationyear(A, F), educationschool(A, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.41141946402780977;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018756399080789056;  // std dev = 0,939, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13054691028029983;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.32663275476386255;  // std dev = 0,990, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( educationclasses(B, J), hometown(B, K) )
%   | | then if ( educationyear(B, L), educationyear(A, M) )
%   | | | then return 0.08158873548093225;  // std dev = 0,876, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2540752553718016;  // std dev = 0,983, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( educationyear(B, N), locale(A, P) )
%   | | | then return -0.024740588743667198;  // std dev = 6,843, 302,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=95 */
%   | | | else return 0.06288716336813788;  // std dev = 12,260, 676,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=350 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.13400703000801117;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( hometown(B, D), location(B, E) )
%   | then if ( languages(A, F), educationyear(B, G) )
%   | | then if ( hometown(A, H) )
%   | | | then return 0.19710097529264972;  // std dev = 0,848, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.36920682968441065;  // std dev = 0,359, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( educationconcentration(B, I) )
%   | | | then return 0.02587194007936952;  // std dev = 2,253, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.2532897988444224;  // std dev = 1,823, 62,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=57 */
%   | else if ( gender(B, J), locale(A, K) )
%   | | then if ( educationdegree(B, L) )
%   | | | then return -0.1335726648982659;  // std dev = 2,018, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | | else return 0.030271891301481377;  // std dev = 13,287, 871,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=414 */
%   | | else if ( locale(A, M), gender(A, N) )
%   | | | then return 0.5204557588003207;  // std dev = 3,65e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.020477161709356505;  // std dev = 2,402, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */


Results
   AUC ROC   = 0.564577
   AUC PR    = 0.582598
   CLL	      = -0.728599
   Precision = 0.573372 at threshold = 0.5
   Recall    = 0.374875
   F1        = 0.453348


Total learning time: 23.832 seconds
Total inference time: 4.963 seconds
AUC ROC: 0.564577


Refined model AUC ROC: 0.564577


Dataset: 48_twitter_facebook, Fold: 4, Type: transfer, Time: 04:11:16
{'Learning time': 36.982, 'AUC PR': 0.582598, 'F1': 0.453348, 'AUC ROC': 0.564577, 'CLL': -0.728599, 'Inference time': 4.963, 'Mapping results': {'Generating mappings time': 0.31635022163391113, 'Generating paths time': 2.4587714672088623, 'Finding best mapping': 1.430511474609375e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.03624916076660156, 'Max mapping': 24389, 'Total time': 2.811380386352539}, 'Parameter Learning results': {'Learning time': 13.15, 'AUC PR': 0.533901, 'F1': 0.077282, 'AUC ROC': 0.514203, 'CLL': -0.703391, 'Inference time': 5.708, 'Precision': [0.81198, 0.5], 'Recall': 0.040572}, 'Precision': [0.573372, 0.5], 'Recall': 0.374875}


Start learning from scratch in target domain

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( educationschool(A, E) )
%   | | then return -0.11010503315445595;  // std dev = 0,175, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else if ( workstartdate(A, F), workstartdate(B, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06867525088898606;  // std dev = 3,554, 76,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   else if ( workemployer(A, H), educationschool(B, I) )
%   | then if ( educationdegree(B, J) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( educationdegree(B, K) )
%   | | then return -0.06777699082641374;  // std dev = 0,262, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( hometown(B, L), educationwith(B, M) )
%   | | | then return 0.8105298874804642;  // std dev = 1,380, 42,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.40582619671320014;  // std dev = 14,235, 818,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=448 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( educationschool(A, E) )
%   | | then return -0.09722302093214917;  // std dev = 0,175, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else if ( locale(B, D), educationconcentration(B, F) )
%   | | | then return 0.5162484584280339;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.058765122596480104;  // std dev = 3,433, 74,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   else if ( educationschool(B, G), workemployer(A, H) )
%   | then return -0.05372710793209721;  // std dev = 0,253, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.33099334814706327;  // std dev = 2,681, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.6867840346129183;  // std dev = 2,634, 75,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else if ( languages(B, K), educationconcentration(B, L) )
%   | | | then return -0.05088609543927801;  // std dev = 1,618, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.333757596607077;  // std dev = 13,635, 755,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=403 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(B, C), locale(A, D) )
%   then if ( worklocation(A, C) )
%   | then return 0.6123969060166568;  // std dev = 0,205, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.01104642436077557;  // std dev = 0,348, 127,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
%   else if ( hometown(B, E) )
%   | then if ( educationconcentration(B, F) )
%   | | then if ( birthday(A, G), location(B, H) )
%   | | | then return 0.7062971063425356;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.045618537371771045;  // std dev = 2,617, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else return 0.528528401288135;  // std dev = 0,361, 127,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=105 */
%   | else if ( birthday(B, I), educationschool(B, J) )
%   | | then if ( educationconcentration(B, K) )
%   | | | then return 0.6036216684215628;  // std dev = 1,818, 33,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.3286708116364857;  // std dev = 3,222, 47,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | else if ( educationyear(B, L), locale(A, M) )
%   | | | then return 0.08908464801811712;  // std dev = 4,558, 112,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.25051700310117975;  // std dev = 11,774, 575,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=288 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationyear(B, D), location(B, E) )
%   | then if ( languages(B, F), location(A, E) )
%   | | then return -0.2740648741585852;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( languages(A, G), hometown(B, H) )
%   | | | then return -0.18892719255607474;  // std dev = 0,869, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4224152343649854;  // std dev = 1,469, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0.41292833276695823;  // std dev = 0,343, 96,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   else if ( educationtype(B, I), educationschool(A, J) )
%   | then return -0.018307193865549472;  // std dev = 0,353, 156,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=34 */
%   | else if ( hometown(B, K) )
%   | | then if ( educationconcentration(B, L) )
%   | | | then return 0.0704911444511654;  // std dev = 2,267, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.43067798515762923;  // std dev = 3,369, 86,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=70 */
%   | | else if ( gender(B, M), locale(A, N) )
%   | | | then return 0.1856515817533569;  // std dev = 12,267, 649,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=311 */
%   | | | else return 0.37022200711182396;  // std dev = 2,827, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( worklocation(B, C), locale(A, D) )
%   then if ( workemployer(A, E) )
%   | then return 0.3692562072043203;  // std dev = 0,292, 28,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | else if ( workemployer(B, F) )
%   | | then if ( educationschool(A, G) )
%   | | | then return -0.12209109066325723;  // std dev = 0,097, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.09818869265303747;  // std dev = 2,780, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else return -0.1495700005586634;  // std dev = 0,282, 44,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   else if ( hometown(B, H), hometown(A, H) )
%   | then return 0.3695127266526131;  // std dev = 0,316, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else if ( birthday(B, I), educationconcentration(B, J) )
%   | | then if ( educationyear(A, K), educationschool(A, L) )
%   | | | then return 0.24503955828146318;  // std dev = 1,080, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.46629356102765923;  // std dev = 1,353, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( languages(A, M), educationschool(B, N) )
%   | | | then return -0.02311198317402459;  // std dev = 2,570, 45,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.1666166606111803;  // std dev = 13,389, 819,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=424 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( worklocation(B, D), worklocation(A, D) )
%   | then return 0.29598852894070976;  // std dev = 0,059, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.435727313637037;  // std dev = 0,189, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( workemployer(B, E), locale(A, F) )
%   | then if ( hometown(A, G) )
%   | | then return -0.1612334481690533;  // std dev = 0,051, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( educationdegree(A, H), educationschool(A, I) )
%   | | | then return 0.45671467404689653;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.018115210290821464;  // std dev = 3,713, 108,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
%   | else if ( worklocation(B, J), locale(A, K) )
%   | | then if ( workemployer(A, L), workstartdate(A, M) )
%   | | | then return 0.4098560035989409;  // std dev = 0,953, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.12862510002612157;  // std dev = 1,892, 46,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else if ( languages(B, N), location(B, P) )
%   | | | then return -0.07984914317129232;  // std dev = 2,045, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.15466436929103483;  // std dev = 13,340, 831,000 (wgt'ed) examples reached here.  /* #neg=357 #pos=474 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then return 0.36236208388241387;  // std dev = 0,184, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( worklocation(B, D), locale(A, E) )
%   | then if ( workemployer(B, F) )
%   | | then if ( workemployer(A, F) )
%   | | | then return 0.3190532649382026;  // std dev = 0,066, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.01957678747722391;  // std dev = 2,756, 72,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=10 */
%   | | else if ( hometown(B, G), locale(B, E) )
%   | | | then return 0.14313815458923562;  // std dev = 1,202, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.13787979398578076;  // std dev = 1,449, 41,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | else if ( birthday(B, H), educationyear(B, I) )
%   | | then if ( languages(A, J), location(B, K) )
%   | | | then return -0.33065418706012084;  // std dev = 0,179, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.27704707464881206;  // std dev = 2,536, 57,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | else if ( educationschool(A, L), educationschool(B, L) )
%   | | | then return 0.2044610079410873;  // std dev = 3,620, 103,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=75 */
%   | | | else return 0.07567416638347524;  // std dev = 12,962, 768,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=375 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationdegree(B, C) )
%   then if ( workemployer(A, D) )
%   | then return 0.15028876088674867;  // std dev = 0,318, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.1713401666573475;  // std dev = 0,238, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( educationyear(B, E), location(A, F) )
%   | then if ( educationyear(A, G), birthday(B, H) )
%   | | then return 0.19733304702339316;  // std dev = 0,267, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( workemployer(A, I), workemployer(B, I) )
%   | | | then return 0.2526092113474298;  // std dev = 0,181, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09049545440402519;  // std dev = 2,632, 68,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( educationschool(B, J), educationschool(A, J) )
%   | | then if ( languages(B, K), birthday(A, L) )
%   | | | then return -0.12239428190400163;  // std dev = 1,123, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.24121785857307923;  // std dev = 2,628, 76,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | else if ( educationtype(A, M), educationschool(B, N) )
%   | | | then return -0.05903872838337467;  // std dev = 3,407, 95,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.09450835679759645;  // std dev = 12,804, 755,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=400 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationdegree(B, C) )
%   then return -0.0878484254240013;  // std dev = 0,277, 57,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   else if ( hometown(B, D) )
%   | then if ( educationyear(B, E) )
%   | | then if ( educationconcentration(B, F), languages(B, G) )
%   | | | then return -0.13249112570477958;  // std dev = 1,476, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.1077037856281303;  // std dev = 3,605, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   | | else if ( educationyear(A, H), educationtype(B, I) )
%   | | | then return 0.0245153990259719;  // std dev = 0,915, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.23504623971941538;  // std dev = 2,428, 62,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | else if ( educationyear(A, J), location(B, K) )
%   | | then if ( educationtype(B, L), locale(A, M) )
%   | | | then return -0.012640418678248997;  // std dev = 2,244, 49,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.3664479863162585;  // std dev = 0,951, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( gender(B, N), locale(A, P) )
%   | | | then return 0.04812609973616477;  // std dev = 12,467, 751,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=363 */
%   | | | else return 0.2168634379841297;  // std dev = 2,556, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(B, C), hometown(A, D) )
%   then return -0.14933830726291553;  // std dev = 0,064, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( educationschool(B, E), educationschool(A, E) )
%   | then if ( languages(B, F), location(B, G) )
%   | | then if ( educationclasses(A, H) )
%   | | | then return -0.31301528064656176;  // std dev = 0,152, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06238694392158437;  // std dev = 0,964, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( educationyear(A, I), educationyear(B, I) )
%   | | | then return -0.003594255251919032;  // std dev = 2,048, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.21315354360855449;  // std dev = 2,439, 86,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=75 */
%   | else if ( educationschool(A, J), educationtype(B, K) )
%   | | then if ( educationtype(A, K), educationyear(A, L) )
%   | | | then return 0.02399477430519678;  // std dev = 3,173, 73,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return -0.16213772306479698;  // std dev = 1,976, 63,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=8 */
%   | | else if ( locale(B, M), locale(A, N) )
%   | | | then return 0.05925931672569645;  // std dev = 12,509, 744,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=396 */
%   | | | else return -0.08042330355725612;  // std dev = 2,956, 45,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */


Results
   AUC ROC   = 0.563041
   AUC PR    = 0.582765
   CLL	      = -0.730072
   Precision = 0.582544 at threshold = 0.5
   Recall    = 0.337379
   F1        = 0.427293


Total learning time: 27.044 seconds
Total inference time: 5.478 seconds
AUC ROC: 0.563041


Dataset: 48_twitter_facebook, Fold: 4, Type: scratch, Time: 04:11:49
{'Learning time': 27.044, 'AUC PR': 0.582765, 'F1': 0.427293, 'AUC ROC': 0.563041, 'CLL': -0.730072, 'Inference time': 5.478, 'Precision': [0.582544, 0.5], 'Recall': 0.337379}


Starting fold 5

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.03225207328796387
   Generating paths time   = 2.4311373233795166
   Generating mappings time   = 0.30745482444763184
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.770853042602539


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> workemployer(A,B)', 'accounttype(A,B) -> educationdegree(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
0;true,false;workemployer(A, E).;false;true
0;true,false,false;workemployer(B, F).;false;false
0;false,false,true;workemployer(B, I).;false;false
0;false;workemployer(B, G), workemployer(A, G).;false;true
0;false,false,false;workemployer(B, J).;false;false
0;false,false;workemployer(A, H).;true;true
0;true;workemployer(A, D), workemployer(B, D).;false;true
1;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
1;true,false;workemployer(A, E).;false;true
1;true,false,false;workemployer(B, F).;false;false
1;false,false,true;workemployer(B, I).;false;false
1;false;workemployer(A, G), workemployer(B, G).;false;true
1;false,false,false;workemployer(B, J).;false;false
1;false,false;workemployer(A, H).;true;true
1;true;workemployer(B, D), workemployer(A, D).;false;true
2;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
2;true,false;workemployer(A, E), workemployer(B, F).;false;true
2;true,false,false;workemployer(B, G).;false;false
2;false,false,true;workemployer(B, J).;false;false
2;false;workemployer(B, H), workemployer(A, H).;false;true
2;false,false,false;workemployer(B, K).;false;false
2;false,false;workemployer(A, I).;true;true
2;true;workemployer(B, D), workemployer(A, D).;false;true
3;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
3;true,false;workemployer(B, E), workemployer(A, F).;false;true
3;true,false,false;workemployer(B, G).;false;false
3;false,false,true;workemployer(B, J).;false;false
3;false;workemployer(A, H), workemployer(B, H).;false;true
3;false,false,false;workemployer(B, K).;false;false
3;false,false;workemployer(A, I).;true;true
3;true;workemployer(B, D), workemployer(A, D).;false;true
4;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
4;true,false;workemployer(A, E), workemployer(B, F).;false;true
4;true,false,false;workemployer(B, G).;false;false
4;false,false,true;workemployer(B, J).;false;false
4;false;workemployer(A, H), workemployer(B, H).;false;true
4;false,false,false;workemployer(B, K).;false;false
4;false,false;workemployer(A, I).;true;true
4;true;workemployer(B, D), workemployer(A, D).;false;true
5;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
5;true,false;workemployer(A, E), workemployer(B, F).;false;true
5;true,false,false;workemployer(B, G).;false;false
5;false,false,true;workemployer(B, J).;false;false
5;false;workemployer(A, H), workemployer(B, H).;false;true
5;false,false,false;workemployer(B, K).;false;false
5;false,false;workemployer(A, I).;true;true
5;true;workemployer(A, D), workemployer(B, D).;false;true
6;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
6;true,false;workemployer(A, E), workemployer(B, F).;false;true
6;true,false,false;workemployer(B, G).;false;false
6;false,false,true;workemployer(B, J).;false;false
6;false;workemployer(B, H), workemployer(A, H).;false;true
6;false,false,false;workemployer(B, K).;false;false
6;false,false;workemployer(A, I).;true;true
6;true;workemployer(A, D), workemployer(B, D).;false;true
7;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
7;true,false;workemployer(B, E), workemployer(A, F).;false;true
7;true,false,false;workemployer(B, G).;false;false
7;false,false,true;workemployer(B, J).;false;false
7;false;workemployer(A, H), workemployer(B, H).;false;true
7;false,false,false;workemployer(B, K).;false;false
7;false,false;workemployer(A, I).;true;true
7;true;workemployer(B, D), workemployer(A, D).;false;true
8;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
8;true,false;workemployer(A, E), workemployer(B, F).;false;true
8;true,false,false;workemployer(B, G).;false;false
8;false,false,true;workemployer(B, J).;false;false
8;false;workemployer(A, H), workemployer(B, H).;false;true
8;false,false,false;workemployer(B, K).;false;false
8;false,false;workemployer(A, I).;true;true
8;true;workemployer(A, D), workemployer(B, D).;false;true
9;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true
9;true,false;workemployer(A, E), workemployer(B, F).;false;true
9;true,false,false;workemployer(B, G).;false;false
9;false,false,true;workemployer(B, J).;false;false
9;false;workemployer(B, H), workemployer(A, H).;false;true
9;false,false,false;workemployer(B, K).;false;false
9;false,false;workemployer(A, I).;true;true
9;true;workemployer(A, D), workemployer(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E) )
%   | | then return 0.5081489350995123;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( workemployer(B, F) )
%   | | | then return 0.4945125714631487;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workemployer(B, G), workemployer(A, G) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, H) )
%   | | then if ( workemployer(B, I) )
%   | | | then return 0.4137044906550675;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.2678711573217357;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, J) )
%   | | | then return 0.4147527086844189;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.3307227747619561;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E) )
%   | | then return 0.43446033631952596;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( workemployer(B, F) )
%   | | | then return 0.42312069605298835;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.22373365448410584;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workemployer(A, G), workemployer(B, G) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, H) )
%   | | then if ( workemployer(B, I) )
%   | | | then return 0.35555573927149847;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.23203979803695163;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, J) )
%   | | | then return 0.3564361897899479;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.28552134263320494;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.45211521464848736;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.34367606239514226;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.24154844533440087;  // std dev = 2,317, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.29261484610968785;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.19557219095067271;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.2932891117368847;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.2381962889724882;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0.34995449653525146;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.2678714180597208;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.19316862015133573;  // std dev = 2,315, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.23214124828648167;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.1608276931209956;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.2326196371898317;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.1927951399176328;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.26382672823532305;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.2036576554421387;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.15112444916634463;  // std dev = 2,313, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.17942003892665268;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.12956647019020626;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.1797449256101397;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.15235460085922367;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.1980616029790725;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.1531477270126841;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.11648742616376948;  // std dev = 2,313, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.13647857812921968;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.10270955036674757;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.1366973215688889;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.11832390816378496;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.14973549980997758;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.11488033872832898;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.08894802201464778;  // std dev = 2,312, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.10293424750437874;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.0804355590917835;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.10308421102484064;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.09081415876454559;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(B, E), workemployer(A, F) )
%   | | then return 0.11440334811773141;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.08631518284931711;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.06753309263212867;  // std dev = 2,312, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.0773294785215201;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.06243331486449291;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.07743568076233968;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.06916265800411081;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.08833873740643128;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.06505762125972504;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.051101841196279564;  // std dev = 2,312, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.05801086896812446;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.04814942655319867;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.058088822626280755;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.05241201627569252;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(A, E), workemployer(B, F) )
%   | | then return 0.06885366485049249;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( workemployer(B, G) )
%   | | | then return 0.0492031450436232;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.03859308513254616;  // std dev = 2,312, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(A, I) )
%   | | then if ( workemployer(B, J) )
%   | | | then return 0.04351050232227129;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.03696231058084339;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | else if ( workemployer(B, K) )
%   | | | then return 0.0435695750533553;  // std dev = 5,115, 106,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return 0.0395923844683533;  // std dev = 7,686, 237,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=112 */


Results
   AUC ROC   = 0.541906
   AUC PR    = 0.554009
   CLL	      = -0.690619
   Precision = 0.585465 at threshold = 0.5
   Recall    = 0.188335
   F1        = 0.284992


Total learning time: 11.14 seconds
Total inference time: 5.271 seconds
AUC ROC: 0.541906


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E)', 'true,false,false': 'workemployer(B, F)', 'false,false,true': 'workemployer(B, I)', 'false': 'workemployer(B, G), workemployer(A, G)', 'false,false,false': 'workemployer(B, J)', 'false,false': 'workemployer(A, H)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [0.0, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [2.133, 7, 13], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [1.549, 6, 4]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E)', 'true,false,false': 'workemployer(B, F)', 'false,false,true': 'workemployer(B, I)', 'false': 'workemployer(A, G), workemployer(B, G)', 'false,false,false': 'workemployer(B, J)', 'false,false': 'workemployer(A, H)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [7.3e-08, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [2.133, 7, 13], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [1.549, 6, 4]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [0.0, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.317, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(B, E), workemployer(A, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [5.58e-08, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.315, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [2.11e-08, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.313, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [1.49e-08, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.313, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [0.0, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.312, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(B, E), workemployer(A, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(B, D), workemployer(A, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [0.0, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.312, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(A, H), workemployer(B, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [0.0, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.312, 11, 11]}], ['edge(A, B)', {'': 'educationdegree(A, C), educationdegree(B, C)', 'true,false': 'workemployer(A, E), workemployer(B, F)', 'true,false,false': 'workemployer(B, G)', 'false,false,true': 'workemployer(B, J)', 'false': 'workemployer(B, H), workemployer(A, H)', 'false,false,false': 'workemployer(B, K)', 'false,false': 'workemployer(A, I)', 'true': 'workemployer(A, D), workemployer(B, D)'}, {'true,false,false,true': [1.595, 4, 7], 'true,true': [0.0, 2, 0], 'false,true': [0.0, 0, 18], 'false,false,true,true': [2.981, 16, 20], 'false,false,false,false': [7.686, 125, 112], 'false,false,true,false': [5.901, 85, 59], 'true,false,true': [1.225, 2, 6], 'false,false,false,true': [5.115, 47, 59], 'true,false,false,false': [2.312, 11, 11]}]]
[{'': [0.24661979448350585, 0.24997864569275358], 'false': [-2.9605947323337506e-16, 0.24951650464850492], 'true,false,false': [0.23140495867768587, 0.23999999999999985], 'false,false,true': [0.24691358024691348, 0.2418499228395062], 'true,false': [0.22749999999999965, 0.2494331065759633], 'false,false,false': [0.2467960128159484, 0.24924780572914199], 'false,false': [0.24626543209876578, 0.24999787503506637], 'true': [0.0, 0.24271267102914887]}, {'': [0.23968936287530174, 0.24633679746451342], 'false': [2.9605947323337506e-16, 0.2486777468952311], 'true,false,false': [0.23140495867768598, 0.2399999999999999], 'false,false,true': [0.2469135802469143, 0.24184992283950615], 'true,false': [0.2274999999999998, 0.2454140966271215], 'false,false,false': [0.24679601281594998, 0.2492478057291351], 'false,false': [0.24530364435923638, 0.2495639506146912], 'true': [0.0, 0.23949800335885013]}, {'': [0.2332627767815919, 0.24278685722544352], 'false': [-2.4671622769447924e-16, 0.24786247368197803], 'true,false,false': [0.23140495867768598, 0.24397932948161147], 'false,false,true': [0.24691358024691346, 0.241849922839507], 'true,false': [0.1875, 0.24210566147285964], 'false,false,false': [0.2467960128159485, 0.24924780572913915], 'false,false': [0.24436941862823833, 0.24913822968513116], 'true': [0.0, 0.23634468304421125]}, {'': [0.2275257293895584, 0.24062785173652934], 'false': [1.7270135938613546e-16, 0.24725878010497693], 'true,false,false': [0.2314049586776859, 0.2435330051241067], 'false,false,true': [0.24691358024691346, 0.24184992283950735], 'true,false': [0.18749999999999994, 0.24073043586759776], 'false,false,false': [0.24679601281594846, 0.2492478057291365], 'false,false': [0.24367635402504356, 0.2488287708770573], 'true': [0.0, 0.23307566940102437]}, {'': [0.22383615041299335, 0.23958214953773968], 'false': [2.4671622769447922e-17, 0.2468974763569772], 'true,false,false': [0.23140495867768598, 0.2432506611324466], 'false,false,true': [0.24691358024691368, 0.24184992283950507], 'true,false': [0.1875, 0.23991536870566316], 'false,false,false': [0.24679601281594937, 0.24924780572913974], 'false,false': [0.24326031485150806, 0.24865030799059007], 'true': [0.0, 0.23111106164196063]}, {'': [0.2216901239179709, 0.239099038132893], 'false': [1.2335811384723961e-17, 0.2467110988150848], 'true,false,false': [0.23140495867768596, 0.24308002760522654], 'false,false,true': [0.24691358024691348, 0.24184992283950596], 'true,false': [0.1875, 0.23948699966456485], 'false,false,false': [0.24679601281594912, 0.24924780572913702], 'false,false': [0.24304510987875055, 0.24856219392036022], 'true': [0.0, 0.23009860045217878]}, {'': [0.22046039804464368, 0.2388693143666342], 'false': [-3.700743415417188e-17, 0.24662338574616446], 'true,false,false': [0.23140495867768598, 0.24297927617396634], 'false,false,true': [0.2469135802469136, 0.2418499228395073], 'true,false': [0.18750000000000003, 0.23927061146412593], 'false,false,false': [0.24679601281594882, 0.24924780572913907], 'false,false': [0.24294364487783437, 0.24852225715187873], 'true': [0.0, 0.22959603519656413]}, {'': [0.21973726180114386, 0.23875185649001743], 'false': [-1.850371707708594e-17, 0.24658409957798447], 'true,false,false': [0.23140495867768598, 0.2429203722151936], 'false,false,true': [0.2469135802469136, 0.24184992283950532], 'true,false': [0.18749999999999997, 0.23916029368334144], 'false,false,false': [0.2467960128159479, 0.24924780572914038], 'false,false': [0.2428981576316584, 0.24850472364544618], 'true': [0.0, 0.22933923219906027]}, {'': [0.21929552361446303, 0.23868462554108935], 'false': [-2.7755575615628914e-17, 0.24656687828141668], 'true,false,false': [0.23140495867768596, 0.24288601244640493], 'false,false,true': [0.24691358024691365, 0.24184992283950668], 'true,false': [0.1875, 0.2391022753673162], 'false,false,false': [0.24679601281594846, 0.249247805729139], 'false,false': [0.24287821400842852, 0.2484969901515186], 'true': [0.0, 0.2292002906335601]}, {'': [0.2190151687495082, 0.2386404959320318], 'false': [0.0, 0.24655936116473856], 'true,false,false': [0.23140495867768596, 0.24286592278991115], 'false,false,true': [0.24691358024691368, 0.24184992283950604], 'true,false': [0.18749999999999997, 0.23907061772390642], 'false,false,false': [0.24679601281594832, 0.24924780572913954], 'false,false': [0.2428695149313998, 0.24849348647600022], 'true': [0.0, 0.2291202175646967]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '0;false;workemployer(B, G), workemployer(A, G).;true;true', '0;true;workemployer(A, D), workemployer(B, D).;true;true', '1;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '1;false;workemployer(A, G), workemployer(B, G).;true;true', '1;true;workemployer(B, D), workemployer(A, D).;true;true', '2;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '2;false;workemployer(B, H), workemployer(A, H).;true;true', '2;true;workemployer(B, D), workemployer(A, D).;true;true', '3;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '3;false;workemployer(A, H), workemployer(B, H).;true;true', '3;true;workemployer(B, D), workemployer(A, D).;true;true', '4;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '4;false;workemployer(A, H), workemployer(B, H).;true;true', '4;true;workemployer(B, D), workemployer(A, D).;true;true', '5;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '5;false;workemployer(A, H), workemployer(B, H).;true;true', '5;true;workemployer(A, D), workemployer(B, D).;true;true', '6;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '6;false;workemployer(B, H), workemployer(A, H).;true;true', '6;true;workemployer(A, D), workemployer(B, D).;true;true', '7;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '7;false;workemployer(A, H), workemployer(B, H).;true;true', '7;true;workemployer(B, D), workemployer(A, D).;true;true', '8;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '8;false;workemployer(A, H), workemployer(B, H).;true;true', '8;true;workemployer(A, D), workemployer(B, D).;true;true', '9;;edge(A, B) :- educationdegree(A, C), educationdegree(B, C).;true;true', '9;false;workemployer(B, H), workemployer(A, H).;true;true', '9;true;workemployer(A, D), workemployer(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workemployer(B, E), workstartdate(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( workenddate(B, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3966104735610508;  // std dev = 2,542, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   else if ( workemployer(B, H), workemployer(A, H) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( locale(B, I), locale(A, I) )
%   | | then if ( workemployer(B, J), workstartdate(B, K) )
%   | | | then return 0.6831489350995115;  // std dev = 2,403, 40,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | | | else return 0.360726254687138;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=195 */
%   | | else if ( locale(A, L), locale(B, M) )
%   | | | then return -0.09929787341112603;  // std dev = 1,384, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.274815601766179;  // std dev = 3,416, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workstartdate(B, E), workemployer(B, F) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(B, G), educationyear(B, H) )
%   | | | then return 0.8027212043484538;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22735155190237488;  // std dev = 2,625, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   else if ( workemployer(A, I), workemployer(B, I) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( educationyear(B, J), workstartdate(B, K) )
%   | | then if ( educationschool(A, L), workenddate(B, M) )
%   | | | then return 0.15763673193552702;  // std dev = 1,754, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.5737008732784122;  // std dev = 3,282, 66,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=52 */
%   | | else if ( locale(A, N), locale(B, N) )
%   | | | then return 0.30001495458194355;  // std dev = 9,382, 353,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=174 */
%   | | | else return 0.0566674508331631;  // std dev = 3,783, 90,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workstartdate(B, E), workemployer(B, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( educationconcentration(A, G), workenddate(A, H) )
%   | | | then return -0.21564338205047895;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.27963304327998406;  // std dev = 2,601, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workstartdate(B, J), educationyear(B, K) )
%   | | then if ( workenddate(B, L), educationtype(A, M) )
%   | | | then return 0.1784413516649223;  // std dev = 2,062, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.47520700989919434;  // std dev = 3,083, 61,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=49 */
%   | | else if ( educationtype(B, N), locale(A, P) )
%   | | | then return 0.15712024446926875;  // std dev = 7,430, 243,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=93 */
%   | | | else return 0.2707246167539704;  // std dev = 6,967, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( educationschool(B, E), educationconcentration(B, F) )
%   | | then if ( educationconcentration(A, F) )
%   | | | then return 0.20407210330659675;  // std dev = 1,410, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.2546777084368951;  // std dev = 0,070, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( workemployer(A, G) )
%   | | | then return 0.5075390283430044;  // std dev = 0,940, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17874352368368684;  // std dev = 1,659, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( lastname(B, I), educationyear(A, J) )
%   | | then return -0.16415604104546264;  // std dev = 0,027, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( lastname(A, K), lastname(B, L) )
%   | | | then return 0.7159864715459755;  // std dev = 0,040, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.18755572119223798;  // std dev = 10,735, 499,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=238 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( educationconcentration(B, E), workenddate(B, F) )
%   | | then return -0.05022880684423688;  // std dev = 0,874, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( educationyear(A, G), workemployer(B, H) )
%   | | | then return 0.35342063310967253;  // std dev = 0,834, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.15776047885013558;  // std dev = 2,145, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else if ( workemployer(A, I), workemployer(B, I) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( location(B, J), workstartdate(A, K) )
%   | | then if ( workemployer(B, L), workemployer(A, M) )
%   | | | then return -0.11118549604258643;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5056430162374332;  // std dev = 1,579, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( workemployer(B, N), educationyear(A, P) )
%   | | | then return 0.32322113988172796;  // std dev = 3,089, 48,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | | else return 0.11986989996312437;  // std dev = 10,009, 450,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=199 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workenddate(A, E), educationconcentration(A, F) )
%   | | then return -0.09793031961345908;  // std dev = 0,462, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( educationyear(B, G), educationyear(A, G) )
%   | | | then return 0.32290446275165374;  // std dev = 0,866, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.12689520515034008;  // std dev = 2,234, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   else if ( workemployer(A, H), workemployer(B, H) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( educationtype(B, I), workstartdate(B, J) )
%   | | then if ( workstartdate(A, K), educationschool(A, L) )
%   | | | then return -0.06252901709102344;  // std dev = 1,483, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2605527758652623;  // std dev = 3,915, 88,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=63 */
%   | | else if ( educationyear(A, M), educationtype(B, N) )
%   | | | then return -0.0038631262098557354;  // std dev = 4,659, 108,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.12724143222387194;  // std dev = 8,503, 313,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=147 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workenddate(A, E), educationschool(B, F) )
%   | | then return -0.10910076255077779;  // std dev = 0,513, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( educationyear(B, G), workstartdate(A, H) )
%   | | | then return 0.2590642942259735;  // std dev = 1,206, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.08427863085639209;  // std dev = 2,002, 24,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( workemployer(B, J), lastname(A, K) )
%   | | then if ( educationdegree(B, L) )
%   | | | then return -0.33717959845604195;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2321202943234213;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( educationyear(B, M), workemployer(B, N) )
%   | | | then return 0.19325087360235607;  // std dev = 4,797, 110,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=70 */
%   | | | else return 0.06974549889197999;  // std dev = 9,389, 405,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=180 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( educationconcentration(B, E), workenddate(B, F) )
%   | | then return -0.07747256514244545;  // std dev = 0,787, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( educationyear(B, G), location(B, H) )
%   | | | then return 0.3775736386247804;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09041176972354206;  // std dev = 2,239, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else if ( workemployer(A, I), workemployer(B, I) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( location(B, J), location(A, J) )
%   | | then if ( educationdegree(A, K) )
%   | | | then return 0.5583407822118618;  // std dev = 0,140, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35390669214738985;  // std dev = 1,186, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( workemployer(B, L), educationyear(A, M) )
%   | | | then return 0.17415761132978402;  // std dev = 3,240, 55,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=36 */
%   | | | else return 0.04611100714780782;  // std dev = 9,896, 454,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=202 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workstartdate(B, E), location(A, F) )
%   | | then return 0.3351537346938096;  // std dev = 0,282, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( workemployer(A, G), educationyear(A, H) )
%   | | | then return 0.12923110252647846;  // std dev = 1,524, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return -0.03641182965488384;  // std dev = 1,736, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   else if ( workemployer(A, I), workemployer(B, I) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( location(B, J), location(A, J) )
%   | | then if ( educationtype(A, K) )
%   | | | then return 0.3628831728124468;  // std dev = 0,869, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.18477565383418315;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( educationyear(B, L), educationyear(A, L) )
%   | | | then return 0.20956804898391931;  // std dev = 1,984, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.038249170449272;  // std dev = 10,209, 486,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=222 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationdegree(A, C), educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( workstartdate(B, E), workemployer(B, F) )
%   | | then return 0.18312366580481446;  // std dev = 0,051, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(B, G), educationyear(B, H) )
%   | | | then return 0.28102554654155293;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.008676647765024994;  // std dev = 2,293, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   else if ( workemployer(B, I), workemployer(A, I) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( languages(B, J), educationschool(B, K) )
%   | | then if ( location(A, L) )
%   | | | then return -0.48375237949737376;  // std dev = 0,104, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05754491208739246;  // std dev = 2,012, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( educationyear(B, M), educationschool(B, N) )
%   | | | then return 0.15228091241955266;  // std dev = 4,286, 92,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=57 */
%   | | | else return 0.027768578789010602;  // std dev = 9,221, 406,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=186 */


Results
   AUC ROC   = 0.557688
   AUC PR    = 0.566707
   CLL	      = -0.71721
   Precision = 0.56997 at threshold = 0.5
   Recall    = 0.24552
   F1        = 0.343202


Total learning time: 20.772 seconds
Total inference time: 5.495 seconds
AUC ROC: 0.557688


Refined model AUC ROC: 0.557688


Dataset: 48_twitter_facebook, Fold: 5, Type: transfer, Time: 04:12:35
{'Learning time': 31.912, 'AUC PR': 0.566707, 'F1': 0.343202, 'AUC ROC': 0.557688, 'CLL': -0.71721, 'Inference time': 5.495, 'Mapping results': {'Generating mappings time': 0.30745482444763184, 'Generating paths time': 2.4311373233795166, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.03225207328796387, 'Max mapping': 24389, 'Total time': 2.770853042602539}, 'Parameter Learning results': {'Learning time': 11.14, 'AUC PR': 0.554009, 'F1': 0.284992, 'AUC ROC': 0.541906, 'CLL': -0.690619, 'Inference time': 5.271, 'Precision': [0.585465, 0.5], 'Recall': 0.188335}, 'Precision': [0.56997, 0.5], 'Recall': 0.24552}


Start learning from scratch in target domain

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workemployer(B, D), workstartdate(B, E) )
%   | then if ( workstartdate(A, E), languages(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7235335504841275;  // std dev = 0,341, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else if ( lastname(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( educationyear(B, H), educationschool(B, I) )
%   | | | then return 0.44351478875804995;  // std dev = 5,464, 123,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=72 */
%   | | | else return 0.31889978834183014;  // std dev = 8,532, 293,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=135 */
%   else if ( locale(A, J), locale(B, K) )
%   | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workemployer(B, L), educationyear(A, M) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationschool(A, N), gender(A, P) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2905813675319448;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workemployer(B, D), workstartdate(B, E) )
%   | then return 0.5896044542095693;  // std dev = 0,363, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( workemployer(B, H), gender(A, I) )
%   | | | then return 0.4640268413799186;  // std dev = 1,997, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.009953073063543759;  // std dev = 2,671, 44,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( workstartdate(B, J), educationschool(B, K) )
%   | | | then return 0.6951878585941549;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.32793656704115764;  // std dev = 9,232, 346,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=180 */
%   else if ( locale(A, L), locale(B, M) )
%   | then return -0.08763477038348894;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workemployer(B, N), educationyear(A, P) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationschool(A, Q), gender(A, R) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2514074646610238;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), workstartdate(B, D) )
%   then if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.5269998461147596;  // std dev = 0,279, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else if ( languages(B, F) )
%   | | then return 0.6193669205181083;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22794568157907186;  // std dev = 0,459, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else if ( locale(A, G), locale(B, G) )
%   | then if ( lastname(A, H) )
%   | | then return 0.6488332340034109;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( location(B, I), location(A, I) )
%   | | | then return 0.5944577357247615;  // std dev = 1,303, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.2397473996922722;  // std dev = 9,881, 402,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=195 */
%   | else if ( locale(B, J), locale(A, K) )
%   | | then return -0.07407012414817031;  // std dev = 0,211, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else if ( workemployer(B, L), educationyear(A, M) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13941083693601342;  // std dev = 3,061, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.6416824198767758;  // std dev = 0,090, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( workenddate(A, E), educationyear(A, F) )
%   | | then return 0.4983792486510269;  // std dev = 0,309, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( workstartdate(B, G) )
%   | | | then return 0.4899668842468624;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05180186110734618;  // std dev = 2,222, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( educationschool(A, H), educationtype(B, I) )
%   | then if ( languages(B, J), educationconcentration(B, K) )
%   | | then return 0.5136987231362716;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0018330017123521615;  // std dev = 0,409, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | else if ( workstartdate(B, L), educationtype(B, M) )
%   | | then return 0.33139790645121403;  // std dev = 0,406, 87,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=63 */
%   | | else if ( educationtype(B, N) )
%   | | | then return 0.11874848855262247;  // std dev = 6,170, 180,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=72 */
%   | | | else return 0.22508562842361524;  // std dev = 6,656, 191,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=96 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( educationtype(A, D) )
%   | then if ( educationdegree(B, E), educationyear(A, F) )
%   | | then return 0.2834634248374393;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( educationyear(A, G) )
%   | | | then return 0.5660414722044947;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.655188107464923;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2562161291864493;  // std dev = 0,792, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( lastname(B, H), lastname(A, I) )
%   | then return 0.4485106238362222;  // std dev = 0,046, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( workemployer(B, J), educationyear(B, K) )
%   | | then if ( languages(B, L), educationschool(B, M) )
%   | | | then return 0.04570508888168805;  // std dev = 2,376, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.2604390481587998;  // std dev = 4,409, 118,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=83 */
%   | | else if ( locale(A, N), locale(B, N) )
%   | | | then return 0.14345407311165334;  // std dev = 8,774, 333,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=160 */
%   | | | else return -0.00680134436905716;  // std dev = 3,230, 81,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=15 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( gender(B, C), gender(A, C) )
%   then if ( educationconcentration(B, D), educationyear(A, E) )
%   | then return -0.011013867979346488;  // std dev = 0,418, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( languages(B, F), locale(A, G) )
%   | | then if ( workstartdate(A, H), educationconcentration(B, I) )
%   | | | then return 0.5293011654229074;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.039064412198302416;  // std dev = 3,096, 52,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | | else if ( workstartdate(A, J), location(B, K) )
%   | | | then return 0.46552129521935265;  // std dev = 1,322, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.17503116357220785;  // std dev = 7,390, 271,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=153 */
%   else if ( educationyear(B, L), educationyear(A, M) )
%   | then if ( gender(B, N), educationschool(B, P) )
%   | | then if ( workenddate(A, Q), educationschool(A, P) )
%   | | | then return 0.5529774854039077;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07072358351933726;  // std dev = 1,879, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.3954488202946704;  // std dev = 0,398, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0.017390212149633495;  // std dev = 0,424, 149,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=54 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( gender(B, C), gender(A, C) )
%   then if ( educationconcentration(B, D), educationyear(A, E) )
%   | then if ( workemployer(B, F), workenddate(A, G) )
%   | | then return 0.43642804940125285;  // std dev = 0,099, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.08099364636836384;  // std dev = 0,405, 43,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( workenddate(B, H), educationyear(B, I) )
%   | | then return 0.25290328742479545;  // std dev = 0,358, 40,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */
%   | | else if ( educationtype(B, J), locale(A, K) )
%   | | | then return 0.07575400815197296;  // std dev = 5,685, 175,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=88 */
%   | | | else return 0.1760352393666617;  // std dev = 5,341, 129,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=75 */
%   else if ( educationconcentration(B, L), educationyear(A, M) )
%   | then return 0.25775303359466323;  // std dev = 0,416, 22,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | else if ( locale(A, N), locale(B, N) )
%   | | then if ( workenddate(B, P), educationtype(A, Q) )
%   | | | then return -0.09898834101717445;  // std dev = 1,701, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.08396193080368149;  // std dev = 5,034, 113,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=56 */
%   | | else return -0.13557501265200184;  // std dev = 0,155, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationtype(B, C), workstartdate(B, D) )
%   then if ( workemployer(A, E), educationyear(A, F) )
%   | then return 0.2279281813622233;  // std dev = 0,362, 41,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else return 0.09227929289243689;  // std dev = 0,379, 89,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=57 */
%   else if ( educationyear(B, G), workstartdate(A, H) )
%   | then if ( languages(B, I), educationschool(B, J) )
%   | | then return -0.16346322164817254;  // std dev = 0,345, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( educationconcentration(A, K), workemployer(A, L) )
%   | | | then return 0.02333971440632326;  // std dev = 1,408, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3488833740216514;  // std dev = 1,643, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else if ( educationtype(B, M), locale(A, N) )
%   | | then if ( workstartdate(A, P), educationyear(A, Q) )
%   | | | then return -0.17552231539308186;  // std dev = 1,830, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.02555532800752945;  // std dev = 5,906, 183,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=74 */
%   | | else if ( locale(A, R), locale(B, R) )
%   | | | then return 0.1092138008165912;  // std dev = 6,176, 166,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | | | else return -0.03966245942469933;  // std dev = 2,010, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), educationconcentration(B, D) )
%   then if ( educationconcentration(A, D), educationdegree(A, E) )
%   | then return 0.3114195384565757;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( workstartdate(B, F), workemployer(B, G) )
%   | | then return 0.29731316144977243;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( political(A, H) )
%   | | | then return 0.23014553102318341;  // std dev = 0,728, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2355595335902217;  // std dev = 1,638, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   else if ( location(A, I), educationdegree(B, J) )
%   | then return 0.3333369927057016;  // std dev = 0,298, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( educationyear(B, K) )
%   | | then if ( location(B, L), workemployer(B, M) )
%   | | | then return -0.0771036472759682;  // std dev = 2,417, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.1253636498406025;  // std dev = 5,477, 186,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=118 */
%   | | else if ( educationtype(B, N), locale(B, P) )
%   | | | then return -0.027114482198078084;  // std dev = 4,228, 118,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | | else return 0.06573083065551144;  // std dev = 6,611, 203,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=101 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.21530848280164047;  // std dev = 0,300, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( workemployer(B, D), educationyear(A, E) )
%   | then if ( workstartdate(A, F), workemployer(A, G) )
%   | | then if ( educationyear(B, H) )
%   | | | then return 0.01844438598038296;  // std dev = 1,691, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return -0.3422170334541074;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( educationschool(A, I), educationdegree(A, J) )
%   | | | then return -0.06000332461955336;  // std dev = 1,139, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.21013602209654625;  // std dev = 1,917, 48,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=40 */
%   | else if ( workenddate(A, K), educationconcentration(B, L) )
%   | | then if ( languages(B, M), educationdegree(B, N) )
%   | | | then return 0.3036209366809862;  // std dev = 0,808, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.352451708639291;  // std dev = 0,315, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( educationschool(B, P), educationyear(B, Q) )
%   | | | then return 0.13059385878118424;  // std dev = 4,034, 90,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=54 */
%   | | | else return 0.011985753045988963;  // std dev = 8,574, 382,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=165 */


Results
   AUC ROC   = 0.567548
   AUC PR    = 0.563199
   CLL	      = -0.766893
   Precision = 0.560724 at threshold = 0.5
   Recall    = 0.380987
   F1        = 0.453703


Total learning time: 24.848 seconds
Total inference time: 5.83 seconds
AUC ROC: 0.567548


Dataset: 48_twitter_facebook, Fold: 5, Type: scratch, Time: 04:13:06
{'Learning time': 24.848, 'AUC PR': 0.563199, 'F1': 0.453703, 'AUC ROC': 0.567548, 'CLL': -0.766893, 'Inference time': 5.83, 'Precision': [0.560724, 0.5], 'Recall': 0.380987}


Starting experiment #5 for 48_twitter_facebook

Start learning from source dataset

Source train facts examples: 1936
Source train pos examples: 1488
Source train neg examples: 1488

WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.29692444530358925;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.08692252000517167;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.20837934984605716;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1308762078267851;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(B, G), tweets(A, G) )
%   | then return 0.5813068298363496;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.2305979146913504;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.18507201202258786;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.6081489350995096;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.25680824651685535;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return 0.0760086065078202;  // std dev = 0,420, 424,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=97 */
%   | | else if ( tweets(B, F) )
%   | | | then return 0.18107440977493972;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.1141862376674665;  // std dev = 2,558, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   else if ( tweets(A, G), tweets(B, G) )
%   | then return 0.4949913846238995;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.20014733368536436;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.1610175259758761;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.5170719622367242;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.16653882456488173;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.21542855580471548;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.03213570384911769;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.15408250053251327;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.09635815785231988;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.3965795487720175;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1697087003887462;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.13752260537158653;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.4125724528826577;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1758539833644332;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.02770673478281751;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.12864717441952958;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.08269510156685003;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.3042169031521049;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.14089299828557916;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.11550318916810978;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.31517865761850816;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.1403872751805415;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.023811354785219868;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.10566614367153737;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.0702729758172556;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.2288839777917651;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1148820374315997;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.09560520045818097;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.23676009386434094;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.09841340278401867;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.11019175106572325;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.02040642831585418;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0856216785941897;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.059204484659773925;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.17184452907760903;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.09230973482782298;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.07817108805981869;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.17806945427207632;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0802665494425224;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.08543913289306276;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.017446089481275212;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.06862836147485345;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04951153175763231;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.129809923045701;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.07332256916930585;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.0632779877768077;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.13513671764223337;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(B, D), tweets(A, D) )
%   | then return 0.06568160361017888;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(B, E), tweets(A, F) )
%   | | then return 0.014884115659231437;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.054539038114920696;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.04114669855937214;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0989064414455212;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.0577278046766802;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.05081113436407256;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.10367175113685581;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.051879169344040556;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.05019549935715151;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.01267564229810578;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.04305573807685484;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.03401590243533729;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(A, H), tweets(B, H) )
%   | then return 0.0760068744143967;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.04514647472950382;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.04054067546152519;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.08034833303035839;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.04126932998424623;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( accounttype(A, C), accounttype(B, C) )
%   then if ( tweets(A, D), tweets(B, D) )
%   | then return 0.038205230707555556;  // std dev = 0,496, 882,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=387 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0.010778315187231052;  // std dev = 0,396, 200,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.0338174133803715;  // std dev = 7,027, 217,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.02799842689093084;  // std dev = 7,038, 257,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=67 */
%   else if ( tweets(B, H), tweets(A, H) )
%   | then return 0.05885110169425813;  // std dev = 0,447, 950,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=687 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.035129929112934846;  // std dev = 6,768, 196,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=73 */
%   | | | else return 0.03218425428294496;  // std dev = 4,784, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( tweets(B, K) )
%   | | | then return 0.06282214181758339;  // std dev = 5,545, 164,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=123 */
%   | | | else return 0.0326637487348301;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Predicates from source: ['follows(account,account).', 'tweets(account,word).', 'accounttype(account,type).']

Starting fold 1

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.0951385498046875
   Generating paths time   = 2.4544966220855713
   Generating mappings time   = 0.38030123710632324
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.929945468902588


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.6741489350995105;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E) )
%   | | then return 0.6914822684328427;  // std dev = 5,083, 186,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=155 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.6743254056877455;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.6466104735610496;  // std dev = 4,165, 104,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=82 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.4784879181503553;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.411340424461211;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.27305233896335274;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.39346050779980407;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.3307785570784371;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.5710724153273298;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E) )
%   | | then return 0.5851860008555347;  // std dev = 5,083, 186,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=155 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.5712162483177855;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.5485910215626644;  // std dev = 4,165, 104,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=82 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.4097721505855968;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.3535696551594692;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.23646268543282778;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.338531129603031;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.285568642327199;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.4512435619327034;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.36125983910675685;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.4513458120271794;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.47556995274276365;  // std dev = 5,556, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.33369505756429935;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.29109298178568693;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.19913266888182868;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.279529549690809;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.23823357326061928;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.34186067487994326;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.27376284711295445;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.341931788493287;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.3602586273661833;  // std dev = 5,555, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.2609563908813374;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.23106074697924653;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.16353968810078834;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.22281618162634986;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.19282263718871098;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.25669902460092275;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.20543958600067114;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.2567538179652806;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.2706759768040494;  // std dev = 5,555, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.19895351273958883;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.17868602304923167;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.1315347064587645;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17307332149719803;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.15237384171951923;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.1947106138991617;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.15470854893888622;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.19475804637965502;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.2058960924410086;  // std dev = 5,556, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.14983842601232922;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.1359846369039915;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.10408113184603936;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13221743990615356;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.11833688788051494;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.15009197618885542;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.11751438136934379;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1501358888432271;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.15952979086035463;  // std dev = 5,557, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.1124137828639299;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.10259614001232237;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.08135883703290667;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10003927615760798;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.09082271625830698;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.11757117851657858;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.09011654497166519;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.11761290648056262;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.12584154854819457;  // std dev = 5,558, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.08437190416787302;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.0770906117302509;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.06303532843181668;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07530907470041806;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.06916822540001188;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.09339938469898823;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.06971293295348194;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.09343926327938991;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.10081880242452367;  // std dev = 5,558, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.06346392332709418;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.05783605074476893;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.04852903462079508;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.056554656810777565;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.05241561083794397;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.07507193744122641;  // std dev = 4,332, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.054332691376095574;  // std dev = 3,425, 60,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07510995435649598;  // std dev = 4,517, 136,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=111 */
%   | | | else return 0.08181835431360208;  // std dev = 5,559, 230,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=193 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04786477453005066;  // std dev = 11,788, 590,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=366 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.043378431891933175;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.03719200854354363;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.042428307596784114;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.03959469336651546;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */


Results
   AUC ROC   = 0.499603
   AUC PR    = 0.506419
   CLL	      = -0.700257
   Precision = 0.493208 at threshold = 0.5
   Recall    = 0.139841
   F1        = 0.2179


Total learning time: 185.371 seconds
Total inference time: 4.011 seconds
AUC ROC: 0.499603


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [5.083, 31, 155], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [4.165, 22, 82]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [5.083, 31, 155], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [4.165, 22, 82]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.556, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.555, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.555, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.556, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.557, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.558, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.558, 37, 193]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.517, 25, 111], 'true,true': [4.332, 23, 102], 'false,true': [11.788, 224, 366], 'false,false,true,true': [7.621, 105, 130], 'false,false,false,false': [34.736, 2553, 2288], 'false,false,true,false': [22.973, 1272, 902], 'true,false,true': [3.425, 16, 44], 'false,false,false,true': [20.473, 783, 902], 'true,false,false,false': [5.559, 37, 193]}]]
[{'': [0.1497030642191583, 0.24966436990654597], 'false': [0.23551852915828025, 0.24924505749263529], 'true,false,false': [0.15003243944637018, 0.16678994082840345], 'false,false,true': [0.24717066545948788, 0.24275856932606452], 'true,false': [0.13888888888889453, 0.1574826388888944], 'false,false,false': [0.24875309283345484, 0.24925086240692912], 'false,false': [0.24487251263554935, 0.24987487284185328], 'true': [0.15014400000000275, 0.14957349732196557]}, {'': [0.14962131404441334, 0.24883856102625368], 'false': [0.23551852915828222, 0.24875991844314208], 'true,false,false': [0.150032439446368, 0.1667899408284047], 'false,false,true': [0.24717066545948277, 0.2427585693260454], 'true,false': [0.13888888888889114, 0.15741972348496128], 'false,false,false': [0.24875309283343308, 0.2492508624070121], 'false,false': [0.24439628442258418, 0.24965959075743327], 'true': [0.15014399999999836, 0.14946782622212146]}, {'': [0.14954119862974086, 0.24803176750714187], 'false': [0.23551852915827856, 0.24828959678202064], 'true,false,false': [0.15003243944636716, 0.13421566020040024], 'false,false,true': [0.24717066545948357, 0.24275856932604795], 'true,false': [0.19555555555555557, 0.14022995884369352], 'false,false,false': [0.2487530928334144, 0.24925086240695823], 'false,false': [0.24393345588264095, 0.24944896950296616], 'true': [0.15014399999999944, 0.1493642651896095]}, {'': [0.14903621490220967, 0.24744320819451845], 'false': [0.2355185291582838, 0.24793915465925717], 'true,false,false': [0.15003243944636666, 0.13416157432428952], 'false,false,true': [0.24717066545948196, 0.24275856932605722], 'true,false': [0.19555555555555576, 0.14013737451598113], 'false,false,false': [0.24875309283343547, 0.2492508624069467], 'false,false': [0.24359033139748992, 0.2492946437347915], 'true': [0.1501439999999988, 0.1487111304278521]}, {'': [0.14876258450768026, 0.24709949866833994], 'false': [0.23551852915829138, 0.24772707077250733], 'true,false,false': [0.1500324394463672, 0.1341734524205329], 'false,false,true': [0.2471706654594848, 0.2427585693260312], 'true,false': [0.1955555555555553, 0.14011166968089042], 'false,false,false': [0.24875309283343341, 0.24925086240694522], 'false,false': [0.24338469587180656, 0.24920440463808538], 'true': [0.1501440000000001, 0.1483572127256175]}, {'': [0.1486372991699152, 0.24692615839581217], 'false': [0.2355185291582893, 0.24761644519467715], 'true,false,false': [0.15003243944636602, 0.13421164449900624], 'false,false,true': [0.24717066545948385, 0.24275856932605255], 'true,false': [0.19555555555555565, 0.1401193781068431], 'false,false,false': [0.2487530928334181, 0.2492508624069743], 'false,false': [0.2432785777192975, 0.24915924168556813], 'true': [0.1501440000000001, 0.1481951520707159]}, {'': [0.14858156068408532, 0.24684561988367912], 'false': [0.2355185291582893, 0.24756401371435433], 'true,false,false': [0.1500324394463667, 0.1342548670079605], 'false,false,true': [0.24717066545948413, 0.24275856932604142], 'true,false': [0.19555555555555537, 0.14013817765961556], 'false,false,false': [0.24875309283343133, 0.2492508624069855], 'false,false': [0.24322867872835813, 0.24913860897257736], 'true': [0.15014399999999992, 0.1481230368266955]}, {'': [0.14855612223917372, 0.24680950457740297], 'false': [0.2355185291582878, 0.2475405194720807], 'true,false,false': [0.15003243944636682, 0.13429497420015868], 'false,false,true': [0.24717066545948577, 0.2427585693260456], 'true,false': [0.19555555555555554, 0.14015858655128835], 'false,false,false': [0.248753092833427, 0.2492508624069693], 'false,false': [0.24320636439698706, 0.2491295619791651], 'true': [0.15014400000000006, 0.14809011078166606]}, {'': [0.14854400640258453, 0.24679338521926175], 'false': [0.23551852915828447, 0.24753029979763674], 'true,false,false': [0.15003243944636685, 0.13432970313466486], 'false,false,true': [0.2471706654594839, 0.2427585693260419], 'true,false': [0.19555555555555554, 0.1401773160547024], 'false,false,false': [0.2487530928334325, 0.2492508624069494], 'false,false': [0.2431965986709733, 0.2491256205752304], 'true': [0.15014400000000017, 0.1480744190711997]}, {'': [0.1485379476722156, 0.24678607667627678], 'false': [0.23551852915828714, 0.24752591437137103], 'true,false,false': [0.1500324394463668, 0.13435898202455746], 'false,false,true': [0.24717066545948335, 0.24275856932604545], 'true,false': [0.19555555555555557, 0.1401935075321413], 'false,false,false': [0.24875309283343058, 0.2492508624069916], 'false,false': [0.24319234230719455, 0.24912387718938828], 'true': [0.15014399999999992, 0.14806656611454802]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.6748458498000524;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(B, D), languages(A, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( workemployer(B, F), locale(B, G) )
%   | | | then return 0.6786617556123303;  // std dev = 4,793, 156,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=128 */
%   | | | else return 0.49135356830414206;  // std dev = 7,756, 259,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=164 */
%   | | else if ( educationschool(A, H), educationtype(B, I) )
%   | | | then return 0.10567368757475913;  // std dev = 4,337, 101,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | | | else return 0.5203110972616737;  // std dev = 4,069, 74,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=49 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.411340424461211;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.27305233896335274;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.39346050779980407;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.3307785570784371;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.571640421062997;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(A, D), languages(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( workemployer(B, F), educationconcentration(B, G) )
%   | | | then return 0.6144148967112901;  // std dev = 3,439, 98,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=84 */
%   | | | else return 0.4364527176396914;  // std dev = 8,441, 317,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=208 */
%   | | else if ( birthday(B, H), locale(B, I) )
%   | | | then return 0.4332629998124024;  // std dev = 4,319, 82,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=51 */
%   | | | else return 0.07197652889112173;  // std dev = 4,040, 93,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.3535696551594692;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.23646268543282778;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.338531129603031;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.285568642327199;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.4516473328478219;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(B, D), languages(A, D) )
%   | then if ( educationschool(B, E), gender(B, F) )
%   | | then if ( workemployer(B, G), locale(B, H) )
%   | | | then return 0.463079103407885;  // std dev = 5,451, 192,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=153 */
%   | | | else return 0.30902950093295906;  // std dev = 8,541, 311,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=184 */
%   | | else if ( educationtype(B, I), educationschool(A, J) )
%   | | | then return -0.12132847618632554;  // std dev = 1,661, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | | else return 0.3795996128977809;  // std dev = 2,905, 40,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | else if ( languages(A, K) )
%   | | then if ( languages(B, L) )
%   | | | then return 0.29109298178568693;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.19913266888182868;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, M) )
%   | | | then return 0.279529549690809;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.23823357326061928;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.3421415148623633;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(A, D), languages(B, D) )
%   | then if ( educationschool(B, E), gender(B, F) )
%   | | then if ( workenddate(B, G), workstartdate(A, H) )
%   | | | then return 0.2215981918697808;  // std dev = 7,350, 249,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=152 */
%   | | | else return 0.3490022542257331;  // std dev = 6,908, 254,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=185 */
%   | | else if ( educationtype(B, I) )
%   | | | then return -0.06894466190339855;  // std dev = 2,290, 56,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | | else return 0.35316642686477057;  // std dev = 2,411, 31,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.23106074697924653;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.16353968810078834;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.22281618162634986;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.19282263718871098;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.2569154679000514;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(A, D), languages(B, D) )
%   | then if ( educationschool(B, E), educationyear(B, F) )
%   | | then if ( educationyear(A, F), gender(B, G) )
%   | | | then return 0.284090496837939;  // std dev = 6,997, 269,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=199 */
%   | | | else return 0.14283689230473726;  // std dev = 6,869, 219,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=129 */
%   | | else if ( birthday(B, H), educationtype(A, I) )
%   | | | then return 0.2650878939069442;  // std dev = 2,236, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return -0.029953681281860118;  // std dev = 3,195, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.17868602304923167;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.1315347064587645;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.17307332149719803;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.15237384171951923;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.19420111819191727;  // std dev = 0,387, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else return 0.1951025266426209;  // std dev = 0,387, 426,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=348 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( educationclasses(B, F) )
%   | | then return 0.31098271057885585;  // std dev = 0,295, 59,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | else if ( educationschool(B, G), location(B, H) )
%   | | | then return 0.16109799837703412;  // std dev = 8,741, 370,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=243 */
%   | | | else return 0.05519113111241439;  // std dev = 5,496, 161,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=70 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.1359846369039915;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.10408113184603936;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13221743990615356;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.11833688788051494;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.14972355315775776;  // std dev = 0,387, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else return 0.15042456155765654;  // std dev = 0,387, 426,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=348 */
%   else if ( languages(B, E), languages(A, E) )
%   | then if ( educationdegree(B, F), location(B, G) )
%   | | then return -0.1534342923981586;  // std dev = 0,357, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( educationdegree(A, H), lastname(A, I) )
%   | | | then return -0.5900891759414133;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12802657647806112;  // std dev = 10,328, 563,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=361 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.10259614001232237;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.08135883703290667;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.10003927615760798;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.09082271625830698;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.11773613812556523;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(A, D), languages(B, D) )
%   | then if ( educationschool(B, E), workemployer(B, F) )
%   | | then if ( worklocation(A, G), lastname(B, H) )
%   | | | then return -0.09567256066758555;  // std dev = 1,849, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.16934986507600303;  // std dev = 5,119, 186,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=149 */
%   | | else if ( educationconcentration(A, I), workposition(B, J) )
%   | | | then return -0.100216639826841;  // std dev = 3,469, 56,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.07997998887973809;  // std dev = 8,136, 331,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=188 */
%   | else if ( languages(A, K) )
%   | | then if ( languages(B, L) )
%   | | | then return 0.0770906117302509;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.06303532843181668;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, M) )
%   | | | then return 0.07530907470041806;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.06916822540001188;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.09310822346866612;  // std dev = 0,387, 125,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else return 0.09368875164416612;  // std dev = 0,387, 426,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=348 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( educationclasses(B, F) )
%   | | then return 0.18637810637900723;  // std dev = 0,292, 59,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | else if ( birthday(B, G), educationyear(A, H) )
%   | | | then return 0.0954362304988018;  // std dev = 7,177, 266,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=177 */
%   | | | else return 0.010824225826754451;  // std dev = 7,184, 265,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=136 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.05783605074476893;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.04852903462079508;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.056554656810777565;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.05241561083794397;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.07522227993044953;  // std dev = 0,387, 551,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=450 */
%   else if ( languages(B, D), languages(A, D) )
%   | then if ( workstartdate(A, E), educationtype(B, F) )
%   | | then if ( educationyear(A, G), educationyear(B, G) )
%   | | | then return 0.08978118382160723;  // std dev = 6,366, 221,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=153 */
%   | | | else return -0.05194656369205535;  // std dev = 6,088, 183,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=84 */
%   | | else if ( location(B, H), educationschool(B, I) )
%   | | | then return 0.17157959611714121;  // std dev = 3,909, 116,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=94 */
%   | | | else return 0.004302515050166316;  // std dev = 3,519, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.043378431891933175;  // std dev = 7,621, 235,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=130 */
%   | | | else return 0.03719200854354363;  // std dev = 22,973, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.272 #pos=902 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.042428307596784114;  // std dev = 20,473, 1.685,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=902 */
%   | | | else return 0.03959469336651546;  // std dev = 34,736, 4.841,000 (wgt'ed) examples reached here.  /* #neg=2.553 #pos=2.288 */


Results
   AUC ROC   = 0.500496
   AUC PR    = 0.507385
   CLL	      = -0.700184
   Precision = 0.495088 at threshold = 0.5
   Recall    = 0.133865
   F1        = 0.210746


Total learning time: 228.32 seconds
Total inference time: 3.961 seconds
AUC ROC: 0.500496


Refined model AUC ROC: 0.500496


Dataset: 48_twitter_facebook, Fold: 1, Type: transfer, Time: 05:03:53
{'Learning time': 413.69100000000003, 'AUC PR': 0.507385, 'F1': 0.210746, 'AUC ROC': 0.500496, 'CLL': -0.700184, 'Inference time': 3.961, 'Mapping results': {'Generating mappings time': 0.38030123710632324, 'Generating paths time': 2.4544966220855713, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.0951385498046875, 'Max mapping': 24389, 'Total time': 2.929945468902588}, 'Parameter Learning results': {'Learning time': 185.371, 'AUC PR': 0.506419, 'F1': 0.2179, 'AUC ROC': 0.499603, 'CLL': -0.700257, 'Inference time': 4.011, 'Precision': [0.493208, 0.5], 'Recall': 0.139841}, 'Precision': [0.495088, 0.5], 'Recall': 0.133865}


Start learning from scratch in target domain

Target train facts examples: 3318
Target train pos examples: 5038
Target train neg examples: 5038

Target test facts examples: 3281
Target test pos examples: 7530
Target test neg examples: 7530

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( educationschool(A, D), gender(B, E) )
%   | then return 0.6000272576039374;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else return 0.3869259135167738;  // std dev = 0,499, 1.112,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=588 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( hometown(B, G), gender(A, H) )
%   | | then return 0.6411678030240394;  // std dev = 0,412, 106,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=83 */
%   | | else if ( worklocation(A, I), workstartdate(B, J) )
%   | | | then return 0.28972788246793296;  // std dev = 4,828, 95,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=41 */
%   | | | else return 0.4610474858241479;  // std dev = 9,088, 345,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=208 */
%   | else if ( educationtype(B, K), gender(B, L) )
%   | | then if ( educationschool(B, M), educationschool(A, M) )
%   | | | then return 0.4032925739503966;  // std dev = 19,040, 1.462,000 (wgt'ed) examples reached here.  /* #neg=665 #pos=797 */
%   | | | else return 0.14565368253589178;  // std dev = 23,224, 2.633,000 (wgt'ed) examples reached here.  /* #neg=1.876 #pos=757 */
%   | | else if ( languages(B, N), gender(A, P) )
%   | | | then return 0.6331489350995098;  // std dev = 5,282, 160,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=124 */
%   | | | else return 0.33750116182015505;  // std dev = 24,828, 2.470,000 (wgt'ed) examples reached here.  /* #neg=1.286 #pos=1.184 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( gender(B, E), educationschool(A, D) )
%   | then return 0.5103982569917702;  // std dev = 0,438, 1.693,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=1.256 */
%   | else return 0.33302733346304514;  // std dev = 0,499, 1.112,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=588 */
%   else if ( location(B, F), location(A, F) )
%   | then if ( hometown(B, G), gender(A, H) )
%   | | then return 0.5441393221165312;  // std dev = 0,412, 106,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=83 */
%   | | else if ( worklocation(A, I), educationyear(B, J) )
%   | | | then return 0.2861147491978369;  // std dev = 6,433, 167,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=80 */
%   | | | else return 0.41165957763459365;  // std dev = 8,028, 273,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=169 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then if ( workenddate(B, L), worklocation(B, M) )
%   | | | then return 0.4881295337687546;  // std dev = 8,076, 303,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=208 */
%   | | | else return 0.3199749063172718;  // std dev = 17,266, 1.193,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=618 */
%   | | else if ( educationschool(A, N), educationtype(B, P) )
%   | | | then return 0.0010430853676808708;  // std dev = 13,554, 1.354,000 (wgt'ed) examples reached here.  /* #neg=1.134 #pos=220 */
%   | | | else return 0.28794016408717893;  // std dev = 30,946, 3.875,000 (wgt'ed) examples reached here.  /* #neg=2.059 #pos=1.816 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(B, D) )
%   then if ( location(B, E), workemployer(A, C) )
%   | then return 0.5365197466206386;  // std dev = 0,350, 406,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=348 */
%   | else if ( educationschool(A, D), gender(B, F) )
%   | | then return 0.37804938399858473;  // std dev = 0,453, 1.355,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=965 */
%   | | else if ( educationtype(A, G), gender(A, H) )
%   | | | then return 0.011208713163662176;  // std dev = 8,135, 340,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=90 */
%   | | | else return 0.3729232853561663;  // std dev = 12,835, 704,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=441 */
%   else if ( lastname(B, I), lastname(A, I) )
%   | then return 0.7447174818511147;  // std dev = 0,421, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( educationtype(B, J), gender(B, K) )
%   | | then if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.2918272148218523;  // std dev = 21,190, 1.845,000 (wgt'ed) examples reached here.  /* #neg=817 #pos=1.028 */
%   | | | else return 0.104099889784746;  // std dev = 23,186, 2.695,000 (wgt'ed) examples reached here.  /* #neg=1.916 #pos=779 */
%   | | else if ( languages(B, M), birthday(B, N) )
%   | | | then return 0.5962821980842649;  // std dev = 2,670, 72,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=64 */
%   | | | else return 0.24555960952280972;  // std dev = 25,373, 2.588,000 (wgt'ed) examples reached here.  /* #neg=1.336 #pos=1.252 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationyear(B, D), educationyear(A, D) )
%   | then return 0.4525810781004518;  // std dev = 0,317, 327,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=290 */
%   | else return 0.3156106866665553;  // std dev = 0,455, 224,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=160 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( location(B, F), workenddate(B, G) )
%   | | then if ( workenddate(A, G), workposition(A, H) )
%   | | | then return 0.4276217446003042;  // std dev = 5,239, 191,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=155 */
%   | | | else return 0.3004691087826473;  // std dev = 15,011, 1.076,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=733 */
%   | | else if ( educationyear(A, I), educationyear(B, I) )
%   | | | then return 0.2905590113970684;  // std dev = 11,330, 576,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=374 */
%   | | | else return 0.18793713696820066;  // std dev = 18,162, 1.351,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=728 */
%   | else if ( educationschool(A, J), educationtype(B, K) )
%   | | then return -0.017881370087027525;  // std dev = 0,376, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.349 #pos=290 */
%   | | else if ( languages(B, L), gender(B, M) )
%   | | | then return 0.2956515989263989;  // std dev = 13,790, 839,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=493 */
%   | | | else return 0.19691507602105707;  // std dev = 30,770, 3.853,000 (wgt'ed) examples reached here.  /* #neg=2.038 #pos=1.815 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workenddate(B, C), worklocation(B, D) )
%   then if ( educationclasses(B, E), birthday(B, F) )
%   | then return 0.4443584903076757;  // std dev = 0,264, 132,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | else if ( worklocation(A, D), gender(B, G) )
%   | | then return 0.3084935464982999;  // std dev = 0,400, 402,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=311 */
%   | | else if ( location(B, H), educationconcentration(B, I) )
%   | | | then return 0.2390334797087683;  // std dev = 13,872, 931,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=617 */
%   | | | else return 0.13992262749627515;  // std dev = 15,040, 1.006,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=513 */
%   else if ( hometown(B, J), location(B, K) )
%   | then return 0.24493828247110497;  // std dev = 0,440, 778,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=458 */
%   | else if ( educationtype(B, L), workemployer(A, M) )
%   | | then if ( workemployer(B, M), location(B, N) )
%   | | | then return 0.3342589780393876;  // std dev = 3,721, 109,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=94 */
%   | | | else return 0.03795728968452442;  // std dev = 17,087, 1.501,000 (wgt'ed) examples reached here.  /* #neg=970 #pos=531 */
%   | | else if ( languages(B, P), birthday(B, Q) )
%   | | | then return 0.20975265637174195;  // std dev = 9,728, 449,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=261 */
%   | | | else return 0.135344531129254;  // std dev = 33,644, 4.768,000 (wgt'ed) examples reached here.  /* #neg=2.637 #pos=2.131 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationyear(A, D), educationyear(B, D) )
%   | then if ( location(A, E), languages(B, F) )
%   | | then return 0.26987318588353654;  // std dev = 0,396, 571,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=450 */
%   | | else return 0.19678030135026192;  // std dev = 0,434, 787,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=560 */
%   | else if ( hometown(B, G), hometown(A, H) )
%   | | then return 0.3715095379871112;  // std dev = 0,379, 117,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=98 */
%   | | else if ( lastname(B, I), lastname(A, J) )
%   | | | then return 0.3480468662985514;  // std dev = 3,102, 66,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=54 */
%   | | | else return 0.10765101019283418;  // std dev = 22,032, 2.090,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=1.188 */
%   else if ( educationschool(A, K), educationtype(B, L) )
%   | then return -0.018032036009212216;  // std dev = 0,384, 1.727,000 (wgt'ed) examples reached here.  /* #neg=1.371 #pos=356 */
%   | else if ( lastname(B, M), lastname(A, M) )
%   | | then return 0.5302141531404958;  // std dev = 0,235, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else if ( worklocation(B, N), workenddate(B, P) )
%   | | | then return 0.2079933016602655;  // std dev = 12,546, 679,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=405 */
%   | | | else return 0.12225401245927325;  // std dev = 31,159, 4.002,000 (wgt'ed) examples reached here.  /* #neg=2.112 #pos=1.890 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then return 0.14994470450438036;  // std dev = 0,423, 1.711,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=1.130 */
%   else if ( educationyear(A, D), location(A, E) )
%   | then if ( educationconcentration(B, F), educationconcentration(A, F) )
%   | | then if ( worklocation(A, G), location(B, H) )
%   | | | then return 0.06296354883914916;  // std dev = 5,759, 161,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=84 */
%   | | | else return 0.23069706761310466;  // std dev = 5,819, 175,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=121 */
%   | | else if ( educationtype(B, I) )
%   | | | then return -0.008927198465866315;  // std dev = 18,069, 1.763,000 (wgt'ed) examples reached here.  /* #neg=1.126 #pos=637 */
%   | | | else return 0.07820935741575143;  // std dev = 16,435, 1.111,000 (wgt'ed) examples reached here.  /* #neg=584 #pos=527 */
%   | else if ( hometown(B, J), gender(A, K) )
%   | | then if ( hometown(A, J) )
%   | | | then return 0.5004221523803862;  // std dev = 2,579, 89,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=83 */
%   | | | else return 0.14517682524193407;  // std dev = 12,094, 690,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=368 */
%   | | else if ( location(B, L), worklocation(B, M) )
%   | | | then return 0.1493890528800062;  // std dev = 13,770, 885,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=534 */
%   | | | else return 0.0785571827581216;  // std dev = 28,551, 3.491,000 (wgt'ed) examples reached here.  /* #neg=1.937 #pos=1.554 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(B, C), gender(B, D) )
%   then if ( languages(B, E), educationschool(B, F) )
%   | then return 0.12887543529735274;  // std dev = 0,446, 1.918,000 (wgt'ed) examples reached here.  /* #neg=683 #pos=1.235 */
%   | else if ( workemployer(A, G), educationtype(B, H) )
%   | | then return 0.029031246330979834;  // std dev = 0,424, 1.028,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=500 */
%   | | else if ( gender(A, D), hometown(B, I) )
%   | | | then return 0.200659879091556;  // std dev = 6,941, 263,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=170 */
%   | | | else return 0.07898128972490692;  // std dev = 20,289, 1.870,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=947 */
%   else if ( lastname(B, J), hometown(A, K) )
%   | then if ( languages(A, L), locale(A, M) )
%   | | then return 0.016978981222067858;  // std dev = 0,444, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else return 0.3012651255474254;  // std dev = 0,428, 105,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=74 */
%   | else if ( educationschool(A, N), educationtype(B, P) )
%   | | then return 0.010925531350190958;  // std dev = 0,436, 1.924,000 (wgt'ed) examples reached here.  /* #neg=1.188 #pos=736 */
%   | | else if ( worklocation(A, Q), languages(B, R) )
%   | | | then return 0.341339714176451;  // std dev = 2,059, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return 0.05908261926830961;  // std dev = 26,544, 2.900,000 (wgt'ed) examples reached here.  /* #neg=1.570 #pos=1.330 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationyear(A, C), educationyear(B, C) )
%   then if ( workemployer(B, D), workemployer(A, D) )
%   | then return 0.1848362018886712;  // std dev = 0,317, 327,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=290 */
%   | else if ( educationschool(B, E), educationschool(A, E) )
%   | | then return 0.11092552489277185;  // std dev = 0,441, 1.085,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=768 */
%   | | else return -0.03443418954824209;  // std dev = 0,415, 299,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=72 */
%   else if ( educationschool(A, F), educationyear(A, G) )
%   | then if ( educationclasses(B, H), hometown(B, I) )
%   | | then return 0.2953335341894371;  // std dev = 0,320, 57,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=49 */
%   | | else if ( hometown(B, J), educationconcentration(A, K) )
%   | | | then return -0.10409803044235617;  // std dev = 6,352, 268,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=81 */
%   | | | else return 0.02580563970961768;  // std dev = 29,299, 4.043,000 (wgt'ed) examples reached here.  /* #neg=2.265 #pos=1.778 */
%   | else if ( hometown(B, L), hometown(A, L) )
%   | | then return 0.34337481887487237;  // std dev = 0,282, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else if ( workemployer(B, M), educationconcentration(A, N) )
%   | | | then return 0.19751548311790504;  // std dev = 4,802, 125,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=90 */
%   | | | else return 0.06308069940939705;  // std dev = 29,670, 3.811,000 (wgt'ed) examples reached here.  /* #neg=1.957 #pos=1.854 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationschool(B, D), educationschool(A, D) )
%   | then return 0.10070632143499336;  // std dev = 0,366, 437,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=360 */
%   | else if ( workposition(B, E) )
%   | | then return 0.3861431669622546;  // std dev = 0,332, 54,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | else return 0.161831528252678;  // std dev = 0,379, 60,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   else if ( workemployer(A, F), educationtype(B, G) )
%   | then if ( educationschool(B, H), educationschool(A, H) )
%   | | then if ( workenddate(B, I), workposition(A, J) )
%   | | | then return 0.11107440713028398;  // std dev = 9,311, 435,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=304 */
%   | | | else return 0.02536318110097627;  // std dev = 15,745, 1.095,000 (wgt'ed) examples reached here.  /* #neg=495 #pos=600 */
%   | | else return -0.09463107791323364;  // std dev = 0,328, 821,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=112 */
%   | else if ( lastname(B, K), lastname(A, K) )
%   | | then return 0.3414655170313637;  // std dev = 0,086, 73,000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | else if ( hometown(B, L), location(B, M) )
%   | | | then return 0.10597191719092768;  // std dev = 11,330, 658,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=400 */
%   | | | else return 0.0397185118303142;  // std dev = 38,303, 6.443,000 (wgt'ed) examples reached here.  /* #neg=3.344 #pos=3.099 */


Results
   AUC ROC   = 0.629584
   AUC PR    = 0.609025
   CLL	      = -0.681647
   Precision = 0.652071 at threshold = 0.5
   Recall    = 0.257105
   F1        = 0.368797


Total learning time: 387.553 seconds
Total inference time: 3.826 seconds
AUC ROC: 0.629584


Dataset: 48_twitter_facebook, Fold: 1, Type: scratch, Time: 05:10:25
{'Learning time': 387.553, 'AUC PR': 0.609025, 'F1': 0.368797, 'AUC ROC': 0.629584, 'CLL': -0.681647, 'Inference time': 3.826, 'Precision': [0.652071, 0.5], 'Recall': 0.257105}


Starting fold 2

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.0655052661895752
   Generating paths time   = 2.367703676223755
   Generating mappings time   = 0.30672264099121094
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 1.1920928955078125e-06
   Total time   = 2.739938974380493


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- location(A, C), location(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- location(A, C), location(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- location(A, C), location(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- location(A, C), location(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- location(A, C), location(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- location(A, C), location(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- location(A, C), location(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- location(A, C), location(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- location(A, C), location(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- location(A, C), location(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.31968739663797385;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E) )
%   | | then return 0.6681489350995113;  // std dev = 3,923, 100,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=81 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.6007231925252555;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.6064168334828799;  // std dev = 9,031, 433,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=324 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.3490580260086042;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.25814893509951237;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.32506528965631165;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.28704801766831495;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.3419151688657409;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.27615825449321707;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E) )
%   | | then return 0.5661803447677477;  // std dev = 3,923, 100,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=81 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.5109703640121795;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.5156491964874221;  // std dev = 9,031, 433,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=324 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.30105245327432206;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0.22373365448410557;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.28072263380238743;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.24839736106064014;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.2950058136863098;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.2308014560359859;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.49490647463819093;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.4081643382615538;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.41732156173039936;  // std dev = 9,806, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.25039982778742514;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.18886832215749733;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.23440989877549276;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.208708246529464;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.24565797186923022;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.18732575730991188;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.3748265397633145;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.31215532000386564;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.3184325159823906;  // std dev = 9,806, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.20175371398639322;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.15570029437174385;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.18999855062602075;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.17079506487477797;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.19828256843504885;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.14851610515663913;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.28170758031587906;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.23457163716775;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.23915928496848252;  // std dev = 9,805, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15859470946768384;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.12582628229372106;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.1503947673691775;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1367669645222359;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.15618350942368273;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.11572907065138296;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.21474888616781382;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.1763199576589565;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.18004165760958799;  // std dev = 9,806, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.12252172343746855;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.10008916917880546;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.11700044557859544;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.10770383432076236;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.12090222048818983;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.0891028151342391;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.16705741899756704;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.13362328677440652;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.13688627277996537;  // std dev = 9,806, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.09358314552888458;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.07866279780602585;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.0899415048821927;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.08378375669388442;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.09251428424093681;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.068051703159702;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.1325067416627554;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.10230612672307982;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.10527990720405754;  // std dev = 9,806, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.07097315836946715;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.0612726086074225;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.06859560420751909;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.0646101301455702;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.07027188668861858;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.0516986053250255;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.1068672148950393;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07909579898645284;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.08184248402765866;  // std dev = 9,806, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.0535933606870702;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04741549148811449;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.052046956214990794;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04952049223788424;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.05313263995085083;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.03913845688076023;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.0873839911487977;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.061670106851951234;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.06420922950917325;  // std dev = 9,807, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04036432971572743;  // std dev = 5,243, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.03651788997287889;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.03935905952205851;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.03779321550066484;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.04006003280128683;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */


Results
   AUC ROC   = 0.517211
   AUC PR    = 0.529881
   CLL	      = -0.699351
   Precision = 0.60733 at threshold = 0.5
   Recall    = 0.088434
   F1        = 0.154387


Total learning time: 111.99199999999999 seconds
Total inference time: 3.888 seconds
AUC ROC: 0.517211


Structure after Parameter Learning
[['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [3.923, 19, 81], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.031, 109, 324]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [3.923, 19, 81], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.031, 109, 324]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.806, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.806, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.805, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.806, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.806, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.806, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.806, 127, 399]}], ['edge(A, B)', {'': 'location(A, C), location(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [4.394, 26, 75], 'true,true': [1.797, 7, 6], 'false,true': [5.243, 56, 54], 'false,false,true,true': [2.683, 18, 12], 'false,false,false,false': [32.816, 2226, 2086], 'false,false,true,false': [14.12, 427, 374], 'true,false,true': [0.926, 1, 6], 'false,false,false,true': [14.615, 498, 374], 'true,false,false,false': [9.807, 127, 399]}]]
[{'': [0.1869190581186749, 0.2492961266138899], 'false': [0.24991735537190077, 0.24927910205086332], 'true,false,false': [0.19115772963434863, 0.18836305063230668], 'false,false,true': [0.23999999999999952, 0.2489054724041765], 'true,false': [0.153900000000001, 0.18889660396414387], 'false,false,false': [0.24494465954042902, 0.24973646483381656], 'false,false': [0.2487397927192407, 0.24935163751709008], 'true': [0.24852071005917165, 0.1839007254525355]}, {'': [0.18622681823275986, 0.249186186389692], 'false': [0.24991735537189896, 0.24916874128828193], 'true,false,false': [0.19115772963435124, 0.18836305063230124], 'false,false,true': [0.24000000000000032, 0.24890547240419386], 'true,false': [0.1538999999999981, 0.1888949896309506], 'false,false,false': [0.24494465954043795, 0.24973646483384385], 'false,false': [0.24869698952665945, 0.24923438058937064], 'true': [0.24852071005917153, 0.18372648037750794]}, {'': [0.1855403116234803, 0.24908032454687604], 'false': [0.2499173553719017, 0.24906248276023008], 'true,false,false': [0.19115772963434996, 0.18281186506811326], 'false,false,true': [0.24000000000000002, 0.24890547240419772], 'true,false': [0.12244897959183684, 0.18416758655493012], 'false,false,false': [0.2449446595404478, 0.24973646483387252], 'false,false': [0.24865614705689393, 0.24912145974510164], 'true': [0.24852071005917165, 0.1835544005215793]}, {'': [0.18514197733382265, 0.2490003447726593], 'false': [0.24991735537190013, 0.24898219304816166], 'true,false,false': [0.1911577296343487, 0.18279117268412018], 'false,false,true': [0.24000000000000016, 0.248905472404186], 'true,false': [0.12244897959183669, 0.18414422037539882], 'false,false,false': [0.24494465954043954, 0.24973646483390352], 'false,false': [0.2486249103006859, 0.24903615067073356], 'true': [0.24852071005917148, 0.18349902496750087]}, {'': [0.18494727586518692, 0.24895067491919648], 'false': [0.249917355371901, 0.2489323177516085], 'true,false,false': [0.19115772963435013, 0.18278940576611596], 'false,false,true': [0.23999999999999982, 0.24890547240418273], 'true,false': [0.12244897959183672, 0.18414025742706716], 'false,false,false': [0.24494465954044514, 0.24973646483384485], 'false,false': [0.2486049795183862, 0.24898318424043897], 'true': [0.2485207100591717, 0.18347958355395896]}, {'': [0.1848652318055686, 0.24892405225563466], 'false': [0.24991735537190146, 0.24890557687267936], 'true,false,false': [0.19115772963435002, 0.18279622234185378], 'false,false,true': [0.2399999999999998, 0.24890547240418406], 'true,false': [0.12244897959183668, 0.18414500358979496], 'false,false,false': [0.2449446595404385, 0.24973646483387843], 'false,false': [0.24859392707099703, 0.2489548087405805], 'true': [0.24852071005917173, 0.18347742858707716]}, {'': [0.18483305088753424, 0.24891118149752428], 'false': [0.24991735537190046, 0.24889264553378565], 'true,false,false': [0.19115772963434935, 0.1828058111647103], 'false,false,true': [0.23999999999999994, 0.24890547240419225], 'true,false': [0.12244897959183673, 0.1841526148285851], 'false,false,false': [0.24494465954045136, 0.24973646483384918], 'false,false': [0.2485884018062868, 0.24894110049764925], 'true': [0.24852071005917165, 0.1834816333855794]}, {'': [0.18482126059118026, 0.24890537451398467], 'false': [0.2499173553719015, 0.24888681024432519], 'true,false,false': [0.19115772963434927, 0.18281550983899345], 'false,false,true': [0.2399999999999999, 0.24890547240418576], 'true,false': [0.12244897959183675, 0.18416050745014312], 'false,false,false': [0.24494465954044198, 0.2497364648338449], 'false,false': [0.2485858412812303, 0.24893492091057648], 'true': [0.2485207100591717, 0.1834875315554672]}, {'': [0.1848176110183364, 0.24890287328991817], 'false': [0.2499173553719016, 0.2488842967723371], 'true,false,false': [0.19115772963434938, 0.18282427903761608], 'false,false,true': [0.23999999999999985, 0.24890547240419006], 'true,false': [0.12244897959183675, 0.18416768851209003], 'false,false,false': [0.2449446595404393, 0.2497364648338855], 'false,false': [0.2485847216343807, 0.2489322614176329], 'true': [0.24852071005917156, 0.18349333354598651]}, {'': [0.18481713931953878, 0.24890183182056758], 'false': [0.24991735537190127, 0.24888325037829712], 'true,false,false': [0.19115772963434954, 0.18283182030066297], 'false,false,true': [0.23999999999999996, 0.24890547240418234], 'true,false': [0.12244897959183675, 0.18417386673157876], 'false,false,false': [0.24494465954044817, 0.2497364648338608], 'false,false': [0.2485842561017795, 0.24893115480636865], 'true': [0.2485207100591715, 0.18349843481437644]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- location(A, C), location(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;false,false,true;languages(B, I).;true;true', '0;false;languages(B, G), languages(A, G).;true;true', '0;false,false,false;languages(B, J).;true;true', '0;false,false;languages(A, H).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- location(A, C), location(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;false,false,true;languages(B, I).;true;true', '1;false;languages(A, G), languages(B, G).;true;true', '1;false,false,false;languages(B, J).;true;true', '1;false,false;languages(A, H).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- location(A, C), location(B, C).;true;true', '2;true,false;languages(A, E), languages(B, F).;true;true', '2;true,false,false;languages(B, G).;true;true', '2;false,false,true;languages(B, J).;true;true', '2;false;languages(B, H), languages(A, H).;true;true', '2;false,false,false;languages(B, K).;true;true', '2;false,false;languages(A, I).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- location(A, C), location(B, C).;true;true', '3;true,false;languages(B, E), languages(A, F).;true;true', '3;true,false,false;languages(B, G).;true;true', '3;false,false,true;languages(B, J).;true;true', '3;false;languages(A, H), languages(B, H).;true;true', '3;false,false,false;languages(B, K).;true;true', '3;false,false;languages(A, I).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- location(A, C), location(B, C).;true;true', '4;true,false;languages(A, E), languages(B, F).;true;true', '4;true,false,false;languages(B, G).;true;true', '4;false,false,true;languages(B, J).;true;true', '4;false;languages(A, H), languages(B, H).;true;true', '4;false,false,false;languages(B, K).;true;true', '4;false,false;languages(A, I).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- location(A, C), location(B, C).;true;true', '5;true,false;languages(A, E), languages(B, F).;true;true', '5;true,false,false;languages(B, G).;true;true', '5;false,false,true;languages(B, J).;true;true', '5;false;languages(A, H), languages(B, H).;true;true', '5;false,false,false;languages(B, K).;true;true', '5;false,false;languages(A, I).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- location(A, C), location(B, C).;true;true', '6;true,false;languages(A, E), languages(B, F).;true;true', '6;true,false,false;languages(B, G).;true;true', '6;false,false,true;languages(B, J).;true;true', '6;false;languages(B, H), languages(A, H).;true;true', '6;false,false,false;languages(B, K).;true;true', '6;false,false;languages(A, I).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- location(A, C), location(B, C).;true;true', '7;true,false;languages(B, E), languages(A, F).;true;true', '7;true,false,false;languages(B, G).;true;true', '7;false,false,true;languages(B, J).;true;true', '7;false;languages(A, H), languages(B, H).;true;true', '7;false,false,false;languages(B, K).;true;true', '7;false,false;languages(A, I).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- location(A, C), location(B, C).;true;true', '8;true,false;languages(A, E), languages(B, F).;true;true', '8;true,false,false;languages(B, G).;true;true', '8;false,false,true;languages(B, J).;true;true', '8;false;languages(A, H), languages(B, H).;true;true', '8;false,false,false;languages(B, K).;true;true', '8;false,false;languages(A, I).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- location(A, C), location(B, C).;true;true', '9;true,false;languages(A, E), languages(B, F).;true;true', '9;true,false,false;languages(B, G).;true;true', '9;false,false,true;languages(B, J).;true;true', '9;false;languages(B, H), languages(A, H).;true;true', '9;false,false,false;languages(B, K).;true;true', '9;false,false;languages(A, I).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then return 0.6093081313900797;  // std dev = 0,432, 647,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=486 */
%   else if ( languages(B, D), languages(A, D) )
%   | then if ( educationdegree(B, E), hometown(A, F) )
%   | | then if ( educationschool(B, G), educationschool(A, H) )
%   | | | then return 0.16723984419042145;  // std dev = 3,427, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.5581489350995122;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( workemployer(A, I), educationconcentration(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5898562521726823;  // std dev = 2,837, 41,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=30 */
%   | else if ( languages(A, K) )
%   | | then if ( languages(B, L) )
%   | | | then return 0.25814893509951237;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.32506528965631165;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, M) )
%   | | | then return 0.28704801766831495;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.3419151688657409;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.22840324308067705;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0.5239625733403196;  // std dev = 0,429, 634,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=480 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( workenddate(A, F), birthday(B, G) )
%   | | then return 0.6562457959107505;  // std dev = 0,336, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( educationdegree(A, H), workenddate(B, I) )
%   | | | then return 0.6076580147465013;  // std dev = 1,485, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.17425649239275853;  // std dev = 4,192, 80,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.22373365448410557;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.28072263380238743;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.24839736106064014;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.2950058136863098;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then return 0.41319161594623227;  // std dev = 0,432, 647,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=486 */
%   else if ( languages(B, D), languages(A, D) )
%   | then if ( educationdegree(B, E), educationconcentration(B, F) )
%   | | then if ( workposition(A, G) )
%   | | | then return 0.5232906643751158;  // std dev = 0,825, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0013930158407294464;  // std dev = 2,050, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( birthday(A, H), educationconcentration(A, I) )
%   | | | then return 0.7040980356981373;  // std dev = 0,160, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.25348264595749004;  // std dev = 3,857, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.18886832215749733;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.23440989877549276;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.208708246529464;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.24565797186923022;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.0954645265065447;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0.320144843744392;  // std dev = 0,429, 634,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=480 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( workenddate(A, F), birthday(B, G) )
%   | | then return 0.4666036191339703;  // std dev = 0,320, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( location(A, H), birthday(B, I) )
%   | | | then return -0.15723566330106145;  // std dev = 0,788, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.20108107226904698;  // std dev = 4,192, 84,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=41 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.15570029437174385;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.18999855062602075;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.17079506487477797;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.19828256843504885;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.0730410029774767;  // std dev = 0,499, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0.2404521542886661;  // std dev = 0,429, 634,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=480 */
%   else if ( languages(A, E), languages(B, E) )
%   | then if ( workenddate(B, F), educationdegree(A, G) )
%   | | then return 0.38356655004196866;  // std dev = 0,349, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( location(B, H), educationdegree(A, I) )
%   | | | then return -0.18992699106472083;  // std dev = 0,741, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.14296733155335042;  // std dev = 4,046, 84,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.12582628229372106;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.1503947673691775;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.1367669645222359;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.15618350942368273;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then if ( educationyear(A, E), educationyear(B, F) )
%   | | then return -0.4059842471827176;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.4511586099601395;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( languages(A, G), languages(B, H) )
%   | | then return 0.28097554476379244;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.17981354886495543;  // std dev = 0,430, 627,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=474 */
%   else if ( languages(A, I), languages(B, I) )
%   | then return 0.11846547245360925;  // std dev = 0,427, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, J) )
%   | | then if ( languages(B, K) )
%   | | | then return 0.10008916917880546;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.11700044557859544;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, L) )
%   | | | then return 0.10770383432076236;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.12090222048818983;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.03839479582718118;  // std dev = 0,414, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.2142287319405522;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.12320477375697365;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.13918564941108041;  // std dev = 9,815, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.09239738268471716;  // std dev = 0,425, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.07866279780602585;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.0899415048821927;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.08378375669388442;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.09251428424093681;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return 0.029399868585749722;  // std dev = 0,414, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0.1666843793446895;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.09461574451115166;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.10695992651481777;  // std dev = 9,815, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.07166702182754582;  // std dev = 0,424, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.0612726086074225;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.06859560420751909;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.0646101301455702;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.07027188668861858;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.02248335837143676;  // std dev = 0,414, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.13223309995269425;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.07334672386211176;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.08308783366263846;  // std dev = 9,815, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.05539185567519166;  // std dev = 0,424, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.04741549148811449;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.052046956214990794;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04952049223788424;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.05313263995085083;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(A, C), location(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return 0.0171788274344214;  // std dev = 0,413, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0.10666151913800627;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( languages(B, G) )
%   | | | then return 0.05731669835614395;  // std dev = 4,394, 101,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=75 */
%   | | | else return 0.0651459467900459;  // std dev = 9,815, 526,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=399 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.04271726068039105;  // std dev = 0,424, 110,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=54 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.03651788997287889;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.03935905952205851;  // std dev = 14,120, 801,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=374 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.03779321550066484;  // std dev = 14,615, 872,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=374 */
%   | | | else return 0.04006003280128683;  // std dev = 32,816, 4.312,000 (wgt'ed) examples reached here.  /* #neg=2.226 #pos=2.086 */


Results
   AUC ROC   = 0.513514
   AUC PR    = 0.527258
   CLL	      = -0.70016
   Precision = 0.608974 at threshold = 0.5
   Recall    = 0.103463
   F1        = 0.176876


Total learning time: 110.65899999999999 seconds
Total inference time: 3.367 seconds
AUC ROC: 0.513514


Refined model AUC ROC: 0.513514


Dataset: 48_twitter_facebook, Fold: 2, Type: transfer, Time: 05:14:19
{'Learning time': 222.65099999999998, 'AUC PR': 0.527258, 'F1': 0.176876, 'AUC ROC': 0.513514, 'CLL': -0.70016, 'Inference time': 3.367, 'Mapping results': {'Generating mappings time': 0.30672264099121094, 'Generating paths time': 2.367703676223755, 'Finding best mapping': 1.1920928955078125e-06, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.0655052661895752, 'Max mapping': 24389, 'Total time': 2.739938974380493}, 'Parameter Learning results': {'Learning time': 111.99199999999999, 'AUC PR': 0.529881, 'F1': 0.154387, 'AUC ROC': 0.517211, 'CLL': -0.699351, 'Inference time': 3.888, 'Precision': [0.60733, 0.5], 'Recall': 0.088434}, 'Precision': [0.608974, 0.5], 'Recall': 0.103463}


Start learning from scratch in target domain

Target train facts examples: 1550
Target train pos examples: 3386
Target train neg examples: 3386

Target test facts examples: 5049
Target test pos examples: 9182
Target test neg examples: 9182

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( languages(B, D), educationdegree(B, E) )
%   | then if ( location(B, F), lastname(B, G) )
%   | | then if ( educationconcentration(B, H), gender(A, I) )
%   | | | then return 0.30000940021579137;  // std dev = 3,256, 43,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.6706489350995116;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | else return 0.15563997452603665;  // std dev = 0,457, 279,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=83 */
%   | else if ( educationyear(B, J), gender(A, K) )
%   | | then if ( educationschool(B, L), educationschool(A, L) )
%   | | | then return 0.5923926325784992;  // std dev = 13,630, 952,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=699 */
%   | | | else return 0.32379779006133974;  // std dev = 17,128, 1.179,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=549 */
%   | | else return 0.5671884831221062;  // std dev = 0,454, 1.416,000 (wgt'ed) examples reached here.  /* #neg=412 #pos=1.004 */
%   else if ( educationconcentration(B, M), educationconcentration(A, N) )
%   | then if ( location(B, P), location(A, P) )
%   | | then return 0.7581489350995125;  // std dev = 0,300, 60,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else return 0.32481560176617896;  // std dev = 0,499, 180,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=84 */
%   | else return 0.18806151586727632;  // std dev = 0,470, 2.631,000 (wgt'ed) examples reached here.  /* #neg=1.763 #pos=868 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workenddate(B, D), worklocation(B, E) )
%   | then return -0.022163465083048638;  // std dev = 0,370, 78,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   | else if ( languages(B, F), educationdegree(B, G) )
%   | | then if ( lastname(B, H), location(B, I) )
%   | | | then return 0.39118205396025163;  // std dev = 4,151, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | | | else return 0.1356183734904857;  // std dev = 7,636, 279,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=83 */
%   | | else if ( educationschool(A, J), educationschool(B, J) )
%   | | | then return 0.5367058910002006;  // std dev = 16,068, 1.436,000 (wgt'ed) examples reached here.  /* #neg=337 #pos=1.099 */
%   | | | else return 0.3566491410077893;  // std dev = 22,251, 2.033,000 (wgt'ed) examples reached here.  /* #neg=893 #pos=1.140 */
%   else if ( languages(B, K), hometown(B, L) )
%   | then if ( location(B, M), birthday(A, N) )
%   | | then return 0.05632542818994386;  // std dev = 0,415, 56,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( birthday(A, P), workemployer(B, Q) )
%   | | | then return 0.6050551476838357;  // std dev = 2,782, 44,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   | | | else return 0.3611071198305789;  // std dev = 7,983, 258,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=137 */
%   | else return 0.15770595396751896;  // std dev = 0,467, 2.513,000 (wgt'ed) examples reached here.  /* #neg=1.691 #pos=822 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationyear(B, D), educationconcentration(A, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then return 0.34382687119065397;  // std dev = 0,459, 469,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=310 */
%   | | else return -0.004682384557281251;  // std dev = 0,417, 295,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=67 */
%   | else if ( educationdegree(B, G), languages(B, H) )
%   | | then if ( hometown(B, I), educationtype(A, J) )
%   | | | then return 0.27519636470551007;  // std dev = 5,936, 146,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=69 */
%   | | | else return 0.06178802935773183;  // std dev = 3,961, 87,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else return 0.3652953027059146;  // std dev = 0,467, 2.904,000 (wgt'ed) examples reached here.  /* #neg=993 #pos=1.911 */
%   else if ( educationyear(A, K), educationyear(B, K) )
%   | then if ( educationschool(A, L), educationschool(B, L) )
%   | | then return 0.49505258234239424;  // std dev = 0,450, 180,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=128 */
%   | | else if ( workemployer(B, M) )
%   | | | then return 0.5057042314711037;  // std dev = 2,344, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.10779009983731741;  // std dev = 7,073, 238,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=72 */
%   | else return 0.12837719907039133;  // std dev = 0,464, 2.423,000 (wgt'ed) examples reached here.  /* #neg=1.639 #pos=784 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( gender(B, D) )
%   | then return 0.41198196159659767;  // std dev = 0,422, 630,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=480 */
%   | else return -0.03737781616407293;  // std dev = 0,473, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( educationschool(A, E), educationschool(B, E) )
%   | then if ( educationdegree(B, F), languages(B, G) )
%   | | then if ( hometown(B, H), educationyear(B, I) )
%   | | | then return 0.2760483546287518;  // std dev = 6,150, 158,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | | | else return -0.04009118273972652;  // std dev = 2,835, 52,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( birthday(A, J), birthday(B, J) )
%   | | | then return 0.4945719587472498;  // std dev = 4,304, 154,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=132 */
%   | | | else return 0.3109004273491527;  // std dev = 17,344, 1.462,000 (wgt'ed) examples reached here.  /* #neg=474 #pos=988 */
%   | else if ( educationschool(B, K), location(A, L) )
%   | | then return -0.035334996555592524;  // std dev = 0,398, 975,000 (wgt'ed) examples reached here.  /* #neg=767 #pos=208 */
%   | | else if ( educationschool(A, M), educationtype(B, N) )
%   | | | then return 0.10609720794618019;  // std dev = 17,622, 1.387,000 (wgt'ed) examples reached here.  /* #neg=888 #pos=499 */
%   | | | else return 0.21266104958403834;  // std dev = 20,904, 1.937,000 (wgt'ed) examples reached here.  /* #neg=960 #pos=977 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( educationtype(A, D), educationyear(B, E) )
%   | then if ( educationschool(B, F), educationschool(A, F) )
%   | | then return 0.21865225427532395;  // std dev = 0,444, 1.106,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=773 */
%   | | else if ( birthday(B, G), birthday(A, G) )
%   | | | then return 0.29721248772039494;  // std dev = 6,255, 164,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=101 */
%   | | | else return 0.03801740205123662;  // std dev = 13,015, 799,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=271 */
%   | else if ( languages(B, H), educationdegree(B, I) )
%   | | then return 0.06505986123247749;  // std dev = 0,446, 103,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | else return 0.2631104692143221;  // std dev = 0,450, 1.729,000 (wgt'ed) examples reached here.  /* #neg=526 #pos=1.203 */
%   else if ( educationtype(B, J), educationyear(A, K) )
%   | then if ( educationconcentration(A, L), educationdegree(A, M) )
%   | | then return 0.052961707999444475;  // std dev = 0,433, 356,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=114 */
%   | | else if ( educationdegree(B, N), location(B, P) )
%   | | | then return -0.0038382547554906047;  // std dev = 5,167, 159,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=42 */
%   | | | else return 0.19748381686601665;  // std dev = 15,532, 1.050,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=479 */
%   | else return 0.03716582493199006;  // std dev = 0,443, 1.306,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=371 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workenddate(B, D), educationconcentration(A, E) )
%   | then return -0.08177334362970166;  // std dev = 0,389, 126,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | else if ( lastname(B, F), birthday(B, G) )
%   | | then return 0.24193200236352844;  // std dev = 0,434, 576,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=407 */
%   | | else if ( educationyear(B, H), birthday(B, I) )
%   | | | then return 0.06387726479177684;  // std dev = 14,107, 879,000 (wgt'ed) examples reached here.  /* #neg=454 #pos=425 */
%   | | | else return 0.17590880664079084;  // std dev = 21,659, 2.320,000 (wgt'ed) examples reached here.  /* #neg=805 #pos=1.515 */
%   else if ( workemployer(B, J), educationyear(B, K) )
%   | then if ( workstartdate(B, L), hometown(B, M) )
%   | | then return 0.5129827434722576;  // std dev = 0,422, 58,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | else if ( lastname(B, N), workenddate(A, P) )
%   | | | then return 0.5616070044267771;  // std dev = 0,987, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.10433761592806157;  // std dev = 5,458, 142,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=60 */
%   | else if ( languages(A, Q), educationdegree(A, R) )
%   | | then return 0.21072210876715072;  // std dev = 0,489, 285,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=142 */
%   | | else return 0.04540416520218044;  // std dev = 0,445, 2.371,000 (wgt'ed) examples reached here.  /* #neg=1.628 #pos=743 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workenddate(B, C), educationconcentration(A, D) )
%   then return -0.06239803643893831;  // std dev = 0,385, 242,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=59 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( educationdegree(B, F), educationdegree(A, G) )
%   | | then if ( lastname(A, H), lastname(B, I) )
%   | | | then return -0.3649718449431773;  // std dev = 1,206, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.15200587311497835;  // std dev = 3,089, 50,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=34 */
%   | | else if ( educationconcentration(B, J), lastname(A, K) )
%   | | | then return 0.37969595068190204;  // std dev = 3,293, 104,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=93 */
%   | | | else return 0.23170339852091953;  // std dev = 9,270, 466,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=351 */
%   | else if ( educationschool(A, L), educationschool(B, L) )
%   | | then if ( educationdegree(B, M), birthday(B, N) )
%   | | | then return 0.06920524748390308;  // std dev = 8,517, 324,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=166 */
%   | | | else return 0.18846721880480155;  // std dev = 16,522, 1.434,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=1.016 */
%   | | else if ( location(B, P), location(A, Q) )
%   | | | then return -0.17553500980427808;  // std dev = 4,782, 276,000 (wgt'ed) examples reached here.  /* #neg=248 #pos=28 */
%   | | | else return 0.06420195988587332;  // std dev = 28,768, 3.861,000 (wgt'ed) examples reached here.  /* #neg=2.224 #pos=1.637 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( locale(A, D), locale(B, D) )
%   | then return 0.11284809456695881;  // std dev = 0,423, 1.596,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=1.172 */
%   | else if ( location(B, E), location(A, E) )
%   | | then return 0.3716422467851606;  // std dev = 0,343, 131,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=110 */
%   | | else if ( locale(B, F), gender(B, G) )
%   | | | then return 0.1682749364734183;  // std dev = 11,374, 550,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=301 */
%   | | | else return -0.21316714984929552;  // std dev = 1,593, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   else if ( educationschool(B, H), educationschool(A, I) )
%   | then return -0.01415502544042981;  // std dev = 0,436, 2.269,000 (wgt'ed) examples reached here.  /* #neg=1.575 #pos=694 */
%   | else if ( educationconcentration(B, J), locale(B, K) )
%   | | then if ( workenddate(B, L) )
%   | | | then return -0.0648921650835467;  // std dev = 3,173, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.2430160822030193;  // std dev = 9,114, 403,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=258 */
%   | | else if ( educationconcentration(A, M), locale(B, N) )
%   | | | then return 0.15709182513244951;  // std dev = 9,692, 433,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=257 */
%   | | | else return 0.025333784802964374;  // std dev = 16,383, 1.324,000 (wgt'ed) examples reached here.  /* #neg=747 #pos=577 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( educationdegree(B, D), educationdegree(A, E) )
%   | then if ( languages(B, F), worklocation(B, G) )
%   | | then return -0.2561575375358621;  // std dev = 0,408, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( languages(B, H), educationconcentration(B, I) )
%   | | | then return -0.11205545239744603;  // std dev = 2,763, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.06684110813555746;  // std dev = 8,701, 354,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=230 */
%   | else return 0.1237494352591192;  // std dev = 0,429, 1.874,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=1.338 */
%   else if ( educationschool(B, J), educationconcentration(A, K) )
%   | then return -0.07553657623703447;  // std dev = 0,386, 781,000 (wgt'ed) examples reached here.  /* #neg=623 #pos=158 */
%   | else if ( locale(B, L), locale(A, L) )
%   | | then if ( educationconcentration(B, M), educationtype(A, N) )
%   | | | then return -0.10531036391130684;  // std dev = 6,074, 189,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
%   | | | else return 0.10784608218357275;  // std dev = 19,788, 1.779,000 (wgt'ed) examples reached here.  /* #neg=703 #pos=1.076 */
%   | | else if ( workstartdate(A, P), educationyear(A, Q) )
%   | | | then return 0.12591071873164705;  // std dev = 7,376, 234,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=98 */
%   | | | else return -0.011109903132177423;  // std dev = 16,690, 1.492,000 (wgt'ed) examples reached here.  /* #neg=1.079 #pos=413 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( gender(B, D) )
%   | then return 0.13515674454105123;  // std dev = 0,409, 630,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=480 */
%   | else return -0.19719438710257114;  // std dev = 0,481, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( location(A, E), educationyear(B, F) )
%   | then if ( birthday(B, G), educationdegree(A, H) )
%   | | then return -0.1548092069250959;  // std dev = 0,345, 212,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=45 */
%   | | else if ( birthday(A, I), birthday(B, I) )
%   | | | then return 0.21021036253004335;  // std dev = 4,619, 109,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=67 */
%   | | | else return -0.012879006169196771;  // std dev = 13,538, 1.073,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=402 */
%   | else if ( lastname(B, J), educationyear(B, K) )
%   | | then if ( birthday(B, L), birthday(A, L) )
%   | | | then return 0.28952439869414337;  // std dev = 4,166, 127,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=101 */
%   | | | else return 0.07287216128055854;  // std dev = 13,708, 920,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=468 */
%   | | else if ( workenddate(B, M), hometown(B, N) )
%   | | | then return -0.08229562978147764;  // std dev = 6,665, 201,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=65 */
%   | | | else return 0.039291586199611025;  // std dev = 26,728, 3.483,000 (wgt'ed) examples reached here.  /* #neg=1.731 #pos=1.752 */


Results
   AUC ROC   = 0.561699
   AUC PR    = 0.555108
   CLL	      = -0.707617
   Precision = 0.532287 at threshold = 0.5
   Recall    = 0.587127
   F1        = 0.558364


Total learning time: 213.476 seconds
Total inference time: 4.28 seconds
AUC ROC: 0.561699


Dataset: 48_twitter_facebook, Fold: 2, Type: scratch, Time: 05:17:57
{'Learning time': 213.476, 'AUC PR': 0.555108, 'F1': 0.558364, 'AUC ROC': 0.561699, 'CLL': -0.707617, 'Inference time': 4.28, 'Precision': [0.532287, 0.5], 'Recall': 0.587127}


Starting fold 3

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.05843091011047363
   Generating paths time   = 2.3427109718322754
   Generating mappings time   = 0.3060874938964844
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.70723819732666


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationtype(A,B)', 'accounttype(A,B) -> educationconcentration(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
0;true,false;educationtype(A, E).;false;true
0;true,false,false;educationtype(B, F).;false;false
0;false,false,true;educationtype(B, I).;false;false
0;false;educationtype(B, G), educationtype(A, G).;false;true
0;false,false,false;educationtype(B, J).;false;false
0;false,false;educationtype(A, H).;true;true
0;true;educationtype(A, D), educationtype(B, D).;false;true
1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
1;true,false;educationtype(A, E).;false;true
1;true,false,false;educationtype(B, F).;false;false
1;false,false,true;educationtype(B, I).;false;false
1;false;educationtype(A, G), educationtype(B, G).;false;true
1;false,false,false;educationtype(B, J).;false;false
1;false,false;educationtype(A, H).;true;true
1;true;educationtype(B, D), educationtype(A, D).;false;true
2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
2;true,false;educationtype(A, E), educationtype(B, F).;false;true
2;true,false,false;educationtype(B, G).;false;false
2;false,false,true;educationtype(B, J).;false;false
2;false;educationtype(B, H), educationtype(A, H).;false;true
2;false,false,false;educationtype(B, K).;false;false
2;false,false;educationtype(A, I).;true;true
2;true;educationtype(B, D), educationtype(A, D).;false;true
3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
3;true,false;educationtype(B, E), educationtype(A, F).;false;true
3;true,false,false;educationtype(B, G).;false;false
3;false,false,true;educationtype(B, J).;false;false
3;false;educationtype(A, H), educationtype(B, H).;false;true
3;false,false,false;educationtype(B, K).;false;false
3;false,false;educationtype(A, I).;true;true
3;true;educationtype(B, D), educationtype(A, D).;false;true
4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
4;true,false;educationtype(A, E), educationtype(B, F).;false;true
4;true,false,false;educationtype(B, G).;false;false
4;false,false,true;educationtype(B, J).;false;false
4;false;educationtype(A, H), educationtype(B, H).;false;true
4;false,false,false;educationtype(B, K).;false;false
4;false,false;educationtype(A, I).;true;true
4;true;educationtype(B, D), educationtype(A, D).;false;true
5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
5;true,false;educationtype(A, E), educationtype(B, F).;false;true
5;true,false,false;educationtype(B, G).;false;false
5;false,false,true;educationtype(B, J).;false;false
5;false;educationtype(A, H), educationtype(B, H).;false;true
5;false,false,false;educationtype(B, K).;false;false
5;false,false;educationtype(A, I).;true;true
5;true;educationtype(A, D), educationtype(B, D).;false;true
6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
6;true,false;educationtype(A, E), educationtype(B, F).;false;true
6;true,false,false;educationtype(B, G).;false;false
6;false,false,true;educationtype(B, J).;false;false
6;false;educationtype(B, H), educationtype(A, H).;false;true
6;false,false,false;educationtype(B, K).;false;false
6;false,false;educationtype(A, I).;true;true
6;true;educationtype(A, D), educationtype(B, D).;false;true
7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
7;true,false;educationtype(B, E), educationtype(A, F).;false;true
7;true,false,false;educationtype(B, G).;false;false
7;false,false,true;educationtype(B, J).;false;false
7;false;educationtype(A, H), educationtype(B, H).;false;true
7;false,false,false;educationtype(B, K).;false;false
7;false,false;educationtype(A, I).;true;true
7;true;educationtype(B, D), educationtype(A, D).;false;true
8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
8;true,false;educationtype(A, E), educationtype(B, F).;false;true
8;true,false,false;educationtype(B, G).;false;false
8;false,false,true;educationtype(B, J).;false;false
8;false;educationtype(A, H), educationtype(B, H).;false;true
8;false,false,false;educationtype(B, K).;false;false
8;false,false;educationtype(A, I).;true;true
8;true;educationtype(A, D), educationtype(B, D).;false;true
9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true
9;true,false;educationtype(A, E), educationtype(B, F).;false;true
9;true,false,false;educationtype(B, G).;false;false
9;false,false,true;educationtype(B, J).;false;false
9;false;educationtype(B, H), educationtype(A, H).;false;true
9;false,false,false;educationtype(B, K).;false;false
9;false,false;educationtype(A, I).;true;true
9;true;educationtype(A, D), educationtype(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then return 0.3634870133913222;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.12566485866639054;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.372063591871307;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.3667168665560557;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.34678529873587105;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.48074388375574334;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.3132521648570521;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.10966887608690734;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.32049423737690114;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.3159802820636868;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.2991290502925376;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.386198448632422;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then return 0.25993114262968253;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.09453783589912806;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.26556660230834106;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.2620560118762071;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.2488927499845688;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.2971060494206917;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.20869392827417865;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.08059282944206136;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.21277474206645441;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.21023455869840801;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.20065183890579738;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.22385468926999735;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.16339243514464025;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.06803401753911975;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.16620020612980466;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.16445354444352922;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.15783017763196927;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.1679716628061756;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.12573736027248333;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.056947345783579566;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.12761671468175137;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.12644773499836554;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.12200851856977468;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.12658100414000711;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then return 0.09571069242806655;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.04732502147393409;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.0969591310691665;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.09618206123521998;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.09324429899264772;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.09607868392277003;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.07238071993261289;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.039091498782752546;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.0732154318431486;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.07269504288988375;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.07075046826208566;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.07347328777965571;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.054532050059379035;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.03212871857084946;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.05509847525072671;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.05474444870567106;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.05344659089205114;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.05656520765532164;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then return 0.040998054433729746;  // std dev = 22,174, 1.967,000 (wgt'ed) examples reached here.  /* #neg=973 #pos=994 */
%   | else if ( educationtype(A, F) )
%   | | then if ( educationtype(B, G) )
%   | | | then return 0.026297112840132076;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.04138966976425391;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, H) )
%   | | | then return 0.041144082511872515;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.0402669227270784;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */


Results
   AUC ROC   = 0.531211
   AUC PR    = 0.541023
   CLL	      = -0.688448
   Precision = 0.667788 at threshold = 0.5
   Recall    = 0.085782
   F1        = 0.152034


Total learning time: 48.202 seconds
Total inference time: 2.424 seconds
AUC ROC: 0.531211


Structure after Parameter Learning
[['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(B, E), educationtype(A, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(A, E), educationtype(B, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(B, E), educationtype(A, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(A, E), educationtype(B, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(A, E), educationtype(B, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(A, E), educationtype(B, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(B, E), educationtype(A, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(A, E), educationtype(B, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(B, D), educationtype(A, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(A, E), educationtype(B, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}], ['edge(A, B)', {'': 'educationconcentration(A, C), educationconcentration(B, C)', 'false': 'educationtype(B, E), educationtype(A, E)', 'false,false,true': 'educationtype(B, G)', 'false,false,false': 'educationtype(B, H)', 'false,false': 'educationtype(A, F)', 'true': 'educationtype(A, D), educationtype(B, D)'}, {'true,false': [0.0, 0, 0], 'false,true': [22.174, 973, 994], 'false,false,true,false': [20.098, 786, 831], 'false,false,false,false': [17.545, 630, 602], 'true,true': [1.879, 5, 12], 'false,false,false,true': [20.208, 803, 831], 'false,false,true,true': [5.547, 115, 42]}]]
[{'': [0.20761245674740453, 0.24999971937433402], 'false': [0.24997150492017436, 0.24999089625444776], 'false,false,true': [0.19595115420503992, 0.249806382326946], 'false,false,false': [0.24992659055057895, 0.2498708677685874], 'false,false': [0.24993771996611264, 0.24999999999996667], 'true': [0.20761245674740453, nan]}, {'': [0.20761245674740458, 0.24962905147952927], 'false': [0.24997150492015152, 0.249468641286335], 'false,false,true': [0.19595115420503972, 0.24980638232689784], 'false,false,false': [0.24992659055053706, 0.24987086776859557], 'false,false': [0.248625651243812, 0.24997223144585992], 'true': [0.20761245674740458, nan]}, {'': [0.20761245674740486, 0.24928251027485526], 'false': [0.2499715049201301, 0.24898036310895214], 'false,false,true': [0.19595115420503878, 0.2498063823269354], 'false,false,false': [0.24992659055056068, 0.2498708677686104], 'false,false': [0.2473997772130496, 0.24994510275887813], 'true': [0.20761245674740486, nan]}, {'': [0.20761245674740486, 0.24901420651418124], 'false': [0.2499715049201528, 0.2486023438728088], 'false,false,true': [0.19595115420503847, 0.2498063823269186], 'false,false,false': [0.24992659055056007, 0.24987086776859563], 'false,false': [0.2464496039944965, 0.24992514260629603], 'true': [0.20761245674740486, nan]}, {'': [0.20761245674740483, 0.24883606822404114], 'false': [0.24997150492015963, 0.24835138749737362], 'false,false,true': [0.1959511542050383, 0.24980638232692318], 'false,false,false': [0.24992659055056443, 0.24987086776861014], 'false,false': [0.24581753163733377, 0.24991338861640075], 'true': [0.20761245674740483, nan]}, {'': [0.2076124567474048, 0.24873070883350412], 'false': [0.24997150492015027, 0.2482029747243302], 'false,false,true': [0.19595115420503753, 0.24980638232691071], 'false,false,false': [0.24992659055055133, 0.24987086776858455], 'false,false': [0.245443034223133, 0.2499074668744746], 'true': [0.2076124567474048, nan]}, {'': [0.2076124567474048, 0.24867334398322663], 'false': [0.24997150492014805, 0.24812217316385268], 'false,false,true': [0.19595115420503967, 0.24980638232693747], 'false,false,false': [0.2499265905505602, 0.24987086776859885], 'false,false': [0.24523889404185753, 0.24990475230473808], 'true': [0.2076124567474048, nan]}, {'': [0.20761245674740483, 0.24864391372452968], 'false': [0.24997150492015138, 0.24808071906989568], 'false,false,true': [0.1959511542050397, 0.24980638232692126], 'false,false,false': [0.24992659055056196, 0.2498708677685977], 'false,false': [0.24513409780155387, 0.24990356388619347], 'true': [0.20761245674740483, nan]}, {'': [0.20761245674740486, 0.24862949160552067], 'false': [0.24997150492014228, 0.24806040370039803], 'false,false,true': [0.19595115420503906, 0.24980638232693075], 'false,false,false': [0.24992659055055044, 0.24987086776859482], 'false,false': [0.24508272561398456, 0.24990304996623972], 'true': [0.20761245674740486, nan]}, {'': [0.2076124567474049, 0.2486227039412998], 'false': [0.24997150492016013, 0.24805084145442838], 'false,false,true': [0.1959511542050383, 0.24980638232692143], 'false,false,false': [0.2499265905505426, 0.2498708677685971], 'false,false': [0.24505853931130953, 0.2499028257104575], 'true': [0.2076124567474049, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '0;false;educationtype(B, E), educationtype(A, E).;true;true', '0;false,false,true;educationtype(B, G).;true;true', '0;false,false,false;educationtype(B, H).;true;true', '0;false,false;educationtype(A, F).;true;true', '0;true;educationtype(A, D), educationtype(B, D).;true;true', '1;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '1;false;educationtype(A, E), educationtype(B, E).;true;true', '1;false,false,true;educationtype(B, G).;true;true', '1;false,false,false;educationtype(B, H).;true;true', '1;false,false;educationtype(A, F).;true;true', '1;true;educationtype(B, D), educationtype(A, D).;true;true', '2;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '2;false;educationtype(B, E), educationtype(A, E).;true;true', '2;false,false,true;educationtype(B, G).;true;true', '2;false,false,false;educationtype(B, H).;true;true', '2;false,false;educationtype(A, F).;true;true', '2;true;educationtype(B, D), educationtype(A, D).;true;true', '3;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '3;false;educationtype(A, E), educationtype(B, E).;true;true', '3;false,false,true;educationtype(B, G).;true;true', '3;false,false,false;educationtype(B, H).;true;true', '3;false,false;educationtype(A, F).;true;true', '3;true;educationtype(B, D), educationtype(A, D).;true;true', '4;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '4;false;educationtype(A, E), educationtype(B, E).;true;true', '4;false,false,true;educationtype(B, G).;true;true', '4;false,false,false;educationtype(B, H).;true;true', '4;false,false;educationtype(A, F).;true;true', '4;true;educationtype(B, D), educationtype(A, D).;true;true', '5;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '5;false;educationtype(A, E), educationtype(B, E).;true;true', '5;false,false,true;educationtype(B, G).;true;true', '5;false,false,false;educationtype(B, H).;true;true', '5;false,false;educationtype(A, F).;true;true', '5;true;educationtype(A, D), educationtype(B, D).;true;true', '6;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '6;false;educationtype(B, E), educationtype(A, E).;true;true', '6;false,false,true;educationtype(B, G).;true;true', '6;false,false,false;educationtype(B, H).;true;true', '6;false,false;educationtype(A, F).;true;true', '6;true;educationtype(A, D), educationtype(B, D).;true;true', '7;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '7;false;educationtype(A, E), educationtype(B, E).;true;true', '7;false,false,true;educationtype(B, G).;true;true', '7;false,false,false;educationtype(B, H).;true;true', '7;false,false;educationtype(A, F).;true;true', '7;true;educationtype(B, D), educationtype(A, D).;true;true', '8;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '8;false;educationtype(A, E), educationtype(B, E).;true;true', '8;false,false,true;educationtype(B, G).;true;true', '8;false,false,false;educationtype(B, H).;true;true', '8;false,false;educationtype(A, F).;true;true', '8;true;educationtype(A, D), educationtype(B, D).;true;true', '9;;edge(A, B) :- educationconcentration(A, C), educationconcentration(B, C).;true;true', '9;false;educationtype(B, E), educationtype(A, E).;true;true', '9;false,false,true;educationtype(B, G).;true;true', '9;false,false,false;educationtype(B, H).;true;true', '9;false,false;educationtype(A, F).;true;true', '9;true;educationtype(A, D), educationtype(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then return 0.5640312880406888;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( educationclasses(B, F) )
%   | | | then return 0.7384306252403552;  // std dev = 3,868, 142,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=125 */
%   | | | else return 0.4518662125864185;  // std dev = 15,178, 955,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=567 */
%   | | else if ( educationschool(B, G), gender(B, H) )
%   | | | then return 0.2528421357628577;  // std dev = 12,003, 603,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=238 */
%   | | | else return 0.09784930963134846;  // std dev = 6,976, 267,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=64 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.12566485866639054;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.372063591871307;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.3667168665560557;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.34678529873587105;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then return 0.48074388375574334;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( hometown(B, F), locale(A, G) )
%   | | | then return 0.5140544859894414;  // std dev = 9,411, 456,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=333 */
%   | | | else return 0.34976293987213314;  // std dev = 12,508, 641,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=359 */
%   | | else if ( educationschool(A, H), educationyear(B, I) )
%   | | | then return 0.10038018730183691;  // std dev = 8,591, 379,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=102 */
%   | | | else return 0.23821558124821157;  // std dev = 10,870, 491,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=200 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.10966887608690734;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.32049423737690114;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.3159802820636868;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.2991290502925376;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then return 0.386198448632422;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( educationclasses(B, F) )
%   | | | then return 0.5274782050406318;  // std dev = 3,867, 142,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=125 */
%   | | | else return 0.31160849434137616;  // std dev = 15,107, 955,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=567 */
%   | | else if ( educationschool(A, G) )
%   | | | then return 0.12618024188763022;  // std dev = 12,691, 748,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=239 */
%   | | | else return 0.3063719275789904;  // std dev = 5,504, 122,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=63 */
%   | else if ( educationtype(A, H) )
%   | | then if ( educationtype(B, I) )
%   | | | then return 0.09453783589912806;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.26556660230834106;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, J) )
%   | | | then return 0.2620560118762071;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.2488927499845688;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then return 0.2971060494206917;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else if ( educationtype(A, D), educationtype(B, D) )
%   | then if ( educationschool(B, E), educationschool(A, E) )
%   | | then if ( educationwith(B, F) )
%   | | | then return 0.41505640411762007;  // std dev = 4,689, 170,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=143 */
%   | | | else return 0.2371718211356655;  // std dev = 14,813, 927,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=549 */
%   | | else if ( educationwith(B, G), gender(A, H) )
%   | | | then return 0.32673551583104166;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.10583434637342225;  // std dev = 13,034, 790,000 (wgt'ed) examples reached here.  /* #neg=533 #pos=257 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.08059282944206136;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.21277474206645441;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.21023455869840801;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.20065183890579738;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.22385468926999735;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( educationschool(B, F), gender(B, G) )
%   | | then if ( hometown(B, H), educationschool(A, F) )
%   | | | then return 0.2622687901026105;  // std dev = 9,557, 473,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=342 */
%   | | | else return 0.14969599042293075;  // std dev = 16,914, 1.208,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=580 */
%   | | else return 0.02325970842797217;  // std dev = 0,429, 286,000 (wgt'ed) examples reached here.  /* #neg=214 #pos=72 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.06803401753911975;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.16620020612980466;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.16445354444352922;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.15783017763196927;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.1679716628061756;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( educationwith(B, F), educationschool(A, G) )
%   | | then return 0.25858058987283056;  // std dev = 0,405, 240,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=183 */
%   | | else if ( workstartdate(B, H), location(B, I) )
%   | | | then return -0.045165632684579446;  // std dev = 4,954, 118,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | | else return 0.11406029636209312;  // std dev = 19,075, 1.609,000 (wgt'ed) examples reached here.  /* #neg=832 #pos=777 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.056947345783579566;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.12761671468175137;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.12644773499836554;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.12200851856977468;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.12658100414000711;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(B, E), educationtype(A, E) )
%   | then if ( lastname(B, F), educationschool(A, G) )
%   | | then return -0.18524168445459138;  // std dev = 0,368, 81,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | else if ( educationschool(B, H), gender(B, I) )
%   | | | then return 0.12097284701273386;  // std dev = 19,015, 1.624,000 (wgt'ed) examples reached here.  /* #neg=714 #pos=910 */
%   | | | else return 0.016988715517132748;  // std dev = 7,090, 262,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=70 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.04732502147393409;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.0969591310691665;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.09618206123521998;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.09324429899264772;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(B, D), educationtype(A, D) )
%   | then return 0.09607868392277003;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( educationwith(B, F), educationschool(A, G) )
%   | | then return 0.17148890167561065;  // std dev = 0,405, 240,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=183 */
%   | | else if ( workemployer(B, H), educationyear(B, I) )
%   | | | then return -0.30904814931768887;  // std dev = 1,287, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.06307933232429247;  // std dev = 19,533, 1.706,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=809 */
%   | else if ( educationtype(A, J) )
%   | | then if ( educationtype(B, K) )
%   | | | then return 0.039091498782752546;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.0732154318431486;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, L) )
%   | | | then return 0.07269504288988375;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.07075046826208566;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then if ( educationtype(A, D), educationtype(B, D) )
%   | then return 0.07347328777965571;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( educationtype(A, E), educationtype(B, E) )
%   | then if ( lastname(B, F) )
%   | | then return -0.15176887269816655;  // std dev = 0,377, 87,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | else if ( educationconcentration(B, G), educationyear(B, H) )
%   | | | then return 0.18374525819442292;  // std dev = 5,588, 157,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=112 */
%   | | | else return 0.054732137271717746;  // std dev = 19,385, 1.723,000 (wgt'ed) examples reached here.  /* #neg=857 #pos=866 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.03212871857084946;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.05509847525072671;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.05474444870567106;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.05344659089205114;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationconcentration(A, C), educationconcentration(B, C) )
%   then return 0.05656520765532164;  // std dev = 0,456, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else if ( educationtype(B, D), educationtype(A, D) )
%   | then if ( gender(B, E), gender(A, E) )
%   | | then if ( birthday(A, F), locale(A, G) )
%   | | | then return 0.1342254492401271;  // std dev = 9,418, 419,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=254 */
%   | | | else return 0.034965374628846364;  // std dev = 11,079, 570,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=284 */
%   | | else if ( educationschool(A, H), educationschool(B, H) )
%   | | | then return 0.045265344109028244;  // std dev = 10,964, 540,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=330 */
%   | | | else return -0.037225126944725524;  // std dev = 9,225, 438,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=126 */
%   | else if ( educationtype(A, I) )
%   | | then if ( educationtype(B, J) )
%   | | | then return 0.026297112840132076;  // std dev = 5,547, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.04138966976425391;  // std dev = 20,098, 1.617,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=831 */
%   | | else if ( educationtype(B, K) )
%   | | | then return 0.041144082511872515;  // std dev = 20,208, 1.634,000 (wgt'ed) examples reached here.  /* #neg=803 #pos=831 */
%   | | | else return 0.0402669227270784;  // std dev = 17,545, 1.232,000 (wgt'ed) examples reached here.  /* #neg=630 #pos=602 */


Results
   AUC ROC   = 0.605493
   AUC PR    = 0.594233
   CLL	      = -0.677905
   Precision = 0.629932 at threshold = 0.5
   Recall    = 0.241465
   F1        = 0.34911


Total learning time: 66.332 seconds
Total inference time: 4.432 seconds
AUC ROC: 0.605493


Refined model AUC ROC: 0.605493


Dataset: 48_twitter_facebook, Fold: 3, Type: transfer, Time: 05:20:01
{'Learning time': 114.53399999999999, 'AUC PR': 0.594233, 'F1': 0.34911, 'AUC ROC': 0.605493, 'CLL': -0.677905, 'Inference time': 4.432, 'Mapping results': {'Generating mappings time': 0.3060874938964844, 'Generating paths time': 2.3427109718322754, 'Finding best mapping': 9.5367431640625e-07, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.05843091011047363, 'Max mapping': 24389, 'Total time': 2.70723819732666}, 'Parameter Learning results': {'Learning time': 48.202, 'AUC PR': 0.541023, 'F1': 0.152034, 'AUC ROC': 0.531211, 'CLL': -0.688448, 'Inference time': 2.424, 'Precision': [0.667788, 0.5], 'Recall': 0.085782}, 'Precision': [0.629932, 0.5], 'Recall': 0.241465}


Start learning from scratch in target domain

Target train facts examples: 990
Target train pos examples: 3312
Target train neg examples: 3312

Target test facts examples: 5609
Target test pos examples: 9256
Target test neg examples: 9256

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationclasses(B, D) )
%   | then return 0.7297705567211316;  // std dev = 0,335, 148,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then return 0.5433341202846934;  // std dev = 0,464, 378,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=259 */
%   | | else if ( birthday(B, G), locale(B, H) )
%   | | | then return 0.48052655747713097;  // std dev = 8,199, 286,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=178 */
%   | | | else return 0.2979079712440869;  // std dev = 9,044, 332,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=146 */
%   else if ( educationschool(A, I), educationtype(B, J) )
%   | then return 0.16700674395731643;  // std dev = 0,462, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( hometown(B, K), location(B, L) )
%   | | then if ( languages(B, M), birthday(B, N) )
%   | | | then return 0.13814893509951237;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.5342052731276781;  // std dev = 10,433, 497,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=336 */
%   | | else if ( firstname(B, P) )
%   | | | then return 0.4475529086094418;  // std dev = 10,470, 453,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=267 */
%   | | | else return 0.3311404349624082;  // std dev = 30,151, 3.647,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=1.725 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( educationwith(B, D) )
%   | then return 0.5994968464483639;  // std dev = 0,366, 173,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=145 */
%   | else if ( hometown(B, E), locale(A, F) )
%   | | then return 0.46669163179502604;  // std dev = 0,462, 378,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=261 */
%   | | else if ( lastname(B, G) )
%   | | | then return 0.046457716158249035;  // std dev = 2,484, 35,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.3367961648045966;  // std dev = 11,715, 558,000 (wgt'ed) examples reached here.  /* #neg=260 #pos=298 */
%   else if ( educationschool(A, H), educationtype(B, I) )
%   | then return 0.14543708120554247;  // std dev = 0,462, 858,000 (wgt'ed) examples reached here.  /* #neg=593 #pos=265 */
%   | else if ( hometown(B, J), location(B, K) )
%   | | then if ( educationclasses(B, L) )
%   | | | then return 0.6400220246760702;  // std dev = 3,470, 100,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=86 */
%   | | | else return 0.39260877262334404;  // std dev = 9,979, 422,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=257 */
%   | | else if ( firstname(B, M) )
%   | | | then return 0.38393338325629295;  // std dev = 10,470, 453,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=267 */
%   | | | else return 0.28587548350986897;  // std dev = 30,151, 3.647,000 (wgt'ed) examples reached here.  /* #neg=1.922 #pos=1.725 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then return 0.4865788580924003;  // std dev = 0,370, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   else if ( lastname(B, D), gender(A, E) )
%   | then if ( educationtype(B, F) )
%   | | then if ( educationconcentration(A, G), locale(A, H) )
%   | | | then return 0.42117227579081223;  // std dev = 1,566, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.030415686324341704;  // std dev = 4,951, 161,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | else if ( lastname(A, D) )
%   | | | then return 0.7654839252945534;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.13723113719046245;  // std dev = 7,926, 269,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=100 */
%   | else if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( hometown(B, J), locale(A, K) )
%   | | | then return 0.374035368527103;  // std dev = 8,933, 372,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=256 */
%   | | | else return 0.2829747770169428;  // std dev = 11,929, 583,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=316 */
%   | | else if ( educationtype(B, L), educationschool(A, M) )
%   | | | then return 0.1389435076634604;  // std dev = 13,163, 792,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=256 */
%   | | | else return 0.26110775866171043;  // std dev = 31,946, 4.116,000 (wgt'ed) examples reached here.  /* #neg=2.037 #pos=2.079 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationtype(B, C), lastname(B, D) )
%   then if ( languages(B, E), gender(A, F) )
%   | then return 0.20011160413372758;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return -0.028747127804784535;  // std dev = 0,388, 154,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   else if ( hometown(B, G), location(B, H) )
%   | then if ( workemployer(B, I), gender(A, J) )
%   | | then return -0.2549828743525125;  // std dev = 0,256, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( birthday(B, K) )
%   | | | then return 0.13968524918307174;  // std dev = 6,986, 223,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=108 */
%   | | | else return 0.3493697382243905;  // std dev = 11,588, 720,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=523 */
%   | else if ( educationyear(B, L), locale(B, M) )
%   | | then if ( educationschool(B, N), gender(B, P) )
%   | | | then return 0.19034033447310594;  // std dev = 14,620, 875,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=417 */
%   | | | else return -0.049245459150708;  // std dev = 6,320, 258,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=51 */
%   | | else if ( workemployer(B, Q), workemployer(A, R) )
%   | | | then return 0.7294956990726833;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2102637326456833;  // std dev = 32,536, 4.327,000 (wgt'ed) examples reached here.  /* #neg=2.169 #pos=2.158 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( lastname(B, C), gender(A, D) )
%   then if ( educationtype(B, E), location(B, F) )
%   | then return -0.06216509869111119;  // std dev = 0,374, 71,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | else if ( educationtype(B, G), location(A, H) )
%   | | then return -0.07218912961234712;  // std dev = 0,326, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | else if ( educationyear(A, I), hometown(A, J) )
%   | | | then return -0.0102759028057931;  // std dev = 3,385, 57,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.12273342910796177;  // std dev = 8,098, 282,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=118 */
%   else if ( educationclasses(B, K) )
%   | then return 0.30692193582811567;  // std dev = 0,368, 305,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=252 */
%   | else if ( location(B, L), workstartdate(B, M) )
%   | | then if ( educationyear(B, N), gender(A, P) )
%   | | | then return -0.08993449194183993;  // std dev = 3,623, 89,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return 0.13069752923113953;  // std dev = 4,902, 104,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | else if ( location(B, Q), firstname(B, R) )
%   | | | then return 0.2673865319273806;  // std dev = 6,463, 190,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=124 */
%   | | | else return 0.16043417104257654;  // std dev = 36,344, 5.480,000 (wgt'ed) examples reached here.  /* #neg=2.760 #pos=2.720 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( educationschool(A, C), educationschool(B, C) )
%   then if ( firstname(B, D), birthday(A, E) )
%   | then return 0.31845300755962336;  // std dev = 0,339, 65,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | else if ( birthday(B, F), firstname(A, G) )
%   | | then return 0.3180898533024713;  // std dev = 0,420, 71,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=56 */
%   | | else if ( workenddate(B, H), educationyear(A, I) )
%   | | | then return 0.2547793502480153;  // std dev = 4,446, 117,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=89 */
%   | | | else return 0.1308888691070406;  // std dev = 14,096, 891,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=511 */
%   else if ( educationyear(B, J), educationschool(A, K) )
%   | then return 0.01587287299110189;  // std dev = 0,432, 428,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=114 */
%   | else if ( location(B, L), hometown(A, M) )
%   | | then if ( location(A, N), educationschool(B, P) )
%   | | | then return -0.09205411821658181;  // std dev = 3,347, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.09633638496148803;  // std dev = 8,239, 288,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=135 */
%   | | else if ( gender(B, Q), gender(A, Q) )
%   | | | then return 0.15527546017211766;  // std dev = 22,807, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.027 #pos=1.137 */
%   | | | else return 0.10271227611143695;  // std dev = 24,666, 2.540,000 (wgt'ed) examples reached here.  /* #neg=1.342 #pos=1.198 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( lastname(B, C), lastname(A, C) )
%   then return 0.5847234573307839;  // std dev = 0,127, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( lastname(B, D), gender(A, E) )
%   | then if ( gender(B, E), hometown(B, F) )
%   | | then if ( workstartdate(B, G) )
%   | | | then return -0.13093852880001003;  // std dev = 0,908, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.16235269936863952;  // std dev = 3,689, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( location(B, H), locale(A, I) )
%   | | | then return -0.1386795854433304;  // std dev = 3,004, 81,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=12 */
%   | | | else return -0.008521900995478868;  // std dev = 7,639, 289,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=88 */
%   | else if ( educationyear(B, J), location(A, K) )
%   | | then if ( educationconcentration(B, L), educationtype(A, M) )
%   | | | then return 0.21073744807401337;  // std dev = 4,165, 96,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=70 */
%   | | | else return 0.03691868317398912;  // std dev = 11,530, 618,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=271 */
%   | | else if ( educationclasses(B, N) )
%   | | | then return 0.20200200552312458;  // std dev = 5,788, 260,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=216 */
%   | | | else return 0.10021297808413067;  // std dev = 35,350, 5.194,000 (wgt'ed) examples reached here.  /* #neg=2.592 #pos=2.602 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationconcentration(B, C), educationyear(B, D) )
%   then if ( birthday(B, E), locale(A, F) )
%   | then return 0.2160232479471244;  // std dev = 0,438, 195,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=141 */
%   | else if ( gender(A, G), gender(B, G) )
%   | | then return 0.17582461675106142;  // std dev = 0,435, 70,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=50 */
%   | | else if ( hometown(A, H), location(A, I) )
%   | | | then return 0.2693927379167461;  // std dev = 0,977, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.08576264102050687;  // std dev = 3,353, 58,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   else if ( firstname(B, J), location(B, K) )
%   | then return 0.1678550042085111;  // std dev = 0,421, 243,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=177 */
%   | else if ( birthday(B, L), location(B, M) )
%   | | then if ( gender(B, N), gender(A, N) )
%   | | | then return 0.07043616567583602;  // std dev = 7,244, 227,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=106 */
%   | | | else return -0.12451682166113885;  // std dev = 6,466, 232,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=62 */
%   | | else if ( educationtype(B, P), firstname(B, Q) )
%   | | | then return -0.08555931669458652;  // std dev = 4,276, 94,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.0737074310976226;  // std dev = 35,900, 5.497,000 (wgt'ed) examples reached here.  /* #neg=2.776 #pos=2.721 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationclasses(B, C) )
%   then if ( firstname(A, D), birthday(A, E) )
%   | then if ( firstname(B, F) )
%   | | then return 0.2547255839217996;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.41565330328532624;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( gender(A, G), gender(B, G) )
%   | | then return 0.17712823192152594;  // std dev = 0,322, 150,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=132 */
%   | | else return 0.09247727817316155;  // std dev = 0,386, 145,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=114 */
%   else if ( lastname(B, H), lastname(A, H) )
%   | then return 0.4348535123802593;  // std dev = 0,138, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( lastname(B, I), gender(A, J) )
%   | | then if ( educationtype(B, K), location(B, L) )
%   | | | then return -0.12988572617033495;  // std dev = 2,353, 66,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=8 */
%   | | | else return -0.007265107616872757;  // std dev = 8,775, 366,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=121 */
%   | | else if ( workenddate(B, M), worklocation(B, N) )
%   | | | then return -0.15690296733160225;  // std dev = 2,611, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.05736328912336521;  // std dev = 37,110, 5.813,000 (wgt'ed) examples reached here.  /* #neg=2.915 #pos=2.898 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationwith(B, C), educationschool(A, D) )
%   then if ( workenddate(A, E), location(A, F) )
%   | then if ( educationclasses(B, G), educationyear(A, H) )
%   | | then return 0.21821955485503172;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.26606374739378447;  // std dev = 0,461, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else return 0.16793515115714042;  // std dev = 0,399, 233,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=176 */
%   else if ( educationtype(B, I), location(A, J) )
%   | then if ( educationschool(B, K) )
%   | | then if ( workemployer(B, L), educationtype(A, I) )
%   | | | then return -0.26389063503180255;  // std dev = 1,609, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.028282065106710323;  // std dev = 15,456, 1.089,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=542 */
%   | | else return -0.07006735467795577;  // std dev = 0,403, 180,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=41 */
%   | else if ( educationclasses(B, M) )
%   | | then return 0.14737070370104435;  // std dev = 0,340, 138,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=118 */
%   | | else if ( educationschool(A, N), location(A, P) )
%   | | | then return 0.08253643484865854;  // std dev = 14,286, 841,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=450 */
%   | | | else return 0.03384096849965825;  // std dev = 31,140, 4.099,000 (wgt'ed) examples reached here.  /* #neg=2.127 #pos=1.972 */


Results
   AUC ROC   = 0.582789
   AUC PR    = 0.580256
   CLL	      = -0.708531
   Precision = 0.635504 at threshold = 0.5
   Recall    = 0.188742
   F1        = 0.291045


Total learning time: 112.06 seconds
Total inference time: 3.885 seconds
AUC ROC: 0.582789


Dataset: 48_twitter_facebook, Fold: 3, Type: scratch, Time: 05:21:58
{'Learning time': 112.06, 'AUC PR': 0.580256, 'F1': 0.291045, 'AUC ROC': 0.582789, 'CLL': -0.708531, 'Inference time': 3.885, 'Precision': [0.635504, 0.5], 'Recall': 0.188742}


Starting fold 4

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.059517621994018555
   Generating paths time   = 2.357645034790039
   Generating mappings time   = 0.298980712890625
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.7161507606506348


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> educationclasses(A,B)', 'accounttype(A,B) -> locale(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
0;true,false;educationclasses(A, E).;false;true
0;true,false,false;educationclasses(B, F).;false;false
0;false,false,true;educationclasses(B, I).;false;false
0;false;educationclasses(B, G), educationclasses(A, G).;false;true
0;false,false,false;educationclasses(B, J).;false;false
0;false,false;educationclasses(A, H).;true;true
0;true;educationclasses(A, D), educationclasses(B, D).;false;true
1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
1;true,false;educationclasses(A, E).;false;true
1;true,false,false;educationclasses(B, F).;false;false
1;false,false,true;educationclasses(B, I).;false;false
1;false;educationclasses(A, G), educationclasses(B, G).;false;true
1;false,false,false;educationclasses(B, J).;false;false
1;false,false;educationclasses(A, H).;true;true
1;true;educationclasses(B, D), educationclasses(A, D).;false;true
2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
2;true,false;educationclasses(A, E), educationclasses(B, F).;false;true
2;true,false,false;educationclasses(B, G).;false;false
2;false,false,true;educationclasses(B, J).;false;false
2;false;educationclasses(B, H), educationclasses(A, H).;false;true
2;false,false,false;educationclasses(B, K).;false;false
2;false,false;educationclasses(A, I).;true;true
2;true;educationclasses(B, D), educationclasses(A, D).;false;true
3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
3;true,false;educationclasses(B, E), educationclasses(A, F).;false;true
3;true,false,false;educationclasses(B, G).;false;false
3;false,false,true;educationclasses(B, J).;false;false
3;false;educationclasses(A, H), educationclasses(B, H).;false;true
3;false,false,false;educationclasses(B, K).;false;false
3;false,false;educationclasses(A, I).;true;true
3;true;educationclasses(B, D), educationclasses(A, D).;false;true
4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
4;true,false;educationclasses(A, E), educationclasses(B, F).;false;true
4;true,false,false;educationclasses(B, G).;false;false
4;false,false,true;educationclasses(B, J).;false;false
4;false;educationclasses(A, H), educationclasses(B, H).;false;true
4;false,false,false;educationclasses(B, K).;false;false
4;false,false;educationclasses(A, I).;true;true
4;true;educationclasses(B, D), educationclasses(A, D).;false;true
5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
5;true,false;educationclasses(A, E), educationclasses(B, F).;false;true
5;true,false,false;educationclasses(B, G).;false;false
5;false,false,true;educationclasses(B, J).;false;false
5;false;educationclasses(A, H), educationclasses(B, H).;false;true
5;false,false,false;educationclasses(B, K).;false;false
5;false,false;educationclasses(A, I).;true;true
5;true;educationclasses(A, D), educationclasses(B, D).;false;true
6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
6;true,false;educationclasses(A, E), educationclasses(B, F).;false;true
6;true,false,false;educationclasses(B, G).;false;false
6;false,false,true;educationclasses(B, J).;false;false
6;false;educationclasses(B, H), educationclasses(A, H).;false;true
6;false,false,false;educationclasses(B, K).;false;false
6;false,false;educationclasses(A, I).;true;true
6;true;educationclasses(A, D), educationclasses(B, D).;false;true
7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
7;true,false;educationclasses(B, E), educationclasses(A, F).;false;true
7;true,false,false;educationclasses(B, G).;false;false
7;false,false,true;educationclasses(B, J).;false;false
7;false;educationclasses(A, H), educationclasses(B, H).;false;true
7;false,false,false;educationclasses(B, K).;false;false
7;false,false;educationclasses(A, I).;true;true
7;true;educationclasses(B, D), educationclasses(A, D).;false;true
8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
8;true,false;educationclasses(A, E), educationclasses(B, F).;false;true
8;true,false,false;educationclasses(B, G).;false;false
8;false,false,true;educationclasses(B, J).;false;false
8;false;educationclasses(A, H), educationclasses(B, H).;false;true
8;false,false,false;educationclasses(B, K).;false;false
8;false,false;educationclasses(A, I).;true;true
8;true;educationclasses(A, D), educationclasses(B, D).;false;true
9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true
9;true,false;educationclasses(A, E), educationclasses(B, F).;false;true
9;true,false,false;educationclasses(B, G).;false;false
9;false,false,true;educationclasses(B, J).;false;false
9;false;educationclasses(B, H), educationclasses(A, H).;false;true
9;false,false,false;educationclasses(B, K).;false;false
9;false,false;educationclasses(A, I).;true;true
9;true;educationclasses(A, D), educationclasses(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E) )
%   | | then return 0.2988269012012061;  // std dev = 3,813, 59,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | else if ( educationclasses(B, F) )
%   | | | then return 0.5803711573217337;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.3312168507903746;  // std dev = 10,317, 427,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=202 */
%   else if ( educationclasses(B, G), educationclasses(A, G) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, H) )
%   | | then if ( educationclasses(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3335587711650849;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, J) )
%   | | | then return 0.5831489350995114;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.34584468454022393;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E) )
%   | | then return 0.2584273406413289;  // std dev = 3,813, 59,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | else if ( educationclasses(B, F) )
%   | | | then return 0.4942204482591005;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.28594027593639565;  // std dev = 10,317, 427,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=202 */
%   else if ( educationclasses(A, G), educationclasses(B, G) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, H) )
%   | | then if ( educationclasses(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28792570368038944;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, J) )
%   | | | then return 0.49650892064252555;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.2983328668756532;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E), educationclasses(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.3960190909548876;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.23587914686523215;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(B, H), educationclasses(A, H) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24009062233034;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.3976823551160511;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.24826855290379177;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(B, E), educationclasses(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.30383299977459627;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.19108488627696327;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19419122142128528;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.3049723260282122;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.20019510290730452;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E), educationclasses(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.2286109504287673;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.15115796794910966;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15333078726422442;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.22942175050165053;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.15751303656133991;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E), educationclasses(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.17163226488206393;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.11751792168450226;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11898212077439592;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.1722633027983712;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.12179555397337054;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E), educationclasses(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.12963120803437952;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.09028469981256311;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(B, H), educationclasses(A, H) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0912481128788254;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.13016308988921238;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.09310372818493987;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(B, E), educationclasses(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.09874865476964424;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.06882037407918755;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06944516627970902;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.09921867262299985;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.0706581906196509;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E), educationclasses(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.07586460016287476;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.05219316739208646;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05259468629760857;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.07628870781834449;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.0533859025733541;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationclasses(A, E), educationclasses(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( educationclasses(B, G) )
%   | | | then return 0.05872207265504595;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   | | | else return 0.03945377904963158;  // std dev = 11,000, 486,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=228 */
%   else if ( educationclasses(B, H), educationclasses(A, H) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(A, I) )
%   | | then if ( educationclasses(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03971001211914699;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else if ( educationclasses(B, K) )
%   | | | then return 0.05910691890655282;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.04022677466358944;  // std dev = 10,568, 447,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=218 */


Results
   AUC ROC   = 0.483486
   AUC PR    = 0.510444
   CLL	      = -0.694832
   Precision = 0.761783 at threshold = 0.5
   Recall    = 0.049717
   F1        = 0.093343


Total learning time: 10.242 seconds
Total inference time: 4.444 seconds
AUC ROC: 0.483486


Structure after Parameter Learning
[['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E)', 'true,false,false': 'educationclasses(B, F)', 'false,false,true': 'educationclasses(B, I)', 'false': 'educationclasses(B, G), educationclasses(A, G)', 'false,false,false': 'educationclasses(B, J)', 'false,false': 'educationclasses(A, H)', 'true': 'educationclasses(A, D), educationclasses(B, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [3.813, 33, 26], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [10.317, 225, 202]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E)', 'true,false,false': 'educationclasses(B, F)', 'false,false,true': 'educationclasses(B, I)', 'false': 'educationclasses(A, G), educationclasses(B, G)', 'false,false,false': 'educationclasses(B, J)', 'false,false': 'educationclasses(A, H)', 'true': 'educationclasses(B, D), educationclasses(A, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [2.11e-08, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [3.813, 33, 26], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [10.317, 225, 202]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E), educationclasses(B, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(B, H), educationclasses(A, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(B, D), educationclasses(A, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(B, E), educationclasses(A, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(A, H), educationclasses(B, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(B, D), educationclasses(A, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [2.11e-08, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E), educationclasses(B, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(A, H), educationclasses(B, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(B, D), educationclasses(A, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E), educationclasses(B, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(A, H), educationclasses(B, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(A, D), educationclasses(B, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [7.45e-09, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E), educationclasses(B, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(B, H), educationclasses(A, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(A, D), educationclasses(B, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(B, E), educationclasses(A, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(A, H), educationclasses(B, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(B, D), educationclasses(A, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [5.27e-09, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E), educationclasses(B, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(A, H), educationclasses(B, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(A, D), educationclasses(B, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}], ['edge(A, B)', {'': 'locale(A, C), locale(B, C)', 'true,false': 'educationclasses(A, E), educationclasses(B, F)', 'true,false,false': 'educationclasses(B, G)', 'false,false,true': 'educationclasses(B, J)', 'false': 'educationclasses(B, H), educationclasses(A, H)', 'false,false,false': 'educationclasses(B, K)', 'false,false': 'educationclasses(A, I)', 'true': 'educationclasses(A, D), educationclasses(B, D)'}, {'true,false,false,true': [2.687, 10, 26], 'true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [10.568, 229, 218], 'false,false,true,false': [3.9, 32, 29], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [2.824, 11, 29], 'true,false,false,false': [11.0, 258, 228]}]]
[{'': [0.24990964160245482, 0.24991854448774525], 'false': [-1.4802973661668753e-16, 0.2499866801641034], 'true,false,false': [0.20061728395061854, 0.24927466283476937], 'false,false,true': [nan, 0.2493953238376795], 'true,false': [0.2464808962941697, 0.24994285554348206], 'false,false,false': [0.19937500000000147, 0.24984860541817777], 'false,false': [0.2493953238376795, 0.24994834906754565], 'true': [0.0, 0.2498201729275878]}, {'': [0.24800945750201764, 0.24790274790658584], 'true,false': [0.24648089629416778, 0.24860211156069287], 'true,false,false': [0.20061728395061765, 0.249274662834765], 'false,false,true': [nan, 0.24939532383767826], 'false': [7.401486830834377e-17, 0.2488156226179797], 'false,false,false': [0.19937500000000014, 0.24984860541818285], 'false,false': [0.24939532383767826, 0.2486637489901438], 'true': [0.0, 0.24855387289691835]}, {'': [0.24613445790494867, 0.24591449155057338], 'true,false': [nan, 0.24729706904823057], 'true,false,false': [0.2006172839506169, 0.2489862238939997], 'false,false,true': [nan, 0.24939532383767785], 'false': [-7.401486830834377e-17, 0.24765099701278048], 'false,false,false': [0.19937499999999928, 0.24984860541817727], 'false,false': [0.24939532383767785, 0.24738595619161974], 'true': [0.0, 0.24729706904823018]}, {'': [0.24494770430532867, 0.24467085611420733], 'true,false': [nan, 0.24646113075935552], 'true,false,false': [0.20061728395061731, 0.24898027215354954], 'false,false,true': [nan, 0.24939532383767804], 'false': [7.401486830834377e-17, 0.24687057430775425], 'false,false,false': [0.19937499999999997, 0.24984860541817122], 'false,false': [0.24939532383767804, 0.24653057300754935], 'true': [0.0, 0.24646113075935552]}, {'': [0.244358773516905, 0.24406994036229188], 'true,false': [nan, 0.24602619235317857], 'true,false,false': [0.20061728395061715, 0.24897609350850158], 'false,false,true': [nan, 0.2493953238376775], 'false': [-3.700743415417188e-17, 0.2464704467354711], 'false,false,false': [0.19937500000000005, 0.24984860541817336], 'false,false': [0.2493953238376775, 0.24609275705437916], 'true': [0.0, 0.24602619235317744]}, {'': [0.24409238892959917, 0.2438030493668976], 'true,false': [nan, 0.24582643947712637], 'true,false,false': [0.20061728395061715, 0.248973309802789], 'false,false,true': [nan, 0.24939532383767832], 'false': [9.25185853854297e-18, 0.24628937619254002], 'false,false,false': [0.199375, 0.2498486054181748], 'false,false': [0.24939532383767832, 0.24589494542593132], 'true': [0.0, 0.24582643947712637]}, {'': [0.24397030709320386, 0.24368142308666219], 'true,false': [nan, 0.24573614008969513], 'true,false,false': [0.2006172839506173, 0.24897150877394428], 'false,false,true': [nan, 0.24939532383767848], 'false': [-9.25185853854297e-18, 0.24620833277102772], 'false,false,false': [0.19937500000000005, 0.2498486054181722], 'false,false': [0.24939532383767848, 0.2458064687650598], 'true': [0.0, 0.24573614008969513]}, {'': [0.24390992042547788, 0.24362071094913662], 'true,false': [nan, 0.24569317480463912], 'true,false,false': [0.20061728395061731, 0.24897035713201912], 'false,false,true': [nan, 0.2493953238376783], 'false': [4.625929269271485e-18, 0.24616984688260182], 'false,false,false': [0.19937499999999994, 0.24984860541817414], 'false,false': [0.2493953238376783, 0.24576442452901445], 'true': [0.0, 0.24569317480463912]}, {'': [0.24387657846840471, 0.24358632559572313], 'true,false': [nan, 0.24567095533952474], 'true,false,false': [0.20061728395061718, 0.24896962041892182], 'false,false,true': [nan, 0.24939532383767843], 'false': [-4.625929269271485e-18, 0.24614979329027223], 'false,false,false': [0.19937500000000008, 0.2498486054181739], 'false,false': [0.24939532383767843, 0.2457424739870892], 'true': [0.0, 0.24567095533952474]}, {'': [0.24385583536237657, 0.2435640750761057], 'true,false': [nan, 0.24565837280051728], 'true,false,false': [0.20061728395061731, 0.24896914512212293], 'false,false,true': [nan, 0.2493953238376784], 'false': [0.0, 0.24613824885174995], 'false,false,false': [0.199375, 0.2498486054181717], 'false,false': [0.2493953238376784, 0.2457298026594292], 'true': [0.0, 0.24565837280051728]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '0;false;educationclasses(B, G), educationclasses(A, G).;true;true', '0;true;educationclasses(A, D), educationclasses(B, D).;true;true', '1;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '1;false;educationclasses(A, G), educationclasses(B, G).;true;true', '1;true;educationclasses(B, D), educationclasses(A, D).;true;true', '2;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '2;false;educationclasses(B, H), educationclasses(A, H).;true;true', '2;true;educationclasses(B, D), educationclasses(A, D).;true;true', '3;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '3;false;educationclasses(A, H), educationclasses(B, H).;true;true', '3;true;educationclasses(B, D), educationclasses(A, D).;true;true', '4;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '4;false;educationclasses(A, H), educationclasses(B, H).;true;true', '4;true;educationclasses(B, D), educationclasses(A, D).;true;true', '5;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '5;false;educationclasses(A, H), educationclasses(B, H).;true;true', '5;true;educationclasses(A, D), educationclasses(B, D).;true;true', '6;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '6;false;educationclasses(B, H), educationclasses(A, H).;true;true', '6;true;educationclasses(A, D), educationclasses(B, D).;true;true', '7;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '7;false;educationclasses(A, H), educationclasses(B, H).;true;true', '7;true;educationclasses(B, D), educationclasses(A, D).;true;true', '8;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '8;false;educationclasses(A, H), educationclasses(B, H).;true;true', '8;true;educationclasses(A, D), educationclasses(B, D).;true;true', '9;;edge(A, B) :- locale(A, C), locale(B, C).;true;true', '9;false;educationclasses(B, H), educationclasses(A, H).;true;true', '9;true;educationclasses(A, D), educationclasses(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationwith(B, E), hometown(B, F) )
%   | | then if ( educationyear(B, G), gender(A, H) )
%   | | | then return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( workemployer(B, I), educationschool(A, J) )
%   | | | then return 0.03814893509951238;  // std dev = 2,717, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.3614456383962118;  // std dev = 10,665, 455,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=229 */
%   else if ( educationclasses(B, K), educationclasses(A, K) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( workemployer(B, L), hometown(A, M) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( hometown(B, N) )
%   | | | then return 0.5956489350995129;  // std dev = 3,935, 80,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=59 */
%   | | | else return 0.3414451489079713;  // std dev = 10,589, 449,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=217 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E) )
%   | | then return 0.10135469441383813;  // std dev = 0,439, 93,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | | else if ( languages(B, F), educationconcentration(B, G) )
%   | | | then return -0.033874576935836447;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.35625132608380844;  // std dev = 10,024, 410,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=226 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( hometown(B, I) )
%   | | then if ( languages(A, J), educationtype(B, K) )
%   | | | then return 0.042025181967297605;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.5808921121385747;  // std dev = 3,248, 69,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return -0.046922614093729324;  // std dev = 1,847, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.29977879755133224;  // std dev = 10,419, 438,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=213 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), birthday(A, F) )
%   | | then return -0.1623773526479572;  // std dev = 0,047, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( workemployer(B, G), hometown(A, H) )
%   | | | then return -0.1708358932341311;  // std dev = 0,073, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.27161082531683806;  // std dev = 10,951, 491,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=254 */
%   else if ( educationclasses(B, I), educationclasses(A, I) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( workemployer(B, J), workemployer(A, J) )
%   | | then return 0.7733844792155224;  // std dev = 0,088, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( workemployer(B, K), locale(A, L) )
%   | | | then return -0.06013415028209936;  // std dev = 2,681, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | | else return 0.28286663477361346;  // std dev = 10,639, 472,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=253 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), workemployer(A, E) )
%   | | then return 0.7768071270222615;  // std dev = 0,097, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( workemployer(B, F) )
%   | | | then return -0.04169289516640486;  // std dev = 3,154, 81,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | | else return 0.2254712881404278;  // std dev = 10,225, 429,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=229 */
%   else if ( educationclasses(A, G), educationclasses(B, G) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( worklocation(B, H), locale(A, I) )
%   | | then if ( workemployer(A, J) )
%   | | | then return 0.5711038047107156;  // std dev = 0,859, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1148486051399816;  // std dev = 2,500, 54,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | else if ( birthday(B, K), educationconcentration(B, L) )
%   | | | then return 0.7059738355904438;  // std dev = 6,66e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2145180757099642;  // std dev = 10,406, 465,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=241 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( workemployer(B, E), workemployer(A, E) )
%   | | then return 0.6164493876918793;  // std dev = 0,131, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( educationyear(B, F), workstartdate(B, G) )
%   | | | then return -0.11084881933152152;  // std dev = 2,183, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return 0.17023791671369815;  // std dev = 10,441, 459,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=236 */
%   else if ( educationclasses(A, H), educationclasses(B, H) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( worklocation(B, I), worklocation(A, I) )
%   | | then if ( educationconcentration(B, J) )
%   | | | then return 0.3010422483905095;  // std dev = 0,640, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6011766421198793;  // std dev = 0,360, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( worklocation(B, K), locale(A, L) )
%   | | | then return -0.07676160207245113;  // std dev = 2,541, 57,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return 0.1775307407606666;  // std dev = 10,453, 478,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=254 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationwith(B, E), hometown(B, F) )
%   | | then if ( educationtype(A, G) )
%   | | | then return 0.49207554458651864;  // std dev = 0,031, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4045739778574067;  // std dev = 0,945, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( birthday(B, H), gender(A, I) )
%   | | | then return 0.2808535345961273;  // std dev = 3,495, 56,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | | | else return 0.08475433925655292;  // std dev = 10,025, 449,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=200 */
%   else if ( educationclasses(A, J), educationclasses(B, J) )
%   | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationdegree(B, K), educationschool(B, L) )
%   | | then return -0.2508620450297401;  // std dev = 0,059, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( hometown(B, M), hometown(A, M) )
%   | | | then return 0.44843950187744863;  // std dev = 1,003, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.12191251742138459;  // std dev = 10,671, 513,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=258 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, E) )
%   | | then if ( educationyear(A, F), educationyear(B, F) )
%   | | | then return 0.08328527488433272;  // std dev = 2,260, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.3927441585191148;  // std dev = 2,154, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( educationschool(B, G), educationschool(A, H) )
%   | | | then return -0.27109231436673453;  // std dev = 1,508, 50,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | | else return 0.10336125897965703;  // std dev = 9,645, 407,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=206 */
%   else if ( educationclasses(B, I), educationclasses(A, I) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationclasses(B, J), location(B, K) )
%   | | then return 0.3568051230549671;  // std dev = 0,359, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( locale(B, L), educationschool(A, M) )
%   | | | then return 0.1498308037746549;  // std dev = 6,495, 204,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=114 */
%   | | | else return 0.03864612458933003;  // std dev = 8,297, 321,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=143 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(B, D), educationclasses(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationschool(A, E), educationschool(B, E) )
%   | | then if ( languages(B, F), location(B, G) )
%   | | | then return -0.20853536698458058;  // std dev = 0,868, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.2772033454767613;  // std dev = 2,831, 57,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | | else if ( educationtype(A, H), educationtype(B, I) )
%   | | | then return -0.1078562196138447;  // std dev = 4,104, 124,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=28 */
%   | | | else return 0.10358405193924476;  // std dev = 8,839, 333,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=180 */
%   else if ( educationclasses(A, J), educationclasses(B, J) )
%   | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( hometown(B, K), location(B, L) )
%   | | then return 0.23291940731863825;  // std dev = 0,367, 47,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | else if ( educationconcentration(A, M), locale(B, N) )
%   | | | then return 0.22072008702426082;  // std dev = 2,729, 39,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.042390564415798686;  // std dev = 9,967, 462,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=212 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationtype(A, E), gender(B, F) )
%   | | then if ( workemployer(A, G), workemployer(B, G) )
%   | | | then return 0.40418431841752533;  // std dev = 0,178, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.005919014372233256;  // std dev = 7,528, 294,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=120 */
%   | | else if ( educationconcentration(B, H), hometown(B, I) )
%   | | | then return -0.3123240493404981;  // std dev = 0,999, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1267415921525983;  // std dev = 6,746, 206,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=121 */
%   else if ( educationclasses(A, J), educationclasses(B, J) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationschool(A, K), educationschool(B, K) )
%   | | then return 0.18911552868825102;  // std dev = 0,401, 51,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | | else if ( educationdegree(B, L) )
%   | | | then return -0.14342578384733132;  // std dev = 1,462, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.05176663053015209;  // std dev = 10,106, 469,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=236 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( locale(A, C), locale(B, C) )
%   then if ( educationclasses(A, D), educationclasses(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( languages(B, E), location(B, F) )
%   | | then if ( gender(A, G) )
%   | | | then return -0.1025782229630679;  // std dev = 1,923, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return -0.5008645583831259;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( gender(B, H), gender(A, I) )
%   | | | then return 0.03774150546556068;  // std dev = 9,827, 475,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=232 */
%   | | | else return 0.2894670523614446;  // std dev = 1,777, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( educationclasses(B, J), educationclasses(A, J) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( educationdegree(B, K), educationschool(B, L) )
%   | | then return -0.20994927067558286;  // std dev = 0,190, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( educationschool(A, M), languages(B, N) )
%   | | | then return -0.13880733807117865;  // std dev = 2,115, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.060077714903201;  // std dev = 10,346, 502,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=267 */


Results
   AUC ROC   = 0.557397
   AUC PR    = 0.564461
   CLL	      = -0.709154
   Precision = 0.562526 at threshold = 0.5
   Recall    = 0.453276
   F1        = 0.502026


Total learning time: 18.828 seconds
Total inference time: 4.607 seconds
AUC ROC: 0.557397


Refined model AUC ROC: 0.557397


Dataset: 48_twitter_facebook, Fold: 4, Type: transfer, Time: 05:22:39
{'Learning time': 29.07, 'AUC PR': 0.564461, 'F1': 0.502026, 'AUC ROC': 0.557397, 'CLL': -0.709154, 'Inference time': 4.607, 'Mapping results': {'Generating mappings time': 0.298980712890625, 'Generating paths time': 2.357645034790039, 'Finding best mapping': 9.5367431640625e-07, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.059517621994018555, 'Max mapping': 24389, 'Total time': 2.7161507606506348}, 'Parameter Learning results': {'Learning time': 10.242, 'AUC PR': 0.510444, 'F1': 0.093343, 'AUC ROC': 0.483486, 'CLL': -0.694832, 'Inference time': 4.444, 'Precision': [0.761783, 0.5], 'Recall': 0.049717}, 'Precision': [0.562526, 0.5], 'Recall': 0.453276}


Start learning from scratch in target domain

Target train facts examples: 387
Target train pos examples: 540
Target train neg examples: 540

Target test facts examples: 6212
Target test pos examples: 12028
Target test neg examples: 12028

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(B, C), locale(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( educationschool(A, E) )
%   | | then return -0.11010503315445595;  // std dev = 0,175, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else if ( workstartdate(A, F), workstartdate(B, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06867525088898606;  // std dev = 3,554, 76,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   else if ( hometown(B, H), hometown(A, H) )
%   | then return 0.7299438068943832;  // std dev = 0,334, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else if ( educationschool(B, I), educationschool(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0.3396304165809938;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.7132213988676287;  // std dev = 2,924, 69,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=59 */
%   | | else if ( educationtype(B, K), educationtype(A, L) )
%   | | | then return 0.16159721096158097;  // std dev = 5,536, 145,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | | | else return 0.40014576552740067;  // std dev = 12,515, 631,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=342 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( educationwith(B, C), hometown(B, D) )
%   then if ( educationyear(A, E) )
%   | then if ( educationyear(B, F) )
%   | | then return 0.46450476154269255;  // std dev = 1,088, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7461911140083046;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( educationyear(B, G), gender(A, H) )
%   | | then return 0.7335271936328445;  // std dev = 0,234, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.7777730075486509;  // std dev = 0,111, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( workemployer(B, I), hometown(A, J) )
%   | then return -0.13500162767955806;  // std dev = 0,055, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( birthday(B, K), educationconcentration(B, L) )
%   | | then if ( educationyear(A, M), educationschool(A, N) )
%   | | | then return 0.5201603413394511;  // std dev = 1,193, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7190840527410038;  // std dev = 1,358, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( educationyear(B, P), locale(A, Q) )
%   | | | then return 0.1951120049876888;  // std dev = 8,125, 303,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=116 */
%   | | | else return 0.3341218272679692;  // std dev = 12,730, 669,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=355 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( worklocation(B, C), locale(A, D) )
%   then if ( educationyear(A, E), workemployer(A, F) )
%   | then return 0.6007209842889136;  // std dev = 0,313, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return -0.02348378246709805;  // std dev = 0,352, 122,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=20 */
%   else if ( hometown(B, G) )
%   | then if ( educationconcentration(B, H) )
%   | | then if ( location(B, I), birthday(A, J) )
%   | | | then return 0.7590988553643494;  // std dev = 0,100, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04078480779015001;  // std dev = 2,649, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else return 0.5243643778327248;  // std dev = 0,363, 127,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=105 */
%   | else if ( birthday(B, K), educationyear(B, L) )
%   | | then if ( workemployer(A, M) )
%   | | | then return -0.2094699916596009;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5298386981006888;  // std dev = 2,458, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | else if ( gender(B, N), gender(A, N) )
%   | | | then return 0.2768920082429666;  // std dev = 9,339, 368,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=192 */
%   | | | else return 0.18553015711117435;  // std dev = 9,067, 349,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=150 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( educationdegree(B, C) )
%   then if ( workemployer(A, D) )
%   | then if ( location(A, E) )
%   | | then return -0.25610924884909664;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( educationconcentration(B, F), educationschool(A, G) )
%   | | | then return 0.02721126766455223;  // std dev = 0,683, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6368854537968974;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.16023505437167018;  // std dev = 0,247, 45,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=3 */
%   else if ( educationwith(B, H), hometown(B, I) )
%   | then return 0.4442586419537352;  // std dev = 0,232, 43,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else if ( workstartdate(B, J), educationschool(A, K) )
%   | | then if ( workemployer(A, L), educationyear(B, M) )
%   | | | then return 0.5175249596875338;  // std dev = 0,778, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.09359488936084935;  // std dev = 1,548, 45,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else if ( birthday(B, N), educationschool(B, P) )
%   | | | then return 0.3610069383322913;  // std dev = 3,698, 83,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=61 */
%   | | | else return 0.20361207571319245;  // std dev = 13,942, 844,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=418 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( worklocation(B, D), educationyear(A, E) )
%   | then return 0.4597530369867613;  // std dev = 0,114, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5472901384611634;  // std dev = 0,179, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( worklocation(B, F), locale(A, G) )
%   | then if ( languages(B, H), educationschool(A, I) )
%   | | then return -0.15286540938671014;  // std dev = 0,243, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( languages(A, J) )
%   | | | then return 0.43994504966207654;  // std dev = 1,065, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.019257799057255033;  // std dev = 3,635, 89,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | else if ( hometown(B, K) )
%   | | then if ( educationconcentration(B, L) )
%   | | | then return 0.04921205735031386;  // std dev = 2,849, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.334163328554908;  // std dev = 4,054, 127,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=105 */
%   | | else if ( workemployer(B, M), locale(A, N) )
%   | | | then return -0.07675055146533881;  // std dev = 2,640, 68,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | | else return 0.1732447784339411;  // std dev = 12,719, 688,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=361 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationyear(A, D), worklocation(B, E) )
%   | then return 0.34993239663952797;  // std dev = 0,103, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.4128590414201625;  // std dev = 0,048, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( workemployer(B, F), locale(A, G) )
%   | then if ( worklocation(A, H), workstartdate(B, I) )
%   | | then return 0.6003432509321713;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( educationtype(A, J), educationtype(B, J) )
%   | | | then return -0.13611441237376984;  // std dev = 1,022, 66,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.0256322482133418;  // std dev = 3,554, 73,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( workemployer(A, K), educationschool(B, L) )
%   | | then if ( educationdegree(B, M) )
%   | | | then return 0.20105654813612447;  // std dev = 0,529, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.35134024659311147;  // std dev = 0,413, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( educationschool(B, N), educationschool(A, N) )
%   | | | then return 0.2847460390219993;  // std dev = 3,786, 106,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=84 */
%   | | | else return 0.1278720652187973;  // std dev = 13,210, 781,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=406 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( worklocation(B, C), worklocation(A, C) )
%   then if ( locale(A, D), locale(B, E) )
%   | then return 0.3303584514023357;  // std dev = 0,163, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.6202301603936512;  // std dev = 0,206, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( worklocation(B, F), locale(A, G) )
%   | then if ( workemployer(A, H), workenddate(B, I) )
%   | | then return 0.33111685164538346;  // std dev = 0,334, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( workemployer(B, J) )
%   | | | then return -0.01657335770701373;  // std dev = 2,827, 74,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return -0.15471135650569284;  // std dev = 1,864, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | else if ( worklocation(A, K), locale(B, L) )
%   | | then if ( educationschool(B, M), location(B, N) )
%   | | | then return -0.3233006594803098;  // std dev = 0,255, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.021776014383538867;  // std dev = 3,222, 58,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( workemployer(B, P), locale(A, Q) )
%   | | | then return -0.0425559543955609;  // std dev = 2,642, 68,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.12856689392681245;  // std dev = 13,096, 797,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=462 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( educationdegree(B, C) )
%   then if ( workemployer(A, D), workemployer(B, D) )
%   | then return 0.28404034866218175;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1286308239267471;  // std dev = 0,268, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   else if ( gender(B, E), locale(A, F) )
%   | then if ( gender(A, E), languages(B, G) )
%   | | then if ( locale(B, F), location(B, H) )
%   | | | then return -0.30891040748717946;  // std dev = 0,314, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.029340156610448535;  // std dev = 2,470, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( gender(A, E), locale(B, I) )
%   | | | then return 0.12192163605243903;  // std dev = 9,505, 446,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=259 */
%   | | | else return 0.040790812609266876;  // std dev = 9,673, 479,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=228 */
%   | else if ( locale(A, J), gender(A, K) )
%   | | then return 0.5614149236656729;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( workstartdate(B, L) )
%   | | | then return 0.5382265175762903;  // std dev = 0,131, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.215260460203423;  // std dev = 1,473, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( educationschool(B, C), educationschool(A, C) )
%   then if ( languages(A, D), location(B, E) )
%   | then if ( educationyear(B, F), hometown(B, G) )
%   | | then return -0.3794933667586467;  // std dev = 0,884, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( educationclasses(B, H) )
%   | | | then return 0.29327571575151967;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0372970335946943;  // std dev = 1,167, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.19282956247701066;  // std dev = 0,334, 110,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=84 */
%   else if ( educationschool(A, I), educationschool(B, J) )
%   | then return -0.15673098392265628;  // std dev = 0,294, 86,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | else if ( hometown(B, K), location(B, L) )
%   | | then if ( educationtype(A, M) )
%   | | | then return -0.04579255622232476;  // std dev = 0,901, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2603806612810995;  // std dev = 2,098, 44,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=36 */
%   | | else if ( educationdegree(B, N) )
%   | | | then return -0.10610847311221339;  // std dev = 1,566, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.05494392106164811;  // std dev = 12,767, 777,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=392 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( educationclasses(B, C), locale(A, D) )
%   then if ( educationyear(A, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then return 0.2243166426846074;  // std dev = 0,247, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.3015867582110141;  // std dev = 0,239, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( workenddate(B, G), gender(A, H) )
%   | | then return 0.10076207050790421;  // std dev = 0,317, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0.2363741967553453;  // std dev = 0,320, 36,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   else if ( workstartdate(B, I), worklocation(A, J) )
%   | then return 0.29870827187271465;  // std dev = 0,144, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( birthday(B, K), educationschool(B, L) )
%   | | then if ( educationschool(A, M), educationyear(B, N) )
%   | | | then return 0.05332623190182508;  // std dev = 2,048, 29,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return 0.21561792410382372;  // std dev = 2,316, 46,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | else if ( educationyear(B, P), locale(A, Q) )
%   | | | then return -0.03797886240787331;  // std dev = 6,310, 282,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
%   | | | else return 0.040268890711162124;  // std dev = 11,586, 620,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=315 */


Results
   AUC ROC   = 0.575119
   AUC PR    = 0.587066
   CLL	      = -0.715058
   Precision = 0.57063 at threshold = 0.5
   Recall    = 0.475224
   F1        = 0.518576


Total learning time: 20.663 seconds
Total inference time: 4.16 seconds
AUC ROC: 0.575119


Dataset: 48_twitter_facebook, Fold: 4, Type: scratch, Time: 05:23:04
{'Learning time': 20.663, 'AUC PR': 0.587066, 'F1': 0.518576, 'AUC ROC': 0.575119, 'CLL': -0.715058, 'Inference time': 4.16, 'Precision': [0.57063, 0.5], 'Recall': 0.475224}


Starting fold 5

Target predicate: edge
Mapping Results
   Knowledge compiling time   = 0.033579349517822266
   Generating paths time   = 2.352234125137329
   Generating mappings time   = 0.29514575004577637
   Possible mappings   = [1568]
   Max mapping   = 24389
   Numbers predicates mapping   = [3]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.680966854095459


Best mapping found: ['follows(A,B) -> edge(A,B)', 'tweets(A,B) -> languages(A,B)', 'accounttype(A,B) -> workemployer(A,B)'] 

Transferred target predicate: edge 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
0;true,false;languages(A, E).;false;true
0;true,false,false;languages(B, F).;false;false
0;false,false,true;languages(B, I).;false;false
0;false;languages(B, G), languages(A, G).;false;true
0;false,false,false;languages(B, J).;false;false
0;false,false;languages(A, H).;true;true
0;true;languages(A, D), languages(B, D).;false;true
1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
1;true,false;languages(A, E).;false;true
1;true,false,false;languages(B, F).;false;false
1;false,false,true;languages(B, I).;false;false
1;false;languages(A, G), languages(B, G).;false;true
1;false,false,false;languages(B, J).;false;false
1;false,false;languages(A, H).;true;true
1;true;languages(B, D), languages(A, D).;false;true
2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
2;true,false;languages(A, E), languages(B, F).;false;true
2;true,false,false;languages(B, G).;false;false
2;false,false,true;languages(B, J).;false;false
2;false;languages(B, H), languages(A, H).;false;true
2;false,false,false;languages(B, K).;false;false
2;false,false;languages(A, I).;true;true
2;true;languages(B, D), languages(A, D).;false;true
3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
3;true,false;languages(B, E), languages(A, F).;false;true
3;true,false,false;languages(B, G).;false;false
3;false,false,true;languages(B, J).;false;false
3;false;languages(A, H), languages(B, H).;false;true
3;false,false,false;languages(B, K).;false;false
3;false,false;languages(A, I).;true;true
3;true;languages(B, D), languages(A, D).;false;true
4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
4;true,false;languages(A, E), languages(B, F).;false;true
4;true,false,false;languages(B, G).;false;false
4;false,false,true;languages(B, J).;false;false
4;false;languages(A, H), languages(B, H).;false;true
4;false,false,false;languages(B, K).;false;false
4;false,false;languages(A, I).;true;true
4;true;languages(B, D), languages(A, D).;false;true
5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
5;true,false;languages(A, E), languages(B, F).;false;true
5;true,false,false;languages(B, G).;false;false
5;false,false,true;languages(B, J).;false;false
5;false;languages(A, H), languages(B, H).;false;true
5;false,false,false;languages(B, K).;false;false
5;false,false;languages(A, I).;true;true
5;true;languages(A, D), languages(B, D).;false;true
6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
6;true,false;languages(A, E), languages(B, F).;false;true
6;true,false,false;languages(B, G).;false;false
6;false,false,true;languages(B, J).;false;false
6;false;languages(B, H), languages(A, H).;false;true
6;false,false,false;languages(B, K).;false;false
6;false,false;languages(A, I).;true;true
6;true;languages(A, D), languages(B, D).;false;true
7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
7;true,false;languages(B, E), languages(A, F).;false;true
7;true,false,false;languages(B, G).;false;false
7;false,false,true;languages(B, J).;false;false
7;false;languages(A, H), languages(B, H).;false;true
7;false,false,false;languages(B, K).;false;false
7;false,false;languages(A, I).;true;true
7;true;languages(B, D), languages(A, D).;false;true
8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
8;true,false;languages(A, E), languages(B, F).;false;true
8;true,false,false;languages(B, G).;false;false
8;false,false,true;languages(B, J).;false;false
8;false;languages(A, H), languages(B, H).;false;true
8;false,false,false;languages(B, K).;false;false
8;false,false;languages(A, I).;true;true
8;true;languages(A, D), languages(B, D).;false;true
9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true
9;true,false;languages(A, E), languages(B, F).;false;true
9;true,false,false;languages(B, G).;false;false
9;false,false,true;languages(B, J).;false;false
9;false;languages(B, H), languages(A, H).;false;true
9;false,false,false;languages(B, K).;false;false
9;false,false;languages(A, I).;true;true
9;true;languages(A, D), languages(B, D).;false;true


WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(B, G), languages(A, G) )
%   | then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35212483871396993;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.3906164675670447;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.3362980353565776;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( languages(B, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( languages(A, G), languages(B, G) )
%   | then return 0.22373365448410584;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, H) )
%   | | then if ( languages(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3036471074356998;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, J) )
%   | | | then return 0.33613622477485544;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.29024732799427866;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.18886832215749727;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.252430972421101;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.2776815057599904;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.24191799003155462;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.15570029437174385;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2032367914389215;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.22149269749116546;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.19553603401769268;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.12582628229372095;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1596224832162085;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.1721700230048887;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.15426978223939478;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.10008916917880546;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12321124182105614;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.13161234234128258;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.11961467331782805;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.07866279780602585;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09403865161628217;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.09963181205576573;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.09166516745018691;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(B, E), languages(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.061272608607422424;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07127311168687667;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.07502901594074947;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.06971704917859212;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(A, H), languages(B, H) )
%   | then return 0.04741549148811428;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05379177169426425;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.05635680723069602;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.052771025092935735;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(A, E), languages(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( languages(B, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( languages(B, H), languages(A, H) )
%   | then return 0.03651788997287883;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( languages(A, I) )
%   | | then if ( languages(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0404967198952263;  // std dev = 4,555, 83,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | else if ( languages(B, K) )
%   | | | then return 0.04228454666387357;  // std dev = 4,378, 77,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=41 */
%   | | | else return 0.03982414183310802;  // std dev = 9,852, 389,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=186 */


Results
   AUC ROC   = 0.495478
   AUC PR    = 0.520682
   CLL	      = -0.707352
   Precision = 0.54071 at threshold = 0.5
   Recall    = 0.168785
   F1        = 0.257263


Total learning time: 10.048 seconds
Total inference time: 4.41 seconds
AUC ROC: 0.495478


Structure after Parameter Learning
[['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(B, G), languages(A, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E)', 'true,false,false': 'languages(B, F)', 'false,false,true': 'languages(B, I)', 'false': 'languages(A, G), languages(B, G)', 'false,false,false': 'languages(B, J)', 'false,false': 'languages(A, H)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [2.11e-08, 0, 6], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [2.11e-08, 0, 6]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [2.11e-08, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [4.21e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [7.45e-09, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [2.11e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(B, E), languages(A, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(B, D), languages(A, D)'}, {'true,false,false,true': [5.27e-09, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [1.05e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(A, H), languages(B, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [1.05e-08, 0, 12]}], ['edge(A, B)', {'': 'workemployer(A, C), workemployer(B, C)', 'true,false': 'languages(A, E), languages(B, F)', 'true,false,false': 'languages(B, G)', 'false,false,true': 'languages(B, J)', 'false': 'languages(B, H), languages(A, H)', 'false,false,false': 'languages(B, K)', 'false,false': 'languages(A, I)', 'true': 'languages(A, D), languages(B, D)'}, {'true,false,false,true': [0.0, 0, 6], 'true,true': [0.0, 2, 0], 'false,true': [1.897, 9, 6], 'false,false,true,true': [0.0, 0, 0], 'false,false,false,false': [9.852, 203, 186], 'false,false,true,false': [4.555, 42, 41], 'true,false,true': [0.0, 0, 0], 'false,false,false,true': [4.378, 36, 41], 'true,false,false,false': [0.0, 0, 12]}]]
[{'': [0.08999999999999968, 0.24979880287712244], 'false': [0.24000000000000007, 0.24985982130119305], 'true,false,false': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'false,false,true': [nan, 0.2499637102627387], 'true,false': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'false,false,false': [0.2489458593354706, 0.2495225381804284], 'false,false': [0.2499637102627387, 0.2498342205603378], 'true': [0.0, 0.0]}, {'': [0.06424978612186587, 0.24964521600728384], 'false': [0.2400000000000002, 0.24975924254864396], 'true,false,false': [7.401486830834377e-17, 7.401486830834377e-17], 'false,false,true': [nan, 0.24996371026273861], 'true,false': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,false,false': [0.24894585933546987, 0.24952253818042153], 'false,false': [0.24996371026273861, 0.24971770830212706], 'true': [0.0, 9.868649107779169e-17]}, {'': [0.040122030722944804, 0.24949601538837465], 'false': [0.2399999999999999, 0.2496608223416793], 'true,false,false': [-7.401486830834377e-17, -2.590520390792032e-16], 'false,false,true': [nan, 0.2499637102627374], 'true,false': [nan, -1.4802973661668753e-16], 'false,false,false': [0.24894585933546895, 0.24952253818042583], 'false,false': [0.2499637102627374, 0.2496036704863974], 'true': [0.0, -1.4802973661668753e-16]}, {'': [0.02425275922011396, 0.24938530072350942], 'false': [0.23999999999999988, 0.24958873033597875], 'true,false,false': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,false,true': [nan, 0.24996371026273814], 'true,false': [nan, 9.868649107779169e-17], 'false,false,false': [0.24894585933546948, 0.24952253818042844], 'false,false': [0.24996371026273814, 0.2495201822467733], 'true': [0.0, 9.868649107779169e-17]}, {'': [0.015381192815554334, 0.2493188248441593], 'false': [0.23999999999999988, 0.24954660483659358], 'true,false,false': [-3.700743415417188e-17, -5.551115123125783e-17], 'false,false,true': [nan, 0.24996371026273786], 'true,false': [nan, -4.9343245538895844e-17], 'false,false,false': [0.24894585933546953, 0.24952253818042255], 'false,false': [0.24996371026273786, 0.24947144637818947], 'true': [0.0, -4.9343245538895844e-17]}, {'': [0.010425859500244394, 0.2492844517161369], 'false': [0.24000000000000007, 0.24952554151907533], 'true,false,false': [9.25185853854297e-18, 3.700743415417188e-17], 'false,false,true': [nan, 0.24996371026273725], 'true,false': [nan, 3.700743415417188e-17], 'false,false,false': [0.24894585933546926, 0.24952253818042416], 'false,false': [0.24996371026273725, 0.24944710469562237], 'true': [0.0, 3.700743415417188e-17]}, {'': [0.007492692652921679, 0.24926827214419164], 'false': [0.23999999999999996, 0.24951592838892056], 'true,false,false': [-9.25185853854297e-18, -2.7755575615628914e-17], 'false,false,true': [nan, 0.24996371026273764], 'true,false': [nan, -1.850371707708594e-17], 'false,false,false': [0.2489458593354694, 0.24952253818042733], 'false,false': [0.24996371026273764, 0.24943600430387952], 'true': [0.0, -1.850371707708594e-17]}, {'': [0.005640433129233938, 0.24926104527307402], 'false': [0.23999999999999988, 0.2495117169195606], 'true,false,false': [4.625929269271485e-18, 9.25185853854297e-18], 'false,false,true': [nan, 0.24996371026273725], 'true,false': [nan, 6.1679056923619804e-18], 'false,false,false': [0.24894585933546975, 0.24952253818042303], 'false,false': [0.24996371026273725, 0.2494311421020891], 'true': [0.0, 6.1679056923619804e-18]}, {'': [0.004402488480251224, 0.24925789669070889], 'false': [0.23999999999999985, 0.24950988315847408], 'true,false,false': [-4.625929269271485e-18, 9.25185853854297e-18], 'false,false,true': [nan, 0.2499637102627378], 'true,false': [nan, 0.0], 'false,false,false': [0.24894585933546962, 0.2495225381804204], 'false,false': [0.2499637102627378, 0.24942902356591917], 'true': [0.0, 0.0]}, {'': [0.003535451289447075, 0.24925653585586674], 'false': [0.23999999999999996, 0.24950907206650982], 'true,false,false': [0.0, 0.0], 'false,false,true': [nan, 0.24996371026273756], 'true,false': [nan, 0.0], 'false,false,false': [0.24894585933546975, 0.24952253818042774], 'false,false': [0.24996371026273756, 0.24942808503579625], 'true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '0;true,false;languages(A, E).;true;true', '0;true,false,false;languages(B, F).;true;true', '0;true;languages(A, D), languages(B, D).;true;true', '1;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '1;true,false;languages(A, E).;true;true', '1;true,false,false;languages(B, F).;true;true', '1;true;languages(B, D), languages(A, D).;true;true', '2;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '2;true,false;languages(B, G).;true;true', '2;true;languages(B, D), languages(A, D).;true;true', '3;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '3;true,false;languages(B, G).;true;true', '3;true;languages(B, D), languages(A, D).;true;true', '4;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '4;true,false;languages(B, G).;true;true', '4;true;languages(B, D), languages(A, D).;true;true', '5;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '5;true,false;languages(B, G).;true;true', '5;true;languages(A, D), languages(B, D).;true;true', '6;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '6;true,false;languages(B, G).;true;true', '6;true;languages(A, D), languages(B, D).;true;true', '7;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '7;true,false;languages(B, G).;true;true', '7;true;languages(B, D), languages(A, D).;true;true', '8;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '8;true,false;languages(B, G).;true;true', '8;true;languages(A, D), languages(B, D).;true;true', '9;;edge(A, B) :- workemployer(A, C), workemployer(B, C).;true;true', '9;true,false;languages(B, G).;true;true', '9;true;languages(A, D), languages(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( workemployer(B, F), workstartdate(B, G) )
%   | | then if ( educationtype(A, H) )
%   | | | then return 0.8181489350995119;  // std dev = 0,980, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.597279369882121;  // std dev = 2,106, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else if ( lastname(A, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.34337060997635543;  // std dev = 10,070, 406,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=197 */
%   | else if ( locale(A, J), locale(B, K) )
%   | | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( workemployer(B, L), educationyear(A, M) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2137044906550679;  // std dev = 3,211, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.7194734122109545;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( locale(B, E), locale(A, E) )
%   | then if ( workstartdate(B, F), educationtype(B, G) )
%   | | then if ( educationschool(B, H), educationschool(A, H) )
%   | | | then return 0.13506757917540055;  // std dev = 1,947, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.5714065198529128;  // std dev = 3,620, 83,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | | else if ( languages(B, I), workenddate(B, J) )
%   | | | then return -0.09807430172254156;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.30791344821049255;  // std dev = 9,354, 354,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=177 */
%   | else if ( locale(A, K), locale(B, L) )
%   | | then return -0.08763477038348894;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( workemployer(B, M), educationyear(A, N) )
%   | | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18564982421862505;  // std dev = 3,211, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.48859815525229555;  // std dev = 0,200, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( educationyear(B, D), workstartdate(B, E) )
%   | then if ( educationschool(A, F), educationschool(B, F) )
%   | | then if ( educationyear(A, D), gender(A, G) )
%   | | | then return 0.4561081004563649;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.05671241236414794;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( workemployer(B, H), languages(B, I) )
%   | | | then return 0.5876705225118046;  // std dev = 0,759, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.42628047425933613;  // std dev = 3,388, 64,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=48 */
%   | else if ( educationtype(B, J), locale(A, K) )
%   | | then if ( educationschool(B, L), educationyear(B, M) )
%   | | | then return 0.3067269328317741;  // std dev = 4,431, 82,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | | else return 0.10166409067715168;  // std dev = 6,073, 183,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=60 */
%   | | else if ( locale(A, N), locale(B, N) )
%   | | | then return 0.30966565457798295;  // std dev = 6,365, 166,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | | | else return 0.064346884668695;  // std dev = 2,340, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.3733536693400759;  // std dev = 0,181, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( workemployer(B, D), workstartdate(B, E) )
%   | then if ( educationtype(A, F), educationtype(B, F) )
%   | | then if ( workenddate(A, G), educationdegree(A, H) )
%   | | | then return 0.1358864409912557;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.47471497119732864;  // std dev = 0,778, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( lastname(A, I) )
%   | | | then return -0.1457076201933207;  // std dev = 0,034, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.30515346454847797;  // std dev = 2,066, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | else if ( location(B, J), locale(A, K) )
%   | | then if ( location(A, J) )
%   | | | then return 0.5710567770679817;  // std dev = 1,254, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.22753210545359884;  // std dev = 4,449, 86,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | | else if ( workemployer(B, L), workenddate(B, M) )
%   | | | then return 0.4076483194799863;  // std dev = 1,923, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.1378050344328664;  // std dev = 9,264, 388,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=159 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.2877559308223874;  // std dev = 0,173, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( workstartdate(B, D), educationtype(B, E) )
%   | then if ( educationschool(A, F), workstartdate(A, G) )
%   | | then if ( workemployer(B, H), educationdegree(B, I) )
%   | | | then return 0.37180589453174573;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16144835822849832;  // std dev = 1,054, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( location(A, J), educationschool(B, K) )
%   | | | then return 0.5088399876334394;  // std dev = 0,828, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.24627845935002246;  // std dev = 3,949, 95,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=66 */
%   | else if ( educationtype(B, L), locale(A, M) )
%   | | then if ( educationyear(B, N), educationschool(B, P) )
%   | | | then return 0.19721492546701802;  // std dev = 4,348, 82,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | | else return 0.030521306889647066;  // std dev = 5,553, 161,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | | else if ( locale(A, Q), locale(B, Q) )
%   | | | then return 0.21375675801887584;  // std dev = 6,332, 166,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | | | else return 0.032336261138451235;  // std dev = 2,317, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.2854496213337031;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.283466692573429;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( gender(B, E), gender(A, E) )
%   | then if ( educationconcentration(B, F), educationyear(A, G) )
%   | | then if ( workemployer(B, H), educationyear(B, I) )
%   | | | then return 0.264527985414674;  // std dev = 1,336, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.142206223554892;  // std dev = 2,010, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( workstartdate(B, J), educationyear(B, K) )
%   | | | then return 0.26915191637642877;  // std dev = 2,547, 56,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=46 */
%   | | | else return 0.14626099233040316;  // std dev = 7,779, 272,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=132 */
%   | else if ( lastname(B, L), lastname(A, M) )
%   | | then return 0.5415867825090279;  // std dev = 0,137, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( educationconcentration(B, N), educationyear(A, P) )
%   | | | then return 0.3248863881669848;  // std dev = 2,071, 22,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.0019524454868429034;  // std dev = 5,565, 160,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=54 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.23093529061345663;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.22956009757086226;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( educationyear(B, E), educationyear(A, E) )
%   | then if ( location(B, F), workstartdate(A, G) )
%   | | then return 0.5975449627774579;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( workemployer(A, H), workstartdate(B, I) )
%   | | | then return 0.3961064342924774;  // std dev = 0,449, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.11500881761328527;  // std dev = 1,844, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | else if ( workenddate(B, J), educationyear(A, K) )
%   | | then if ( workemployer(B, L), gender(A, M) )
%   | | | then return 0.22047318007525557;  // std dev = 1,379, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.2218563371901407;  // std dev = 1,637, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( educationtype(B, N), workemployer(A, P) )
%   | | | then return 0.008861595602847699;  // std dev = 3,879, 85,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | | else return 0.11627325920252511;  // std dev = 9,156, 398,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=205 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(B, D), languages(A, D) )
%   | then return -0.19248042128242102;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( languages(B, E) )
%   | | then return 0.19149008774032694;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.19149008774032694;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( lastname(B, F), educationyear(A, G) )
%   | then return -0.1698883853949514;  // std dev = 0,044, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( workenddate(B, H), educationtype(A, I) )
%   | | then if ( gender(A, J), gender(B, K) )
%   | | | then return 0.03756151732686786;  // std dev = 3,127, 61,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | | else return -0.2802386656845796;  // std dev = 0,139, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(B, L), workstartdate(A, M) )
%   | | | then return 0.2780713912831254;  // std dev = 2,093, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.07541829303391859;  // std dev = 9,651, 455,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=227 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then return 0.13078806986239658;  // std dev = 0,098, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( workstartdate(B, D), educationtype(B, E) )
%   | then if ( workstartdate(A, F), educationschool(A, G) )
%   | | then if ( educationdegree(B, H), workemployer(B, I) )
%   | | | then return 0.20098216882415418;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1610335755656647;  // std dev = 1,008, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( location(A, J), educationschool(B, K) )
%   | | | then return 0.31982329477307153;  // std dev = 0,694, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.11382218016995806;  // std dev = 3,762, 95,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=66 */
%   | else if ( educationconcentration(B, L), location(A, M) )
%   | | then if ( location(B, M) )
%   | | | then return 0.2703217034491512;  // std dev = 0,879, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2604598404079115;  // std dev = 1,588, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( educationyear(B, N), educationschool(B, P) )
%   | | | then return 0.1275264531826952;  // std dev = 3,908, 75,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   | | | else return 0.03374604681846317;  // std dev = 8,401, 345,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=143 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( workemployer(A, C), workemployer(B, C) )
%   then if ( languages(A, D), languages(B, D) )
%   | then return -0.18307293236998257;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.14646062540818483;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( location(B, E), location(A, E) )
%   | then if ( educationdegree(A, F) )
%   | | then return 0.45652915962645435;  // std dev = 0,129, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( workstartdate(A, G) )
%   | | | then return 0.36709108488325315;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09212588592860219;  // std dev = 1,070, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( educationschool(B, H), languages(B, I) )
%   | | then if ( workstartdate(A, J) )
%   | | | then return -0.4041505523683255;  // std dev = 0,178, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.039349839911785235;  // std dev = 2,043, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( workemployer(B, K), educationyear(A, L) )
%   | | | then return 0.16991546970462965;  // std dev = 2,629, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | | else return 0.028572694665327258;  // std dev = 9,573, 465,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=209 */


Results
   AUC ROC   = 0.552373
   AUC PR    = 0.552752
   CLL	      = -0.743615
   Precision = 0.552063 at threshold = 0.5
   Recall    = 0.34767
   F1        = 0.426651


Total learning time: 17.205 seconds
Total inference time: 4.791 seconds
AUC ROC: 0.552373


Refined model AUC ROC: 0.552373


Dataset: 48_twitter_facebook, Fold: 5, Type: transfer, Time: 05:23:44
{'Learning time': 27.253, 'AUC PR': 0.552752, 'F1': 0.426651, 'AUC ROC': 0.552373, 'CLL': -0.743615, 'Inference time': 4.791, 'Mapping results': {'Generating mappings time': 0.29514575004577637, 'Generating paths time': 2.352234125137329, 'Finding best mapping': 9.5367431640625e-07, 'Possible mappings': [1568], 'Numbers preds mapping': [3], 'Knowledge compiling time': 0.033579349517822266, 'Max mapping': 24389, 'Total time': 2.680966854095459}, 'Parameter Learning results': {'Learning time': 10.048, 'AUC PR': 0.520682, 'F1': 0.257263, 'AUC ROC': 0.495478, 'CLL': -0.707352, 'Inference time': 4.41, 'Precision': [0.54071, 0.5], 'Recall': 0.168785}, 'Precision': [0.552063, 0.5], 'Recall': 0.34767}


Start learning from scratch in target domain

Target train facts examples: 354
Target train pos examples: 292
Target train neg examples: 292

Target test facts examples: 6245
Target test pos examples: 12276
Target test neg examples: 12276

WILL Produced-Tree #1
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), educationtype(B, E) )
%   | then if ( workenddate(B, F), educationschool(A, G) )
%   | | then if ( educationconcentration(B, H) )
%   | | | then return -0.04185106490048778;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.6407576307516866;  // std dev = 0,412, 92,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=72 */
%   | else if ( lastname(A, I) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( educationyear(B, J), educationschool(B, K) )
%   | | | then return 0.4414822684328463;  // std dev = 4,518, 84,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   | | | else return 0.31334606771599677;  // std dev = 8,318, 279,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=127 */
%   else if ( locale(A, L), locale(B, M) )
%   | then return -0.09929787341112603;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else if ( workemployer(B, N), educationyear(A, P) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2137044906550679;  // std dev = 0,479, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), educationtype(B, E) )
%   | then if ( educationdegree(B, F), educationschool(B, G) )
%   | | then if ( educationtype(A, E) )
%   | | | then return -0.0065184698468103725;  // std dev = 1,267, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.7611950221307383;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5423530444659659;  // std dev = 0,414, 91,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=71 */
%   | else if ( educationconcentration(B, H), location(A, I) )
%   | | then if ( location(B, I) )
%   | | | then return 0.5655755148768569;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03814159736351508;  // std dev = 1,587, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( educationyear(B, J), educationschool(B, K) )
%   | | | then return 0.43935430108184415;  // std dev = 4,091, 73,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=47 */
%   | | | else return 0.29531305884821457;  // std dev = 8,282, 279,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=135 */
%   else if ( locale(A, L), locale(B, M) )
%   | then return -0.08763477038348894;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | else return 0.26622696957595776;  // std dev = 0,481, 53,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
WILL Produced-Tree #3
% FOR edge(A, B):
%   if ( locale(B, C), locale(A, C) )
%   then if ( workstartdate(B, D), workemployer(B, E) )
%   | then return 0.4896209380807563;  // std dev = 0,368, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | else if ( workenddate(B, F), educationtype(A, G) )
%   | | then if ( educationschool(B, H), workemployer(A, I) )
%   | | | then return 0.3171962693138752;  // std dev = 2,505, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.08840854976056986;  // std dev = 2,011, 34,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( educationschool(B, J), workstartdate(B, K) )
%   | | | then return 0.5366876639157817;  // std dev = 1,326, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.272243064026867;  // std dev = 9,163, 346,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=180 */
%   else if ( workemployer(B, L), educationyear(A, M) )
%   | then return 0.6627613420993382;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( locale(B, N), locale(A, P) )
%   | | then return -0.07802856056578536;  // std dev = 0,202, 47,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | else if ( educationschool(A, Q), gender(A, R) )
%   | | | then return -0.2108068904723113;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2216255419601214;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #4
% FOR edge(A, B):
%   if ( workstartdate(B, C), workemployer(B, D) )
%   then if ( educationtype(A, E), educationtype(B, E) )
%   | then return 0.4399463560642438;  // std dev = 0,288, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else if ( languages(B, F) )
%   | | then return 0.5317742203533217;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15401371147739845;  // std dev = 0,450, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else if ( locale(A, G), locale(B, G) )
%   | then if ( lastname(A, H) )
%   | | then return 0.5924963787484652;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( languages(B, I), workenddate(B, J) )
%   | | | then return -0.14889268588562335;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.20557960620085206;  // std dev = 9,712, 404,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=205 */
%   | else if ( locale(B, K), locale(A, L) )
%   | | then return -0.06603771387116422;  // std dev = 0,211, 43,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | else if ( educationschool(A, M), gender(A, N) )
%   | | | then return -0.10218993822509528;  // std dev = 0,642, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1925257479551239;  // std dev = 3,011, 39,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
WILL Produced-Tree #5
% FOR edge(A, B):
%   if ( workemployer(B, C), educationschool(A, D) )
%   then if ( workemployer(A, C) )
%   | then return 0.5917046297518254;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.23313492162498745;  // std dev = 0,418, 45,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   else if ( gender(B, E), gender(A, E) )
%   | then if ( educationconcentration(B, F), educationyear(A, G) )
%   | | then if ( educationdegree(B, H), educationdegree(A, H) )
%   | | | then return 0.0798508847198043;  // std dev = 2,196, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.20875647019762286;  // std dev = 1,105, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( educationtype(B, I), locale(A, J) )
%   | | | then return 0.15418271869472927;  // std dev = 5,982, 186,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=97 */
%   | | | else return 0.2644921193293807;  // std dev = 5,433, 131,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=77 */
%   | else if ( locale(A, K), locale(B, K) )
%   | | then if ( lastname(A, L) )
%   | | | then return 0.4456650523001811;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.07927159360418566;  // std dev = 5,416, 128,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=55 */
%   | | else return -0.0870954695488917;  // std dev = 0,210, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
WILL Produced-Tree #6
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.424799631560301;  // std dev = 0,335, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( educationyear(B, D), workemployer(B, E) )
%   | then if ( languages(B, F), educationschool(B, G) )
%   | | then if ( location(B, H), educationtype(A, I) )
%   | | | then return -0.3272731723047218;  // std dev = 0,095, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09087309666540505;  // std dev = 2,095, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( workemployer(A, J), workenddate(B, K) )
%   | | | then return 0.4883123562875084;  // std dev = 0,281, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.19997202896045776;  // std dev = 4,318, 105,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=70 */
%   | else if ( location(B, L), workstartdate(A, M) )
%   | | then if ( educationconcentration(B, N), workemployer(A, P) )
%   | | | then return -0.02250856017827607;  // std dev = 0,794, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4418836739959446;  // std dev = 1,263, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( educationyear(A, Q), educationtype(B, R) )
%   | | | then return -0.01767735830752741;  // std dev = 4,328, 114,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.10492232608241885;  // std dev = 7,854, 294,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=138 */
WILL Produced-Tree #7
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( workstartdate(B, D), educationdegree(B, E) )
%   | then return -0.33667728165125466;  // std dev = 0,753, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4019992770444593;  // std dev = 0,092, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( educationtype(B, F), workstartdate(B, G) )
%   | then if ( workemployer(B, H), educationtype(A, F) )
%   | | then return 0.28693472479153714;  // std dev = 0,211, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else if ( educationschool(A, I), educationschool(B, I) )
%   | | | then return -0.05404693664198679;  // std dev = 1,494, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.15044024661766361;  // std dev = 3,623, 76,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=50 */
%   | else if ( educationtype(B, J), locale(A, K) )
%   | | then if ( educationyear(B, L), educationschool(B, M) )
%   | | | then return 0.11699468716676908;  // std dev = 4,096, 82,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | | else return -0.02504719144055739;  // std dev = 5,243, 161,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | | else if ( locale(A, N), locale(B, N) )
%   | | | then return 0.14130447164328677;  // std dev = 6,220, 166,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=92 */
%   | | | else return -0.01878209879145758;  // std dev = 2,189, 34,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #8
% FOR edge(A, B):
%   if ( location(B, C), location(A, C) )
%   then if ( educationschool(B, D) )
%   | then return 0.2354721978237714;  // std dev = 0,373, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.4831096114678871;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( workemployer(B, E), educationyear(A, F) )
%   | then if ( location(B, G), workenddate(B, H) )
%   | | then return -0.29655201952487564;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( workenddate(A, I), educationschool(B, J) )
%   | | | then return 0.45240843660261926;  // std dev = 0,277, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14159270890794506;  // std dev = 3,046, 69,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=50 */
%   | else if ( educationyear(A, K), workenddate(B, L) )
%   | | then if ( educationyear(B, K), workemployer(A, M) )
%   | | | then return 0.5337862654854113;  // std dev = 0,097, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16856178090698043;  // std dev = 1,730, 32,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( workstartdate(A, N), location(B, P) )
%   | | | then return 0.22969341908341132;  // std dev = 1,780, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.05270658208995813;  // std dev = 9,270, 433,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=200 */
WILL Produced-Tree #9
% FOR edge(A, B):
%   if ( workemployer(B, C), workemployer(A, C) )
%   then if ( educationconcentration(A, D), educationyear(B, E) )
%   | then return -0.1603185390195136;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.28825077878588456;  // std dev = 0,080, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( educationyear(B, F), workstartdate(B, G) )
%   | then if ( educationyear(A, F), workemployer(A, H) )
%   | | then return 0.3515006940192237;  // std dev = 0,084, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( educationtype(A, I), educationschool(B, J) )
%   | | | then return -0.08201866643728029;  // std dev = 1,530, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.14192967078659288;  // std dev = 2,962, 69,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=55 */
%   | else if ( educationtype(B, K), locale(B, L) )
%   | | then if ( educationyear(B, M), workstartdate(A, N) )
%   | | | then return 0.1510757031114015;  // std dev = 2,302, 30,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.017586021972062122;  // std dev = 6,157, 216,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=78 */
%   | | else if ( gender(A, P), gender(B, P) )
%   | | | then return 0.10595542359860027;  // std dev = 5,699, 149,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=80 */
%   | | | else return -0.007175000706592821;  // std dev = 3,745, 70,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
WILL Produced-Tree #10
% FOR edge(A, B):
%   if ( languages(B, C), languages(A, C) )
%   then if ( workemployer(B, D), educationyear(A, E) )
%   | then if ( workstartdate(B, F), educationconcentration(A, G) )
%   | | then return -0.30526169344314796;  // std dev = 0,622, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2579466769438804;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.2949723509648001;  // std dev = 0,288, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( educationyear(B, H), languages(A, I) )
%   | then if ( gender(B, J), workemployer(A, K) )
%   | | then return 0.03345513211175912;  // std dev = 0,333, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else return 0.4525089036824429;  // std dev = 0,176, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( gender(B, L) )
%   | | then if ( locale(B, M), locale(A, M) )
%   | | | then return 0.05884500075154919;  // std dev = 9,134, 433,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=241 */
%   | | | else return -0.022273837388431746;  // std dev = 3,234, 86,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | else if ( location(A, N) )
%   | | | then return -0.3266007410269447;  // std dev = 0,114, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06930887556819884;  // std dev = 1,318, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */


Results
   AUC ROC   = 0.552881
   AUC PR    = 0.541777
   CLL	      = -0.79452
   Precision = 0.54628 at threshold = 0.5
   Recall    = 0.46538
   F1        = 0.502595


Total learning time: 19.803 seconds
Total inference time: 5.543 seconds
AUC ROC: 0.552881


Dataset: 48_twitter_facebook, Fold: 5, Type: scratch, Time: 05:24:10
{'Learning time': 19.803, 'AUC PR': 0.541777, 'F1': 0.502595, 'AUC ROC': 0.552881, 'CLL': -0.79452, 'Inference time': 5.543, 'Precision': [0.54628, 0.5], 'Recall': 0.46538}


