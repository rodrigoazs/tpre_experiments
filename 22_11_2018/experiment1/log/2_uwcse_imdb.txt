Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.7797175625504926;  // std dev = 1,920, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5256950918092174;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7301171791188743;  // std dev = 0,063, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.6522008798821627;  // std dev = 0,936, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.35278351751188713;  // std dev = 1,611, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6574000232806397;  // std dev = 1,921, 51,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.5014287972424673;  // std dev = 1,472, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.5740907886965937;  // std dev = 0,065, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.42002402141130357;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5643707136081546;  // std dev = 0,049, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( hasposition(L, C), publication(J, L) )
%   | | | then return 0.1985208063281498;  // std dev = 1,450, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6731354881141801;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.5164220270078069;  // std dev = 2,094, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.40630208150804425;  // std dev = 1,265, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06374087151318292;  // std dev = 0,237, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(F, H, E) )
%   | | then if ( samecourse(D, F) )
%   | | | then return 0.27417551664975753;  // std dev = 0,872, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4336898614974407;  // std dev = 0,048, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4352028188915637;  // std dev = 0,142, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( publication(J, K), student(K) )
%   | | | then return 0.3576424234795141;  // std dev = 1,395, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.12147999793897314;  // std dev = 1,138, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( publication(L, B), publication(L, A) )
%   | | | then return 0.43047346965303435;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3643565935731039;  // std dev = 2,334, 45,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   else return -0.10200726556038733;  // std dev = 0,013, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.3898706349004879;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.2709499441675392;  // std dev = 0,900, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.327906743368208;  // std dev = 0,070, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( hasposition(K, C), publication(J, K) )
%   | | | then return -0.07765839809565699;  // std dev = 1,239, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4310925683836645;  // std dev = 0,123, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.3059547132483532;  // std dev = 1,979, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.19454187567680623;  // std dev = 1,252, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(B) )
%   | then return -0.0639192889488231;  // std dev = 0,224, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.09265672241251545;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.1402381575610165;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26784775531561766;  // std dev = 0,130, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.2340166532066764;  // std dev = 1,208, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.10814551248063055;  // std dev = 1,200, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( publication(K, B), publication(L, A) )
%   | | | then return 0.2512540919253115;  // std dev = 0,913, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.21172026157941942;  // std dev = 2,098, 37,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   else return -0.08572082155740945;  // std dev = 0,018, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.24795840844907527;  // std dev = 0,121, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10156131892140943;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2192027280145677;  // std dev = 0,117, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then return 0.022021227089133316;  // std dev = 0,791, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, A, N) )
%   | | | then return 0.23786717081284978;  // std dev = 0,991, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.1510842218560079;  // std dev = 2,421, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( professor(B) )
%   | then if ( publication(P, B) )
%   | | then return -0.08450269824992294;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.0037354112776907997;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07871056260894768;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.230576197489779;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.130604572458413;  // std dev = 0,899, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.18493731520663956;  // std dev = 0,100, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), ta(K, J, L) )
%   | | | then return 0.23475376157654276;  // std dev = 0,804, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.3949959754189678;  // std dev = 0,148, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.16646661326417747;  // std dev = 1,296, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.12541654202999308;  // std dev = 2,138, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   else return -0.07371020631116969;  // std dev = 0,018, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.1847886516616962;  // std dev = 0,098, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04790876582445558;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.157783808388002;  // std dev = 0,093, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( hasposition(L, C), publication(J, L) )
%   | | | then return -0.024840355939059595;  // std dev = 1,094, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.22833309180869224;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.13147347253163563;  // std dev = 2,039, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.058623726430858274;  // std dev = 1,258, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.05746829949765686;  // std dev = 0,216, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.06834350411031133;  // std dev = 1,29e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.15876694822289547;  // std dev = 0,087, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03910242453728448;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.13796825171488067;  // std dev = 0,084, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( publication(I, K), publication(J, K) )
%   | | | then return -0.19267019913067943;  // std dev = 0,993, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16136927304166293;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.12322691011264962;  // std dev = 1,457, 39,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.07782375594367892;  // std dev = 1,931, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else return -0.0646438151987894;  // std dev = 0,017, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Predicates from source: ['advisedby(person,person).', 'ta(course,person,quarter).', 'publication(title,person).', 'samecourse(course,course).', 'professor(person).', 'tempadvisedby(person,person).', 'hasposition(person,faculty).', 'student(person).']

Starting fold 1

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.016338348388671875
   Generating paths time   = 2.948982000350952
   Generating mappings time   = 0.01916360855102539
   Possible mappings   = 288
   Finding best mapping   = 0.07810425758361816
   Total time   = 3.0625972747802734


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(M, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, J).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(H, A).;true;true
1;true,true;movie(H, B).;false;false
1;true,false;movie(I, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false,false;genre(M, C).;false;false
2;true;movie(D, A), movie(D, B).;false;true
2;true,false;movie(J, A).;true;true
2;true,false,true;genre(L, C), movie(J, L).;false;false
2;false;actor(B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(J, B).;true;true
3;true,true;movie(J, K), actor(K).;false;false
3;true,false;movie(L, B), movie(L, A).;false;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true,false,false;genre(L, C).;false;false
4;true;movie(D, B), movie(D, A).;true;true
4;true,true;movie(D, E).;false;false
4;true,false;movie(I, B), movie(J, A).;true;true
4;true,false,true;genre(K, C), movie(J, K).;false;false
4;false;director(B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(G, B).;false;true
5;true,false;movie(K, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true;movie(D, B), movie(D, A).;false;true
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(C, D).;false;false
7;true,false;movie(H, A).;true;false
7;true,false,true;movie(H, J).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false,false;genre(M, C).;false;false
8;true;movie(D, B), movie(D, A).;false;true
8;true,false;movie(J, A).;true;true
8;true,false,true;genre(L, C), movie(J, L).;false;false
8;false;director(B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, B), movie(C, A).;false;true
9;true,false;movie(I, B), movie(J, A).;true;false
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.40840639269083406;  // std dev = 0,515, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 2,98e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.3226991323894946;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1453924538211226;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.24977746779008414;  // std dev = 0,381, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21183967696800304;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, F) )
%   | | then return -0.1588485258778106;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17862201798459124;  // std dev = 7,45e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13875500333912374;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1539001358408816;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12298904426625498;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13490907223278015;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11032621945337938;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125718
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.168 seconds
Total inference time: 0.874 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [5.16e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.03e-07, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.515, 1, 56], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [1.97e-08, 55, 0], 'true,true': [0.381, 1, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [3.65e-08, 0, 56], 'false,true': [0.0, 0, 0], 'false,false': [1.49e-08, 55, 0], 'true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.29e-08, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [7.45e-08, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false,false': [1.49e-08, 55, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 55, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [0.012304599783948732, nan], 'true,true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'false': [2.62416351275037e-17, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.004644692439814939, 1.6148698540002276e-17], 'true': [0.004644692439814939, nan], 'true,true': [0.004644692439814939, nan]}, {'': [0.0037765912750214957, -2.0185873175002845e-18], 'true': [-2.854859206178974e-16, 0.0], 'true,true': [-2.854859206178974e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [nan, -2.0185873175002845e-18]}, {'': [0.002551754695405539, 7.065055611250995e-18], 'true': [0.002551754695405539, nan]}, {'': [0.002368404324046594, 4.037174635000569e-18], 'false': [nan, 4.037174635000569e-18], 'true': [2.3790493384824782e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0017361581179445647, 3.0278809762504268e-18], 'true': [9.912705577010327e-17, 0.0], 'true,true': [9.912705577010327e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0013214486338511556, 4.037174635000569e-18], 'false': [nan, 4.037174635000569e-18], 'true': [-3.9650822308041306e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0010365834115574346, -3.0278809762504268e-18], 'true': [-1.9825411154020653e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, B), movie(D, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, B), movie(D, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.6913094771863096;  // std dev = 0,152, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5589621067898783;  // std dev = 0,026, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22260640147938018;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.41663939184002113;  // std dev = 4,21e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40316815480310564;  // std dev = 0,109, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.10159632948783624;  // std dev = 2,98e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.3248465833432439;  // std dev = 0,034, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2554069191327716;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2538713436528636;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2461130030791707;  // std dev = 0,085, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08518475138839679;  // std dev = 1,97e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21312538882001802;  // std dev = 0,031, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25364347725005215;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17956562164511983;  // std dev = 0,027, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.208677230955446;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15461635109115807;  // std dev = 0,024, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17630360694596525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13546852864658307;  // std dev = 0,022, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1521421042374966;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.827 seconds
Total inference time: 1.935 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:03:17
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.935, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.01916360855102539, 'Total time': 3.0625972747802734, 'Generating paths time': 2.948982000350952, 'Knowledge compiling time': 0.016338348388671875, 'Finding best mapping': 0.07810425758361816, 'Possible mappings': 288}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.874, 'Recall': 1.0, 'CLL': -0.125718, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.168}, 'CLL': -0.140467, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 3.995}


Start learning from scratch in target domain

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19670004057326632;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16371858628713248;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.139091093402249;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1201377116837435;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289355
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 3.41 seconds
Total inference time: 1.002 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:03:22
{'AUC PR': 0.837662, 'AUC ROC': 0.903675, 'Inference time': 1.002, 'Recall': 1.0, 'CLL': -0.289355, 'Precision': [0.840206, 0.5], 'F1': 0.913165, 'Learning time': 3.41}


Starting fold 2

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.017004013061523438
   Generating paths time   = 2.6813271045684814
   Generating mappings time   = 0.016848087310791016
   Possible mappings   = 288
   Finding best mapping   = 0.08411598205566406
   Total time   = 2.799302339553833


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(M, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, J).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(H, A).;true;true
1;true,true;movie(H, B).;false;false
1;true,false;movie(I, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false,false;genre(M, C).;false;false
2;true;movie(D, A), movie(D, B).;false;true
2;true,false;movie(J, A).;true;true
2;true,false,true;genre(L, C), movie(J, L).;false;false
2;false;actor(B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(J, B).;true;true
3;true,true;movie(J, K), actor(K).;false;false
3;true,false;movie(L, B), movie(L, A).;false;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true,false,false;genre(L, C).;false;false
4;true;movie(D, B), movie(D, A).;true;true
4;true,true;movie(D, E).;false;false
4;true,false;movie(I, B), movie(J, A).;true;true
4;true,false,true;genre(K, C), movie(J, K).;false;false
4;false;director(B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(G, B).;false;true
5;true,false;movie(K, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true;movie(D, B), movie(D, A).;false;true
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(C, D).;false;false
7;true,false;movie(H, A).;true;false
7;true,false,true;movie(H, J).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false,false;genre(M, C).;false;false
8;true;movie(D, B), movie(D, A).;false;true
8;true,false;movie(J, A).;true;true
8;true,false,true;genre(L, C), movie(J, L).;false;false
8;false;director(B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, B), movie(C, A).;false;true
9;true,false;movie(I, B), movie(J, A).;true;false
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.40020992037010544;  // std dev = 0,722, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32449318661391086;  // std dev = 1,37e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1443769707625095;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1443769707625095;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.24491106697917867;  // std dev = 0,536, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21372726932371383;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, F) )
%   | | then return -0.1572454139163873;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1800025478888798;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1375115932874777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1549448328621323;  // std dev = 2,98e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12200005105816641;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12200005105816641;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13572296095890835;  // std dev = 3,33e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.10952276379296592;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126244
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.513 seconds
Total inference time: 1.036 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [5.16e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.19e-07, 0, 58], 'true,false,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true': [3.94e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.722, 2, 58], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 56, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.37e-07, 0, 58], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [1.83e-08, 56, 0], 'true,true': [0.536, 2, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false,true': [0.0, 0, 0], 'false,false': [1.83e-08, 56, 0], 'true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.29e-08, 56, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 58], 'true,false,true,false': [0.0, 1, 0], 'false,false': [1.67e-08, 56, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [3.33e-08, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true': [0.0230030098461001, nan], 'true,true': [-1.2250736823450003e-16, 0.0]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'false': [2.7755575615628914e-17, nan], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.008683086634361459, 1.3877787807814457e-17], 'true': [0.008683086634361459, nan], 'true,true': [0.008683086634361459, nan]}, {'': [0.0070837083442974935, -9.912705577010326e-19], 'true': [3.215818416155626e-16, 0.0], 'true,true': [3.215818416155626e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0], 'false': [nan, -9.912705577010326e-19]}, {'': [0.004780891912126732, 5.9476233462061954e-18], 'true': [0.004780891912126732, nan]}, {'': [0.004434445799555971, 5.9476233462061954e-18], 'false': [nan, 5.9476233462061954e-18], 'true': [-8.422381566121877e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.003248490739513199, 2.9738116731030977e-18], 'true': [4.594026308793751e-17, 0.0], 'true,true': [4.594026308793751e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.002471395103510232, 4.956352788505163e-18], 'false': [nan, 4.956352788505163e-18], 'true': [1.5313421029312504e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0019380205552923377, -2.9738116731030977e-18], 'true': [1.914177628664063e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '2;true,false;genre(F, C), movie(E, F).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, B), movie(D, A).;true;true', '4;true,false;genre(H, C), movie(G, H).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, B), movie(D, A).;true;true', '8;true,false;genre(F, C), movie(E, F).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6792392193186044;  // std dev = 0,180, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.6978088468073818;  // std dev = 0,134, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5622849568829554;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.22212888411027426;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39657311848294186;  // std dev = 0,130, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.405498184680009;  // std dev = 0,096, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.10159632948783627;  // std dev = 2,79e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.33264501180259487;  // std dev = 4,21e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.32656973861670285;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.2545721832276657;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24492665139055872;  // std dev = 0,084, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21622170592857123;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.25274619918250585;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1839157839149248;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.18072266720312324;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.20804390446587695;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.15789753585408617;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15548914253229376;  // std dev = 2,79e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.17583935626947306;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1380176857634055;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1361466003515771;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.15179010447294677;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.142245
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 19.207 seconds
Total inference time: 1.116 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:03:49
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.116, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.016848087310791016, 'Total time': 2.799302339553833, 'Generating paths time': 2.6813271045684814, 'Knowledge compiling time': 0.017004013061523438, 'Finding best mapping': 0.08411598205566406, 'Possible mappings': 288}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.036, 'Recall': 1.0, 'CLL': -0.126244, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.513}, 'CLL': -0.142245, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 21.72}


Start learning from scratch in target domain

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3107971418551718;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2452701034529891;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19961850189633581;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.19704130244869125;  // std dev = 0,049, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.36428450834325343;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16771875489870317;  // std dev = 0,044, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3257930210983801;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14559662832943784;  // std dev = 0,039, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903050856307372;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179547
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 8.46 seconds
Total inference time: 1.291 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:04:00
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.291, 'Recall': 1.0, 'CLL': -0.179547, 'Precision': [0.841558, 0.5], 'F1': 0.913963, 'Learning time': 8.46}


Starting fold 3

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.02046942710876465
   Generating paths time   = 2.8269786834716797
   Generating mappings time   = 0.030766963958740234
   Possible mappings   = 288
   Finding best mapping   = 0.12364363670349121
   Total time   = 3.00187087059021


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(M, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, J).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(H, A).;true;true
1;true,true;movie(H, B).;false;false
1;true,false;movie(I, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false,false;genre(M, C).;false;false
2;true;movie(D, A), movie(D, B).;false;true
2;true,false;movie(J, A).;true;true
2;true,false,true;genre(L, C), movie(J, L).;false;false
2;false;actor(B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(J, B).;true;true
3;true,true;movie(J, K), actor(K).;false;false
3;true,false;movie(L, B), movie(L, A).;false;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true,false,false;genre(L, C).;false;false
4;true;movie(D, B), movie(D, A).;true;true
4;true,true;movie(D, E).;false;false
4;true,false;movie(I, B), movie(J, A).;true;true
4;true,false,true;genre(K, C), movie(J, K).;false;false
4;false;director(B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(G, B).;false;true
5;true,false;movie(K, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true;movie(D, B), movie(D, A).;false;true
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(C, D).;false;false
7;true,false;movie(H, A).;true;false
7;true,false,true;movie(H, J).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false,false;genre(M, C).;false;false
8;true;movie(D, B), movie(D, A).;false;true
8;true,false;movie(J, A).;true;true
8;true,false,true;genre(L, C), movie(J, L).;false;false
8;false;director(B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, B), movie(C, A).;false;true
9;true,false;movie(I, B), movie(J, A).;true;false
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3238867057689527;  // std dev = 3,335, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10429320596924646;  // std dev = 0,124, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.34144183828240604;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.13520207265519654;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.13520207265519651;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.18531691747500675;  // std dev = 2,460, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.09246471894814631;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.20148650557973793;  // std dev = 2,813, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08930384762723055;  // std dev = 0,198, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2315101152355543;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, F) )
%   | | then return -0.14314127918703487;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.1106077628278661;  // std dev = 2,317, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07829987975449376;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.21902250834347806;  // std dev = 0,566, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.20028153254286327;  // std dev = 0,512, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07803950965561406;  // std dev = 0,239, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.16106348160085882;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.10594343222669124;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10594343222669124;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.07330594585590851;  // std dev = 1,984, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.06773505256508193;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16560094179396245;  // std dev = 0,544, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.0963193164558913;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.18025325218457847;  // std dev = 0,505, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06930252312474945;  // std dev = 0,263, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.473 seconds
Total inference time: 1.389 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [4.59e-08, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [9.42e-08, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,false': [0.0, 44, 0], 'true,true,true': [0.0, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [4.77e-07, 0, 129], 'true,false,true,false': [7.45e-09, 11, 0], 'false,false': [2.85, 29, 49], 'false,true': [9.54e-08, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.335, 44, 178], 'true,false': [0.0, 0, 0], 'false': [0.124, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,false,true,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.46, 29, 49], 'false,false': [0.0, 126, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 129], 'true,false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [0.198, 134, 0], 'true,true': [2.813, 44, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)'}, {'true,false,false': [0.0, 0, 0], 'false,true,true': [2.317, 29, 49], 'true,true': [0.0, 0, 129], 'false,false': [0.0, 126, 0], 'true,false,true': [1.49e-08, 23, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.512, 44, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.239, 134, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.566, 0, 178]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 129], 'true,false,true,false': [7.45e-09, 11, 0], 'false,false': [0.0, 126, 0], 'false,true': [1.984, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.544, 0, 178], 'true,false,true,false': [0.505, 40, 0], 'false': [0.263, 134, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,false': [4.794144879063176e-17, nan], 'true,false,true': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true': [0.11344775516652696, nan], 'true,true': [-3.193450497798203e-15, -2.7755575615628914e-17]}, {'': [0.057249377286753104, 0.08135941927804699], 'false': [7.225260953909749e-17, 0.10412266355706305], 'true': [1.7625866313428842e-15, 4.827056628805028e-18], 'true,false': [4.827056628805028e-18, nan], 'true,false,true': [6.938893903907228e-18, 5.046468293750712e-18]}, {'': [0.050102651617699306, 0.0001145519984067719], 'true': [0.050102651617699306, nan], 'true,true': [0.050102651617699306, nan]}, {'': [0.029175510851503845, 0.04788287426517086], 'true': [-9.77684772073006e-16, -1.206764157201257e-17], 'true,true': [-9.77684772073006e-16, nan], 'true,false': [-1.206764157201257e-17, nan], 'true,false,true': [-1.61907524424502e-17, -7.569702440626067e-18], 'false': [0.07757285656963017, -2.6433881538694202e-17]}, {'': [0.03564688967706989, 0.00029276461092179166], 'true': [0.03564688967706989, nan]}, {'': [0.01802540689950036, 0.034737830372948995], 'false': [0.06881137401317713, -3.4364046000302466e-17], 'true': [-1.652424966883954e-16, 9.654113257610057e-18], 'false,true': [0.06881137401317713, nan], 'true,false': [9.654113257610057e-18, nan]}, {'': [0.03056379043587314, 0.00042704865358637444], 'true': [0.001797304203374267, 0.005967814591966255], 'true,true': [0.001797304203374267, nan], 'true,false': [0.005967814591966255, nan], 'true,false,true': [0.005967814591966255, nan]}, {'': [0.009155359126475457, 0.024002236507356337], 'false': [0.050488496921239474, -6.1679056923619804e-18], 'true': [-1.8589780877444483e-16, 4.827056628805028e-18], 'true,false': [4.827056628805028e-18, nan], 'true,false,true': [6.938893903907228e-18, 5.046468293750712e-18]}, {'': [0.02077632531214256, 0.0005155887777571635], 'true': [0.0016628197827198174, 0.006376734672918958], 'true,false': [0.006376734672918958, nan], 'true,false,true': [0.0, 0.006373962179582904]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '2;true,false;genre(F, C), movie(E, F).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;false;director(B).;true;true', '4;true;movie(D, B), movie(D, A).;true;true', '4;true,false;genre(H, C), movie(G, H).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;director(B).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;false;director(B).;true;true', '8;true;movie(D, B), movie(D, A).;true;true', '8;true,false;genre(F, C), movie(E, F).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true', '9;true,false;movie(D, F), movie(E, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5400217908149866;  // std dev = 0,346, 113,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | | else return 0.5644425772129087;  // std dev = 0,327, 109,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5953899343810255;  // std dev = 0,032, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.19888235433849988;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5982872014917212;  // std dev = 0,014, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.17563349430965036;  // std dev = 0,211, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4514217689194326;  // std dev = 0,003, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.4456631125466259;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.1691095300809892;  // std dev = 0,002, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.17331697971567056;  // std dev = 0,002, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.09596112530450109;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3441211245387183;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.3399213877007839;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14644530110773663;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.34346750185383706;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.3392716156751296;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( director(A) )
%   | | | then return -0.08795288929215847;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14995082345915534;  // std dev = 0,006, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.0926912761892608;  // std dev = 7,60e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.27088006800515124;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2682062120277401;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.12911248758282426;  // std dev = 0,001, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.1319103228990931;  // std dev = 0,001, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6,66e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.08114853719066734;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2209767116560836;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.21895403863059557;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.11452014637163034;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11629806099690179;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.22059071903703503;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.21856993016051773;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( director(A) )
%   | | | then return -0.07529982427183447;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11756896922375319;  // std dev = 0,004, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07877675473109154;  // std dev = 7,22e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18515015577917995;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1837907795763628;  // std dev = 0,000710, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10399410636158359;  // std dev = 0,000754, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10591672026522936;  // std dev = 0,000856, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then return -0.07324622576333718;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.07022151828077149;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.15894344081840733;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.15782287729856695;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.09415778469569357;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09533409251221342;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.1585352803087317;  // std dev = 0,000392, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( director(A) )
%   | | | then return -0.06577281182101086;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09636156589803219;  // std dev = 0,003, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06842697784420264;  // std dev = 5,96e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13874680933138384;  // std dev = 0,000816, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13793569484673582;  // std dev = 0,000777, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.08685960110723003;  // std dev = 0,003, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08826422979179874;  // std dev = 0,003, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.061844885226337847;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097161
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.987 seconds
Total inference time: 0.993 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:04:18
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.993, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.030766963958740234, 'Total time': 3.00187087059021, 'Generating paths time': 2.8269786834716797, 'Knowledge compiling time': 0.02046942710876465, 'Finding best mapping': 0.12364363670349121, 'Possible mappings': 288}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.389, 'Recall': 1.0, 'CLL': -0.098728, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 6.473}, 'CLL': -0.097161, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 11.46}


Start learning from scratch in target domain

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.399 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:04:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.759, 'Recall': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 10.399}


Starting fold 4

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.0170896053314209
   Generating paths time   = 2.6538164615631104
   Generating mappings time   = 0.016278505325317383
   Possible mappings   = 288
   Finding best mapping   = 0.06939172744750977
   Total time   = 2.7565832138061523


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(M, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, J).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(H, A).;true;true
1;true,true;movie(H, B).;false;false
1;true,false;movie(I, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false,false;genre(M, C).;false;false
2;true;movie(D, A), movie(D, B).;false;true
2;true,false;movie(J, A).;true;true
2;true,false,true;genre(L, C), movie(J, L).;false;false
2;false;actor(B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(J, B).;true;true
3;true,true;movie(J, K), actor(K).;false;false
3;true,false;movie(L, B), movie(L, A).;false;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true,false,false;genre(L, C).;false;false
4;true;movie(D, B), movie(D, A).;true;true
4;true,true;movie(D, E).;false;false
4;true,false;movie(I, B), movie(J, A).;true;true
4;true,false,true;genre(K, C), movie(J, K).;false;false
4;false;director(B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(G, B).;false;true
5;true,false;movie(K, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true;movie(D, B), movie(D, A).;false;true
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(C, D).;false;false
7;true,false;movie(H, A).;true;false
7;true,false,true;movie(H, J).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false,false;genre(M, C).;false;false
8;true;movie(D, B), movie(D, A).;false;true
8;true,false;movie(J, A).;true;true
8;true,false,true;genre(L, C), movie(J, L).;false;false
8;false;director(B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, B), movie(C, A).;false;true
9;true,false;movie(I, B), movie(J, A).;true;false
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3476334034751751;  // std dev = 1,278, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.336122450935179;  // std dev = 5,16e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1380027249904151;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.21342410337257645;  // std dev = 0,955, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.22615189332660715;  // std dev = 6,32e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, F) )
%   | | then return -0.1472220382030733;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1890307196222923;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12968132555092704;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.16173821745868897;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11573428699780118;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14099024528013462;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.10440647591573195;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10440647591573195;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12804
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.945 seconds
Total inference time: 0.885 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [3.8e-08, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,false': [0.0, 7, 0], 'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.278, 7, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 45], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [2.24e-08, 38, 0], 'true,true': [0.955, 7, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [6.32e-08, 0, 45], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,false,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [5.27e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [9.13e-09, 38, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.05e-08, 0, 45], 'true,false,true,false': [0.0, 3, 0], 'false': [0.0, 38, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true': [0.0831635545216455, nan], 'true,true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'false': [-8.764918615461762e-18, nan], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.0313922549076915, -1.0225738384705389e-17], 'true': [0.0313922549076915, nan], 'true,true': [0.0313922549076915, nan]}, {'': [0.026187250358964444, -1.1686558153949016e-17], 'true': [5.921189464667501e-17, 0.0], 'true,true': [5.921189464667501e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [nan, -1.1686558153949016e-17]}, {'': [0.01754226537173022, 1.3147377923192643e-17], 'true': [0.01754226537173022, nan]}, {'': [0.016240217904943934, 0.0], 'false': [nan, 0.0], 'true': [8.881784197001253e-17, -3.96508223080413e-18], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.011833162292021564, 2.1912296538654404e-18], 'true': [-4.934324553889585e-18, 3.96508223080413e-18], 'true,true': [-4.934324553889585e-18, nan], 'true,false': [3.96508223080413e-18, nan], 'true,false,true': [3.96508223080413e-18, nan]}, {'': [0.008968994851977571, -7.304098846218135e-19], 'false': [nan, -7.304098846218135e-19], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.007015221336431123, -1.460819769243627e-18], 'true': [2.4671622769447924e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;true;movie(D, B), movie(D, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;true;movie(D, B), movie(D, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true', '9;true,false;movie(D, F), movie(E, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5894860197895166;  // std dev = 0,305, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.6111505851930897;  // std dev = 0,282, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5832158693056174;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20802651085303023;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4385092601109628;  // std dev = 0,015, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1758261403458574;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.33498705511027194;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15177977420830074;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26489193429745556;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13325413753469775;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21660132245767147;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11860152877843914;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1821003705816936;  // std dev = 0,009, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10675343295114105;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 9,13e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15652959173557354;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09699283762877117;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1369558042686464;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.08882349657874271;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134758
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.48 seconds
Total inference time: 0.896 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:04:39
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.896, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.016278505325317383, 'Total time': 2.7565832138061523, 'Generating paths time': 2.6538164615631104, 'Knowledge compiling time': 0.0170896053314209, 'Finding best mapping': 0.06939172744750977, 'Possible mappings': 288}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.885, 'Recall': 1.0, 'CLL': -0.12804, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.945}, 'CLL': -0.134758, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 5.425}


Start learning from scratch in target domain

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.811 seconds
Total inference time: 0.823 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:04:44
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.823, 'Recall': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 3.811}


Starting fold 5

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.047185420989990234
   Generating paths time   = 2.6151347160339355
   Generating mappings time   = 0.016293764114379883
   Possible mappings   = 288
   Finding best mapping   = 0.06935691833496094
   Total time   = 2.747979164123535


Best mapping found: ['professor(A) -> director(A)', 'student(A) -> actor(A)', 'publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(M, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, J).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(H, A).;true;true
1;true,true;movie(H, B).;false;false
1;true,false;movie(I, B).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true,false,false;genre(M, C).;false;false
2;true;movie(D, A), movie(D, B).;false;true
2;true,false;movie(J, A).;true;true
2;true,false,true;genre(L, C), movie(J, L).;false;false
2;false;actor(B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(J, B).;true;true
3;true,true;movie(J, K), actor(K).;false;false
3;true,false;movie(L, B), movie(L, A).;false;false
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true,false,false;genre(L, C).;false;false
4;true;movie(D, B), movie(D, A).;true;true
4;true,true;movie(D, E).;false;false
4;true,false;movie(I, B), movie(J, A).;true;true
4;true,false,true;genre(K, C), movie(J, K).;false;false
4;false;director(B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(G, B).;false;true
5;true,false;movie(K, B), movie(L, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true;movie(D, B), movie(D, A).;false;true
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,true;movie(C, D).;false;false
7;true,false;movie(H, A).;true;false
7;true,false,true;movie(H, J).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false,false;genre(M, C).;false;false
8;true;movie(D, B), movie(D, A).;false;true
8;true,false;movie(J, A).;true;true
8;true,false,true;genre(L, C), movie(J, L).;false;false
8;false;director(B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, B), movie(C, A).;false;true
9;true,false;movie(I, B), movie(J, A).;true;false
9;true,false,true;movie(I, K), movie(J, K).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.40622858603556794;  // std dev = 0,513, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32317530707523007;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14512206266854047;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.32317530707523007;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.24848550296594832;  // std dev = 0,381, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2123399299126503;  // std dev = 4,47e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, F) )
%   | | then return -0.15842150497257806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.2123399299126505;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17898812507522435;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13842403237801315;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1541773377102391;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1227259517083306;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.15417733771023903;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13512513311396743;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.11011259166342041;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116906
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.529 seconds
Total inference time: 0.986 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [4.21e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'actor(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 35], 'true,false,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 10], 'false,true': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.513, 1, 45], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 10], 'false,false': [0.0, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)'}, {'false': [2.11e-08, 44, 0], 'true,true': [0.381, 1, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)'}, {'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 10], 'true,true': [4.47e-08, 0, 35], 'false,false': [0.0, 44, 0], 'true,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [4.71e-08, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 35], 'true,false,true,false': [0.0, 1, 0], 'false,false': [9.13e-09, 44, 0], 'false,true': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [4.21e-08, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true': [0.015181896531630958, nan], 'true,true': [-9.473903143468002e-16, 0.0]}, {'': [0.012039361070842395, 0.06726754122121566], 'false': [5.046468293750712e-18, -1.3322676295501878e-16], 'true': [-2.0301221021717148e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.005730803218362994, 5.046468293750712e-18], 'true': [0.005730803218362994, nan], 'true,true': [0.005730803218362994, nan]}, {'': [0.005922519234423305, 0.026095955635622697], 'true': [-7.612957883143931e-17, 0.0], 'true,true': [-7.612957883143931e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0], 'false': [-6.661338147750939e-17, -3.784851220313033e-18]}, {'': [0.0031502811191418158, 1.0092936587501423e-17], 'true': [0.0031502811191418158, nan]}, {'': [0.0037123776666168557, 0.012787903495989095], 'false': [0.0, 0.0], 'true': [5.709718412357947e-17, 0.0], 'false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.0021426141287620294, 2.523234146875356e-18], 'true': [4.9343245538895844e-17, 0.0], 'true,true': [4.9343245538895844e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0020707099607861056, 0.007477084970344001], 'false': [-8.326672684688674e-18, 1.8924256101565167e-18], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.001279002539900576, -2.523234146875356e-18], 'true': [3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;movie(D, A), movie(D, B).;true;true', '3;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '4;false;director(B).;true;true', '4;true;movie(D, B), movie(D, A).;true;true', '5;;workedunder(A, B) :- actor(A), director(B).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;director(B).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- actor(A), director(B).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;false;director(B).;true;true', '8;true;movie(D, B), movie(D, A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, B), movie(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6842684934301482;  // std dev = 0,169, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5595802534599584;  // std dev = 0,026, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2213903197676109;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.5605717397455287;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3995648087262987;  // std dev = 0,122, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.41644535170220714;  // std dev = 0,000436, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32558300898520126;  // std dev = 0,034, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2536180478942963;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.32667222573846366;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.24385790201574611;  // std dev = 0,094, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2535799956425933;  // std dev = 0,000712, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.0851847513883968;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21374171800904013;  // std dev = 0,031, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2517749387670306;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.21457840817143908;  // std dev = 0,016, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18015363062395093;  // std dev = 0,031, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20735499785329264;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1549417699661698;  // std dev = 0,024, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.17533220193681068;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.15548362414644692;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13581642827993304;  // std dev = 0,024, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1514041402279061;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126925
   Precision = 0.941341 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.969784


Total learning time: 2.636 seconds
Total inference time: 0.996 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:04:55
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.996, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.016293764114379883, 'Total time': 2.747979164123535, 'Generating paths time': 2.6151347160339355, 'Knowledge compiling time': 0.047185420989990234, 'Finding best mapping': 0.06935691833496094, 'Possible mappings': 288}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.986, 'Recall': 1.0, 'CLL': -0.116906, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.529}, 'CLL': -0.126925, 'Precision': [0.941341, 0.5], 'F1': 0.969784, 'Learning time': 5.165}


Start learning from scratch in target domain

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 2.749 seconds
Total inference time: 0.791 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:04:59
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.791, 'Recall': 1.0, 'CLL': -0.213649, 'Precision': [0.844612, 0.5], 'F1': 0.915761, 'Learning time': 2.749}


Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | then return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6022753891158077;  // std dev = 2,439, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.4104895662080564;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5668366200721044;  // std dev = 0,087, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.5081090089455164;  // std dev = 0,915, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3024623706773498;  // std dev = 1,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.5171363622026371;  // std dev = 1,893, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41333218051658055;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( professor(B) )
%   | then if ( publication(L, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.0551230450865158;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.43606280623756677;  // std dev = 0,132, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.3772886182030455;  // std dev = 0,912, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4240928014050815;  // std dev = 0,043, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( publication(I, A) )
%   | | then if ( hasposition(J, C), publication(I, J) )
%   | | | then return 0.10550717037737643;  // std dev = 1,665, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.5245116684321666;  // std dev = 0,156, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(K, C), tempadvisedby(L, K) )
%   | | | then return 0.4073744257008209;  // std dev = 1,644, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.23264390853184744;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( student(B) )
%   | then return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06169471073240645;  // std dev = 0,231, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.33077543671747645;  // std dev = 0,148, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.2194557362149802;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3302812685300858;  // std dev = 0,025, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), publication(K, L) )
%   | | | then return -0.0728903284972761;  // std dev = 1,047, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3381575693242123;  // std dev = 0,628, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.3210581879853753;  // std dev = 1,325, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.25743505404305045;  // std dev = 2,038, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   else return -0.09315851941394428;  // std dev = 0,021, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(F, A, G), ta(F, H, E) )
%   | | then if ( ta(D, H, I) )
%   | | | then return 0.13693645346691755;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.26417481058310366;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2694782879640313;  // std dev = 0,125, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( ta(J, A, K) )
%   | | then if ( ta(J, L, M), tempadvisedby(L, N) )
%   | | | then return 0.31792877405517167;  // std dev = 0,105, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.19799822888117208;  // std dev = 1,694, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( publication(P, B), publication(P, A) )
%   | | | then return 0.26090289002214456;  // std dev = 0,020, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.14570732885477058;  // std dev = 2,158, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else return -0.08558151638263352;  // std dev = 0,019, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( publication(F, A), publication(F, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.2602811091040861;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4586606896623322;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A), publication(G, D) )
%   | | | then return 0.13709207245015967;  // std dev = 1,746, 41,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | | else return 0.19737211726807063;  // std dev = 1,787, 67,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=62 */
%   | else if ( publication(H, A) )
%   | | then return 0.2686652714386821;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.05361615198931852;  // std dev = 0,844, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0492084383622207;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( student(B) )
%   | then return -0.0787140756253058;  // std dev = 4,08e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.060155421611030664;  // std dev = 0,219, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.19521300898835314;  // std dev = 0,150, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.08350001371848159;  // std dev = 0,879, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18791883905279883;  // std dev = 0,031, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then return -0.0034198068513234168;  // std dev = 0,749, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.19394088627869108;  // std dev = 0,999, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.11898541503605956;  // std dev = 2,415, 59,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   else return -0.07369091047969975;  // std dev = 0,020, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.20919305989174472;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.16834810413101564;  // std dev = 0,131, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.13183110594895783;  // std dev = 0,886, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.15996853315202866;  // std dev = 1,146, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.12188725946386555;  // std dev = 1,011, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.19939698298255354;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11813845965846037;  // std dev = 2,157, 56,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   else return -0.0688163429029761;  // std dev = 0,019, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.16690388651472057;  // std dev = 0,093, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03669017880221772;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1388295084576585;  // std dev = 0,048, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then return -0.017430006340926146;  // std dev = 0,742, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, A, N) )
%   | | | then return 0.13994034807521932;  // std dev = 0,987, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.08338846840028392;  // std dev = 2,286, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( professor(B) )
%   | then if ( publication(P, B) )
%   | | then return -0.06769109908194164;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.02688371404808058;  // std dev = 0,710, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06409367081990335;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Predicates from source: ['advisedby(person,person).', 'ta(course,person,quarter).', 'projectmember(project,person).', 'publication(title,person).', 'professor(person).', 'tempadvisedby(person,person).', 'hasposition(person,faculty).', 'student(person).']

Starting fold 1

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.015629053115844727
   Generating paths time   = 2.5274658203125
   Generating mappings time   = 0.03923606872558594
   Possible mappings   = 864
   Finding best mapping   = 0.18454337120056152
   Total time   = 2.7668802738189697


Best mapping found: ['professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'student(A) -> actor(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, K).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(L, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;true,true;movie(H, B).;false;false
2;true,false;genre(J, C).;false;false
2;false;director(B).;true;false
2;false,true;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
3;true,true;movie(F, E).;false;false
3;true,false;movie(I, A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;actor(B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;true
4;true,false;movie(J, A), movie(K, B).;true;false
4;true,false,true;movie(J, L), movie(K, L).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(P, B), movie(P, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true,false,false;movie(I, B).;false;false
6;true;genre(D, C).;true;true
6;true,true;movie(F, A), movie(F, E).;true;true
6;true,false;movie(H, A).;false;true
6;false;actor(B).;false;false
6;true,true,false;movie(G, A), movie(G, D).;false;false
6;true,true,true;movie(F, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false;movie(K, J).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,false;genre(B, L).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false;movie(H, A).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;false;director(B).;true;false
9;true;movie(D, A), movie(D, B).;false;true
9;true,false;movie(K, J).;false;false
9;false,true;movie(P, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13400703000801079;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121506
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.694 seconds
Total inference time: 1.12 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [5.16e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [1.03e-07, 0, 56], 'false,true': [0.0, 0, 0], 'false,false': [3.8e-08, 55, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.33e-08, 55, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [1.83e-08, 55, 0], 'true,true': [0.0, 0, 56], 'true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'actor(B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'true,true,true': 'movie(E, B)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 56], 'false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.49e-08, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [5.16e-08, 0, 56], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 55, 0], 'true,false,true': [0.0, 1, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'false': [nan, 2.62416351275037e-17], 'true': [0.007683847065712494, nan], 'true,true': [1.9032394707859825e-16, 0.0]}, {'': [0.004644692439814939, 2.0185873175002847e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,true': [-3.489272363107635e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [2.0185873175002847e-17, nan]}, {'': [0.0029456817402654088, -3.0278809762504268e-18], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true': [-3.172065784643304e-17, 0.0]}, {'': [0.0014349399424219715, 4.037174635000569e-18], 'false': [4.037174635000569e-18, nan], 'true': [0.0014349399424219715, nan], 'true,true': [0.0014349399424219715, nan], 'true,true,true': [-1.586032892321652e-17, 0.0]}, {'': [0.0010802101680417507, 2.0185873175002845e-18], 'true': [-3.9650822308041306e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0008431290136933203, 4.037174635000569e-18], 'true': [-1.1895246692412391e-17, 0.0], 'true,true': [-1.1895246692412391e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0006770810581342941, -3.0278809762504268e-18], 'false': [nan, -3.0278809762504268e-18], 'true': [4.7580986769649563e-17, 0.0], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(E, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5331103429149548;  // std dev = 0,120, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4203215730716789;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17738214267363117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32261875832735304;  // std dev = 0,018, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15296051391952323;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2564745572796132;  // std dev = 0,016, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1341761471394236;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.20876204750961225;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2014021100964352;  // std dev = 0,060, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1786151201634191;  // std dev = 0,016, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14217980151668425;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1538956163686154;  // std dev = 0,014, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12570479113895325;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13490603393159387;  // std dev = 0,013, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11252682610544025;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.676 seconds
Total inference time: 1.63 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:47:11
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.63, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.03923606872558594, 'Total time': 2.7668802738189697, 'Generating paths time': 2.5274658203125, 'Knowledge compiling time': 0.015629053115844727, 'Finding best mapping': 0.18454337120056152, 'Possible mappings': 864}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.12, 'Recall': 1.0, 'CLL': -0.121506, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 1.694}, 'CLL': -0.134555, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 3.37}


Start learning from scratch in target domain

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19670004057326632;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16371858628713248;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.139091093402249;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1201377116837435;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289355
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 2.456 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:47:14
{'AUC PR': 0.837662, 'AUC ROC': 0.903675, 'Inference time': 0.79, 'Recall': 1.0, 'CLL': -0.289355, 'Precision': [0.840206, 0.5], 'F1': 0.913165, 'Learning time': 2.456}


Starting fold 2

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.016556739807128906
   Generating paths time   = 2.6786890029907227
   Generating mappings time   = 0.05133461952209473
   Possible mappings   = 864
   Finding best mapping   = 0.23595666885375977
   Total time   = 2.9825451374053955


Best mapping found: ['professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'student(A) -> actor(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, K).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(L, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;true,true;movie(H, B).;false;false
2;true,false;genre(J, C).;false;false
2;false;director(B).;true;false
2;false,true;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
3;true,true;movie(F, E).;false;false
3;true,false;movie(I, A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;actor(B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;true
4;true,false;movie(J, A), movie(K, B).;true;false
4;true,false,true;movie(J, L), movie(K, L).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(P, B), movie(P, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true,false,false;movie(I, B).;false;false
6;true;genre(D, C).;true;true
6;true,true;movie(F, A), movie(F, E).;true;true
6;true,false;movie(H, A).;false;true
6;false;actor(B).;false;false
6;true,true,false;movie(G, A), movie(G, D).;false;false
6;true,true,true;movie(F, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false;movie(K, J).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,false;genre(B, L).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false;movie(H, A).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;false;director(B).;true;false
9;true;movie(D, A), movie(D, B).;false;true
9;true,false;movie(K, J).;false;false
9;false,true;movie(P, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.447 seconds
Total inference time: 0.987 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [5.16e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true': [1.19e-07, 0, 58], 'false,true': [0.0, 0, 0], 'false,false': [3.94e-08, 56, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.8e-08, 56, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 58], 'true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'actor(B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'true,true,true': 'movie(E, B)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 58], 'false': [7.45e-09, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.67e-08, 56, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [3.94e-08, 0, 58], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 56, 0], 'true,false,true': [0.0, 2, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'false': [nan, 2.7755575615628914e-17], 'true': [0.014364677666239759, nan], 'true,true': [2.4501473646900006e-16, 0.0]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,true': [-3.3689526264487507e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0], 'false': [2.577303450022685e-17, nan]}, {'': [0.005506846810506941, -1.982541115402065e-18], 'true': [-1.5313421029312505e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0037327151297170975, 5.9476233462061954e-18], 'true': [-3.062684205862501e-17, 0.0]}, {'': [0.002682568974502808, 5.9476233462061954e-18], 'false': [5.9476233462061954e-18, nan], 'true': [0.002682568974502808, nan], 'true,true': [0.002682568974502808, nan], 'true,true,true': [-2.2970131543968756e-17, 0.0]}, {'': [0.002019414330219523, 9.912705577010326e-19], 'true': [-3.062684205862501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0015761995793491948, 4.956352788505163e-18], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0012657788567156454, -2.9738116731030977e-18], 'false': [nan, -2.9738116731030977e-18], 'true': [2.6798486801296883e-17, 0.0], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '3;true,false;genre(H, C), movie(G, H).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(E, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0,142, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5382463645683382;  // std dev = 0,106, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.42291829403183534;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.17706371681642905;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3243792912144349;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15271915959310292;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25951479303079855;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2567048363152544;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.13398786498193146;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.19704729948836;  // std dev = 0,071, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.20235771981840261;  // std dev = 0,052, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18000919802669446;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14180007050417698;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1564261759041584;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15417318871536614;  // std dev = 2,98e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.12540445266787933;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1357264988868438;  // std dev = 0,000833, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11228399408749806;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134478
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.739 seconds
Total inference time: 1.224 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:47:24
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.224, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.05133461952209473, 'Total time': 2.9825451374053955, 'Generating paths time': 2.6786890029907227, 'Knowledge compiling time': 0.016556739807128906, 'Finding best mapping': 0.23595666885375977, 'Possible mappings': 864}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.987, 'Recall': 1.0, 'CLL': -0.121913, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.447}, 'CLL': -0.134478, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 4.186}


Start learning from scratch in target domain

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.3025884514838787;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3107971418551718;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.23719304019103774;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2452701034529891;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19142843787805347;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.19961850189633581;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19704130244869125;  // std dev = 0,049, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.36428450834325343;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.16771875489870317;  // std dev = 0,044, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3257930210983801;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14559662832943784;  // std dev = 0,039, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903050856307372;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179547
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 2.989 seconds
Total inference time: 1.117 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:47:29
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.117, 'Recall': 1.0, 'CLL': -0.179547, 'Precision': [0.841558, 0.5], 'F1': 0.913963, 'Learning time': 2.989}


Starting fold 3

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.02566051483154297
   Generating paths time   = 2.637899398803711
   Generating mappings time   = 0.051308393478393555
   Possible mappings   = 864
   Finding best mapping   = 0.23764848709106445
   Total time   = 2.9525229930877686


Best mapping found: ['professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'student(A) -> female(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> genre(B,A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- female(A), director(B).;true;false
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, K).;false;false
1;;workedunder(A, B) :- female(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(L, A).;false;false
2;;workedunder(A, B) :- female(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;true,true;movie(H, B).;false;false
2;true,false;genre(J, C).;false;false
2;false;director(B).;true;false
2;false,true;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), female(A).;true;true
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
3;true,true;movie(F, E).;false;false
3;true,false;movie(I, A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;female(B).;false;false
4;;workedunder(A, B) :- female(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;true
4;true,false;movie(J, A), movie(K, B).;true;false
4;true,false,true;movie(J, L), movie(K, L).;false;false
5;;workedunder(A, B) :- director(B), female(A).;true;false
5;true;movie(P, B), movie(P, A).;false;false
6;;workedunder(A, B) :- genre(B, C), female(A).;true;true
6;true,false,false;movie(I, B).;false;false
6;true;genre(D, C).;true;true
6;true,true;movie(F, A), movie(F, E).;true;true
6;true,false;movie(H, A).;false;true
6;false;female(B).;false;false
6;true,true,false;movie(G, A), movie(G, D).;false;false
6;true,true,true;movie(F, B).;false;false
7;;workedunder(A, B) :- director(B), female(A).;true;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false;movie(K, J).;false;false
8;;workedunder(A, B) :- director(B), female(A).;true;false
8;true,false,false;genre(B, L).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false;movie(H, A).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(A, B) :- genre(B, C), female(A).;true;true
9;false;director(B).;true;false
9;true;movie(D, A), movie(D, B).;false;true
9;true,false;movie(K, J).;false;false
9;false,true;movie(P, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.22440407913243224;  // std dev = 7,510, 243,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3,04e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19483503240531497;  // std dev = 7,510, 243,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.555366436746284;  // std dev = 2,27e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, B) )
%   | | then return 0.5226832401941108;  // std dev = 5,013, 168,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=131 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.20088682552983636;  // std dev = 7,30e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.17056225210583525;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0.2622160465289694;  // std dev = 6,347, 229,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=131 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34065116127364653;  // std dev = 0,199, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14602754777405158;  // std dev = 0,282, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10271727165590193;  // std dev = 6,488, 243,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2688607595123134;  // std dev = 0,174, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12371186050983157;  // std dev = 0,264, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return 0.08322271528170253;  // std dev = 6,444, 243,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.20423797995685133;  // std dev = 3,65e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.07309542647120246;  // std dev = 0,006, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.17274878600378168;  // std dev = 8,43e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0.15646290366181365;  // std dev = 6,103, 229,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=131 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19020109571158986;  // std dev = 0,171, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, E) )
%   | | then return -0.11712331120081192;  // std dev = 0,309, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.047236218964037874;  // std dev = 6,247, 243,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.16266631712005128;  // std dev = 0,151, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.10595243359573192;  // std dev = 0,283, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03761129503880397;  // std dev = 6,229, 243,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12818310363006122;  // std dev = 3,65e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( movie(E, F) )
%   | | then return -0.05539655959880955;  // std dev = 0,004, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.24120390915331863;  // std dev = 4,851, 168,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=131 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.2235376430028455;  // std dev = 0,730, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 0.989655
   AUC PR    = 0.986901
   CLL	      = -0.341716
   Precision = 0.966825 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.983133


Total learning time: 3.304 seconds
Total inference time: 1.363 seconds
AUC ROC: 0.989655


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [1.49e-08, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.19e-07, 0, 89], 'true,false,true,false': [0.0, 0, 0], 'false': [7.51, 154, 89]}], ['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 24, 0], 'true,true': [3.04e-07, 0, 89], 'false': [7.51, 154, 89]}], ['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)', 'false,true': 'movie(E, B)'}, {'false,true,true': [5.013, 37, 131], 'true,false': [0.0, 0, 0], 'false,false': [7.3e-08, 126, 0], 'true,true,false': [1.39e-08, 15, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [2.27e-07, 0, 47]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'female(B)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 65, 0], 'false,false': [6.347, 98, 131], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 47], 'true,false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.199, 0, 89], 'true,false,true,false': [0.282, 21, 0], 'false': [6.488, 154, 89]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [6.444, 154, 89], 'true,true': [0.174, 0, 89], 'true,false': [0.264, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'false': 'female(B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'true,true,true': 'movie(E, B)'}, {'true,true,true,true': [3.65e-08, 0, 47], 'true,true,true,false': [0.006, 15, 0], 'true,false': [0.0, 0, 0], 'false,false': [6.103, 98, 131], 'true,true,false': [0.0, 0, 0], 'false,true': [8.43e-08, 65, 0]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.309, 24, 0], 'true,true': [0.171, 0, 89], 'false': [6.247, 154, 89]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.283, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [6.229, 154, 89], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.151, 0, 89]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'false': 'director(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)'}, {'true,false,false': [0.0, 0, 0], 'false,true,true': [4.851, 37, 131], 'true,true': [3.65e-08, 0, 47], 'false,false': [0.73, 126, 0], 'true,false,true': [0.004, 15, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.16728013156864444, 0.23211231350234662], 'true': [1.5967252488991015e-16, 9.25185853854297e-18], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.11941902973025523, 0.23211231350234515], 'true': [1.037871411784416e-15, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.08176098872608589, 0.21370765625061489], 'false': [0.149608267004966, 4.229421046191072e-17], 'true': [0.08176098872608589, nan], 'true,true': [1.0960499647363248e-15, 1.295260195396016e-17], 'false,true': [0.149608267004966, nan]}, {'': [0.04942246285749892, 0.16927835108063405], 'true': [-3.7794826370218094e-17, -5.551115123125783e-18], 'true,true': [-3.7794826370218094e-17, nan], 'true,false': [-5.551115123125783e-18, nan], 'true,false,true': [-1.982541115402065e-18, -5.204170427930421e-18], 'false': [-1.0248212535001446e-17, 0.17591757833349167]}, {'': [0.039664610242758865, 0.1732358098820524], 'true': [0.000444906752949608, 0.0036300295693166723], 'true,false': [0.0036300295693166723, nan], 'true,false,true': [1.1564823173178713e-18, 0.0037930104887553893]}, {'': [0.02666700044654655, 0.1708693562110264], 'true': [0.00034112923325765534, 0.0029108644506616994]}, {'': [0.014106721748089858, 0.14534928136890377], 'false': [1.0931426704001542e-16, 0.16264398856200996], 'true': [0.014106721748089858, nan], 'true,true': [0.014106721748089858, nan], 'true,true,true': [2.834611977766357e-17, 2.1467563017037634e-06]}, {'': [0.01690318476082554, 0.16062202048839921], 'true': [0.0003296660297541311, 0.003974839673374993], 'true,false': [0.003974839673374993, nan]}, {'': [0.01298223379698576, 0.15969414386503022], 'true': [0.0002578627419678306, 0.0033375850904919097], 'true,true': [0.0002578627419678306, nan], 'true,false': [0.0033375850904919097, nan], 'true,false,true': [0.0033375850904919097, nan]}, {'': [0.006181255112802504, 0.13473455792655645], 'false': [0.14004949423497987, 0.004228141724551569], 'true': [2.834611977766357e-17, 1.2820042996912937e-06], 'false,true': [0.14004949423497987, nan], 'true,false': [1.2820042996912937e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- female(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- female(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- female(A), genre(B, C).;true;true', '2;false;director(B).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), female(A).;true;true', '3;false;female(B).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '3;true,false;genre(H, C), movie(G, H).;true;true', '4;;workedunder(A, B) :- female(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '4;true,false;movie(D, F), movie(E, F).;true;true', '5;;workedunder(A, B) :- director(B), female(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), female(A).;true;true', '6;false;female(B).;true;true', '6;true;movie(E, B).;true;true', '7;;workedunder(A, B) :- director(B), female(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), female(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), female(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995118;  // std dev = 1,19e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.14185106490048782;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109536;  // std dev = 3,04e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109536;  // std dev = 3,04e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.12544463852839108;  // std dev = 8,43e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.39383027184147146;  // std dev = 0,286, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,99e-07, 131,000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.1123163781936062;  // std dev = 9,19e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.457241537911821;  // std dev = 1,03e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.15796269358275744;  // std dev = 1,97e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.10159632948783619;  // std dev = 4,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( director(B) )
%   | | | then return 0.41751358415830914;  // std dev = 3,86e-07, 131,000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783615;  // std dev = 5,87e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33502036107518496;  // std dev = 0,014, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.12105187276477986;  // std dev = 0,022, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.3207118471601509;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.09269127618926108;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2649636749945112;  // std dev = 0,012, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10880218241720108;  // std dev = 0,020, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839683;  // std dev = 3,09e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839693;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839686;  // std dev = 1,97e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839687;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839689;  // std dev = 5,27e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, B) )
%   | then return 0.14431684269243852;  // std dev = 0,145, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( director(B) )
%   | | | then return 0.2084858999736434;  // std dev = 0,021, 131,000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( director(B), female(A) )
%   | | | then return -0.07508628964364576;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18876140399445743;  // std dev = 0,014, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10638842074866807;  // std dev = 0,028, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17728191979711735;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0732462257633371;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.16156798696966568;  // std dev = 0,013, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09676359099741288;  // std dev = 0,026, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1528845047823943;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15144345189504915;  // std dev = 3,73e-09, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.10715684265211502;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1290593233786491;  // std dev = 3,65e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.13411682112469045;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.05790508807046314;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097894
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.294 seconds
Total inference time: 0.842 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:47:45
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.842, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.051308393478393555, 'Total time': 2.9525229930877686, 'Generating paths time': 2.637899398803711, 'Knowledge compiling time': 0.02566051483154297, 'Finding best mapping': 0.23764848709106445, 'Possible mappings': 864}, 'Parameter Learning results': {'AUC PR': 0.986901, 'AUC ROC': 0.989655, 'Inference time': 1.363, 'Recall': 1.0, 'CLL': -0.341716, 'Precision': [0.966825, 0.5], 'F1': 0.983133, 'Learning time': 3.304}, 'CLL': -0.097894, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 8.597999999999999}


Start learning from scratch in target domain

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.62 seconds
Total inference time: 1.214 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:47:51
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.214, 'Recall': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 4.62}


Starting fold 4

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.05013608932495117
   Generating paths time   = 2.6782734394073486
   Generating mappings time   = 0.05078387260437012
   Possible mappings   = 864
   Finding best mapping   = 0.23713397979736328
   Total time   = 3.01633882522583


Best mapping found: ['professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'student(A) -> actor(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, K).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(L, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;true,true;movie(H, B).;false;false
2;true,false;genre(J, C).;false;false
2;false;director(B).;true;false
2;false,true;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
3;true,true;movie(F, E).;false;false
3;true,false;movie(I, A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;actor(B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;true
4;true,false;movie(J, A), movie(K, B).;true;false
4;true,false,true;movie(J, L), movie(K, L).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(P, B), movie(P, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true,false,false;movie(I, B).;false;false
6;true;genre(D, C).;true;true
6;true,true;movie(F, A), movie(F, E).;true;true
6;true,false;movie(H, A).;false;true
6;false;actor(B).;false;false
6;true,true,false;movie(G, A), movie(G, D).;false;false
6;true,true,true;movie(F, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false;movie(K, J).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,false;movie(L, B).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false;movie(H, A).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;false;director(B).;true;false
9;true;movie(D, A), movie(D, B).;false;true
9;true,false;movie(K, J).;false;false
9;false,true;movie(P, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.174 seconds
Total inference time: 1.004 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [3.8e-08, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 7, 0], 'true,true,true': [0.0, 0, 45], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 45], 'true,false,true,false': [2.63e-09, 3, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [2.24e-08, 38, 0], 'true,true': [0.0, 0, 45], 'true,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'actor(B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'true,true,true': 'movie(E, B)'}, {'true,true,true,true': [5.58e-08, 0, 45], 'true,true,true,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,true': [0.0, 0, 45], 'false': [1.05e-08, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 38, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 45], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,false,true': [0.0, 7, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'false': [nan, -8.764918615461762e-18], 'true': [0.05193310189730332, nan], 'true,true': [-3.947459643111668e-17, -1.982541115402065e-18]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,true': [-4.144832625267251e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'false': [-8.764918615461762e-18, nan]}, {'': [0.019909088333742615, -8.764918615461762e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 2.3129646346357427e-18]}, {'': [0.013495010447801522, 1.3147377923192643e-17], 'true': [-2.960594732333751e-17, 9.912705577010326e-19]}, {'': [0.00969838176228774, 0.0], 'false': [0.0, nan], 'true': [0.00969838176228774, nan], 'true,true': [0.00969838176228774, nan], 'true,true,true': [6.908054375445419e-17, -9.912705577010326e-19]}, {'': [0.007300856491242112, 2.921639538487254e-18], 'true': [-8.388351741612294e-17, 9.912705577010326e-19], 'true,false': [9.912705577010326e-19, nan]}, {'': [0.0056984873080174045, -7.304098846218135e-19], 'true': [-3.947459643111668e-17, 9.912705577010326e-19], 'true,true': [-3.947459643111668e-17, nan], 'true,false': [9.912705577010326e-19, nan], 'true,false,true': [9.912705577010326e-19, nan]}, {'': [0.004576212837671894, -1.460819769243627e-18], 'false': [nan, -1.460819769243627e-18], 'true': [1.2335811384723961e-17, -4.956352788505163e-19], 'true,false': [-4.956352788505163e-19, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '4;true,false;movie(D, F), movie(E, F).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(E, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.45264600367860897;  // std dev = 0,241, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.46976607585655455;  // std dev = 0,223, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4394978435719034;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1676462803244372;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.335660631710244;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.14553658693201824;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.26787578140242957;  // std dev = 1,83e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2645315925753139;  // std dev = 3,65e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.12835507053031564;  // std dev = 0,000863, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.16759687497432996;  // std dev = 0,120, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.17384650809403007;  // std dev = 0,111, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1890788293614732;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13332696312889306;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16383333228228034;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16110843214725265;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11865985048484802;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.14101764521156446;  // std dev = 0,000903, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10680108835420134;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.133249
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.933 seconds
Total inference time: 1.164 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:48:01
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.164, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.05078387260437012, 'Total time': 3.01633882522583, 'Generating paths time': 2.6782734394073486, 'Knowledge compiling time': 0.05013608932495117, 'Finding best mapping': 0.23713397979736328, 'Possible mappings': 864}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.004, 'Recall': 1.0, 'CLL': -0.120532, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.174}, 'CLL': -0.133249, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 4.107}


Start learning from scratch in target domain

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.901 seconds
Total inference time: 0.902 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:48:04
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.902, 'Recall': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 1.901}


Starting fold 5

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.016277790069580078
   Generating paths time   = 2.604095935821533
   Generating mappings time   = 0.05066323280334473
   Possible mappings   = 864
   Finding best mapping   = 0.2316141128540039
   Total time   = 2.902658224105835


Best mapping found: ['professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)', 'student(A) -> actor(A)', 'advisedby(A,B) -> workedunder(A,B)', 'projectmember(A,B) -> movie(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
0;true,false;movie(I, A).;true;true
0;true,false,true;movie(I, K).;false;false
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true;movie(G, A), movie(G, B).;false;true
1;true,false;movie(L, A).;false;false
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(H, A).;true;true
2;true,true;movie(H, B).;false;false
2;true,false;genre(J, C).;false;false
2;false;director(B).;true;false
2;false,true;movie(L, B).;false;false
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
3;true,true;movie(F, E).;false;false
3;true,false;movie(I, A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;actor(B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;true
4;true,false;movie(J, A), movie(K, B).;true;false
4;true,false,true;movie(J, L), movie(K, L).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true;movie(P, B), movie(P, A).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true,false,false;movie(I, B).;false;false
6;true;genre(D, C).;true;true
6;true,true;movie(F, A), movie(F, E).;true;true
6;true,false;movie(H, A).;false;true
6;false;actor(B).;false;false
6;true,true,false;movie(G, A), movie(G, D).;false;false
6;true,true,true;movie(F, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, B), movie(C, A).;false;true
7;true,false;movie(K, J).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,false;movie(L, B).;false;false
8;true;movie(C, B), movie(C, A).;true;true
8;true,true;movie(C, D).;false;false
8;true,false;movie(H, A).;true;true
8;true,false,true;movie(H, I).;false;false
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;false;director(B).;true;false
9;true;movie(D, A), movie(D, B).;false;true
9;true,false;movie(K, J).;false;false
9;false,true;movie(P, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, B) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13400703000801084;  // std dev = 3,65e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, F) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105816
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.772 seconds
Total inference time: 1.524 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [4.21e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 45], 'false': [3.16e-08, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)', 'false,true': 'movie(E, B)'}, {'false,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,false': [1.49e-08, 44, 0], 'true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.11e-08, 44, 0], 'false,false': [3.65e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.98e-08, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [2.24e-08, 44, 0], 'true,true': [0.0, 0, 45], 'true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'actor(B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'true,true,true': 'movie(E, B)'}, {'true,true,true,true': [5.37e-08, 0, 35], 'true,true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 45], 'false': [1.18e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [9.13e-09, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)'}, {'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 10], 'true,true': [3.65e-08, 0, 35], 'false,false': [0.0, 44, 0], 'true,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.012039361070842395, 0.06726754122121566], 'false': [-1.3322676295501878e-16, 5.046468293750712e-18], 'true': [0.012039361070842395, nan], 'true,true': [-2.0301221021717148e-16, 0.0], 'false,true': [-1.3322676295501878e-16, nan]}, {'': [0.0072774911925922075, 0.040661538091945185], 'true': [-2.791417890486108e-16, 0.0], 'true,true': [-2.791417890486108e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0], 'false': [1.0092936587501423e-17, 1.3322676295501878e-16]}, {'': [0.003634497357172579, -5.046468293750712e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0024635773866361816, 1.1354553660939102e-17], 'true': [-2.960594732333751e-17, 0.0]}, {'': [0.0022483216979789747, 0.012562051391882144], 'false': [0.0, -2.7755575615628914e-17], 'true': [0.0022483216979789747, nan], 'true,true': [0.0022483216979789747, nan], 'true,true,true': [8.247371040072592e-17, 0.0]}, {'': [0.0013328055598378111, 3.1540426835941946e-18], 'true': [-8.388351741612294e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0010402855577152684, 1.8924256101565167e-18], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.001060877873205172, 0.005927444624892205], 'false': [0.0, -2.523234146875356e-18], 'true': [3.8064789415719653e-17, 0.0], 'false,true': [0.0, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;director(B).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;false;actor(B).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;actor(B).;true;true', '6;true;movie(E, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;false;director(B).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5182729470274017;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4219081491190528;  // std dev = 0,027, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.17522745731868575;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32303598048352017;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15132451894701304;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25676128400612136;  // std dev = 0,022, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13289799626119947;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.19607546319998675;  // std dev = 0,076, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.2083839499489852;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.20910980676962465;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17895777775986008;  // std dev = 0,023, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1403486440146633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15415614190208987;  // std dev = 0,021, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12425425323360159;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13564121623052527;  // std dev = 0,017, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1113524639602102;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.13325001875432294;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.894 seconds
Total inference time: 0.985 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:48:14
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 0.985, 'Recall': 1.0, 'Mapping results': {'Generating mappings time': 0.05066323280334473, 'Total time': 2.902658224105835, 'Generating paths time': 2.604095935821533, 'Knowledge compiling time': 0.016277790069580078, 'Finding best mapping': 0.2316141128540039, 'Possible mappings': 864}, 'Parameter Learning results': {'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.524, 'Recall': 1.0, 'CLL': -0.105816, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 1.772}, 'CLL': -0.105495, 'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 3.666}


Start learning from scratch in target domain

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 2.109 seconds
Total inference time: 1.224 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:48:18
{'AUC PR': 1.0, 'AUC ROC': 1.0, 'Inference time': 1.224, 'Recall': 1.0, 'CLL': -0.213649, 'Precision': [0.844612, 0.5], 'F1': 0.915761, 'Learning time': 2.109}


Starting experiment #3 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

('Encountered problems while running process: ', '(cd boostsrl; java -jar v1-0.jar -l -combine -train train/ -target advisedby -trees 10 > train_output.txt 2>&1)')
Error in experiment of 2_uwcse_imdb
