Starting experiment #1 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.3343394112899885;  // std dev = 0,499, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else if ( advisedby(A, G), publication(H, G) )
%   | then if ( advisedby(I, G), publication(H, I) )
%   | | then if ( ta(J, I, K), ta(L, A, M) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.28672036367094095;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.41134042446121344;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( publication(R, A) )
%   | | | then return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.26991364098186527;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( advisedby(A, F) )
%   | then return 0.24415759818152227;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( tempadvisedby(A, G), publication(C, G) )
%   | | then return 0.14573025403358983;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.38382549212882794;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, A, L), ta(M, J, N) )
%   | | | then return 0.40564015880039006;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3135977252686114;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.2003551026572654;  // std dev = 0,485, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.4158966988212668;  // std dev = 1,547, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.2981226912865668;  // std dev = 4,730, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.25059978452298354;  // std dev = 0,496, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.190838102919142;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.3176007987737103;  // std dev = 1,474, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1478261246444905;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.20654894692923756;  // std dev = 0,487, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( publication(N, A), advisedby(A, P) )
%   | | then if ( tempadvisedby(Q, P) )
%   | | | then return 0.25445329729058314;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.39369149181773244;  // std dev = 1,961, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( publication(R, A), tempadvisedby(A, S) )
%   | | | then return 0.19978156748348438;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2777810106066916;  // std dev = 4,284, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(A, F), publication(E, F) )
%   | then return 0.06484967991587336;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, G) )
%   | | then return 0.1591849385089729;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else return 0.27768796712755545;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( advisedby(A, H), publication(I, A) )
%   | then if ( tempadvisedby(J, H), publication(I, J) )
%   | | then return 0.0376737221808362;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2530794607127985;  // std dev = 0,493, 50,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( tempadvisedby(A, K), advisedby(L, K) )
%   | | then if ( ta(M, L, N), ta(P, A, N) )
%   | | | then return 0.137939850345575;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.24676380269588433;  // std dev = 3,503, 50,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | else if ( advisedby(A, Q), publication(R, Q) )
%   | | | then return 0.2171049209168955;  // std dev = 4,179, 71,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.15643495447356576;  // std dev = 3,265, 44,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.2536586829872062;  // std dev = 1,071, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( ta(E, A, F), advisedby(A, G) )
%   | then if ( advisedby(H, G), publication(I, H) )
%   | | then if ( publication(I, G), ta(J, H, K) )
%   | | | then return 0.16518302170230695;  // std dev = 3,240, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.08462911960093082;  // std dev = 2,745, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return 0.28825937169797494;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(L, A), tempadvisedby(A, M) )
%   | | then if ( publication(L, M) )
%   | | | then return 0.07148416528610152;  // std dev = 1,367, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.1659578693682877;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.19030889689352246;  // std dev = 3,889, 62,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   | | | else return 0.15976069226481263;  // std dev = 5,451, 121,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=60 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( publication(C, F), professor(F) )
%   | then if ( advisedby(G, F), ta(H, G, E) )
%   | | then if ( samecourse(D, H), tempadvisedby(I, F) )
%   | | | then return 0.0932421877178197;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.04415215118627282;  // std dev = 1,535, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.16765335240238655;  // std dev = 1,217, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.16138131208609893;  // std dev = 0,488, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( tempadvisedby(A, J), projectmember(K, J) )
%   | then return 0.19431540678790893;  // std dev = 1,069, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( advisedby(A, L), publication(M, L) )
%   | | then if ( advisedby(N, L), publication(M, N) )
%   | | | then return 0.1262788056209465;  // std dev = 4,967, 100,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=52 */
%   | | | else return 0.1943011165498166;  // std dev = 1,958, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | | then return 0.05816369659749494;  // std dev = 1,741, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.12571934560258569;  // std dev = 4,832, 95,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=47 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.13903125495325364;  // std dev = 0,478, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( ta(E, A, F), advisedby(A, G) )
%   | then if ( tempadvisedby(H, G), publication(I, G) )
%   | | then if ( publication(I, A), ta(J, H, F) )
%   | | | then return 0.1492377709307963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07479529734559517;  // std dev = 3,446, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | else if ( publication(K, A) )
%   | | | then return -0.012500161273228512;  // std dev = 1,415, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.07777419935446928;  // std dev = 1,857, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( publication(L, A), tempadvisedby(A, M) )
%   | | then if ( publication(L, M) )
%   | | | then return 0.024862563706893624;  // std dev = 1,367, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09324792142842132;  // std dev = 1,001, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.11677152470346627;  // std dev = 3,753, 58,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.09835814564575251;  // std dev = 5,345, 116,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=59 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.10688457404381632;  // std dev = 0,477, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( ta(E, A, F) )
%   | then if ( ta(E, G, H), publication(I, G) )
%   | | then if ( advisedby(G, J), advisedby(A, J) )
%   | | | then return 0.04258789500536228;  // std dev = 3,140, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.10303733092235401;  // std dev = 3,251, 44,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | else if ( ta(E, K, L), advisedby(K, M) )
%   | | | then return 0.02227797314687281;  // std dev = 3,127, 40,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.08717558187238539;  // std dev = 1,478, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.033816950051530015;  // std dev = 1,983, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.16788183837019116;  // std dev = 1,929, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.08335687076446155;  // std dev = 4,595, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | else return 0.003869368781127138;  // std dev = 1,701, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.08150998896659073;  // std dev = 0,477, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( ta(E, A, F) )
%   | then if ( ta(E, G, F), advisedby(G, H) )
%   | | then if ( sameperson(A, G) )
%   | | | then return 0.04265823675522774;  // std dev = 4,342, 78,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=36 */
%   | | | else return 0.32413170513381245;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(E, I, J), advisedby(I, K) )
%   | | | then return 0.012910662396634848;  // std dev = 3,004, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.04330112154369749;  // std dev = 1,836, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( tempadvisedby(A, L) )
%   | | then if ( tempadvisedby(M, L), publication(N, M) )
%   | | | then return 0.025673100830608114;  // std dev = 1,983, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.1260332167397134;  // std dev = 1,929, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, P) )
%   | | | then return 0.06267157970880281;  // std dev = 4,595, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | else return 0.00293283686892488;  // std dev = 1,701, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then if ( advisedby(A, E), publication(F, E) )
%   | then return 0.4650604918478496;  // std dev = 0,117, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.03119010870851361;  // std dev = 0,483, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( ta(G, A, H), publication(I, A) )
%   | then if ( publication(I, J), professor(J) )
%   | | then if ( tempadvisedby(K, J), publication(L, K) )
%   | | | then return -0.008116090584142963;  // std dev = 2,326, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.04198169651493138;  // std dev = 2,105, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.08230373507983697;  // std dev = 0,475, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( tempadvisedby(A, M) )
%   | | then if ( tempadvisedby(N, M), publication(P, N) )
%   | | | then return 0.013744652668811959;  // std dev = 2,266, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.06852547371231586;  // std dev = 3,347, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( advisedby(A, Q) )
%   | | | then return 0.045199538332603845;  // std dev = 5,531, 125,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=67 */
%   | | | else return 0.0033514826987973627;  // std dev = 2,301, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */


Predicates from source: ['inphase(person,prequals).', 'publication(title,person).', 'advisedby(person,person).', 'professor(person).', 'tempadvisedby(person,person).', 'sameperson(person,person).', 'samecourse(course,course).', 'projectmember(project,person).', 'ta(course,person,quarter).']

Starting fold 1

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.018052339553833008
   Generating paths time   = 3.081914186477661
   Generating mappings time   = 4.718628644943237
   Possible mappings   = [5187]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 7.8187620639801025


Best mapping found: ['projectmember(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,false,false;movie(R, A).;false;false
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;true;workedunder(F, A), movie(E, F).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false;workedunder(P, A), workedunder(P, Q).;false;true
1;true,false;workedunder(G, A), movie(C, G).;false;false
1;false,false,false;workedunder(R, A).;false;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- workedunder(F, E).;false;true
2;false,false;movie(N, A), workedunder(P, A).;true;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
3;;genre(A, B) :- movie(E, A).;true;true
3;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;true,false;workedunder(G, A).;false;false
3;false,false,false;workedunder(Q, A), movie(R, Q).;false;false
3;false,true;workedunder(H, J), movie(I, J).;false;false
3;false;workedunder(H, A), movie(I, A).;true;true
3;true;workedunder(F, A), movie(E, F).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
4;false,false;movie(L, A), workedunder(M, A).;true;true
4;false,false,false;movie(N, A).;false;false
4;false,true;workedunder(G, H), movie(I, H).;true;false
4;false,true,true;movie(I, G).;false;false
4;false;workedunder(G, A).;true;true
4;false,false,true;movie(L, M).;false;false
5;;genre(A, B) :- movie(C, A).;true;true
5;false,false;workedunder(L, A), movie(M, L).;true;true
5;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
5;true,true;workedunder(F, G).;true;false
5;false;workedunder(J, A), workedunder(J, K).;false;true
5;false,false,true;workedunder(L, N), movie(M, N).;false;false
5;true,true,true;workedunder(H, D), workedunder(F, I).;false;false
5;true;movie(C, F), actor(F).;true;false
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
6;false,false;movie(L, A), workedunder(M, A).;true;true
6;false,false,false;movie(N, A).;false;false
6;false,true,false;movie(K, A).;false;false
6;false,true;workedunder(G, H), movie(I, G).;true;true
6;false,true,true;movie(I, A).;false;false
6;false;workedunder(G, A).;true;true
6;false,false,true;movie(L, M).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,false;workedunder(N, A).;true;true
7;false,false,false;workedunder(R, A).;false;false
7;false,true,false;workedunder(M, K).;false;false
7;false,true;workedunder(J, G), workedunder(J, A).;false;true
7;false;movie(I, G).;true;true
7;false,false,true;workedunder(N, P), movie(Q, P).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,false;workedunder(L, A).;true;true
8;false,false,false;workedunder(P, A).;false;false
8;false,true,false;workedunder(K, I).;false;false
8;false,true;workedunder(G, A).;false;true
8;false;workedunder(H, G).;true;true
8;false,false,true;workedunder(L, M), movie(N, M).;false;false
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;false,false;workedunder(M, A).;true;true
9;false,false,false;workedunder(Q, A).;false;false
9;false,true;movie(I, J), actor(J).;true;false
9;false,true,true;workedunder(J, K), movie(L, K).;false;false
9;false;movie(I, A).;true;true
9;false,false,true;workedunder(M, N), movie(P, N).;false;false
9;true;workedunder(E, A), movie(F, E).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.2215250292763393;  // std dev = 1,566, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5002131558403854;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13637023346435795;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.377690957815415;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.12109080086507204;  // std dev = 9,13e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.0925030210673108;  // std dev = 0,944, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2749693064602385;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.11808107268713285;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.22364953150626432;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, F), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.10632803812788186;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1872204146603255;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, H) )
%   | | | then return -0.0966391804806873;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.1603812988119758;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( movie(G, H), actor(H) )
%   | | then if ( workedunder(H, I), movie(J, I) )
%   | | | then return -0.08852517668472613;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.35313
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.466 seconds
Total inference time: 1.022 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.0, 0, 11], 'false': [0.0, 0, 0], 'true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A)'}, {'true,true': [4.21e-08, 0, 11], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.566, 11, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.0, 0, 11], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [1.49e-08, 0, 11], 'false,false,false,true': [9.13e-09, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)', 'true': 'movie(C, D), actor(D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.944, 11, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(G, F), workedunder(G, A)', 'false': 'movie(E, F)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [1.05e-08, 0, 11], 'false,true,false,true': [3.73e-09, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(F, A)', 'false': 'workedunder(E, F)', 'false,true,false': 'workedunder(G, H)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,true,false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'movie(G, H), actor(H)', 'false': 'movie(G, A)', 'true': 'workedunder(E, A), movie(F, E)', 'false,true,true': 'workedunder(H, I), movie(J, I)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true': [7.45e-09, 0, 11]}]]
[{'': [0.24999999999999958, nan], 'true': [-1.6148698540002277e-16, -1.0092936587501423e-17]}, {'': [0.17847162811629388, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [1.6148698540002277e-16, 2.523234146875356e-18]}, {'': [0.11145008534151403, nan]}, {'': [0.10130960288467862, nan], 'true,false': [nan, 5.046468293750712e-18], 'true': [0.0, 5.046468293750712e-18]}, {'': [2.0185873175002847e-17, 7.569702440626067e-18], 'false,false': [nan, 7.569702440626067e-18], 'false': [nan, 7.569702440626067e-18], 'false,false,false': [7.569702440626067e-18, nan]}, {'': [0.04051610769524334, nan], 'true,true': [0.04051610769524334, nan], 'true,true,true': [0.04051610769524334, nan], 'true': [0.04051610769524334, nan]}, {'': [-4.0371746350005693e-17, -1.0092936587501423e-17], 'false,false': [nan, -1.0092936587501423e-17], 'false': [nan, -1.0092936587501423e-17], 'false,false,false': [-1.0092936587501423e-17, nan]}, {'': [1.0092936587501423e-17, 1.261617073437678e-18], 'false,true': [nan, 1.261617073437678e-18], 'false': [1.261617073437678e-18, nan], 'false,true,false': [1.261617073437678e-18, nan]}, {'': [-2.5232341468753557e-17, -2.523234146875356e-18], 'false,true': [nan, -2.523234146875356e-18], 'false': [-2.523234146875356e-18, nan], 'false,true,false': [-2.523234146875356e-18, nan]}, {'': [5.046468293750712e-18, -1.261617073437678e-18], 'false,true': [-1.261617073437678e-18, nan], 'false': [-1.261617073437678e-18, nan], 'false,true,true': [-1.261617073437678e-18, nan], 'true': [5.046468293750712e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.303 seconds
Total inference time: 0.664 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:00:55
{'Parameter Learning results': {'CLL': -0.35313, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'F1': 0.888889, 'Learning time': 1.466, 'AUC ROC': 0.875, 'Recall': 1.0, 'Inference time': 1.022}, 'CLL': -0.352709, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'Mapping results': {'Generating paths time': 3.081914186477661, 'Knowledge compiling time': 0.018052339553833008, 'Generating mappings time': 4.718628644943237, 'Total time': 7.8187620639801025, 'Finding best mapping': 9.5367431640625e-07, 'Possible mappings': [5187]}, 'F1': 0.888889, 'Learning time': 2.769, 'AUC ROC': 0.875, 'Recall': 1.0, 'Inference time': 0.664}


Start learning from scratch in target domain

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.597 seconds
Total inference time: 0.669 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:00:57
{'CLL': -0.352709, 'Precision': [0.8, 0.5], 'AUC PR': 0.8, 'F1': 0.888889, 'Learning time': 1.597, 'AUC ROC': 0.875, 'Recall': 1.0, 'Inference time': 0.669}


Starting fold 2

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.02397942543029785
   Generating paths time   = 3.581916332244873
   Generating mappings time   = 5.113075256347656
   Possible mappings   = [5187]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 8.719048738479614


Best mapping found: ['projectmember(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,false,false;movie(R, A).;false;false
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;true;workedunder(F, A), movie(E, F).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false;workedunder(P, A), workedunder(P, Q).;false;true
1;true,false;workedunder(G, A), movie(C, G).;false;false
1;false,false,false;workedunder(R, A).;false;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- workedunder(F, E).;false;true
2;false,false;movie(N, A), workedunder(P, A).;true;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
3;;genre(A, B) :- movie(E, A).;true;true
3;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;true,false;workedunder(G, A).;false;false
3;false,false,false;workedunder(Q, A), movie(R, Q).;false;false
3;false,true;workedunder(H, J), movie(I, J).;false;false
3;false;workedunder(H, A), movie(I, A).;true;true
3;true;workedunder(F, A), movie(E, F).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
4;false,false;movie(L, A), workedunder(M, A).;true;true
4;false,false,false;movie(N, A).;false;false
4;false,true;workedunder(G, H), movie(I, H).;true;false
4;false,true,true;movie(I, G).;false;false
4;false;workedunder(G, A).;true;true
4;false,false,true;movie(L, M).;false;false
5;;genre(A, B) :- movie(C, A).;true;true
5;false,false;workedunder(L, A), movie(M, L).;true;true
5;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
5;true,true;workedunder(F, G).;true;false
5;false;workedunder(J, A), workedunder(J, K).;false;true
5;false,false,true;workedunder(L, N), movie(M, N).;false;false
5;true,true,true;workedunder(H, D), workedunder(F, I).;false;false
5;true;movie(C, F), actor(F).;true;false
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
6;false,false;movie(L, A), workedunder(M, A).;true;true
6;false,false,false;movie(N, A).;false;false
6;false,true,false;movie(K, A).;false;false
6;false,true;workedunder(G, H), movie(I, G).;true;true
6;false,true,true;movie(I, A).;false;false
6;false;workedunder(G, A).;true;true
6;false,false,true;movie(L, M).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,false;workedunder(N, A).;true;true
7;false,false,false;workedunder(R, A).;false;false
7;false,true,false;workedunder(M, K).;false;false
7;false,true;workedunder(J, G), workedunder(J, A).;false;true
7;false;movie(I, G).;true;true
7;false,false,true;workedunder(N, P), movie(Q, P).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,false;workedunder(L, A).;true;true
8;false,false,false;workedunder(P, A).;false;false
8;false,true,false;workedunder(K, I).;false;false
8;false,true;workedunder(G, A).;false;true
8;false;workedunder(H, G).;true;true
8;false,false,true;workedunder(L, M), movie(N, M).;false;false
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;false,false;workedunder(M, A).;true;true
9;false,false,false;workedunder(Q, A).;false;false
9;false,true;movie(I, J), actor(J).;true;false
9;false,true,true;workedunder(J, K), movie(L, K).;false;false
9;false;movie(I, A).;true;true
9;false,false,true;workedunder(M, N), movie(P, N).;false;false
9;true;workedunder(E, A), movie(F, E).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.22604488330790526;  // std dev = 1,802, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.45675549767123047;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13690342743409517;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.3433050670813882;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.12151573373300312;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.09225805803688837;  // std dev = 1,322, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.24228793563700282;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.11842691142021966;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1920796974214591;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, F), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.10661067290548179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.15601986176850838;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, H) )
%   | | | then return -0.09687412300584407;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.1293092419447252;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( movie(G, H), actor(H) )
%   | | then if ( workedunder(H, I), movie(J, I) )
%   | | | then return -0.08872333352913432;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.328047
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.452 seconds
Total inference time: 0.957 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.961, 1, 12], 'false': [0.0, 0, 0], 'true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A)'}, {'true,true': [0.961, 1, 12], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.802, 12, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.961, 1, 12], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [5.27e-09, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)', 'true': 'movie(C, D), actor(D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.322, 12, 12], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(G, F), workedunder(G, A)', 'false': 'movie(E, F)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,true,false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(F, A)', 'false': 'workedunder(E, F)', 'false,true,false': 'workedunder(G, H)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,true,false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'movie(G, H), actor(H)', 'false': 'movie(G, A)', 'true': 'workedunder(E, A), movie(F, E)', 'false,true,true': 'workedunder(H, I), movie(J, I)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [6.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true': [0.961, 1, 12]}]]
[{'': [0.24999999999999956, nan], 'true': [0.07100591715976314, -1.0092936587501423e-17]}, {'': [0.19076867375623552, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [0.07100591715976333, 2.523234146875356e-18]}, {'': [0.13533629047183346, nan]}, {'': [0.12595740906584602, nan], 'true,false': [nan, -7.569702440626067e-18], 'true': [0.0710059171597634, -7.569702440626067e-18]}, {'': [0.07100591715976344, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [2.523234146875356e-18, nan]}, {'': [0.0727787524435609, nan], 'true,true': [0.0727787524435609, nan], 'true,true,true': [0.0727787524435609, nan], 'true': [0.0727787524435609, nan]}, {'': [0.07100591715976329, -2.523234146875356e-18], 'false,false': [nan, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'false,false,false': [-2.523234146875356e-18, nan]}, {'': [0.07100591715976337, -5.046468293750712e-18], 'false,true': [nan, -5.046468293750712e-18], 'false': [-5.046468293750712e-18, nan], 'false,true,false': [-5.046468293750712e-18, nan]}, {'': [0.07100591715976329, -7.569702440626067e-18], 'false,true': [nan, -7.569702440626067e-18], 'false': [-7.569702440626067e-18, nan], 'false,true,false': [-7.569702440626067e-18, nan]}, {'': [0.07100591715976332, 3.784851220313033e-18], 'false,true': [3.784851220313033e-18, nan], 'false': [3.784851220313033e-18, nan], 'false,true,true': [3.784851220313033e-18, nan], 'true': [0.07100591715976332, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.635 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:01:11
{'Parameter Learning results': {'CLL': -0.328047, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'F1': 0.897436, 'Learning time': 1.452, 'AUC ROC': 0.885714, 'Recall': 1.0, 'Inference time': 0.957}, 'CLL': -0.320018, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'Mapping results': {'Generating paths time': 3.581916332244873, 'Knowledge compiling time': 0.02397942543029785, 'Generating mappings time': 5.113075256347656, 'Total time': 8.719048738479614, 'Finding best mapping': 7.152557373046875e-07, 'Possible mappings': [5187]}, 'F1': 0.897436, 'Learning time': 3.0869999999999997, 'AUC ROC': 0.885714, 'Recall': 1.0, 'Inference time': 0.723}


Start learning from scratch in target domain

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.967 seconds
Total inference time: 0.656 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:01:14
{'CLL': -0.320018, 'Precision': [0.813953, 0.5], 'AUC PR': 0.813953, 'F1': 0.897436, 'Learning time': 1.967, 'AUC ROC': 0.885714, 'Recall': 1.0, 'Inference time': 0.656}


Starting fold 3

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.02311873435974121
   Generating paths time   = 3.3701999187469482
   Generating mappings time   = 4.9085962772369385
   Possible mappings   = [5187]
   Finding best mapping   = 4.76837158203125e-07
   Total time   = 8.301992893218994


Best mapping found: ['projectmember(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(A,B)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,false,false;movie(R, A).;false;false
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;true;workedunder(F, A), movie(E, F).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false;workedunder(P, A), workedunder(P, Q).;false;true
1;true,false;workedunder(G, A), movie(C, G).;false;false
1;false,false,false;workedunder(R, A).;false;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- workedunder(F, E).;false;true
2;false,false;movie(N, A), workedunder(P, A).;true;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
3;;genre(A, B) :- movie(E, A).;true;true
3;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;true,false;workedunder(G, A).;false;false
3;false,false,false;workedunder(Q, A), movie(R, Q).;false;false
3;false,true;workedunder(H, J), movie(I, J).;false;false
3;false;workedunder(H, A), movie(I, A).;true;true
3;true;workedunder(F, A), movie(E, F).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
4;false,false;movie(L, A), workedunder(M, A).;true;true
4;false,false,false;movie(N, A).;false;false
4;false,true;workedunder(G, H), movie(I, H).;true;false
4;false,true,true;movie(I, G).;false;false
4;false;workedunder(G, A).;true;true
4;false,false,true;movie(L, M).;false;false
5;;genre(A, B) :- movie(C, A).;true;true
5;false,false;workedunder(L, A), movie(M, L).;true;true
5;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
5;true,true;workedunder(F, G).;true;false
5;false;workedunder(J, A), workedunder(J, K).;false;true
5;false,false,true;workedunder(L, N), movie(M, N).;false;false
5;true,true,true;workedunder(D, H), workedunder(F, I).;false;false
5;true;movie(C, F), actor(F).;true;false
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
6;false,false;movie(L, A), workedunder(M, A).;true;true
6;false,false,false;movie(N, A).;false;false
6;false,true,false;movie(K, A).;false;false
6;false,true;workedunder(G, H), movie(I, G).;true;true
6;false,true,true;movie(I, A).;false;false
6;false;workedunder(G, A).;true;true
6;false,false,true;movie(L, M).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,false;workedunder(N, A).;true;true
7;false,false,false;workedunder(R, A).;false;false
7;false,true,false;workedunder(M, K).;false;false
7;false,true;workedunder(J, G), workedunder(J, A).;false;true
7;false;movie(I, G).;true;true
7;false,false,true;workedunder(N, P), movie(Q, P).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,false;workedunder(L, A).;true;true
8;false,false,false;workedunder(P, A).;false;false
8;false,true,false;workedunder(K, I).;false;false
8;false,true;workedunder(A, G).;false;true
8;false;workedunder(H, G).;true;true
8;false,false,true;workedunder(L, M), movie(N, M).;false;false
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;false,false;workedunder(M, A).;true;true
9;false,false,false;workedunder(Q, A).;false;false
9;false,true;movie(I, J), actor(J).;true;false
9;false,true,true;workedunder(J, K), movie(L, K).;false;false
9;false;movie(I, A).;true;true
9;false,false,true;workedunder(M, N), movie(P, N).;false;false
9;true;workedunder(E, A), movie(F, E).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.23976942954603;  // std dev = 2,646, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.34003398980794736;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13853322814260766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.25734494947429226;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.12281276528082398;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.10043320483692961;  // std dev = 2,396, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.16815707936547064;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.12042209999903603;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.12702521829204133;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, F), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.10823854169840462;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.09676501385039799;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(A, F) )
%   | | then return -0.09822540512098556;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.07432837483365923;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( movie(G, H), actor(H) )
%   | | then if ( workedunder(H, I), movie(J, I) )
%   | | | then return -0.08986167014112935;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.283554
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.791 seconds
Total inference time: 0.978 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [2.245, 7, 18], 'false': [0.0, 0, 0], 'true,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A)'}, {'true,true': [2.245, 7, 18], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.646, 18, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [2.245, 7, 18], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [5.27e-09, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)', 'true': 'movie(C, D), actor(D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.396, 18, 18], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [7.45e-09, 11, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(G, F), workedunder(G, A)', 'false': 'movie(E, F)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,true,false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(A, F)', 'false': 'workedunder(E, F)'}, {'false,true,true': [0.0, 11, 0], 'true': [2.245, 7, 18], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'movie(G, H), actor(H)', 'false': 'movie(G, A)', 'true': 'workedunder(E, A), movie(F, E)', 'false,true,true': 'workedunder(H, I), movie(J, I)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [3.73e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true': [2.245, 7, 18]}]]
[{'': [0.2499999999999995, nan], 'true': [0.2015999999999996, -1.0092936587501423e-17]}, {'': [0.22099738300738728, nan], 'true,false': [nan, 2.523234146875356e-18], 'true': [0.2016000000000001, 2.523234146875356e-18]}, {'': [0.1945443430451362, nan]}, {'': [0.18859746147890197, nan], 'true,false': [nan, -5.046468293750712e-18], 'true': [0.20160000000000022, -5.046468293750712e-18]}, {'': [0.20159999999999997, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false,false': [2.523234146875356e-18, nan]}, {'': [0.1595180587423067, nan], 'true,true': [0.1595180587423067, nan], 'true,true,true': [0.1595180587423067, nan], 'true': [0.1595180587423067, nan]}, {'': [0.2015999999999999, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [5.046468293750712e-18, nan]}, {'': [0.20160000000000003, -2.523234146875356e-18], 'false,true': [nan, -2.523234146875356e-18], 'false': [-2.523234146875356e-18, nan], 'false,true,false': [-2.523234146875356e-18, nan]}, {'': [0.2016, -2.523234146875356e-18], 'false,true': [-2.523234146875356e-18, nan], 'false': [-2.523234146875356e-18, nan]}, {'': [0.20159999999999997, 1.261617073437678e-18], 'false,true': [1.261617073437678e-18, nan], 'false': [1.261617073437678e-18, nan], 'false,true,true': [1.261617073437678e-18, nan], 'true': [0.20159999999999997, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.915 seconds
Total inference time: 0.667 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:01:29
{'Parameter Learning results': {'CLL': -0.283554, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'F1': 0.966667, 'Learning time': 1.791, 'AUC ROC': 0.965517, 'Recall': 1.0, 'Inference time': 0.978}, 'CLL': -0.264596, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'Mapping results': {'Generating paths time': 3.3701999187469482, 'Knowledge compiling time': 0.02311873435974121, 'Generating mappings time': 4.9085962772369385, 'Total time': 8.301992893218994, 'Finding best mapping': 4.76837158203125e-07, 'Possible mappings': [5187]}, 'F1': 0.966667, 'Learning time': 3.706, 'AUC ROC': 0.965517, 'Recall': 1.0, 'Inference time': 0.667}


Start learning from scratch in target domain

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( director(A) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.017 seconds
Total inference time: 0.695 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:01:32
{'CLL': -0.264596, 'Precision': [0.935484, 0.5], 'AUC PR': 0.935484, 'F1': 0.966667, 'Learning time': 2.017, 'AUC ROC': 0.965517, 'Recall': 1.0, 'Inference time': 0.695}


Starting fold 4

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.027342796325683594
   Generating paths time   = 2.9920156002044678
   Generating mappings time   = 4.988608121871948
   Possible mappings   = [5187]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 8.00804352760315


Best mapping found: ['projectmember(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,false,false;movie(R, A).;false;false
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;true;workedunder(F, A), movie(E, F).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false;workedunder(P, A), workedunder(P, Q).;false;true
1;true,false;workedunder(G, A), movie(C, G).;false;false
1;false,false,false;workedunder(R, A).;false;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- workedunder(F, E).;false;true
2;false,false;movie(N, A), workedunder(P, A).;true;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
3;;genre(A, B) :- movie(E, A).;true;true
3;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;true,false;workedunder(G, A).;false;false
3;false,false,false;workedunder(Q, A), movie(R, Q).;false;false
3;false,true;workedunder(H, J), movie(I, J).;false;false
3;false;workedunder(H, A), movie(I, A).;true;true
3;true;workedunder(F, A), movie(E, F).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
4;false,false;movie(L, A), workedunder(M, A).;true;true
4;false,false,false;movie(N, A).;false;false
4;false,true;workedunder(G, H), movie(I, H).;true;false
4;false,true,true;movie(I, G).;false;false
4;false;workedunder(G, A).;true;true
4;false,false,true;movie(L, M).;false;false
5;;genre(A, B) :- movie(C, A).;true;true
5;false,false;workedunder(L, A), movie(M, L).;true;true
5;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
5;true,true;workedunder(F, G).;true;false
5;false;workedunder(J, A), workedunder(J, K).;false;true
5;false,false,true;workedunder(L, N), movie(M, N).;false;false
5;true,true,true;workedunder(H, D), workedunder(F, I).;false;false
5;true;movie(C, F), actor(F).;true;false
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
6;false,false;movie(L, A), workedunder(M, A).;true;true
6;false,false,false;movie(N, A).;false;false
6;false,true,false;movie(K, A).;false;false
6;false,true;workedunder(G, H), movie(I, G).;true;true
6;false,true,true;movie(I, A).;false;false
6;false;workedunder(G, A).;true;true
6;false,false,true;movie(L, M).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,false;workedunder(N, A).;true;true
7;false,false,false;workedunder(R, A).;false;false
7;false,true,false;workedunder(M, K).;false;false
7;false,true;workedunder(J, G), workedunder(J, A).;false;true
7;false;movie(I, G).;true;true
7;false,false,true;workedunder(N, P), movie(Q, P).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,false;workedunder(L, A).;true;true
8;false,false,false;workedunder(P, A).;false;false
8;false,true,false;workedunder(K, I).;false;false
8;false,true;workedunder(G, A).;false;true
8;false;workedunder(H, G).;true;true
8;false,false,true;workedunder(L, M), movie(N, M).;false;false
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;false,false;workedunder(M, A).;true;true
9;false,false,false;workedunder(Q, A).;false;false
9;false,true;movie(I, J), actor(J).;true;false
9;false,true,true;workedunder(J, K), movie(L, K).;false;false
9;false;movie(I, A).;true;true
9;false,false,true;workedunder(M, N), movie(P, N).;false;false
9;true;workedunder(E, A), movie(F, E).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.23409923944267316;  // std dev = 1,173, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.38655270713914897;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13785792350709075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2907959857459462;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.12227568030698387;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.0956079208618524;  // std dev = 1,001, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.19574550382895722;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.11944228950588066;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1500158299942937;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, F), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.1074396883003964;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.11669861319682524;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, H) )
%   | | | then return -0.0975626860118164;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.0920012862085255;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( movie(G, H), actor(H) )
%   | | then if ( workedunder(H, I), movie(J, I) )
%   | | | then return -0.08930367890381528;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.315261
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.118 seconds
Total inference time: 1.022 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.894, 1, 4], 'false': [0.0, 0, 0], 'true,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A)'}, {'true,true': [0.894, 1, 4], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.173, 4, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.894, 1, 4], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [2.63e-09, 3, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)', 'true': 'movie(C, D), actor(D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.001, 4, 4], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(G, F), workedunder(G, A)', 'false': 'movie(E, F)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,true,false,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(F, A)', 'false': 'workedunder(E, F)', 'false,true,false': 'workedunder(G, H)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,true,false,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'movie(G, H), actor(H)', 'false': 'movie(G, A)', 'true': 'workedunder(E, A), movie(F, E)', 'false,true,true': 'workedunder(H, I), movie(J, I)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true': [0.894, 1, 4]}]]
[{'': [0.24999999999999986, nan], 'true': [0.15999999999999986, 0.0]}, {'': [0.20948195373304385, nan], 'true,false': [nan, 0.0], 'true': [0.16, 0.0]}, {'': [0.17200226808539504, nan]}, {'': [0.1644546506722156, nan], 'true,false': [nan, 0.0], 'true': [0.15999999999999998, 0.0]}, {'': [0.15999999999999998, 2.3129646346357427e-18], 'false,false': [nan, 2.3129646346357427e-18], 'false': [nan, 2.3129646346357427e-18], 'false,false,false': [2.3129646346357427e-18, nan]}, {'': [0.1253023357324878, nan], 'true,true': [0.1253023357324878, nan], 'true,true,true': [0.1253023357324878, nan], 'true': [0.1253023357324878, nan]}, {'': [0.15999999999999998, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.16, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'false,true,false': [0.0, nan]}, {'': [0.15999999999999998, -2.3129646346357427e-18], 'false,true': [nan, -2.3129646346357427e-18], 'false': [-2.3129646346357427e-18, nan], 'false,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.16, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, nan], 'false': [1.1564823173178713e-18, nan], 'false,true,true': [1.1564823173178713e-18, nan], 'true': [0.16, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.138 seconds
Total inference time: 0.696 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:01:44
{'Parameter Learning results': {'CLL': -0.315261, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'F1': 0.914894, 'Learning time': 1.118, 'AUC ROC': 0.906977, 'Recall': 1.0, 'Inference time': 1.022}, 'CLL': -0.300536, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'Mapping results': {'Generating paths time': 2.9920156002044678, 'Knowledge compiling time': 0.027342796325683594, 'Generating mappings time': 4.988608121871948, 'Total time': 8.00804352760315, 'Finding best mapping': 7.152557373046875e-07, 'Possible mappings': [5187]}, 'F1': 0.914894, 'Learning time': 2.2560000000000002, 'AUC ROC': 0.906977, 'Recall': 1.0, 'Inference time': 0.696}


Start learning from scratch in target domain

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.349 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:01:46
{'CLL': -0.300536, 'Precision': [0.843137, 0.5], 'AUC PR': 0.843137, 'F1': 0.914894, 'Learning time': 1.349, 'AUC ROC': 0.906977, 'Recall': 1.0, 'Inference time': 0.639}


Starting fold 5

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.019920825958251953
   Generating paths time   = 2.8375957012176514
   Generating mappings time   = 4.88878321647644
   Possible mappings   = [5187]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 7.746379137039185


Best mapping found: ['projectmember(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'samecourse(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'sameperson(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false;workedunder(N, A).;true;true
0;false,false,false;movie(R, A).;false;false
0;false,true;workedunder(G, I), movie(H, I).;false;false
0;false;workedunder(G, A), movie(H, G).;true;true
0;false,false,true;workedunder(N, P), movie(Q, P).;false;false
0;true;workedunder(F, A), movie(E, F).;false;false
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false;workedunder(P, A), workedunder(P, Q).;false;true
1;true,false;workedunder(G, A), movie(C, G).;false;false
1;false,false,false;workedunder(R, A).;false;false
1;false,true;workedunder(H, J), movie(I, J).;false;false
1;false;workedunder(H, A), movie(I, H).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- workedunder(F, E).;false;true
2;false,false;movie(N, A), workedunder(P, A).;true;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
3;;genre(A, B) :- movie(E, A).;true;true
3;false,false;workedunder(K, A), workedunder(K, L).;false;true
3;true,false;workedunder(G, A).;false;false
3;false,false,false;workedunder(Q, A), movie(R, Q).;false;false
3;false,true;workedunder(H, J), movie(I, J).;false;false
3;false;workedunder(H, A), movie(I, A).;true;true
3;true;workedunder(F, A), movie(E, F).;false;true
4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
4;false,false;movie(L, A), workedunder(M, A).;true;true
4;false,false,false;movie(N, A).;false;false
4;false,true;workedunder(G, H), movie(I, H).;true;false
4;false,true,true;movie(I, G).;false;false
4;false;workedunder(G, A).;true;true
4;false,false,true;movie(L, M).;false;false
5;;genre(A, B) :- movie(C, A).;true;true
5;false,false;workedunder(L, A), movie(M, L).;true;true
5;false,false,false;workedunder(P, A), workedunder(P, Q).;false;false
5;true,true;workedunder(F, G).;true;false
5;false;workedunder(J, A), workedunder(J, K).;false;true
5;false,false,true;workedunder(L, N), movie(M, N).;false;false
5;true,true,true;workedunder(H, D), workedunder(F, I).;false;false
5;true;movie(C, F), actor(F).;true;false
6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
6;false,false;movie(L, A), workedunder(M, A).;true;true
6;false,false,false;movie(N, A).;false;false
6;false,true,false;movie(K, A).;false;false
6;false,true;workedunder(G, H), movie(I, G).;true;true
6;false,true,true;movie(I, A).;false;false
6;false;workedunder(G, A).;true;true
6;false,false,true;movie(L, M).;false;false
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,false;workedunder(N, A).;true;true
7;false,false,false;workedunder(R, A).;false;false
7;false,true,false;workedunder(M, K).;false;false
7;false,true;workedunder(J, G), workedunder(J, A).;false;true
7;false;movie(I, G).;true;true
7;false,false,true;workedunder(N, P), movie(Q, P).;false;false
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,false;workedunder(L, A).;true;true
8;false,false,false;workedunder(P, A).;false;false
8;false,true,false;workedunder(K, I).;false;false
8;false,true;workedunder(G, A).;false;true
8;false;workedunder(H, G).;true;true
8;false,false,true;workedunder(L, M), movie(N, M).;false;false
9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true
9;false,false;workedunder(M, A).;true;true
9;false,false,false;workedunder(Q, A).;false;false
9;false,true;movie(I, J), actor(J).;true;false
9;false,true,true;workedunder(J, K), movie(L, K).;false;false
9;false;movie(I, A).;true;true
9;false,false,true;workedunder(M, N), movie(P, N).;false;false
9;true;workedunder(E, A), movie(F, E).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.22152502927633905;  // std dev = 0,668, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5002131558403854;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13637023346435792;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.37769095781541506;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.12109080086507203;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( movie(C, D), actor(D) )
%   | then if ( workedunder(D, E) )
%   | | then if ( workedunder(F, G), workedunder(D, H) )
%   | | | then return 0.0925030210673109;  // std dev = 0,403, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2749693064602384;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.1180810726871328;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.22364953150626432;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( movie(E, F) )
%   | then if ( workedunder(G, F), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, I) )
%   | | | then return -0.10632803812788187;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.18722041466032546;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, F) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(G, H) )
%   | | | then return -0.0966391804806873;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then if ( workedunder(E, A), movie(F, E) )
%   | then return 0.16038129881197583;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( movie(G, H), actor(H) )
%   | | then if ( workedunder(H, I), movie(J, I) )
%   | | | then return -0.08852517668472613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.306096
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.976 seconds
Total inference time: 1.086 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.0, 0, 2], 'false': [0.0, 0, 0], 'true,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A), movie(C, E)', 'true': 'workedunder(D, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.668, 2, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A), movie(C, D)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,true': 'workedunder(D, E)', 'true,true,true': 'workedunder(F, G), workedunder(D, H)', 'true': 'movie(C, D), actor(D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.403, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,false': 'movie(F, A), workedunder(G, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)'}, {'false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(G, F), workedunder(G, A)', 'false': 'movie(E, F)', 'false,true,false': 'workedunder(H, I)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'workedunder(F, A)', 'false': 'workedunder(E, F)', 'false,true,false': 'workedunder(G, H)'}, {'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false,true': 'movie(G, H), actor(H)', 'false': 'movie(G, A)', 'true': 'workedunder(E, A), movie(F, E)', 'false,true,true': 'workedunder(H, I), movie(J, I)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2]}]]
[{'': [0.25, nan], 'true': [0.0, 0.0]}, {'': [0.17847162811629394, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.11145008534151418, nan]}, {'': [0.10130960288467858, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.04051610769524332, nan], 'true,true': [0.04051610769524332, nan], 'true,true,true': [0.04051610769524332, nan], 'true': [0.04051610769524332, nan]}, {'': [0.0, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan], 'false,true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '3;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '4;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,334, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,207, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299128
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.852 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:01:58
{'Parameter Learning results': {'CLL': -0.306096, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'F1': 0.909091, 'Learning time': 0.976, 'AUC ROC': 0.9, 'Recall': 1.0, 'Inference time': 1.086}, 'CLL': -0.299128, 'Precision': [0.833333, 0.5], 'AUC PR': 0.833333, 'Mapping results': {'Generating paths time': 2.8375957012176514, 'Knowledge compiling time': 0.019920825958251953, 'Generating mappings time': 4.88878321647644, 'Total time': 7.746379137039185, 'Finding best mapping': 7.152557373046875e-07, 'Possible mappings': [5187]}, 'F1': 0.909091, 'Learning time': 1.8279999999999998, 'AUC ROC': 0.9, 'Recall': 1.0, 'Inference time': 0.72}


Start learning from scratch in target domain

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.933 seconds
Total inference time: 0.61 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:02:00
{'CLL': -1.052978, 'Precision': [nan, 0.5], 'AUC PR': 0.5, 'F1': nan, 'Learning time': 0.933, 'AUC ROC': 0.5, 'Recall': 0.0, 'Inference time': 0.61}


