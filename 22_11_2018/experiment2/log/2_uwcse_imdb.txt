Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | then return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6022753891158077;  // std dev = 2,439, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.4104895662080564;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5668366200721044;  // std dev = 0,087, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.5081090089455164;  // std dev = 0,915, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3024623706773498;  // std dev = 1,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.5171363622026371;  // std dev = 1,893, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41333218051658055;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( professor(B) )
%   | then if ( publication(L, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.0551230450865158;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | then return 0.4832644224194336;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.37084462728716644;  // std dev = 0,910, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.42312007437304827;  // std dev = 0,050, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(I, A) )
%   | | then if ( hasposition(J, C), publication(I, J) )
%   | | | then return 0.10550717037737643;  // std dev = 1,665, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.5245116684321666;  // std dev = 0,156, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(K, C), tempadvisedby(L, K) )
%   | | | then return 0.4073744257008209;  // std dev = 1,644, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.23264390853184744;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( professor(B) )
%   | then return -0.06169471073240645;  // std dev = 0,231, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), ta(G, A, H) )
%   | | then if ( samecourse(D, G) )
%   | | | then return 0.4095878574888256;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34338747485328713;  // std dev = 0,078, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(D, I, J), publication(K, I) )
%   | | | then return 0.32415532459628815;  // std dev = 0,050, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2860866884340456;  // std dev = 0,899, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | then if ( publication(M, A), publication(N, L) )
%   | | | then return 0.3577122975481134;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2005704223212725;  // std dev = 1,737, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( tempadvisedby(P, B) )
%   | | | then return 0.38642182776022393;  // std dev = 0,701, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.27327688523158505;  // std dev = 2,115, 50,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=44 */
%   else return -0.09315851941394428;  // std dev = 0,021, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.2810761522284294;  // std dev = 0,079, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1541347741122165;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26432332753404253;  // std dev = 0,078, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( publication(I, K), publication(J, K) )
%   | | | then return -0.12432255029756349;  // std dev = 1,043, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28297633638472053;  // std dev = 0,613, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.25791930225247917;  // std dev = 1,325, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.19199335895337208;  // std dev = 2,026, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   else return -0.08558151638263352;  // std dev = 0,019, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.22810248013527415;  // std dev = 0,069, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11985008125274396;  // std dev = 0,870, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.21624567804667075;  // std dev = 0,068, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then return 0.039124020369581965;  // std dev = 0,755, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(L, A, M), tempadvisedby(N, B) )
%   | | | then return 0.23561616841503802;  // std dev = 1,024, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.1534259329004714;  // std dev = 2,342, 57,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( professor(B) )
%   | then if ( publication(P, B) )
%   | | then return -0.08165674380029701;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.013119847451304456;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0787140756253058;  // std dev = 4,08e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( publication(F, A), publication(F, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.21780240800939205;  // std dev = 0,089, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37644090213919207;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A), publication(G, D) )
%   | | | then return 0.1042263492373004;  // std dev = 1,719, 41,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | | else return 0.16676580053191473;  // std dev = 1,819, 67,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=62 */
%   | else if ( publication(H, A) )
%   | | then return 0.23399794093133955;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.03776232888802744;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -2.6221039814174524E-4;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( student(B) )
%   | then return -0.07319184916666803;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.05796453620213703;  // std dev = 0,217, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.16843511561074542;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.11201804492525068;  // std dev = 0,879, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.1642647079655354;  // std dev = 0,042, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return 0.15501644907695863;  // std dev = 1,137, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.13423561092546557;  // std dev = 1,014, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return 0.13670680837383964;  // std dev = 1,337, 34,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.11191257892054633;  // std dev = 1,721, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   else return -0.06886425304523082;  // std dev = 0,022, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.10712090718290741;  // std dev = 0,887, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1415344294217475;  // std dev = 0,051, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.14626696618030266;  // std dev = 0,019, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(H, A) )
%   | | then if ( hasposition(I, C), publication(H, I) )
%   | | | then return -0.0820739123570424;  // std dev = 1,456, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2070385921136145;  // std dev = 0,122, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.12375433000823131;  // std dev = 1,654, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return -0.005917106700600543;  // std dev = 1,191, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( student(B) )
%   | then return -0.06412073874884783;  // std dev = 1,49e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.053358564409187674;  // std dev = 0,216, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */


Predicates from source: ['advisedby(person,person).', 'tempadvisedby(person,person).', 'student(person).', 'ta(course,person,quarter).', 'samecourse(course,course).', 'publication(title,person).', 'hasposition(person,faculty).', 'professor(person).']

Starting fold 1

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.055177927017211914
   Generating paths time   = 2.685887575149536
   Generating mappings time   = 0.12541651725769043
   Possible mappings   = [288]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 2.8665578365325928


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,true;movie(I, K).;false;false
0;true,false;movie(I, A).;true;true
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;false,true;movie(L, B).;false;false
2;false;director(B).;true;false
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;true;movie(H, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;director(B).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true,false,true;movie(M, A), movie(N, L).;false;false
4;true,false;movie(M, B).;true;false
4;true;movie(F, A).;false;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(I, K), movie(J, K).;false;false
5;true,false;movie(I, B), movie(J, A).;true;false
5;true;movie(C, B), movie(C, A).;false;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
6;true;movie(D, B), movie(D, A).;false;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true,true,true;movie(F, B).;false;false
7;true,false,false;movie(I, B).;false;false
7;false;actor(B).;false;false
7;true,false;movie(H, A).;false;true
7;true,true;movie(F, A), movie(F, E).;true;true
7;true,true,false;movie(G, A), movie(G, D).;false;false
7;true;genre(D, C).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,true;movie(J, K).;false;false
8;true,false;movie(J, A).;true;false
8;true,true;movie(C, D).;false;false
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true,false,true;genre(I, C), movie(H, I).;false;false
9;false;actor(B).;false;false
9;true,false;movie(H, A).;true;true
9;true,false,false;genre(J, C).;false;false
9;true;movie(D, A), movie(D, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.3134591607855986;  // std dev = 0,410, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25655312949795045;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1226308450418712;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21073268045892357;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, F) )
%   | | then return -0.11003534702957246;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17781125850726218;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09971318845872554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15328585986932744;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09111230842343153;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1344300203221034;  // std dev = 6,14e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.08384306188957968;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.130198
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.427 seconds
Total inference time: 1.344 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [5.16e-08, 55, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'false': [0.0, 55, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 1, 0], 'false,false': [3.8e-08, 55, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [3.33e-08, 55, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 55, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.41, 1, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false': [1.83e-08, 55, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'true': 'movie(D, B), movie(D, A)'}, {'true,false,true': [0.0, 1, 0], 'false,false': [1.49e-08, 55, 0], 'true,true': [3.65e-08, 0, 56], 'false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'false': 'actor(B)', 'true,true': 'movie(E, A), movie(E, F)', 'true': 'genre(D, C)'}, {'true,true,true,true': [5.16e-08, 0, 56], 'true,true,true,false': [0.0, 1, 0], 'false,true': [1.05e-08, 55, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true,true': [4.47e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.49e-08, 55, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 1, 0], 'false,true': [0.0, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [6.14e-08, 0, 56], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.017236072637734554, 4.844609562000683e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.012304599783948732, -3.431598439750484e-17], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 2.2204460492503132e-17], 'false': [nan, 2.62416351275037e-17], 'true,true': [1.9032394707859825e-16, 0.0], 'true': [0.007683847065712494, nan]}, {'': [0.004644692439814939, 2.0185873175002847e-17], 'true,false,true': [0.0, nan], 'false': [nan, 2.0185873175002847e-17], 'true,false': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan], 'true': [-3.489272363107635e-16, 0.0]}, {'': [0.0029456817402654088, -3.0278809762504268e-18], 'true': [0.0029456817402654088, nan]}, {'': [0.002478210910026975, 6.0557619525008536e-18], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan], 'true': [-2.3790493384824782e-17, 0.0]}, {'': [0.0017734561827320115, 4.037174635000569e-18], 'false': [nan, 4.037174635000569e-18], 'true,false': [0.0, nan], 'true': [2.3790493384824782e-17, 0.0]}, {'': [0.0013275191890340615, 2.0185873175002845e-18], 'true,true,true': [4.7580986769649563e-17, 0.0], 'false': [2.0185873175002845e-18, nan], 'true,true': [0.0013275191890340615, nan], 'true': [0.0013275191890340615, nan]}, {'': [0.0010295186276491318, 4.037174635000569e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [3.568574007723718e-17, nan], 'true': [3.568574007723718e-17, 0.0]}, {'': [0.0008211805944656018, -3.0278809762504268e-18], 'true,false,true': [0.0, nan], 'false': [-3.0278809762504268e-18, nan], 'true,false': [0.0, nan], 'true': [6.740639792367021e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5331103429149548;  // std dev = 0,120, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4203215730716789;  // std dev = 0,020, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17738214267363117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.32010041882497403;  // std dev = 5,16e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.30903262147126487;  // std dev = 0,086, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2580580071343183;  // std dev = 0,024, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.19741417209703532;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21179625602056754;  // std dev = 0,021, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16798873541875273;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1760611353495588;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.170055965601552;  // std dev = 0,059, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15461866180405445;  // std dev = 0,019, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16827786746329068;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1354698294873218;  // std dev = 0,017, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14602055922086166;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.14758
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.203 seconds
Total inference time: 1.162 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:02:53
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Parameter Learning results': {'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.427, 'CLL': -0.130198, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.344}, 'Learning time': 4.63, 'CLL': -0.14758, 'Mapping results': {'Possible mappings': [288], 'Finding best mapping': 7.152557373046875e-07, 'Generating paths time': 2.685887575149536, 'Total time': 2.8665578365325928, 'Generating mappings time': 0.12541651725769043, 'Knowledge compiling time': 0.055177927017211914}, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.162}


Start learning from scratch in target domain

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 326

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.692818318046742;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5367928709789455;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40340088328536905;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3078944297924054;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.24240066496454704;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2,98e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19670004057326632;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16371858628713248;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.139091093402249;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1201377116837435;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 0.903675
   AUC PR    = 0.837662
   CLL	      = -0.289355
   Precision = 0.840206 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913165


Total learning time: 2.792 seconds
Total inference time: 1.072 seconds
AUC ROC: 0.903675


Dataset: 2_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:02:57
{'Precision': [0.840206, 0.5], 'F1': 0.913165, 'Learning time': 2.792, 'CLL': -0.289355, 'AUC ROC': 0.903675, 'Recall': 1.0, 'AUC PR': 0.837662, 'Inference time': 1.072}


Starting fold 2

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.01857733726501465
   Generating paths time   = 2.9298295974731445
   Generating mappings time   = 0.08886194229125977
   Possible mappings   = [288]
   Finding best mapping   = 2.384185791015625e-07
   Total time   = 3.037346601486206


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,true;movie(I, K).;false;false
0;true,false;movie(I, A).;true;true
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;false,true;movie(L, B).;false;false
2;false;director(B).;true;false
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;true;movie(H, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;director(B).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true,false,true;movie(M, A), movie(N, L).;false;false
4;true,false;movie(M, B).;true;false
4;true;movie(F, A).;false;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(I, K), movie(J, K).;false;false
5;true,false;movie(I, B), movie(J, A).;true;false
5;true;movie(C, B), movie(C, A).;false;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
6;true;movie(D, B), movie(D, A).;false;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true,true,true;movie(F, B).;false;false
7;true,false,false;movie(I, B).;false;false
7;false;actor(B).;false;false
7;true,false;movie(H, A).;false;true
7;true,true;movie(F, A), movie(F, E).;true;true
7;true,true,false;movie(G, A), movie(G, D).;false;false
7;true;genre(D, C).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,true;movie(J, K).;false;false
8;true,false;movie(J, A).;true;false
8;true,true;movie(C, D).;false;false
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true,false,true;genre(I, C), movie(H, I).;false;false
9;false;actor(B).;false;false
9;true,false;movie(H, A).;true;true
9;true,false,false;genre(J, C).;false;false
9;true;movie(D, A), movie(D, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.3069317430485027;  // std dev = 0,575, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25780010463533476;  // std dev = 1,03e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.12193027188422127;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2116122885221122;  // std dev = 6,32e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, F) )
%   | | then return -0.10946603354343344;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.1784555484356207;  // std dev = 4,47e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09924220969856745;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15377405445688802;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09071670494451642;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13481077551341003;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.08350639390864026;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08350639390864026;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.131029
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.077 seconds
Total inference time: 1.238 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [5.16e-08, 56, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 2, 0], 'false': [0.0, 56, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [3.94e-08, 56, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'false,false': [3.8e-08, 56, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 56, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.575, 2, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0], 'true,true': [1.03e-07, 0, 58], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'true': 'movie(D, B), movie(D, A)'}, {'true,false,true': [0.0, 2, 0], 'false,false': [1.83e-08, 56, 0], 'true,true': [6.32e-08, 0, 58], 'false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'false': 'actor(B)', 'true,true': 'movie(E, A), movie(E, F)', 'true': 'genre(D, C)'}, {'true,true,true,true': [4.47e-08, 0, 58], 'true,true,true,false': [0.0, 2, 0], 'false,true': [7.45e-09, 56, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.67e-08, 56, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 1, 0], 'false,true': [0.0, 56, 0], 'true,false,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true': [5.16e-08, 0, 58], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.03222222222222181, 4.7580986769649563e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0]}, {'': [0.0230030098461001, -2.973811673103098e-17], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.014364677666239759, 1.586032892321652e-17], 'false': [nan, 2.7755575615628914e-17], 'true,true': [2.4501473646900006e-16, 0.0], 'true': [0.014364677666239759, nan]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true,false,true': [0.0, 0.0], 'false': [nan, 2.577303450022685e-17], 'true,false': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [0.005506846810506941, -1.982541115402065e-18], 'true': [0.005506846810506941, nan]}, {'': [0.004646288451887763, 5.9476233462061954e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.8376105235175005e-16, 0.0]}, {'': [0.0033218304201249197, 5.9476233462061954e-18], 'false': [nan, 5.9476233462061954e-18], 'true,false': [0.0, nan], 'true': [6.891039463190627e-17, 0.0]}, {'': [0.0024848503347887833, 9.912705577010326e-19], 'true,true,true': [3.4455197315953135e-17, 0.0], 'false': [9.912705577010326e-19, nan], 'true,true': [0.0024848503347887833, nan], 'true': [0.0024848503347887833, nan]}, {'': [0.001926106901719519, 4.956352788505163e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-1.5313421029312504e-17, nan], 'true': [-1.5313421029312504e-17, 0.0]}, {'': [0.0015357880082991955, -2.9738116731030977e-18], 'true,false,true': [0.0, 0.0], 'false': [-2.9738116731030977e-18, nan], 'true,false': [0.0, nan], 'true': [4.594026308793751e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true,false;genre(G, C), movie(F, G).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true,false;genre(F, C), movie(E, F).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839155;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0,142, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.5382463645683382;  // std dev = 0,106, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.42291829403183534;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.17706371681642905;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.30371381217855725;  // std dev = 0,102, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.31104026962823894;  // std dev = 0,075, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.09269127618926105;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.26350570512949345;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.25925827003465857;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1968599561695889;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21367008013853075;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1675776778260079;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1661664843212128;  // std dev = 0,069, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.17069948852323838;  // std dev = 0,052, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1563380055697078;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16769957233135033;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13853555869095274;  // std dev = 2,24e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13589718894319847;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1455777717144307;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.14817
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.254 seconds
Total inference time: 1.198 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:03:07
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Parameter Learning results': {'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.077, 'CLL': -0.131029, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.238}, 'Learning time': 4.3309999999999995, 'CLL': -0.14817, 'Mapping results': {'Possible mappings': [288], 'Finding best mapping': 2.384185791015625e-07, 'Generating paths time': 2.9298295974731445, 'Total time': 3.037346601486206, 'Generating mappings time': 0.08886194229125977, 'Knowledge compiling time': 0.01857733726501465}, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.198}


Start learning from scratch in target domain

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 324

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.6813641993271577;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6989783104778774;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.5288038212098718;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.541086978177925;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.39742934112412265;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4066344623991659;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return 0.30792410022521916;  // std dev = 0,179, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.2361074487054864;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24583795507965242;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(A) )
%   | then return 0.19065619400563988;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2000210530601132;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.19703912258451045;  // std dev = 0,046, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3643390051455256;  // std dev = 0,797, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.16771629164203447;  // std dev = 0,041, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.3258523899489897;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.14559417081218537;  // std dev = 0,036, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.2903655959472546;  // std dev = 0,691, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179517
   Precision = 0.841558 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913963


Total learning time: 3.191 seconds
Total inference time: 1.077 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:03:12
{'Precision': [0.841558, 0.5], 'F1': 0.913963, 'Learning time': 3.191, 'CLL': -0.179517, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.077}


Starting fold 3

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.02406907081604004
   Generating paths time   = 3.022200584411621
   Generating mappings time   = 0.08923864364624023
   Possible mappings   = [288]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 3.135587692260742


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,true;movie(I, K).;false;false
0;true,false;movie(I, A).;true;true
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;false,true;movie(L, B).;false;false
2;false;director(B).;true;false
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;true;movie(H, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;director(B).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true,false,true;movie(M, A), movie(N, L).;false;false
4;true,false;movie(M, B).;true;false
4;true;movie(F, A).;false;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(I, K), movie(J, K).;false;false
5;true,false;movie(I, B), movie(J, A).;true;false
5;true;movie(C, B), movie(C, A).;false;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
6;true;movie(D, B), movie(D, A).;false;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true,true,true;movie(F, B).;false;false
7;true,false,false;movie(I, B).;false;false
7;false;actor(B).;false;false
7;true,false;movie(H, A).;false;true
7;true,true;movie(F, A), movie(F, E).;true;true
7;true,true,false;movie(G, A), movie(G, D).;false;false
7;true;genre(D, C).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,true;movie(J, K).;false;false
8;true,false;movie(J, A).;true;false
8;true,true;movie(C, D).;false;false
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true,false,true;genre(I, C), movie(H, I).;false;false
9;false;actor(B).;false;false
9;true,false;movie(H, A).;true;true
9;true,false,false;genre(J, C).;false;false
9;true;movie(D, A), movie(D, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, B) )
%   | | then return 0.30712539016606777;  // std dev = 2,850, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.24623281818069068;  // std dev = 2,670, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2519574504218931;  // std dev = 2,936, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09792499041812769;  // std dev = 0,240, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2931779534279444;  // std dev = 0,535, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.11616580480889328;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.17101120139724754;  // std dev = 0,330, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0896465820226191;  // std dev = 0,224, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21490008815361936;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, F) )
%   | | then return -0.10060231231114791;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.116996683583025;  // std dev = 2,034, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07807600689732283;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18085909597542932;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.09185869765805717;  // std dev = 0,008, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07263798686628158;  // std dev = 4,08e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.09541197583409505;  // std dev = 2,010, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18210286376556584;  // std dev = 0,574, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.15289785536928893;  // std dev = 0,475, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07482938346335088;  // std dev = 0,319, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1331372833287988;  // std dev = 7,30e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.0739832726457872;  // std dev = 0,006, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07272122000494514;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0633091537114694;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.06551865220878746;  // std dev = 1,765, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.71 seconds
Total inference time: 1.131 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [4.59e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [9.42e-08, 134, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 44, 0], 'false': [0.0, 134, 0], 'true,true': [0.0, 0, 178], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true,true': 'movie(D, B)', 'false,true': 'movie(E, B)', 'true': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [2.85, 29, 49], 'false,false': [9.54e-08, 126, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [4.77e-07, 0, 129], 'true,true,false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 12, 0], 'true,true,true': [3.77e-07, 0, 129], 'true,false,false': [0.0, 0, 0], 'false,true': [2.67, 29, 49], 'true,false,true,false': [0.0, 11, 0], 'false,false': [0.0, 126, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.24, 134, 0], 'true,false': [0.0, 0, 0], 'true,true': [2.936, 44, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.33, 40, 0], 'false': [0.224, 134, 0], 'true,true': [0.535, 0, 178], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)', 'true': 'movie(D, B), movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [2.034, 29, 49], 'true,false,true': [0.009, 23, 0], 'false,false': [0.0, 126, 0], 'true,true': [0.0, 0, 129], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'false': 'actor(B)', 'true,true': 'movie(E, A), movie(E, F)', 'true': 'genre(D, C)'}, {'true,true,true,true': [0.0, 0, 129], 'true,true,true,false': [0.008, 23, 0], 'false,true': [4.08e-08, 126, 0], 'false,false': [2.01, 29, 49], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.475, 44, 0], 'true,true,true': [0.574, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.319, 134, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.006, 12, 0], 'false,true': [0.0, 126, 0], 'true,false,true,false': [0.0, 11, 0], 'false,false': [1.765, 29, 49], 'true,true': [7.3e-08, 0, 129], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.15891567242919188, 6.628197161941232e-17], 'true,false,true': [4.794144879063176e-17, nan], 'true,false': [4.794144879063176e-17, nan], 'true': [6.706246045376226e-15, 4.794144879063176e-17]}, {'': [0.11344775516652696, -2.6512788647764932e-17], 'true,false': [-2.7755575615628914e-17, nan], 'true': [-3.193450497798203e-15, -2.7755575615628914e-17]}, {'': [0.057249377286753104, 0.08135941927804699], 'false': [0.10412266355706305, 7.225260953909749e-17], 'true,true': [1.7625866313428842e-15, 4.827056628805028e-18], 'false,true': [0.10412266355706305, nan], 'true': [0.057249377286753104, nan]}, {'': [0.03460580977131374, 0.06352241371946962], 'true,false,true': [0.0, 0.0], 'false': [0.09140944253505334, -3.172065784643304e-17], 'true,false': [-1.206764157201257e-17, nan], 'true,true': [1.1016166445893026e-15, nan], 'true': [1.1016166445893026e-15, -1.206764157201257e-17]}, {'': [0.0388178854625321, 0.00043142029291369326], 'true': [0.0388178854625321, nan]}, {'': [0.03533969617350742, 0.00037335721377959553], 'true,false,true': [0.0, 0.0027215396672259085], 'true,false': [0.0027227234600346244, nan], 'true': [0.0016087426853826602, 0.0027227234600346244]}, {'': [0.012783636616206745, 0.029265315596596887], 'false': [0.053036513646418405, -2.9077269692563625e-17], 'true,false': [3.6397365044573884e-06, nan], 'false,true': [0.053036513646418405, nan], 'true': [-6.196593625814827e-17, 3.6397365044573884e-06]}, {'': [0.009551654818332844, 0.02647711287159646], 'true,true,true': [-2.7540416114732565e-17, 3.0957847925281254e-06], 'false': [1.3216940769347101e-17, 0.051804992804305665], 'true,true': [0.009551654818332844, nan], 'true': [0.009551654818332844, nan]}, {'': [0.020334396881453845, 0.0007575000799049364], 'true,false,true': [0.005128511720672574, nan], 'true,false': [0.005128511720672574, nan], 'true,true': [0.0018502667222642247, nan], 'true': [0.0018502667222642247, 0.005128511720672574]}, {'': [0.005477300278764511, 0.019191579260646963], 'true,false,true': [3.1855537365131172e-06, -1.261617073437678e-18], 'false': [-5.28677630773884e-18, 0.039942517756678654], 'true,false': [2.0594695234128104e-06, nan], 'true': [4.131062417209885e-17, 2.0594695234128104e-06]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;director(B).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;false;director(B).;true;true', '3;true,false;genre(G, C), movie(F, G).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true,false;movie(D, F), movie(E, F).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;director(B).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;false;actor(B).;true;true', '7;true;movie(E, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;false;actor(B).;true;true', '9;true,false;genre(F, C), movie(E, F).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048766;  // std dev = 9,42e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1254446385283915;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.39383027184147146;  // std dev = 0,286, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | | else return 0.4960168531960713;  // std dev = 0,190, 90,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.11231637819360617;  // std dev = 9,54e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4412053622353926;  // std dev = 0,138, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.16285711596688546;  // std dev = 0,032, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.41751358415831047;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.33694599990009066;  // std dev = 0,015, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32791440175380004;  // std dev = 0,020, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.12068847805836358;  // std dev = 0,022, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11563848912346349;  // std dev = 0,028, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926105;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2662864177016935;  // std dev = 0,013, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.26008220537974763;  // std dev = 0,017, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.10850486593267328;  // std dev = 0,097, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10440782368832993;  // std dev = 0,115, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 5,58e-08, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.22866047250571714;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.2136872410458573;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.11249395042549354;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12409803885675295;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2056171020477024;  // std dev = 0,006, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07640161794325172;  // std dev = 0,008, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07877675473109154;  // std dev = 7,07e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12005509082312545;  // std dev = 0,125, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | | else return 0.15408892870609803;  // std dev = 0,083, 90,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333693;  // std dev = 5,16e-08, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17405367343821504;  // std dev = 0,005, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07118200600906824;  // std dev = 0,008, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16221101275114516;  // std dev = 0,011, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.15785150913039392;  // std dev = 0,016, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.095343865475433;  // std dev = 0,023, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.0905943462702761;  // std dev = 0,030, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06844390490789985;  // std dev = 0,000778, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15099517650254765;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.1384207779071788;  // std dev = 7,15e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.10402338192865218;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11765923429441359;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0641908232596904;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.1309255611387385;  // std dev = 0,005, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06148238035965935;  // std dev = 0,010, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099793
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.177 seconds
Total inference time: 1.043 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:03:29
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Parameter Learning results': {'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 5.71, 'CLL': -0.096756, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.131}, 'Learning time': 10.887, 'CLL': -0.099793, 'Mapping results': {'Possible mappings': [288], 'Finding best mapping': 7.152557373046875e-07, 'Generating paths time': 3.022200584411621, 'Total time': 3.135587692260742, 'Generating mappings time': 0.08923864364624023, 'Knowledge compiling time': 0.02406907081604004}, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.043}


Start learning from scratch in target domain

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 204

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.141851064900488;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839122;  // std dev = 6,66e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.11231637819360615;  // std dev = 1,04e-07, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783644;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.09269127618926074;  // std dev = 8,30e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0851847513883968;  // std dev = 7,15e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109153;  // std dev = 7,88e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333727;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06842697784420264;  // std dev = 6,41e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return -0.06419184008202626;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.754 seconds
Total inference time: 1.016 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:03:35
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 4.754, 'CLL': -0.094637, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.016}


Starting fold 4

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.019008159637451172
   Generating paths time   = 2.84248948097229
   Generating mappings time   = 0.08737611770629883
   Possible mappings   = [288]
   Finding best mapping   = 9.5367431640625e-07
   Total time   = 2.9489495754241943


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,true;movie(I, K).;false;false
0;true,false;movie(I, A).;true;true
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;false,true;movie(L, B).;false;false
2;false;director(B).;true;false
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;true;movie(H, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;director(B).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true,false,true;movie(M, A), movie(N, L).;false;false
4;true,false;movie(M, B).;true;false
4;true;movie(F, A).;false;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(I, K), movie(J, K).;false;false
5;true,false;movie(I, B), movie(J, A).;true;false
5;true;movie(C, B), movie(C, A).;false;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
6;true;movie(D, B), movie(D, A).;false;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true,true,true;movie(F, B).;false;false
7;true,false,false;movie(I, B).;false;false
7;false;actor(B).;false;false
7;true,false;movie(H, A).;false;true
7;true,true;movie(F, A), movie(F, E).;true;true
7;true,true,false;movie(G, A), movie(G, D).;false;false
7;true;genre(D, C).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,true;movie(J, K).;false;false
8;true,false;movie(J, A).;true;false
8;true,true;movie(C, D).;false;false
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true,false,true;genre(I, C), movie(H, I).;false;false
9;false;actor(B).;false;false
9;true,false;movie(H, A).;true;true
9;true,false,false;genre(J, C).;false;false
9;true;movie(D, A), movie(D, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.26506142670926736;  // std dev = 1,017, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2658924197701948;  // std dev = 6,66e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.11751798903364168;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11751798903364168;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21730244557561898;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, F) )
%   | | then return -0.1058675652050498;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18261073821391427;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0962561989411196;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15691422309144173;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08820200790069554;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13725441210859132;  // std dev = 3,49e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.08136148123890845;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.130693
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.231 seconds
Total inference time: 1.297 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [3.8e-08, 38, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 7, 0], 'false': [0.0, 38, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)'}, {'true,true,false': [0.0, 7, 0], 'false,false': [0.0, 38, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 7, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 38, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 38, 0], 'true,false': [0.0, 0, 0], 'true,true': [1.017, 7, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 3, 0], 'false': [2.24e-08, 38, 0], 'true,true': [6.66e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'true': 'movie(D, B), movie(D, A)'}, {'true,false,true': [3.73e-09, 7, 0], 'false,false': [0.0, 38, 0], 'true,true': [0.0, 0, 45], 'false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'false': 'actor(B)', 'true,true': 'movie(E, A), movie(E, F)', 'true': 'genre(D, C)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [3.73e-09, 7, 0], 'false,true': [1.05e-08, 38, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 7, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 38, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [2.63e-09, 7, 0], 'false,true': [0.0, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [3.49e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.11649408284023735, 3.7981314000334304e-17], 'true,false,true': [-7.93016446160826e-18, nan], 'true,false': [-7.93016446160826e-18, nan], 'true': [1.105288700071267e-15, -7.93016446160826e-18]}, {'': [0.0831635545216455, -1.7529837230923523e-17], 'true,false': [-1.982541115402065e-18, nan], 'true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.05193310189730332, -1.1686558153949016e-17], 'false': [nan, -8.764918615461762e-18], 'true,true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true': [0.05193310189730332, nan]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true,false,true': [0.0, nan], 'false': [nan, -8.764918615461762e-18], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.019909088333742615, -8.764918615461762e-18], 'true': [0.019909088333742615, nan]}, {'': [0.017125042750526866, 1.3147377923192643e-17], 'true,false,true': [0.0, 0.0], 'true,false': [0.0, nan], 'true': [9.868649107779169e-17, 0.0]}, {'': [0.012166508727223609, 0.0], 'false': [nan, 0.0], 'true,false': [1.982541115402065e-18, nan], 'true': [-8.881784197001253e-17, 1.982541115402065e-18]}, {'': [0.009059368387959411, 2.921639538487254e-18], 'true,true,true': [-6.41462192005646e-17, 1.982541115402065e-18], 'false': [2.921639538487254e-18, nan], 'true,true': [0.009059368387959411, nan], 'true': [0.009059368387959411, nan]}, {'': [0.006999193605463783, -7.304098846218135e-19], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0]}, {'': [0.005567591079733572, -1.460819769243627e-18], 'true,false,true': [9.912705577010326e-19, nan], 'false': [-1.460819769243627e-18, nan], 'true,false': [9.912705577010326e-19, nan], 'true': [2.7138785046392715e-17, 9.912705577010326e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true,false;movie(D, F), movie(E, F).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;true;movie(E, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3,80e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.45264600367860897;  // std dev = 0,241, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.46976607585655455;  // std dev = 0,223, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4394978435719034;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1676462803244372;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.335660631710244;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14553658693201824;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926098;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.26534906095527533;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.12835507053031564;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2169217851527892;  // std dev = 0,001, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11466655082944417;  // std dev = 0,000783, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.14016507778557752;  // std dev = 0,103, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.14508103842491615;  // std dev = 0,096, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.16412335341969708;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1611226298148595;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11764620401024303;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1428293939575862;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.14051472406680066;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1059725566475909;  // std dev = 0,000940, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.14349
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.296 seconds
Total inference time: 1.151 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:03:45
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Parameter Learning results': {'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.231, 'CLL': -0.130693, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.297}, 'Learning time': 4.526999999999999, 'CLL': -0.14349, 'Mapping results': {'Possible mappings': [288], 'Finding best mapping': 9.5367431640625e-07, 'Generating paths time': 2.84248948097229, 'Total time': 2.9489495754241943, 'Generating mappings time': 0.08737611770629883, 'Knowledge compiling time': 0.019008159637451172}, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.151}


Start learning from scratch in target domain

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 337

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 2,24e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.549 seconds
Total inference time: 0.982 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:03:49
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.549, 'CLL': -0.094637, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 0.982}


Starting fold 5

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.030887603759765625
   Generating paths time   = 2.9696764945983887
   Generating mappings time   = 0.08859992027282715
   Possible mappings   = [288]
   Finding best mapping   = 7.152557373046875e-07
   Total time   = 3.08923602104187


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'hasposition(A,B) -> genre(A,B)', 'publication(A,B) -> movie(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- actor(A), director(B).;true;false
0;true,false,true;movie(I, K).;false;false
0;true,false;movie(I, A).;true;true
0;true,false,false;movie(N, B).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- actor(A), director(B).;true;false
1;true,false;movie(L, A).;false;false
1;true;movie(G, A), movie(G, B).;false;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;false,true;movie(L, B).;false;false
2;false;director(B).;true;false
2;true,false;genre(J, C).;false;false
2;true,true;movie(H, B).;false;false
2;true;movie(H, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true,false,true;genre(J, C), movie(I, J).;false;false
3;false;director(B).;false;false
3;true,false;movie(I, A).;true;true
3;true,true;movie(D, E).;false;false
3;true,false,false;genre(K, C).;false;false
3;true;movie(D, A), movie(D, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true,false,true;movie(M, A), movie(N, L).;false;false
4;true,false;movie(M, B).;true;false
4;true;movie(F, A).;false;true
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false,true;movie(I, K), movie(J, K).;false;false
5;true,false;movie(I, B), movie(J, A).;true;false
5;true;movie(C, B), movie(C, A).;false;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(B).;true;false
6;true,false;movie(K, J).;false;false
6;false,true;movie(P, B).;false;false
6;true;movie(D, B), movie(D, A).;false;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true,true,true;movie(F, B).;false;false
7;true,false,false;movie(I, B).;false;false
7;false;actor(B).;false;false
7;true,false;movie(H, A).;false;true
7;true,true;movie(F, A), movie(F, E).;true;true
7;true,true,false;movie(G, A), movie(G, D).;false;false
7;true;genre(D, C).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true,false,true;movie(J, K).;false;false
8;true,false;movie(J, A).;true;false
8;true,true;movie(C, D).;false;false
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true,false,true;genre(I, C), movie(H, I).;false;false
9;false;actor(B).;false;false
9;true,false;movie(H, A).;true;true
9;true,false,false;genre(J, C).;false;false
9;true;movie(D, A), movie(D, B).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(E, B) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(G, C), movie(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.31172482273951;  // std dev = 0,409, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2568840657186035;  // std dev = 6,99e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.12244436533446545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21096619520946366;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, F) )
%   | | then return -0.10988386049367667;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.2109661952094637;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17798235393415826;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.09958790555491852;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.1779823539341583;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15341553723906312;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.0910071031568373;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13453118136876618;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.083753549840975;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.13453118136876618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114914
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.451 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [4.21e-08, 44, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'false': [3.16e-08, 44, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'false': 'director(B)', 'true,true': 'movie(D, B)', 'false,true': 'movie(E, B)', 'true': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 10], 'false,false': [1.49e-08, 44, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(G, C), movie(F, G)', 'false': 'director(B)', 'true,false': 'movie(F, A)', 'true,true': 'movie(D, E)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,false,false': [0.0, 0, 0], 'false,true': [3.65e-08, 0, 10], 'true,false,true,false': [0.0, 1, 0], 'false,false': [2.11e-08, 44, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 44, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.409, 1, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [2.24e-08, 44, 0], 'true,true': [6.99e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true,false': 'movie(E, F)', 'false,true': 'movie(G, B)', 'true': 'movie(D, B), movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 10], 'true,false,true': [0.0, 1, 0], 'false,false': [0.0, 44, 0], 'true,true': [0.0, 0, 35], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'false': 'actor(B)', 'true,true': 'movie(E, A), movie(E, F)', 'true': 'genre(D, C)'}, {'true,true,true,true': [0.0, 0, 35], 'true,true,true,false': [0.0, 1, 0], 'false,true': [1.18e-08, 44, 0], 'false,false': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,true,true': [2.11e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [9.13e-09, 44, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)', 'true,false': 'movie(E, A)', 'true': 'movie(D, A), movie(D, B)'}, {'true,false,true,true': [0.0, 0, 0], 'false,true': [0.0, 44, 0], 'true,false,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 10], 'true,true': [1.05e-08, 0, 35], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.021266540642723226, 4.0371746350005693e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.015181896531630958, 2.2709107321878203e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.012039361070842395, 0.06726754122121566], 'false': [-1.3322676295501878e-16, 5.046468293750712e-18], 'true,true': [-2.0301221021717148e-16, 0.0], 'false,true': [-1.3322676295501878e-16, nan], 'true': [0.012039361070842395, nan]}, {'': [0.0072774911925922075, 0.040661538091945185], 'true,false,true': [nan, 0.0], 'false': [1.3322676295501878e-16, 1.0092936587501423e-17], 'true,false': [0.0, nan], 'true,true': [-2.791417890486108e-16, nan], 'true': [-2.791417890486108e-16, 0.0]}, {'': [0.003634497357172579, -5.046468293750712e-18], 'true': [0.003634497357172579, nan]}, {'': [0.003060043779410884, 1.1354553660939102e-17], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.0855514018557086e-16, 0.0]}, {'': [0.0027801439340777107, 0.012667499964921914], 'false': [-1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan], 'false,true': [-1.1102230246251566e-17, nan], 'true': [-5.075305255429287e-17, 0.0]}, {'': [0.002080697309682985, 0.009523645978395447], 'true,true,true': [-1.9032394707859827e-17, 0.0], 'false': [3.1540426835941946e-18, 0.0], 'true,true': [0.002080697309682985, nan], 'true': [0.002080697309682985, nan]}, {'': [0.0012705147548273555, 1.8924256101565167e-18], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,true': [9.86864910777917e-18, nan], 'true': [9.86864910777917e-18, 0.0]}, {'': [0.0012867961695801067, 0.005958837198900578], 'true,false,true': [nan, 0.0], 'false': [-2.523234146875356e-18, -2.7755575615628915e-18], 'true,false': [0.0, nan], 'true': [3.1720657846433043e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- actor(A), director(B).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- actor(A), director(B).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true', '2;false;director(B).;true;true', '2;true;movie(D, B).;true;true', '3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '3;false;director(B).;true;true', '3;true;movie(D, A), movie(D, B).;true;true', '4;;workedunder(A, B) :- actor(A), director(B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, B), movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;false;director(B).;true;true', '6;true;movie(D, B), movie(D, A).;true;true', '7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;false;actor(B).;true;true', '7;true;movie(E, B).;true;true', '8;;workedunder(A, B) :- director(B), actor(A).;true;true', '8;true;movie(C, B), movie(C, A).;true;true', '9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;false;actor(B).;true;true', '9;true;movie(D, A), movie(D, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 4,21e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.5182729470274017;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.4219081491190528;  // std dev = 0,027, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.17522745731868575;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3061188847374365;  // std dev = 0,095, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3199291531414959;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.09269127618926105;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25871694153125985;  // std dev = 0,030, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19495469941311927;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2127157837849089;  // std dev = 0,025, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.16616059985226936;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then return 0.21067706694732835;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.16492401725781142;  // std dev = 0,075, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.17562726898098185;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.1777707249261597;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15504846379428297;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1659893405031149;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13626479593600926;  // std dev = 0,021, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.14426461867533838;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.13419777969124858;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.335 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:04:00
{'Precision': [1.0, 0.5], 'F1': 1.0, 'Parameter Learning results': {'Precision': [1.0, 0.5], 'F1': 1.0, 'Learning time': 2.451, 'CLL': -0.114914, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.317}, 'Learning time': 4.786, 'CLL': -0.114052, 'Mapping results': {'Possible mappings': [288], 'Finding best mapping': 7.152557373046875e-07, 'Generating paths time': 2.9696764945983887, 'Total time': 3.08923602104187, 'Generating mappings time': 0.08859992027282715, 'Knowledge compiling time': 0.030887603759765625}, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.247}


Start learning from scratch in target domain

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 337

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.5321349378684588;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3999123396959217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.3047860505335217;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2,24e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.23934386074685432;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.19360164133068228;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20975771563253573;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.1605656866455847;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.16542775201789628;  // std dev = 0,083, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.3197645944650544;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14385447188457903;  // std dev = 0,074, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.2907205430207032;  // std dev = 0,588, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213649
   Precision = 0.844612 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.915761


Total learning time: 3.034 seconds
Total inference time: 1.02 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:04:05
{'Precision': [0.844612, 0.5], 'F1': 0.915761, 'Learning time': 3.034, 'CLL': -0.213649, 'AUC ROC': 1.0, 'Recall': 1.0, 'AUC PR': 1.0, 'Inference time': 1.02}


