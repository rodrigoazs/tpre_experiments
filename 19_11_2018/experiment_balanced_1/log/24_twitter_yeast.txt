Starting experiment #1 for 24_twitter_yeast

Start learning from source dataset

Source train facts examples: 2052
Source train pos examples: 1372
Source train neg examples: 1372

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.3581489350995074;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.3581489350995129;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3581489350995087;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else return 0.358148935099508;  // std dev = 0,500, 464,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=232 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.3581489350995133;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.3581489350995133;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.3087411357856633;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.3087411357856376;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.3087411357856372;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3087411357856372;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.25641236875856666;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.25641236875857976;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.25641236875858187;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else if ( follows(F, C) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.25641236875858653;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.25641236875858875;  // std dev = 10,050, 404,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=202 */
%   | | else return 0.25641236875858714;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H) )
%   | | then return 0.2564123687585884;  // std dev = 0,500, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | else return 0.25641236875858603;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.20613740734453131;  // std dev = 0,500, 1.846,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=923 */
%   | | else return 0.20613740734453517;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.20613740734454172;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.20613740734453892;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.20613740734454025;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734454133;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.20613740734453861;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.20613740734453867;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.20613740734453984;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.16162857548414433;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else return 0.16162857548414417;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.1616285754841444;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.1616285754841475;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.16162857548414647;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414428;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414733;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.16162857548414664;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792081527;  // std dev = 19,274, 1.486,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=743 */
%   | | | else return 0.12455597792081972;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.12455597792081662;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(C, E) )
%   | | then return 0.12455597792082045;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.12455597792082053;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.12455597792082054;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.12455597792081967;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.09492800936732027;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.0949280093673082;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.09492800936730682;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(C, E) )
%   | | then return 0.09492800936730778;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.09492800936730793;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.09492800936730791;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.09492800936730705;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730705;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.0718608885005646;  // std dev = 0,500, 1.548,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=774 */
%   | | else return 0.07186088850055461;  // std dev = 0,500, 386,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=193 */
%   | else if ( follows(C, E) )
%   | | then return 0.07186088850055611;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.07186088850055868;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.07186088850055841;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( accounttype(G, I), accounttype(H, I) )
%   | | | then return 0.07186088850055906;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.07186088850055873;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0718608885005587;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07186088850055862;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375954569;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.05418307375954943;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.054183073759546486;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then return 0.0541830737595468;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.05418307375954967;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954895;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.054183073759549;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.0541830737595491;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.040760253233045114;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.04076025323305621;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.04076025323305549;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.040760253233056404;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.040760253233056175;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.04076025323305458;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.04076025323305699;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04076025323305688;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Predicates from source: ['tweets(account,word).', 'follows(account,account).', 'accounttype(account,type).']

Starting fold 1

Target predicate: location 

Mapping Results
   Knowledge compiling time   = 0.06138491630554199
   Generating paths time   = 2.0926592350006104
   Generating mappings time   = 0.03397321701049805
   Possible mappings   = 28
   Finding best mapping   = 0.0025718212127685547
   Total time   = 2.19059419631958


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> location(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: location 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;location(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;location(A, B) :- interaction(A, C).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;location(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(A, C).;true;true
3;;location(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;location(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;location(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;location(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;location(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;location(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;location(A, B) :- interaction(A, C).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995083;  // std dev = 9,274, 344,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0.3581489350995075;  // std dev = 15,984, 1.022,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=511 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578563045;  // std dev = 9,950, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563717;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.3087411357856374;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.308741135785637;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.30874113578563617;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.30874113578562856;  // std dev = 10,840, 470,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 9,354, 350,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=175 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585873;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858736;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2564123687585872;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.2564123687585749;  // std dev = 14,933, 892,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=446 */
%   | | else return 0.25641236875858847;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858564;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.2564123687585871;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.206137407344542;  // std dev = 9,327, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | else return 0.20613740734454053;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454494;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   | | | else return 0.20613740734454894;  // std dev = 11,269, 508,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=254 */
%   | | else return 0.20613740734454158;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445394;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.20613740734453975;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.2061374073445401;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414472;  // std dev = 9,354, 350,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=175 */
%   | | else return 0.1616285754841477;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414544;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   | | | else return 0.16162857548414533;  // std dev = 11,269, 508,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=254 */
%   | | else return 0.16162857548414766;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841462;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.16162857548414614;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.16162857548414633;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082078;  // std dev = 9,192, 338,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=169 */
%   | | | else return 0.12455597792082047;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.12455597792082058;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082074;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else return 0.12455597792082074;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082092;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.12455597792082242;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.12455597792082346;  // std dev = 10,840, 470,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730816;  // std dev = 9,274, 344,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
%   | | | else return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730704;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730801;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else return 0.094928009367308;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730822;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.09492800936730898;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.09492800936730944;  // std dev = 10,840, 470,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055904;  // std dev = 9,354, 350,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=175 */
%   | | else return 0.07186088850055893;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else if ( interaction(C, E) )
%   | | then return 0.0718608885005594;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055965;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.07186088850055791;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.07186088850055987;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.07186088850056013;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.07186088850056242;  // std dev = 10,840, 470,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759549734;  // std dev = 9,274, 344,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
%   | | | else return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.05418307375954962;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759554924;  // std dev = 15,215, 926,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=463 */
%   | | else return 0.05418307375954869;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954854;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.05418307375954844;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else return 0.054183073759549144;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233058936;  // std dev = 9,950, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305565;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.040760253233056064;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.040760253233056265;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.04076025323305629;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.04076025323305449;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.040760253233056196;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.040760253233057354;  // std dev = 10,840, 470,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 37.048 seconds
Total inference time: 2.853 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [2.449, 12, 12], 'true,true,true,true': [9.274, 172, 172], 'true,true,false,false': [3.24, 21, 21], 'true,false': [15.984, 511, 511], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.317, 22, 22], 'true,true,false,true': [1.0, 2, 2], 'true,true,true,false': [1.225, 3, 3]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [9.95, 198, 198], 'true,false,false,false': [3.24, 21, 21], 'false,true,true,true': [7.681, 118, 118], 'true,false,false,true': [5.05, 51, 51], 'true,false,true,false': [5.958, 71, 71], 'true,false,true,true': [5.292, 56, 56], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'false,true,false': [10.84, 235, 235]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(A, C)'}, {'false,true,true': [4.123, 34, 34], 'true,false,true,true': [2.915, 17, 17], 'true,true,true': [9.354, 175, 175], 'true,true,false,false': [3.24, 21, 21], 'true,false,true,false': [14.933, 446, 446], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.0, 2, 2], 'true,false,false': [4.899, 48, 48]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [10.223, 209, 209], 'true,true,false': [3.464, 24, 24], 'false,true,true,true': [3.162, 20, 20], 'true,false,false': [4.899, 48, 48], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'true,false,true,false': [11.269, 254, 254], 'true,true,true': [9.327, 174, 174]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [10.223, 209, 209], 'true,true,false': [3.391, 23, 23], 'false,true,true,true': [3.162, 20, 20], 'true,false,false': [4.899, 48, 48], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'true,false,true,false': [11.269, 254, 254], 'true,true,true': [9.354, 175, 175]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [3.464, 24, 24], 'true,true,true,true': [9.192, 169, 169], 'true,false,false': [6.0, 72, 72], 'false,true,false': [10.84, 235, 235], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'true,false,true': [7.969, 127, 127], 'false,true,true,true': [7.681, 118, 118], 'true,true,true,false': [1.581, 5, 5]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [3.391, 23, 23], 'true,true,true,true': [9.274, 172, 172], 'true,false,false': [6.0, 72, 72], 'false,true,false': [10.84, 235, 235], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'true,false,true': [7.969, 127, 127], 'false,true,true,true': [7.681, 118, 118], 'true,true,true,false': [1.225, 3, 3]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [3.24, 21, 21], 'true,true,false': [3.391, 23, 23], 'true,false,false,true': [5.05, 51, 51], 'false,true,true,false': [2.646, 14, 14], 'false,true,false': [10.84, 235, 235], 'false,false': [0.0, 0, 0], 'true,true,true': [9.354, 175, 175], 'true,false,true': [7.969, 127, 127], 'false,true,true,true': [7.681, 118, 118]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [3.391, 23, 23], 'true,true,true,true': [9.274, 172, 172], 'true,false,false': [4.899, 48, 48], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.317, 22, 22], 'true,false,true': [15.215, 463, 463], 'false,true,true,true': [2.449, 12, 12], 'true,true,true,false': [1.225, 3, 3]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [9.95, 198, 198], 'true,false,false,false': [3.24, 21, 21], 'false,true,true,true': [7.681, 118, 118], 'true,false,false,true': [5.05, 51, 51], 'true,false,true,false': [5.958, 71, 71], 'true,false,true,true': [5.292, 56, 56], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'false,true,false': [10.84, 235, 235]}]]
[{'': [0.2500000000000223, 0.24999999999999992], 'true,true': [0.25000000000000444, 0.2500000000000012], 'true,true,false': [0.25, 0.25], 'false,true,true': [0.24999999999999956, 0.2500000000000011], 'false,true': [0.25000000000000167, 0.25], 'false': [0.24999999999999992, nan], 'true,true,true': [0.25000000000000444, 0.24999999999999992], 'true': [0.2500000000000039, 0.24999999999999165]}, {'': [0.2500000000000103, 0.2500000000000104], 'false,true,true': [0.2500000000000019, 0.2499999999999998], 'true,false,true': [0.24999999999999828, 0.24999999999999814], 'true,false': [0.25000000000000144, 0.24999999999999817], 'false,true': [0.2500000000000016, 0.25000000000000766], 'false': [0.2500000000000104, nan], 'true,false,false': [0.24999999999999847, 0.2500000000000004], 'true': [0.2500000000000047, 0.2500000000000055]}, {'': [0.2499999999999998, 0.2500000000000004], 'true,true': [0.24999999999999656, 0.2500000000000003], 'true,true,false': [0.25, 0.25000000000000044], 'true,false,true': [0.24999999999999994, 0.25000000000000033], 'true,false': [0.2500000000000004, 0.24999999999999947], 'false,true': [0.2500000000000012, 0.24999999999999978], 'false': [0.2500000000000004, nan], 'true': [0.24999999999999648, 0.25000000000000105]}, {'': [0.2500000000000016, 0.2500000000000003], 'true,true': [0.2500000000000007, 0.24999999999999992], 'false,true,true': [0.24999999999999972, 0.24999999999999997], 'true,false,true': [0.250000000000001, 0.24999999999999317], 'true,false': [0.24999999999999592, 0.24999999999999947], 'false,true': [0.2500000000000006, 0.2499999999999996], 'false': [0.2500000000000003, nan], 'true': [0.2500000000000018, 0.25000000000000444]}, {'': [0.24999999999998915, 0.24999999999999942], 'false,true,true': [0.24999999999999986, 0.25000000000000033], 'true,true': [0.25000000000000067, 0.24999999999999997], 'true,false,true': [0.25000000000000216, 0.25000000000000233], 'true,false': [0.25000000000000083, 0.25000000000000017], 'false,true': [0.2499999999999997, 0.24999999999999986], 'false': [0.24999999999999942, nan], 'true': [0.25000000000000033, 0.24999999999999512]}, {'': [0.2499999999999937, 0.2499999999999939], 'false,true,true': [0.24999999999999956, 0.25], 'true,true': [0.2500000000000016, 0.25], 'true,false': [0.25000000000000017, 0.24999999999999986], 'false,true': [0.25000000000000083, 0.25000000000000305], 'false': [0.2499999999999939, nan], 'true,true,true': [0.2500000000000015, 0.24999999999999992], 'true': [0.2500000000000019, 0.25000000000000216]}, {'': [0.24999999999999847, 0.24999999999999717], 'true,true': [0.2499999999999979, 0.24999999999999992], 'false,true,true': [0.24999999999999922, 0.25000000000000006], 'true,false': [0.24999999999999958, 0.24999999999999986], 'false,true': [0.24999999999999942, 0.24999999999999875], 'false': [0.24999999999999717, nan], 'true,true,true': [0.2499999999999979, 0.25], 'true': [0.24999999999999778, 0.249999999999998]}, {'': [0.2500000000000023, 0.2500000000000022], 'true,true': [0.2500000000000025, 0.24999999999999972], 'false,true,true': [0.24999999999999872, 0.24999999999999983], 'true,false': [0.2499999999999995, 0.24999999999999994], 'false,true': [0.2499999999999992, 0.2500000000000022], 'false': [0.2500000000000022, nan], 'true,false,false': [0.2500000000000002, 0.2500000000000001], 'true': [0.2500000000000026, 0.25000000000000167]}, {'': [0.25000000000000655, 0.2499999999999996], 'false,true,true': [0.24999999999999992, 0.25], 'true,true': [0.2499999999999995, 0.24999999999999958], 'true,false': [0.25000000000000555, 0.2500000000000008], 'false,true': [0.25, 0.2500000000000001], 'false': [0.2499999999999996, nan], 'true,true,true': [0.24999999999999956, 0.25], 'true': [0.24999999999999886, 0.2500000000000057]}, {'': [0.24999999999999728, 0.24999999999999492], 'false,true,true': [0.2500000000000005, 0.24999999999999997], 'false': [0.24999999999999492, nan], 'true,false,false': [0.25000000000000006, 0.25], 'false,true': [0.2500000000000004, 0.24999999999999994], 'true': [0.2500000000000002, 0.24999999999999992], 'true,false': [0.25, 0.2500000000000002], 'true,false,true': [0.25, 0.25000000000000006]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;location(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;location(A, B) :- interaction(A, C).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;location(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(A, C).;true;true', '3;;location(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;location(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;location(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;location(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;location(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;location(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;location(A, B) :- interaction(A, C).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995083;  // std dev = 9,274, 344,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0.3581489350995075;  // std dev = 0,500, 1.022,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=511 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else return 0.3581489350995117;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3087411357856364;  // std dev = 0,500, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | else return 0.3087411357856377;  // std dev = 0,500, 300,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=150 */
%   | else if ( interaction(C, D) )
%   | | then return 0.3087411357856377;  // std dev = 0,500, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else return 0.3087411357856374;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.3087411357856377;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.30874113578563617;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3087411357856376;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.30874113578563783;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.25641236875858875;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.2564123687585871;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.25641236875857487;  // std dev = 14,933, 892,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=446 */
%   | | else return 0.2564123687585867;  // std dev = 0,500, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.25641236875858614;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585857;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2564123687585863;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.256412368758586;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454167;  // std dev = 0,500, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.20613740734453884;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.20613740734453861;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(F, C) )
%   | | then return 0.20613740734455285;  // std dev = 0,500, 926,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=463 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.20613740734454028;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.20613740734453911;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, I) )
%   | | then return 0.20613740734453878;  // std dev = 0,500, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.2061374073445388;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.1616285754841448;  // std dev = 6,442, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | | else return 0.1616285754841446;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.16162857548414591;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.16162857548414591;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(G, C) )
%   | | then return 0.16162857548414442;  // std dev = 0,500, 926,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=463 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.16162857548414764;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.16162857548414752;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   else if ( interaction(A, I) )
%   | then return 0.16162857548414683;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.12455597792082061;  // std dev = 0,500, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | else return 0.12455597792081918;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082063;  // std dev = 0,500, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else return 0.12455597792082058;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082068;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.12455597792082074;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1245559779208207;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.12455597792082068;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.09492800936730802;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.0949280093673071;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0.0949280093673065;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.09492800936730784;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730811;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.09492800936730765;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.09492800936730787;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.09492800936730812;  // std dev = 9,460, 358,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.07186088850055565;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.07186088850055902;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0.07186088850055823;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.07186088850055913;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.0718608885005589;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.07186088850055931;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.07186088850055923;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.07186088850055625;  // std dev = 9,460, 358,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.05418307375954691;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.05418307375954734;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.054183073759551725;  // std dev = 12,826, 658,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=329 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.05418307375954886;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.05418307375954967;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.05418307375954884;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.05418307375954949;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else return 0.05418307375954844;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.04076025323305677;  // std dev = 0,500, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.040760253233056785;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | | else return 0.04076025323305854;  // std dev = 8,307, 276,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=138 */
%   | else return 0.04076025323305836;  // std dev = 0,500, 398,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=199 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.04076025323305446;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.040760253233056196;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.04076025323305627;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.040760253233056966;  // std dev = 9,460, 358,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=179 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 82.386 seconds
Total inference time: 2.589 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 1, Type: transfer, Time: 06:28:36
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.853, 'Learning time': 37.048}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.589, 'Mapping results': {'Total time': 2.19059419631958, 'Possible mappings': 28, 'Finding best mapping': 0.0025718212127685547, 'Knowledge compiling time': 0.06138491630554199, 'Generating paths time': 2.0926592350006104, 'Generating mappings time': 0.03397321701049805}, 'Learning time': 119.434}


Start learning from scratch in target domain

Target train facts examples: 3840
Target train pos examples: 764
Target train neg examples: 764

Target test facts examples: 8372
Target test pos examples: 2408
Target test neg examples: 2408

WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( interaction(H, A), proteinclass(H, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, J) )
%   | then return 0.35814893509950774;  // std dev = 0,500, 698,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=349 */
%   | else return 0.3581489350995077;  // std dev = 0,500, 734,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=367 */
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3087411357856305;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else return 0.3087411357856261;  // std dev = 0,500, 1.022,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=511 */
%   else if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30874113578563567;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3087411357856356;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.3087411357856356;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.30874113578563517;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( complex(A, D) )
%   | | then if ( proteinclass(E, C), enzyme(E, F) )
%   | | | then return 0.2564123687585873;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585873;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2564123687585873;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2564123687585873;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.25641236875858675;  // std dev = 0,500, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   else if ( proteinclass(A, H) )
%   | then return 0.256412368758589;  // std dev = 0,500, 302,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=151 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.256412368758589;  // std dev = 0,500, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.256412368758589;  // std dev = 11,180, 500,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=250 */
%   | | | else return 0.256412368758589;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then return 0.20613740734453523;  // std dev = 0,500, 794,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=397 */
%   else if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.20613740734454206;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.20613740734454208;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.20613740734454206;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.20613740734454206;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( phenotype(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.20613740734454206;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.20613740734454206;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.20613740734454206;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.20613740734454206;  // std dev = 8,216, 270,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=135 */
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then return 0.1616285754841446;  // std dev = 0,500, 1.418,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=709 */
%   else if ( complex(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then if ( interaction(A, F), complex(F, D) )
%   | | | then return 0.16162857548414788;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841479;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.16162857548414788;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16162857548414786;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.16162857548414797;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1616285754841479;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.16162857548414802;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.1616285754841478;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then return 0.12455597792082908;  // std dev = 0,500, 794,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=397 */
%   else if ( proteinclass(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.12455597792082242;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.1245559779208224;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.12455597792082243;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.12455597792082185;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( phenotype(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.12455597792082244;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.12455597792082115;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12455597792082124;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.12455597792082089;  // std dev = 8,216, 270,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=135 */
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.09492800936730705;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730687;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( enzyme(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.09492800936730705;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730705;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.09492800936730723;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.09492800936730701;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( interaction(A, I) )
%   | then return 0.09492800936730693;  // std dev = 0,500, 698,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=349 */
%   | else return 0.09492800936731545;  // std dev = 0,500, 734,000 (wgt'ed) examples reached here.  /* #neg=367 #pos=367 */
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.07186088850056124;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | else return 0.07186088850056307;  // std dev = 0,500, 1.022,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=511 */
%   else if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.07186088850055737;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055738;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.07186088850055738;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.07186088850055737;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0718608885005575;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.07186088850055754;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.07186088850055761;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.05418307375954878;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.05418307375954879;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0541830737595488;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.05418307375954937;  // std dev = 0,500, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   else if ( phenotype(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( proteinclass(A, H) )
%   | | | then return 0.05418307375954866;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.05418307375954856;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else return 0.054183073759547354;  // std dev = 0,500, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   | else if ( interaction(A, I) )
%   | | then return 0.054183073759547846;  // std dev = 0,500, 382,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=191 */
%   | | else return 0.05418307375954743;  // std dev = 0,500, 490,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=245 */
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then return 0.04076025323304937;  // std dev = 0,500, 1.418,000 (wgt'ed) examples reached here.  /* #neg=709 #pos=709 */
%   else if ( complex(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then if ( interaction(A, F), complex(F, D) )
%   | | | then return 0.04076025323305553;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.040760253233055474;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.04076025323305543;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305554;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), interaction(I, I) )
%   | | | then return 0.040760253233055724;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.040760253233055675;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04076025323305554;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.0407602532330559;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 80.34100000000001 seconds
Total inference time: 1.988 seconds
AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 1, Type: scratch, Time: 06:29:58
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.988, 'Learning time': 80.34100000000001}


Starting fold 2

Target predicate: location 

Mapping Results
   Knowledge compiling time   = 0.056418418884277344
   Generating paths time   = 2.0140862464904785
   Generating mappings time   = 0.0330502986907959
   Possible mappings   = 28
   Finding best mapping   = 0.0026612281799316406
   Total time   = 2.1062209606170654


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> location(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: location 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;location(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;location(A, B) :- interaction(A, C).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;location(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(A, C).;true;true
3;;location(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;location(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;location(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;location(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;location(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;location(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;location(A, B) :- interaction(A, C).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995082;  // std dev = 9,721, 378,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=189 */
%   | | | else return 0.3581489350995113;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3581489350995133;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0.35814893509950757;  // std dev = 15,346, 942,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=471 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856277;  // std dev = 12,042, 580,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=290 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563717;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.308741135785635;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.308741135785636;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856376;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578562784;  // std dev = 11,832, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 10,654, 454,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=227 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585881;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.25641236875858875;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.25641236875858725;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.2564123687585775;  // std dev = 14,526, 844,000 (wgt'ed) examples reached here.  /* #neg=422 #pos=422 */
%   | | else return 0.2564123687585886;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858586;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453875;  // std dev = 10,247, 420,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=210 */
%   | | else return 0.2061374073445419;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445421;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | | else return 0.20613740734455152;  // std dev = 12,410, 616,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=308 */
%   | | else return 0.20613740734454153;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453925;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.2061374073445396;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414541;  // std dev = 10,654, 454,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=227 */
%   | | else return 0.16162857548414683;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414786;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | | else return 0.16162857548414492;  // std dev = 12,410, 616,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=308 */
%   | | else return 0.16162857548414777;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414625;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.16162857548414664;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082085;  // std dev = 9,670, 374,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=187 */
%   | | | else return 0.124555977920821;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.1245559779208207;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082054;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | else return 0.12455597792082075;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082082;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082586;  // std dev = 11,832, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730827;  // std dev = 9,721, 378,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=189 */
%   | | | else return 0.09492800936730816;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | else return 0.09492800936730783;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730768;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | else return 0.09492800936730729;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.0949280093673082;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730408;  // std dev = 11,832, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056321;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | else return 0.07186088850055934;  // std dev = 6,403, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055905;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055941;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.07186088850055825;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.07186088850055943;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056441;  // std dev = 11,832, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954924;  // std dev = 9,721, 378,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=189 */
%   | | | else return 0.05418307375954973;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | else return 0.05418307375954946;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375955414;  // std dev = 14,748, 870,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=435 */
%   | | else return 0.05418307375954878;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954854;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.054183073759548984;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.054183073759549005;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233059124;  // std dev = 12,042, 580,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=290 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305558;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.0407602532330555;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.040760253233055446;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.04076025323305599;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.040760253233055016;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305775;  // std dev = 11,832, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.69555
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 19.308 seconds
Total inference time: 2.395 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [2.915, 17, 17], 'true,true,true,true': [9.721, 189, 189], 'true,true,false,false': [5.244, 55, 55], 'true,false': [15.346, 471, 471], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.0, 8, 8], 'true,true,false,true': [2.0, 8, 8], 'true,true,true,false': [4.359, 38, 38]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [12.042, 290, 290], 'true,false,false,false': [1.581, 5, 5], 'false,true,true,true': [6.819, 93, 93], 'true,false,false,true': [3.24, 21, 21], 'true,false,true,false': [4.472, 40, 40], 'true,false,true,true': [5.568, 62, 62], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [11.832, 280, 280]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(A, C)'}, {'false,true,true': [3.536, 25, 25], 'true,false,true,true': [2.55, 13, 13], 'true,true,true': [10.654, 227, 227], 'true,true,false,false': [5.244, 55, 55], 'true,false,true,false': [14.526, 422, 422], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'true,true,false,true': [2.0, 8, 8], 'true,false,false': [4.243, 36, 36]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [7.969, 127, 127], 'true,true,false': [6.325, 80, 80], 'false,true,true,true': [2.828, 16, 16], 'true,false,false': [4.243, 36, 36], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.121, 9, 9], 'true,false,true,false': [12.41, 308, 308], 'true,true,true': [10.247, 210, 210]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [7.969, 127, 127], 'true,true,false': [5.612, 63, 63], 'false,true,true,true': [2.828, 16, 16], 'true,false,false': [4.243, 36, 36], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.121, 9, 9], 'true,false,true,false': [12.41, 308, 308], 'true,true,true': [10.654, 227, 227]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [6.325, 80, 80], 'true,true,true,true': [9.67, 187, 187], 'true,false,false': [3.606, 26, 26], 'false,true,false': [11.832, 280, 280], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [7.141, 102, 102], 'false,true,true,true': [6.819, 93, 93], 'true,true,true,false': [3.391, 23, 23]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [5.612, 63, 63], 'true,true,true,true': [9.721, 189, 189], 'true,false,false': [3.606, 26, 26], 'false,true,false': [11.832, 280, 280], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [7.141, 102, 102], 'false,true,true,true': [6.819, 93, 93], 'true,true,true,false': [4.359, 38, 38]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.581, 5, 5], 'true,true,false': [6.403, 82, 82], 'true,false,false,true': [3.24, 21, 21], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [11.832, 280, 280], 'false,false': [0.0, 0, 0], 'true,true,true': [10.198, 208, 208], 'true,false,true': [7.141, 102, 102], 'false,true,true,true': [6.819, 93, 93]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [5.612, 63, 63], 'true,true,true,true': [9.721, 189, 189], 'true,false,false': [4.243, 36, 36], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.0, 8, 8], 'true,false,true': [14.748, 435, 435], 'false,true,true,true': [2.915, 17, 17], 'true,true,true,false': [4.359, 38, 38]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [12.042, 290, 290], 'true,false,false,false': [1.581, 5, 5], 'false,true,true,true': [6.819, 93, 93], 'true,false,false,true': [3.24, 21, 21], 'true,false,true,false': [4.472, 40, 40], 'true,false,true,true': [5.568, 62, 62], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [11.832, 280, 280]}]]
[{'': [0.2500000000000227, 0.2500000000000015], 'true,true': [0.25000000000000333, 0.2499999999999997], 'true,true,false': [0.24999999999999997, 0.24999999999999992], 'false,true,true': [0.24999999999999953, 0.24999999999999997], 'false,true': [0.25000000000000133, 0.24999999999999983], 'false': [0.2500000000000015, nan], 'true,true,true': [0.25000000000000405, 0.2500000000000016], 'true': [0.25000000000000255, 0.24999999999999095]}, {'': [0.25000000000000977, 0.25000000000001044], 'false,true,true': [0.24999999999999908, nan], 'true,false,true': [0.24999999999999842, 0.24999999999999986], 'true,false': [0.2500000000000021, 0.2499999999999998], 'false,true': [0.24999999999999908, 0.25000000000000894], 'false': [0.25000000000001044, nan], 'true,false,false': [0.24999999999999992, 0.24999999999999994], 'true': [0.2500000000000085, 0.25000000000000155]}, {'': [0.24999999999999956, 0.2500000000000004], 'true,true': [0.2500000000000037, 0.25000000000000017], 'true,true,false': [0.24999999999999983, 0.24999999999999997], 'true,false,true': [0.24999999999999994, 0.25000000000000666], 'true,false': [0.25000000000000305, 0.24999999999999956], 'false,true': [0.25000000000000017, 0.25000000000000006], 'false': [0.2500000000000004, nan], 'true': [0.25000000000000516, 0.25000000000000056]}, {'': [0.2500000000000039, 0.2500000000000005], 'false,true,true': [0.24999999999999986, 0.25], 'true,true': [0.25000000000000333, 0.2500000000000008], 'true,false,true': [0.25000000000000167, 0.24999999999999267], 'true,false': [0.24999999999999306, 0.2499999999999996], 'false,true': [0.24999999999999986, 0.24999999999999992], 'false': [0.2500000000000005, nan], 'true': [0.24999999999999775, 0.2499999999999995]}, {'': [0.2499999999999931, 0.24999999999999958], 'false,true,true': [0.24999999999999994, 0.25], 'true,true': [0.2500000000000024, 0.25000000000000033], 'true,false,true': [0.2500000000000004, 0.25000000000000233], 'true,false': [0.250000000000001, 0.2500000000000004], 'false,true': [0.24999999999999964, 0.24999999999999994], 'false': [0.24999999999999958, nan], 'true': [0.25000000000000244, 0.24999999999999975]}, {'': [0.24999999999999423, 0.24999999999999375], 'true,true': [0.2500000000000034, 0.2499999999999986], 'false,true,true': [0.24999999999999906, nan], 'true,false': [0.24999999999999958, 0.24999999999999994], 'false,true': [0.24999999999999906, 0.24999999999999878], 'false': [0.24999999999999375, nan], 'true,true,true': [0.2500000000000035, 0.24999999999999992], 'true': [0.24999999999999784, 0.24999999999999978]}, {'': [0.24999999999999742, 0.24999999999999814], 'false,true,true': [0.2499999999999987, nan], 'true,true': [0.2499999999999987, 0.2499999999999997], 'true,false': [0.2500000000000003, 0.24999999999999983], 'false,true': [0.2499999999999987, 0.24999999999999833], 'false': [0.24999999999999814, nan], 'true,true,true': [0.24999999999999944, 0.25000000000000033], 'true': [0.24999999999999764, 0.24999999999999997]}, {'': [0.25000000000000155, 0.2500000000000023], 'true,true': [0.25000000000000233, 0.25000000000000056], 'false,true,true': [0.24999999999999845, nan], 'true,false': [0.2500000000000006, 0.2499999999999998], 'false,true': [0.24999999999999845, 0.2500000000000023], 'false': [0.2500000000000023, nan], 'true,false,false': [0.24999999999999975, 0.25], 'true': [0.2500000000000021, 0.25000000000000067]}, {'': [0.25000000000000666, 0.2500000000000001], 'true,true': [0.24999999999999878, 0.24999999999999942], 'false,true,true': [0.25000000000000006, 0.25000000000000006], 'true,false': [0.2500000000000055, 0.25000000000000006], 'false,true': [0.25000000000000006, 0.25], 'false': [0.2500000000000001, nan], 'true,true,true': [0.24999999999999914, 0.24999999999999967], 'true': [0.25000000000000067, 0.2500000000000055]}, {'': [0.24999999999999625, 0.25000000000000133], 'false,true,true': [0.2500000000000004, nan], 'true,false,true': [0.24999999999999978, 0.25000000000000006], 'true,false': [0.24999999999999983, 0.24999999999999994], 'false,true': [0.2500000000000004, 0.2500000000000009], 'false': [0.25000000000000133, nan], 'true,false,false': [0.24999999999999994, 0.25], 'true': [0.24999999999999853, 0.24999999999999983]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;location(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;location(A, B) :- interaction(A, C).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;location(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(A, C).;true;true', '3;;location(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;location(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;location(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;location(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;location(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;location(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;location(A, B) :- interaction(A, C).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995082;  // std dev = 9,721, 378,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=189 */
%   | | | else return 0.3581489350995113;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3581489350995133;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0.35814893509950757;  // std dev = 0,500, 942,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=471 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.30874113578563733;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.3087411357856377;  // std dev = 8,216, 270,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=135 */
%   | | | else return 0.30874113578563733;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | else if ( interaction(C, E) )
%   | | then return 0.3087411357856376;  // std dev = 0,500, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | else return 0.30874113578563517;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.3087411357856376;  // std dev = 0,500, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856375;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.30874113578563006;  // std dev = 10,025, 402,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=201 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.25641236875858825;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.25641236875858864;  // std dev = 8,746, 306,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=153 */
%   | | else return 0.2564123687585879;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | else if ( interaction(E, C) )
%   | | then return 0.2564123687585761;  // std dev = 0,500, 870,000 (wgt'ed) examples reached here.  /* #neg=435 #pos=435 */
%   | | else return 0.25641236875858797;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.25641236875858564;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.2564123687585857;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.2564123687585864;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2061374073445411;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.20613740734454158;  // std dev = 8,246, 272,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=136 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.20613740734453856;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.20613740734454034;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | else return 0.20613740734455244;  // std dev = 0,500, 942,000 (wgt'ed) examples reached here.  /* #neg=471 #pos=471 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453898;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.2061374073445394;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.20613740734453953;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414442;  // std dev = 0,500, 580,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=290 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.16162857548414478;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | | else return 0.16162857548414483;  // std dev = 12,410, 616,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=308 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.1616285754841438;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414522;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841461;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.1616285754841462;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.16162857548414675;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082063;  // std dev = 9,670, 374,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=187 */
%   | | | else return 0.12455597792081892;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.12455597792081975;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.12455597792081884;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.1245559779208205;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | | else return 0.1245559779208192;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.1245559779208207;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.12455597792082028;  // std dev = 0,500, 746,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=373 */
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.0949280093673071;  // std dev = 0,500, 454,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=227 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.09492800936730614;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09492800936730579;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09492800936730747;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | | else return 0.09492800936730646;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730775;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(I, A) )
%   | then return 0.0949280093673077;  // std dev = 0,500, 746,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=373 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055929;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.07186088850055775;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | else return 0.07186088850055901;  // std dev = 0,500, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   | else return 0.07186088850055819;  // std dev = 0,500, 256,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=128 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.0718608885005593;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, H) )
%   | | | then return 0.07186088850055951;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | | else return 0.07186088850056084;  // std dev = 10,392, 432,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=216 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.054183073759546736;  // std dev = 0,500, 454,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=227 */
%   | | else return 0.054183073759549075;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.05418307375954878;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.05418307375955223;  // std dev = 13,096, 686,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=343 */
%   | | else return 0.05418307375954705;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.054183073759549616;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.054183073759549324;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.05418307375954949;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233059;  // std dev = 0,500, 580,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=290 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305606;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.0407602532330563;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else return 0.04076025323305667;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.04076025323305465;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, H) )
%   | | | then return 0.04076025323305615;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | | else return 0.04076025323305839;  // std dev = 10,392, 432,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=216 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695064
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 34.474 seconds
Total inference time: 2.481 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 2, Type: transfer, Time: 06:31:00
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.69555, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.395, 'Learning time': 19.308}, 'CLL': -0.695064, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.481, 'Mapping results': {'Total time': 2.1062209606170654, 'Possible mappings': 28, 'Finding best mapping': 0.0026612281799316406, 'Knowledge compiling time': 0.056418418884277344, 'Generating paths time': 2.0140862464904785, 'Generating mappings time': 0.0330502986907959}, 'Learning time': 53.782}


Start learning from scratch in target domain

Target train facts examples: 3169
Target train pos examples: 791
Target train neg examples: 791

Target test facts examples: 9043
Target test pos examples: 2381
Target test neg examples: 2381

WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, D) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.35814893509951345;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.3581489350995134;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.3581489350995085;  // std dev = 8,660, 300,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=150 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.3581489350995111;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.35814893509951334;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.35814893509951123;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.3581489350995077;  // std dev = 0,500, 746,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=373 */
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.3087411357856347;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856348;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.30874113578563506;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.3087411357856347;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(I, A) )
%   | then return 0.30874113578563717;  // std dev = 0,500, 1.374,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=687 */
%   | else if ( proteinclass(A, J) )
%   | | then return 0.3087411357856347;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.25641236875858636;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.25641236875858636;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.25641236875858575;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.25641236875858636;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( phenotype(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585862;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2564123687585862;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.25641236875858603;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   else return 0.2564123687585673;  // std dev = 0,500, 1.434,000 (wgt'ed) examples reached here.  /* #neg=717 #pos=717 */
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then return 0.2061374073445398;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( complex(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.2061374073445397;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.20613740734453964;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.20613740734453953;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20613740734453992;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else if ( interaction(A, G) )
%   | then return 0.20613740734455266;  // std dev = 0,500, 688,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=344 */
%   | else if ( enzyme(A, H) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.20613740734454503;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.20613740734454505;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else return 0.20613740734455188;  // std dev = 0,500, 600,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=300 */
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then return 0.16162857548414675;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.16162857548414644;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16162857548414647;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1616285754841463;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.16162857548414675;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(G, A) )
%   | then return 0.16162857548414455;  // std dev = 0,500, 1.374,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=687 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.16162857548414786;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.16162857548414808;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16162857548414788;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.12455597792082065;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.12455597792082043;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.12455597792082097;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | | else return 0.12455597792082099;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1245559779208209;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.12455597792082078;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(C, G) )
%   | | | then return 0.12455597792082074;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.12455597792082095;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.12455597792082938;  // std dev = 0,500, 746,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=373 */
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.09492800936730646;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.09492800936730643;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.09492800936730661;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( proteinclass(A, F) )
%   | | then return 0.09492800936730644;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.09492800936730639;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09492800936730643;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else if ( interaction(A, H) )
%   | then return 0.09492800936730943;  // std dev = 0,500, 688,000 (wgt'ed) examples reached here.  /* #neg=344 #pos=344 */
%   | else if ( proteinclass(A, I) )
%   | | then return 0.09492800936730816;  // std dev = 0,500, 196,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=98 */
%   | | else return 0.09492800936730537;  // std dev = 0,500, 550,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=275 */
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.07186088850055827;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055827;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07186088850055844;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.07186088850055845;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.07186088850055859;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.07186088850055797;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else if ( interaction(I, A) )
%   | then return 0.07186088850056503;  // std dev = 0,500, 1.374,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=687 */
%   | else if ( proteinclass(A, J) )
%   | | then return 0.07186088850055859;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.07186088850055904;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.054183073759546625;  // std dev = 0,500, 420,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=210 */
%   | else return 0.05418307375954959;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.054183073759549547;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.054183073759547166;  // std dev = 8,631, 298,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=149 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.054183073759548714;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.054183073759549075;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | else if ( enzyme(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.05418307375955051;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.05418307375955017;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else return 0.05418307375954706;  // std dev = 0,500, 476,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=238 */
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.04076025323305666;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04076025323305667;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.04076025323305632;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.040760253233056036;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.04076025323305605;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.040760253233056334;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else if ( interaction(J, A) )
%   | then return 0.040760253233049916;  // std dev = 0,500, 1.374,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=687 */
%   | else return 0.04076025323305646;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 37.398 seconds
Total inference time: 2.324 seconds
AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 2, Type: scratch, Time: 06:31:40
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.324, 'Learning time': 37.398}


Starting fold 3

Target predicate: location 

Mapping Results
   Knowledge compiling time   = 0.054978370666503906
   Generating paths time   = 2.3764870166778564
   Generating mappings time   = 0.033548593521118164
   Possible mappings   = 28
   Finding best mapping   = 0.002583742141723633
   Total time   = 2.4676027297973633


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> location(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: location 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;location(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;location(A, B) :- interaction(A, C).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;location(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(A, C).;true;true
3;;location(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;location(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;location(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;location(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;location(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;location(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;location(A, B) :- interaction(A, C).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995122;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951345;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | else return 0.3581489350995075;  // std dev = 16,093, 1.036,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=518 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509950896;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | | else return 0.35814893509951023;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578563694;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563206;  // std dev = 9,695, 376,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=188 */
%   | | | else return 0.3087411357856378;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856373;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.30874113578563767;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856288;  // std dev = 10,559, 446,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585883;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.256412368758586;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.25641236875858797;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2564123687585817;  // std dev = 13,910, 774,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=387 */
%   | | else return 0.25641236875858886;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858886;  // std dev = 10,000, 400,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=200 */
%   | | else return 0.2564123687585871;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454125;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else return 0.20613740734454084;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454203;  // std dev = 9,381, 352,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=176 */
%   | | | else return 0.206137407344544;  // std dev = 10,271, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.2061374073445419;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734454178;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.20613740734454156;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else return 0.2061374073445401;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414444;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else return 0.16162857548414447;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414503;  // std dev = 9,381, 352,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=176 */
%   | | | else return 0.1616285754841453;  // std dev = 10,271, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.16162857548414716;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414486;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.16162857548414472;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else return 0.16162857548414633;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082042;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.12455597792081892;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.12455597792081909;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792081653;  // std dev = 12,865, 662,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=331 */
%   | | else return 0.12455597792082065;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.1245559779208208;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082249;  // std dev = 10,559, 446,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0949280093673063;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.09492800936730635;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.0949280093673061;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936731072;  // std dev = 12,865, 662,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=331 */
%   | | else return 0.09492800936730778;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730814;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730841;  // std dev = 10,559, 446,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055898;  // std dev = 6,442, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | else return 0.071860888500559;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850056177;  // std dev = 12,865, 662,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=331 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055888;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.07186088850055808;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.07186088850055941;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056045;  // std dev = 10,559, 446,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954811;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.05418307375954878;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.05418307375954862;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375955377;  // std dev = 13,910, 774,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=387 */
%   | | else return 0.0541830737595473;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759547694;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | | else return 0.05418307375954656;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | else return 0.054183073759549144;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305603;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.040760253233058916;  // std dev = 9,695, 376,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=188 */
%   | | | else return 0.040760253233055266;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305625;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.04076025323305629;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.040760253233054704;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305926;  // std dev = 10,559, 446,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695822
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 18.203 seconds
Total inference time: 2.995 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [7.55, 114, 114], 'true,true,true,true': [6.285, 79, 79], 'true,true,false,false': [5.788, 67, 67], 'true,false': [16.093, 518, 518], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [6.557, 86, 86], 'true,true,false,true': [1.414, 4, 4], 'true,true,true,false': [2.449, 12, 12]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [9.0, 162, 162], 'true,false,false,false': [3.24, 21, 21], 'false,true,true,true': [7.246, 105, 105], 'true,false,false,true': [5.431, 59, 59], 'true,false,true,false': [8.456, 143, 143], 'true,false,true,true': [9.695, 188, 188], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [10.559, 223, 223]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(A, C)'}, {'false,true,true': [10.0, 200, 200], 'true,false,true,true': [0.0, 0, 0], 'true,true,true': [6.745, 91, 91], 'true,true,false,false': [5.788, 67, 67], 'true,false,true,false': [13.91, 387, 387], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.414, 4, 4], 'true,false,false': [8.093, 131, 131]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [9.381, 176, 176], 'true,true,false': [6.0, 72, 72], 'false,true,true,true': [7.382, 109, 109], 'true,false,false': [8.093, 131, 131], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [6.745, 91, 91], 'true,false,true,false': [10.271, 211, 211], 'true,true,true': [6.708, 90, 90]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [9.381, 176, 176], 'true,true,false': [5.958, 71, 71], 'false,true,true,true': [7.382, 109, 109], 'true,false,false': [8.093, 131, 131], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [6.745, 91, 91], 'true,false,true,false': [10.271, 211, 211], 'true,true,true': [6.745, 91, 91]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [6.0, 72, 72], 'true,true,true,true': [6.285, 79, 79], 'true,false,false': [6.325, 80, 80], 'false,true,false': [10.559, 223, 223], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [12.865, 331, 331], 'false,true,true,true': [7.246, 105, 105], 'true,true,true,false': [2.345, 11, 11]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [5.958, 71, 71], 'true,true,true,true': [6.285, 79, 79], 'true,false,false': [6.325, 80, 80], 'false,true,false': [10.559, 223, 223], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [12.865, 331, 331], 'false,true,true,true': [7.246, 105, 105], 'true,true,true,false': [2.449, 12, 12]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [3.24, 21, 21], 'true,true,false': [6.285, 79, 79], 'true,false,false,true': [5.431, 59, 59], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [10.559, 223, 223], 'false,false': [0.0, 0, 0], 'true,true,true': [6.442, 83, 83], 'true,false,true': [12.865, 331, 331], 'false,true,true,true': [7.246, 105, 105]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [5.958, 71, 71], 'true,true,true,true': [6.285, 79, 79], 'true,false,false': [8.093, 131, 131], 'false,true,false': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [6.557, 86, 86], 'true,false,true': [13.91, 387, 387], 'false,true,true,true': [7.55, 114, 114], 'true,true,true,false': [2.449, 12, 12]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [9.0, 162, 162], 'true,false,false,false': [3.24, 21, 21], 'false,true,true,true': [7.246, 105, 105], 'true,false,false,true': [5.431, 59, 59], 'true,false,true,false': [8.456, 143, 143], 'true,false,true,true': [9.695, 188, 188], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [10.559, 223, 223]}]]
[{'': [0.2499999999999987, 0.25000000000000344], 'false,true,true': [0.25000000000000333, 0.25000000000000167], 'true,true': [0.25000000000000244, 0.2499999999999995], 'true,true,false': [0.24999999999999986, 0.24999999999999958], 'false,true': [0.25000000000000383, 0.25], 'false': [0.25000000000000344, nan], 'true,true,true': [0.25000000000000033, 0.24999999999999956], 'true': [0.25000000000000433, 0.24999999999999176]}, {'': [0.2500000000000074, 0.25000000000000977], 'false,true,true': [0.2500000000000022, nan], 'true,false,true': [0.25000000000000394, 0.25000000000000067], 'true,false': [0.25000000000000944, 0.24999999999999845], 'false,true': [0.2500000000000022, 0.25000000000000727], 'false': [0.25000000000000977, nan], 'true,false,false': [0.24999999999999853, 0.2500000000000004], 'true': [0.2500000000000006, 0.25000000000000994]}, {'': [0.24999999999999883, 0.25000000000000244], 'true,true': [0.24999999999999997, 0.25000000000000006], 'true,true,false': [0.24999999999999994, 0.2500000000000001], 'true,false,true': [nan, 0.2500000000000101], 'true,false': [0.2500000000000101, 0.24999999999999675], 'false,true': [0.24999999999999628, 0.24999999999999978], 'false': [0.25000000000000244, nan], 'true': [0.24999999999999623, 0.250000000000001]}, {'': [0.25000000000000083, 0.25000000000000233], 'false,true,true': [0.24999999999999994, 0.24999999999999978], 'true,true': [0.2499999999999995, 0.24999999999999967], 'true,false,true': [0.25000000000000105, 0.25000000000000133], 'true,false': [0.24999999999999212, 0.24999999999999994], 'false,true': [0.2500000000000017, 0.2499999999999996], 'false': [0.25000000000000233, nan], 'true': [0.2499999999999993, 0.2500000000000032]}, {'': [0.2499999999999962, 0.24999999999999986], 'false,true,true': [0.25000000000000083, 0.2500000000000003], 'true,true': [0.25, 0.24999999999999964], 'true,false,true': [0.25000000000000067, 0.250000000000002], 'true,false': [0.2500000000000003, 0.2500000000000003], 'false,true': [0.2500000000000001, 0.24999999999999986], 'false': [0.24999999999999986, nan], 'true': [0.2499999999999997, 0.24999999999999375]}, {'': [0.25000000000000394, 0.24999999999999437], 'true,true': [0.2500000000000008, 0.25000000000000044], 'false,true,true': [0.24999999999999842, nan], 'true,false': [0.2499999999999967, 0.24999999999999956], 'false,true': [0.24999999999999842, 0.25000000000000283], 'false': [0.24999999999999437, nan], 'true,true,true': [0.2500000000000006, 0.24999999999999997], 'true': [0.2500000000000007, 0.24999999999999567]}, {'': [0.25000000000000294, 0.249999999999998], 'true,true': [0.25000000000000094, 0.2500000000000001], 'false,true,true': [0.24999999999999847, nan], 'true,false': [0.24999999999999717, 0.2499999999999995], 'false,true': [0.24999999999999847, 0.24999999999999853], 'false': [0.249999999999998, nan], 'true,true,true': [0.25000000000000044, 0.24999999999999992], 'true': [0.24999999999999806, 0.24999999999999722]}, {'': [0.24999999999999986, 0.25000000000000216], 'true,true': [0.2500000000000001, 0.25000000000000056], 'false,true,true': [0.24999999999999833, nan], 'true,false': [0.25000000000000216, 0.2500000000000001], 'false,true': [0.24999999999999833, 0.25000000000000205], 'false': [0.25000000000000216, nan], 'true,false,false': [0.24999999999999986, 0.25000000000000033], 'true': [0.25000000000000094, 0.25000000000000183]}, {'': [0.2500000000000063, 0.2499999999999977], 'true,true': [0.2500000000000011, 0.24999999999999986], 'false,true,true': [0.25000000000000144, 0.2500000000000007], 'true,false': [0.25000000000000483, 0.2500000000000013], 'false,true': [0.2499999999999979, 0.2500000000000001], 'false': [0.2499999999999977, nan], 'true,true,true': [0.25000000000000105, 0.2500000000000001], 'true': [0.2499999999999987, 0.25000000000000583]}, {'': [0.24999999999999709, 0.24999999999999875], 'false,true,true': [0.2500000000000002, nan], 'true,false,true': [0.25000000000000017, 0.24999999999999994], 'true,false': [0.24999999999999906, 0.2500000000000001], 'false,true': [0.2500000000000002, 0.2500000000000003], 'false': [0.24999999999999875, nan], 'true,false,false': [0.24999999999999997, 0.25], 'true': [0.2500000000000003, 0.24999999999999817]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;location(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;location(A, B) :- interaction(A, C).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;location(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(A, C).;true;true', '3;;location(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;location(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;location(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;location(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;location(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;location(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;location(A, B) :- interaction(A, C).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995122;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.35814893509951345;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else return 0.3581489350995075;  // std dev = 0,500, 1.036,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=518 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.35814893509950896;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | | else return 0.35814893509951023;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578563694;  // std dev = 0,500, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563206;  // std dev = 9,695, 376,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=188 */
%   | | | else return 0.3087411357856378;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else return 0.30874113578563744;  // std dev = 0,500, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.30874113578563767;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.30874113578563733;  // std dev = 5,701, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | | else return 0.3087411357856379;  // std dev = 8,888, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.25641236875858864;  // std dev = 0,500, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25641236875858164;  // std dev = 13,910, 774,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=387 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.25641236875858747;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | | | else return 0.25641236875858836;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then return 0.25641236875858886;  // std dev = 0,500, 400,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=200 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.2564123687585857;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.2564123687585857;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.20613740734454164;  // std dev = 0,500, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else if ( interaction(D, C) )
%   | | then return 0.2061374073445363;  // std dev = 0,500, 774,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=387 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.20613740734454025;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | | | else return 0.20613740734454136;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734454178;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.20613740734454156;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2061374073445394;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453892;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414442;  // std dev = 0,500, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.16162857548414436;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.1616285754841444;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else return 0.16162857548414472;  // std dev = 0,500, 1.036,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=518 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414486;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.16162857548414472;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.16162857548414644;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1616285754841461;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.1245559779208191;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.12455597792081884;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.12455597792081873;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.12455597792081831;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | else return 0.1245559779208194;  // std dev = 0,500, 822,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=411 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.12455597792082128;  // std dev = 0,500, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.12455597792082153;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | | else return 0.12455597792082078;  // std dev = 8,573, 294,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=147 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0949280093673063;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.09492800936730635;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.09492800936730572;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09492800936730558;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09492800936730852;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   | | | else return 0.09492800936730802;  // std dev = 10,000, 400,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=200 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730869;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.09492800936730648;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else return 0.094928009367311;  // std dev = 0,500, 656,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=328 */
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055898;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | else return 0.07186088850055894;  // std dev = 0,500, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.07186088850056122;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   | | | else return 0.07186088850055693;  // std dev = 10,000, 400,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=200 */
%   | | else return 0.07186088850056048;  // std dev = 0,500, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.07186088850055945;  // std dev = 0,500, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.0718608885005589;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | | else return 0.07186088850055943;  // std dev = 8,573, 294,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=147 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954815;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.05418307375954875;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.05418307375954872;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05418307375954914;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375955145;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.05418307375954948;  // std dev = 11,045, 488,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=244 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05418307375954968;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | | | else return 0.05418307375954673;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   else return 0.0541830737595478;  // std dev = 0,500, 442,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=221 */
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( complex(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.04076025323305625;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.04076025323305572;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else return 0.04076025323305545;  // std dev = 0,500, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | else return 0.040760253233059277;  // std dev = 0,500, 822,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=411 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.04076025323305844;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.040760253233057236;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | | else return 0.04076025323305722;  // std dev = 8,573, 294,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=147 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695476
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 21.387 seconds
Total inference time: 2.521 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 3, Type: transfer, Time: 06:32:28
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695822, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.995, 'Learning time': 18.203}, 'CLL': -0.695476, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.521, 'Mapping results': {'Total time': 2.4676027297973633, 'Possible mappings': 28, 'Finding best mapping': 0.002583742141723633, 'Knowledge compiling time': 0.054978370666503906, 'Generating paths time': 2.3764870166778564, 'Generating mappings time': 0.033548593521118164}, 'Learning time': 39.59}


Start learning from scratch in target domain

Target train facts examples: 2612
Target train pos examples: 901
Target train neg examples: 901

Target test facts examples: 9600
Target test pos examples: 2271
Target test neg examples: 2271

WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( proteinclass(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else if ( complex(A, H) )
%   | then return 0.3581489350995077;  // std dev = 0,500, 776,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=388 */
%   | else if ( proteinclass(A, I) )
%   | | then return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | else return 0.3581489350995077;  // std dev = 0,500, 778,000 (wgt'ed) examples reached here.  /* #neg=389 #pos=389 */
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( enzyme(A, C) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( enzyme(E, C) )
%   | | | then return 0.3087411357856357;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.30874113578563506;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.30874113578563583;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.30874113578563517;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.30874113578563517;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.3087411357856356;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.3087411357856351;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.30874113578563506;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else return 0.3087411357856464;  // std dev = 0,500, 1.474,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=737 */
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(D, C) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.2564123687585865;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.25641236875858725;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( enzyme(D, F) )
%   | | | then return 0.2564123687585873;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.25641236875858875;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( proteinclass(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.256412368758587;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585873;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.25641236875858725;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.25641236875858675;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else return 0.25641236875856693;  // std dev = 0,500, 1.474,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=737 */
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( complex(A, C) )
%   then if ( enzyme(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( enzyme(E, D) )
%   | | | then return 0.206137407344541;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.20613740734453917;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.20613740734454045;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else return 0.20613740734455094;  // std dev = 0,500, 634,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=317 */
%   else if ( enzyme(A, F) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.20613740734453959;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.20613740734453986;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.20613740734454053;  // std dev = 5,148, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | else return 0.20613740734455;  // std dev = 0,500, 840,000 (wgt'ed) examples reached here.  /* #neg=420 #pos=420 */
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.16162857548414641;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.161628575484146;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.161628575484146;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.16162857548414605;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.16162857548414605;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else if ( complex(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.1616285754841445;  // std dev = 0,500, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | | else return 0.1616285754841458;  // std dev = 0,500, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else return 0.16162857548414442;  // std dev = 0,500, 926,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=463 */
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( complex(A, C) )
%   then return 0.12455597792081353;  // std dev = 0,500, 822,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=411 */
%   else if ( proteinclass(A, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.12455597792081914;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.1245559779208191;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1245559779208194;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12455597792081918;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081918;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12455597792082074;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.12455597792081322;  // std dev = 13,038, 680,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=340 */
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( complex(A, C) )
%   then return 0.0949280093673156;  // std dev = 0,500, 822,000 (wgt'ed) examples reached here.  /* #neg=411 #pos=411 */
%   else if ( phenotype(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730648;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.09492800936730676;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730843;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else if ( proteinclass(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.0949280093673069;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.09492800936730644;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.09492800936730648;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.09492800936731222;  // std dev = 12,430, 618,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=309 */
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.07186088850055829;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.07186088850055737;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055737;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.07186088850055816;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( enzyme(A, F) )
%   | then if ( proteinclass(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.07186088850055916;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.07186088850055881;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07186088850055929;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | | else return 0.07186088850055869;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | else return 0.0718608885005651;  // std dev = 0,500, 1.386,000 (wgt'ed) examples reached here.  /* #neg=693 #pos=693 */
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( complex(A, D) )
%   | | then return 0.05418307375954834;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.054183073759548304;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.054183073759548325;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954967;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, G) )
%   | | then return 0.05418307375954776;  // std dev = 0,500, 292,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=146 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.05418307375954831;  // std dev = 6,442, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | | else return 0.05418307375955323;  // std dev = 14,160, 802,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=401 */
%   | else return 0.05418307375954657;  // std dev = 0,500, 442,000 (wgt'ed) examples reached here.  /* #neg=221 #pos=221 */
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( enzyme(A, C) )
%   then if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.04076025323305602;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.040760253233056314;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.04076025323305632;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.040760253233054794;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.040760253233055994;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.04076025323305717;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.040760253233056355;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04076025323305576;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else return 0.04076025323304848;  // std dev = 0,500, 1.474,000 (wgt'ed) examples reached here.  /* #neg=737 #pos=737 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 26.218 seconds
Total inference time: 2.188 seconds
AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 3, Type: scratch, Time: 06:32:57
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.188, 'Learning time': 26.218}


Starting fold 4

Target predicate: location 

Mapping Results
   Knowledge compiling time   = 0.09060096740722656
   Generating paths time   = 2.3862690925598145
   Generating mappings time   = 0.03363299369812012
   Possible mappings   = 28
   Finding best mapping   = 0.002591848373413086
   Total time   = 2.5130999088287354


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> location(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: location 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;location(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;location(A, B) :- interaction(A, C).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;location(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(A, C).;true;true
3;;location(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;location(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;location(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;location(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;location(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;location(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;location(A, B) :- interaction(A, C).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995091;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | | else return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995133;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | else return 0.35814893509950757;  // std dev = 14,731, 868,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=434 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3581489350995131;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | | else return 0.3581489350995111;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856334;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563744;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.3087411357856376;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.30874113578563506;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3087411357856347;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856374;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.3087411357856358;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.30874113578562873;  // std dev = 10,630, 452,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585888;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585867;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2564123687585876;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.25641236875858686;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.25641236875858897;  // std dev = 12,748, 650,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=325 */
%   | | else return 0.25641236875858886;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858814;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | else return 0.256412368758587;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454156;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.20613740734454045;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445414;  // std dev = 6,633, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | | | else return 0.20613740734453592;  // std dev = 11,000, 484,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=242 */
%   | | else return 0.20613740734454183;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453997;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.20613740734453861;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.20613740734454025;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841447;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.16162857548414633;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414522;  // std dev = 6,633, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | | | else return 0.16162857548414522;  // std dev = 11,000, 484,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=242 */
%   | | else return 0.16162857548414808;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414458;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.161628575484146;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.1616285754841463;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082067;  // std dev = 7,416, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | | | else return 0.12455597792081971;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.12455597792082038;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082054;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.12455597792082047;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082047;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.12455597792082007;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.12455597792082272;  // std dev = 10,630, 452,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0949280093673081;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | | else return 0.09492800936730643;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.09492800936730761;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730793;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.09492800936730746;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730769;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.09492800936730705;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.09492800936730864;  // std dev = 10,630, 452,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.0718608885005592;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | else return 0.07186088850055884;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055687;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055912;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.07186088850055809;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.07186088850055883;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.0718608885005587;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.0718608885005614;  // std dev = 10,630, 452,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759547895;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | | else return 0.054183073759549005;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.054183073759548846;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375955217;  // std dev = 12,845, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   | | else return 0.054183073759547715;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759548867;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | | else return 0.0541830737595493;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else return 0.05418307375954955;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233058014;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305545;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.04076025323305639;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305634;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.0407602532330563;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.040760253233055294;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.04076025323305556;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.04076025323305873;  // std dev = 10,630, 452,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.601 seconds
Total inference time: 2.746 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [4.899, 48, 48], 'true,true,true,true': [7.176, 103, 103], 'true,true,false,false': [5.292, 56, 56], 'true,false': [14.731, 434, 434], 'false,true,false': [3.317, 22, 22], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.0, 32, 32], 'true,true,false,true': [1.732, 6, 6], 'true,true,true,false': [2.739, 15, 15]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [9.487, 180, 180], 'true,false,false,false': [3.317, 22, 22], 'false,true,true,true': [5.831, 68, 68], 'true,false,false,true': [4.243, 36, 36], 'true,false,true,false': [6.708, 90, 90], 'true,false,true,true': [6.708, 90, 90], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'false,true,false': [10.63, 226, 226]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(A, C)'}, {'false,true,true': [6.325, 80, 80], 'true,false,true,true': [1.581, 5, 5], 'true,true,true': [7.681, 118, 118], 'true,true,false,false': [5.292, 56, 56], 'true,false,true,false': [12.748, 325, 325], 'false,true,false': [3.317, 22, 22], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.732, 6, 6], 'true,false,false': [7.211, 104, 104]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [6.633, 88, 88], 'true,true,false': [5.568, 62, 62], 'false,true,true,true': [5.431, 59, 59], 'true,false,false': [7.211, 104, 104], 'false,true,false': [3.317, 22, 22], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.24, 21, 21], 'true,false,true,false': [11.0, 242, 242], 'true,true,true': [7.681, 118, 118]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [6.633, 88, 88], 'true,true,false': [5.568, 62, 62], 'false,true,true,true': [5.431, 59, 59], 'true,false,false': [7.211, 104, 104], 'false,true,false': [3.317, 22, 22], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.24, 21, 21], 'true,false,true,false': [11.0, 242, 242], 'true,true,true': [7.681, 118, 118]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [5.568, 62, 62], 'true,true,true,true': [7.416, 110, 110], 'true,false,false': [5.385, 58, 58], 'false,true,false': [10.63, 226, 226], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'true,false,true': [9.487, 180, 180], 'false,true,true,true': [5.831, 68, 68], 'true,true,true,false': [2.0, 8, 8]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [5.568, 62, 62], 'true,true,true,true': [7.176, 103, 103], 'true,false,false': [5.385, 58, 58], 'false,true,false': [10.63, 226, 226], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'true,false,true': [9.487, 180, 180], 'false,true,true,true': [5.831, 68, 68], 'true,true,true,false': [2.739, 15, 15]}], ['location(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [3.317, 22, 22], 'true,true,false': [5.745, 66, 66], 'true,false,false,true': [4.243, 36, 36], 'false,true,true,false': [1.414, 4, 4], 'false,true,false': [10.63, 226, 226], 'false,false': [0.0, 0, 0], 'true,true,true': [7.55, 114, 114], 'true,false,true': [9.487, 180, 180], 'false,true,true,true': [5.831, 68, 68]}], ['location(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [5.568, 62, 62], 'true,true,true,true': [7.176, 103, 103], 'true,false,false': [7.211, 104, 104], 'false,true,false': [3.317, 22, 22], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.0, 32, 32], 'true,false,true': [12.845, 330, 330], 'false,true,true,true': [4.899, 48, 48], 'true,true,true,false': [2.739, 15, 15]}], ['location(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [9.487, 180, 180], 'true,false,false,false': [3.317, 22, 22], 'false,true,true,true': [5.831, 68, 68], 'true,false,false,true': [4.243, 36, 36], 'true,false,true,false': [6.708, 90, 90], 'true,false,true,true': [6.708, 90, 90], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'false,true,false': [10.63, 226, 226]}]]
[{'': [0.24999999999999298, 0.25000000000000283], 'false,true,true': [0.25000000000000017, 0.25000000000000155], 'true,true': [0.2500000000000034, 0.24999999999999972], 'true,true,false': [0.25, 0.24999999999999986], 'false,true': [0.25000000000000056, 0.2500000000000011], 'false': [0.25000000000000283, nan], 'true,true,true': [0.2500000000000029, 0.24999999999999953], 'true': [0.25000000000000433, 0.24999999999999023]}, {'': [0.25000000000000977, 0.25000000000000927], 'false,true,true': [0.24999999999999864, 0.25000000000000006], 'true,false,true': [0.24999999999999795, 0.2499999999999981], 'true,false': [0.25000000000000333, 0.249999999999998], 'false,true': [0.24999999999999867, 0.2500000000000074], 'false': [0.25000000000000927, nan], 'true,false,false': [0.2499999999999996, 0.2500000000000004], 'true': [0.2500000000000028, 0.2500000000000074]}, {'': [0.2500000000000003, 0.24999999999999972], 'true,true': [0.2499999999999964, 0.25000000000000017], 'true,true,false': [0.24999999999999992, 0.25000000000000044], 'false': [0.24999999999999972, nan], 'false,true': [0.25, 0.24999999999999983], 'true': [0.24999999999999625, 0.2500000000000034], 'true,false': [0.25000000000000566, 0.2499999999999993], 'true,false,true': [0.24999999999999992, 0.2500000000000056]}, {'': [0.2500000000000019, 0.24999999999999944], 'true,true': [0.24999999999999953, 0.25000000000000017], 'false,true,true': [0.24999999999999994, 0.2500000000000005], 'true,false,true': [0.24999999999999972, 0.24999999999999906], 'true,false': [0.2499999999999971, 0.24999999999999997], 'false,true': [0.24999999999999956, 0.24999999999999967], 'false': [0.24999999999999944, nan], 'true': [0.25000000000000044, 0.2499999999999932]}, {'': [0.2499999999999995, 0.2500000000000002], 'false,true,true': [0.24999999999999964, 0.24999999999999983], 'true,true': [0.2500000000000009, 0.24999999999999947], 'true,false,true': [0.25, 0.2500000000000018], 'true,false': [0.2500000000000008, 0.24999999999999983], 'false,true': [0.24999999999999983, 0.2499999999999999], 'false': [0.2500000000000002, nan], 'true': [0.25000000000000033, 0.2499999999999998]}, {'': [0.24999999999999628, 0.2499999999999974], 'false,true,true': [0.25000000000000017, 0.25], 'true,true': [0.24999999999999847, 0.2499999999999996], 'true,false': [0.2500000000000013, 0.2500000000000003], 'false,true': [0.25000000000000044, 0.250000000000003], 'false': [0.2499999999999974, nan], 'true,true,true': [0.24999999999999842, 0.25], 'true': [0.25000000000000133, 0.25000000000000283]}, {'': [0.24999999999999858, 0.24999999999999808], 'false,true,true': [0.24999999999999983, 0.24999999999999997], 'true,true': [0.25000000000000144, 0.24999999999999914], 'true,false': [0.24999999999999736, 0.24999999999999992], 'false,true': [0.2500000000000001, 0.24999999999999872], 'false': [0.24999999999999808, nan], 'true,true,true': [0.25000000000000167, 0.2500000000000001], 'true': [0.24999999999999747, 0.24999999999999753]}, {'': [0.25000000000000155, 0.2500000000000022], 'true,true': [0.2500000000000014, 0.24999999999999972], 'false,true,true': [0.24999999999999983, 0.25], 'true,false': [0.25000000000000133, 0.24999999999999975], 'false,true': [0.25000000000000017, 0.2500000000000023], 'false': [0.2500000000000022, nan], 'true,false,false': [0.25000000000000006, 0.24999999999999975], 'true': [0.2500000000000013, 0.2500000000000018]}, {'': [0.250000000000006, 0.25000000000000117], 'false,true,true': [0.25000000000000083, 0.25000000000000017], 'true,true': [0.2500000000000015, 0.24999999999999922], 'true,false': [0.2500000000000026, 0.2500000000000013], 'false,true': [0.2500000000000008, 0.2500000000000001], 'false': [0.25000000000000117, nan], 'true,true,true': [0.2500000000000012, 0.2500000000000001], 'true': [0.24999999999999897, 0.25000000000000516]}, {'': [0.24999999999999822, 0.2499999999999994], 'false,true,true': [0.24999999999999942, 0.24999999999999994], 'true,false,true': [0.25000000000000006, 0.2500000000000002], 'true,false': [0.2500000000000002, 0.2500000000000001], 'false,true': [0.24999999999999942, 0.2500000000000002], 'false': [0.2499999999999994, nan], 'true,false,false': [0.2500000000000002, 0.24999999999999997], 'true': [0.2500000000000002, 0.2499999999999999]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;location(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;location(A, B) :- interaction(A, C).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;location(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(A, C).;true;true', '3;;location(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;location(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;location(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;location(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;location(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;location(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;location(A, B) :- interaction(A, C).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995091;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | | else return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.3581489350995134;  // std dev = 0,500, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else return 0.35814893509950757;  // std dev = 0,500, 868,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=434 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3581489350995131;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | | else return 0.3581489350995111;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.30874113578563733;  // std dev = 0,500, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | | else return 0.3087411357856375;  // std dev = 0,500, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.30874113578563744;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.3087411357856376;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else return 0.30874113578563717;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.30874113578563744;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856375;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.30874113578563783;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.2564123687585887;  // std dev = 0,500, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.25641236875858686;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.25641236875858886;  // std dev = 12,748, 650,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=325 */
%   | | else return 0.25641236875858847;  // std dev = 0,500, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.2564123687585856;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.2564123687585873;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2564123687585862;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.25641236875858586;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454145;  // std dev = 0,500, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.20613740734453856;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | | else return 0.20613740734453856;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0.20613740734453867;  // std dev = 0,500, 868,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=434 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453997;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.2061374073445388;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.20613740734453945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2061374073445389;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.16162857548414486;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.16162857548414453;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0.1616285754841445;  // std dev = 0,500, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else return 0.16162857548414442;  // std dev = 0,500, 868,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=434 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414516;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.16162857548414608;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.1616285754841464;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1616285754841461;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.12455597792082058;  // std dev = 0,500, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1245559779208207;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.12455597792082047;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | else return 0.12455597792082054;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082068;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.12455597792082052;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1245559779208207;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.12455597792082068;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.09492800936730797;  // std dev = 0,500, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | else if ( interaction(C, D) )
%   | | then return 0.09492800936730801;  // std dev = 0,500, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.09492800936730798;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.09492800936730639;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730805;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.09492800936730728;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.09492800936730798;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.09492800936730812;  // std dev = 9,247, 342,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=171 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055893;  // std dev = 0,500, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | else return 0.07186088850055783;  // std dev = 0,500, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.07186088850055931;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.07186088850055825;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | else return 0.07186088850055909;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.07186088850055933;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07186088850055927;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.07186088850055672;  // std dev = 9,055, 328,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=164 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.05418307375954684;  // std dev = 0,500, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.054183073759548145;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.054183073759547645;  // std dev = 10,724, 460,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=230 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.05418307375954967;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.054183073759549984;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.05418307375954886;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | | else return 0.05418307375954884;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else return 0.054183073759549165;  // std dev = 0,500, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( complex(A, D) )
%   | | then return 0.04076025323305581;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.0407602532330564;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.040760253233056334;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0.04076025323305818;  // std dev = 0,500, 476,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=238 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.04076025323305695;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.04076025323305689;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.04076025323305662;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.04076025323305896;  // std dev = 9,695, 376,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=188 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.931 seconds
Total inference time: 2.637 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 4, Type: transfer, Time: 06:33:39
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.746, 'Learning time': 16.601}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.637, 'Mapping results': {'Total time': 2.5130999088287354, 'Possible mappings': 28, 'Finding best mapping': 0.002591848373413086, 'Knowledge compiling time': 0.09060096740722656, 'Generating paths time': 2.3862690925598145, 'Generating mappings time': 0.03363299369812012}, 'Learning time': 33.532}


Start learning from scratch in target domain

Target train facts examples: 2591
Target train pos examples: 716
Target train neg examples: 716

Target test facts examples: 9621
Target test pos examples: 2456
Target test neg examples: 2456

WILL Produced-Tree #1
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.3581489350995112;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(I, A) )
%   | then return 0.3581489350995075;  // std dev = 0,500, 1.062,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=531 */
%   | else return 0.3581489350995092;  // std dev = 0,500, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
WILL Produced-Tree #2
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3087411357856374;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | else return 0.30874113578563755;  // std dev = 0,500, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   | else if ( interaction(A, C) )
%   | | then return 0.3087411357856374;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.3087411357856279;  // std dev = 11,726, 550,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=275 */
%   | | | else return 0.30874113578563767;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else if ( enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.30874113578563556;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.30874113578563556;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563545;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0.3087411357856374;  // std dev = 0,500, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
WILL Produced-Tree #3
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.256412368758586;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.25641236875858586;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.25641236875858564;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.25641236875858564;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.2564123687585857;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( enzyme(A, G) )
%   | then return 0.25641236875858886;  // std dev = 0,500, 282,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=141 */
%   | else if ( complex(A, H) )
%   | | then return 0.2564123687585888;  // std dev = 0,500, 328,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=164 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2564123687585888;  // std dev = 8,944, 320,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=160 */
%   | | | else return 0.2564123687585889;  // std dev = 9,165, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
WILL Produced-Tree #4
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.20613740734453892;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( complex(A, D) )
%   | | then return 0.20613740734453914;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.2061374073445388;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.20613740734453984;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else if ( complex(A, F) )
%   | then if ( interaction(A, G) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.20613740734454095;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | | else return 0.20613740734454136;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.20613740734454133;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.20613740734454122;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | else return 0.20613740734453787;  // std dev = 0,500, 848,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=424 */
WILL Produced-Tree #5
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.16162857548414636;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16162857548414644;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.16162857548414614;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.16162857548414683;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   else if ( interaction(G, A) )
%   | then return 0.16162857548414458;  // std dev = 0,500, 1.062,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=531 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.16162857548414628;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.16162857548414686;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.1616285754841467;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
WILL Produced-Tree #6
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.12455597792081942;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.1245559779208194;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792081957;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0.12455597792082039;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   else if ( proteinclass(A, F) )
%   | then if ( interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.12455597792082053;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.12455597792082106;  // std dev = 7,280, 212,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12455597792081995;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.12455597792081909;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0.12455597792081669;  // std dev = 0,500, 972,000 (wgt'ed) examples reached here.  /* #neg=486 #pos=486 */
WILL Produced-Tree #7
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.09492800936730639;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730643;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.09492800936730654;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.09492800936730643;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.09492800936730639;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09492800936730651;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( enzyme(A, I) )
%   | then return 0.09492800936730837;  // std dev = 0,500, 282,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=141 */
%   | else return 0.09492800936731313;  // std dev = 0,500, 984,000 (wgt'ed) examples reached here.  /* #neg=492 #pos=492 */
WILL Produced-Tree #8
% FOR location(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.07186088850055848;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055845;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.0718608885005585;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.07186088850055845;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.07186088850055873;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, G) )
%   | | then return 0.07186088850055913;  // std dev = 0,500, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   | | else return 0.07186088850056396;  // std dev = 0,500, 898,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=449 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.07186088850055763;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else return 0.07186088850055851;  // std dev = 0,500, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
WILL Produced-Tree #9
% FOR location(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.054183073759549505;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0.05418307375954676;  // std dev = 0,500, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   else if ( interaction(A, A) )
%   | then if ( phenotype(A, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.05418307375954921;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054183073759548984;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.05418307375954885;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.05418307375954942;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | else if ( interaction(A, G) )
%   | | then return 0.05418307375954743;  // std dev = 0,500, 396,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=198 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.054183073759548436;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.054183073759548735;  // std dev = 9,747, 380,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=190 */
WILL Produced-Tree #10
% FOR location(A, B):
%   if ( interaction(C, A) )
%   then return 0.040760253233052504;  // std dev = 0,500, 1.228,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=614 */
%   else if ( enzyme(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.04076025323305688;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.040760253233057625;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.04076025323305706;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.040760253233057396;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.04076025323305503;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.04076025323305612;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.040760253233054954;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04076025323305621;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.171 seconds
Total inference time: 2.395 seconds
AUC ROC: 0.5


Dataset: 24_twitter_yeast, Fold: 4, Type: scratch, Time: 06:34:02
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.395, 'Learning time': 20.171}


