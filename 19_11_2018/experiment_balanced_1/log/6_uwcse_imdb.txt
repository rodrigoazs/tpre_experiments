Starting experiment #1 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 140

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( advisedby(A, F), publication(E, F) )
%   | then return 0.2719420385477882;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( tempadvisedby(A, G), publication(E, G) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( advisedby(A, H), publication(I, H) )
%   | then if ( advisedby(J, H), publication(I, J) )
%   | | then if ( ta(K, J, L), ta(M, A, N) )
%   | | | then return 0.4735335504841277;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36389606153629317;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.5052077586289241;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, P), projectmember(Q, P) )
%   | | then return 0.24276431971489695;  // std dev = 0,487, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( advisedby(A, R) )
%   | | | then return 0.4581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3470378239884017;  // std dev = 4,742, 90,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( publication(C, A), ta(D, A, E) )
%   then if ( advisedby(A, F) )
%   | then return 0.2431522573300012;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(D, G, E), advisedby(G, H) )
%   | | then return 0.47540780245230163;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24779728811959792;  // std dev = 0,493, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( advisedby(A, I), publication(J, I) )
%   | then if ( advisedby(K, I), publication(J, K) )
%   | | then if ( ta(L, A, M), ta(N, K, P) )
%   | | | then return 0.40564015880039006;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3135977252686114;  // std dev = 4,663, 87,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | | else return 0.43201604470553195;  // std dev = 0,478, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( tempadvisedby(A, Q) )
%   | | then if ( tempadvisedby(R, Q), publication(S, R) )
%   | | | then return 0.2390253257491676;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3636453865394401;  // std dev = 3,408, 47,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return 0.2554524423348888;  // std dev = 0,495, 45,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( publication(E, A), advisedby(A, F) )
%   | then return 0.20416130465148977;  // std dev = 0,494, 40,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( ta(C, G, D), advisedby(G, H) )
%   | | then return 0.2892651658722928;  // std dev = 0,494, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | else if ( ta(C, I, J), advisedby(I, K) )
%   | | | then return 0.1901562241304402;  // std dev = 3,012, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.26120273584774223;  // std dev = 1,859, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( advisedby(A, L), projectmember(M, L) )
%   | then return 0.20878533243596462;  // std dev = 0,488, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( publication(N, A), advisedby(A, P) )
%   | | then if ( tempadvisedby(Q, P) )
%   | | | then return 0.25445329729058314;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.39730835744672083;  // std dev = 1,962, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( publication(R, A), tempadvisedby(A, S) )
%   | | | then return 0.19956621655278314;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.27767680306028253;  // std dev = 4,285, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( ta(C, A, D) )
%   then if ( ta(C, E, D), advisedby(E, F) )
%   | then return 0.19998119619858606;  // std dev = 0,495, 85,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | else if ( ta(C, G, H), advisedby(G, I) )
%   | | then return 0.15358780129136368;  // std dev = 0,495, 37,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( tempadvisedby(A, J), publication(K, J) )
%   | | | then return 0.26958280394320216;  // std dev = 1,468, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10463494196059404;  // std dev = 1,100, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( publication(L, A), advisedby(A, M) )
%   | then return 0.2434912735852353;  // std dev = 0,495, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( tempadvisedby(A, N) )
%   | | then if ( tempadvisedby(P, N), publication(Q, P) )
%   | | | then return 0.16263841221144804;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.31745886531821904;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(A, R), publication(S, R) )
%   | | | then return 0.22806485179913513;  // std dev = 2,856, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.14537671217494097;  // std dev = 2,502, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( ta(C, A, D), advisedby(A, E) )
%   then if ( advisedby(F, E), publication(G, F) )
%   | then if ( publication(G, E), ta(H, F, I) )
%   | | then return 0.16447675339895795;  // std dev = 0,494, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | else return 0.0801305910980184;  // std dev = 0,493, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0.27654259597250147;  // std dev = 1,141, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( publication(J, A), advisedby(A, K) )
%   | then if ( tempadvisedby(L, K) )
%   | | then if ( publication(J, L) )
%   | | | then return -0.015411355997273538;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17237147143936182;  // std dev = 2,871, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return 0.26000026761338907;  // std dev = 0,475, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( advisedby(A, M), projectmember(N, M) )
%   | | then return 0.10906291826101606;  // std dev = 0,477, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tempadvisedby(A, P), publication(Q, A) )
%   | | | then return 0.1164000376682587;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.17052928283186497;  // std dev = 5,546, 125,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=64 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.21609494069732285;  // std dev = 1,062, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( advisedby(A, E), projectmember(F, E) )
%   | then if ( advisedby(A, G), publication(H, G) )
%   | | then return 0.5913885793844232;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.16309899527111116;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0314948185492882;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( ta(J, A, K), advisedby(A, L) )
%   | | then if ( publication(M, L), tempadvisedby(N, L) )
%   | | | then return 0.10887245333386907;  // std dev = 3,664, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.06484400293121012;  // std dev = 2,345, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( advisedby(A, P) )
%   | | | then return 0.14047861587556434;  // std dev = 4,592, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | else return 0.11995525358501873;  // std dev = 4,827, 95,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return 0.03517907631306224;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.04916637470488148;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12871437875137634;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( advisedby(H, C), publication(I, H) )
%   | | then return 0.16256287151651058;  // std dev = 0,488, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( publication(J, C), ta(K, A, L) )
%   | | | then return 0.15548957186535106;  // std dev = 1,282, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.019663425275780355;  // std dev = 1,490, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( advisedby(A, M) )
%   | then return 0.09418732564570903;  // std dev = 0,492, 180,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=91 */
%   | else if ( publication(N, A) )
%   | | then return 0.15299323963164527;  // std dev = 0,493, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.01786646206091422;  // std dev = 0,488, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C), projectmember(D, C) )
%   then return 0.14525503165713743;  // std dev = 1,037, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( advisedby(A, E), projectmember(F, E) )
%   | then if ( advisedby(A, G), publication(H, G) )
%   | | then return 0.42434092870261614;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.10344707793639431;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.004369701178866802;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( advisedby(A, J), ta(K, A, L) )
%   | | then if ( publication(M, J), tempadvisedby(N, J) )
%   | | | then return 0.06118828516527721;  // std dev = 3,663, 55,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return 0.027361848908750014;  // std dev = 2,344, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( advisedby(A, P) )
%   | | | then return 0.08312390818928736;  // std dev = 4,591, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | else return 0.06849538749727306;  // std dev = 4,811, 95,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( advisedby(A, C), projectmember(D, C) )
%   then return 0.08279651204821502;  // std dev = 0,450, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( advisedby(A, E), ta(F, A, G) )
%   | then if ( publication(H, A) )
%   | | then if ( tempadvisedby(I, E), ta(J, I, G) )
%   | | | then return 0.11112376897714138;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.009317893427235567;  // std dev = 2,799, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( tempadvisedby(K, E), ta(F, K, L) )
%   | | | then return -0.09494445754313112;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06508704231156034;  // std dev = 2,963, 36,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | else if ( tempadvisedby(A, M), publication(N, A) )
%   | | then if ( publication(N, M) )
%   | | | then return -0.0037670689512306343;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.11395834753564606;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(P, A, Q), publication(R, A) )
%   | | | then return 0.12614742812135454;  // std dev = 1,084, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05796001673403251;  // std dev = 6,419, 169,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=88 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( tempadvisedby(D, C), publication(E, D) )
%   | then if ( ta(F, D, G) )
%   | | then return -0.0018610819035895603;  // std dev = 0,489, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( sameperson(A, D), publication(E, C) )
%   | | | then return 0.022807599118627907;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06298788243522095;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( advisedby(H, C), publication(I, H) )
%   | | then return 0.09071152468095071;  // std dev = 0,487, 31,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else if ( publication(J, C), ta(K, A, L) )
%   | | | then return 0.08327581234957082;  // std dev = 1,275, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02264232094557259;  // std dev = 1,494, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( advisedby(A, M) )
%   | then return 0.041368879508756604;  // std dev = 0,490, 180,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=91 */
%   | else if ( publication(N, A) )
%   | | then return 0.07534918439804453;  // std dev = 0,492, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.01637857821711792;  // std dev = 0,488, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */


Predicates from source: ['inphase(person,prequals).', 'sameperson(person,person).', 'ta(course,person,quarter).', 'publication(title,person).', 'advisedby(person,person).', 'tempadvisedby(person,person).', 'projectmember(project,person).']

Starting fold 1

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.016147851943969727
   Generating paths time   = 2.5445048809051514
   Generating mappings time   = 0.06020188331604004
   Possible mappings   = 433
   Finding best mapping   = 0.2004239559173584
   Total time   = 2.821284055709839


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false,false;workedunder(R, A).;false;false
0;false,false;workedunder(P, A), workedunder(P, Q).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
2;false,false;movie(N, A), workedunder(P, A).;true;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true;movie(G, E).;false;false
4;false,true,true;movie(J, L).;false;false
4;false,false;workedunder(M, A), workedunder(M, N).;false;true
4;false,true;workedunder(K, L).;true;false
4;false;movie(J, A), workedunder(K, A).;true;true
4;true;workedunder(E, F), movie(G, F).;true;false
4;false,false,false;workedunder(P, A), movie(Q, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
5;false,true,false;movie(I, A).;false;false
5;false,false,true;movie(M, L), workedunder(L, N).;false;false
5;false,false,false;workedunder(P, A).;false;false
5;false,false;workedunder(L, A).;true;true
5;false,true;workedunder(G, A), movie(H, G).;false;true
5;false;workedunder(E, A), workedunder(E, F).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,true;movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
6;true,false,false;movie(J, C).;false;false
6;false;workedunder(M, A).;false;true
6;true,false;workedunder(C, H), movie(I, H).;false;true
6;true;workedunder(C, D), movie(E, D).;true;true
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,true,false;movie(I, A).;false;false
7;false,false,true;movie(M, J), workedunder(J, N).;false;false
7;false,false,false;workedunder(P, A).;false;false
7;false,false;workedunder(J, A).;true;true
7;false,true;workedunder(G, A), movie(H, G).;false;true
7;false;workedunder(E, A), workedunder(E, F).;true;true
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,true,true;workedunder(E, I).;false;false
8;false,false,true;movie(N, M).;false;false
8;false,false,false;movie(R, A).;false;false
8;false,false;workedunder(M, A), movie(N, A).;true;true
8;false,true,false;workedunder(E, K).;false;false
8;false,true;movie(H, A).;true;true
8;false;workedunder(E, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;movie(E, C).;false;false
9;false,false;movie(N, A).;false;false
9;true,false,false;movie(J, C).;false;false
9;false;workedunder(M, A).;false;true
9;true,false;workedunder(C, H), movie(I, H).;false;true
9;true;workedunder(C, D), movie(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), workedunder(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.15795862733523683;  // std dev = 1,217, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.379670407154312;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), movie(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11694812838381761;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2951257630772826;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10540117602192779;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.23762521343920523;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.0958680315029523;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1972820786902342;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0878742707515664;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.16789066593974375;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.08108131764096839;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.14572379648964598;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.0752417298458359;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.35253
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.074 seconds
Total inference time: 0.65 seconds
AUC ROC: 0.875


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,true': [0.0, 0, 11], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,true': [4.21e-08, 0, 11], 'false': [0.0, 0, 0], 'true,false,true': [5.27e-09, 11, 0], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'movie(G, A), workedunder(H, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.217, 11, 11]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'false,false,false': 'workedunder(J, A), movie(K, A)', 'false': 'movie(F, A), workedunder(G, A)', 'false,false': 'workedunder(H, A), workedunder(H, I)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 11], 'false,false,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(F, A), movie(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [1.29e-08, 0, 11], 'false,false,false,true': [0.0, 11, 0], 'false,false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 11], 'false,false,true': [0.0, 11, 0]}]]
[{'': [0.24999999999999958, nan], 'true': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}, {'': [0.17847162811629388, nan], 'true': [1.6148698540002277e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [-2.0185873175002846e-16, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.06736877561142736, nan]}, {'': [-4.0371746350005693e-17, -2.523234146875356e-18], 'true,true': [-4.0371746350005693e-17, nan], 'false,false,false': [nan, -2.523234146875356e-18], 'false,false': [nan, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'true': [-4.0371746350005693e-17, nan]}, {'': [-2.0185873175002847e-17, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [-3.027880976250427e-17, -3.784851220313033e-18], 'false': [nan, -3.784851220313033e-18], 'true,true': [-3.027880976250427e-17, nan], 'true': [-3.027880976250427e-17, nan], 'false,false': [-3.784851220313033e-18, nan]}, {'': [-2.0185873175002847e-17, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [1.5139404881252134e-17, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,false': [nan, 0.0]}, {'': [-7.569702440626067e-18, 0.0], 'false': [nan, 0.0], 'true,true': [-7.569702440626067e-18, nan], 'true': [-7.569702440626067e-18, nan], 'false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 0.859 seconds
Total inference time: 0.539 seconds
AUC ROC: 0.875


Refined model AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:12:44
{'AUC ROC': 0.875, 'Recall': 1.0, 'Parameter Learning results': {'AUC ROC': 0.875, 'Recall': 1.0, 'CLL': -0.35253, 'AUC PR': 0.8, 'Precision': [0.8, 0.5], 'F1': 0.888889, 'Inference time': 0.65, 'Learning time': 1.074}, 'CLL': -0.352709, 'AUC PR': 0.8, 'Precision': [0.8, 0.5], 'F1': 0.888889, 'Inference time': 0.539, 'Mapping results': {'Total time': 2.821284055709839, 'Possible mappings': 433, 'Finding best mapping': 0.2004239559173584, 'Knowledge compiling time': 0.016147851943969727, 'Generating paths time': 2.5445048809051514, 'Generating mappings time': 0.06020188331604004}, 'Learning time': 1.933}


Start learning from scratch in target domain

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 11

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 36

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.875
   AUC PR    = 0.8
   CLL	      = -0.352709
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total learning time: 1.211 seconds
Total inference time: 0.509 seconds
AUC ROC: 0.875


Dataset: 6_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:12:46
{'AUC ROC': 0.875, 'Recall': 1.0, 'CLL': -0.352709, 'AUC PR': 0.8, 'Precision': [0.8, 0.5], 'F1': 0.888889, 'Inference time': 0.509, 'Learning time': 1.211}


Starting fold 2

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.017197608947753906
   Generating paths time   = 2.5396432876586914
   Generating mappings time   = 0.06094026565551758
   Possible mappings   = 433
   Finding best mapping   = 0.20074105262756348
   Total time   = 2.8185276985168457


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false,false;workedunder(R, A).;false;false
0;false,false;workedunder(P, A), workedunder(P, Q).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
2;false,false;movie(N, A), workedunder(P, A).;true;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true;movie(G, E).;false;false
4;false,true,true;movie(J, L).;false;false
4;false,false;workedunder(M, A), workedunder(M, N).;false;true
4;false,true;workedunder(K, L).;true;false
4;false;movie(J, A), workedunder(K, A).;true;true
4;true;workedunder(E, F), movie(G, F).;true;false
4;false,false,false;workedunder(P, A), movie(Q, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
5;false,true,false;movie(I, A).;false;false
5;false,false,true;movie(M, L), workedunder(L, N).;false;false
5;false,false,false;workedunder(P, A).;false;false
5;false,false;workedunder(L, A).;true;true
5;false,true;workedunder(G, A), movie(H, G).;false;true
5;false;workedunder(E, A), workedunder(E, F).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,true;movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
6;true,false,false;movie(J, C).;false;false
6;false;workedunder(M, A).;false;true
6;true,false;workedunder(C, H), movie(I, H).;false;true
6;true;workedunder(C, D), movie(E, D).;true;true
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,true,false;movie(I, A).;false;false
7;false,false,true;movie(M, J), workedunder(J, N).;false;false
7;false,false,false;workedunder(P, A).;false;false
7;false,false;workedunder(J, A).;true;true
7;false,true;workedunder(G, A), movie(H, G).;false;true
7;false;workedunder(E, A), workedunder(E, F).;true;true
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,true,true;workedunder(E, I).;false;false
8;false,false,true;movie(N, M).;false;false
8;false,false,false;movie(R, A).;false;false
8;false,false;workedunder(M, A), movie(N, A).;true;true
8;false,true,false;workedunder(E, K).;false;false
8;false,true;movie(H, A).;true;true
8;false;workedunder(E, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;movie(E, C).;false;false
9;false,false;movie(N, A).;false;false
9;true,false,false;movie(J, C).;false;false
9;false;workedunder(M, A).;false;true
9;true,false;workedunder(C, H), movie(I, H).;false;true
9;true;workedunder(C, D), movie(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.657810671461647;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5123505661168763;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), workedunder(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.16214040922766773;  // std dev = 1,528, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.34533087234248505;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), movie(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11738067852967662;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.2640730309307144;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10575522108695315;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.20743789944857718;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.0961627213560766;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.16716987599309338;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08812310071598085;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.13765638269300923;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.08129404115518012;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.11536736846558006;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07542555455601921;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.323511
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.059 seconds
Total inference time: 0.622 seconds
AUC ROC: 0.885714


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,true': [0.961, 1, 12], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,true': [0.961, 1, 12], 'false': [0.0, 0, 0], 'true,false,true': [5.27e-09, 11, 0], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'movie(G, A), workedunder(H, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.528, 12, 12]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'false,false,false': 'workedunder(J, A), movie(K, A)', 'false': 'movie(F, A), workedunder(G, A)', 'false,false': 'workedunder(H, A), workedunder(H, I)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.961, 1, 12], 'false,false,true': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(F, A), movie(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.961, 1, 12], 'false,false,false,true': [0.0, 11, 0], 'false,false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.961, 1, 12], 'false,false,true': [3.73e-09, 11, 0]}]]
[{'': [0.24999999999999956, nan], 'true': [0.07100591715976314, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}, {'': [0.19076867375623552, nan], 'true': [0.07100591715976333, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [0.07100591715976351, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.09731751852547608, nan]}, {'': [0.07100591715976337, -2.523234146875356e-18], 'true,true': [0.07100591715976337, nan], 'false,false,false': [nan, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'false,false': [nan, -2.523234146875356e-18], 'true': [0.07100591715976337, nan]}, {'': [0.07100591715976332, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.07100591715976332, -1.261617073437678e-18], 'true,true': [0.07100591715976332, nan], 'true': [0.07100591715976332, nan], 'false,false': [-1.261617073437678e-18, nan], 'false': [nan, -1.261617073437678e-18]}, {'': [0.07100591715976336, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.0710059171597633, -1.261617073437678e-18], 'false': [nan, -1.261617073437678e-18], 'false,false,false': [-1.261617073437678e-18, nan], 'false,false': [nan, -1.261617073437678e-18]}, {'': [0.07100591715976333, 1.261617073437678e-18], 'true,true': [0.07100591715976333, nan], 'true': [0.07100591715976333, nan], 'false,false': [1.261617073437678e-18, nan], 'false': [nan, 1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.331 seconds
Total inference time: 0.562 seconds
AUC ROC: 0.885714


Refined model AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:12:53
{'AUC ROC': 0.885714, 'Recall': 1.0, 'Parameter Learning results': {'AUC ROC': 0.885714, 'Recall': 1.0, 'CLL': -0.323511, 'AUC PR': 0.813953, 'Precision': [0.813953, 0.5], 'F1': 0.897436, 'Inference time': 0.622, 'Learning time': 1.059}, 'CLL': -0.320018, 'AUC PR': 0.813953, 'Precision': [0.813953, 0.5], 'F1': 0.897436, 'Inference time': 0.562, 'Mapping results': {'Total time': 2.8185276985168457, 'Possible mappings': 433, 'Finding best mapping': 0.20074105262756348, 'Knowledge compiling time': 0.017197608947753906, 'Generating paths time': 2.5396432876586914, 'Generating mappings time': 0.06094026565551758}, 'Learning time': 2.3899999999999997}


Start learning from scratch in target domain

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 12

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 35

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.10427374705508957;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.885714
   AUC PR    = 0.813953
   CLL	      = -0.320018
   Precision = 0.813953 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.897436


Total learning time: 1.357 seconds
Total inference time: 0.524 seconds
AUC ROC: 0.885714


Dataset: 6_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:12:55
{'AUC ROC': 0.885714, 'Recall': 1.0, 'CLL': -0.320018, 'AUC PR': 0.813953, 'Precision': [0.813953, 0.5], 'F1': 0.897436, 'Inference time': 0.524, 'Learning time': 1.357}


Starting fold 3

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.018138647079467773
   Generating paths time   = 2.532919406890869
   Generating mappings time   = 0.06177520751953125
   Possible mappings   = 433
   Finding best mapping   = 0.2045896053314209
   Total time   = 2.8174285888671875


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false,false;workedunder(R, A).;false;false
0;false,false;workedunder(P, A), workedunder(P, Q).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
2;false,false;movie(N, A), workedunder(P, A).;true;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true;movie(G, E).;false;false
4;false,true,true;movie(J, L).;false;false
4;false,false;workedunder(M, A), workedunder(M, N).;false;true
4;false,true;workedunder(K, L).;true;false
4;false;movie(J, A), workedunder(K, A).;true;true
4;true;workedunder(E, F), movie(G, F).;true;false
4;false,false,false;workedunder(P, A), movie(Q, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
5;false,true,false;movie(I, A).;false;false
5;false,false,true;movie(M, L), workedunder(L, N).;false;false
5;false,false,false;workedunder(P, A).;false;false
5;false,false;workedunder(L, A).;true;true
5;false,true;workedunder(G, A), movie(H, G).;false;true
5;false;workedunder(E, A), workedunder(E, F).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,true;movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
6;true,false,false;movie(J, C).;false;false
6;false;workedunder(M, A).;false;true
6;true,false;workedunder(C, H), movie(I, H).;false;true
6;true;workedunder(C, D), movie(E, D).;true;true
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,true,false;movie(I, A).;false;false
7;false,false,true;movie(M, J), workedunder(J, N).;false;false
7;false,false,false;workedunder(P, A).;false;false
7;false,false;workedunder(J, A).;true;true
7;false,true;workedunder(G, A), movie(H, G).;false;true
7;false;workedunder(E, A), workedunder(E, F).;true;true
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,true,true;workedunder(E, I).;false;false
8;false,false,true;movie(N, M).;false;false
8;false,false,false;movie(R, A).;false;false
8;false,false;workedunder(M, A), movie(N, A).;true;true
8;false,true,false;workedunder(E, K).;false;false
8;false,true;movie(H, A).;true;true
8;false;workedunder(E, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;movie(E, C).;false;false
9;false,false;movie(N, A).;false;false
9;true,false,false;movie(J, C).;false;false
9;false;workedunder(M, A).;false;true
9;true,false;workedunder(C, H), movie(I, H).;false;true
9;true;workedunder(C, D), movie(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.49238913840392534;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.39468718495146987;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), workedunder(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.17931826699808692;  // std dev = 2,508, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.25878603914901577;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), movie(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11917207682255643;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.19419056870327844;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1072191863590061;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.14616381883713392;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.0973796235193314;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1108635081447019;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08914944651402874;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.08481000842168669;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.08217058588764369;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.0653917989087569;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07618236135825017;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.273236
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.393 seconds
Total inference time: 0.643 seconds
AUC ROC: 0.965517


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,true': [2.245, 7, 18], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,true': [2.245, 7, 18], 'false': [0.0, 0, 0], 'true,false,true': [5.27e-09, 11, 0], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'movie(G, A), workedunder(H, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.508, 18, 18]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'false,false,false': 'workedunder(J, A), movie(K, A)', 'false': 'movie(F, A), workedunder(G, A)', 'false,false': 'workedunder(H, A), workedunder(H, I)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false,false': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [2.245, 7, 18], 'false,false,true': [5.27e-09, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 11, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(F, A), movie(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.245, 7, 18], 'false,false,false,true': [0.0, 11, 0], 'false,false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [2.245, 7, 18], 'false,false,true': [0.0, 11, 0]}]]
[{'': [0.2499999999999995, nan], 'true': [0.2015999999999996, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}, {'': [0.22099738300738728, nan], 'true': [0.2016000000000001, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [0.20160000000000053, 5.046468293750712e-18], 'false': [nan, 5.046468293750712e-18], 'false,false,false': [nan, 5.046468293750712e-18], 'false,false': [nan, 5.046468293750712e-18]}, {'': [0.1747217246282939, nan]}, {'': [0.20159999999999975, 2.523234146875356e-18], 'true,true': [0.20159999999999975, nan], 'false,false,false': [nan, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'false,false': [nan, 2.523234146875356e-18], 'true': [0.20159999999999975, nan]}, {'': [0.20160000000000003, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.2016, 2.523234146875356e-18], 'true,true': [0.2016, nan], 'true': [0.2016, nan], 'false,false': [2.523234146875356e-18, nan], 'false': [nan, 2.523234146875356e-18]}, {'': [0.20160000000000003, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.2015999999999999, -2.523234146875356e-18], 'false': [nan, -2.523234146875356e-18], 'false,false,false': [-2.523234146875356e-18, nan], 'false,false': [nan, -2.523234146875356e-18]}, {'': [0.20159999999999997, -1.261617073437678e-18], 'true,true': [0.20159999999999997, nan], 'true': [0.20159999999999997, nan], 'false,false': [-1.261617073437678e-18, nan], 'false': [nan, -1.261617073437678e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.68 seconds
Total inference time: 0.551 seconds
AUC ROC: 0.965517


Refined model AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:13:03
{'AUC ROC': 0.965517, 'Recall': 1.0, 'Parameter Learning results': {'AUC ROC': 0.965517, 'Recall': 1.0, 'CLL': -0.273236, 'AUC PR': 0.935484, 'Precision': [0.935484, 0.5], 'F1': 0.966667, 'Inference time': 0.643, 'Learning time': 1.393}, 'CLL': -0.264596, 'AUC PR': 0.935484, 'Precision': [0.935484, 0.5], 'F1': 0.966667, 'Inference time': 0.551, 'Mapping results': {'Total time': 2.8174285888671875, 'Possible mappings': 433, 'Finding best mapping': 0.2045896053314209, 'Knowledge compiling time': 0.018138647079467773, 'Generating paths time': 2.532919406890869, 'Generating mappings time': 0.06177520751953125}, 'Learning time': 3.073}


Start learning from scratch in target domain

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 18

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 29

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.5781489350995124;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.49238913840392534;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.39468718495146987;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.3029206894518932;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.2279628397230807;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1711293278244227;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.129208558439337;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09837607626228805;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.07552905818195493;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.05841806950104655;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */


Results
   AUC ROC   = 0.965517
   AUC PR    = 0.935484
   CLL	      = -0.264596
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.624 seconds
Total inference time: 0.522 seconds
AUC ROC: 0.965517


Dataset: 6_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:13:05
{'AUC ROC': 0.965517, 'Recall': 1.0, 'CLL': -0.264596, 'AUC PR': 0.935484, 'Precision': [0.935484, 0.5], 'F1': 0.966667, 'Inference time': 0.522, 'Learning time': 1.624}


Starting fold 4

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.016175270080566406
   Generating paths time   = 2.525369882583618
   Generating mappings time   = 0.06096291542053223
   Possible mappings   = 433
   Finding best mapping   = 0.2058858871459961
   Total time   = 2.8083994388580322


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'projectmember(A,B) -> workedunder(B,A)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false,false;workedunder(R, A).;false;false
0;false,false;workedunder(P, A), workedunder(P, Q).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false;workedunder(L, A), workedunder(L, M).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
2;false,false;movie(N, A), workedunder(P, A).;true;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true;movie(G, E).;false;false
4;false,true,true;movie(J, L).;false;false
4;false,false;workedunder(M, A), workedunder(M, N).;false;true
4;false,true;workedunder(K, L).;true;false
4;false;movie(J, A), workedunder(K, A).;true;true
4;true;workedunder(E, F), movie(G, F).;true;false
4;false,false,false;workedunder(P, A), movie(Q, A).;false;false
5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
5;false,true,false;movie(I, A).;false;false
5;false,false,true;movie(M, L), workedunder(L, N).;false;false
5;false,false,false;workedunder(P, A).;false;false
5;false,false;workedunder(L, A).;true;true
5;false,true;workedunder(G, A), movie(H, G).;false;true
5;false;workedunder(E, A), workedunder(E, F).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,true;movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
6;true,false,false;movie(J, C).;false;false
6;false;workedunder(M, A).;false;true
6;true,false;workedunder(C, H), movie(I, H).;false;true
6;true;workedunder(C, D), movie(E, D).;true;true
7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
7;false,true,false;movie(I, A).;false;false
7;false,false,true;movie(M, J), workedunder(J, N).;false;false
7;false,false,false;workedunder(P, A).;false;false
7;false,false;workedunder(J, A).;true;true
7;false,true;workedunder(G, A), movie(H, G).;false;true
7;false;workedunder(E, A), workedunder(E, F).;true;true
8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;false;true
8;false,true,true;workedunder(E, I).;false;false
8;false,false,true;movie(N, M).;false;false
8;false,false,false;movie(R, A).;false;false
8;false,false;workedunder(M, A), movie(N, A).;true;true
8;false,true,false;workedunder(E, K).;false;false
8;false,true;movie(H, A).;true;true
8;false;workedunder(E, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;movie(E, C).;false;false
9;false,false;movie(N, A).;false;false
9;true,false,false;movie(J, C).;false;false
9;false;workedunder(M, A).;false;true
9;true,false;workedunder(C, H), movie(I, H).;false;true
9;true;workedunder(C, D), movie(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), workedunder(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(I, A), workedunder(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.17153349828640083;  // std dev = 1,076, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.29258794850627473;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A), workedunder(H, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(J, A), movie(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11835732849170555;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.220130347586957;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10655381774489354;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.16763674053475225;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09682686953068707;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.1295976437502671;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A), workedunder(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08868348436308877;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.10161839106947597;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A), movie(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A) )
%   | | | then return -0.08177280759201208;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.08065368152237058;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.07583905155796608;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.307206
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.877 seconds
Total inference time: 0.685 seconds
AUC ROC: 0.906977


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,true': [0.894, 1, 4], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,true': [0.894, 1, 4], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'movie(I, A), workedunder(J, A)', 'false,false': 'movie(G, A), workedunder(H, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.63e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.076, 4, 4]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'false,false,false': 'workedunder(J, A), movie(K, A)', 'false': 'movie(F, A), workedunder(G, A)', 'false,false': 'workedunder(H, A), workedunder(H, I)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.894, 1, 4], 'false,false,true': [1.86e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A), workedunder(E, F)', 'false,false,false': 'workedunder(H, A)', 'false,false': 'workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.86e-09, 3, 0]}], ['genre(A, B)', {'': 'workedunder(C, A), workedunder(C, D)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A)', 'false,false': 'workedunder(F, A), movie(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.894, 1, 4], 'false,false,false,true': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.894, 1, 4], 'false,false,true': [0.0, 3, 0]}]]
[{'': [0.24999999999999986, nan], 'true': [0.15999999999999986, 0.0], 'true,false': [nan, 0.0]}, {'': [0.20948195373304385, nan], 'true': [0.16, 0.0], 'true,false': [0.0, nan]}, {'': [0.15999999999999998, 2.3129646346357427e-18], 'false': [nan, 2.3129646346357427e-18], 'false,false,false': [nan, 2.3129646346357427e-18], 'false,false': [nan, 2.3129646346357427e-18]}, {'': [0.14475994169199063, nan]}, {'': [0.15999999999999998, 0.0], 'true,true': [0.15999999999999998, nan], 'false,false,false': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'true': [0.15999999999999998, nan]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.16, 1.1564823173178713e-18], 'true,true': [0.16, nan], 'true': [0.16, nan], 'false,false': [1.1564823173178713e-18, nan], 'false': [nan, 1.1564823173178713e-18]}, {'': [0.16, 1.1564823173178713e-18], 'false': [nan, 1.1564823173178713e-18], 'false,false,false': [nan, 1.1564823173178713e-18], 'false,false': [nan, 1.1564823173178713e-18]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,false': [nan, 0.0]}, {'': [0.15999999999999998, 0.0], 'true,true': [0.15999999999999998, nan], 'true': [0.15999999999999998, nan], 'false,false': [0.0, nan], 'false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '8;;genre(A, B) :- workedunder(C, A), workedunder(C, D).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A), workedunder(C, D) )
%   then return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 0.79 seconds
Total inference time: 0.56 seconds
AUC ROC: 0.906977


Refined model AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:13:11
{'AUC ROC': 0.906977, 'Recall': 1.0, 'Parameter Learning results': {'AUC ROC': 0.906977, 'Recall': 1.0, 'CLL': -0.307206, 'AUC PR': 0.843137, 'Precision': [0.843137, 0.5], 'F1': 0.914894, 'Inference time': 0.685, 'Learning time': 0.877}, 'CLL': -0.300536, 'AUC PR': 0.843137, 'Precision': [0.843137, 0.5], 'F1': 0.914894, 'Inference time': 0.56, 'Mapping results': {'Total time': 2.8083994388580322, 'Possible mappings': 433, 'Finding best mapping': 0.2058858871459961, 'Knowledge compiling time': 0.016175270080566406, 'Generating paths time': 2.525369882583618, 'Generating mappings time': 0.06096291542053223}, 'Learning time': 1.667}


Start learning from scratch in target domain

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 4

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 43

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.906977
   AUC PR    = 0.843137
   CLL	      = -0.300536
   Precision = 0.843137 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.914894


Total learning time: 1.044 seconds
Total inference time: 0.538 seconds
AUC ROC: 0.906977


Dataset: 6_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:13:13
{'AUC ROC': 0.906977, 'Recall': 1.0, 'CLL': -0.300536, 'AUC PR': 0.843137, 'Precision': [0.843137, 0.5], 'F1': 0.914894, 'Inference time': 0.538, 'Learning time': 1.044}


Starting fold 5

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.03601503372192383
   Generating paths time   = 2.5440382957458496
   Generating mappings time   = 0.06131410598754883
   Possible mappings   = 433
   Finding best mapping   = 0.2055377960205078
   Total time   = 2.846911907196045


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(E, A).;true;true
0;false,false,false;workedunder(R, A).;false;false
0;false,false;workedunder(P, A).;false;true
0;true,false;workedunder(G, A), movie(E, G).;false;false
0;false,true;workedunder(H, J), movie(I, J).;false;false
0;false;workedunder(H, A), movie(I, H).;true;true
0;true;workedunder(F, A), movie(E, F).;false;true
1;;genre(A, B) :- movie(C, A).;true;true
1;false,false,true;workedunder(Q, R), movie(S, R).;false;false
1;false,false;workedunder(Q, A).;true;false
1;true,false;workedunder(H, G).;false;false
1;false,true;workedunder(I, K), movie(J, K).;false;false
1;false;workedunder(I, A), movie(J, I).;true;true
1;true;workedunder(F, A).;false;true
2;;genre(A, B) :- movie(E, A), workedunder(F, A).;false;true
2;false;workedunder(L, A).;false;true
2;false,false,true;workedunder(P, Q).;false;false
2;false,false,false;movie(R, A), workedunder(S, A).;false;false
2;false,false;movie(N, A), workedunder(P, A).;true;true
3;;genre(A, B) :- workedunder(F, E).;false;true
3;false;movie(L, A), workedunder(M, A).;false;true
3;false,false,true;workedunder(N, P), movie(Q, P).;false;false
3;false,false,false;workedunder(R, A), movie(S, R).;false;false
3;false,false;workedunder(N, A).;true;true
4;;genre(A, B) :- workedunder(E, A).;true;true
4;true,true;movie(G, E).;false;false
4;false,true,true;movie(J, L).;false;false
4;false,false;workedunder(M, A).;false;true
4;false,true;workedunder(K, L).;true;false
4;false;movie(J, A), workedunder(K, A).;true;true
4;true;workedunder(E, F), movie(G, F).;true;false
4;false,false,false;workedunder(P, A), movie(Q, A).;false;false
5;;genre(A, B) :- workedunder(C, A).;false;true
5;false,true,false;movie(I, A).;false;false
5;false,false,true;movie(M, L), workedunder(L, N).;false;false
5;false,false,false;workedunder(P, A).;false;false
5;false,false;workedunder(L, A).;true;true
5;false,true;workedunder(G, A), movie(H, G).;false;true
5;false;workedunder(E, A).;true;true
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,true;movie(E, C).;false;false
6;false,false;movie(N, A).;false;false
6;true,false,false;movie(J, C).;false;false
6;false;workedunder(M, A).;false;true
6;true,false;workedunder(C, H), movie(I, H).;false;true
6;true;workedunder(C, D), movie(E, D).;true;true
7;;genre(A, B) :- workedunder(C, A).;false;true
7;false,true,false;movie(I, A).;false;false
7;false,false,true;movie(M, J), workedunder(J, N).;false;false
7;false,false,false;workedunder(P, A).;false;false
7;false,false;workedunder(J, A).;true;true
7;false,true;workedunder(G, A), movie(H, G).;false;true
7;false;workedunder(E, A).;true;true
8;;genre(A, B) :- workedunder(C, A).;false;true
8;false,true,true;workedunder(E, I).;false;false
8;false,false,true;movie(N, M).;false;false
8;false,false,false;movie(R, A).;false;false
8;false,false;workedunder(M, A), movie(N, A).;true;true
8;false,true,false;workedunder(E, K).;false;false
8;false,true;movie(H, A).;true;true
8;false;workedunder(E, A).;true;true
9;;genre(A, B) :- workedunder(C, A).;true;true
9;true,true;movie(E, C).;false;false
9;false,false;movie(N, A).;false;false
9;true,false,false;movie(J, C).;false;false
9;false;workedunder(M, A).;false;true
9;true,false;workedunder(C, H), movie(I, H).;false;true
9;true;workedunder(C, D), movie(E, D).;true;true


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A), movie(C, D) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A), movie(C, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), workedunder(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(H, A), workedunder(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, D) )
%   then return 0.15795862733523686;  // std dev = 0,519, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.379670407154312;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), workedunder(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(I, A), movie(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11694812838381759;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.29512576307728255;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10540117602192783;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.23762521343920517;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09586803150295227;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19728207869023417;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0878742707515664;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.16789066593974378;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A), movie(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A) )
%   | | | then return -0.08108131764096839;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D), movie(E, D) )
%   | then if ( movie(E, C) )
%   | | then return 0.14572379648964595;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.0752417298458359;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.303054
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.803 seconds
Total inference time: 0.667 seconds
AUC ROC: 0.9


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A), movie(C, D)', 'true,false': 'workedunder(E, A), movie(C, E)'}, {'true,true': [0.0, 0, 2], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,false': 'workedunder(E, F)'}, {'true,true': [0.0, 0, 2], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A), workedunder(D, A)', 'false': 'workedunder(E, A)', 'false,false,false': 'movie(H, A), workedunder(I, A)', 'false,false': 'movie(F, A), workedunder(G, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.519, 2, 2]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'false,false,false': 'workedunder(I, A), movie(J, A)', 'false': 'movie(F, A), workedunder(G, A)', 'false,false': 'workedunder(H, A)', 'true': 'workedunder(C, D), movie(E, D)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false,false': 'workedunder(F, A)', 'false,false': 'workedunder(E, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 2], 'false,false,true': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false,false': 'workedunder(F, A)', 'false,false': 'workedunder(E, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false,false': 'movie(G, A)', 'false,false': 'workedunder(E, A), movie(F, A)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'true,true': 'movie(E, C)', 'true': 'workedunder(C, D), movie(E, D)', 'false': 'workedunder(F, A)', 'false,false': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 2], 'false,false,true': [0.0, 2, 0]}]]
[{'': [0.25, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.17847162811629394, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.06736877561142736, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false,false': [0.0, nan]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,false': [nan, 0.0]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A), movie(C, D).;true;true', '1;;genre(A, B) :- workedunder(D, A).;true;true', '2;;genre(A, B) :- movie(C, A), workedunder(D, A).;true;true', '4;;genre(A, B) :- workedunder(C, A).;true;true', '5;;genre(A, B) :- workedunder(C, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(C, A).;true;true', '8;;genre(A, B) :- workedunder(C, A).;true;true', '9;;genre(A, B) :- workedunder(C, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A), movie(D, C) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( movie(C, A), workedunder(D, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,260, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.299463
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total learning time: 0.669 seconds
Total inference time: 0.54 seconds
AUC ROC: 0.9


Refined model AUC ROC: 0.9


Dataset: 6_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:13:19
{'AUC ROC': 0.9, 'Recall': 1.0, 'Parameter Learning results': {'AUC ROC': 0.9, 'Recall': 1.0, 'CLL': -0.303054, 'AUC PR': 0.833333, 'Precision': [0.833333, 0.5], 'F1': 0.909091, 'Inference time': 0.667, 'Learning time': 0.803}, 'CLL': -0.299463, 'AUC PR': 0.833333, 'Precision': [0.833333, 0.5], 'F1': 0.909091, 'Inference time': 0.54, 'Mapping results': {'Total time': 2.846911907196045, 'Possible mappings': 433, 'Finding best mapping': 0.2055377960205078, 'Knowledge compiling time': 0.03601503372192383, 'Generating paths time': 2.5440382957458496, 'Generating mappings time': 0.06131410598754883}, 'Learning time': 1.472}


Start learning from scratch in target domain

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 2

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 45

WILL Produced-Tree #1
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -1.052978
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.723 seconds
Total inference time: 0.523 seconds
AUC ROC: 0.5


Dataset: 6_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:13:21
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -1.052978, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 0.523, 'Learning time': 0.723}


