Starting experiment #1 for 21_yeast_twitter

Start learning from source dataset

Source train facts examples: 14780
Source train pos examples: 604
Source train neg examples: 604

WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( proteinclass(E, D), enzyme(E, F) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( proteinclass(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return 0.35814893509950746;  // std dev = 0,500, 1.102,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=551 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(C, C) )
%   | | then return 0.3087411357856375;  // std dev = 0,500, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | else if ( enzyme(C, D) )
%   | | | then return 0.30874113578563583;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.30874113578563744;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.30874113578563506;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3087411357856351;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else if ( interaction(F, C) )
%   | | | then return 0.30874113578562834;  // std dev = 11,113, 494,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=247 */
%   | | | else return 0.3087411357856364;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   else if ( location(A, G) )
%   | then return 0.3087411357856374;  // std dev = 0,500, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | else return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.2564123687585857;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(A, E), proteinclass(E, F) )
%   | | | then return 0.25641236875858575;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.25641236875858564;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( proteinclass(A, G) )
%   | | then return 0.256412368758586;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.25641236875858564;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, H) )
%   | | then return 0.2564123687585887;  // std dev = 0,500, 244,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=122 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2564123687585882;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.256412368758589;  // std dev = 12,124, 588,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=294 */
%   | else return 0.25641236875858825;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(E, C), enzyme(E, F) )
%   | | | then return 0.2061374073445394;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2061374073445394;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.20613740734453923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then if ( proteinclass(I, C) )
%   | | | then return 0.20613740734454103;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.2061374073445412;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.20613740734454158;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.20613740734454106;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else return 0.20613740734453928;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414464;  // std dev = 0,500, 346,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=173 */
%   | else return 0.16162857548414478;  // std dev = 0,500, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   else if ( phenotype(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.16162857548414636;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.16162857548414644;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.16162857548414689;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1616285754841475;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else if ( location(A, H) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.16162857548414655;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16162857548414736;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.16162857548414733;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(E, C), enzyme(E, F) )
%   | | | then return 0.12455597792081985;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12455597792081985;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.12455597792081984;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081984;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.1245559779208206;  // std dev = 0,500, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   else if ( interaction(I, A) )
%   | then return 0.12455597792081914;  // std dev = 0,500, 964,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=482 */
%   | else if ( enzyme(A, J) )
%   | | then if ( proteinclass(A, K) )
%   | | | then return 0.12455597792081964;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.12455597792081985;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.12455597792082028;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.0949280093673076;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09492800936730915;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.09492800936730789;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09492800936730837;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else if ( phenotype(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.09492800936730675;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09492800936730705;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.09492800936730672;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0949280093673069;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.09492800936730772;  // std dev = 0,500, 936,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=468 */
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.07186088850055872;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.07186088850055927;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.07186088850055938;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   | else if ( interaction(C, C) )
%   | | then return 0.07186088850055938;  // std dev = 0,500, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.07186088850056414;  // std dev = 11,113, 494,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=247 */
%   | | | else return 0.07186088850055931;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   else if ( enzyme(A, E) )
%   | then if ( proteinclass(A, F) )
%   | | then return 0.0718608885005585;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.07186088850055858;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0.07186088850055863;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.054183073759549207;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.05418307375954922;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.054183073759548964;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.054183073759548894;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.054183073759548894;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else if ( phenotype(A, H) )
%   | then if ( interaction(A, I) )
%   | | then return 0.054183073759548096;  // std dev = 0,500, 426,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=213 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.05418307375954967;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.05418307375955068;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else return 0.05418307375954848;  // std dev = 0,500, 472,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=236 */
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.04076025323305761;  // std dev = 0,500, 346,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=173 */
%   | else return 0.04076025323305966;  // std dev = 0,500, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), phenotype(E, D) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.04076025323305618;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.040760253233056265;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.040760253233056286;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.04076025323305632;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( location(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.04076025323305644;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04076025323305624;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.04076025323305654;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Predicates from source: ['complex(protein,com).', 'location(protein,loc).', 'enzyme(protein,enz).', 'phenotype(protein,phe).', 'proteinclass(protein,class).', 'interaction(protein,protein).']

Starting fold 1

Target predicate: tweets 

Mapping Results
   Knowledge compiling time   = 0.15094447135925293
   Generating paths time   = 2.34576678276062
   Generating mappings time   = 0.15366101264953613
   Possible mappings   = 1876
   Finding best mapping   = 0.8637087345123291
   Total time   = 3.514087200164795


Best mapping found: ['phenotype(A,B) -> accounttype(A,B)', 'location(A,B) -> typeaccount(B,A)', 'enzyme(A,B) -> follows(A,B)', 'interaction(A,B) -> follows(A,B)', 'proteinclass(A,B) -> follows(A,B)', 'complex(A,B) -> tweets(A,B)'] 

Transferred target predicate: tweets 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;tweets(A, B) :- follows(A, A).;true;false
0;true,true;follows(A, D).;true;true
0;true,true,false;follows(A, G), follows(G, H).;false;false
0;true,false,false;follows(A, L), follows(L, M).;false;false
0;true,false;follows(A, I).;true;true
0;true,false,true;follows(J, A), accounttype(J, K).;false;false
0;true,true,true;follows(E, D), follows(E, F).;false;false
0;true;accounttype(A, C).;true;true
1;;tweets(A, B) :- follows(C, A).;true;true
1;true,true;follows(C, C).;false;true
1;true,true,false;follows(C, D).;false;false
1;false;typeaccount(G, A).;false;false
1;true,false;follows(C, C).;true;true
1;true,false,true;follows(A, E).;false;false
1;true,false,false;follows(F, C).;false;false
1;true;follows(A, C).;true;true
2;;tweets(A, B) :- follows(A, A).;true;true
2;true,true;follows(A, D).;false;true
2;true,true,false;follows(A, E), follows(E, F).;false;false
2;true,false;follows(A, G).;false;false
2;false,true;follows(H, H).;false;true
2;false;follows(H, A).;true;false
2;true;accounttype(A, C).;true;true
2;false,true,false;follows(A, H).;false;false
3;;tweets(A, B) :- follows(A, C).;true;false
3;true,true;accounttype(A, D).;true;true
3;true,true,false;follows(G, A), accounttype(G, H).;false;false
3;true,false,false;accounttype(A, J).;false;false
3;true,false;follows(A, I).;true;true
3;true,false,true;follows(I, C).;false;false
3;true,true,true;follows(E, C), follows(E, F).;false;false
3;true;follows(A, A).;true;true
4;;tweets(A, B) :- follows(C, A).;true;true
4;false,true,true;follows(A, F).;false;false
4;false,false,true;follows(A, I).;false;false
4;false,false;typeaccount(H, A).;true;false
4;false,true,false;follows(A, G).;false;false
4;false,true;follows(A, E).;true;true
4;false;accounttype(A, D).;true;true
4;true;follows(A, C).;false;false
5;;tweets(A, B) :- follows(A, A).;true;true
5;true,true;accounttype(A, D).;true;true
5;true,true,false;follows(G, A), accounttype(G, H).;false;false
5;false,false;follows(A, J).;true;false
5;false,false,true;follows(A, K).;false;false
5;false;follows(I, A).;false;true
5;true,true,true;follows(E, C), follows(E, F).;false;false
5;true;follows(A, C).;true;false
6;;tweets(A, B) :- follows(A, C).;true;false
6;true,true;follows(D, C).;true;true
6;true,true,false;follows(D, D).;false;false
6;true,false,false;follows(A, G).;false;false
6;true,false;accounttype(A, E).;true;true
6;true,false,true;follows(A, F).;false;false
6;true,true,true;follows(A, D).;false;false
6;true;follows(D, A).;true;true
7;;tweets(A, B) :- follows(C, A).;true;true
7;true,true;follows(A, A).;false;true
7;true,true,false;follows(C, C).;false;false
7;true,false;follows(C, C).;false;true
7;false,true;follows(A, F).;false;false
7;false;follows(A, E).;true;false
7;true,false,false;follows(D, C).;false;false
7;true;follows(A, C).;true;true
8;;tweets(A, B) :- follows(A, A).;true;true
8;true,true;accounttype(A, D).;false;false
8;false;accounttype(A, H).;true;false
8;true,false;accounttype(A, E).;true;false
8;false,true;follows(A, I).;false;true
8;true,false,true;follows(A, F), follows(F, G).;false;false
8;true;follows(A, C).;true;true
8;false,true,false;follows(A, J).;false;false
9;;tweets(A, B) :- follows(C, A).;true;true
9;false,true,true;follows(E, E).;false;false
9;false,false,true;follows(A, H).;false;false
9;false,false;typeaccount(G, A).;true;false
9;false,true,false;follows(A, F).;false;false
9;false,true;follows(A, E), accounttype(E, D).;true;true
9;false;accounttype(A, D).;true;true
9;true;follows(A, C).;false;false


WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.3581489350995074;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, D) )
%   | | | then return 0.3087411357856261;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(E, C) )
%   | | | then return 0.3087411357856376;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | | else return 0.30874113578563567;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( typeaccount(F, A) )
%   | then return 0.30874113578563733;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, C) )
%   | | | then return 0.25641236875857015;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.2564123687585885;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | else return 0.2564123687585882;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.20613740734455313;  // std dev = 16,233, 1.054,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=527 */
%   | | | else return 0.2061374073445433;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2061374073445411;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.1616285754841449;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else return 0.16162857548414472;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   else if ( accounttype(A, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.1616285754841452;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then return 0.12455597792081842;  // std dev = 17,436, 1.216,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=608 */
%   | else if ( follows(A, D) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.12455597792081918;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(D, C) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.09492800936731804;  // std dev = 15,540, 966,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=483 */
%   | | | else return 0.09492800936730547;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( follows(D, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936731358;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( accounttype(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.09492800936730646;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09492800936730807;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07186088850056575;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(D, C) )
%   | | | then return 0.07186088850055906;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | | else return 0.07186088850055679;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, E) )
%   | then if ( follows(A, F) )
%   | | then return 0.07186088850055844;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then if ( follows(A, D) )
%   | | then return 0.054183073759548846;  // std dev = 17,321, 1.200,000 (wgt'ed) examples reached here.  /* #neg=600 #pos=600 */
%   | | else if ( follows(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05418307375954876;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.04076025323305853;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else return 0.04076025323305479;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   else if ( accounttype(A, D) )
%   | then if ( follows(A, E), accounttype(E, D) )
%   | | then if ( follows(E, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233054065;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.04076025323305639;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695708
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 104.717 seconds
Total inference time: 1.089 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['tweets(A, B)', {'': 'follows(A, A)'}, {'false': [18.358, 674, 674], 'true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true,true': 'follows(C, C)', 'true,true,false': 'follows(C, D)', 'true,false': 'follows(C, C)', 'false': 'typeaccount(F, A)', 'true,false,false': 'follows(E, C)', 'true': 'follows(A, C)'}, {'true,false,false,false': [2.236, 10, 10], 'true,true,false,false': [0.0, 0, 0], 'true,false,false,true': [6.745, 91, 91], 'false,true': [5.745, 66, 66], 'false,false': [0.0, 0, 0], 'true,true,false,true': [15.922, 507, 507], 'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,true': 'follows(C, C)', 'false,true,false': 'follows(A, C)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [7.106, 101, 101], 'false,true,false,true': [15.922, 507, 507], 'true': [0.0, 0, 0], 'false,false': [5.745, 66, 66]}], ['tweets(A, B)', {'': 'follows(A, C)', 'true': 'follows(A, A)', 'true,false,true': 'follows(D, C)', 'true,false': 'follows(A, D)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [16.233, 527, 527], 'true,false,true,false': [6.042, 73, 73], 'false': [6.083, 74, 74], 'true,false,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(C, A)', 'false': 'accounttype(A, D)', 'true': 'follows(A, C)', 'false,true,true': 'follows(A, F)', 'false,true': 'follows(A, E)'}, {'true,true': [15.922, 507, 507], 'false,true,true,true': [5.745, 66, 66], 'true,false': [7.106, 101, 101], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,false,true': 'follows(A, E)', 'false,false': 'follows(A, D)'}, {'false,true': [17.436, 608, 608], 'false,false,true,true': [5.745, 66, 66], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, C)', 'true,true': 'follows(D, C)', 'true,true,false': 'follows(D, D)', 'true,false': 'accounttype(A, E)', 'true': 'follows(D, A)', 'true,true,true': 'follows(A, D)', 'true,false,true': 'follows(A, F)'}, {'true,true,true,true': [15.54, 483, 483], 'true,true,false,false': [3.317, 22, 22], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.745, 66, 66], 'false': [6.083, 74, 74], 'true,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [3.808, 29, 29]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true,true': 'follows(A, A)', 'true,true,false': 'follows(C, C)', 'true,false': 'follows(C, C)', 'false,true': 'follows(A, F)', 'false': 'follows(A, E)', 'true,false,false': 'follows(D, C)', 'true': 'follows(A, C)'}, {'false,true,true': [5.745, 66, 66], 'true,false,false,false': [2.236, 10, 10], 'true,true,false,false': [15.922, 507, 507], 'true,false,false,true': [6.745, 91, 91], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'accounttype(A, C)', 'false,true': 'follows(A, D)', 'false,true,false': 'follows(A, E)'}, {'false,true,true': [17.321, 600, 600], 'false,true,false,false': [6.083, 74, 74], 'false,true,false,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(C, A)', 'false,true,true': 'follows(E, E)', 'false,true,false': 'follows(A, F)', 'false,true': 'follows(A, E), accounttype(E, D)', 'false': 'accounttype(A, D)', 'true': 'follows(A, C)'}, {'true,true': [15.922, 507, 507], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [4.743, 45, 45], 'false,true,true,true': [0.0, 0, 0], 'true,false': [7.106, 101, 101], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.24, 21, 21]}]]
[{'': [nan, 0.2499999999999936]}, {'': [0.25000000000000727, 0.2499999999999986], 'true,true': [nan, 0.25000000000000844], 'true,true,false': [0.25000000000000844, nan], 'true,false': [nan, 0.25000000000000233], 'false': [0.2499999999999986, nan], 'true,false,false': [0.24999999999999883, 0.2500000000000001], 'true': [0.25000000000000844, 0.25000000000000233]}, {'': [nan, 0.2500000000000003], 'false': [0.2500000000000007, 0.25000000000000017], 'false,true': [nan, 0.2500000000000007], 'false,true,false': [0.25000000000000155, 0.24999999999999997]}, {'': [0.2500000000000063, 0.24999999999999986], 'true,false,true': [0.250000000000008, 0.2499999999999993], 'true': [nan, 0.2500000000000063], 'true,false': [0.2500000000000063, nan]}, {'': [0.2499999999999913, 0.24999999999999953], 'false': [0.24999999999999953, nan], 'false,true,true': [0.24999999999999953, nan], 'true': [0.24999999999999517, 0.2499999999999999], 'false,true': [0.24999999999999953, nan]}, {'': [nan, 0.25000000000000877], 'false': [0.2500000000000054, 0.2500000000000003], 'false,false,true': [0.2500000000000003, nan], 'false,false': [0.2500000000000003, nan]}, {'': [0.250000000000004, 0.250000000000001], 'true,true': [0.24999999999999803, 0.25000000000000006], 'true,true,false': [nan, 0.25000000000000006], 'true,false': [0.25, nan], 'true': [0.24999999999999958, 0.25], 'true,true,true': [0.24999999999999648, 0.24999999999999975], 'true,false,true': [0.25, nan]}, {'': [0.25, 0.25000000000000006], 'true,true': [nan, 0.2500000000000009], 'true,true,false': [nan, 0.2500000000000009], 'true,false': [nan, 0.25000000000000133], 'false,true': [0.25000000000000006, nan], 'false': [0.25000000000000006, nan], 'true,false,false': [0.25000000000000117, 0.24999999999999994], 'true': [0.2500000000000009, 0.25000000000000133]}, {'': [nan, 0.25000000000000644], 'false': [0.25000000000000644, nan], 'false,true': [0.2500000000000062, 0.25000000000000006], 'false,true,false': [nan, 0.25000000000000006]}, {'': [0.24999999999999173, 0.2500000000000005], 'false,true,true': [nan, 0.2500000000000001], 'false,true,false': [0.2500000000000002, nan], 'false,true': [0.2500000000000001, 0.2500000000000002], 'false': [0.2500000000000005, nan], 'true': [0.2499999999999913, 0.25000000000000017]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;tweets(A, B) :- follows(A, A).;true;true', '1;;tweets(A, B) :- follows(C, A).;true;true', '1;true,true;follows(C, C).;true;true', '1;true,true,false;follows(C, D).;true;true', '1;true,false;follows(C, C).;true;true', '1;false;typeaccount(F, A).;true;true', '1;true,false,false;follows(E, C).;true;true', '1;true;follows(A, C).;true;true', '2;;tweets(A, B) :- follows(A, A).;true;true', '2;false;follows(C, A).;true;true', '2;false,true;follows(C, C).;true;true', '2;false,true,false;follows(A, C).;true;true', '3;;tweets(A, B) :- follows(A, C).;true;true', '3;true,false,true;follows(D, C).;true;true', '3;true;follows(A, A).;true;true', '3;true,false;follows(A, D).;true;true', '4;;tweets(A, B) :- follows(C, A).;true;true', '4;false;accounttype(A, D).;true;true', '4;false,true,true;follows(A, F).;true;true', '4;true;follows(A, C).;true;true', '4;false,true;follows(A, E).;true;true', '5;;tweets(A, B) :- follows(A, A).;true;true', '5;false;follows(C, A).;true;true', '5;false,false,true;follows(A, E).;true;true', '5;false,false;follows(A, D).;true;true', '6;;tweets(A, B) :- follows(A, C).;true;true', '6;true,true;follows(D, C).;true;true', '6;true,true,false;follows(D, D).;true;true', '6;true,false;accounttype(A, E).;true;true', '6;true,false,true;follows(A, F).;true;true', '6;true,true,true;follows(A, D).;true;true', '6;true;follows(D, A).;true;true', '7;;tweets(A, B) :- follows(C, A).;true;true', '7;true,true;follows(A, A).;true;true', '7;true,true,false;follows(C, C).;true;true', '7;true,false;follows(C, C).;true;true', '7;false,true;follows(A, F).;true;true', '7;false;follows(A, E).;true;true', '7;true,false,false;follows(D, C).;true;true', '7;true;follows(A, C).;true;true', '8;;tweets(A, B) :- follows(A, A).;true;true', '8;false;accounttype(A, C).;true;true', '8;false,true;follows(A, D).;true;true', '8;false,true,false;follows(A, E).;true;true', '9;;tweets(A, B) :- follows(C, A).;true;true', '9;false,true,true;follows(E, E).;true;true', '9;false,true,false;follows(A, F).;true;true', '9;false,true;follows(A, E), accounttype(E, D).;true;true', '9;false;accounttype(A, D).;true;true', '9;true;follows(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(C, A) )
%   | | then if ( follows(A, D), follows(D, C) )
%   | | | then return 0.35814893509950757;  // std dev = 15,199, 924,000 (wgt'ed) examples reached here.  /* #neg=462 #pos=462 */
%   | | | else return 0.35814893509951307;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else if ( follows(C, E) )
%   | | | then return 0.3581489350995134;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.3581489350995112;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, D) )
%   | | | then return 0.3087411357856261;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(E, C) )
%   | | | then return 0.30874113578563744;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | | else return 0.3087411357856348;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( typeaccount(F, A) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then return 0.3087411357856348;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, C) )
%   | | | then return 0.25641236875857015;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.2564123687585883;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | else if ( follows(A, D), follows(D, E) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.25641236875858575;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.25641236875858575;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.2564123687585865;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.20613740734455313;  // std dev = 16,233, 1.054,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=527 */
%   | | | else return 0.2061374073445416;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2061374073445408;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.1616285754841449;  // std dev = 0,500, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, E) )
%   | | | then return 0.16162857548414264;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.16162857548414555;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.1616285754841443;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   else if ( accounttype(A, F) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.16162857548414555;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792082496;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.12455597792081702;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.12455597792081889;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else if ( follows(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.12455597792081922;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(D, C) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.09492800936731793;  // std dev = 15,540, 966,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=483 */
%   | | | else return 0.09492800936730522;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( follows(D, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936731167;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( accounttype(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.09492800936730646;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09492800936730614;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07186088850056237;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055874;  // std dev = 0,500, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return 0.07186088850055741;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.0718608885005593;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.054183073759551094;  // std dev = 16,340, 1.068,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=534 */
%   | | | else return 0.05418307375954835;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else if ( follows(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.054183073759548304;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.04076025323305701;  // std dev = 0,500, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, E) )
%   | | | then return 0.04076025323305346;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.040760253233055904;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.040760253233055564;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   else if ( accounttype(A, F) )
%   | then if ( follows(A, G), accounttype(G, F) )
%   | | then if ( follows(G, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233054065;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.04076025323305647;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695708
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 109.11500000000001 seconds
Total inference time: 1.379 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 21_yeast_twitter, Fold: 1, Type: transfer, Time: 05:38:13
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695708, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.089, 'Learning time': 104.717}, 'CLL': -0.695708, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.379, 'Mapping results': {'Total time': 3.514087200164795, 'Possible mappings': 1876, 'Finding best mapping': 0.8637087345123291, 'Knowledge compiling time': 0.15094447135925293, 'Generating paths time': 2.34576678276062, 'Generating mappings time': 0.15366101264953613}, 'Learning time': 213.832}


Start learning from scratch in target domain

Target train facts examples: 1032
Target train pos examples: 674
Target train neg examples: 674

Target test facts examples: 1020
Target test pos examples: 698
Target test neg examples: 698

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.35814893509950757;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.3581489350995113;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951334;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.3581489350995112;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.30874113578562684;  // std dev = 13,874, 770,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=385 */
%   | | | else return 0.3087411357856348;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.30874113578563744;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | | else return 0.3087411357856347;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.3087411357856356;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.3087411357856347;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else return 0.30874113578563733;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.2564123687585749;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.2564123687585864;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( follows(C, E), follows(E, A) )
%   | | | then return 0.2564123687585871;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.2564123687585861;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.2564123687585859;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.25641236875858575;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.25641236875858675;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585865;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.2564123687585881;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.20613740734455155;  // std dev = 0,500, 826,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=413 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.206137407344542;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | | else return 0.2061374073445403;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( follows(F, C) )
%   | | then return 0.20613740734454125;  // std dev = 0,500, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else return 0.20613740734453945;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.20613740734453959;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20613740734453945;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.20613740734454009;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.20613740734453992;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.16162857548414486;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.16162857548414447;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else return 0.16162857548414739;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( follows(C, E) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.1616285754841469;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.16162857548414636;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.1616285754841465;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414758;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.1616285754841443;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.124555977920828;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.1245559779208181;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( follows(C, E), follows(E, A) )
%   | | | then return 0.12455597792081874;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081975;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.12455597792081997;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.12455597792081945;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081925;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.12455597792081889;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.09492800936731505;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.09492800936730553;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( accounttype(A, E), accounttype(C, E) )
%   | | | then return 0.09492800936730646;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730685;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.09492800936730665;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.0949280093673065;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730673;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.09492800936730614;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.07186088850056194;  // std dev = 0,500, 966,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=483 */
%   | | else return 0.07186088850055886;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.0718608885005589;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.07186088850055793;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.07186088850055843;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.07186088850055836;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.07186088850055838;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.0718608885005588;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.07186088850055902;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375955258;  // std dev = 13,874, 770,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=385 */
%   | | | else return 0.05418307375954675;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.05418307375954678;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.054183073759548395;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.05418307375954939;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.05418307375954962;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.05418307375954945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05418307375954964;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.054183073759548304;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.040760253233058284;  // std dev = 13,874, 770,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=385 */
%   | | | else return 0.04076025323305436;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.04076025323305548;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.040760253233055835;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.04076025323305626;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.040760253233056376;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.04076025323305635;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0407602532330564;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.040760253233055564;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 176.031 seconds
Total inference time: 1.413 seconds
AUC ROC: 0.5


Dataset: 21_yeast_twitter, Fold: 1, Type: scratch, Time: 05:41:11
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.413, 'Learning time': 176.031}


Starting fold 2

Target predicate: tweets 

Mapping Results
   Knowledge compiling time   = 0.11674618721008301
   Generating paths time   = 2.48799991607666
   Generating mappings time   = 0.15368413925170898
   Possible mappings   = 1876
   Finding best mapping   = 0.8633549213409424
   Total time   = 3.6217923164367676


Best mapping found: ['phenotype(A,B) -> follows(A,B)', 'location(A,B) -> typeaccount(B,A)', 'enzyme(A,B) -> follows(A,B)', 'interaction(A,B) -> follows(A,B)', 'proteinclass(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)'] 

Transferred target predicate: tweets 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;tweets(A, B) :- follows(A, A).;true;false
0;true,true;accounttype(A, D).;true;true
0;true,true,false;follows(A, G), follows(G, H).;false;false
0;true,false,false;follows(A, L), follows(L, M).;false;false
0;true,false;accounttype(A, I).;true;true
0;true,false,true;follows(J, A), follows(J, K).;false;false
0;true,true,true;accounttype(E, D), follows(E, F).;false;false
0;true;follows(A, C).;true;true
1;;tweets(A, B) :- follows(C, A).;true;true
1;true,true;follows(C, C).;false;true
1;true,true,false;follows(C, D).;false;false
1;false;typeaccount(G, A).;false;false
1;true,false;follows(C, C).;true;true
1;true,false,true;follows(A, E).;false;false
1;true,false,false;follows(F, C).;false;false
1;true;follows(A, C).;true;true
2;;tweets(A, B) :- follows(A, A).;true;true
2;true,true;accounttype(A, D).;false;true
2;true,true,false;follows(A, E), accounttype(E, F).;false;false
2;true,false;accounttype(A, G).;false;false
2;false,true;follows(H, H).;false;true
2;false;follows(H, A).;true;false
2;true;follows(A, C).;true;true
2;false,true,false;follows(A, H).;false;false
3;;tweets(A, B) :- accounttype(A, C).;true;false
3;true,true;follows(A, D).;true;true
3;true,true,false;follows(G, A), follows(G, H).;false;false
3;true,false,false;follows(A, J).;false;false
3;true,false;follows(A, I).;true;true
3;true,false,true;accounttype(I, C).;false;false
3;true,true,true;accounttype(E, C), follows(E, F).;false;false
3;true;follows(A, A).;true;true
4;;tweets(A, B) :- follows(C, A).;true;true
4;false,true,true;follows(A, F).;false;false
4;false,false,true;accounttype(A, I).;false;false
4;false,false;typeaccount(H, A).;true;false
4;false,true,false;follows(A, G).;false;false
4;false,true;accounttype(A, E).;true;true
4;false;follows(A, D).;true;true
4;true;follows(A, C).;false;false
5;;tweets(A, B) :- follows(A, A).;true;true
5;true,true;follows(A, D).;true;true
5;true,true,false;follows(G, A), follows(G, H).;false;false
5;false,false;follows(A, J).;true;false
5;false,false,true;accounttype(A, K).;false;false
5;false;follows(I, A).;false;true
5;true,true,true;accounttype(E, C), follows(E, F).;false;false
5;true;accounttype(A, C).;true;false
6;;tweets(A, B) :- follows(A, C).;true;false
6;true,true;follows(D, C).;true;true
6;true,true,false;follows(D, D).;false;false
6;true,false,false;accounttype(A, G).;false;false
6;true,false;follows(A, E).;true;true
6;true,false,true;accounttype(A, F).;false;false
6;true,true,true;follows(A, D).;false;false
6;true;follows(D, A).;true;true
7;;tweets(A, B) :- follows(C, A).;true;true
7;true,true;follows(A, A).;false;true
7;true,true,false;follows(C, C).;false;false
7;true,false;follows(C, C).;false;true
7;false,true;accounttype(A, F).;false;false
7;false;follows(A, E).;true;false
7;true,false,false;follows(D, C).;false;false
7;true;follows(A, C).;true;true
8;;tweets(A, B) :- follows(A, A).;true;true
8;true,true;follows(A, D).;false;false
8;false;follows(A, H).;true;false
8;true,false;follows(A, E).;true;false
8;false,true;follows(A, I).;false;true
8;true,false,true;follows(A, F), accounttype(F, G).;false;false
8;true;accounttype(A, C).;true;true
8;false,true,false;accounttype(A, J).;false;false
9;;tweets(A, B) :- follows(C, A).;true;true
9;false,true,true;follows(E, E).;false;false
9;false,false,true;follows(A, H).;false;false
9;false,false;typeaccount(G, A).;true;false
9;false,true,false;accounttype(A, F).;false;false
9;false,true;follows(A, E), follows(E, D).;true;true
9;false;follows(A, D).;true;true
9;true;follows(A, C).;false;false


WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.3581489350995074;  // std dev = 18,682, 1.396,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=698 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, D) )
%   | | | then return 0.30874113578562645;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(E, C) )
%   | | | then return 0.3087411357856378;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.30874113578563583;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( typeaccount(F, A) )
%   | then return 0.3087411357856378;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, C) )
%   | | | then return 0.2564123687585756;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0.25641236875858864;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | else return 0.25641236875858864;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then if ( accounttype(D, C) )
%   | | | then return 0.20613740734455027;  // std dev = 14,457, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | | | else return 0.2061374073445422;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
%   | | else if ( follows(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.20613740734454136;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.1616285754841454;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else return 0.16162857548414458;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, D) )
%   | then if ( accounttype(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.16162857548414436;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( typeaccount(G, A) )
%   | | then if ( accounttype(A, H) )
%   | | | then return 0.16162857548414605;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then return 0.12455597792081828;  // std dev = 16,941, 1.148,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=574 */
%   | else if ( follows(A, D) )
%   | | then if ( accounttype(A, E) )
%   | | | then return 0.12455597792082021;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081942;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(D, C) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.09492800936731673;  // std dev = 14,300, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | | else return 0.09492800936730583;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else if ( follows(D, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936731009;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | else if ( follows(A, E) )
%   | | then if ( accounttype(A, F) )
%   | | | then return 0.09492800936730758;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.094928009367308;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07186088850056563;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(D, C) )
%   | | | then return 0.07186088850055848;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.07186088850055809;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, E) )
%   | then if ( accounttype(A, F) )
%   | | then return 0.07186088850055874;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07186088850055806;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(A, D) )
%   | | then return 0.0541830737595485;  // std dev = 17,493, 1.224,000 (wgt'ed) examples reached here.  /* #neg=612 #pos=612 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.05418307375954833;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.0407602532330589;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else return 0.04076025323305739;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(E, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233054385;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( accounttype(A, F) )
%   | | | then return 0.040760253233056175;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( typeaccount(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233056286;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 168.322 seconds
Total inference time: 1.022 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['tweets(A, B)', {'': 'follows(A, A)'}, {'false': [18.682, 698, 698], 'true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true,true': 'follows(C, C)', 'true,true,false': 'follows(C, D)', 'true,false': 'follows(C, C)', 'false': 'typeaccount(F, A)', 'true,false,false': 'follows(E, C)', 'true': 'follows(A, C)'}, {'true,false,false,false': [2.345, 11, 11], 'true,true,false,false': [0.0, 0, 0], 'true,false,false,true': [7.842, 123, 123], 'false,true': [7.874, 124, 124], 'false,false': [0.0, 0, 0], 'true,true,false,true': [14.832, 440, 440], 'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,true': 'follows(C, C)', 'false,true,false': 'follows(A, C)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false,false': [8.185, 134, 134], 'false,true,false,true': [14.832, 440, 440], 'true': [0.0, 0, 0], 'false,false': [7.874, 124, 124]}], ['tweets(A, B)', {'': 'accounttype(A, C)', 'true': 'follows(A, A)', 'true,false': 'follows(A, D)', 'true,false,true': 'accounttype(D, C)', 'true,false,false': 'follows(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,false,false': [6.557, 86, 86], 'true,false,false,true': [0.0, 0, 0], 'true,false,true,false': [9.849, 194, 194], 'true,false,true,true': [14.457, 418, 418], 'false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(C, A)', 'false,true,true': 'follows(A, F)', 'false,false,true': 'accounttype(A, H)', 'false': 'follows(A, D)', 'false,true': 'accounttype(A, E)', 'false,false': 'typeaccount(G, A)', 'true': 'follows(A, C)'}, {'true,true': [14.832, 440, 440], 'false,true,false': [0.0, 0, 0], 'false,true,true,true': [7.382, 109, 109], 'false,false,false': [0.0, 0, 0], 'true,false': [8.185, 134, 134], 'false,false,true,true': [2.739, 15, 15], 'false,true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,false,true': 'accounttype(A, E)', 'false,false': 'follows(A, D)'}, {'false,true': [16.941, 574, 574], 'false,false,true,true': [7.382, 109, 109], 'true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [2.739, 15, 15]}], ['tweets(A, B)', {'': 'follows(A, C)', 'true,true': 'follows(D, C)', 'true,true,false': 'follows(D, D)', 'true,false': 'follows(A, E)', 'true': 'follows(D, A)', 'true,true,true': 'follows(A, D)', 'true,false,true': 'accounttype(A, F)'}, {'true,true,true,true': [14.3, 409, 409], 'true,true,false,false': [5.431, 59, 59], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [7.382, 109, 109], 'false': [6.557, 86, 86], 'true,true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [4.183, 35, 35]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true,true': 'follows(A, A)', 'true,true,false': 'follows(C, C)', 'true,false': 'follows(C, C)', 'false,true': 'accounttype(A, F)', 'false': 'follows(A, E)', 'true,false,false': 'follows(D, C)', 'true': 'follows(A, C)'}, {'false,true,true': [7.382, 109, 109], 'true,false,false,false': [2.345, 11, 11], 'true,true,false,false': [14.832, 440, 440], 'true,false,false,true': [7.842, 123, 123], 'false,true,false': [0.0, 0, 0], 'false,false': [2.739, 15, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(A, C)', 'false,true': 'follows(A, D)'}, {'false,true,true': [17.493, 612, 612], 'false,true,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false': [6.557, 86, 86]}], ['tweets(A, B)', {'': 'follows(C, A)', 'false,true,true': 'follows(E, E)', 'false,false,true': 'follows(A, H)', 'false': 'follows(A, D)', 'false,true,false': 'accounttype(A, F)', 'false,false': 'typeaccount(G, A)', 'true': 'follows(A, C)', 'false,true': 'follows(A, E), follows(E, D)'}, {'true,true': [14.832, 440, 440], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [5.612, 63, 63], 'false,true,true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false': [8.185, 134, 134], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [4.796, 46, 46], 'false,false,true,false': [2.739, 15, 15]}]]
[{'': [nan, 0.2500000000000222]}, {'': [0.2500000000000076, 0.2500000000000018], 'true,true': [nan, 0.2500000000000096], 'true,true,false': [0.2500000000000096, nan], 'true,false': [nan, 0.2500000000000016], 'false': [0.2500000000000018, nan], 'true,false,false': [0.2500000000000018, 0.25], 'true': [0.2500000000000096, 0.2500000000000016]}, {'': [nan, 0.2500000000000001], 'false': [0.25000000000000094, 0.24999999999999634], 'false,true': [nan, 0.25000000000000094], 'false,true,false': [0.25000000000000233, 0.24999999999999634]}, {'': [0.25000000000000366, nan], 'true,false,true': [0.24999999999999395, 0.25000000000000155], 'true,false,false': [nan, 0.24999999999999967], 'true': [nan, 0.25000000000000366], 'true,false': [0.25000000000000483, 0.24999999999999967]}, {'': [0.24999999999999356, 0.24999999999999997], 'false,true,true': [0.24999999999999986, nan], 'false,false,true': [0.25000000000000006, nan], 'false,false': [0.25000000000000006, nan], 'false,true': [0.24999999999999986, nan], 'false': [0.24999999999999986, 0.25000000000000006], 'true': [0.25000000000000144, 0.2500000000000003]}, {'': [nan, 0.2500000000000091], 'false': [0.25000000000000333, 0.25000000000000083], 'false,false,true': [0.25000000000000094, nan], 'false,false': [0.25000000000000094, 0.24999999999999972]}, {'': [0.2500000000000039, 0.2500000000000016], 'true,true': [0.24999999999999722, 0.24999999999999992], 'true,true,false': [nan, 0.24999999999999992], 'true,false': [0.25000000000000083, nan], 'true': [0.2499999999999975, 0.25000000000000083], 'true,true,true': [0.2499999999999972, 0.2500000000000001], 'true,false,true': [0.25000000000000083, nan]}, {'': [0.2500000000000002, 0.25000000000000094], 'true,true': [nan, 0.2500000000000017], 'true,true,false': [nan, 0.2500000000000017], 'true,false': [nan, 0.250000000000001], 'false,true': [0.250000000000001, nan], 'false': [0.250000000000001, 0.24999999999999986], 'true,false,false': [0.25000000000000117, 0.25000000000000006], 'true': [0.2500000000000017, 0.250000000000001]}, {'': [nan, 0.2500000000000064], 'false': [0.2500000000000061, 0.2500000000000006], 'false,true': [0.2500000000000061, nan]}, {'': [0.24999999999999267, 0.25000000000000006], 'false,true,true': [nan, 0.25000000000000044], 'false,false,true': [nan, 0.25000000000000006], 'false,false': [0.25000000000000006, nan], 'false,true': [0.25000000000000044, 0.24999999999999986], 'false': [0.2499999999999999, 0.25000000000000006], 'true': [0.24999999999999187, 0.25], 'false,true,false': [0.24999999999999986, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;tweets(A, B) :- follows(A, A).;true;true', '1;;tweets(A, B) :- follows(C, A).;true;true', '1;true,true;follows(C, C).;true;true', '1;true,true,false;follows(C, D).;true;true', '1;true,false;follows(C, C).;true;true', '1;false;typeaccount(F, A).;true;true', '1;true,false,false;follows(E, C).;true;true', '1;true;follows(A, C).;true;true', '2;;tweets(A, B) :- follows(A, A).;true;true', '2;false;follows(C, A).;true;true', '2;false,true;follows(C, C).;true;true', '2;false,true,false;follows(A, C).;true;true', '3;;tweets(A, B) :- accounttype(A, C).;true;true', '3;true,false,true;accounttype(D, C).;true;true', '3;true,false,false;follows(A, E).;true;true', '3;true;follows(A, A).;true;true', '3;true,false;follows(A, D).;true;true', '4;;tweets(A, B) :- follows(C, A).;true;true', '4;false,true,true;follows(A, F).;true;true', '4;false,false,true;accounttype(A, H).;true;true', '4;false,false;typeaccount(G, A).;true;true', '4;false,true;accounttype(A, E).;true;true', '4;false;follows(A, D).;true;true', '4;true;follows(A, C).;true;true', '5;;tweets(A, B) :- follows(A, A).;true;true', '5;false;follows(C, A).;true;true', '5;false,false,true;accounttype(A, E).;true;true', '5;false,false;follows(A, D).;true;true', '6;;tweets(A, B) :- follows(A, C).;true;true', '6;true,true;follows(D, C).;true;true', '6;true,true,false;follows(D, D).;true;true', '6;true,false;follows(A, E).;true;true', '6;true,false,true;accounttype(A, F).;true;true', '6;true,true,true;follows(A, D).;true;true', '6;true;follows(D, A).;true;true', '7;;tweets(A, B) :- follows(C, A).;true;true', '7;true,true;follows(A, A).;true;true', '7;true,true,false;follows(C, C).;true;true', '7;true,false;follows(C, C).;true;true', '7;false,true;accounttype(A, F).;true;true', '7;false;follows(A, E).;true;true', '7;true,false,false;follows(D, C).;true;true', '7;true;follows(A, C).;true;true', '8;;tweets(A, B) :- follows(A, A).;true;true', '8;false;follows(A, C).;true;true', '8;false,true;follows(A, D).;true;true', '9;;tweets(A, B) :- follows(C, A).;true;true', '9;false,true,true;follows(E, E).;true;true', '9;false,false,true;follows(A, H).;true;true', '9;false,false;typeaccount(G, A).;true;true', '9;false,true,false;accounttype(A, F).;true;true', '9;false,true;follows(A, E), follows(E, D).;true;true', '9;false;follows(A, D).;true;true', '9;true;follows(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(C, A) )
%   | | then if ( follows(A, D), follows(C, D) )
%   | | | then return 0.3581489350995076;  // std dev = 14,300, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | | else return 0.3581489350995111;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else if ( follows(C, E) )
%   | | | then return 0.3581489350995088;  // std dev = 7,906, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | | else return 0.3581489350995131;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.35814893509951345;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, D) )
%   | | | then return 0.30874113578562645;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578563767;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( typeaccount(E, A) )
%   | then if ( follows(A, F) )
%   | | then if ( follows(F, G) )
%   | | | then return 0.3087411357856375;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.3087411357856347;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, C) )
%   | | | then return 0.2564123687585756;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0.25641236875858847;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, E) )
%   | | | then return 0.25641236875858836;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.2564123687585858;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then if ( accounttype(D, C) )
%   | | | then return 0.20613740734455027;  // std dev = 14,457, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | | | else return 0.2061374073445421;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
%   | | else if ( follows(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2061374073445384;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.16162857548414533;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(A, D) )
%   | | then return 0.16162857548414428;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | else return 0.16162857548414453;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else if ( follows(A, E) )
%   | then if ( accounttype(A, F) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.16162857548414447;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( typeaccount(H, A) )
%   | | then if ( accounttype(A, I) )
%   | | | then return 0.16162857548414714;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792082854;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0.12455597792081881;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | else return 0.12455597792082043;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else if ( follows(A, E) )
%   | | then if ( accounttype(A, F) )
%   | | | then return 0.12455597792082021;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082003;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A) )
%   | then if ( follows(D, C) )
%   | | then return 0.09492800936731544;  // std dev = 0,500, 888,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=444 */
%   | | else return 0.09492800936730714;  // std dev = 0,500, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | else if ( follows(A, E) )
%   | | then if ( accounttype(A, F) )
%   | | | then return 0.09492800936730628;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.09492800936730589;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.09492800936730615;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730639;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09492800936730703;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07186088850056212;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0718608885005566;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, D) )
%   | then if ( accounttype(A, E) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return 0.07186088850055848;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.0718608885005587;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07186088850055862;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.054183073759551476;  // std dev = 15,859, 1.006,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=503 */
%   | | | else return 0.05418307375954725;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.05418307375954905;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0541830737595496;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.04076025323305867;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else return 0.04076025323305471;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(E, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233054614;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( accounttype(A, F) )
%   | | | then return 0.04076025323305669;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( typeaccount(G, A) )
%   | | then if ( follows(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.040760253233056286;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 106.17699999999999 seconds
Total inference time: 1.29 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 21_yeast_twitter, Fold: 2, Type: transfer, Time: 05:45:52
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.022, 'Learning time': 168.322}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.29, 'Mapping results': {'Total time': 3.6217923164367676, 'Possible mappings': 1876, 'Finding best mapping': 0.8633549213409424, 'Knowledge compiling time': 0.11674618721008301, 'Generating paths time': 2.48799991607666, 'Generating mappings time': 0.15368413925170898}, 'Learning time': 274.499}


Start learning from scratch in target domain

Target train facts examples: 1020
Target train pos examples: 698
Target train neg examples: 698

Target test facts examples: 1032
Target test pos examples: 674
Target test neg examples: 674

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.35814893509950757;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.35814893509951345;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | | else return 0.3581489350995133;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.3581489350995134;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.30874113578562795;  // std dev = 11,640, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | | else return 0.3087411357856351;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3087411357856376;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | | | else return 0.30874113578563506;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.3087411357856373;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | | else return 0.308741135785637;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.3087411357856347;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.3087411357856347;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else return 0.3087411357856374;  // std dev = 0,500, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.256412368758589;  // std dev = 11,640, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | | else return 0.25641236875858847;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( follows(E, A), follows(E, C) )
%   | | | then return 0.2564123687585871;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.25641236875858864;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | else return 0.2564123687585886;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.25641236875858814;  // std dev = 6,519, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
%   | | | else return 0.2564123687585859;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.2564123687585871;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.25641236875858564;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.20613740734453928;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.20613740734454142;  // std dev = 7,483, 224,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=112 */
%   | | | else return 0.20613740734453886;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.20613740734453925;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.20613740734454009;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734453773;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.20613740734453878;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2061374073445388;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.20613740734453911;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.16162857548414472;  // std dev = 0,500, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | else return 0.16162857548414766;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.16162857548414458;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.16162857548414492;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.1616285754841451;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414436;  // std dev = 6,519, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
%   | | | else return 0.1616285754841464;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414636;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.1616285754841461;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.12455597792082578;  // std dev = 0,500, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | else return 0.12455597792082056;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.12455597792082065;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.12455597792081927;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.12455597792081828;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.12455597792081789;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.12455597792081831;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.12455597792081945;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.1245559779208196;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.09492800936730394;  // std dev = 0,500, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | else return 0.0949280093673069;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.09492800936730673;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.09492800936730633;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.09492800936730572;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.09492800936730546;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.09492800936730568;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.0949280093673065;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.07186088850056371;  // std dev = 12,268, 602,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=301 */
%   | | | else return 0.07186088850055927;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.07186088850055826;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055904;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.07186088850055844;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | | else return 0.07186088850055881;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else return 0.07186088850055927;  // std dev = 0,500, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   else if ( follows(G, A) )
%   | then return 0.07186088850055886;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else return 0.0718608885005585;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.054183073759550615;  // std dev = 11,640, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | | else return 0.0541830737595485;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.05418307375954803;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | | | else return 0.05418307375954962;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | else return 0.05418307375954739;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954945;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.05418307375954947;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.05418307375954931;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.04076025323305957;  // std dev = 0,500, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | else return 0.040760253233056376;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.04076025323305601;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.040760253233056314;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.040760253233056126;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.04076025323305622;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.04076025323305621;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.040760253233056265;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 157.485 seconds
Total inference time: 1.188 seconds
AUC ROC: 0.5


Dataset: 21_yeast_twitter, Fold: 2, Type: scratch, Time: 05:48:31
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.188, 'Learning time': 157.485}


