Starting experiment #1 for 18_yeast_twitter

Start learning from source dataset

Source train facts examples: 15015
Source train pos examples: 369
Source train neg examples: 369

WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( location(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.3581489350995082;  // std dev = 9,798, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
%   | | else return 0.3581489350995134;  // std dev = 0,500, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( complex(A, E) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.3581489350995112;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(A, A) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then return 0.30874113578563717;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | else if ( interaction(C, A) )
%   | | then if ( phenotype(C, D) )
%   | | | then return 0.3087411357856349;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.3087411357856347;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.30874113578563744;  // std dev = 0,500, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   else if ( phenotype(A, E) )
%   | then return 0.3087411357856371;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( location(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.3087411357856348;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.3087411357856375;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.308741135785635;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.2564123687585859;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), proteinclass(E, F) )
%   | | | then return 0.2564123687585859;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585859;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( location(A, G) )
%   | | then if ( proteinclass(A, H) )
%   | | | then return 0.2564123687585859;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585856;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.256412368758586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, I) )
%   | | then return 0.2564123687585857;  // std dev = 0,500, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.2564123687585885;  // std dev = 0,500, 224,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=112 */
%   | else return 0.2564123687585887;  // std dev = 0,500, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.2061374073445392;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20613740734453923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.20613740734453914;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453886;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.20613740734453165;  // std dev = 0,500, 650,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=325 */
%   else if ( interaction(A, A) )
%   | then return 0.20613740734453945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.20613740734453878;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453911;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.2061374073445392;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then return 0.16162857548414658;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( proteinclass(A, C) )
%   | then if ( interaction(D, A) )
%   | | then if ( proteinclass(D, C) )
%   | | | then return 0.16162857548414836;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.16162857548414905;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.16162857548414766;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.16162857548414775;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.16162857548414777;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.16162857548414822;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.16162857548414788;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | | else return 0.16162857548414866;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.12455597792081918;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081918;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.12455597792081907;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792081906;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.12455597792081939;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, G) )
%   | then return 0.12455597792082275;  // std dev = 0,500, 650,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=325 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.12455597792081839;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081864;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.12455597792081884;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.09492800936730639;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730639;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.09492800936730672;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730651;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.09492800936730698;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0949280093673068;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.09492800936730793;  // std dev = 0,500, 240,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=120 */
%   | else return 0.0949280093673081;  // std dev = 0,500, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.07186088850055915;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.07186088850055895;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | | else return 0.07186088850055879;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else return 0.07186088850055873;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( proteinclass(A, E) )
%   | then return 0.07186088850055893;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.07186088850055893;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.0718608885005587;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.07186088850055851;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.07186088850055894;  // std dev = 6,403, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.054183073759548894;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.054183073759548867;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), proteinclass(F, G) )
%   | | | then return 0.054183073759548894;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.054183073759548894;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.054183073759549005;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05418307375954894;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   else if ( proteinclass(A, J) )
%   | then if ( interaction(A, K) )
%   | | then return 0.05418307375954928;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | else return 0.05418307375954949;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | else return 0.054183073759547264;  // std dev = 0,500, 434,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=217 */
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.040760253233055876;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04076025323305593;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.040760253233056;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305618;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.04076025323305599;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, H) )
%   | then return 0.040760253233059096;  // std dev = 0,500, 650,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=325 */
%   | else if ( complex(A, I) )
%   | | then return 0.04076025323305499;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.040760253233055564;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.04076025323305529;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */


Predicates from source: ['enzyme(protein,enz).', 'complex(protein,com).', 'location(protein,loc).', 'phenotype(protein,phe).', 'proteinclass(protein,class).', 'interaction(protein,protein).']

Starting fold 1

Target predicate: tweets 

Mapping Results
   Knowledge compiling time   = 0.1500077247619629
   Generating paths time   = 2.256267547607422
   Generating mappings time   = 0.15183496475219727
   Possible mappings   = 1876
   Finding best mapping   = 0.8491721153259277
   Total time   = 3.407288074493408


Best mapping found: ['phenotype(A,B) -> typeaccount(B,A)', 'location(A,B) -> accounttype(A,B)', 'enzyme(A,B) -> tweets(A,B)', 'interaction(A,B) -> follows(B,A)', 'proteinclass(A,B) -> follows(A,B)', 'complex(A,B) -> typeaccount(B,A)'] 

Transferred target predicate: tweets 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;tweets(A, B) :- accounttype(A, C).;true;true
0;true,true;accounttype(D, C).;true;false
0;false,false,false;follows(G, A).;false;false
0;false,false;typeaccount(F, A).;false;true
0;true,false;typeaccount(E, A).;false;false
0;false;follows(A, A).;false;true
0;true,true,true;follows(D, A).;false;false
0;true;follows(A, D).;true;true
1;;tweets(A, B) :- follows(C, A).;true;true
1;false,false,true;follows(A, G).;false;false
1;false,false,false;follows(A, H), follows(H, I).;false;false
1;false,false;accounttype(A, F).;true;true
1;false;typeaccount(E, A).;false;true
1;true;follows(C, C).;false;true
1;true,false;follows(A, C).;true;false
1;true,false,true;typeaccount(D, C).;false;false
2;;tweets(A, B) :- follows(A, A).;true;true
2;true,true;follows(A, D).;false;true
2;true,true,false;follows(E, A), follows(E, F).;false;false
2;false;follows(I, A).;true;false
2;true,false;accounttype(A, G).;true;false
2;false,true;follows(I, I).;false;false
2;true,false,true;follows(A, H).;false;false
2;true;typeaccount(C, A).;true;true
3;;tweets(A, B) :- accounttype(A, C).;true;true
3;true,true;follows(A, D).;true;true
3;true,true,false;typeaccount(F, A).;false;false
3;false,false;follows(A, G).;true;false
3;false,false,true;follows(G, G).;false;false
3;false;follows(A, A).;false;true
3;true,true,true;typeaccount(E, A).;false;false
3;true;follows(A, A).;true;false
4;;tweets(A, B) :- follows(A, A).;false;true
4;false,true,true;follows(D, C).;false;false
4;false,false,true;follows(A, F).;false;false
4;false,false,false;typeaccount(G, A).;false;false
4;false,false;follows(F, A).;true;true
4;false,true,false;typeaccount(E, A).;false;false
4;false,true;follows(A, D).;true;true
4;false;follows(A, C).;true;true
5;;tweets(A, B) :- follows(A, A).;true;true
5;true,true;follows(A, D).;true;true
5;true,true,false;typeaccount(F, A).;false;false
5;false,false;follows(A, H).;true;false
5;false,false,true;follows(H, H).;false;false
5;false;accounttype(A, G).;false;true
5;true,true,true;typeaccount(E, A).;false;false
5;true;accounttype(A, C).;true;false
6;;tweets(A, B) :- follows(A, A).;true;true
6;true,true;typeaccount(D, A).;true;true
6;true,true,false;follows(F, A), typeaccount(G, F).;false;false
6;false,true,true;follows(H, H).;false;false
6;false,true;follows(A, H).;true;false
6;false;follows(H, A).;true;false
6;true,true,true;follows(A, E).;false;false
6;true;accounttype(A, C).;true;false
7;;tweets(A, B) :- follows(C, A).;true;true
7;false,false,true;typeaccount(G, A).;false;false
7;false,false,false;typeaccount(H, A).;false;false
7;false,false;typeaccount(F, A).;true;true
7;false;follows(A, E).;false;true
7;true;follows(A, C).;false;true
7;true,false;follows(D, C).;true;false
7;true,false,true;follows(C, D).;false;false
8;;tweets(A, B) :- follows(A, A).;true;true
8;true,true;typeaccount(D, A).;false;false
8;false;follows(A, J).;true;false
8;true,false;typeaccount(E, A).;true;true
8;false,true;follows(K, A).;false;false
8;true,false,true;follows(A, F), follows(F, G).;false;false
8;true,false,false;follows(H, A), typeaccount(I, H).;false;false
8;true;follows(A, C).;true;true
9;;tweets(A, B) :- follows(A, A).;true;true
9;true,true;typeaccount(D, A).;true;true
9;true,true,false;follows(F, A), typeaccount(G, F).;false;false
9;false,false,false;follows(J, A).;false;false
9;false,false;typeaccount(I, A).;false;true
9;false;accounttype(A, H).;false;true
9;true,true,true;follows(A, E).;false;false
9;true;accounttype(A, C).;true;false


WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, D) )
%   | then if ( accounttype(D, C) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.3581489350995077;  // std dev = 13,802, 762,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=381 */
%   | | | else return 0.3581489350995135;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | else return 0.3581489350995085;  // std dev = 8,573, 294,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=147 */
%   | else if ( typeaccount(E, A) )
%   | | then return 0.3581489350995135;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, C) )
%   | | then if ( typeaccount(D, C) )
%   | | | then return 0.3087411357856261;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856375;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   else if ( typeaccount(E, A) )
%   | then return 0.3087411357856372;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25641236875856854;  // std dev = 17,436, 1.216,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=608 */
%   | else return 0.25641236875858814;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20613740734455427;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.16162857548414486;  // std dev = 16,233, 1.054,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=527 */
%   | | | else return 0.16162857548414655;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(E, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16162857548414572;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then return 0.12455597792081591;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(A, C) )
%   | | then if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0949280093673188;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | else return 0.09492800936730812;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | else return 0.09492800936730372;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.0718608885005657;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.0718608885005594;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055943;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, E) )
%   | then return 0.0718608885005565;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(D, A) )
%   | | then return 0.05418307375955153;  // std dev = 16,340, 1.068,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=534 */
%   | | else return 0.054183073759546764;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | else return 0.05418307375955058;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then return 0.04076025323305043;  // std dev = 18,358, 1.348,000 (wgt'ed) examples reached here.  /* #neg=674 #pos=674 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695325
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 104.705 seconds
Total inference time: 0.968 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['tweets(A, B)', {'': 'accounttype(A, C)', 'true,true': 'accounttype(D, C)', 'true,true,true': 'follows(D, A)', 'true': 'follows(A, D)', 'true,false': 'typeaccount(E, A)'}, {'true,true,false': [8.573, 147, 147], 'true,true,true,true': [13.802, 381, 381], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [6.083, 74, 74], 'true,true,true,false': [6.0, 72, 72]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, C)', 'true,false': 'follows(A, C)', 'true,false,true': 'typeaccount(D, C)', 'false': 'typeaccount(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [15.922, 507, 507], 'true,false,false': [7.106, 101, 101], 'false,true': [5.745, 66, 66], 'false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,true': 'follows(C, C)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [17.436, 608, 608], 'true': [0.0, 0, 0], 'false,false': [5.745, 66, 66]}], ['tweets(A, B)', {'': 'accounttype(A, C)', 'true': 'follows(A, A)'}, {'true,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false': [18.358, 674, 674]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false,true,true': 'follows(D, C)', 'false,false,true': 'follows(A, E)', 'false': 'follows(A, C)', 'false,true': 'follows(A, D)', 'false,false': 'follows(E, A)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,true': [16.233, 527, 527], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,true,true,false': [6.042, 73, 73], 'true': [0.0, 0, 0], 'false,false,true,false': [6.083, 74, 74]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'accounttype(A, C)'}, {'false,true': [18.358, 674, 674], 'false,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,true,true': 'follows(C, C)', 'false,true': 'follows(A, C)'}, {'false,true,false': [7.106, 101, 101], 'false,true,true,false': [15.922, 507, 507], 'false,true,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false': [5.745, 66, 66]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true': 'follows(A, C)', 'true,false': 'follows(D, C)', 'true,false,true': 'follows(C, D)', 'false': 'follows(A, E)'}, {'true,true': [15.922, 507, 507], 'true,false,true,true': [6.745, 91, 91], 'true,false,false': [2.236, 10, 10], 'false,true': [5.745, 66, 66], 'false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(A, C)', 'false,true': 'follows(D, A)'}, {'false,true,true': [16.34, 534, 534], 'false,true,false': [5.745, 66, 66], 'true': [0.0, 0, 0], 'false,false': [6.083, 74, 74]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'accounttype(A, C)'}, {'false,true': [18.358, 674, 674], 'false,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}]]
[{'': [0.2499999999999936, nan], 'true,true': [0.24999999999999062, 0.25000000000000405], 'true,true,true': [0.2499999999999889, 0.2499999999999995], 'true': [0.24999999999999284, 0.24999999999999947], 'true,false': [0.24999999999999947, nan]}, {'': [0.25000000000000716, 0.24999999999999764], 'true,false,true': [0.2500000000000083, nan], 'true': [nan, 0.25000000000000716], 'false': [0.24999999999999764, nan], 'true,false': [0.2500000000000083, 0.25000000000000056]}, {'': [nan, 0.2499999999999991], 'false': [0.24999999999999992, 0.25000000000000006], 'false,true': [nan, 0.24999999999999992]}, {'': [0.2500000000000044, nan], 'true': [nan, 0.2500000000000044]}, {'': [nan, 0.24999999999999392], 'false,true,true': [0.24999999999999395, 0.24999999999999908], 'false,false,true': [nan, 0.24999999999999967], 'false,false': [0.24999999999999967, nan], 'false,true': [0.24999999999999015, nan], 'false': [0.24999999999999015, 0.24999999999999967]}, {'': [nan, 0.2500000000000085], 'false': [0.2500000000000085, nan]}, {'': [nan, 0.24999999999999392], 'false': [0.2499999999999922, 0.2500000000000008], 'false,true,true': [nan, 0.24999999999999745], 'false,true': [0.24999999999999745, 0.24999999999999867]}, {'': [0.25, 0.25000000000000044], 'false': [0.25000000000000044, nan], 'true': [0.2500000000000009, 0.2500000000000009], 'true,false,true': [0.25000000000000083, nan], 'true,false': [0.25000000000000083, 0.25]}, {'': [nan, 0.2500000000000064], 'false': [0.250000000000006, 0.25000000000000033], 'false,true': [0.25000000000000566, 0.2500000000000008]}, {'': [nan, 0.24999999999999245], 'false': [0.24999999999999245, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;tweets(A, B) :- accounttype(A, C).;true;true', '0;true,true;accounttype(D, C).;true;true', '0;true,true,true;follows(D, A).;true;true', '0;true;follows(A, D).;true;true', '0;true,false;typeaccount(E, A).;true;true', '1;;tweets(A, B) :- follows(C, A).;true;true', '1;true,false,true;typeaccount(D, C).;true;true', '1;true;follows(C, C).;true;true', '1;false;typeaccount(E, A).;true;true', '1;true,false;follows(A, C).;true;true', '2;;tweets(A, B) :- follows(A, A).;true;true', '2;false;follows(C, A).;true;true', '2;false,true;follows(C, C).;true;true', '3;;tweets(A, B) :- accounttype(A, C).;true;true', '3;true;follows(A, A).;true;true', '4;;tweets(A, B) :- follows(A, A).;true;true', '4;false,true,true;follows(D, C).;true;true', '4;false,false,true;follows(A, E).;true;true', '4;false,false;follows(E, A).;true;true', '4;false,true;follows(A, D).;true;true', '4;false;follows(A, C).;true;true', '5;;tweets(A, B) :- follows(A, A).;true;true', '5;false;accounttype(A, C).;true;true', '6;;tweets(A, B) :- follows(A, A).;true;true', '6;false;follows(C, A).;true;true', '6;false,true,true;follows(C, C).;true;true', '6;false,true;follows(A, C).;true;true', '7;;tweets(A, B) :- follows(C, A).;true;true', '7;true,false,true;follows(C, D).;true;true', '7;true;follows(A, C).;true;true', '7;false;follows(A, E).;true;true', '7;true,false;follows(D, C).;true;true', '8;;tweets(A, B) :- follows(A, A).;true;true', '8;false;follows(A, C).;true;true', '8;false,true;follows(D, A).;true;true', '9;;tweets(A, B) :- follows(A, A).;true;true', '9;false;accounttype(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, D) )
%   | then if ( accounttype(D, C) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.3581489350995077;  // std dev = 13,802, 762,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=381 */
%   | | | else return 0.3581489350995135;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3581489350995092;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | | else return 0.35814893509951307;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else if ( typeaccount(F, A) )
%   | | then return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, C) )
%   | | then if ( typeaccount(D, C) )
%   | | | then return 0.3087411357856261;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, E) )
%   | | | then return 0.3087411357856347;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.30874113578563733;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   else if ( typeaccount(F, A) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.3087411357856347;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, D) )
%   | | | then return 0.25641236875856965;  // std dev = 16,340, 1.068,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=534 */
%   | | | else return 0.2564123687585881;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.25641236875858575;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.2564123687585858;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.25641236875858575;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(D, A) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.20613740734455413;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.20613740734454142;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | else if ( follows(A, E), follows(E, F) )
%   | | | then return 0.20613740734453895;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.20613740734453978;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.16162857548414486;  // std dev = 16,233, 1.054,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=527 */
%   | | | else return 0.16162857548414777;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(E, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1616285754841443;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.1245559779208249;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.12455597792082146;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | else return 0.12455597792081889;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(A, C) )
%   | | then if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936731824;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.09492800936731059;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.09492800936730614;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.0949280093673068;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.09492800936730639;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.09492800936730636;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.07186088850056227;  // std dev = 0,500, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | else if ( follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.0718608885005594;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056116;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, E) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.07186088850055887;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.07186088850055816;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.07186088850055769;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(A, C) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(A, E), follows(E, A) )
%   | | | then return 0.054183073759552114;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.0541830737595521;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else if ( follows(A, F), follows(F, G) )
%   | | | then return 0.054183073759549484;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.05418307375954923;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else return 0.054183073759548256;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.04076025323305689;  // std dev = 15,922, 1.014,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=507 */
%   | | | else return 0.04076025323305638;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | else return 0.040760253233055356;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695325
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 110.887 seconds
Total inference time: 1.307 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 18_yeast_twitter, Fold: 1, Type: transfer, Time: 04:47:22
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695325, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 0.968, 'Learning time': 104.705}, 'CLL': -0.695325, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.307, 'Mapping results': {'Total time': 3.407288074493408, 'Possible mappings': 1876, 'Finding best mapping': 0.8491721153259277, 'Knowledge compiling time': 0.1500077247619629, 'Generating paths time': 2.256267547607422, 'Generating mappings time': 0.15183496475219727}, 'Learning time': 215.59199999999998}


Start learning from scratch in target domain

Target train facts examples: 1032
Target train pos examples: 674
Target train neg examples: 674

Target test facts examples: 1020
Target test pos examples: 698
Target test neg examples: 698

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.35814893509950757;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.3581489350995113;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951334;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.3581489350995112;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.30874113578562684;  // std dev = 13,874, 770,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=385 */
%   | | | else return 0.3087411357856348;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.30874113578563744;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | | else return 0.3087411357856347;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.30874113578563706;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.3087411357856351;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856347;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.30874113578563733;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.2564123687585749;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.2564123687585864;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( follows(C, E), follows(E, A) )
%   | | | then return 0.2564123687585871;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.2564123687585861;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585876;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.25641236875858653;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585865;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.2564123687585881;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.20613740734455155;  // std dev = 0,500, 826,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=413 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.206137407344542;  // std dev = 6,000, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | | | else return 0.2061374073445403;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( follows(F, C) )
%   | | then return 0.20613740734454125;  // std dev = 0,500, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else return 0.20613740734453861;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.20613740734453861;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20613740734453875;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.20613740734453861;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.20613740734453992;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.16162857548414486;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.16162857548414447;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( follows(C, E), follows(E, A) )
%   | | | then return 0.16162857548414578;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414747;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.1616285754841464;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414458;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.1616285754841465;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414758;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.1616285754841443;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.124555977920828;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.1245559779208181;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else return 0.12455597792081925;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( follows(C, E) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.12455597792081961;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.12455597792081927;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081925;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.12455597792081889;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.09492800936731505;  // std dev = 14,950, 894,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=447 */
%   | | | else return 0.09492800936730553;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( accounttype(A, E), accounttype(C, E) )
%   | | | then return 0.09492800936730672;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0949280093673069;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.09492800936730689;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.0949280093673065;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730673;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0.09492800936730614;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.07186088850056194;  // std dev = 0,500, 966,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=483 */
%   | | else return 0.07186088850055887;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.0718608885005589;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.07186088850055797;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.07186088850055845;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(A, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.07186088850055843;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.07186088850055838;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.0718608885005587;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.07186088850055902;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375955258;  // std dev = 13,874, 770,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=385 */
%   | | | else return 0.05418307375954675;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.05418307375954678;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.054183073759548436;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.05418307375954922;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0541830737595494;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.05418307375954961;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else return 0.054183073759548304;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.040760253233058284;  // std dev = 13,874, 770,000 (wgt'ed) examples reached here.  /* #neg=385 #pos=385 */
%   | | | else return 0.04076025323305436;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.04076025323305548;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.040760253233055835;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.040760253233055994;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305628;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.04076025323305634;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else return 0.040760253233055564;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 177.84199999999998 seconds
Total inference time: 1.312 seconds
AUC ROC: 0.5


Dataset: 18_yeast_twitter, Fold: 1, Type: scratch, Time: 04:50:21
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.312, 'Learning time': 177.84199999999998}


Starting fold 2

Target predicate: tweets 

Mapping Results
   Knowledge compiling time   = 0.11661291122436523
   Generating paths time   = 1.957808494567871
   Generating mappings time   = 0.11986613273620605
   Possible mappings   = 1876
   Finding best mapping   = 0.7748010158538818
   Total time   = 2.9690945148468018


Best mapping found: ['phenotype(A,B) -> follows(A,B)', 'location(A,B) -> accounttype(A,B)', 'enzyme(A,B) -> tweets(A,B)', 'interaction(A,B) -> follows(B,A)', 'proteinclass(A,B) -> typeaccount(B,A)', 'complex(A,B) -> typeaccount(B,A)'] 

Transferred target predicate: tweets 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;tweets(A, B) :- accounttype(A, C).;true;true
0;true,true;accounttype(D, C).;true;false
0;false,false,false;follows(G, A).;false;false
0;false,false;typeaccount(F, A).;false;true
0;true,false;typeaccount(E, A).;false;false
0;false;follows(A, A).;false;true
0;true,true,true;follows(D, A).;false;false
0;true;follows(A, D).;true;true
1;;tweets(A, B) :- follows(C, A).;true;true
1;false,false,true;typeaccount(G, A).;false;false
1;false,false,false;follows(A, H), follows(H, I).;false;false
1;false,false;accounttype(A, F).;true;true
1;false;follows(A, E).;false;true
1;true;follows(C, C).;false;true
1;true,false;follows(A, C).;true;false
1;true,false,true;follows(C, D).;false;false
2;;tweets(A, B) :- follows(A, A).;true;true
2;true,true;typeaccount(D, A).;false;true
2;true,true,false;follows(E, A), typeaccount(F, E).;false;false
2;false;follows(I, A).;true;false
2;true,false;accounttype(A, G).;true;false
2;false,true;follows(I, I).;false;false
2;true,false,true;typeaccount(H, A).;false;false
2;true;follows(A, C).;true;true
3;;tweets(A, B) :- accounttype(A, C).;true;true
3;true,true;typeaccount(D, A).;true;true
3;true,true,false;follows(A, F).;false;false
3;false,false;follows(A, G).;true;false
3;false,false,true;follows(G, G).;false;false
3;false;follows(A, A).;false;true
3;true,true,true;follows(A, E).;false;false
3;true;follows(A, A).;true;false
4;;tweets(A, B) :- follows(A, A).;false;true
4;false,true,true;typeaccount(C, D).;false;false
4;false,false,true;follows(A, F).;false;false
4;false,false,false;follows(A, G).;false;false
4;false,false;follows(F, A).;true;true
4;false,true,false;typeaccount(E, A).;false;false
4;false,true;follows(A, D).;true;true
4;false;typeaccount(C, A).;true;true
5;;tweets(A, B) :- follows(A, A).;true;true
5;true,true;typeaccount(D, A).;true;true
5;true,true,false;follows(A, F).;false;false
5;false,false;follows(A, H).;true;false
5;false,false,true;follows(H, H).;false;false
5;false;accounttype(A, G).;false;true
5;true,true,true;follows(A, E).;false;false
5;true;accounttype(A, C).;true;false
6;;tweets(A, B) :- follows(A, A).;true;true
6;true,true;follows(A, D).;true;true
6;true,true,false;follows(F, A), typeaccount(G, F).;false;false
6;false,true,true;follows(H, H).;false;false
6;false,true;follows(A, H).;true;false
6;false;follows(H, A).;true;false
6;true,true,true;typeaccount(E, A).;false;false
6;true;accounttype(A, C).;true;false
7;;tweets(A, B) :- follows(C, A).;true;true
7;false,false,true;typeaccount(G, A).;false;false
7;false,false,false;typeaccount(H, A).;false;false
7;false,false;follows(A, F).;true;true
7;false;typeaccount(E, A).;false;true
7;true;follows(A, C).;false;true
7;true,false;follows(D, C).;true;false
7;true,false,true;follows(C, D).;false;false
8;;tweets(A, B) :- follows(A, A).;true;true
8;true,true;follows(A, D).;false;false
8;false;typeaccount(J, A).;true;false
8;true,false;follows(A, E).;true;true
8;false,true;follows(K, A).;false;false
8;true,false,true;follows(A, F), typeaccount(G, F).;false;false
8;true,false,false;follows(H, A), follows(H, I).;false;false
8;true;typeaccount(C, A).;true;true
9;;tweets(A, B) :- follows(A, A).;true;true
9;true,true;follows(A, D).;true;true
9;true,true,false;follows(F, A), typeaccount(G, F).;false;false
9;false,false,false;follows(J, A).;false;false
9;false,false;typeaccount(I, A).;false;true
9;false;accounttype(A, H).;false;true
9;true,true,true;typeaccount(E, A).;false;false
9;true;accounttype(A, C).;true;false


WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, D) )
%   | then if ( accounttype(D, C) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.3581489350995078;  // std dev = 12,610, 636,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=318 */
%   | | | else return 0.3581489350995092;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | else return 0.3581489350995082;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
%   | else if ( typeaccount(E, A) )
%   | | then return 0.35814893509951023;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.30874113578562645;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578563767;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, E) )
%   | then return 0.3087411357856376;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | else if ( accounttype(A, F) )
%   | | then if ( typeaccount(G, A) )
%   | | | then return 0.3087411357856349;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25641236875856904;  // std dev = 16,941, 1.148,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=574 */
%   | else return 0.2564123687585886;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20613740734455416;  // std dev = 18,682, 1.396,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=698 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( typeaccount(C, A) )
%   | then if ( follows(A, D) )
%   | | then if ( typeaccount(C, D) )
%   | | | then return 0.16162857548414503;  // std dev = 14,457, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | | | else return 0.1616285754841451;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
%   | | else if ( typeaccount(E, A) )
%   | | | then return 0.16162857548414514;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then return 0.12455597792081428;  // std dev = 18,682, 1.396,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=698 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(A, C) )
%   | | then if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936731775;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | else return 0.09492800936730832;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | else return 0.09492800936730712;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.07186088850056573;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.07186088850056034;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056097;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( typeaccount(E, A) )
%   | then return 0.07186088850055734;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( typeaccount(C, A) )
%   | then if ( follows(D, A) )
%   | | then return 0.054183073759549984;  // std dev = 16,941, 1.148,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=574 */
%   | | else return 0.05418307375954639;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then return 0.04076025323304983;  // std dev = 18,682, 1.396,000 (wgt'ed) examples reached here.  /* #neg=698 #pos=698 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 164.796 seconds
Total inference time: 0.964 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['tweets(A, B)', {'': 'accounttype(A, C)', 'true,true': 'accounttype(D, C)', 'true,true,true': 'follows(D, A)', 'true': 'follows(A, D)', 'true,false': 'typeaccount(E, A)'}, {'true,true,false': [9.849, 194, 194], 'true,true,true,true': [12.61, 318, 318], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [6.557, 86, 86], 'true,true,true,false': [7.071, 100, 100]}], ['tweets(A, B)', {'': 'follows(C, A)', 'false,false,true': 'typeaccount(G, A)', 'true,false,true': 'follows(C, D)', 'false': 'follows(A, E)', 'false,false': 'accounttype(A, F)', 'true,false': 'follows(A, C)', 'true': 'follows(C, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [14.832, 440, 440], 'false,false,false': [0.0, 0, 0], 'true,false,false': [8.185, 134, 134], 'false,true': [7.382, 109, 109], 'false,false,true,true': [2.739, 15, 15], 'true,false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,true': 'follows(C, C)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [16.941, 574, 574], 'true': [0.0, 0, 0], 'false,false': [7.874, 124, 124]}], ['tweets(A, B)', {'': 'accounttype(A, C)', 'true': 'follows(A, A)'}, {'true,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false': [18.682, 698, 698]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'typeaccount(C, A)', 'false,true,true': 'typeaccount(C, D)', 'false,true,false': 'typeaccount(E, A)', 'false,true': 'follows(A, D)'}, {'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [6.557, 86, 86], 'false,true,true,true': [14.457, 418, 418], 'false,false': [0.0, 0, 0], 'false,true,true,false': [9.849, 194, 194], 'true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'accounttype(A, C)'}, {'false,true': [18.682, 698, 698], 'false,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'follows(C, A)', 'false,true,true': 'follows(C, C)', 'false,true': 'follows(A, C)'}, {'false,true,false': [8.185, 134, 134], 'false,true,true,false': [14.832, 440, 440], 'false,true,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,false': [7.874, 124, 124]}], ['tweets(A, B)', {'': 'follows(C, A)', 'true': 'follows(A, C)', 'true,false': 'follows(D, C)', 'true,false,true': 'follows(C, D)', 'false': 'typeaccount(E, A)'}, {'true,true': [14.832, 440, 440], 'true,false,true,true': [7.842, 123, 123], 'true,false,false': [2.345, 11, 11], 'false,true': [7.874, 124, 124], 'false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'typeaccount(C, A)', 'false,true': 'follows(D, A)'}, {'false,true,true': [16.941, 574, 574], 'false,true,false': [7.874, 124, 124], 'true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['tweets(A, B)', {'': 'follows(A, A)', 'false': 'accounttype(A, C)'}, {'false,true': [18.682, 698, 698], 'false,false': [0.0, 0, 0], 'true': [0.0, 0, 0]}]]
[{'': [0.2500000000000222, nan], 'true,true': [0.24999999999998987, 0.25000000000000394], 'true,true,true': [0.2500000000000023, 0.25000000000000283], 'true': [0.24999999999999295, 0.25000000000000167], 'true,false': [0.25000000000000167, nan]}, {'': [0.2500000000000075, 0.2500000000000004], 'false,false,true': [0.2500000000000004, nan], 'false,false': [0.2500000000000004, nan], 'false': [0.2500000000000005, 0.2500000000000004], 'true': [nan, 0.2500000000000075], 'true,false': [0.2500000000000095, 0.25000000000000033], 'true,false,true': [0.2500000000000095, nan]}, {'': [nan, 0.24999999999999942], 'false': [0.25000000000000017, 0.2499999999999964], 'false,true': [nan, 0.25000000000000017]}, {'': [0.25000000000000344, nan], 'true': [nan, 0.25000000000000344]}, {'': [nan, 0.24999999999999561], 'false': [0.24999999999999561, nan], 'false,true,true': [0.25000000000000105, 0.2500000000000001], 'false,true': [0.2499999999999915, 0.2500000000000004], 'false,true,false': [0.2500000000000004, nan]}, {'': [nan, 0.25000000000000855], 'false': [0.25000000000000855, nan]}, {'': [nan, 0.24999999999999384], 'false': [0.24999999999999534, 0.2500000000000005], 'false,true,true': [nan, 0.2499999999999996], 'false,true': [0.2499999999999996, 0.24999999999999953]}, {'': [0.2500000000000002, 0.2500000000000003], 'false': [0.2500000000000003, nan], 'true': [0.2500000000000017, 0.24999999999999942], 'true,false,true': [0.24999999999999875, nan], 'true,false': [0.24999999999999875, 0.25]}, {'': [nan, 0.2500000000000065], 'false': [0.2500000000000065, nan], 'false,true': [0.25000000000000616, 0.25000000000000056]}, {'': [nan, 0.24999999999999348], 'false': [0.24999999999999348, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;tweets(A, B) :- accounttype(A, C).;true;true', '0;true,true;accounttype(D, C).;true;true', '0;true,true,true;follows(D, A).;true;true', '0;true;follows(A, D).;true;true', '0;true,false;typeaccount(E, A).;true;true', '1;;tweets(A, B) :- follows(C, A).;true;true', '1;false,false,true;typeaccount(G, A).;true;true', '1;false,false;accounttype(A, F).;true;true', '1;false;follows(A, E).;true;true', '1;true;follows(C, C).;true;true', '1;true,false;follows(A, C).;true;true', '1;true,false,true;follows(C, D).;true;true', '2;;tweets(A, B) :- follows(A, A).;true;true', '2;false;follows(C, A).;true;true', '2;false,true;follows(C, C).;true;true', '3;;tweets(A, B) :- accounttype(A, C).;true;true', '3;true;follows(A, A).;true;true', '4;;tweets(A, B) :- follows(A, A).;true;true', '4;false;typeaccount(C, A).;true;true', '4;false,true,true;typeaccount(C, D).;true;true', '4;false,true;follows(A, D).;true;true', '4;false,true,false;typeaccount(E, A).;true;true', '5;;tweets(A, B) :- follows(A, A).;true;true', '5;false;accounttype(A, C).;true;true', '6;;tweets(A, B) :- follows(A, A).;true;true', '6;false;follows(C, A).;true;true', '6;false,true,true;follows(C, C).;true;true', '6;false,true;follows(A, C).;true;true', '7;;tweets(A, B) :- follows(C, A).;true;true', '7;true,false,true;follows(C, D).;true;true', '7;true;follows(A, C).;true;true', '7;false;typeaccount(E, A).;true;true', '7;true,false;follows(D, C).;true;true', '8;;tweets(A, B) :- follows(A, A).;true;true', '8;false;typeaccount(C, A).;true;true', '8;false,true;follows(D, A).;true;true', '9;;tweets(A, B) :- follows(A, A).;true;true', '9;false;accounttype(A, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, D) )
%   | then if ( accounttype(D, C) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.3581489350995078;  // std dev = 12,610, 636,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=318 */
%   | | | else return 0.3581489350995092;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.35814893509950885;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | | else return 0.35814893509951334;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else if ( typeaccount(F, A) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.35814893509951345;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | | | else return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.30874113578562645;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, E) )
%   | | | then return 0.3087411357856372;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.3087411357856373;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else if ( follows(A, F) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then return 0.30874113578563744;  // std dev = 0,500, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( accounttype(A, I) )
%   | | then return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(C, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, D) )
%   | | | then return 0.2564123687585702;  // std dev = 15,859, 1.006,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=503 */
%   | | | else return 0.256412368758588;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else if ( follows(A, E) )
%   | | then if ( follows(E, F) )
%   | | | then return 0.2564123687585883;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.25641236875858575;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( accounttype(A, C) )
%   then if ( follows(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.20613740734455374;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0.20613740734454195;  // std dev = 9,274, 344,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.20613740734454075;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | | | else return 0.20613740734453984;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( typeaccount(C, A) )
%   | then if ( follows(A, D) )
%   | | then if ( typeaccount(C, D) )
%   | | | then return 0.16162857548414503;  // std dev = 14,457, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | | | else return 0.16162857548414555;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
%   | | else if ( typeaccount(E, A) )
%   | | | then return 0.16162857548414455;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.12455597792082847;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0.12455597792082095;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | else if ( follows(A, E) )
%   | | | then return 0.1245559779208202;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.12455597792082004;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( follows(C, A) )
%   | then if ( follows(A, C) )
%   | | then if ( follows(C, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09492800936731711;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.09492800936731062;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.09492800936730576;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | else if ( follows(A, E) )
%   | | then if ( follows(E, F) )
%   | | | then return 0.09492800936730653;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.09492800936730639;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.09492800936730719;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then return 0.07186088850056127;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.07186088850055955;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850056126;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( typeaccount(E, A) )
%   | then if ( follows(A, F) )
%   | | then if ( follows(F, G) )
%   | | | then return 0.07186088850055813;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.07186088850055816;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.07186088850055874;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( typeaccount(C, A) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.05418307375955227;  // std dev = 15,859, 1.006,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=503 */
%   | | | else return 0.05418307375954836;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.054183073759547055;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.05418307375954967;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( accounttype(A, C) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.04076025323305858;  // std dev = 14,832, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | | | else return 0.040760253233057646;  // std dev = 9,274, 344,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.040760253233055224;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   | | | else return 0.04076025323305637;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 97.318 seconds
Total inference time: 1.506 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 18_yeast_twitter, Fold: 2, Type: transfer, Time: 04:54:49
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 0.964, 'Learning time': 164.796}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.506, 'Mapping results': {'Total time': 2.9690945148468018, 'Possible mappings': 1876, 'Finding best mapping': 0.7748010158538818, 'Knowledge compiling time': 0.11661291122436523, 'Generating paths time': 1.957808494567871, 'Generating mappings time': 0.11986613273620605}, 'Learning time': 262.114}


Start learning from scratch in target domain

Target train facts examples: 1020
Target train pos examples: 698
Target train neg examples: 698

Target test facts examples: 1032
Target test pos examples: 674
Target test neg examples: 674

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.35814893509950757;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.35814893509951345;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | | else return 0.3581489350995133;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.3581489350995134;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.30874113578562795;  // std dev = 11,640, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | | else return 0.3087411357856351;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3087411357856376;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | | | else return 0.30874113578563506;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | else if ( follows(C, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.3087411357856373;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | | else return 0.308741135785637;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.3087411357856347;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.3087411357856347;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else return 0.3087411357856374;  // std dev = 0,500, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.256412368758589;  // std dev = 11,640, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | | else return 0.25641236875858847;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( follows(A, E), follows(C, E) )
%   | | | then return 0.2564123687585885;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | | else return 0.25641236875858814;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else return 0.2564123687585886;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.25641236875858814;  // std dev = 6,519, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
%   | | | else return 0.2564123687585859;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.2564123687585871;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.25641236875858564;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.20613740734453934;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.20613740734454142;  // std dev = 7,483, 224,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=112 */
%   | | | else return 0.20613740734453886;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.20613740734453925;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.20613740734454009;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734453773;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.20613740734453878;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2061374073445388;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.20613740734453911;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.1616285754841448;  // std dev = 13,820, 764,000 (wgt'ed) examples reached here.  /* #neg=382 #pos=382 */
%   | | | else return 0.16162857548414772;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.16162857548414766;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then return 0.1616285754841445;  // std dev = 0,500, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | else return 0.1616285754841451;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414436;  // std dev = 6,519, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
%   | | | else return 0.1616285754841464;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414636;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.1616285754841461;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.12455597792082425;  // std dev = 0,500, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | else return 0.12455597792082056;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.12455597792081857;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12455597792082061;  // std dev = 7,583, 230,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=115 */
%   | | else return 0.12455597792081828;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.12455597792081789;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.12455597792081831;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.12455597792081945;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.1245559779208196;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.09492800936731033;  // std dev = 0,500, 818,000 (wgt'ed) examples reached here.  /* #neg=409 #pos=409 */
%   | | else return 0.0949280093673069;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.09492800936730673;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.09492800936730598;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.09492800936730572;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.09492800936730546;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.09492800936730568;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.0949280093673065;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.07186088850056074;  // std dev = 12,268, 602,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=301 */
%   | | | else return 0.07186088850055813;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else return 0.071860888500559;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( follows(C, E) )
%   | | then return 0.07186088850055836;  // std dev = 0,500, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | else return 0.07186088850055927;  // std dev = 0,500, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.07186088850055879;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.07186088850055805;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850055827;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.0718608885005585;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then if ( follows(D, C) )
%   | | | then return 0.054183073759548936;  // std dev = 11,640, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | | else return 0.05418307375954812;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.05418307375954772;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | | | else return 0.054183073759548964;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | else return 0.05418307375954739;  // std dev = 0,500, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954945;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | | else return 0.05418307375954947;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.05418307375954931;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.040760253233059505;  // std dev = 0,500, 880,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=440 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.04076025323305576;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | | else return 0.04076025323305627;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.040760253233056494;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.040760253233056265;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.040760253233056;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04076025323305654;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 217.463 seconds
Total inference time: 1.046 seconds
AUC ROC: 0.5


Dataset: 18_yeast_twitter, Fold: 2, Type: scratch, Time: 04:58:28
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.046, 'Learning time': 217.463}


