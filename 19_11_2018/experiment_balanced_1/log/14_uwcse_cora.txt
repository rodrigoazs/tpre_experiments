Starting experiment #1 for 14_uwcse_cora

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(N, B) )
%   | | | then return 0.7734031723876481;  // std dev = 2,139, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 7,30e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5261862825807958;  // std dev = 0,883, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.730924492272118;  // std dev = 0,069, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | | then return 0.36908066213317675;  // std dev = 1,530, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6022753891158077;  // std dev = 2,439, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, A, G) )
%   | | then return 0.4104895662080564;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5668366200721044;  // std dev = 0,087, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.5081090089455164;  // std dev = 0,915, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3024623706773498;  // std dev = 1,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.5171363622026371;  // std dev = 1,893, 50,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.41333218051658055;  // std dev = 1,254, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( professor(B) )
%   | then if ( publication(L, B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.0551230450865158;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.43606280623756677;  // std dev = 0,132, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.3662773650495891;  // std dev = 0,909, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.4243424792222195;  // std dev = 0,043, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( publication(J, A) )
%   | | then if ( hasposition(K, C), publication(J, K) )
%   | | | then return 0.10550717037737643;  // std dev = 1,665, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.5245116684321666;  // std dev = 0,156, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.4073744257008209;  // std dev = 1,644, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.23264390853184744;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( professor(B) )
%   | then return -0.06169471073240645;  // std dev = 0,231, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.37783323448951167;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.33277245217066875;  // std dev = 0,150, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2971491164989301;  // std dev = 0,900, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( ta(H, A, I) )
%   | | then if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.09420913442898958;  // std dev = 0,644, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.316544586240936;  // std dev = 1,622, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else if ( publication(L, A), tempadvisedby(M, B) )
%   | | | then return 0.0928844345673421;  // std dev = 1,014, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.26406845966494785;  // std dev = 1,941, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   else return -0.09315851941394428;  // std dev = 0,021, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.1385448421493574;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26890158248094254;  // std dev = 0,137, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.3352493445939973;  // std dev = 0,679, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.2087781849313982;  // std dev = 2,363, 71,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=62 */
%   | | | else return 0.11840624912772715;  // std dev = 1,362, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.08558151638263352;  // std dev = 0,019, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.24839387064448085;  // std dev = 0,126, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09826646531782397;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.21763061603990116;  // std dev = 0,079, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( hasposition(L, C), publication(K, L) )
%   | | | then return -0.1209294075103177;  // std dev = 1,127, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2895655966742998;  // std dev = 0,153, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.1939693857624563;  // std dev = 1,952, 59,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.0961317318928617;  // std dev = 1,214, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( professor(B) )
%   | then return -0.05922390595851579;  // std dev = 0,219, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.0787140756253058;  // std dev = 4,08e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.22684767610944842;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.13083220067614348;  // std dev = 0,899, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.183667770287663;  // std dev = 0,066, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(H, J), publication(I, J) )
%   | | | then return -0.14089256574706693;  // std dev = 1,009, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.19695678865958932;  // std dev = 0,527, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.17334566524052078;  // std dev = 1,314, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.12240890364409102;  // std dev = 2,023, 38,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   else return -0.07369705026552925;  // std dev = 0,020, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.18508611877134123;  // std dev = 0,102, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04592661596676821;  // std dev = 0,875, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1568765423722864;  // std dev = 0,063, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return 0.012174639939572518;  // std dev = 0,682, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.16736446895013746;  // std dev = 1,010, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.09807406470615951;  // std dev = 2,425, 59,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   else return -0.06882171754555656;  // std dev = 0,019, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( publication(D, E), tempadvisedby(E, B) )
%   | | then return 0.1791218043402959;  // std dev = 0,078, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.08784021064338648;  // std dev = 0,891, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.13800785274227906;  // std dev = 0,052, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.15000990335689235;  // std dev = 1,116, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.11438905061909205;  // std dev = 1,008, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.12467614014706066;  // std dev = 1,651, 52,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return -0.009359054804800006;  // std dev = 1,190, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( professor(B) )
%   | then return -0.05495678180717238;  // std dev = 0,215, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.06409298012264218;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Predicates from source: ['advisedby(person,person).', 'ta(course,person,quarter).', 'hasposition(person,faculty).', 'publication(title,person).', 'professor(person).', 'student(person).', 'tempadvisedby(person,person).', 'projectmember(project,person).']

Starting fold 1

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.11013317108154297
   Generating paths time   = 2.0845956802368164
   Generating mappings time   = 0.0446774959564209
   Possible mappings   = 54
   Finding best mapping   = 0.010776519775390625
   Total time   = 2.2501866817474365


Best mapping found: ['projectmember(A,B) -> title(A,B)', 'advisedby(A,B) -> sametitle(A,B)', 'hasposition(A,B) -> haswordtitle(A,B)', 'publication(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, G), haswordtitle(B, G).;false;false
2;;sametitle(A, B) :- haswordtitle(B, C).;true;true
2;true,true;haswordtitle(B, H).;false;false
2;true;haswordtitle(A, H).;true;true
2;false;haswordtitle(B, L).;false;false
2;true,false;haswordtitle(J, C).;false;false
3;;sametitle(A, B) :- haswordtitle(B, C).;true;false
3;true,true;haswordtitle(E, F).;false;false
3;true,false;haswordtitle(A, J).;true;true
3;true,false,true;haswordtitle(K, C), haswordtitle(K, J).;false;false
3;true,false,false;haswordtitle(L, C).;false;false
3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false,false;haswordtitle(A, L).;false;false
4;true;haswordtitle(D, C).;false;true
4;true,false;haswordtitle(J, K).;false;true
5;;sametitle(A, B) :- title(G, B).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C).;true;false
6;true,false,true;haswordtitle(L, C), haswordtitle(L, K).;false;false
6;true,false,false;haswordtitle(M, C).;false;false
6;true;haswordtitle(B, D), haswordtitle(A, D).;false;true
6;true,false;haswordtitle(B, J), haswordtitle(A, K).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false,true;haswordtitle(J, H), haswordtitle(J, I).;false;false
7;true;haswordtitle(D, C).;false;true
7;true,false;haswordtitle(A, H), haswordtitle(B, I).;true;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C).;true;false
9;true,true;haswordtitle(E, D).;false;false
9;true,false;haswordtitle(A, I).;true;true
9;true,false,true;haswordtitle(J, I).;false;false
9;true,false,false;haswordtitle(M, C).;false;false
9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.3581489350995084;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563706;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2564123687585887;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then return 0.20613740734454172;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1616285754841446;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then return 0.12455597792082061;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then return 0.09492800936730798;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07186088850055666;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.0541830737595471;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040760253233058874;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.507833
   AUC PR    = 0.587076
   CLL	      = -0.702218
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.048 seconds
Total inference time: 1.995 seconds
AUC ROC: 0.507833


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true,true': 'haswordtitle(B, D)', 'true': 'haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [9.0, 162, 162], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true,true': 'haswordtitle(E, F)', 'true': 'haswordtitle(A, D), haswordtitle(B, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [9.0, 162, 162], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [9.0, 162, 162], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)'}, {'true,true': [9.0, 162, 162], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [9.0, 162, 162], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true,true': 'haswordtitle(E, D)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [9.0, 162, 162], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.25000000000000433, nan]}, {'': [0.2500000000000006, nan]}, {'': [0.2499999999999963, nan], 'true,true': [0.2499999999999963, nan], 'true': [0.2499999999999963, nan]}, {'': [0.25000000000000017, nan], 'true,true': [0.25000000000000017, nan], 'true': [0.25000000000000017, nan]}, {'': [0.2500000000000004, nan], 'true': [0.2500000000000004, nan]}, {'': [0.25000000000000083, nan]}, {'': [0.24999999999999817, nan], 'true': [0.24999999999999817, nan]}, {'': [0.25000000000000117, nan], 'true': [0.25000000000000117, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000017, nan], 'true,true': [0.25000000000000017, nan], 'true': [0.25000000000000017, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '2;true,true;haswordtitle(B, D).;true;true', '2;true;haswordtitle(A, D).;true;true', '3;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '3;true,true;haswordtitle(E, F).;true;true', '3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;true;haswordtitle(D, C).;true;true', '5;;sametitle(A, B) :- title(C, B).;true;true', '6;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '6;true;haswordtitle(B, D), haswordtitle(A, D).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;true;haswordtitle(D, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '9;true,true;haswordtitle(E, D).;true;true', '9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.7787838557344332;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.02481560176617899;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.011995088945666163;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.346785298735874;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6558443425579517;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.021767884192405756;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.010528652411522633;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.29912905029252973;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | | then return 0.3277685753324824;  // std dev = 4,084, 105,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | | | else return 0.2092028632863782;  // std dev = 7,198, 219,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=95 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.25964647109311145;  // std dev = 3,990, 105,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | | | else return 0.17107873613256108;  // std dev = 7,184, 219,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=95 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3653510623013457;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return -0.04176211333558996;  // std dev = 2,591, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.010228305970344477;  // std dev = 2,513, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.17297957504435435;  // std dev = 6,632, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.27786786499308014;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.1427814500099851;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.06343033205575847;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.32559737172519987;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.04279468677135139;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.1344812744336419;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.21687602148844057;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return -0.029277871448591106;  // std dev = 2,576, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.009991292802387192;  // std dev = 2,472, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.10315424062080031;  // std dev = 6,632, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.17373651733219445;  // std dev = 2,146, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return -0.024027816179711673;  // std dev = 2,576, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return -0.008368827490725301;  // std dev = 2,473, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.07844853555152652;  // std dev = 6,632, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.14231977576730487;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.12198479646214223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04340398461725476;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.007016461217226959;  // std dev = 0,377, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else return 0.05934438094682229;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return 0.06410859143007218;  // std dev = 3,415, 105,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | | | else return 0.034805927756958274;  // std dev = 7,084, 219,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=95 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.724151
   AUC PR    = 0.771462
   CLL	      = -0.598223
   Precision = 0.865471 at threshold = 0.5
   Recall    = 0.360075
   F1        = 0.508564


Total learning time: 81.975 seconds
Total inference time: 116.85499999999999 seconds
AUC ROC: 0.724151


Refined model AUC ROC: 0.724151


Dataset: 14_uwcse_cora, Fold: 1, Type: transfer, Time: 03:54:32
{'AUC ROC': 0.724151, 'Recall': 0.360075, 'Parameter Learning results': {'AUC ROC': 0.507833, 'Recall': 0.0, 'CLL': -0.702218, 'AUC PR': 0.587076, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.995, 'Learning time': 10.048}, 'CLL': -0.598223, 'AUC PR': 0.771462, 'Precision': [0.865471, 0.5], 'F1': 0.508564, 'Inference time': 116.85499999999999, 'Mapping results': {'Total time': 2.2501866817474365, 'Possible mappings': 54, 'Finding best mapping': 0.010776519775390625, 'Knowledge compiling time': 0.11013317108154297, 'Generating paths time': 2.0845956802368164, 'Generating mappings time': 0.0446774959564209}, 'Learning time': 92.023}


Start learning from scratch in target domain

Target train facts examples: 7301
Target train pos examples: 162
Target train neg examples: 162

Target test facts examples: 34559
Target test pos examples: 536
Target test neg examples: 383

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7787838557344332;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0.07243464938522666;  // std dev = 0,410, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.06745126068090773;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.346785298735874;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6558443425579517;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.3491007369185986;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.01576740358526542;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return 0.059040467278907924;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.29912905029252973;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5109750916086673;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.29874429727671564;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.013736007492066778;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.5920430045629774;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.004110841590868637;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.2488927499845812;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.38429827119862636;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.2464410521678305;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.011948110207107041;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.49677117144015515;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.0035648410892992256;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.2006518389058161;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2911747682708102;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.19704786620345097;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.010379073360876219;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.3921468010314657;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.0030926035603128297;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.15783017763196872;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.22617015345347485;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.15390106687481211;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.009005582774605411;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else return 0.10301727581803165;  // std dev = 0,480, 219,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=95 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.18038912277704017;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.11829799734359425;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.007805914337032411;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.27236756595867373;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.01677105699939745;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.09777515459517976;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,437, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.14723043858130247;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.09001619671079109;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.00676007707921222;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.20441752614944;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.01441092830202241;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.07426382962607288;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.12246972198263584;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0.014739681696530357;  // std dev = 0,394, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return 0.1543782602851899;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.012403797630295478;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.056135431299955775;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */


Results
   AUC ROC   = 0.722334
   AUC PR    = 0.770556
   CLL	      = -0.599766
   Precision = 0.862832 at threshold = 0.5
   Recall    = 0.363806
   F1        = 0.511811


Total learning time: 16.034 seconds
Total inference time: 2.454 seconds
AUC ROC: 0.722334


Dataset: 14_uwcse_cora, Fold: 1, Type: scratch, Time: 03:54:51
{'AUC ROC': 0.722334, 'Recall': 0.363806, 'CLL': -0.599766, 'AUC PR': 0.770556, 'Precision': [0.862832, 0.5], 'F1': 0.511811, 'Inference time': 2.454, 'Learning time': 16.034}


Starting fold 2

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.11215758323669434
   Generating paths time   = 2.3066773414611816
   Generating mappings time   = 0.058151960372924805
   Possible mappings   = 54
   Finding best mapping   = 0.013437271118164062
   Total time   = 2.490429162979126


Best mapping found: ['projectmember(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'hasposition(A,B) -> title(B,A)', 'publication(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, G), haswordtitle(B, G).;false;false
2;;sametitle(A, B) :- title(C, B).;true;true
2;true,true;haswordtitle(B, H).;false;false
2;true;haswordtitle(A, H).;true;true
2;false;haswordtitle(B, L).;false;false
2;true,false;title(C, J).;false;false
3;;sametitle(A, B) :- title(C, B).;true;false
3;true,true;haswordtitle(E, F).;false;false
3;true,false;haswordtitle(A, J).;true;true
3;true,false,true;title(C, K), haswordtitle(K, J).;false;false
3;true,false,false;title(C, L).;false;false
3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false,false;haswordtitle(A, L).;false;false
4;true;haswordtitle(D, C).;false;true
4;true,false;haswordtitle(J, K).;false;true
5;;sametitle(A, B) :- haswordtitle(B, G).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false,true;title(C, L), haswordtitle(L, K).;false;false
6;true,false,false;title(C, M).;false;false
6;true;haswordtitle(B, D), haswordtitle(A, D).;false;true
6;true,false;haswordtitle(B, J), haswordtitle(A, K).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false,true;haswordtitle(J, H), haswordtitle(J, I).;false;false
7;true;haswordtitle(D, C).;false;true
7;true,false;haswordtitle(A, H), haswordtitle(B, I).;true;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,true;haswordtitle(E, D).;false;false
9;true,false;haswordtitle(A, I).;true;true
9;true,false,true;haswordtitle(J, I).;false;false
9;true,false,false;title(C, M).;false;false
9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.5873156017661759;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.4999402443806515;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.40017390037908546;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then return 0.30667917321820926;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2306394324712994;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.17321489938454096;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then return 0.13096845545467165;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09993275151492949;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.07693472961057128;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05969439626280079;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.506085
   AUC PR    = 0.533971
   CLL	      = -0.735476
   Precision = 0.533971 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.696195


Total learning time: 11.046 seconds
Total inference time: 2.24 seconds
AUC ROC: 0.506085


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(B, D)', 'true': 'haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [6.158, 52, 140], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(E, F)', 'true': 'haswordtitle(A, D), haswordtitle(B, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [6.158, 52, 140], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [6.158, 52, 140], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)'}, {'true,true': [6.158, 52, 140], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [6.158, 52, 140], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(E, D)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [6.158, 52, 140], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.19748263888889372, nan]}, {'': [0.19748263888888998, nan]}, {'': [0.19748263888888862, nan], 'true,true': [0.19748263888888862, nan], 'true': [0.19748263888888862, nan]}, {'': [0.1974826388888887, nan], 'true,true': [0.1974826388888887, nan], 'true': [0.1974826388888887, nan]}, {'': [0.19748263888888862, nan], 'true': [0.19748263888888862, nan]}, {'': [0.19748263888888826, nan]}, {'': [0.19748263888888865, nan], 'true': [0.19748263888888865, nan]}, {'': [0.19748263888888837, nan], 'true': [0.19748263888888837, nan]}, {'': [0.19748263888888898, nan]}, {'': [0.1974826388888886, nan], 'true,true': [0.1974826388888886, nan], 'true': [0.1974826388888886, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- title(C, B).;true;true', '2;true,true;haswordtitle(B, D).;true;true', '2;true;haswordtitle(A, D).;true;true', '3;;sametitle(A, B) :- title(C, B).;true;true', '3;true,true;haswordtitle(E, F).;true;true', '3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;true;haswordtitle(D, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- title(C, B).;true;true', '6;true;haswordtitle(B, D), haswordtitle(A, D).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;true;haswordtitle(D, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '9;;sametitle(A, B) :- title(C, B).;true;true', '9;true,true;haswordtitle(E, D).;true;true', '9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7936328060672545;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5618526388032163;  // std dev = 0,457, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.7237518087032814;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6673784342854517;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.478945074750187;  // std dev = 0,457, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | | then return 0.36225683885116455;  // std dev = 3,594, 84,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=64 */
%   | | | else return 0.4154772728356105;  // std dev = 4,295, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.27369856286889543;  // std dev = 3,574, 84,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=64 */
%   | | | else return 0.3264345813695307;  // std dev = 4,204, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.3648884857518675;  // std dev = 1,936, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.4692272216424074;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.2503600624171736;  // std dev = 0,399, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.27914477138393384;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | else return -0.35606738099203744;  // std dev = 4,21e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.2544488733795643;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.26808188818952433;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(A, E) )
%   | | | then return 0.21976958617077896;  // std dev = 1,937, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.27917823522432617;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.14223058438520117;  // std dev = 0,379, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.17781788221092523;  // std dev = 1,937, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.23375255113703328;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.22658077678481667;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.17056936763436484;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.19190389412216913;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14289025606676453;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.19450570481962123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.1893405971747929;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.13313605764341271;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return 0.0697072442622387;  // std dev = 2,193, 84,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=64 */
%   | | | else return 0.06535280430684846;  // std dev = 3,771, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.707144
   AUC PR    = 0.733037
   CLL	      = -0.664351
   Precision = 0.609113 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.729885


Total learning time: 376.127 seconds
Total inference time: 137.032 seconds
AUC ROC: 0.707144


Refined model AUC ROC: 0.707144


Dataset: 14_uwcse_cora, Fold: 2, Type: transfer, Time: 04:03:41
{'AUC ROC': 0.707144, 'Recall': 0.910394, 'Parameter Learning results': {'AUC ROC': 0.506085, 'Recall': 1.0, 'CLL': -0.735476, 'AUC PR': 0.533971, 'Precision': [0.533971, 0.5], 'F1': 0.696195, 'Inference time': 2.24, 'Learning time': 11.046}, 'CLL': -0.664351, 'AUC PR': 0.733037, 'Precision': [0.609113, 0.5], 'F1': 0.729885, 'Inference time': 137.032, 'Mapping results': {'Total time': 2.490429162979126, 'Possible mappings': 54, 'Finding best mapping': 0.013437271118164062, 'Knowledge compiling time': 0.11215758323669434, 'Generating paths time': 2.3066773414611816, 'Generating mappings time': 0.058151960372924805}, 'Learning time': 387.173}


Start learning from scratch in target domain

Target train facts examples: 8876
Target train pos examples: 140
Target train neg examples: 52

Target test facts examples: 32984
Target test pos examples: 558
Target test neg examples: 493

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7936328060672545;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.6842358916212514;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.7237518087032814;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6673784342854517;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5792891135108365;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5596022372298854;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5189205286489138;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.4570789878895837;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4233597971885226;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3898494672190815;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.2796260020299196;  // std dev = 0,384, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.32479615896124664;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.29605184057090483;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.13011004988643268;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.27619603227507417;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2598237112372312;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2307823383177395;  // std dev = 0,245, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.16099635018511116;  // std dev = 0,368, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.21314056586265942;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18511377217363276;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.13364591993552802;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.1719164031976642;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.15449647607427403;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.09663195498508897;  // std dev = 0,361, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.15921987847912225;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.12688038076909755;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.07786310993542579;  // std dev = 0,360, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.13929550042319436;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10798676633593798;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.06315713027510587;  // std dev = 0,360, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */


Results
   AUC ROC   = 0.704446
   AUC PR    = 0.731652
   CLL	      = -0.689576
   Precision = 0.606205 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.727794


Total learning time: 24.13 seconds
Total inference time: 2.005 seconds
AUC ROC: 0.704446


Dataset: 14_uwcse_cora, Fold: 2, Type: scratch, Time: 04:04:07
{'AUC ROC': 0.704446, 'Recall': 0.910394, 'CLL': -0.689576, 'AUC PR': 0.731652, 'Precision': [0.606205, 0.5], 'F1': 0.727794, 'Inference time': 2.005, 'Learning time': 24.13}


Starting fold 3

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.08775496482849121
   Generating paths time   = 2.4987599849700928
   Generating mappings time   = 0.04641246795654297
   Possible mappings   = 54
   Finding best mapping   = 0.010092496871948242
   Total time   = 2.643026113510132


Best mapping found: ['projectmember(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'hasposition(A,B) -> title(B,A)', 'publication(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, G), haswordtitle(B, G).;false;false
2;;sametitle(A, B) :- title(C, B).;true;true
2;true,true;haswordtitle(B, H).;false;false
2;true;haswordtitle(A, H).;true;true
2;false;haswordtitle(B, L).;false;false
2;true,false;title(C, J).;false;false
3;;sametitle(A, B) :- title(C, B).;true;false
3;true,true;haswordtitle(E, F).;false;false
3;true,false;haswordtitle(A, J).;true;true
3;true,false,true;title(C, K), haswordtitle(K, J).;false;false
3;true,false,false;title(C, L).;false;false
3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false,false;haswordtitle(A, L).;false;false
4;true;haswordtitle(D, C).;false;true
4;true,false;haswordtitle(J, K).;false;true
5;;sametitle(A, B) :- haswordtitle(B, G).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false,true;title(C, L), haswordtitle(L, K).;false;false
6;true,false,false;title(C, M).;false;false
6;true;haswordtitle(B, D), haswordtitle(A, D).;false;true
6;true,false;haswordtitle(B, J), haswordtitle(A, K).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false,true;haswordtitle(J, H), haswordtitle(J, I).;false;false
7;true;haswordtitle(D, C).;false;true
7;true,false;haswordtitle(A, H), haswordtitle(B, I).;true;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,true;haswordtitle(E, D).;false;false
9;true,false;haswordtitle(A, I).;true;true
9;true,false,true;haswordtitle(J, I).;false;false
9;true,false,false;title(C, M).;false;false
9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.367157944108518;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.31635276379475713;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.26234594467956895;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then return 0.2104445902287504;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, G) )
%   | | then if ( title(C, H), haswordtitle(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16459809946843904;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.1227970744332262;  // std dev = 7,460, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then return 0.09715435123337533;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   | else if ( haswordtitle(B, E), haswordtitle(A, F) )
%   | | then if ( title(C, G), haswordtitle(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09525439820555419;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07343615171783739;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08735577252519161;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.055304297653914994;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.08063778984013019;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.041565079151797635;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return -0.07485825487172104;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.502315
   AUC PR    = 0.576355
   CLL	      = -0.699681
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.393 seconds
Total inference time: 2.372 seconds
AUC ROC: 0.502315


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(B, D)', 'true': 'haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [7.449, 109, 113], 'true,true,false': [0.0, 4, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(E, F)', 'true': 'haswordtitle(A, D), haswordtitle(B, D)', 'true,false,true': 'title(C, H), haswordtitle(H, G)', 'true,false': 'haswordtitle(A, G)'}, {'true,true,true': [7.449, 109, 113], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [7.449, 109, 113], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [7.46, 113, 113]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)', 'true,false,true': 'title(C, G), haswordtitle(G, F)', 'true,false': 'haswordtitle(B, E), haswordtitle(A, F)'}, {'true,true': [7.449, 109, 113], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [7.449, 109, 113], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(E, D)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)', 'true,false,true': 'haswordtitle(G, F)', 'true,false': 'haswordtitle(A, F)'}, {'true,true,true': [7.449, 109, 113], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}]]
[{'': [0.2499188377566789, 0.0]}, {'': [0.2499188377566776, 0.0]}, {'': [0.24793598042556622, nan], 'true,true': [0.24991883775667184, 0.0], 'true': [0.24793598042556622, nan]}, {'': [0.2471883482559491, nan], 'true,true': [0.24991883775667645, nan], 'true': [0.24991883775667645, 0.0], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.2499188377566769, 0.0], 'true': [0.2499188377566769, nan]}, {'': [0.24627489080850745, nan]}, {'': [0.24613913948978305, nan], 'true,false,true': [nan, 0.0], 'true': [0.249918837756675, 0.0], 'true,false': [0.0, nan]}, {'': [0.24991883775667642, 0.0], 'true': [0.24991883775667642, nan]}, {'': [0.24991883775667667, 0.0]}, {'': [0.24573115022026187, nan], 'true,true': [0.2499188377566755, nan], 'true': [0.2499188377566755, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(B, D).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(B, D), haswordtitle(A, D).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(B, D), haswordtitle(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4889181658687433;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.030739953789376637;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.008517731567154404;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.5478041075133061;  // std dev = 4,315, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41846336033524695;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.0270390361053513;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.007484033389160131;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.46599684490289806;  // std dev = 4,308, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.7485765807062436;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3401994686974475;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.023851027745157686;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.006580988107696558;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | | then return 0.38431577239108344;  // std dev = 4,326, 91,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=64 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2654658671333026;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.021090647410594115;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.005790918254978441;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.28704185972634244;  // std dev = 4,306, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.4910874831034505;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2020192783424223;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.01868974743532482;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.005098795870205673;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.21556231699018483;  // std dev = 4,301, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.3935327894580892;  // std dev = 0,115, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.5101532295643424;  // std dev = 0,543, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.5503258050600339;  // std dev = 0,868, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.30587144866358756;  // std dev = 0,186, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0.4226863627506405;  // std dev = 0,150, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.3488728940796721;  // std dev = 0,218, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.09916676879220379;  // std dev = 0,385, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return 0.002282232487613437;  // std dev = 0,282, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.013335899690143578;  // std dev = 0,303, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.101783058385734;  // std dev = 3,449, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.2378081980781137;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09018784548703776;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.07552034296435571;  // std dev = 0,385, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return 0.0020631154389954168;  // std dev = 0,282, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.011939428501685435;  // std dev = 0,302, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.07825543721530204;  // std dev = 3,460, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.19778778360911892;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08308757510659137;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.05767262198490576;  // std dev = 0,386, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return 0.0018647057037328222;  // std dev = 0,282, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.01067745889797275;  // std dev = 0,302, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.06005032286310426;  // std dev = 3,469, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.17830946740462267;  // std dev = 0,089, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0769982897396129;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.04416574077087887;  // std dev = 0,386, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return 0.0016851070495296722;  // std dev = 0,282, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then if ( title(H, B), venue(H, G) )
%   | | | then return 0.006158067109335052;  // std dev = 3,724, 105,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=52 */
%   | | | else return 0.30828110564329436;  // std dev = 0,110, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.15401693843127634;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07172181278842538;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.898625
   AUC PR    = 0.864866
   CLL	      = -0.507019
   Precision = 0.655758 at threshold = 0.5
   Recall    = 0.924786
   F1        = 0.767376


Total learning time: 59.624 seconds
Total inference time: 11.001 seconds
AUC ROC: 0.898625


Refined model AUC ROC: 0.898625


Dataset: 14_uwcse_cora, Fold: 3, Type: transfer, Time: 04:05:31
{'AUC ROC': 0.898625, 'Recall': 0.924786, 'Parameter Learning results': {'AUC ROC': 0.502315, 'Recall': 0.0, 'CLL': -0.699681, 'AUC PR': 0.576355, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.372, 'Learning time': 7.393}, 'CLL': -0.507019, 'AUC PR': 0.864866, 'Precision': [0.655758, 0.5], 'F1': 0.767376, 'Inference time': 11.001, 'Mapping results': {'Total time': 2.643026113510132, 'Possible mappings': 54, 'Finding best mapping': 0.010092496871948242, 'Knowledge compiling time': 0.08775496482849121, 'Generating paths time': 2.4987599849700928, 'Generating mappings time': 0.04641246795654297}, 'Learning time': 67.017}


Start learning from scratch in target domain

Target train facts examples: 9193
Target train pos examples: 113
Target train neg examples: 113

Target test facts examples: 32667
Target test pos examples: 585
Target test neg examples: 432

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.4889181658687433;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.030739953789376637;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.008517731567154404;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.5405018762759836;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41846336033524695;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.0270390361053513;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.007484033389160131;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.4612926416518616;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3401994686974475;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.023851027745157686;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.006580988107696558;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.37194342671284675;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2654658671333026;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.021090647410594115;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.005790918254978441;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.28733367060213316;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2020192783424223;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.01868974743532482;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.005098795870205673;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.21702928101865285;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15198994044862232;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.016593258433660458;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.004491789611638817;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.16283763597633746;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.11401148938270005;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.014756227012937741;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.003958900940260098;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.12240801837119147;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.4469363257953037;  // std dev = 0,631, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.4928334453129363;  // std dev = 1,045, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.33287420596273093;  // std dev = 0,220, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.3907286020904949;  // std dev = 0,064, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.23264847379465198;  // std dev = 0,248, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.34389622007542514;  // std dev = 0,688, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.3878560109983354;  // std dev = 1,132, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.27688528655151795;  // std dev = 0,195, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.30386425508930154;  // std dev = 0,053, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.19615831525241653;  // std dev = 0,226, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.2735727451342181;  // std dev = 0,700, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.31345615980940295;  // std dev = 1,140, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.2336897736019227;  // std dev = 0,172, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.24431348483231632;  // std dev = 0,044, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.16876336211302173;  // std dev = 0,205, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.925275
   AUC PR    = 0.951591
   CLL	      = -0.364998
   Precision = 0.957522 at threshold = 0.5
   Recall    = 0.924786
   F1        = 0.94087


Total learning time: 98.924 seconds
Total inference time: 18.183 seconds
AUC ROC: 0.925275


Dataset: 14_uwcse_cora, Fold: 3, Type: scratch, Time: 04:07:28
{'AUC ROC': 0.925275, 'Recall': 0.924786, 'CLL': -0.364998, 'AUC PR': 0.951591, 'Precision': [0.957522, 0.5], 'F1': 0.94087, 'Inference time': 18.183, 'Learning time': 98.924}


Starting fold 4

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.06123948097229004
   Generating paths time   = 2.1454672813415527
   Generating mappings time   = 0.05820035934448242
   Possible mappings   = 54
   Finding best mapping   = 0.013464927673339844
   Total time   = 2.2783782482147217


Best mapping found: ['projectmember(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'hasposition(A,B) -> title(B,A)', 'publication(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, G), haswordtitle(B, G).;false;false
2;;sametitle(A, B) :- title(C, B).;true;true
2;true,true;haswordtitle(B, H).;false;false
2;true;haswordtitle(A, H).;true;true
2;false;haswordtitle(B, L).;false;false
2;true,false;title(C, J).;false;false
3;;sametitle(A, B) :- title(C, B).;true;false
3;true,true;haswordtitle(E, F).;false;false
3;true,false;haswordtitle(A, J).;true;true
3;true,false,true;title(C, K), haswordtitle(K, J).;false;false
3;true,false,false;title(C, L).;false;false
3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false,false;haswordtitle(A, L).;false;false
4;true;haswordtitle(D, C).;false;true
4;true,false;haswordtitle(J, K).;false;true
5;;sametitle(A, B) :- haswordtitle(B, G).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false,true;title(C, L), haswordtitle(L, K).;false;false
6;true,false,false;title(C, M).;false;false
6;true;haswordtitle(B, D), haswordtitle(A, D).;false;true
6;true,false;haswordtitle(B, J), haswordtitle(A, K).;true;true
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false,true;haswordtitle(J, H), haswordtitle(J, I).;false;false
7;true;haswordtitle(D, C).;false;true
7;true,false;haswordtitle(A, H), haswordtitle(B, I).;true;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,true;haswordtitle(E, D).;false;false
9;true,false;haswordtitle(A, I).;true;true
9;true,false,true;haswordtitle(J, I).;false;false
9;true,false,false;title(C, M).;false;false
9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.50639014112966;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.43299877452533375;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.351029517594339;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then return 0.2729495848556248;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20712469400580077;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.1556174928114235;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then return 0.11675537240059652;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.08782150157750745;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.06631466170514136;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05027412262826942;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.506316
   AUC PR    = 0.54817
   CLL	      = -0.693416
   Precision = 0.54817 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.708152


Total learning time: 4.377 seconds
Total inference time: 1.918 seconds
AUC ROC: 0.506316


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(B, D)', 'true': 'haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [6.736, 70, 129], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(E, F)', 'true': 'haswordtitle(A, D), haswordtitle(B, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [6.736, 70, 129], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [6.736, 70, 129], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)'}, {'true,true': [6.736, 70, 129], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [6.736, 70, 129], 'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true,true': 'haswordtitle(E, D)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [6.736, 70, 129], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.22802454483473067, nan]}, {'': [0.22802454483473095, nan]}, {'': [0.22802454483472503, nan], 'true,true': [0.22802454483472503, nan], 'true': [0.22802454483472503, nan]}, {'': [0.22802454483472656, nan], 'true,true': [0.22802454483472656, nan], 'true': [0.22802454483472656, nan]}, {'': [0.22802454483472698, nan], 'true': [0.22802454483472698, nan]}, {'': [0.2280245448347273, nan]}, {'': [0.22802454483472612, nan], 'true': [0.22802454483472612, nan]}, {'': [0.22802454483472537, nan], 'true': [0.22802454483472537, nan]}, {'': [0.22802454483472684, nan]}, {'': [0.22802454483472637, nan], 'true,true': [0.22802454483472637, nan], 'true': [0.22802454483472637, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- title(C, B).;true;true', '2;true,true;haswordtitle(B, D).;true;true', '2;true;haswordtitle(A, D).;true;true', '3;;sametitle(A, B) :- title(C, B).;true;true', '3;true,true;haswordtitle(E, F).;true;true', '3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;true;haswordtitle(D, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- title(C, B).;true;true', '6;true;haswordtitle(B, D), haswordtitle(A, D).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;true;haswordtitle(D, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '9;;sametitle(A, B) :- title(C, B).;true;true', '9;true,true;haswordtitle(E, D).;true;true', '9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.48314893509950974;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.4136573287083117;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | | then return 0.3927094121563927;  // std dev = 2,091, 39,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   | | | else return 0.3366053739648672;  // std dev = 6,124, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | | then return 0.307160578621646;  // std dev = 2,018, 39,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   | | | else return 0.26297558544869215;  // std dev = 6,124, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.3828444476602968;  // std dev = 4,71e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.05145282425451618;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.2003254517029101;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.29726898626326026;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.24343186969022496;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.041147629383638445;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.18566284511877662;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.23910260102646227;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.03307817169707479;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.18340900247269762;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.13928170304009665;  // std dev = 5,744, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(B, E) )
%   | | | then return 0.19833896252406666;  // std dev = 2,58e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.026703709188727495;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return -0.13971775778911297;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.10467541488669123;  // std dev = 5,744, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.07193976401036488;  // std dev = 0,439, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 0.09406872969826253;  // std dev = 1,623, 39,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   | | | else return 0.04650776822556861;  // std dev = 5,976, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.747111
   AUC PR    = 0.764606
   CLL	      = -0.583563
   Precision = 0.644658 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.766049


Total learning time: 68.94200000000001 seconds
Total inference time: 144.0 seconds
AUC ROC: 0.747111


Refined model AUC ROC: 0.747111


Dataset: 14_uwcse_cora, Fold: 4, Type: transfer, Time: 04:11:10
{'AUC ROC': 0.747111, 'Recall': 0.943761, 'Parameter Learning results': {'AUC ROC': 0.506316, 'Recall': 1.0, 'CLL': -0.693416, 'AUC PR': 0.54817, 'Precision': [0.54817, 0.5], 'F1': 0.708152, 'Inference time': 1.918, 'Learning time': 4.377}, 'CLL': -0.583563, 'AUC PR': 0.764606, 'Precision': [0.644658, 0.5], 'F1': 0.766049, 'Inference time': 144.0, 'Mapping results': {'Total time': 2.2783782482147217, 'Possible mappings': 54, 'Finding best mapping': 0.013464927673339844, 'Knowledge compiling time': 0.06123948097229004, 'Generating paths time': 2.1454672813415527, 'Generating mappings time': 0.05820035934448242}, 'Learning time': 73.319}


Start learning from scratch in target domain

Target train facts examples: 8000
Target train pos examples: 129
Target train neg examples: 70

Target test facts examples: 33860
Target test pos examples: 569
Target test neg examples: 475

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.5180128806777413;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.4426517838203286;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.35818915709203447;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.2600148264126967;  // std dev = 0,474, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.049528997355293175;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.01759983761955297;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.2149226064166222;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.04206293300387109;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.14948999366974117;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2097577156325355;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.01176490020118662;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.03553879177151896;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.12410478914876093;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,437, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.029894556746069525;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.0850422594498079;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.025052826506284376;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.025479388136507682;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.07265763515884797;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */


Results
   AUC ROC   = 0.744299
   AUC PR    = 0.7632
   CLL	      = -0.57459
   Precision = 0.641577 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.763869


Total learning time: 7.82 seconds
Total inference time: 1.409 seconds
AUC ROC: 0.744299


Dataset: 14_uwcse_cora, Fold: 4, Type: scratch, Time: 04:11:20
{'AUC ROC': 0.744299, 'Recall': 0.943761, 'CLL': -0.57459, 'AUC PR': 0.7632, 'Precision': [0.641577, 0.5], 'F1': 0.763869, 'Inference time': 1.409, 'Learning time': 7.82}


Starting fold 5

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.1371290683746338
   Generating paths time   = 2.614286184310913
   Generating mappings time   = 0.05859088897705078
   Possible mappings   = 54
   Finding best mapping   = 0.013423442840576172
   Total time   = 2.823435068130493


Best mapping found: ['projectmember(A,B) -> title(A,B)', 'advisedby(A,B) -> sametitle(B,A)', 'hasposition(A,B) -> haswordtitle(A,B)', 'publication(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(B, A) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
1;;sametitle(B, A) :- haswordtitle(A, G), haswordtitle(B, G).;false;false
2;;sametitle(B, A) :- haswordtitle(B, C).;true;true
2;true,true;haswordtitle(B, H).;false;false
2;true;haswordtitle(A, H).;true;true
2;false;haswordtitle(B, L).;false;false
2;true,false;haswordtitle(J, C).;false;false
3;;sametitle(B, A) :- haswordtitle(B, C).;true;false
3;true,true;haswordtitle(E, F).;false;false
3;true,false;haswordtitle(A, J).;true;true
3;true,false,true;haswordtitle(K, C), haswordtitle(K, J).;false;false
3;true,false,false;haswordtitle(L, C).;false;false
3;true;haswordtitle(A, D), haswordtitle(B, D).;true;true
4;;sametitle(B, A) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
4;true,false,false;haswordtitle(A, L).;false;false
4;true;haswordtitle(D, C).;false;true
4;true,false;haswordtitle(J, K).;false;true
5;;sametitle(B, A) :- title(G, B).;false;false
6;;sametitle(B, A) :- haswordtitle(B, C).;true;false
6;true,false,true;haswordtitle(L, C), haswordtitle(L, K).;false;false
6;true,false,false;haswordtitle(M, C).;false;false
6;true;haswordtitle(B, D), haswordtitle(A, D).;false;true
6;true,false;haswordtitle(B, J), haswordtitle(A, K).;true;true
7;;sametitle(B, A) :- haswordtitle(A, C), haswordtitle(B, C).;true;false
7;true,false,true;haswordtitle(J, H), haswordtitle(J, I).;false;false
7;true;haswordtitle(D, C).;false;true
7;true,false;haswordtitle(A, H), haswordtitle(B, I).;true;false
8;;sametitle(B, A) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
9;;sametitle(B, A) :- haswordtitle(B, C).;true;false
9;true,true;haswordtitle(E, D).;false;false
9;true,false;haswordtitle(A, I).;true;true
9;true,false,true;haswordtitle(J, I).;false;false
9;true,false,false;haswordtitle(M, C).;false;false
9;true;haswordtitle(B, D), haswordtitle(A, D).;true;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3714822684328418;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.32000358944101137;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.26518533117208726;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordtitle(A, D) )
%   | then if ( haswordtitle(E, F) )
%   | | then return 0.21249917188183085;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(B, G) )
%   | | then if ( haswordtitle(H, C), haswordtitle(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16601088986002235;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( title(C, A) )
%   then return 0.1260815840806668;  // std dev = 8,662, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then return 0.0972170660041503;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | else if ( haswordtitle(A, E), haswordtitle(B, F) )
%   | | then if ( haswordtitle(G, C), haswordtitle(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.095537837070564;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07342155306251437;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08759532859798415;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.055259290741676965;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.08084275289522176;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordtitle(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.041513252974655114;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return -0.07503550012021905;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.505038
   AUC PR    = 0.580576
   CLL	      = -0.696929
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.85 seconds
Total inference time: 1.977 seconds
AUC ROC: 0.505038


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true,true': 'haswordtitle(A, D)', 'true': 'haswordtitle(B, D)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [8.657, 146, 154], 'true,true,false': [0.0, 2, 0], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true,true': 'haswordtitle(E, F)', 'true': 'haswordtitle(B, D), haswordtitle(A, D)', 'true,false,true': 'haswordtitle(H, C), haswordtitle(H, G)', 'true,false': 'haswordtitle(B, G)'}, {'true,true,true': [8.657, 146, 154], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [8.657, 146, 154], 'false': [0.0, 2, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, A)'}, {'false': [0.0, 0, 0], 'true': [8.662, 148, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true': 'haswordtitle(A, D), haswordtitle(B, D)', 'true,false,true': 'haswordtitle(G, C), haswordtitle(G, F)', 'true,false': 'haswordtitle(A, E), haswordtitle(B, F)'}, {'true,true': [8.657, 146, 154], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)', 'true': 'haswordtitle(D, C)'}, {'true,true': [8.657, 146, 154], 'false': [0.0, 2, 0], 'true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true,true': 'haswordtitle(E, D)', 'true': 'haswordtitle(A, D), haswordtitle(B, D)', 'true,false,true': 'haswordtitle(G, F)', 'true,false': 'haswordtitle(B, F)'}, {'true,true,true': [8.657, 146, 154], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}]]
[{'': [0.2498222222222265, 0.0]}, {'': [0.24982222222221978, 0.0]}, {'': [0.2491052789096732, nan], 'true,true': [0.24982222222222325, 0.0], 'true': [0.2491052789096732, nan]}, {'': [0.24881679447964716, nan], 'true,true': [0.2498222222222224, nan], 'true': [0.2498222222222224, 0.0], 'true,false,true': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.2498222222222226, 0.0], 'true': [0.2498222222222226, nan]}, {'': [0.24846532684944142, nan]}, {'': [0.2484121968875155, nan], 'true,false,true': [nan, 0.0], 'true': [0.24982222222222247, 0.0], 'true,false': [0.0, nan]}, {'': [0.24982222222222228, 0.0], 'true': [0.24982222222222228, nan]}, {'': [0.24982222222222353, 0.0]}, {'': [0.2482571323674631, nan], 'true,true': [0.2498222222222221, nan], 'true': [0.2498222222222221, 0.0], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, D).;true;true', '3;;sametitle(A, B) :- haswordtitle(B, D), haswordtitle(A, D).;true;true', '4;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;true;true', '7;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.2642624722174136;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.3174227265943271;  // std dev = 0,483, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6254240666065992;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.3893400974226924;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06847191611795637;  // std dev = 0,938, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.17788038689528196;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.47475036349640976;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.30506554858893403;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.047515933119580425;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.4056004845841769;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13606618208248977;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.1517778546147598;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.10566869439669137;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.35783287428449206;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.23212776421238993;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04083800447076439;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.320251398263291;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1106819815894854;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.12145689255925515;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.09609071497913704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2766396447644968;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.17447309762542;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.04582483660090456;  // std dev = 0,297, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.09117379566338846;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.22076256805644487;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.13091656665829535;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.029193927018912436;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.07122673780049633;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.08445104138996697;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.18122781350971423;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.09855242999427787;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.025424827180020405;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.05521911668366556;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.07814636601452932;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.15226397108084427;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.07455209366121911;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02220440175208459;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.04257245163138235;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.07269908858121547;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.13034096978830786;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.05667767947533412;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.01943874499538677;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.032691122724682935;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.0679478441331728;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.74772
   AUC PR    = 0.776362
   CLL	      = -0.623312
   Precision = 0.844828 at threshold = 0.5
   Recall    = 0.360294
   F1        = 0.505155


Total learning time: 15.816 seconds
Total inference time: 4.475 seconds
AUC ROC: 0.74772


Refined model AUC ROC: 0.74772


Dataset: 14_uwcse_cora, Fold: 5, Type: transfer, Time: 04:11:52
{'AUC ROC': 0.74772, 'Recall': 0.360294, 'Parameter Learning results': {'AUC ROC': 0.505038, 'Recall': 0.0, 'CLL': -0.696929, 'AUC PR': 0.580576, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.977, 'Learning time': 6.85}, 'CLL': -0.623312, 'AUC PR': 0.776362, 'Precision': [0.844828, 0.5], 'F1': 0.505155, 'Inference time': 4.475, 'Mapping results': {'Total time': 2.823435068130493, 'Possible mappings': 54, 'Finding best mapping': 0.013423442840576172, 'Knowledge compiling time': 0.1371290683746338, 'Generating paths time': 2.614286184310913, 'Generating mappings time': 0.05859088897705078}, 'Learning time': 22.666}


Start learning from scratch in target domain

Target train facts examples: 8490
Target train pos examples: 154
Target train neg examples: 148

Target test facts examples: 33370
Target test pos examples: 544
Target test neg examples: 397

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.016851064900487787;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.27099297179675785;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.014812149378556561;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.23470502083103983;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03254015317273094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.1925126634270698;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.028843434243526523;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.1584696800762259;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.025640477399664095;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.12784954504974078;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.022850675562834787;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.1015235459279447;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then return 0.16379689928802302;  // std dev = 0,231, 73,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=61 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, A) )
%   | | then return 0.22798972558388023;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09747383798154285;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.0841166576577996;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16897653888320407;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.07956517324527317;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.038863520181115795;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.06157050376726664;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.1430716970866209;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.06042029222646309;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03428109447793094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.047597940168539035;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.12323743425264856;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.046093588618113;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.030345653132305937;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.03662873555450084;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */


Results
   AUC ROC   = 0.744173
   AUC PR    = 0.774614
   CLL	      = -0.625131
   Precision = 0.84322 at threshold = 0.5
   Recall    = 0.365809
   F1        = 0.510256


Total learning time: 13.152 seconds
Total inference time: 2.108 seconds
AUC ROC: 0.744173


Dataset: 14_uwcse_cora, Fold: 5, Type: scratch, Time: 04:12:08
{'AUC ROC': 0.744173, 'Recall': 0.365809, 'CLL': -0.625131, 'AUC PR': 0.774614, 'Precision': [0.84322, 0.5], 'F1': 0.510256, 'Inference time': 2.108, 'Learning time': 13.152}


