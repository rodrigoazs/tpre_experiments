Starting experiment #1 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 382

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048804;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839202;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360675;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783649;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926053;  // std dev = 1,13e-07, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109143;  // std dev = 2,98e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333703;  // std dev = 8,56e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420307;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202618;  // std dev = 4,71e-08, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'director(person).', 'movie(movie,person).']

Starting fold 1

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.06447601318359375
   Generating paths time   = 2.4707133769989014
   Generating mappings time   = 0.04075288772583008
   Possible mappings   = 6
   Finding best mapping   = 0.0004665851593017578
   Total time   = 2.57641339302063


Best mapping found: ['workedunder(A,B) -> sametitle(A,B)', 'movie(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3581489350995084;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30874113578563706;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2564123687585887;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20613740734454172;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1616285754841446;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.12455597792082061;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09492800936730798;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07186088850055666;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.0541830737595471;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.040760253233058874;  // std dev = 9,000, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.507833
   AUC PR    = 0.587076
   CLL	      = -0.702097
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.981 seconds
Total inference time: 1.539 seconds
AUC ROC: 0.507833


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.0, 162, 162]}]]
[{'': [0.25000000000000433, nan]}, {'': [0.2500000000000006, nan]}, {'': [0.2499999999999963, nan]}, {'': [0.25000000000000017, nan]}, {'': [0.2500000000000004, nan]}, {'': [0.25000000000000083, nan]}, {'': [0.24999999999999817, nan]}, {'': [0.25000000000000117, nan]}, {'': [0.25, nan]}, {'': [0.25000000000000017, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.7787838557344332;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0.07243464938522666;  // std dev = 0,410, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.011995088945666163;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.346785298735874;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.6558443425579517;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.3491007369185986;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.01576740358526542;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.010528652411522633;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.29912905029252973;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5109750916086673;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.29874429727671564;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.013736007492066778;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.00923110899743151;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.2488927499845812;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.38429827119862636;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.2464410521678305;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.011948110207107041;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else return 0.16845100948053146;  // std dev = 0,483, 219,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=95 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2911747682708102;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.19704786620345097;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.010379073360876219;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.27342175591750517;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.014164234737649618;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.16491935079244788;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.22617015345347485;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0.02970493764606343;  // std dev = 0,397, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.008029408987496399;  // std dev = 0,373, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else return 0.12781997409841903;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.18038912277704017;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0.025324359293156545;  // std dev = 0,397, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.2032133944218956;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.013308436702685231;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.09784871152667876;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.14723043858130247;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0.02152833605371503;  // std dev = 0,396, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, A) )
%   | | | then return 0.15349851611316248;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.011463914696729324;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.07432095276228373;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.12246972198263584;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.13637705245058163;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0014299880360815922;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.11716289747439892;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.009888156585586175;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.056179187996147566;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.10345814171876799;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.10427185448571086;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0012301131651376663;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.09038694638063852;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.008538714881439332;  // std dev = 2,253, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else return 0.04234181554374228;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.724151
   AUC PR    = 0.771462
   CLL	      = -0.595674
   Precision = 0.865471 at threshold = 0.5
   Recall    = 0.360075
   F1        = 0.508564


Total learning time: 22.189 seconds
Total inference time: 7.248 seconds
AUC ROC: 0.724151


Refined model AUC ROC: 0.724151


Dataset: 10_imdb_cora, Fold: 1, Type: transfer, Time: 01:39:28
{'AUC ROC': 0.724151, 'Recall': 0.360075, 'Parameter Learning results': {'AUC ROC': 0.507833, 'Recall': 0.0, 'CLL': -0.702097, 'AUC PR': 0.587076, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.539, 'Learning time': 7.981}, 'CLL': -0.595674, 'AUC PR': 0.771462, 'Precision': [0.865471, 0.5], 'F1': 0.508564, 'Inference time': 7.248, 'Mapping results': {'Total time': 2.57641339302063, 'Possible mappings': 6, 'Finding best mapping': 0.0004665851593017578, 'Knowledge compiling time': 0.06447601318359375, 'Generating paths time': 2.4707133769989014, 'Generating mappings time': 0.04075288772583008}, 'Learning time': 30.17}


Start learning from scratch in target domain

Target train facts examples: 7301
Target train pos examples: 162
Target train neg examples: 162

Target test facts examples: 34559
Target test pos examples: 536
Target test neg examples: 383

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7787838557344332;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.02481560176617899;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return 0.06745126068090773;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.346785298735874;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6558443425579517;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.021767884192405756;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return 0.059040467278907924;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.29912905029252973;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5109750916086673;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0.05295880091820683;  // std dev = 0,402, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.05134533014437306;  // std dev = 0,407, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.2488927499845812;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.38429827119862636;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.2465225818804174;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.01226117209338954;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else return 0.16997137751493518;  // std dev = 0,487, 219,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=95 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2911747682708102;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.197121619767086;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.010653506882394989;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.5603354887470693;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.035818357406776795;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.16458641610457433;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.22617015345347485;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0.02991955790377356;  // std dev = 0,397, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), title(G, B) )
%   | | then return 0.4592730528621768;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.03037446132642031;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.12754607357680683;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,439, 324,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=162 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.18038912277704017;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0.025511361217756625;  // std dev = 0,397, 42,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.009713459053973304;  // std dev = 0,385, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.0976312026487193;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.14723043858130247;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.14131495803013108;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0017528770116251174;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.35416970694327876;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.027289691821297268;  // std dev = 0,361, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.07415204681165145;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.12246972198263584;  // std dev = 0,270, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.1082020921285356;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0015113338300408114;  // std dev = 0,373, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return 0.0037410722576395406;  // std dev = 0,378, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else return 0.05604980862352338;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=86 */


Results
   AUC ROC   = 0.722334
   AUC PR    = 0.770556
   CLL	      = -0.599849
   Precision = 0.865471 at threshold = 0.5
   Recall    = 0.360075
   F1        = 0.508564


Total learning time: 16.435 seconds
Total inference time: 2.283 seconds
AUC ROC: 0.722334


Dataset: 10_imdb_cora, Fold: 1, Type: scratch, Time: 01:39:47
{'AUC ROC': 0.722334, 'Recall': 0.360075, 'CLL': -0.599849, 'AUC PR': 0.770556, 'Precision': [0.865471, 0.5], 'F1': 0.508564, 'Inference time': 2.283, 'Learning time': 16.435}


Starting fold 2

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.07869648933410645
   Generating paths time   = 2.4214439392089844
   Generating mappings time   = 0.03255486488342285
   Possible mappings   = 6
   Finding best mapping   = 0.000484466552734375
   Total time   = 2.5331850051879883


Best mapping found: ['workedunder(A,B) -> sametitle(A,B)', 'movie(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.5873156017661759;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.4999402443806515;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.40017390037908546;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30667917321820926;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2306394324712994;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.17321489938454096;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.13096845545467165;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09993275151492949;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07693472961057128;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05969439626280079;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.506085
   AUC PR    = 0.533971
   CLL	      = -0.735325
   Precision = 0.533971 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.696195


Total learning time: 6.678 seconds
Total inference time: 1.499 seconds
AUC ROC: 0.506085


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}]]
[{'': [0.19748263888889372, nan]}, {'': [0.19748263888888998, nan]}, {'': [0.19748263888888862, nan]}, {'': [0.1974826388888887, nan]}, {'': [0.19748263888888862, nan]}, {'': [0.19748263888888826, nan]}, {'': [0.19748263888888865, nan]}, {'': [0.19748263888888837, nan]}, {'': [0.19748263888888898, nan]}, {'': [0.1974826388888886, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7936328060672545;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.6842358916212514;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.7237518087032814;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6673784342854517;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.4748841132087285;  // std dev = 0,430, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.5596022372298854;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5189205286489138;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.1874040601650234;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.48103931413960527;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3928062610399144;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.2879650301726066;  // std dev = 0,397, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.29856084287054624;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | else return -0.2032011348087446;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.2940996155482388;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.2667549429611727;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2300409558419485;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.17227240759705434;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.17655218662636618;  // std dev = 0,366, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.22202037261836916;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18419214681139706;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.14907435736824357;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.13912556637507373;  // std dev = 0,364, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.1860619040747601;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15138942235541453;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.1311357467377521;  // std dev = 1,29e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11322423314375202;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.14955010715263475;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.15968021105247457;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1268494162806159;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.10234409792924476;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.08296350884051719;  // std dev = 0,360, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.1406836726147087;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10786215918512376;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12574389286714463;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.07211405813557502;  // std dev = 0,357, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.706689
   AUC PR    = 0.732902
   CLL	      = -0.67914
   Precision = 0.609113 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.729885


Total learning time: 326.273 seconds
Total inference time: 10.082 seconds
AUC ROC: 0.706689


Refined model AUC ROC: 0.706689


Dataset: 10_imdb_cora, Fold: 2, Type: transfer, Time: 01:45:35
{'AUC ROC': 0.706689, 'Recall': 0.910394, 'Parameter Learning results': {'AUC ROC': 0.506085, 'Recall': 1.0, 'CLL': -0.735325, 'AUC PR': 0.533971, 'Precision': [0.533971, 0.5], 'F1': 0.696195, 'Inference time': 1.499, 'Learning time': 6.678}, 'CLL': -0.67914, 'AUC PR': 0.732902, 'Precision': [0.609113, 0.5], 'F1': 0.729885, 'Inference time': 10.082, 'Mapping results': {'Total time': 2.5331850051879883, 'Possible mappings': 6, 'Finding best mapping': 0.000484466552734375, 'Knowledge compiling time': 0.07869648933410645, 'Generating paths time': 2.4214439392089844, 'Generating mappings time': 0.03255486488342285}, 'Learning time': 332.951}


Start learning from scratch in target domain

Target train facts examples: 8876
Target train pos examples: 140
Target train neg examples: 52

Target test facts examples: 32984
Target test pos examples: 558
Target test neg examples: 493

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7936328060672545;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.6842358916212514;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.7237518087032814;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6673784342854517;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5792891135108365;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5596022372298854;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5189205286489138;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.4570789878895837;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.4233597971885226;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3898494672190815;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.2796260020299196;  // std dev = 0,384, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.32479615896124664;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.29605184057090483;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.21600253862151753;  // std dev = 0,378, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2598237112372312;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2307823383177395;  // std dev = 0,245, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1565687026477107;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.22350557880520996;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.21314056586265942;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18511377217363276;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.1257069663267714;  // std dev = 0,367, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.17959189229677938;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15206788740757998;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1525363166340558;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.11143392010683015;  // std dev = 0,358, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.12978510968469392;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | else return -0.1338449847475085;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.08117955644370618;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.11991190074802989;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.14077042555878574;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10782852718262786;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.07532663052515053;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.0638473496665883;  // std dev = 0,358, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */


Results
   AUC ROC   = 0.704719
   AUC PR    = 0.731724
   CLL	      = -0.690292
   Precision = 0.606205 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.727794


Total learning time: 20.746 seconds
Total inference time: 2.253 seconds
AUC ROC: 0.704719


Dataset: 10_imdb_cora, Fold: 2, Type: scratch, Time: 01:45:58
{'AUC ROC': 0.704719, 'Recall': 0.910394, 'CLL': -0.690292, 'AUC PR': 0.731724, 'Precision': [0.606205, 0.5], 'F1': 0.727794, 'Inference time': 2.253, 'Learning time': 20.746}


Starting fold 3

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.12567663192749023
   Generating paths time   = 2.2774312496185303
   Generating mappings time   = 0.03231167793273926
   Possible mappings   = 6
   Finding best mapping   = 0.00036263465881347656
   Total time   = 2.435786724090576


Best mapping found: ['workedunder(A,B) -> sametitle(A,B)', 'movie(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.367157944108518;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.31635276379475713;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.26234594467956895;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2104445902287504;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16459809946843904;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1265444947183005;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09624631324551117;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07273796476004887;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05477353553379348;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04116415680798327;  // std dev = 7,449, 222,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=113 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.502315
   AUC PR    = 0.576355
   CLL	      = -0.699543
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.955 seconds
Total inference time: 1.402 seconds
AUC ROC: 0.502315


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [7.449, 109, 113]}]]
[{'': [0.2499188377566789, 0.0]}, {'': [0.2499188377566776, 0.0]}, {'': [0.24991883775667184, 0.0]}, {'': [0.24991883775667645, 0.0]}, {'': [0.2499188377566769, 0.0]}, {'': [0.2499188377566768, 0.0]}, {'': [0.24991883775667675, 0.0]}, {'': [0.24991883775667587, 0.0]}, {'': [0.2499188377566741, 0.0]}, {'': [0.24991883775667634, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.4889181658687433;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.030739953789376637;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.008517731567154404;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.5478041075133061;  // std dev = 4,315, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.41846336033524695;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.0270390361053513;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.007484033389160131;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.46599684490289806;  // std dev = 4,308, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.7485765807062436;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.3401994686974475;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.023851027745157686;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.006580988107696558;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.37505492804089174;  // std dev = 4,306, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.5857391370077536;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2654658671333026;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.021090647410594115;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.005790918254978441;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.2882155047537594;  // std dev = 4,301, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.46415131726428815;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2020192783424223;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.01868974743532482;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.005098795870205673;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.21753871803988392;  // std dev = 4,301, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.35409761451880195;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15198994044862232;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.016593258433660458;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.004491789611638817;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.16260854355438206;  // std dev = 4,299, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.2933488048386778;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.11401148938270005;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.014756227012937741;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.003958900940260098;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.12241253486879523;  // std dev = 4,299, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.23749306817568894;  // std dev = 0,111, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.08562560876138156;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.013141620003795136;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.0034906694889946955;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.09219861163012492;  // std dev = 4,298, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.2086713658477773;  // std dev = 0,119, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.06448832495929928;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.011718674776681953;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.003078932657525271;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.07027772817270149;  // std dev = 4,298, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.1771369701387736;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.04872240362204778;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | else return -0.0104616443193354;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.002716628071372155;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.0534953350683759;  // std dev = 4,297, 87,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | | | else return 0.1617880621555976;  // std dev = 0,111, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.514291
   AUC PR    = 0.576198
   CLL	      = -0.651967
   Precision = 0.647971 at threshold = 0.5
   Recall    = 0.928205
   F1        = 0.763176


Total learning time: 21.606 seconds
Total inference time: 3.401 seconds
AUC ROC: 0.514291


Refined model AUC ROC: 0.514291


Dataset: 10_imdb_cora, Fold: 3, Type: transfer, Time: 01:46:35
{'AUC ROC': 0.514291, 'Recall': 0.928205, 'Parameter Learning results': {'AUC ROC': 0.502315, 'Recall': 0.0, 'CLL': -0.699543, 'AUC PR': 0.576355, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.402, 'Learning time': 6.955}, 'CLL': -0.651967, 'AUC PR': 0.576198, 'Precision': [0.647971, 0.5], 'F1': 0.763176, 'Inference time': 3.401, 'Mapping results': {'Total time': 2.435786724090576, 'Possible mappings': 6, 'Finding best mapping': 0.00036263465881347656, 'Knowledge compiling time': 0.12567663192749023, 'Generating paths time': 2.2774312496185303, 'Generating mappings time': 0.03231167793273926}, 'Learning time': 28.561}


Start learning from scratch in target domain

Target train facts examples: 9193
Target train pos examples: 113
Target train neg examples: 113

Target test facts examples: 32667
Target test pos examples: 585
Target test neg examples: 432

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.4889181658687433;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.030739953789376637;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.008517731567154404;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.5405018762759836;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41846336033524695;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.0270390361053513;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.007484033389160131;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.4612926416518616;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3401994686974475;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.023851027745157686;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.006580988107696558;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.37194342671284675;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2654658671333026;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.021090647410594115;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.005790918254978441;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.28733367060213316;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2020192783424223;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.01868974743532482;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.005098795870205673;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.21702928101865285;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15198994044862232;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.016593258433660458;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.004491789611638817;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | | then if ( haswordvenue(H, G) )
%   | | | then return 0.16283763597633746;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.11401148938270005;  // std dev = 0,483, 65,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else return -0.014756227012937741;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( haswordtitle(A, E), haswordtitle(B, E) )
%   | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.003958900940260098;  // std dev = 0,340, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordvenue(H, E) )
%   | | | then return 0.12240801837119147;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.4469363257953037;  // std dev = 0,631, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.4928334453129363;  // std dev = 1,045, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.33287420596273093;  // std dev = 0,220, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.3907286020904949;  // std dev = 0,064, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.23264847379465198;  // std dev = 0,248, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then return 0.020306640149133647;  // std dev = 0,361, 206,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=96 */
%   | else return 0.30386425508930154;  // std dev = 0,053, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then return 0.19615831525241653;  // std dev = 0,226, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.3394915632546275;  // std dev = 0,689, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.38374910650671096;  // std dev = 1,134, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.2801848726349606;  // std dev = 0,197, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.24431348483231632;  // std dev = 0,044, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.16876336211302173;  // std dev = 0,205, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.898384
   AUC PR    = 0.864788
   CLL	      = -0.424647
   Precision = 0.957522 at threshold = 0.5
   Recall    = 0.924786
   F1        = 0.94087


Total learning time: 82.832 seconds
Total inference time: 13.365 seconds
AUC ROC: 0.898384


Dataset: 10_imdb_cora, Fold: 3, Type: scratch, Time: 01:48:11
{'AUC ROC': 0.898384, 'Recall': 0.924786, 'CLL': -0.424647, 'AUC PR': 0.864788, 'Precision': [0.957522, 0.5], 'F1': 0.94087, 'Inference time': 13.365, 'Learning time': 82.832}


Starting fold 4

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.10421586036682129
   Generating paths time   = 2.039673089981079
   Generating mappings time   = 0.041814565658569336
   Possible mappings   = 6
   Finding best mapping   = 0.00046944618225097656
   Total time   = 2.186177968978882


Best mapping found: ['workedunder(A,B) -> sametitle(A,B)', 'movie(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.50639014112966;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.43299877452533375;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.351029517594339;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2729495848556248;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20712469400580077;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1556174928114235;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.11675537240059652;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.08782150157750745;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06631466170514136;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05027412262826942;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.506316
   AUC PR    = 0.54817
   CLL	      = -0.69328
   Precision = 0.54817 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.708152


Total learning time: 4.363 seconds
Total inference time: 1.536 seconds
AUC ROC: 0.506316


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}]]
[{'': [0.22802454483473067, nan]}, {'': [0.22802454483473095, nan]}, {'': [0.22802454483472503, nan]}, {'': [0.22802454483472656, nan]}, {'': [0.22802454483472698, nan]}, {'': [0.2280245448347273, nan]}, {'': [0.22802454483472612, nan]}, {'': [0.22802454483472537, nan]}, {'': [0.22802454483472684, nan]}, {'': [0.22802454483472637, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.5180128806777413;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.4426517838203286;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.35818915709203447;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.2600148264126967;  // std dev = 0,474, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.049528997355293175;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.19889013145186038;  // std dev = 0,473, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.04206293300387109;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.017654701889428692;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.16542402151534982;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.2097577156325355;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.03553879177151896;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.11287596021427289;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.029894556746069525;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.08546748423586545;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07376313817466656;  // std dev = 0,437, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.14344045817094428;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.01273840936278012;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.04730098750243692;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.746993
   AUC PR    = 0.764574
   CLL	      = -0.576617
   Precision = 0.644658 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.766049


Total learning time: 10.011 seconds
Total inference time: 2.902 seconds
AUC ROC: 0.746993


Refined model AUC ROC: 0.746993


Dataset: 10_imdb_cora, Fold: 4, Type: transfer, Time: 01:48:33
{'AUC ROC': 0.746993, 'Recall': 0.943761, 'Parameter Learning results': {'AUC ROC': 0.506316, 'Recall': 1.0, 'CLL': -0.69328, 'AUC PR': 0.54817, 'Precision': [0.54817, 0.5], 'F1': 0.708152, 'Inference time': 1.536, 'Learning time': 4.363}, 'CLL': -0.576617, 'AUC PR': 0.764574, 'Precision': [0.644658, 0.5], 'F1': 0.766049, 'Inference time': 2.902, 'Mapping results': {'Total time': 2.186177968978882, 'Possible mappings': 6, 'Finding best mapping': 0.00046944618225097656, 'Knowledge compiling time': 0.10421586036682129, 'Generating paths time': 2.039673089981079, 'Generating mappings time': 0.041814565658569336}, 'Learning time': 14.373999999999999}


Start learning from scratch in target domain

Target train facts examples: 8000
Target train pos examples: 129
Target train neg examples: 70

Target test facts examples: 33860
Target test pos examples: 569
Target test neg examples: 475

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.48314893509950974;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.019426559477543768;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.44852127428654304;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.01617044320432853;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.3642619889388496;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.013432400712573424;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.283278747998026;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.049528997355293175;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.011138855015842528;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.21483806790650511;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.04206293300387109;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.0092237736522168;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.16135168763027297;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2097577156325355;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.03553879177151896;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.00762892845788914;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.12109176572899394;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.029894556746069525;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.0842818219099922;  // std dev = 0,470, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.025052826506284376;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.008707895481102913;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.07063609079676803;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.020929078465113212;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.0071255450819666406;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.05365354169277283;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */


Results
   AUC ROC   = 0.744299
   AUC PR    = 0.7632
   CLL	      = -0.576661
   Precision = 0.641577 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.763869


Total learning time: 7.97 seconds
Total inference time: 1.956 seconds
AUC ROC: 0.744299


Dataset: 10_imdb_cora, Fold: 4, Type: scratch, Time: 01:48:43
{'AUC ROC': 0.744299, 'Recall': 0.943761, 'CLL': -0.576661, 'AUC PR': 0.7632, 'Precision': [0.641577, 0.5], 'F1': 0.763869, 'Inference time': 1.956, 'Learning time': 7.97}


Starting fold 5

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.07465171813964844
   Generating paths time   = 2.4995293617248535
   Generating mappings time   = 0.04123663902282715
   Possible mappings   = 6
   Finding best mapping   = 0.0004723072052001953
   Total time   = 2.6158952713012695


Best mapping found: ['workedunder(A,B) -> sametitle(A,B)', 'movie(A,B) -> haswordtitle(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3714822684328418;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.32000358944101137;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.26518533117208726;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.21249917188183085;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16601088986002235;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.12749002631712725;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09687482554396132;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07315883543391806;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.055059825349243495;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04136272538430987;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.505038
   AUC PR    = 0.580576
   CLL	      = -0.696777
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.214 seconds
Total inference time: 1.338 seconds
AUC ROC: 0.505038


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}]]
[{'': [0.2498222222222265, 0.0]}, {'': [0.24982222222221978, 0.0]}, {'': [0.24982222222222325, 0.0]}, {'': [0.2498222222222224, 0.0]}, {'': [0.2498222222222226, 0.0]}, {'': [0.24982222222222072, 0.0]}, {'': [0.24982222222222275, 0.0]}, {'': [0.24982222222222064, 0.0]}, {'': [0.24982222222222286, 0.0]}, {'': [0.24982222222222308, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.27099297179675785;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.014812149378556561;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.014812149378556561;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.23470502083103983;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.013040256218347378;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.1925126634270698;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011495970442168556;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.1584696800762259;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.010146653378486747;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.12784954504974078;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.008965076262161687;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.1015235459279447;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.19670004057326665;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.007928371071891604;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.22798972558388023;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09747383798154285;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.0841166576577996;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.16371858628713193;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.007017216044217012;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.06157050376726664;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06466960556901657;  // std dev = 0,442, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.13005762759481415;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.0529636380605664;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.013764808619366808;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.13976854051975998;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1024895015797942;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.03614661401005919;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.74772
   AUC PR    = 0.776362
   CLL	      = -0.620097
   Precision = 0.84322 at threshold = 0.5
   Recall    = 0.365809
   F1        = 0.510256


Total learning time: 19.266 seconds
Total inference time: 5.196 seconds
AUC ROC: 0.74772


Refined model AUC ROC: 0.74772


Dataset: 10_imdb_cora, Fold: 5, Type: transfer, Time: 01:49:14
{'AUC ROC': 0.74772, 'Recall': 0.365809, 'Parameter Learning results': {'AUC ROC': 0.505038, 'Recall': 0.0, 'CLL': -0.696777, 'AUC PR': 0.580576, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.338, 'Learning time': 2.214}, 'CLL': -0.620097, 'AUC PR': 0.776362, 'Precision': [0.84322, 0.5], 'F1': 0.510256, 'Inference time': 5.196, 'Mapping results': {'Total time': 2.6158952713012695, 'Possible mappings': 6, 'Finding best mapping': 0.0004723072052001953, 'Knowledge compiling time': 0.07465171813964844, 'Generating paths time': 2.4995293617248535, 'Generating mappings time': 0.04123663902282715}, 'Learning time': 21.479999999999997}


Start learning from scratch in target domain

Target train facts examples: 8490
Target train pos examples: 154
Target train neg examples: 148

Target test facts examples: 33370
Target test pos examples: 544
Target test neg examples: 397

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.2642624722174136;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.48951089929460284;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.052155767372063885;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.2356882693251818;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03254015317273094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.19291064828823892;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.028843434243526523;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.15878885963196945;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.025640477399664095;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.12808235369340729;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.022850675562834787;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.30460908628245703;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12322314335202289;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.10713713478515177;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,442, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.19670004057326665;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.02040946845150366;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, B) )
%   | | then return 0.23175415575713756;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.10094792892251159;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.0839365006871908;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.16371858628713193;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.018264572141688296;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.061376191049269446;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.13909109340224876;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, A) )
%   | | then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.01637321748135532;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.0474422329853556;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */


Results
   AUC ROC   = 0.744261
   AUC PR    = 0.774641
   CLL	      = -0.630317
   Precision = 0.84322 at threshold = 0.5
   Recall    = 0.365809
   F1        = 0.510256


Total learning time: 9.547 seconds
Total inference time: 2.394 seconds
AUC ROC: 0.744261


Dataset: 10_imdb_cora, Fold: 5, Type: scratch, Time: 01:49:27
{'AUC ROC': 0.744261, 'Recall': 0.365809, 'CLL': -0.630317, 'AUC PR': 0.774641, 'Precision': [0.84322, 0.5], 'F1': 0.510256, 'Inference time': 2.394, 'Learning time': 9.547}


