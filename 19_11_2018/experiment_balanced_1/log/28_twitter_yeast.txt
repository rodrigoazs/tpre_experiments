Starting experiment #1 for 28_twitter_yeast

Start learning from source dataset

Source train facts examples: 2052
Source train pos examples: 1372
Source train neg examples: 1372

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.3581489350995074;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.3581489350995129;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3581489350995087;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else return 0.358148935099508;  // std dev = 0,500, 464,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=232 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.3581489350995133;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.3581489350995133;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.3087411357856633;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.3087411357856376;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.3087411357856372;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3087411357856372;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.25641236875856666;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.25641236875857976;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.25641236875858187;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else if ( follows(F, C) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.2564123687585887;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.2564123687585863;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.25641236875858714;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H) )
%   | | then return 0.2564123687585884;  // std dev = 0,500, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | else return 0.25641236875858603;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.20613740734453131;  // std dev = 0,500, 1.846,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=923 */
%   | | else return 0.20613740734453517;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.20613740734454172;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.20613740734453923;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.20613740734454025;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734454133;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.20613740734453861;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.20613740734453867;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.20613740734453984;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.16162857548414433;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else return 0.16162857548414417;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.1616285754841444;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.1616285754841477;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.16162857548414647;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414428;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414733;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.16162857548414664;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792081527;  // std dev = 19,274, 1.486,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=743 */
%   | | | else return 0.12455597792081972;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.12455597792081662;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(C, E) )
%   | | then return 0.12455597792082045;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.12455597792082053;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.12455597792082054;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792082039;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.12455597792081967;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.09492800936732027;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.0949280093673082;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.09492800936730682;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(C, E) )
%   | | then return 0.09492800936730778;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.09492800936730793;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.09492800936730791;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.09492800936730716;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730728;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.0718608885005646;  // std dev = 0,500, 1.548,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=774 */
%   | | else return 0.07186088850055461;  // std dev = 0,500, 386,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=193 */
%   | else if ( follows(C, E) )
%   | | then return 0.07186088850055611;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.0718608885005588;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.07186088850055841;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( accounttype(G, I), accounttype(H, I) )
%   | | | then return 0.07186088850055906;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.07186088850055883;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07186088850055895;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07186088850055862;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375954569;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.05418307375954943;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.054183073759546486;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then return 0.05418307375954717;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.05418307375954967;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954895;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.054183073759549;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.0541830737595491;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.040760253233045114;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.04076025323305617;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.04076025323305549;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.04076025323305643;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.040760253233056175;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.04076025323305458;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.04076025323305688;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0407602532330571;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Predicates from source: ['tweets(account,word).', 'follows(account,account).', 'accounttype(account,type).']

Starting fold 1

Target predicate: complex 

Mapping Results
   Knowledge compiling time   = 0.0918421745300293
   Generating paths time   = 2.262333631515503
   Generating mappings time   = 0.042539119720458984
   Possible mappings   = 28
   Finding best mapping   = 0.003353118896484375
   Total time   = 2.400073528289795


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> complex(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: complex 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;complex(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;complex(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;complex(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;complex(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;complex(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;complex(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;complex(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;complex(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;complex(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;complex(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995113;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856347;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.3087411357856348;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856347;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.308741135785635;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3087411357856347;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585866;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.25641236875858653;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585857;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.2564123687585857;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.2564123687585864;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585864;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453986;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.20613740734453984;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734453903;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.2061374073445394;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.2061374073445395;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445398;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453972;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841475;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414764;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.16162857548414708;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.16162857548414683;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.1245559779208193;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792081925;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.12455597792081982;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.1245559779208195;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792081943;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730673;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.0949280093673068;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730673;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.0949280093673066;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.0949280093673069;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730679;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055898;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.0718608885005585;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055902;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055856;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.07186088850055856;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055877;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07186088850055906;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954964;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.0541830737595492;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05418307375954928;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759549005;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else return 0.05418307375954923;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954923;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.05418307375954937;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.05418307375954945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233056355;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.040760253233056376;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.04076025323305635;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.040760253233056376;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.040760253233056216;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305638;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.04076025323305632;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04076025323305638;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.964 seconds
Total inference time: 1.228 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [1.581, 5, 5], 'true,true,true,true': [3.464, 24, 24], 'true,true,false,false': [1.581, 5, 5], 'true,false': [6.205, 77, 77], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'true,true,false,true': [0.707, 1, 1], 'true,true,true,false': [0.707, 1, 1]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [3.937, 31, 31], 'true,false,false,false': [1.414, 4, 4], 'false,true,true,true': [3.0, 18, 18], 'true,false,false,true': [2.121, 9, 9], 'true,false,true,false': [2.121, 9, 9], 'true,false,true,true': [2.915, 17, 17], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'false,true,false': [3.808, 29, 29]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [2.0, 8, 8], 'true,false,true,true': [4.359, 38, 38], 'true,true,true': [3.536, 25, 25], 'true,true,false,false': [1.581, 5, 5], 'true,false,true,false': [3.937, 31, 31], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.707, 1, 1], 'true,false,false': [2.0, 8, 8]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [4.359, 38, 38], 'true,true,false': [1.581, 5, 5], 'false,true,true,true': [1.732, 6, 6], 'true,false,false': [2.0, 8, 8], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true,false': [3.937, 31, 31], 'true,true,true': [3.606, 26, 26]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [4.359, 38, 38], 'true,true,false': [1.732, 6, 6], 'false,true,true,true': [1.732, 6, 6], 'true,false,false': [2.0, 8, 8], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true,false': [3.937, 31, 31], 'true,true,true': [3.536, 25, 25]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.581, 5, 5], 'true,true,true,true': [3.464, 24, 24], 'true,false,false': [2.55, 13, 13], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'true,false,true': [3.606, 26, 26], 'false,true,true,true': [3.0, 18, 18], 'true,true,true,false': [1.0, 2, 2]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.732, 6, 6], 'true,true,true,true': [3.464, 24, 24], 'true,false,false': [2.55, 13, 13], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'true,false,true': [3.606, 26, 26], 'false,true,true,true': [3.0, 18, 18], 'true,true,true,false': [0.707, 1, 1]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.414, 4, 4], 'true,true,false': [1.732, 6, 6], 'true,false,false,true': [2.121, 9, 9], 'false,true,true,false': [1.225, 3, 3], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'true,true,true': [3.536, 25, 25], 'true,false,true': [3.606, 26, 26], 'false,true,true,true': [3.0, 18, 18]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [1.732, 6, 6], 'true,true,true,true': [3.464, 24, 24], 'true,false,false': [2.0, 8, 8], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'true,false,true': [5.874, 69, 69], 'false,true,true,true': [1.581, 5, 5], 'true,true,true,false': [0.707, 1, 1]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [3.937, 31, 31], 'true,false,false,false': [1.414, 4, 4], 'false,true,true,true': [3.0, 18, 18], 'true,false,false,true': [2.121, 9, 9], 'true,false,true,false': [2.121, 9, 9], 'true,false,true,true': [2.915, 17, 17], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'false,true,false': [3.808, 29, 29]}]]
[{'': [0.2500000000000031, 0.24999999999999956], 'true,true': [0.25000000000000133, 0.25], 'true,true,false': [0.25, 0.24999999999999983], 'false,true,true': [0.24999999999999983, 0.24999999999999992], 'false,true': [0.24999999999999997, 0.24999999999999986], 'false': [0.24999999999999956, nan], 'true,true,true': [0.2500000000000013, 0.25], 'true': [0.25000000000000155, 0.25]}, {'': [0.24999999999999747, 0.24999999999999814], 'false,true,true': [0.25, 0.2499999999999999], 'true,false,true': [0.25, 0.2500000000000001], 'true,false': [0.25000000000000083, 0.2500000000000001], 'false,true': [0.24999999999999994, 0.25000000000000094], 'false': [0.24999999999999814, nan], 'true,false,false': [0.25000000000000006, 0.24999999999999994], 'true': [0.2500000000000012, 0.2500000000000011]}, {'': [0.24999999999999764, 0.24999999999999997], 'true,true': [0.25000000000000006, 0.25000000000000006], 'true,true,false': [0.25, 0.25000000000000006], 'true,false,true': [0.24999999999999953, 0.2499999999999995], 'true,false': [0.2500000000000001, 0.25], 'false,true': [0.25, 0.25], 'false': [0.24999999999999997, nan], 'true': [0.2499999999999994, 0.25000000000000006]}, {'': [0.24999999999999958, 0.2500000000000002], 'false,true,true': [0.24999999999999992, 0.25], 'true,true': [0.24999999999999986, 0.24999999999999994], 'true,false,true': [0.250000000000001, 0.2500000000000007], 'true,false': [0.24999999999999994, 0.2500000000000002], 'false,true': [0.2500000000000002, 0.24999999999999994], 'false': [0.2500000000000002, nan], 'true': [0.2500000000000007, 0.24999999999999978]}, {'': [0.25000000000000094, 0.2499999999999997], 'false,true,true': [0.24999999999999997, 0.24999999999999997], 'true,true': [0.2499999999999996, 0.24999999999999997], 'false': [0.2499999999999997, nan], 'false,true': [0.24999999999999986, 0.24999999999999997], 'true': [0.24999999999999964, 0.25000000000000044], 'true,false': [0.25000000000000044, 0.24999999999999986], 'true,false,true': [0.24999999999999958, 0.24999999999999978]}, {'': [0.2500000000000003, 0.24999999999999967], 'true,true': [0.25000000000000006, 0.25000000000000006], 'false,true,true': [0.25, 0.25], 'true,false': [0.25000000000000006, 0.2499999999999999], 'false,true': [0.25, 0.25], 'false': [0.24999999999999967, nan], 'true,true,true': [0.25000000000000006, 0.24999999999999997], 'true': [0.24999999999999997, 0.24999999999999992]}, {'': [0.2500000000000001, 0.24999999999999967], 'true,true': [0.24999999999999986, 0.25], 'false,true,true': [0.24999999999999986, 0.25], 'true,false': [0.24999999999999994, 0.2500000000000003], 'false,true': [0.24999999999999986, 0.2499999999999999], 'false': [0.24999999999999967, nan], 'true,true,true': [0.24999999999999986, 0.25], 'true': [0.24999999999999986, 0.24999999999999986]}, {'': [0.25000000000000033, 0.24999999999999978], 'false,true,true': [0.24999999999999994, 0.24999999999999997], 'true,true': [0.24999999999999964, 0.25000000000000006], 'true,false': [0.24999999999999967, 0.2500000000000001], 'false,true': [0.24999999999999978, 0.24999999999999967], 'false': [0.24999999999999978, nan], 'true,false,false': [0.25000000000000006, 0.24999999999999997], 'true': [0.24999999999999967, 0.24999999999999972]}, {'': [0.2500000000000014, 0.24999999999999992], 'true,true': [0.2500000000000003, 0.24999999999999992], 'false,true,true': [0.24999999999999994, 0.25], 'true,false': [0.2499999999999998, 0.2499999999999999], 'false,true': [0.24999999999999994, 0.24999999999999997], 'false': [0.24999999999999992, nan], 'true,true,true': [0.2500000000000003, 0.25], 'true': [0.2500000000000003, 0.2500000000000002]}, {'': [0.25000000000000033, 0.2500000000000002], 'false,true,true': [0.25000000000000017, 0.25], 'true,false,true': [0.2500000000000001, 0.25000000000000006], 'true,false': [0.25000000000000006, 0.25000000000000017], 'false,true': [0.2500000000000001, 0.2500000000000001], 'false': [0.2500000000000002, nan], 'true,false,false': [0.25000000000000006, 0.25], 'true': [0.25000000000000006, 0.25000000000000017]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;complex(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;complex(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;complex(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;complex(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;complex(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;complex(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;complex(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;complex(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;complex(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;complex(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995113;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.3581489350995111;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else return 0.35814893509951234;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3087411357856352;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else if ( interaction(C, D) )
%   | | then return 0.3087411357856347;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.3087411357856349;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.30874113578563517;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3087411357856347;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.3087411357856353;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.25641236875858603;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.2564123687585859;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.25641236875858603;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.2564123687585865;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453992;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.2061374073445399;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445399;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.20613740734454125;  // std dev = 0,500, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445398;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414747;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(D, C) )
%   | | then return 0.16162857548414594;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.16162857548414655;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414641;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081989;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.12455597792081975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.12455597792081963;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.12455597792081956;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.1245559779208198;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.12455597792081985;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.12455597792081978;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.12455597792082028;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730668;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.0949280093673068;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.0949280093673068;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.0949280093673068;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730698;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.09492800936730744;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055856;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07186088850055881;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.07186088850055851;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055851;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.07186088850055877;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.0718608885005585;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.07186088850055855;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.07186088850055856;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.07186088850055874;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954964;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.054183073759549255;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05418307375954923;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759549005;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.05418307375954877;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954878;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.05418307375954927;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.05418307375954945;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.0407602532330562;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0407602532330562;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.040760253233056376;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.04076025323305623;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.040760253233056355;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.04076025323305635;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.040760253233056376;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.040760253233056216;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.04076025323305637;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.114 seconds
Total inference time: 1.304 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 1, Type: transfer, Time: 08:19:47
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.228, 'Learning time': 5.964}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.304, 'Mapping results': {'Total time': 2.400073528289795, 'Possible mappings': 28, 'Finding best mapping': 0.003353118896484375, 'Knowledge compiling time': 0.0918421745300293, 'Generating paths time': 2.262333631515503, 'Generating mappings time': 0.042539119720458984}, 'Learning time': 13.078}


Start learning from scratch in target domain

Target train facts examples: 4484
Target train pos examples: 120
Target train neg examples: 120

Target test facts examples: 10296
Target test pos examples: 484
Target test neg examples: 484

WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.3581489350995112;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.35814893509951223;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.35814893509951234;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3087411357856347;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.3087411357856347;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.3087411357856347;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( enzyme(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.3087411357856348;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3087411357856347;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.3087411357856348;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.3087411357856347;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.2564123687585864;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585867;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2564123687585862;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else if ( enzyme(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2564123687585866;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.25641236875858575;  // std dev = 0,500, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C) )
%   | then return 0.20613740734454147;  // std dev = 0,500, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | else if ( phenotype(C, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445399;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2061374073445399;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( proteinclass(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453997;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, I) )
%   | | | then return 0.20613740734453975;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20613740734454003;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734454003;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16162857548414625;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16162857548414625;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( proteinclass(C, D) )
%   | | | then return 0.16162857548414636;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1616285754841462;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414628;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.16162857548414675;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.16162857548414683;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return 0.16162857548414725;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.1245559779208194;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.1245559779208194;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.12455597792081947;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.12455597792081918;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.12455597792081947;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.12455597792081977;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else if ( proteinclass(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.1245559779208192;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12455597792081928;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.12455597792081953;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.09492800936730661;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730661;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.09492800936730644;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09492800936730647;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.09492800936730651;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0949280093673069;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.09492800936730668;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.09492800936730676;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return 0.09492800936730701;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055843;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0718608885005585;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.0718608885005585;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.0718608885005585;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.07186088850055845;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07186088850055872;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.07186088850055873;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.07186088850055856;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return 0.07186088850055873;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.05418307375954923;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.054183073759549304;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( proteinclass(A, D) )
%   | | | then return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054183073759549435;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05418307375954945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.05418307375954949;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.054183073759549484;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else return 0.05418307375954948;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.040760253233055994;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.040760253233055994;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(E, C) )
%   | | | then return 0.04076025323305625;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return 0.04076025323305626;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.04076025323305635;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305637;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.040760253233056286;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.04076025323305654;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0407602532330564;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 13.982 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 1, Type: scratch, Time: 08:20:03
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.523, 'Learning time': 13.982}


Starting fold 2

Target predicate: complex 

Mapping Results
   Knowledge compiling time   = 0.04686617851257324
   Generating paths time   = 2.172081708908081
   Generating mappings time   = 0.04262661933898926
   Possible mappings   = 28
   Finding best mapping   = 0.0033888816833496094
   Total time   = 2.2649686336517334


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> complex(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: complex 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;complex(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;complex(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;complex(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;complex(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;complex(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;complex(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;complex(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;complex(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;complex(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;complex(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995113;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0.35814893509951157;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856371;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.30874113578563517;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856352;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.3087411357856351;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3087411357856347;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585862;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.256412368758586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585861;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.25641236875858625;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.2564123687585868;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else return 0.25641236875858653;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.2061374073445387;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else return 0.20613740734453895;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445397;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.2061374073445393;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else return 0.2061374073445399;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453984;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841473;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else return 0.16162857548414616;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414733;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.16162857548414755;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else return 0.16162857548414677;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081981;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.1245559779208193;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792081957;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.1245559779208198;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792081988;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.12455597792081974;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.12455597792081975;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730704;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.09492800936730639;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.09492800936730658;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730682;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.09492800936730673;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730708;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730694;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055844;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.07186088850055847;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055908;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.0718608885005585;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07186088850055851;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055856;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.0718608885005586;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.07186088850055915;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0541830737595494;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.05418307375954902;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.05418307375954947;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375954866;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | else return 0.054183073759549234;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0541830737595492;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305637;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.040760253233056376;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.04076025323305627;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305639;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.040760253233056466;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.04076025323305654;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.04076025323305638;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.301 seconds
Total inference time: 1.197 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [1.732, 6, 6], 'true,true,true,true': [4.359, 38, 38], 'true,true,false,false': [2.345, 11, 11], 'true,false': [6.364, 81, 81], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,true,false,true': [1.225, 3, 3], 'true,true,true,false': [2.0, 8, 8]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [5.477, 60, 60], 'true,false,false,false': [1.0, 2, 2], 'false,true,true,true': [2.646, 14, 14], 'true,false,false,true': [1.871, 7, 7], 'true,false,true,false': [2.236, 10, 10], 'true,false,true,true': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [4.183, 35, 35]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [1.871, 7, 7], 'true,false,true,true': [3.742, 28, 28], 'true,true,true': [4.796, 46, 46], 'true,true,false,false': [2.345, 11, 11], 'true,false,true,false': [4.95, 49, 49], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.225, 3, 3], 'true,false,false': [1.414, 4, 4]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [3.742, 28, 28], 'true,true,false': [3.162, 20, 20], 'false,true,true,true': [1.581, 5, 5], 'true,false,false': [1.414, 4, 4], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true,false': [4.95, 49, 49], 'true,true,true': [4.472, 40, 40]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [3.742, 28, 28], 'true,true,false': [2.646, 14, 14], 'false,true,true,true': [1.581, 5, 5], 'true,false,false': [1.414, 4, 4], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true,false': [4.95, 49, 49], 'true,true,true': [4.796, 46, 46]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [3.162, 20, 20], 'true,true,true,true': [4.301, 37, 37], 'true,false,false': [2.121, 9, 9], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [3.937, 31, 31], 'false,true,true,true': [2.646, 14, 14], 'true,true,true,false': [1.225, 3, 3]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.646, 14, 14], 'true,true,true,true': [4.359, 38, 38], 'true,false,false': [2.121, 9, 9], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [3.937, 31, 31], 'false,true,true,true': [2.646, 14, 14], 'true,true,true,false': [2.0, 8, 8]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.0, 2, 2], 'true,true,false': [3.082, 19, 19], 'true,false,false,true': [1.871, 7, 7], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'true,true,true': [4.528, 41, 41], 'true,false,true': [3.937, 31, 31], 'false,true,true,true': [2.646, 14, 14]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [2.646, 14, 14], 'true,true,true,true': [4.359, 38, 38], 'true,false,false': [1.414, 4, 4], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [6.205, 77, 77], 'false,true,true,true': [1.732, 6, 6], 'true,true,true,false': [2.0, 8, 8]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [5.477, 60, 60], 'true,false,false,false': [1.0, 2, 2], 'false,true,true,true': [2.646, 14, 14], 'true,false,false,true': [1.871, 7, 7], 'true,false,true,false': [2.236, 10, 10], 'true,false,true,true': [3.24, 21, 21], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [4.183, 35, 35]}]]
[{'': [0.25000000000000394, 0.25], 'false,true,true': [0.25, 0.25], 'true,true': [0.2500000000000002, 0.24999999999999956], 'true,true,false': [0.24999999999999992, 0.24999999999999958], 'false,true': [0.25, 0.25], 'false': [0.25, nan], 'true,true,true': [0.2500000000000016, 0.24999999999999997], 'true': [0.24999999999999975, 0.2500000000000008]}, {'': [0.2500000000000006, 0.24999999999999845], 'false,true,true': [0.2500000000000003, 0.24999999999999997], 'false': [0.24999999999999845, nan], 'true,false,false': [0.24999999999999986, 0.25], 'false,true': [0.2500000000000003, 0.2500000000000014], 'true': [0.24999999999999775, 0.2500000000000012], 'true,false': [0.2500000000000013, 0.24999999999999994], 'true,false,true': [0.2500000000000004, 0.24999999999999994]}, {'': [0.24999999999999628, 0.25000000000000006], 'true,true': [0.24999999999999953, 0.25000000000000006], 'true,true,false': [0.24999999999999992, 0.24999999999999983], 'true,false,true': [0.24999999999999933, 0.24999999999999906], 'true,false': [0.25000000000000006, 0.2500000000000001], 'false,true': [0.25, 0.25], 'false': [0.25000000000000006, nan], 'true': [0.2500000000000002, 0.25000000000000006]}, {'': [0.24999999999999975, 0.2500000000000002], 'false,true,true': [0.24999999999999994, 0.25], 'true,true': [0.2500000000000007, 0.24999999999999978], 'true,false,true': [0.25000000000000006, 0.2500000000000008], 'true,false': [0.2499999999999998, 0.25], 'false,true': [0.25, 0.25], 'false': [0.2500000000000002, nan], 'true': [0.25, 0.24999999999999978]}, {'': [0.2500000000000009, 0.24999999999999975], 'false,true,true': [0.24999999999999994, 0.24999999999999997], 'true,true': [0.24999999999999942, 0.2500000000000003], 'false': [0.24999999999999975, nan], 'false,true': [0.24999999999999994, 0.24999999999999997], 'true': [0.24999999999999953, 0.25000000000000067], 'true,false': [0.25000000000000056, 0.25], 'true,false,true': [0.24999999999999964, 0.24999999999999978]}, {'': [0.25000000000000105, 0.24999999999999978], 'false,true,true': [0.24999999999999997, 0.25], 'true,true': [0.24999999999999986, 0.24999999999999992], 'true,false': [0.24999999999999997, 0.2499999999999999], 'false,true': [0.24999999999999997, 0.24999999999999994], 'false': [0.24999999999999978, nan], 'true,true,true': [0.24999999999999986, 0.25], 'true': [0.2499999999999995, 0.24999999999999992]}, {'': [0.250000000000001, 0.24999999999999967], 'false,true,true': [0.24999999999999975, 0.25], 'true,true': [0.2499999999999996, 0.2500000000000003], 'true,false': [0.2499999999999999, 0.25000000000000006], 'false,true': [0.2499999999999998, 0.24999999999999986], 'false': [0.24999999999999967, nan], 'true,true,true': [0.24999999999999967, 0.24999999999999997], 'true': [0.24999999999999944, 0.24999999999999986]}, {'': [0.2500000000000015, 0.24999999999999978], 'false,true,true': [0.2500000000000001, 0.24999999999999997], 'true,true': [0.24999999999999944, 0.25000000000000006], 'true,false': [0.2499999999999997, 0.25000000000000006], 'false,true': [0.2500000000000001, 0.2499999999999997], 'false': [0.24999999999999978, nan], 'true,false,false': [0.25000000000000006, 0.25], 'true': [0.24999999999999947, 0.24999999999999956]}, {'': [0.2500000000000007, 0.2499999999999999], 'false,true,true': [0.2499999999999999, 0.25], 'true,true': [0.24999999999999947, 0.24999999999999986], 'true,false': [0.2500000000000002, 0.25], 'false,true': [0.24999999999999994, 0.25], 'false': [0.2499999999999999, nan], 'true,true,true': [0.2499999999999998, 0.24999999999999997], 'true': [0.2499999999999993, 0.25000000000000044]}, {'': [0.25000000000000033, 0.2500000000000002], 'false,true,true': [0.2499999999999998, 0.24999999999999997], 'true,false,true': [0.2500000000000001, 0.25], 'true,false': [0.2500000000000001, 0.25], 'false,true': [0.24999999999999983, 0.25000000000000017], 'false': [0.2500000000000002, nan], 'true,false,false': [0.24999999999999997, 0.25], 'true': [0.2499999999999999, 0.25000000000000017]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;complex(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;complex(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;complex(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;complex(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;complex(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;complex(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;complex(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;complex(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;complex(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;complex(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.35814893509951334;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(A, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995113;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3581489350995113;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856371;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.30874113578563517;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856352;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856347;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.3087411357856347;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2564123687585856;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.2564123687585856;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.2564123687585856;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(E, C) )
%   | | then return 0.25641236875858825;  // std dev = 0,500, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | else return 0.25641236875858664;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( proteinclass(A, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20613740734453906;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.20613740734453878;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.20613740734453928;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453898;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0.20613740734454128;  // std dev = 0,500, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453984;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414647;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.16162857548414622;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.16162857548414666;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.16162857548414641;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414655;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.12455597792081982;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.1245559779208194;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081909;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.124555977920819;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.12455597792081977;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.12455597792081904;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(I, A) )
%   | then return 0.12455597792082013;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.09492800936730757;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.09492800936730639;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.09492800936730686;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.09492800936730639;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.09492800936730637;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.09492800936730636;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730593;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.0718608885005578;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.07186088850055787;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.07186088850055809;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.07186088850055826;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.07186088850055809;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.0718608885005585;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.07186088850055834;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.07186088850055863;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.05418307375954941;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.05418307375954943;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.054183073759549366;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.05418307375954956;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.05418307375954928;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.054183073759549255;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.040760253233055925;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.040760253233055946;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.0407602532330563;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.04076025323305621;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.040760253233056286;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.04076025323305623;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.04076025323305599;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.040760253233056154;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.067 seconds
Total inference time: 1.179 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 2, Type: transfer, Time: 08:20:25
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.197, 'Learning time': 8.301}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.179, 'Mapping results': {'Total time': 2.2649686336517334, 'Possible mappings': 28, 'Finding best mapping': 0.0033888816833496094, 'Knowledge compiling time': 0.04686617851257324, 'Generating paths time': 2.172081708908081, 'Generating mappings time': 0.04262661933898926}, 'Learning time': 17.368000000000002}


Start learning from scratch in target domain

Target train facts examples: 3810
Target train pos examples: 150
Target train neg examples: 150

Target test facts examples: 10970
Target test pos examples: 454
Target test neg examples: 454

WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( phenotype(A, C) )
%   then if ( enzyme(A, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( enzyme(E, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.3581489350995135;  // std dev = 0,500, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, F), proteinclass(F, G) )
%   | | then return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.3581489350995121;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.30874113578563483;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), proteinclass(G, H) )
%   | | | then return 0.3087411357856348;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563483;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), proteinclass(I, J) )
%   | | | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( phenotype(A, K) )
%   | then return 0.30874113578563733;  // std dev = 0,500, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else if ( interaction(L, A) )
%   | | then return 0.30874113578563694;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.25641236875858636;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.2564123687585856;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.25641236875858564;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0.25641236875858814;  // std dev = 0,500, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   else if ( proteinclass(A, E) )
%   | then return 0.25641236875858614;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2564123687585858;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585858;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(C, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20613740734453972;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.2061374073445392;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( proteinclass(A, D) )
%   | | | then return 0.20613740734453914;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2061374073445392;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else return 0.20613740734454114;  // std dev = 0,500, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   else if ( proteinclass(A, E) )
%   | then return 0.20613740734453942;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.20613740734453914;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453914;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.16162857548414644;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), proteinclass(E, F) )
%   | | | then return 0.16162857548414644;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16162857548414644;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.16162857548414475;  // std dev = 0,500, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, G), proteinclass(G, H) )
%   | | then return 0.1616285754841467;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( proteinclass(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16162857548414594;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.16162857548414572;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.1245559779208196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081952;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), proteinclass(G, H) )
%   | | | then return 0.1245559779208195;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081952;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081974;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( phenotype(A, I) )
%   | then if ( proteinclass(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.1245559779208192;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.1245559779208196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081892;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0.12455597792081888;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.09492800936730764;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.09492800936730593;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09492800936730585;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(E, C) )
%   | | | then return 0.09492800936730571;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.09492800936730593;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( proteinclass(A, F) )
%   | then return 0.09492800936730696;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.09492800936730694;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730694;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730726;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.07186088850055826;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), proteinclass(E, F) )
%   | | | then return 0.07186088850055827;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055826;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G), proteinclass(G, H) )
%   | | then return 0.07186088850055843;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.07186088850055838;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( phenotype(A, I) )
%   | then if ( proteinclass(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.07186088850055813;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.07186088850055847;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850055886;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0.07186088850055887;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.05418307375954947;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.05418307375954849;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.05418307375954859;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(E, C) )
%   | | | then return 0.0541830737595489;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.05418307375954856;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( proteinclass(A, F) )
%   | then return 0.05418307375954937;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.05418307375954946;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.040760253233055876;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), proteinclass(E, F) )
%   | | | then return 0.04076025323305599;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.040760253233055876;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( proteinclass(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.04076025323305622;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.04076025323305611;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04076025323305602;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, I), proteinclass(I, J) )
%   | | then return 0.04076025323305599;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.04076025323305599;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056314;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 13.162 seconds
Total inference time: 1.292 seconds
AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 2, Type: scratch, Time: 08:20:40
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.292, 'Learning time': 13.162}


Starting fold 3

Target predicate: complex 

Mapping Results
   Knowledge compiling time   = 0.10756492614746094
   Generating paths time   = 2.448976516723633
   Generating mappings time   = 0.0419766902923584
   Possible mappings   = 28
   Finding best mapping   = 0.0034732818603515625
   Total time   = 2.601996660232544


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> complex(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: complex 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;complex(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;complex(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;complex(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;complex(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;complex(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;complex(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;complex(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;complex(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;complex(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;complex(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else return 0.3581489350995089;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856348;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856348;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.30874113578563483;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856349;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.30874113578563495;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.30874113578563556;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.30874113578563483;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.25641236875858686;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25641236875858675;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585862;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.25641236875858764;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.25641236875858725;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858625;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454014;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.20613740734453997;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454167;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.20613740734454006;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.20613740734454034;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453956;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.20613740734453992;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414622;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.16162857548414647;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414766;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.16162857548414702;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.1616285754841473;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414683;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16162857548414658;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081943;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792081956;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082057;  // std dev = 5,701, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | else return 0.12455597792082042;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082025;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.12455597792081974;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.12455597792082057;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730685;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730651;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(C, E) )
%   | | then return 0.0949280093673077;  // std dev = 5,701, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | else return 0.09492800936730676;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.0949280093673065;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730703;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055887;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.0718608885005588;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055895;  // std dev = 5,701, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055898;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.07186088850055844;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.0718608885005588;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.0718608885005586;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.07186088850055912;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759549526;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.054183073759549234;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.054183073759549505;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759547964;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | else return 0.0541830737595494;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954882;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.05418307375954878;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.05418307375954923;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233056376;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305638;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.040760253233056216;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305647;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.040760253233055994;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305654;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.040760253233056654;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.040760253233056425;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695957
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.139 seconds
Total inference time: 1.472 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [2.449, 12, 12], 'true,true,true,true': [3.162, 20, 20], 'true,true,false,false': [2.915, 17, 17], 'true,false': [7.681, 118, 118], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.55, 13, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,true,false': [1.225, 3, 3]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [4.472, 40, 40], 'true,false,false,false': [1.581, 5, 5], 'false,true,true,true': [3.082, 19, 19], 'true,false,false,true': [3.536, 25, 25], 'true,false,true,false': [3.536, 25, 25], 'true,false,true,true': [4.472, 40, 40], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [4.062, 33, 33]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [3.536, 25, 25], 'true,false,true,true': [4.69, 44, 44], 'true,true,true': [3.391, 23, 23], 'true,true,false,false': [2.915, 17, 17], 'true,false,true,false': [5.292, 56, 56], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,false': [3.0, 18, 18]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [4.69, 44, 44], 'true,true,false': [2.915, 17, 17], 'false,true,true,true': [2.121, 9, 9], 'true,false,false': [3.0, 18, 18], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.828, 16, 16], 'true,false,true,false': [5.292, 56, 56], 'true,true,true': [3.391, 23, 23]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [4.69, 44, 44], 'true,true,false': [2.915, 17, 17], 'false,true,true,true': [2.121, 9, 9], 'true,false,false': [3.0, 18, 18], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.828, 16, 16], 'true,false,true,false': [5.292, 56, 56], 'true,true,true': [3.391, 23, 23]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.915, 17, 17], 'true,true,true,true': [3.162, 20, 20], 'true,false,false': [3.873, 30, 30], 'false,true,false': [4.062, 33, 33], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [5.701, 65, 65], 'false,true,true,true': [3.082, 19, 19], 'true,true,true,false': [1.225, 3, 3]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.915, 17, 17], 'true,true,true,true': [3.162, 20, 20], 'true,false,false': [3.873, 30, 30], 'false,true,false': [4.062, 33, 33], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [5.701, 65, 65], 'false,true,true,true': [3.082, 19, 19], 'true,true,true,false': [1.225, 3, 3]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.581, 5, 5], 'true,true,false': [3.082, 19, 19], 'true,false,false,true': [3.536, 25, 25], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [4.062, 33, 33], 'false,false': [0.0, 0, 0], 'true,true,true': [3.24, 21, 21], 'true,false,true': [5.701, 65, 65], 'false,true,true,true': [3.082, 19, 19]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [2.915, 17, 17], 'true,true,true,true': [3.162, 20, 20], 'true,false,false': [3.0, 18, 18], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.55, 13, 13], 'true,false,true': [7.071, 100, 100], 'false,true,true,true': [2.449, 12, 12], 'true,true,true,false': [1.225, 3, 3]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [4.472, 40, 40], 'true,false,false,false': [1.581, 5, 5], 'false,true,true,true': [3.082, 19, 19], 'true,false,false,true': [3.536, 25, 25], 'true,false,true,false': [3.536, 25, 25], 'true,false,true,true': [4.472, 40, 40], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [4.062, 33, 33]}]]
[{'': [0.2500000000000043, 0.2500000000000015], 'false,true,true': [0.24999999999999956, 0.24999999999999956], 'true,true': [0.2500000000000012, 0.24999999999999953], 'true,true,false': [nan, 0.24999999999999953], 'false,true': [0.25000000000000133, 0.24999999999999983], 'false': [0.2500000000000015, nan], 'true,true,true': [0.24999999999999983, 0.24999999999999992], 'true': [0.25000000000000117, 0.2500000000000034]}, {'': [0.2500000000000003, 0.2499999999999982], 'false,true,true': [0.25000000000000044, 0.25], 'true,false,true': [0.2500000000000001, 0.25000000000000033], 'true,false,false': [0.24999999999999958, 0.24999999999999994], 'false,true': [0.25000000000000044, 0.2499999999999996], 'false': [0.2499999999999982, nan], 'true,false': [0.24999999999999764, 0.2499999999999999], 'true': [0.25000000000000105, 0.2499999999999988]}, {'': [0.24999999999999628, 0.24999999999999947], 'true,true': [0.24999999999999992, 0.2499999999999999], 'true,true,false': [nan, 0.2499999999999999], 'true,false,true': [0.24999999999999947, 0.2500000000000005], 'true,false': [0.24999999999999997, 0.25000000000000006], 'false,true': [0.25000000000000017, 0.25000000000000006], 'false': [0.24999999999999947, nan], 'true': [0.2499999999999995, 0.24999999999999636]}, {'': [0.25000000000000033, 0.25000000000000056], 'true,true': [0.24999999999999964, 0.24999999999999958], 'false,true,true': [0.2500000000000002, 0.24999999999999964], 'true,false,true': [0.2500000000000005, 0.2500000000000005], 'true,false': [0.2499999999999999, 0.2499999999999999], 'false,true': [0.24999999999999975, 0.24999999999999992], 'false': [0.25000000000000056, nan], 'true': [0.250000000000001, 0.24999999999999975]}, {'': [0.25000000000000083, 0.24999999999999983], 'false,true,true': [0.2499999999999998, 0.24999999999999983], 'true,true': [0.24999999999999992, 0.25], 'false': [0.24999999999999983, nan], 'false,true': [0.24999999999999992, 0.24999999999999994], 'true': [0.24999999999999956, 0.250000000000001], 'true,false': [0.25000000000000094, 0.24999999999999994], 'true,false,true': [0.24999999999999975, 0.2500000000000001]}, {'': [0.2500000000000005, 0.24999999999999997], 'true,true': [0.25, 0.24999999999999994], 'false,true,true': [0.24999999999999986, 0.25], 'true,false': [0.2500000000000001, 0.24999999999999983], 'false,true': [0.24999999999999983, 0.24999999999999983], 'false': [0.24999999999999997, nan], 'true,true,true': [0.25, 0.25], 'true': [0.24999999999999992, 0.2500000000000001]}, {'': [0.2499999999999999, 0.24999999999999967], 'true,true': [0.24999999999999983, 0.2500000000000002], 'false,true,true': [0.25000000000000006, 0.25], 'true,false': [0.24999999999999972, 0.2499999999999999], 'false,true': [0.25, 0.2499999999999999], 'false': [0.24999999999999967, nan], 'true,true,true': [0.24999999999999986, 0.25], 'true': [0.24999999999999983, 0.250000000000001]}, {'': [0.2500000000000013, 0.2499999999999998], 'false,true,true': [0.24999999999999986, 0.24999999999999997], 'true,true': [0.24999999999999978, 0.2499999999999998], 'true,false': [0.24999999999999972, 0.24999999999999956], 'false,true': [0.24999999999999978, 0.24999999999999972], 'false': [0.2499999999999998, nan], 'true,false,false': [0.2499999999999996, 0.25], 'true': [0.2499999999999997, 0.25000000000000133]}, {'': [0.2500000000000001, 0.2500000000000002], 'false,true,true': [0.25000000000000017, 0.2500000000000001], 'true,true': [0.25000000000000017, 0.2499999999999999], 'true,false': [0.2500000000000011, 0.24999999999999994], 'false,true': [0.25000000000000017, 0.25000000000000006], 'false': [0.2500000000000002, nan], 'true,true,true': [0.25, 0.25], 'true': [0.24999999999999972, 0.2500000000000015]}, {'': [0.25000000000000033, 0.2500000000000004], 'false,true,true': [0.2500000000000001, 0.24999999999999997], 'true,false,true': [0.2500000000000001, 0.25000000000000006], 'true,false': [0.2500000000000001, 0.2500000000000002], 'false,true': [0.25000000000000017, 0.2500000000000003], 'false': [0.2500000000000004, nan], 'true,false,false': [0.2500000000000003, 0.25], 'true': [0.2500000000000001, 0.2500000000000002]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;complex(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;complex(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;complex(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;complex(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;complex(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;complex(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;complex(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;complex(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;complex(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;complex(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, E) )
%   | | then return 0.3581489350995134;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | else return 0.35814893509951323;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( phenotype(A, D) )
%   | | then if ( interaction(A, E), phenotype(E, D) )
%   | | | then return 0.3087411357856347;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3087411357856348;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, G) )
%   | | then return 0.30874113578563717;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.3087411357856347;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(I, A) )
%   | then return 0.30874113578563694;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.2564123687585865;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858703;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25641236875858675;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else return 0.2564123687585884;  // std dev = 0,500, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.256412368758586;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.25641236875858586;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.2564123687585864;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.2061374073445397;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453997;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453984;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0.20613740734454145;  // std dev = 0,500, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.20613740734453945;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.20613740734453903;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.20613740734453975;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.16162857548414672;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414652;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.1616285754841465;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414683;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else return 0.16162857548414433;  // std dev = 0,500, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.16162857548414625;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1616285754841461;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.16162857548414675;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081943;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.12455597792081957;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081982;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.1245559779208181;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.12455597792081922;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.124555977920819;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.12455597792081782;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0949280093673068;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.09492800936730666;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09492800936730673;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09492800936730565;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.09492800936730646;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.09492800936730657;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(H, A) )
%   | then return 0.0949280093673053;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055866;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.07186088850055863;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.07186088850055851;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055852;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.07186088850055834;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.07186088850055898;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.07186088850055801;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.07186088850055865;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.07186088850055869;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.05418307375954963;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.0541830737595495;  // std dev = 5,196, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | | else return 0.05418307375954945;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.05418307375954883;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05418307375954902;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.054183073759549394;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.054183073759549435;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.05418307375954949;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.04076025323305622;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.040760253233056085;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.04076025323305634;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.04076025323305605;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.04076025323305624;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.04076025323305621;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.040760253233056314;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.0407602532330564;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695257
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 6.385 seconds
Total inference time: 1.527 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 3, Type: transfer, Time: 08:20:59
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695957, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.472, 'Learning time': 6.139}, 'CLL': -0.695257, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.527, 'Mapping results': {'Total time': 2.601996660232544, 'Possible mappings': 28, 'Finding best mapping': 0.0034732818603515625, 'Knowledge compiling time': 0.10756492614746094, 'Generating paths time': 2.448976516723633, 'Generating mappings time': 0.0419766902923584}, 'Learning time': 12.524000000000001}


Start learning from scratch in target domain

Target train facts examples: 3325
Target train pos examples: 188
Target train neg examples: 188

Target test facts examples: 11455
Target test pos examples: 416
Target test neg examples: 416

WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(E, C), enzyme(E, F) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( phenotype(A, G) )
%   | then if ( proteinclass(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else if ( interaction(J, A) )
%   | | then return 0.35814893509951334;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, I) )
%   | then if ( interaction(J, A) )
%   | | then return 0.30874113578563733;  // std dev = 0,500, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.3087411357856349;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.30874113578563733;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then return 0.2564123687585886;  // std dev = 0,500, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   else if ( phenotype(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585862;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), phenotype(G, D) )
%   | | | then return 0.2564123687585863;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.25641236875858636;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( proteinclass(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.256412368758586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.256412368758586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.256412368758586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858586;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.20613740734453928;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(E, C), enzyme(E, F) )
%   | | | then return 0.20613740734453928;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453936;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.2061374073445392;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.20613740734454136;  // std dev = 0,500, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   | else if ( proteinclass(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.2061374073445395;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2061374073445392;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.20613740734453942;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453956;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414547;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else return 0.16162857548414428;  // std dev = 0,500, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   else if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16162857548414622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414636;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, G) )
%   | | | then return 0.1616285754841465;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16162857548414644;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.16162857548414622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414625;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.12455597792081947;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(E, C), enzyme(E, F) )
%   | | | then return 0.12455597792081947;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081945;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.1245559779208195;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.1245559779208183;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081896;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.12455597792081848;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.12455597792081939;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else return 0.12455597792081782;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.09492800936730682;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730678;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.09492800936730682;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(I, A) )
%   | then return 0.09492800936730746;  // std dev = 0,500, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   | else if ( proteinclass(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.09492800936730686;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0949280093673067;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0949280093673065;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.07186088850055851;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850055851;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return 0.0718608885005585;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0718608885005585;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.07186088850055851;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, A) )
%   | | then return 0.07186088850055752;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(I, I) )
%   | | | then return 0.07186088850055797;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.0718608885005579;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | else return 0.07186088850055858;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then return 0.05418307375954896;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | else return 0.054183073759547416;  // std dev = 0,500, 230,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=115 */
%   else if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.05418307375954966;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954939;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.05418307375954946;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.054183073759549616;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.05418307375954923;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.040760253233056216;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return 0.040760253233056216;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0407602532330562;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, A) )
%   | | then return 0.04076025323305527;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(I, J) )
%   | | | then return 0.04076025323305594;  // std dev = 5,701, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | | | else return 0.040760253233055654;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0.04076025323305613;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.728 seconds
Total inference time: 1.28 seconds
AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 3, Type: scratch, Time: 08:21:10
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.28, 'Learning time': 9.728}


Starting fold 4

Target predicate: complex 

Mapping Results
   Knowledge compiling time   = 0.05454421043395996
   Generating paths time   = 2.2686398029327393
   Generating mappings time   = 0.03375840187072754
   Possible mappings   = 28
   Finding best mapping   = 0.002652883529663086
   Total time   = 2.359600305557251


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> complex(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: complex 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;complex(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;complex(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;complex(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;complex(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;complex(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;complex(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;complex(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;complex(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;complex(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;complex(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.35814893509951023;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856353;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856348;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | | else return 0.30874113578563506;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856355;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856353;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856348;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758586;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.25641236875858636;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.256412368758586;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.25641236875858714;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585867;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453934;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else return 0.20613740734453953;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734453975;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.20613740734453948;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.20613740734454028;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445397;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.20613740734453967;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.20613740734453972;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841475;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.16162857548414686;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414758;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.16162857548414772;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.16162857548414725;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414683;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.16162857548414666;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081965;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.12455597792081977;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.12455597792081981;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082049;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else return 0.12455597792081985;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792081985;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082022;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730679;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.09492800936730668;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.09492800936730665;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(C, E) )
%   | | then return 0.0949280093673075;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else return 0.09492800936730694;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730723;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730689;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055904;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else return 0.0718608885005585;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055906;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055879;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0718608885005585;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055855;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0718608885005591;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954962;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.054183073759549304;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.054183073759549366;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759549005;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else return 0.054183073759549;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954878;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.05418307375954877;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.054183073759549234;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233056376;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305629;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | | else return 0.04076025323305609;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305637;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0407602532330562;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305638;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.040760253233056355;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695783
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.204 seconds
Total inference time: 1.62 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [2.449, 12, 12], 'true,true,true,true': [3.317, 22, 22], 'true,true,false,false': [2.121, 9, 9], 'true,false': [6.557, 86, 86], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,true,false,true': [1.0, 2, 2], 'true,true,true,false': [2.121, 9, 9]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [4.583, 42, 42], 'true,false,false,false': [1.414, 4, 4], 'false,true,true,true': [2.345, 11, 11], 'true,false,false,true': [1.732, 6, 6], 'true,false,true,false': [2.449, 12, 12], 'true,false,true,true': [4.416, 39, 39], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.0, 32, 32]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [2.646, 14, 14], 'true,false,true,true': [3.742, 28, 28], 'true,true,true': [3.937, 31, 31], 'true,true,false,false': [2.121, 9, 9], 'true,false,true,false': [4.528, 41, 41], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.0, 2, 2], 'true,false,false': [2.915, 17, 17]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [3.742, 28, 28], 'true,true,false': [2.236, 10, 10], 'false,true,true,true': [2.55, 13, 13], 'true,false,false': [2.915, 17, 17], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true,false': [4.528, 41, 41], 'true,true,true': [4.0, 32, 32]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [3.742, 28, 28], 'true,true,false': [2.345, 11, 11], 'false,true,true,true': [2.55, 13, 13], 'true,false,false': [2.915, 17, 17], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true,false': [4.528, 41, 41], 'true,true,true': [3.937, 31, 31]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.236, 10, 10], 'true,true,true,true': [3.536, 25, 25], 'true,false,false': [2.236, 10, 10], 'false,true,false': [4.0, 32, 32], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [5.05, 51, 51], 'false,true,true,true': [2.345, 11, 11], 'true,true,true,false': [1.871, 7, 7]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.345, 11, 11], 'true,true,true,true': [3.317, 22, 22], 'true,false,false': [2.236, 10, 10], 'false,true,false': [4.0, 32, 32], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [5.05, 51, 51], 'false,true,true,true': [2.345, 11, 11], 'true,true,true,false': [2.121, 9, 9]}], ['complex(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.414, 4, 4], 'true,true,false': [2.646, 14, 14], 'true,false,false,true': [1.732, 6, 6], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.0, 32, 32], 'false,false': [0.0, 0, 0], 'true,true,true': [3.742, 28, 28], 'true,false,true': [5.05, 51, 51], 'false,true,true,true': [2.345, 11, 11]}], ['complex(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [2.345, 11, 11], 'true,true,true,true': [3.317, 22, 22], 'true,false,false': [2.915, 17, 17], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true': [5.874, 69, 69], 'false,true,true,true': [2.449, 12, 12], 'true,true,true,false': [2.121, 9, 9]}], ['complex(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [4.583, 42, 42], 'true,false,false,false': [1.414, 4, 4], 'false,true,true,true': [2.345, 11, 11], 'true,false,false,true': [1.732, 6, 6], 'true,false,true,false': [2.449, 12, 12], 'true,false,true,true': [4.416, 39, 39], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.0, 32, 32]}]]
[{'': [0.25000000000000366, 0.2499999999999995], 'true,true': [0.25000000000000155, 0.24999999999999958], 'true,true,false': [0.25, 0.25], 'false,true,true': [0.24999999999999956, 0.25], 'false,true': [0.24999999999999956, 0.24999999999999986], 'false': [0.2499999999999995, nan], 'true,true,true': [0.2500000000000011, 0.25], 'true': [0.2500000000000008, 0.25000000000000167]}, {'': [0.2500000000000006, 0.24999999999999925], 'false,true,true': [0.25000000000000017, nan], 'true,false,true': [0.2500000000000001, 0.2500000000000002], 'true,false': [0.24999999999999833, 0.2500000000000001], 'false,true': [0.25000000000000017, 0.24999999999999967], 'false': [0.24999999999999925, nan], 'true,false,false': [0.24999999999999997, 0.24999999999999994], 'true': [0.25000000000000083, 0.24999999999999784]}, {'': [0.24999999999999636, 0.2499999999999999], 'true,true': [0.24999999999999942, 0.25000000000000006], 'true,true,false': [0.25, 0.25000000000000006], 'true,false,true': [0.24999999999999933, 0.24999999999999956], 'true,false': [0.25000000000000017, 0.25], 'false,true': [0.24999999999999986, 0.25], 'false': [0.2499999999999999, nan], 'true': [0.24999999999999958, 0.25000000000000006]}, {'': [0.2499999999999996, 0.2499999999999996], 'true,true': [0.250000000000001, 0.25000000000000017], 'false': [0.2499999999999996, nan], 'true,false': [0.2500000000000004, 0.24999999999999975], 'false,true': [0.25000000000000006, 0.24999999999999994], 'true,false,true': [0.2500000000000002, 0.2500000000000012], 'true': [0.250000000000001, 0.24999999999999997], 'false,true,true': [0.25000000000000017, 0.24999999999999997]}, {'': [0.250000000000001, 0.24999999999999986], 'false,true,true': [0.24999999999999972, 0.24999999999999997], 'true,true': [0.24999999999999964, 0.24999999999999972], 'false': [0.24999999999999986, nan], 'false,true': [0.24999999999999975, 0.24999999999999997], 'true': [0.2499999999999997, 0.2500000000000007], 'true,false': [0.2500000000000005, 0.24999999999999975], 'true,false,true': [0.24999999999999975, 0.24999999999999975]}, {'': [0.2500000000000001, 0.2499999999999998], 'true,true': [0.24999999999999992, 0.24999999999999986], 'false,true,true': [0.24999999999999997, nan], 'true,false': [0.24999999999999983, 0.24999999999999994], 'false,true': [0.24999999999999997, 0.24999999999999983], 'false': [0.2499999999999998, nan], 'true,true,true': [0.24999999999999997, 0.25000000000000006], 'true': [0.24999999999999983, 0.24999999999999983]}, {'': [0.250000000000001, 0.24999999999999983], 'false,true,true': [0.2499999999999999, nan], 'true,true': [0.2499999999999999, 0.2500000000000002], 'true,false': [0.24999999999999964, 0.25], 'false,true': [0.2499999999999999, 0.24999999999999994], 'false': [0.24999999999999983, nan], 'true,true,true': [0.2499999999999999, 0.2500000000000001], 'true': [0.24999999999999978, 0.24999999999999953]}, {'': [0.2500000000000014, 0.24999999999999964], 'true,true': [0.24999999999999958, 0.25000000000000006], 'false,true,true': [0.25000000000000006, nan], 'true,false': [0.24999999999999944, 0.2500000000000001], 'false,true': [0.25000000000000006, 0.24999999999999956], 'false': [0.24999999999999964, nan], 'true,false,false': [0.24999999999999997, 0.24999999999999994], 'true': [0.24999999999999967, 0.24999999999999953]}, {'': [0.2500000000000014, 0.25000000000000017], 'false,true,true': [0.2500000000000001, 0.25000000000000006], 'true,true': [0.2500000000000003, 0.24999999999999983], 'true,false': [0.2499999999999998, 0.25], 'false,true': [0.2500000000000001, 0.25], 'false': [0.25000000000000017, nan], 'true,true,true': [0.2500000000000002, 0.2499999999999999], 'true': [0.24999999999999967, 0.2500000000000006]}, {'': [0.2500000000000004, 0.25000000000000017], 'false,true,true': [0.2500000000000001, nan], 'true,false,true': [0.25, 0.25000000000000006], 'true,false': [0.25, 0.25], 'false,true': [0.2500000000000001, 0.25000000000000017], 'false': [0.25000000000000017, nan], 'true,false,false': [0.25000000000000006, 0.25], 'true': [0.2500000000000001, 0.25000000000000006]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;complex(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;complex(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;complex(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;complex(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;complex(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;complex(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;complex(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;complex(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;complex(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;complex(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.3581489350995111;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.35814893509951135;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.3087411357856352;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.3087411357856352;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.3087411357856347;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.30874113578563495;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0.3087411357856371;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.30874113578563506;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3087411357856348;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3087411357856348;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.25641236875858575;  // std dev = 0,500, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.256412368758586;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.2564123687585858;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else return 0.2564123687585867;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2564123687585862;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.25641236875858603;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.256412368758586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.256412368758586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.20613740734454022;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.20613740734454028;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.20613740734454017;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0.20613740734454133;  // std dev = 0,500, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445392;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.20613740734453934;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.2061374073445393;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445393;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414736;  // std dev = 0,500, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( interaction(D, C) )
%   | | then return 0.1616285754841458;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.16162857548414578;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1616285754841462;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414614;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.16162857548414633;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.16162857548414633;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414633;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081936;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.12455597792081953;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.1245559779208197;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12455597792081971;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.12455597792082035;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792081985;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082003;  // std dev = 0,500, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730679;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.09492800936730673;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.09492800936730678;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.09492800936730701;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.09492800936730672;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.0949280093673067;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055904;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.0718608885005585;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0718608885005585;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.07186088850055879;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.0718608885005585;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07186088850055851;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.07186088850055869;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.05418307375954961;  // std dev = 0,500, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else if ( interaction(D, C) )
%   | | then return 0.054183073759548894;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.054183073759548485;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.054183073759548984;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954882;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.054183073759548894;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.054183073759548894;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054183073759548894;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( phenotype(A, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.0407602532330562;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.04076025323305632;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.04076025323305631;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.04076025323305625;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305638;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.04076025323305642;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.04076025323305634;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695181
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.499 seconds
Total inference time: 1.71 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 4, Type: transfer, Time: 08:21:29
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695783, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.62, 'Learning time': 5.204}, 'CLL': -0.695181, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.71, 'Mapping results': {'Total time': 2.359600305557251, 'Possible mappings': 28, 'Finding best mapping': 0.002652883529663086, 'Knowledge compiling time': 0.05454421043395996, 'Generating paths time': 2.2686398029327393, 'Generating mappings time': 0.03375840187072754}, 'Learning time': 12.703}


Start learning from scratch in target domain

Target train facts examples: 3161
Target train pos examples: 146
Target train neg examples: 146

Target test facts examples: 11619
Target test pos examples: 458
Target test neg examples: 458

WILL Produced-Tree #1
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.3581489350995123;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( phenotype(A, H) )
%   | then return 0.3581489350995135;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.35814893509951307;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR complex(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.30874113578563506;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.30874113578563733;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   else if ( interaction(A, A) )
%   | then if ( proteinclass(A, E) )
%   | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.3087411357856348;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2564123687585864;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.2564123687585884;  // std dev = 0,500, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.2564123687585861;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2564123687585861;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.2564123687585863;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453975;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( proteinclass(A, E) )
%   | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453972;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.20613740734454133;  // std dev = 0,500, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.2061374073445393;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453956;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.20613740734453967;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR complex(A, B):
%   if ( enzyme(A, C) )
%   then return 0.16162857548414525;  // std dev = 0,500, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(E, D) )
%   | | | then return 0.16162857548414494;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return 0.16162857548414447;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.161628575484146;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.161628575484146;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.16162857548414603;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.16162857548414583;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.16162857548414689;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414689;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.12455597792082009;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081986;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.1245559779208201;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.12455597792081986;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081985;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( phenotype(A, H) )
%   | then if ( enzyme(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.12455597792081834;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.12455597792081832;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.12455597792081817;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else return 0.12455597792081863;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
WILL Produced-Tree #7
% FOR complex(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.09492800936730726;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730694;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.09492800936730728;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09492800936730687;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.09492800936730571;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.09492800936730657;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0949280093673055;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.09492800936730739;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return 0.09492800936730712;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR complex(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.07186088850055883;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850055888;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.07186088850055783;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0718608885005578;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.07186088850055873;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   else if ( interaction(A, A) )
%   | then if ( proteinclass(A, G) )
%   | | then return 0.0718608885005587;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), proteinclass(H, I) )
%   | | | then return 0.0718608885005587;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055872;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.07186088850055883;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
WILL Produced-Tree #9
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.05418307375954949;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( proteinclass(A, E) )
%   | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), proteinclass(F, G) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( phenotype(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.05418307375954894;  // std dev = 0,500, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.05418307375954926;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05418307375954928;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.05418307375954936;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
WILL Produced-Tree #10
% FOR complex(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04076025323305636;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, E), proteinclass(E, F) )
%   | | then if ( classprotein(F, A) )
%   | | | then return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, I) )
%   | then if ( proteinclass(A, J) )
%   | | then return 0.04076025323305582;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.04076025323305628;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.337 seconds
Total inference time: 1.004 seconds
AUC ROC: 0.5


Dataset: 28_twitter_yeast, Fold: 4, Type: scratch, Time: 08:21:43
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.004, 'Learning time': 12.337}


