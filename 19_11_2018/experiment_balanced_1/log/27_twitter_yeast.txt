Starting experiment #1 for 27_twitter_yeast

Start learning from source dataset

Source train facts examples: 2052
Source train pos examples: 1372
Source train neg examples: 1372

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.3581489350995074;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.3581489350995129;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3581489350995087;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else return 0.358148935099508;  // std dev = 0,500, 464,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=232 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.3581489350995133;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.3581489350995133;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.3087411357856633;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.3087411357856376;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.3087411357856372;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3087411357856372;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.25641236875856666;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.25641236875857976;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.25641236875858187;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else if ( follows(F, C) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.2564123687585887;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.2564123687585863;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.25641236875858714;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H) )
%   | | then return 0.2564123687585884;  // std dev = 0,500, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | else return 0.25641236875858603;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.20613740734453131;  // std dev = 0,500, 1.846,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=923 */
%   | | else return 0.20613740734453517;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.20613740734454172;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.20613740734453923;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.20613740734454025;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734454133;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.20613740734453861;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.20613740734453867;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.20613740734453984;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.16162857548414433;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else return 0.16162857548414417;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.1616285754841444;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.1616285754841477;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.16162857548414647;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414428;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414733;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.16162857548414664;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792081527;  // std dev = 19,274, 1.486,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=743 */
%   | | | else return 0.12455597792081972;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.12455597792081662;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(C, E) )
%   | | then return 0.12455597792082045;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.12455597792082053;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.12455597792082054;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792082039;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.12455597792081967;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.09492800936732027;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.0949280093673082;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.09492800936730682;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(C, E) )
%   | | then return 0.09492800936730778;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.09492800936730793;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.09492800936730791;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.09492800936730716;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730728;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.0718608885005646;  // std dev = 0,500, 1.548,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=774 */
%   | | else return 0.07186088850055461;  // std dev = 0,500, 386,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=193 */
%   | else if ( follows(C, E) )
%   | | then return 0.07186088850055611;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.0718608885005588;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.07186088850055841;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( accounttype(G, I), accounttype(H, I) )
%   | | | then return 0.07186088850055906;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.07186088850055883;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07186088850055895;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07186088850055862;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375954569;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.05418307375954943;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.054183073759546486;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then return 0.05418307375954717;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.05418307375954967;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954895;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.054183073759549;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.0541830737595491;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.040760253233045114;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.04076025323305617;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.04076025323305549;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.04076025323305643;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.040760253233056175;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.04076025323305458;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.04076025323305688;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0407602532330571;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Predicates from source: ['tweets(account,word).', 'follows(account,account).', 'accounttype(account,type).']

Starting fold 1

Target predicate: phenotype 

Mapping Results
   Knowledge compiling time   = 0.04797101020812988
   Generating paths time   = 1.8930435180664062
   Generating mappings time   = 0.033112525939941406
   Possible mappings   = 28
   Finding best mapping   = 0.0026276111602783203
   Total time   = 1.9767603874206543


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> phenotype(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: phenotype 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;phenotype(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;phenotype(A, B) :- interaction(A, C).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;phenotype(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;phenotype(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;phenotype(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;phenotype(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;phenotype(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;phenotype(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;phenotype(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;phenotype(A, B) :- interaction(A, C).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509950857;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0.35814893509950807;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578563783;  // std dev = 8,888, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856353;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.30874113578563483;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.30874113578563483;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.30874113578563656;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.30874113578563556;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3087411357856373;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.25641236875858864;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.256412368758586;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.25641236875858575;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585885;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.25641236875858836;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | else return 0.25641236875858725;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858614;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454158;  // std dev = 8,631, 298,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=149 */
%   | | else return 0.2061374073445394;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454147;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.2061374073445414;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | else return 0.20613740734454028;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453975;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414436;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | else return 0.16162857548414605;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414492;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.1616285754841452;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | else return 0.16162857548414683;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414672;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.16162857548414677;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082057;  // std dev = 8,155, 266,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=133 */
%   | | | else return 0.12455597792081922;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.12455597792081934;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082064;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | else return 0.12455597792082065;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082043;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.12455597792082007;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.12455597792082047;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730782;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.09492800936730549;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730639;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730782;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | else return 0.09492800936730701;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730741;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.09492800936730716;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.0949280093673077;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.0718608885005573;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | else return 0.0718608885005582;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055918;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055908;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.07186088850055827;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.07186088850055863;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.07186088850055883;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.07186088850055883;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954731;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.05418307375954856;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.05418307375954919;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375954688;  // std dev = 9,747, 380,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=190 */
%   | | else return 0.054183073759549276;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954878;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05418307375954878;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.05418307375954902;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305614;  // std dev = 8,888, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.0407602532330564;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.040760253233056425;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305663;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.040760253233056;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.040760253233056466;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.04076025323305699;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.040760253233055856;  // std dev = 5,874, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.767 seconds
Total inference time: 2.348 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [2.345, 11, 11], 'true,true,true,true': [8.456, 143, 143], 'true,true,false,false': [2.0, 8, 8], 'true,false': [10.223, 209, 209], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.581, 5, 5], 'true,true,false,true': [1.581, 5, 5], 'true,true,true,false': [1.0, 2, 2]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [8.888, 158, 158], 'true,false,false,false': [1.0, 2, 2], 'false,true,true,true': [4.95, 49, 49], 'true,false,false,true': [3.937, 31, 31], 'true,false,true,false': [4.062, 33, 33], 'true,false,true,true': [4.583, 42, 42], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [5.874, 69, 69]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [2.828, 16, 16], 'true,false,true,true': [7.106, 101, 101], 'true,true,true': [8.515, 145, 145], 'true,true,false,false': [2.0, 8, 8], 'true,false,true,false': [6.671, 89, 89], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.581, 5, 5], 'true,false,false': [3.082, 19, 19]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [7.106, 101, 101], 'true,true,false': [2.121, 9, 9], 'false,true,true,true': [2.646, 14, 14], 'true,false,false': [3.082, 19, 19], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true,false': [6.671, 89, 89], 'true,true,true': [8.631, 149, 149]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [7.106, 101, 101], 'true,true,false': [2.55, 13, 13], 'false,true,true,true': [2.646, 14, 14], 'true,false,false': [3.082, 19, 19], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true,false': [6.671, 89, 89], 'true,true,true': [8.515, 145, 145]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.121, 9, 9], 'true,true,true,true': [8.155, 133, 133], 'true,false,false': [4.062, 33, 33], 'false,true,false': [5.874, 69, 69], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [6.124, 75, 75], 'false,true,true,true': [4.95, 49, 49], 'true,true,true,false': [2.828, 16, 16]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [2.55, 13, 13], 'true,true,true,true': [8.456, 143, 143], 'true,false,false': [4.062, 33, 33], 'false,true,false': [5.874, 69, 69], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [6.124, 75, 75], 'false,true,true,true': [4.95, 49, 49], 'true,true,true,false': [1.0, 2, 2]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.0, 2, 2], 'true,true,false': [2.55, 13, 13], 'true,false,false,true': [3.937, 31, 31], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [5.874, 69, 69], 'false,false': [0.0, 0, 0], 'true,true,true': [8.515, 145, 145], 'true,false,true': [6.124, 75, 75], 'false,true,true,true': [4.95, 49, 49]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [2.55, 13, 13], 'true,true,true,true': [8.456, 143, 143], 'true,false,false': [3.082, 19, 19], 'false,true,false': [1.0, 2, 2], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.581, 5, 5], 'true,false,true': [9.747, 190, 190], 'false,true,true,true': [2.345, 11, 11], 'true,true,true,false': [1.0, 2, 2]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [8.888, 158, 158], 'true,false,false,false': [1.0, 2, 2], 'false,true,true,true': [4.95, 49, 49], 'true,false,false,true': [3.937, 31, 31], 'true,false,true,false': [4.062, 33, 33], 'true,false,true,true': [4.583, 42, 42], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [5.874, 69, 69]}]]
[{'': [0.2499999999999885, 0.2499999999999995], 'false,true,true': [0.24999999999999958, 0.24999999999999983], 'true,true': [0.250000000000004, 0.24999999999999956], 'true,true,false': [0.24999999999999983, 0.24999999999999997], 'false,true': [0.24999999999999953, 0.25], 'false': [0.2499999999999995, nan], 'true,true,true': [0.250000000000004, 0.25], 'true': [0.2500000000000043, 0.25000000000000366]}, {'': [0.2500000000000079, 0.25000000000000044], 'false,true,true': [0.24999999999999858, 0.25], 'true,false,true': [0.24999999999999983, 0.24999999999999983], 'true,false': [0.24999999999999745, 0.24999999999999978], 'false,true': [0.24999999999999845, 0.24999999999999764], 'false': [0.25000000000000044, nan], 'true,false,false': [0.24999999999999967, 0.25], 'true': [0.25000000000000017, 0.2500000000000006]}, {'': [0.250000000000008, 0.25000000000000017], 'true,true': [0.24999999999999634, 0.25000000000000006], 'true,true,false': [0.24999999999999992, 0.25000000000000006], 'true,false,true': [0.25000000000000006, 0.25], 'true,false': [0.24999999999999625, 0.24999999999999992], 'false,true': [0.25000000000000017, 0.25], 'false': [0.25000000000000017, nan], 'true': [0.24999999999999628, 0.24999999999999858]}, {'': [0.24999999999999645, 0.2499999999999996], 'false,true,true': [0.25000000000000006, 0.25], 'true,true': [0.24999999999999992, 0.25], 'true,false,true': [0.2499999999999997, 0.24999999999999972], 'true,false': [0.250000000000001, 0.24999999999999978], 'false,true': [0.24999999999999964, 0.25], 'false': [0.2499999999999996, nan], 'true': [0.25000000000000006, 0.25000000000000205]}, {'': [0.249999999999999, 0.24999999999999986], 'false,true,true': [0.24999999999999975, 0.25], 'true,true': [0.2500000000000006, 0.24999999999999997], 'true,false,true': [0.2500000000000005, 0.25000000000000033], 'true,false': [0.25000000000000006, 0.24999999999999994], 'false,true': [0.24999999999999983, 0.24999999999999997], 'false': [0.24999999999999986, nan], 'true': [0.25000000000000033, 0.24999999999999986]}, {'': [0.2500000000000007, 0.2500000000000013], 'true,true': [0.25000000000000083, 0.24999999999999994], 'false,true,true': [0.24999999999999997, 0.25], 'true,false': [0.2499999999999992, 0.2499999999999999], 'false,true': [0.24999999999999997, 0.2500000000000003], 'false': [0.2500000000000013, nan], 'true,true,true': [0.25000000000000083, 0.2499999999999998], 'true': [0.25000000000000083, 0.24999999999999864]}, {'': [0.2499999999999978, 0.2500000000000009], 'false,true,true': [0.24999999999999972, 0.25], 'true,true': [0.2499999999999991, 0.25], 'true,false': [0.2500000000000004, 0.2499999999999999], 'false,true': [0.24999999999999967, 0.24999999999999994], 'false': [0.2500000000000009, nan], 'true,true,true': [0.24999999999999925, 0.25], 'true': [0.24999999999999828, 0.250000000000001]}, {'': [0.25000000000000155, 0.25000000000000117], 'true,true': [0.25000000000000067, 0.24999999999999994], 'false,true,true': [0.2499999999999994, 0.25], 'true,false': [0.2500000000000005, 0.24999999999999972], 'false,true': [0.24999999999999944, 0.2499999999999999], 'false': [0.25000000000000117, nan], 'true,false,false': [0.24999999999999975, 0.25], 'true': [0.25000000000000083, 0.2500000000000014]}, {'': [0.2500000000000035, 0.25000000000000017], 'false,true,true': [0.2500000000000001, 0.25], 'true,true': [0.24999999999999975, 0.24999999999999994], 'true,false': [0.2499999999999984, 0.25000000000000017], 'false,true': [0.2500000000000001, 0.24999999999999997], 'false': [0.25000000000000017, nan], 'true,true,true': [0.2499999999999999, 0.25], 'true': [0.24999999999999906, 0.24999999999999775]}, {'': [0.2499999999999992, 0.25000000000000033], 'false,true,true': [0.2500000000000004, 0.25], 'true,false,true': [0.2500000000000002, 0.2500000000000003], 'true,false': [0.2500000000000003, 0.2500000000000004], 'false,true': [0.25000000000000033, 0.2500000000000002], 'false': [0.25000000000000033, nan], 'true,false,false': [0.25000000000000044, 0.24999999999999997], 'true': [0.25000000000000033, 0.2500000000000003]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;phenotype(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;phenotype(A, B) :- interaction(A, C).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;phenotype(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;phenotype(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;phenotype(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;phenotype(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;phenotype(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;phenotype(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;phenotype(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;phenotype(A, B) :- interaction(A, C).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509950857;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(A, E) )
%   | | then return 0.35814893509950946;  // std dev = 0,500, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else return 0.35814893509950885;  // std dev = 0,500, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( complex(A, D) )
%   | | then return 0.3087411357856375;  // std dev = 0,500, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | else return 0.30874113578563733;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | else if ( interaction(C, E) )
%   | | then return 0.30874113578563733;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.3087411357856348;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.30874113578563656;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.30874113578563556;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3087411357856373;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.25641236875858864;  // std dev = 0,500, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | else return 0.25641236875858564;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(E, C) )
%   | | then return 0.2564123687585887;  // std dev = 0,500, 380,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=190 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2564123687585865;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.25641236875858664;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.256412368758586;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.25641236875858586;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454158;  // std dev = 0,500, 298,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=149 */
%   | | else return 0.20613740734453945;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454142;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.20613740734454128;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | else return 0.20613740734454014;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453914;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.2061374073445393;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16162857548414628;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.16162857548414442;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.16162857548414603;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1616285754841464;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.16162857548414442;  // std dev = 0,500, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414614;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.16162857548414633;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082057;  // std dev = 8,155, 266,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=133 */
%   | | | else return 0.12455597792081922;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.12455597792081953;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.12455597792082032;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.12455597792081953;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.12455597792082054;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.12455597792082021;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0.12455597792082047;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.0949280093673079;  // std dev = 0,500, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.09492800936730675;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.09492800936730644;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.09492800936730696;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730741;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.09492800936730694;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.09492800936730653;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.09492800936730743;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055754;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.07186088850055913;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else return 0.07186088850055784;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.07186088850055874;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.07186088850055844;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.07186088850055912;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.07186088850055866;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0.07186088850055891;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954717;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.05418307375954767;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.054183073759548825;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.054183073759548964;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.054183073759546806;  // std dev = 0,500, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759549366;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05418307375954923;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.054183073759548894;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305598;  // std dev = 0,500, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305639;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.04076025323305649;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else return 0.0407602532330566;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.040760253233056466;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.0407602532330569;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.04076025323305653;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.04076025323305645;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 17.615 seconds
Total inference time: 1.514 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 1, Type: transfer, Time: 07:51:55
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.348, 'Learning time': 12.767}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.514, 'Mapping results': {'Total time': 1.9767603874206543, 'Possible mappings': 28, 'Finding best mapping': 0.0026276111602783203, 'Knowledge compiling time': 0.04797101020812988, 'Generating paths time': 1.8930435180664062, 'Generating mappings time': 0.033112525939941406}, 'Learning time': 30.381999999999998}


Start learning from scratch in target domain

Target train facts examples: 4219
Target train pos examples: 385
Target train neg examples: 385

Target test facts examples: 9717
Target test pos examples: 1063
Target test neg examples: 1063

WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(E, C), enzyme(E, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(K, A) )
%   | then return 0.35814893509950774;  // std dev = 0,500, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.3087411357856347;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( enzyme(A, D) )
%   | | then return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( complex(A, E) )
%   | then if ( proteinclass(A, F) )
%   | | then return 0.3087411357856371;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.30874113578563755;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   | | | else return 0.30874113578563533;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.308741135785637;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.3087411357856373;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | else return 0.30874113578563744;  // std dev = 0,500, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( proteinclass(E, D), enzyme(E, F) )
%   | | | then return 0.2564123687585866;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2564123687585864;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, C) )
%   | | | then return 0.2564123687585871;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.25641236875858847;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.25641236875858603;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.256412368758586;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.2564123687585888;  // std dev = 0,500, 394,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=197 */
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( proteinclass(E, D), enzyme(E, F) )
%   | | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445397;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2061374073445398;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453953;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( proteinclass(A, I) )
%   | | then return 0.2061374073445392;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.20613740734453928;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453936;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(K, A) )
%   | then return 0.2061374073445316;  // std dev = 0,500, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   | else return 0.20613740734453884;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then return 0.16162857548414816;  // std dev = 0,500, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | | else return 0.16162857548414927;  // std dev = 0,500, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | else if ( interaction(C, C) )
%   | | then return 0.16162857548414755;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.1616285754841496;  // std dev = 0,500, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   else if ( enzyme(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.16162857548414866;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.16162857548414852;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.16162857548414888;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1616285754841486;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.1616285754841501;  // std dev = 0,500, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.12455597792081896;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(E, C), enzyme(E, F) )
%   | | | then return 0.12455597792081939;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081943;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.1245559779208194;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792081947;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12455597792081889;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081892;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(K, A) )
%   | then return 0.12455597792082582;  // std dev = 0,500, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   | else return 0.12455597792081859;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( proteinclass(E, D), enzyme(E, F) )
%   | | | then return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730648;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.09492800936730643;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09492800936730644;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, C) )
%   | | | then return 0.09492800936730768;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.09492800936730796;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.09492800936730635;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.09492800936730802;  // std dev = 0,500, 394,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=197 */
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then return 0.07186088850055841;  // std dev = 0,500, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0.07186088850055761;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( complex(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then return 0.07186088850055893;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.0718608885005591;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   | | | else return 0.0718608885005589;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.07186088850055879;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.07186088850055855;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.07186088850055779;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.07186088850055854;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( proteinclass(E, D), enzyme(E, F) )
%   | | | then return 0.05418307375954921;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954923;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05418307375954934;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, C) )
%   | | | then return 0.054183073759549595;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.054183073759547916;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.054183073759549005;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05418307375954878;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.054183073759546806;  // std dev = 0,500, 394,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=197 */
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( complex(A, D) )
%   | | then return 0.04076025323305615;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.040760253233056216;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.0407602532330562;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.04076025323305625;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.0407602532330562;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.04076025323305848;  // std dev = 0,500, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.04076025323305572;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.04076025323305599;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305532;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 28.003 seconds
Total inference time: 1.387 seconds
AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 1, Type: scratch, Time: 07:52:24
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.387, 'Learning time': 28.003}


Starting fold 2

Target predicate: phenotype 

Mapping Results
   Knowledge compiling time   = 0.08901500701904297
   Generating paths time   = 2.28609561920166
   Generating mappings time   = 0.04212784767150879
   Possible mappings   = 28
   Finding best mapping   = 0.003453969955444336
   Total time   = 2.4206974506378174


Best mapping found: ['follows(A,B) -> interaction(B,A)', 'tweets(A,B) -> phenotype(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: phenotype 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;phenotype(A, B) :- interaction(A, C).;true;true
0;true,true;interaction(A, D), interaction(C, D).;true;true
0;true,true,false;interaction(E, A), interaction(C, E).;false;false
0;false,true,true;interaction(G, A).;false;false
0;false,true;interaction(G, F).;true;false
0;false;interaction(F, A).;true;false
0;true,true,true;interaction(D, C).;false;false
0;true;interaction(C, A).;true;false
1;;phenotype(A, B) :- interaction(C, A).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(A, F).;true;false
1;true,false,false;interaction(A, E).;false;false
1;false,true;interaction(G, F), interaction(A, G).;true;false
1;true;interaction(A, C).;false;true
1;true,false;interaction(D, C).;true;true
1;true,false,true;interaction(D, A).;false;false
2;;phenotype(A, B) :- interaction(A, C).;true;true
2;true,true;interaction(A, D), interaction(C, D).;false;true
2;true,true,false;interaction(E, A), interaction(C, E).;false;false
2;false;interaction(G, A).;true;false
2;true,false;interaction(C, F).;true;false
2;false,true;interaction(H, G).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(C, A).;true;true
3;;phenotype(A, B) :- interaction(A, C).;true;true
3;true,true;interaction(D, A), interaction(D, C).;false;false
3;false;interaction(F, A).;true;false
3;true,false;interaction(C, E).;true;false
3;false,true;interaction(G, F).;true;false
3;true,false,true;interaction(A, E).;false;false
3;true;interaction(C, A).;true;true
3;false,true,true;interaction(F, G).;false;false
4;;phenotype(A, B) :- interaction(A, C).;true;true
4;true,true;interaction(A, D), interaction(C, D).;false;false
4;false;interaction(F, A).;true;false
4;true,false;interaction(C, E).;true;false
4;false,true;interaction(G, F).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(C, A).;true;true
4;false,true,true;interaction(F, G).;false;false
5;;phenotype(A, B) :- interaction(C, A).;true;true
5;true,true;interaction(D, A), interaction(D, C).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(E, C).;false;false
5;false,true;interaction(G, F), interaction(A, G).;true;false
5;false;interaction(A, F).;true;false
5;true,true,true;interaction(A, D).;false;false
5;true;interaction(A, C).;true;true
6;;phenotype(A, B) :- interaction(C, A).;true;true
6;true,true;interaction(A, D), interaction(C, D).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(E, C).;false;false
6;false,true;interaction(G, F), interaction(A, G).;true;false
6;false;interaction(A, F).;true;false
6;true,true,true;interaction(D, C).;false;false
6;true;interaction(A, C).;true;true
7;;phenotype(A, B) :- interaction(C, A).;true;true
7;true,true;interaction(D, C), interaction(A, D).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(A, F).;false;false
7;false,true;interaction(H, G), interaction(A, H).;true;false
7;false;interaction(A, G).;true;false
7;true,false;interaction(E, C).;false;true
7;true;interaction(A, C).;true;true
8;;phenotype(A, B) :- interaction(A, C).;true;true
8;true,true;interaction(A, D), interaction(C, D).;true;false
8;false,true,true;interaction(G, A).;false;false
8;true,false;interaction(C, E).;false;false
8;false,true;interaction(G, F).;true;false
8;false;interaction(F, A).;true;false
8;true,true,true;interaction(D, C).;false;false
8;true;interaction(C, A).;true;true
9;;phenotype(A, B) :- interaction(C, A).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(A, F).;true;false
9;true,false,false;interaction(A, E).;false;false
9;false,true;interaction(G, F), interaction(A, G).;true;false
9;true;interaction(A, C).;false;true
9;true,false;interaction(D, C).;true;true
9;true,false,true;interaction(D, A).;false;false


WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.3581489350995088;  // std dev = 7,906, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | | else return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.3581489350995111;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0.35814893509950885;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.3581489350995134;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3087411357856338;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=178 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.30874113578563744;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | | else return 0.3087411357856376;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3087411357856348;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.308741135785635;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856353;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.2564123687585889;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0.2564123687585865;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585861;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.256412368758586;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.2564123687585864;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else return 0.25641236875858603;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.2564123687585884;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.20613740734454167;  // std dev = 8,573, 294,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=147 */
%   | | else return 0.20613740734453972;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.20613740734453975;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.20613740734453928;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else return 0.2061374073445396;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.20613740734454036;  // std dev = 7,416, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | | | else return 0.20613740734453856;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.2061374073445397;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.16162857548414475;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | else return 0.16162857548414758;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414772;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.16162857548414766;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else return 0.1616285754841476;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.16162857548414442;  // std dev = 7,416, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | | | else return 0.1616285754841457;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.16162857548414683;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.12455597792082068;  // std dev = 7,616, 232,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=116 */
%   | | | else return 0.12455597792081977;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | else return 0.12455597792082057;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | else if ( interaction(E, C) )
%   | | then return 0.12455597792082022;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | else return 0.12455597792081977;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082063;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082024;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.094928009367308;  // std dev = 7,906, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | | else return 0.09492800936730639;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.09492800936730728;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(E, C) )
%   | | then return 0.09492800936730793;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | else return 0.09492800936730686;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730743;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730728;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then return 0.07186088850055758;  // std dev = 8,426, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   | | else return 0.07186088850055887;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | else if ( interaction(E, C) )
%   | | then return 0.07186088850055528;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0718608885005585;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055883;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055912;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.05418307375954802;  // std dev = 7,906, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | | else return 0.05418307375954893;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.05418307375954954;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(C, E) )
%   | | then return 0.054183073759550254;  // std dev = 6,633, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | | else return 0.05418307375954973;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.054183073759549484;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.05418307375954885;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0.05418307375954923;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.04076025323305804;  // std dev = 9,434, 356,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=178 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.04076025323305646;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | | else return 0.040760253233056265;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04076025323305631;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305637;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.040760253233056334;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.696985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 62.002 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'false,true,true': 'interaction(G, A)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'false,true,true,true': [5.099, 52, 52], 'true,true,true,true': [7.906, 125, 125], 'true,true,false,false': [4.0, 32, 32], 'true,false': [7.714, 119, 119], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [5.745, 66, 66], 'true,true,false,true': [2.121, 9, 9], 'true,true,true,false': [2.449, 12, 12]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [9.434, 178, 178], 'true,false,false,false': [1.871, 7, 7], 'false,true,true,true': [2.915, 17, 17], 'true,false,false,true': [0.0, 0, 0], 'true,false,true,false': [7.714, 119, 119], 'true,false,true,true': [6.671, 89, 89], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.449, 12, 12]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'true,false': 'interaction(C, F)', 'false,true': 'interaction(H, G)', 'false': 'interaction(G, A)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(C, A)'}, {'false,true,true': [7.681, 118, 118], 'true,false,true,true': [4.583, 42, 42], 'true,true,true': [8.276, 137, 137], 'true,true,false,false': [4.0, 32, 32], 'true,false,true,false': [4.796, 46, 46], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'true,true,false,true': [2.121, 9, 9], 'true,false,false': [3.937, 31, 31]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [4.583, 42, 42], 'true,true,false': [3.937, 31, 31], 'false,true,true,true': [7.416, 110, 110], 'true,false,false': [3.937, 31, 31], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.0, 8, 8], 'true,false,true,false': [4.796, 46, 46], 'true,true,true': [8.573, 147, 147]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [4.583, 42, 42], 'true,true,false': [4.528, 41, 41], 'false,true,true,true': [7.416, 110, 110], 'true,false,false': [3.937, 31, 31], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.0, 8, 8], 'true,false,true,false': [4.796, 46, 46], 'true,true,true': [8.276, 137, 137]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(A, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [3.937, 31, 31], 'true,true,true,true': [7.616, 116, 116], 'true,false,false': [1.871, 7, 7], 'false,true,false': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [10.198, 208, 208], 'false,true,true,true': [2.915, 17, 17], 'true,true,true,false': [3.937, 31, 31]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true,false': [4.528, 41, 41], 'true,true,true,true': [7.906, 125, 125], 'true,false,false': [1.871, 7, 7], 'false,true,false': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [10.198, 208, 208], 'false,true,true,true': [2.915, 17, 17], 'true,true,true,false': [2.449, 12, 12]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, C), interaction(A, D)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(A, F)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'true': 'interaction(A, C)'}, {'true,false,false,false': [1.871, 7, 7], 'true,true,false': [4.243, 36, 36], 'true,false,false,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'true,true,true': [8.426, 142, 142], 'true,false,true': [10.198, 208, 208], 'false,true,true,true': [2.915, 17, 17]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'true,true,false': [4.528, 41, 41], 'true,true,true,true': [7.906, 125, 125], 'true,false,false': [3.937, 31, 31], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [5.745, 66, 66], 'true,false,true': [6.633, 88, 88], 'false,true,true,true': [5.099, 52, 52], 'true,true,true,false': [2.449, 12, 12]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [9.434, 178, 178], 'true,false,false,false': [1.871, 7, 7], 'false,true,true,true': [2.915, 17, 17], 'true,false,false,true': [0.0, 0, 0], 'true,false,true,false': [7.714, 119, 119], 'true,false,true,true': [6.671, 89, 89], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.449, 12, 12]}]]
[{'': [0.2500000000000025, 0.2500000000000036], 'false,true,true': [0.25, 0.2499999999999996], 'true,true': [0.2500000000000039, 0.25000000000000094], 'true,true,false': [0.25, 0.25000000000000155], 'false,true': [0.2500000000000034, 0.25], 'false': [0.2500000000000036, nan], 'true,true,true': [0.2500000000000036, 0.24999999999999956], 'true': [0.25000000000000433, 0.25000000000000344]}, {'': [0.2500000000000102, 0.24999999999999964], 'false,true,true': [0.25000000000000044, nan], 'false': [0.24999999999999964, nan], 'true,false,false': [nan, 0.2500000000000001], 'false,true': [0.25000000000000044, 0.2500000000000002], 'true': [0.2500000000000026, 0.25000000000000616], 'true,false': [0.25000000000000583, 0.2500000000000001], 'true,false,true': [0.2499999999999972, 0.25000000000000044]}, {'': [0.25000000000000505, 0.2499999999999962], 'true,true': [0.24999999999999625, 0.24999999999999956], 'true,true,false': [0.2500000000000001, 0.24999999999999953], 'false': [0.2499999999999962, nan], 'true,false': [0.25, 0.24999999999999944], 'false,true': [0.2499999999999962, 0.25], 'true': [0.24999999999999628, 0.2499999999999964], 'true,false,true': [0.24999999999999958, 0.24999999999999922]}, {'': [0.24999999999999722, 0.24999999999999967], 'false,true,true': [0.24999999999999978, 0.2499999999999999], 'true,true': [0.25, 0.2500000000000008], 'true,false,true': [0.25000000000000083, 0.25000000000000083], 'true,false': [0.24999999999999975, 0.2500000000000008], 'false,true': [0.2499999999999997, 0.25], 'false': [0.24999999999999967, nan], 'true': [0.2500000000000005, 0.2499999999999996]}, {'': [0.24999999999999947, 0.24999999999999908], 'true,true': [0.2500000000000006, 0.24999999999999967], 'false': [0.24999999999999908, nan], 'true,false': [0.25000000000000094, 0.24999999999999967], 'false,true': [0.24999999999999908, 0.24999999999999994], 'true': [0.25000000000000033, 0.2500000000000011], 'true,false,true': [0.24999999999999978, 0.2499999999999998], 'false,true,true': [0.24999999999999908, 0.2499999999999999]}, {'': [0.2499999999999968, 0.24999999999999997], 'false,true,true': [0.25000000000000006, nan], 'true,true': [0.25000000000000017, 0.24999999999999994], 'true,false': [0.25000000000000167, 0.2499999999999998], 'false,true': [0.25000000000000006, 0.25000000000000017], 'false': [0.24999999999999997, nan], 'true,true,true': [0.24999999999999828, 0.24999999999999992], 'true': [0.2500000000000015, 0.2500000000000019]}, {'': [0.2499999999999987, 0.24999999999999978], 'false,true,true': [0.2499999999999999, nan], 'true,true': [0.2499999999999998, 0.24999999999999967], 'true,false': [0.24999999999999722, 0.24999999999999997], 'false,true': [0.2499999999999999, 0.24999999999999992], 'false': [0.24999999999999978, nan], 'true,true,true': [0.25000000000000067, 0.25000000000000006], 'true': [0.24999999999999745, 0.24999999999999722]}, {'': [0.25000000000000183, 0.2499999999999997], 'true,true': [0.2500000000000014, 0.2499999999999996], 'false,true,true': [0.2500000000000001, nan], 'true,false,false': [nan, 0.25000000000000006], 'false,true': [0.2500000000000001, 0.24999999999999978], 'false': [0.2499999999999997, nan], 'true,false': [0.25000000000000117, 0.25000000000000006], 'true': [0.25000000000000133, 0.25000000000000133]}, {'': [0.25000000000000117, 0.25000000000000094], 'false,true,true': [0.24999999999999928, 0.24999999999999953], 'true,true': [0.25000000000000094, 0.24999999999999975], 'true,false': [0.25000000000000067, 0.24999999999999967], 'false,true': [0.25000000000000105, 0.24999999999999992], 'false': [0.25000000000000094, nan], 'true,true,true': [0.2500000000000016, 0.2499999999999998], 'true': [0.2499999999999991, 0.2500000000000013]}, {'': [0.24999999999999775, 0.25000000000000006], 'false,true,true': [0.25, nan], 'true,false,true': [0.25000000000000017, 0.2500000000000003], 'true,false': [0.2500000000000002, 0.24999999999999992], 'false,true': [0.25, 0.25000000000000017], 'false': [0.25000000000000006, nan], 'true,false,false': [nan, 0.24999999999999992], 'true': [0.25000000000000033, 0.2500000000000002]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;phenotype(A, B) :- interaction(A, C).;true;true', '0;true,true;interaction(A, D), interaction(C, D).;true;true', '0;true,true,false;interaction(E, A), interaction(C, E).;true;true', '0;false,true,true;interaction(G, A).;true;true', '0;false,true;interaction(G, F).;true;true', '0;false;interaction(F, A).;true;true', '0;true,true,true;interaction(D, C).;true;true', '0;true;interaction(C, A).;true;true', '1;;phenotype(A, B) :- interaction(C, A).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(A, F).;true;true', '1;true,false,false;interaction(A, E).;true;true', '1;false,true;interaction(G, F), interaction(A, G).;true;true', '1;true;interaction(A, C).;true;true', '1;true,false;interaction(D, C).;true;true', '1;true,false,true;interaction(D, A).;true;true', '2;;phenotype(A, B) :- interaction(A, C).;true;true', '2;true,true;interaction(A, D), interaction(C, D).;true;true', '2;true,true,false;interaction(E, A), interaction(C, E).;true;true', '2;false;interaction(G, A).;true;true', '2;true,false;interaction(C, F).;true;true', '2;false,true;interaction(H, G).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(C, A).;true;true', '3;;phenotype(A, B) :- interaction(A, C).;true;true', '3;true,true;interaction(D, A), interaction(D, C).;true;true', '3;false;interaction(F, A).;true;true', '3;true,false;interaction(C, E).;true;true', '3;false,true;interaction(G, F).;true;true', '3;true,false,true;interaction(A, E).;true;true', '3;true;interaction(C, A).;true;true', '3;false,true,true;interaction(F, G).;true;true', '4;;phenotype(A, B) :- interaction(A, C).;true;true', '4;true,true;interaction(A, D), interaction(C, D).;true;true', '4;false;interaction(F, A).;true;true', '4;true,false;interaction(C, E).;true;true', '4;false,true;interaction(G, F).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(C, A).;true;true', '4;false,true,true;interaction(F, G).;true;true', '5;;phenotype(A, B) :- interaction(C, A).;true;true', '5;true,true;interaction(D, A), interaction(D, C).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(E, C).;true;true', '5;false,true;interaction(G, F), interaction(A, G).;true;true', '5;false;interaction(A, F).;true;true', '5;true,true,true;interaction(A, D).;true;true', '5;true;interaction(A, C).;true;true', '6;;phenotype(A, B) :- interaction(C, A).;true;true', '6;true,true;interaction(A, D), interaction(C, D).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(E, C).;true;true', '6;false,true;interaction(G, F), interaction(A, G).;true;true', '6;false;interaction(A, F).;true;true', '6;true,true,true;interaction(D, C).;true;true', '6;true;interaction(A, C).;true;true', '7;;phenotype(A, B) :- interaction(C, A).;true;true', '7;true,true;interaction(D, C), interaction(A, D).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(A, F).;true;true', '7;false,true;interaction(H, G), interaction(A, H).;true;true', '7;false;interaction(A, G).;true;true', '7;true,false;interaction(E, C).;true;true', '7;true;interaction(A, C).;true;true', '8;;phenotype(A, B) :- interaction(A, C).;true;true', '8;true,true;interaction(A, D), interaction(C, D).;true;true', '8;false,true,true;interaction(G, A).;true;true', '8;true,false;interaction(C, E).;true;true', '8;false,true;interaction(G, F).;true;true', '8;false;interaction(F, A).;true;true', '8;true,true,true;interaction(D, C).;true;true', '8;true;interaction(C, A).;true;true', '9;;phenotype(A, B) :- interaction(C, A).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(A, F).;true;true', '9;true,false,false;interaction(A, E).;true;true', '9;false,true;interaction(G, F), interaction(A, G).;true;true', '9;true;interaction(A, C).;true;true', '9;true,false;interaction(D, C).;true;true', '9;true,false,true;interaction(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.3581489350995088;  // std dev = 7,906, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | | else return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.3581489350995121;  // std dev = 0,500, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(E, A) )
%   | | then return 0.35814893509950946;  // std dev = 0,500, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | else return 0.3581489350995112;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.3581489350995134;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( complex(A, D) )
%   | | then return 0.30874113578563755;  // std dev = 0,500, 190,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=95 */
%   | | else return 0.30874113578563744;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.30874113578563744;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | | | else return 0.3087411357856376;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856349;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.2564123687585861;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.25641236875858847;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.25641236875858575;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585856;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else if ( interaction(C, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.25641236875858586;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.2564123687585864;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.25641236875858603;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.25641236875858675;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.25641236875858847;  // std dev = 0,500, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.20613740734454158;  // std dev = 0,500, 294,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=147 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.20613740734453995;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453875;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | else return 0.20613740734454158;  // std dev = 0,500, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.20613740734454036;  // std dev = 7,416, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | | | else return 0.20613740734453856;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.20613740734453936;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2061374073445394;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.1616285754841454;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | | else return 0.16162857548414508;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.1616285754841463;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.16162857548414652;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(C, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.1616285754841472;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.16162857548414725;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.16162857548414633;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.16162857548414644;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.1616285754841444;  // std dev = 0,500, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.12455597792082061;  // std dev = 0,500, 356,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=178 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1245559779208205;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.12455597792082009;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.12455597792081985;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792081956;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.12455597792081938;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.12455597792081939;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.09492800936730755;  // std dev = 7,906, 250,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=125 */
%   | | | else return 0.09492800936730568;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.09492800936730648;  // std dev = 0,500, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else return 0.09492800936730783;  // std dev = 0,500, 430,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=215 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.09492800936730651;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.09492800936730651;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09492800936730676;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.0718608885005578;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.07186088850055869;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.07186088850055844;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.07186088850055879;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.07186088850055782;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0718608885005585;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, H) )
%   | then return 0.07186088850055866;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.05418307375954689;  // std dev = 0,500, 356,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=178 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.054183073759548686;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.054183073759549484;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.05418307375954852;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.05418307375954922;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.05418307375954878;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.05418307375954854;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0.05418307375954923;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.04076025323305643;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( proteinclass(A, D) )
%   | | | then return 0.04076025323305609;  // std dev = 6,083, 148,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
%   | | | else return 0.040760253233055585;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else return 0.04076025323305701;  // std dev = 0,500, 430,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=215 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.040760253233056314;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, H) )
%   | | | then return 0.0407602532330561;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04076025323305599;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695585
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 62.245 seconds
Total inference time: 1.976 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 2, Type: transfer, Time: 07:54:35
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.696985, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.414, 'Learning time': 62.002}, 'CLL': -0.695585, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.976, 'Mapping results': {'Total time': 2.4206974506378174, 'Possible mappings': 28, 'Finding best mapping': 0.003453969955444336, 'Knowledge compiling time': 0.08901500701904297, 'Generating paths time': 2.28609561920166, 'Generating mappings time': 0.04212784767150879}, 'Learning time': 124.247}


Start learning from scratch in target domain

Target train facts examples: 3538
Target train pos examples: 422
Target train neg examples: 422

Target test facts examples: 10398
Target test pos examples: 1026
Target test neg examples: 1026

WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(G, C), proteinclass(G, H) )
%   | | | then return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(J, A) )
%   | then return 0.3581489350995077;  // std dev = 0,500, 738,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=369 */
%   | else if ( complex(A, K) )
%   | | then return 0.35814893509951146;  // std dev = 0,500, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( proteinclass(D, C) )
%   | | then return 0.3087411357856356;  // std dev = 0,500, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.30874113578563533;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | | else return 0.3087411357856372;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | else return 0.30874113578563733;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3087411357856375;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | | else return 0.3087411357856374;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | | else return 0.3087411357856373;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2564123687585867;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.2564123687585866;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( complex(A, H) )
%   | then return 0.2564123687585887;  // std dev = 0,500, 376,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=188 */
%   | else if ( location(A, I) )
%   | | then return 0.2564123687585888;  // std dev = 0,500, 402,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=201 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.25641236875858686;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.256412368758587;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, C) )
%   | | then return 0.2061374073445413;  // std dev = 0,500, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | else return 0.2061374073445413;  // std dev = 0,500, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else return 0.2061374073445364;  // std dev = 0,500, 468,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=234 */
%   else if ( proteinclass(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.20613740734453895;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.20613740734453914;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445388;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), interaction(H, H) )
%   | | | then return 0.20613740734453873;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.206137407344539;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.20613740734453878;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, C) )
%   | | then return 0.16162857548414547;  // std dev = 0,500, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | else return 0.1616285754841455;  // std dev = 0,500, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else return 0.16162857548414464;  // std dev = 0,500, 468,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=234 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.161628575484146;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(F, D), interaction(F, F) )
%   | | | then return 0.161628575484146;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.161628575484146;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( proteinclass(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.16162857548414622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414578;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16162857548414578;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then return 0.1245559779208206;  // std dev = 0,500, 318,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=159 */
%   | else if ( interaction(A, C) )
%   | | then return 0.12455597792082079;  // std dev = 0,500, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | else return 0.12455597792082078;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.12455597792081907;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(F, D), interaction(F, F) )
%   | | | then return 0.124555977920819;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.12455597792081911;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( proteinclass(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.1245559779208192;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081896;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792081897;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.09492800936730639;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730639;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(G, C), proteinclass(G, H) )
%   | | | then return 0.09492800936730643;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.09492800936730646;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, C) )
%   | | | then return 0.09492800936730794;  // std dev = 6,042, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | | else return 0.09492800936730805;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.09492800936730639;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.09492800936730639;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0.09492800936730807;  // std dev = 0,500, 432,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=216 */
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then return 0.07186088850055916;  // std dev = 0,500, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else return 0.07186088850055922;  // std dev = 0,500, 130,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=65 */
%   | else if ( location(A, E) )
%   | | then return 0.07186088850055919;  // std dev = 0,500, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | else return 0.07186088850055962;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.07186088850055858;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | | else return 0.07186088850055915;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.07186088850055805;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.07186088850055918;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0.0718608885005592;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.05418307375954826;  // std dev = 0,500, 368,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=184 */
%   | else return 0.05418307375954931;  // std dev = 0,500, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else if ( location(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.054183073759548776;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.054183073759548776;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.05418307375954862;  // std dev = 9,849, 388,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=194 */
%   | | | else return 0.054183073759548436;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( proteinclass(A, H) )
%   | | then return 0.054183073759550116;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05418307375955034;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375955038;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.04076025323305623;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else return 0.0407602532330572;  // std dev = 0,500, 308,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=154 */
%   | else return 0.04076025323305891;  // std dev = 0,500, 430,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=215 */
%   else if ( enzyme(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.04076025323305569;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.04076025323305556;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305543;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), interaction(H, H) )
%   | | | then return 0.04076025323305628;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.040760253233055724;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.04076025323305543;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 67.80199999999999 seconds
Total inference time: 1.485 seconds
AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 2, Type: scratch, Time: 07:55:45
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.485, 'Learning time': 67.80199999999999}


Starting fold 3

Target predicate: phenotype 

Mapping Results
   Knowledge compiling time   = 0.04335522651672363
   Generating paths time   = 2.4590656757354736
   Generating mappings time   = 0.04242873191833496
   Possible mappings   = 28
   Finding best mapping   = 0.0034072399139404297
   Total time   = 2.548261880874634


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> phenotype(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: phenotype 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;phenotype(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;phenotype(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;phenotype(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;phenotype(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;phenotype(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;phenotype(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;phenotype(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;phenotype(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;phenotype(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;phenotype(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951123;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.3581489350995083;  // std dev = 9,327, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951123;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.35814893509951135;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856365;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856371;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.30874113578563545;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856349;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.3087411357856348;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.30874113578563483;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578563717;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585857;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585862;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.25641236875858575;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585882;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.2564123687585883;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | else return 0.25641236875858603;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858675;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else return 0.2564123687585864;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453953;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else return 0.2061374073445401;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454075;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.2061374073445412;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | else return 0.20613740734453984;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453917;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.20613740734453911;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.20613740734453956;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841466;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else return 0.16162857548414608;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414622;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.16162857548414564;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | else return 0.16162857548414766;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841462;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.16162857548414716;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else return 0.16162857548414683;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081972;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792081938;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, E) )
%   | | then return 0.1245559779208206;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | else return 0.12455597792082049;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082056;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082046;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730669;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.09492800936730676;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730648;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730796;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | else return 0.09492800936730708;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730696;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730764;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055904;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.07186088850055886;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055916;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055905;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.07186088850055844;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055908;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055881;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954964;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.054183073759549165;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.054183073759549526;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759547236;  // std dev = 8,426, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   | | else return 0.05418307375954949;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759548304;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.05418307375954873;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.0541830737595492;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.0407602532330564;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.040760253233056126;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.04076025323305634;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305653;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.040760253233056036;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.040760253233056515;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305637;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695679
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.61 seconds
Total inference time: 1.699 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [3.606, 26, 26], 'true,true,true,true': [3.606, 26, 26], 'true,true,false,false': [3.082, 19, 19], 'true,false': [9.327, 174, 174], 'false,true,false': [2.121, 9, 9], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.391, 23, 23], 'true,true,false,true': [0.707, 1, 1], 'true,true,true,false': [1.225, 3, 3]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [4.95, 49, 49], 'true,false,false,false': [2.121, 9, 9], 'false,true,true,true': [3.937, 31, 31], 'true,false,false,true': [3.674, 27, 27], 'true,false,true,false': [4.637, 43, 43], 'true,false,true,true': [5.568, 62, 62], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [5.477, 60, 60]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [4.95, 49, 49], 'true,false,true,true': [5.745, 66, 66], 'true,true,true': [3.808, 29, 29], 'true,true,false,false': [3.082, 19, 19], 'true,false,true,false': [6.164, 76, 76], 'false,true,false': [2.121, 9, 9], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.707, 1, 1], 'true,false,false': [4.0, 32, 32]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [5.745, 66, 66], 'true,true,false': [3.162, 20, 20], 'false,true,true,true': [2.739, 15, 15], 'true,false,false': [4.0, 32, 32], 'false,true,false': [2.121, 9, 9], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.123, 34, 34], 'true,false,true,false': [6.164, 76, 76], 'true,true,true': [3.808, 29, 29]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [5.745, 66, 66], 'true,true,false': [3.162, 20, 20], 'false,true,true,true': [2.739, 15, 15], 'true,false,false': [4.0, 32, 32], 'false,true,false': [2.121, 9, 9], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.123, 34, 34], 'true,false,true,false': [6.164, 76, 76], 'true,true,true': [3.808, 29, 29]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [3.162, 20, 20], 'true,true,true,true': [3.606, 26, 26], 'true,false,false': [4.243, 36, 36], 'false,true,false': [5.477, 60, 60], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [7.246, 105, 105], 'false,true,true,true': [3.937, 31, 31], 'true,true,true,false': [1.225, 3, 3]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [3.162, 20, 20], 'true,true,true,true': [3.606, 26, 26], 'true,false,false': [4.243, 36, 36], 'false,true,false': [5.477, 60, 60], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [7.246, 105, 105], 'false,true,true,true': [3.937, 31, 31], 'true,true,true,false': [1.225, 3, 3]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [2.121, 9, 9], 'true,true,false': [3.317, 22, 22], 'true,false,false,true': [3.674, 27, 27], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [5.477, 60, 60], 'false,false': [0.0, 0, 0], 'true,true,true': [3.674, 27, 27], 'true,false,true': [7.246, 105, 105], 'false,true,true,true': [3.937, 31, 31]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [3.162, 20, 20], 'true,true,true,true': [3.606, 26, 26], 'true,false,false': [4.0, 32, 32], 'false,true,false': [2.121, 9, 9], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.391, 23, 23], 'true,false,true': [8.426, 142, 142], 'false,true,true,true': [3.606, 26, 26], 'true,true,true,false': [1.225, 3, 3]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [4.95, 49, 49], 'true,false,false,false': [2.121, 9, 9], 'false,true,true,true': [3.937, 31, 31], 'true,false,false,true': [3.674, 27, 27], 'true,false,true,false': [4.637, 43, 43], 'true,false,true,true': [5.568, 62, 62], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [5.477, 60, 60]}]]
[{'': [0.2500000000000034, 0.2499999999999998], 'true,true': [0.25000000000000144, 0.24999999999999983], 'true,true,false': [0.25, 0.24999999999999958], 'false,true,true': [0.2500000000000014, 0.2500000000000012], 'false,true': [0.25000000000000017, 0.25], 'false': [0.2499999999999998, nan], 'true,true,true': [0.2500000000000014, 0.24999999999999992], 'true': [0.25000000000000017, 0.25000000000000444]}, {'': [0.25000000000000383, 0.2499999999999972], 'false,true,true': [0.24999999999999967, nan], 'false': [0.2499999999999972, nan], 'true,false,false': [0.2499999999999996, 0.25000000000000017], 'false,true': [0.24999999999999967, 0.2499999999999979], 'true': [0.24999999999999842, 0.2500000000000003], 'true,false': [0.2500000000000006, 0.2500000000000001], 'true,false,true': [0.24999999999999784, 0.2500000000000002]}, {'': [0.25000000000000316, 0.25000000000000033], 'true,true': [0.2499999999999997, 0.25000000000000033], 'true,true,false': [0.24999999999999997, 0.25000000000000033], 'true,false,true': [0.2500000000000003, 0.2500000000000001], 'true,false': [0.2499999999999963, 0.2499999999999995], 'false,true': [0.24999999999999897, 0.25000000000000006], 'false': [0.25000000000000033, nan], 'true': [0.24999999999999992, 0.24999999999999634]}, {'': [0.25000000000000183, 0.2500000000000003], 'true,true': [0.2500000000000002, 0.24999999999999942], 'false,true,true': [0.25000000000000006, 0.25000000000000083], 'true,false,true': [0.2500000000000001, 0.2499999999999998], 'true,false': [0.24999999999999986, 0.2500000000000008], 'false,true': [0.25000000000000067, 0.2500000000000002], 'false': [0.2500000000000003, nan], 'true': [0.25000000000000056, 0.2500000000000004]}, {'': [0.24999999999999992, 0.24999999999999978], 'true,true': [0.24999999999999983, 0.2499999999999997], 'false,true,true': [0.25000000000000017, 0.24999999999999964], 'false': [0.24999999999999978, nan], 'false,true': [0.2499999999999995, 0.2499999999999998], 'true': [0.2499999999999996, 0.25000000000000044], 'true,false': [0.2500000000000008, 0.24999999999999978], 'true,false,true': [0.2500000000000002, 0.24999999999999978]}, {'': [0.25000000000000144, 0.24999999999999964], 'true,true': [0.24999999999999994, 0.24999999999999992], 'false,true,true': [0.24999999999999983, nan], 'true,false': [0.24999999999999997, 0.2499999999999998], 'false,true': [0.24999999999999983, 0.24999999999999953], 'false': [0.24999999999999964, nan], 'true,true,true': [0.25, 0.25], 'true': [0.24999999999999986, 0.25000000000000044]}, {'': [0.24999999999999722, 0.250000000000001], 'false,true,true': [0.2499999999999999, nan], 'true,true': [0.2499999999999999, 0.25], 'true,false': [0.250000000000001, 0.24999999999999986], 'false,true': [0.2499999999999999, 0.24999999999999947], 'false': [0.250000000000001, nan], 'true,true,true': [0.24999999999999986, 0.25], 'true': [0.24999999999999972, 0.2499999999999995]}, {'': [0.2500000000000012, 0.2500000000000013], 'false,true,true': [0.24999999999999972, nan], 'true,true': [0.24999999999999967, 0.24999999999999972], 'true,false': [0.2500000000000012, 0.24999999999999967], 'false,true': [0.24999999999999972, 0.24999999999999944], 'false': [0.2500000000000013, nan], 'true,false,false': [0.2499999999999997, 0.25], 'true': [0.24999999999999972, 0.25000000000000117]}, {'': [0.24999999999999808, 0.24999999999999964], 'false,true,true': [0.24999999999999997, 0.25000000000000017], 'true,true': [0.25000000000000033, 0.25], 'true,false': [0.25000000000000017, 0.25000000000000017], 'false,true': [0.2499999999999996, 0.25000000000000006], 'false': [0.24999999999999964, nan], 'true,true,true': [0.25000000000000033, 0.25], 'true': [0.24999999999999944, 0.2499999999999989]}, {'': [0.2500000000000003, 0.25000000000000033], 'false,true,true': [0.25000000000000044, nan], 'true,false,true': [0.24999999999999983, 0.25000000000000006], 'true,false': [0.2500000000000002, 0.2500000000000003], 'false,true': [0.25000000000000044, 0.2500000000000002], 'false': [0.25000000000000033, nan], 'true,false,false': [0.25000000000000044, 0.25], 'true': [0.25000000000000017, 0.2500000000000003]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;phenotype(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;phenotype(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;phenotype(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;phenotype(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;phenotype(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;phenotype(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;phenotype(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;phenotype(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;phenotype(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;phenotype(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951123;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.35814893509951345;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.35814893509951135;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.35814893509951345;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   else return 0.35814893509951334;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.3087411357856351;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856347;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.3087411357856349;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3087411357856371;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.30874113578563545;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.3087411357856347;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.3087411357856347;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return 0.30874113578563744;  // std dev = 0,500, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585861;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585864;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2564123687585867;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.2564123687585886;  // std dev = 0,500, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2564123687585856;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.2564123687585857;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.2564123687585863;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2564123687585863;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.20613740734454028;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.20613740734454017;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.2061374073445401;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0.2061374073445416;  // std dev = 0,500, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453911;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.20613740734453884;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2061374073445395;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2061374073445395;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414722;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.1616285754841465;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414652;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0.1616285754841443;  // std dev = 0,500, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414608;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.16162857548414686;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1616285754841465;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1616285754841465;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.12455597792081999;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else return 0.12455597792081943;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.124555977920818;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.12455597792082014;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else return 0.12455597792081972;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.12455597792081852;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081824;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.09492800936730678;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0949280093673066;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0.09492800936730778;  // std dev = 0,500, 282,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=141 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730601;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09492800936730639;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.09492800936730539;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.07186088850055923;  // std dev = 0,500, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.07186088850055809;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.07186088850055859;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055763;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.07186088850055844;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.0718608885005579;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0718608885005587;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954948;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.05418307375954892;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.054183073759549526;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0.05418307375954696;  // std dev = 0,500, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.054183073759548714;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.054183073759549186;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.054183073759549005;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.05418307375954901;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305639;  // std dev = 0,500, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305617;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | | | else return 0.04076025323305638;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else return 0.04076025323305636;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.04076025323305643;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, H) )
%   | | | then return 0.04076025323305635;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.04076025323305637;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.69525
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 10.054 seconds
Total inference time: 1.552 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 3, Type: transfer, Time: 07:56:12
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695679, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.699, 'Learning time': 10.61}, 'CLL': -0.69525, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.552, 'Mapping results': {'Total time': 2.548261880874634, 'Possible mappings': 28, 'Finding best mapping': 0.0034072399139404297, 'Knowledge compiling time': 0.04335522651672363, 'Generating paths time': 2.4590656757354736, 'Generating mappings time': 0.04242873191833496}, 'Learning time': 20.664}


Start learning from scratch in target domain

Target train facts examples: 3232
Target train pos examples: 281
Target train neg examples: 281

Target test facts examples: 10704
Target test pos examples: 1167
Target test neg examples: 1167

WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(D, C) )
%   | | then return 0.3581489350995117;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.35814893509951107;  // std dev = 0,500, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(F, E), proteinclass(F, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.3581489350995108;  // std dev = 6,481, 168,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   | | | else return 0.35814893509951107;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | else if ( location(A, I) )
%   | | then return 0.3581489350995135;  // std dev = 0,500, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then if ( location(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(C, A) )
%   | | | then return 0.30874113578563517;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.3087411357856348;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.3087411357856347;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.30874113578563733;  // std dev = 6,245, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.3087411357856348;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.3087411357856351;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return 0.30874113578563744;  // std dev = 0,500, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.25641236875858664;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, E), proteinclass(E, F) )
%   | | | then return 0.2564123687585866;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( proteinclass(A, G) )
%   | then if ( interaction(H, A) )
%   | | then if ( proteinclass(H, G) )
%   | | | then return 0.2564123687585862;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585858;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.2564123687585858;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.25641236875858603;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0.2564123687585887;  // std dev = 0,500, 382,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=191 */
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( complex(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.20613740734453986;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453953;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2061374073445393;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.20613740734453928;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else return 0.20613740734454153;  // std dev = 0,500, 264,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=132 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.20613740734453945;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.2061374073445397;  // std dev = 0,500, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.16162857548414622;  // std dev = 0,500, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else if ( interaction(C, C) )
%   | | then return 0.16162857548414525;  // std dev = 0,500, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.16162857548414464;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | | else return 0.16162857548414547;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else if ( enzyme(A, E) )
%   | then if ( proteinclass(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.16162857548414605;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414616;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, H), enzyme(H, E) )
%   | | | then return 0.16162857548414522;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841455;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.1616285754841458;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(A, D) )
%   | then return 0.12455597792082006;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | else return 0.12455597792082014;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), proteinclass(F, G) )
%   | | | then return 0.12455597792081985;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792081985;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.12455597792081972;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I) )
%   | | | then return 0.12455597792082009;  // std dev = 7,000, 196,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=98 */
%   | | | else return 0.12455597792081918;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12455597792081909;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.12455597792081906;  // std dev = 5,148, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.09492800936730703;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.09492800936730705;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730718;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.09492800936730686;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(H, A) )
%   | then return 0.09492800936730789;  // std dev = 0,500, 412,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=206 */
%   | else if ( enzyme(A, I) )
%   | | then if ( proteinclass(A, J) )
%   | | | then return 0.09492800936730646;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.0949280093673057;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.09492800936730614;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then return 0.07186088850055915;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | else if ( interaction(C, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.07186088850055783;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055727;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( interaction(C, E) )
%   | | | then return 0.07186088850055843;  // std dev = 6,164, 152,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=76 */
%   | | | else return 0.07186088850055845;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else if ( complex(A, F) )
%   | then return 0.07186088850055887;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | else if ( proteinclass(A, G) )
%   | | then return 0.07186088850055805;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.0718608885005575;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07186088850055763;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then return 0.05418307375954671;  // std dev = 0,500, 446,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=223 */
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.05418307375954893;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05418307375954828;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, D) )
%   | | | then return 0.054183073759548984;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.05418307375954896;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, H) )
%   | | | then return 0.05418307375954966;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954871;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( proteinclass(A, J) )
%   | | | then return 0.05418307375954901;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.054183073759548415;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then if ( location(A, D) )
%   | | | then return 0.04076025323305674;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.04076025323305678;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.04076025323305617;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.0407602532330561;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | else if ( interaction(A, C) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.040760253233056216;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305583;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( interaction(F, C) )
%   | | | then return 0.04076025323305626;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | | else return 0.04076025323305618;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else return 0.04076025323305616;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 16.043 seconds
Total inference time: 1.69 seconds
AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 3, Type: scratch, Time: 07:56:30
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.69, 'Learning time': 16.043}


Starting fold 4

Target predicate: phenotype 

Mapping Results
   Knowledge compiling time   = 0.09388947486877441
   Generating paths time   = 2.4453094005584717
   Generating mappings time   = 0.041896820068359375
   Possible mappings   = 28
   Finding best mapping   = 0.0034546852111816406
   Total time   = 2.5845558643341064


Best mapping found: ['follows(A,B) -> interaction(B,A)', 'tweets(A,B) -> phenotype(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: phenotype 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;phenotype(A, B) :- interaction(A, C).;true;true
0;true,true;interaction(A, D), interaction(C, D).;true;true
0;true,true,false;interaction(E, A), interaction(C, E).;false;false
0;false,true,true;interaction(G, A).;false;false
0;false,true;interaction(G, F).;true;false
0;false;interaction(F, A).;true;false
0;true,true,true;interaction(D, C).;false;false
0;true;interaction(C, A).;true;false
1;;phenotype(A, B) :- interaction(C, A).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(A, F).;true;false
1;true,false,false;interaction(A, E).;false;false
1;false,true;interaction(G, F), interaction(A, G).;true;false
1;true;interaction(A, C).;false;true
1;true,false;interaction(D, C).;true;true
1;true,false,true;interaction(D, A).;false;false
2;;phenotype(A, B) :- interaction(A, C).;true;true
2;true,true;interaction(A, D), interaction(C, D).;false;true
2;true,true,false;interaction(E, A), interaction(C, E).;false;false
2;false;interaction(G, A).;true;false
2;true,false;interaction(C, F).;true;false
2;false,true;interaction(H, G).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(C, A).;true;true
3;;phenotype(A, B) :- interaction(A, C).;true;true
3;true,true;interaction(D, A), interaction(D, C).;false;false
3;false;interaction(F, A).;true;false
3;true,false;interaction(C, E).;true;false
3;false,true;interaction(G, F).;true;false
3;true,false,true;interaction(A, E).;false;false
3;true;interaction(C, A).;true;true
3;false,true,true;interaction(F, G).;false;false
4;;phenotype(A, B) :- interaction(A, C).;true;true
4;true,true;interaction(A, D), interaction(C, D).;false;false
4;false;interaction(F, A).;true;false
4;true,false;interaction(C, E).;true;false
4;false,true;interaction(G, F).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(C, A).;true;true
4;false,true,true;interaction(F, G).;false;false
5;;phenotype(A, B) :- interaction(C, A).;true;true
5;true,true;interaction(D, A), interaction(D, C).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(E, C).;false;false
5;false,true;interaction(G, F), interaction(A, G).;true;false
5;false;interaction(A, F).;true;false
5;true,true,true;interaction(A, D).;false;false
5;true;interaction(A, C).;true;true
6;;phenotype(A, B) :- interaction(C, A).;true;true
6;true,true;interaction(A, D), interaction(C, D).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(E, C).;false;false
6;false,true;interaction(G, F), interaction(A, G).;true;false
6;false;interaction(A, F).;true;false
6;true,true,true;interaction(D, C).;false;false
6;true;interaction(A, C).;true;true
7;;phenotype(A, B) :- interaction(C, A).;true;true
7;true,true;interaction(D, C), interaction(A, D).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(A, F).;false;false
7;false,true;interaction(H, G), interaction(A, H).;true;false
7;false;interaction(A, G).;true;false
7;true,false;interaction(E, C).;false;true
7;true;interaction(A, C).;true;true
8;;phenotype(A, B) :- interaction(A, C).;true;true
8;true,true;interaction(A, D), interaction(C, D).;true;false
8;false,true,true;interaction(G, A).;false;false
8;true,false;interaction(C, E).;false;false
8;false,true;interaction(G, F).;true;false
8;false;interaction(F, A).;true;false
8;true,true,true;interaction(D, C).;false;false
8;true;interaction(C, A).;true;true
9;;phenotype(A, B) :- interaction(C, A).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(A, F).;true;false
9;true,false,false;interaction(A, E).;false;false
9;false,true;interaction(G, F), interaction(A, G).;true;false
9;true;interaction(A, C).;false;true
9;true,false;interaction(D, C).;true;true
9;true,false,true;interaction(D, A).;false;false


WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.35814893509951107;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | else return 0.35814893509950857;  // std dev = 8,426, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.3581489350995126;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.35814893509951334;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.35814893509951234;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3087411357856375;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.30874113578563706;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.30874113578563767;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.308741135785635;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.3087411357856347;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856349;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.30874113578563495;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.25641236875858775;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0.256412368758586;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2564123687585857;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2564123687585875;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.2564123687585878;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.25641236875858636;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.2564123687585883;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | else return 0.2564123687585867;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.20613740734453992;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else return 0.2061374073445389;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2061374073445405;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.20613740734454022;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.2061374073445404;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.20613740734453884;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | | else return 0.20613740734453856;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else return 0.20613740734454003;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.16162857548414458;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.16162857548414697;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414702;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.16162857548414655;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | else return 0.16162857548414694;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.16162857548414458;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | | else return 0.16162857548414486;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else return 0.16162857548414641;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.12455597792082027;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | | else return 0.12455597792081928;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081985;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | else if ( interaction(E, C) )
%   | | then return 0.12455597792082063;  // std dev = 9,592, 368,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=184 */
%   | | else return 0.12455597792082028;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792082043;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082045;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.09492800936730529;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.09492800936730633;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.09492800936730694;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(E, C) )
%   | | then return 0.09492800936730793;  // std dev = 9,592, 368,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=184 */
%   | | else return 0.094928009367307;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730672;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730734;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then return 0.07186088850055879;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.07186088850055901;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(E, C) )
%   | | then return 0.07186088850055587;  // std dev = 9,592, 368,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=184 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.07186088850055874;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.07186088850055822;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.07186088850055898;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055904;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.05418307375954921;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.05418307375954878;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.0541830737595495;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(C, E) )
%   | | then return 0.054183073759547694;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | else return 0.05418307375954967;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.05418307375954948;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.05418307375954931;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.05418307375954929;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.0407602532330549;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.04076025323305643;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.040760253233056265;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.04076025323305663;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.04076025323305626;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.040760253233056515;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.040760253233056515;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695345
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.76 seconds
Total inference time: 1.771 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'false,true,true': 'interaction(G, A)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'false,true,true,true': [4.637, 43, 43], 'true,true,true,true': [5.099, 52, 52], 'true,true,false,false': [4.123, 34, 34], 'true,false': [8.426, 142, 142], 'false,true,false': [3.0, 18, 18], 'false,false': [0.0, 0, 0], 'false,true,true,false': [5.523, 61, 61], 'true,true,false,true': [0.707, 1, 1], 'true,true,true,false': [2.121, 9, 9]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [6.928, 96, 96], 'true,false,false,false': [3.0, 18, 18], 'false,true,true,true': [3.536, 25, 25], 'true,false,false,true': [2.915, 17, 17], 'true,false,true,false': [7.969, 127, 127], 'true,false,true,true': [5.339, 57, 57], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [3.162, 20, 20]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'true,false': 'interaction(C, F)', 'false,true': 'interaction(H, G)', 'false': 'interaction(G, A)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(C, A)'}, {'false,true,true': [7.211, 104, 104], 'true,false,true,true': [5.244, 55, 55], 'true,true,true': [5.523, 61, 61], 'true,true,false,false': [4.123, 34, 34], 'true,false,true,false': [5.431, 59, 59], 'false,true,false': [3.0, 18, 18], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.707, 1, 1], 'true,false,false': [3.742, 28, 28]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [5.244, 55, 55], 'true,true,false': [4.359, 38, 38], 'false,true,true,true': [5.523, 61, 61], 'true,false,false': [3.742, 28, 28], 'false,true,false': [3.0, 18, 18], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.637, 43, 43], 'true,false,true,false': [5.431, 59, 59], 'true,true,true': [5.385, 58, 58]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [5.244, 55, 55], 'true,true,false': [4.183, 35, 35], 'false,true,true,true': [5.523, 61, 61], 'true,false,false': [3.742, 28, 28], 'false,true,false': [3.0, 18, 18], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.637, 43, 43], 'true,false,true,false': [5.431, 59, 59], 'true,true,true': [5.523, 61, 61]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(A, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [4.359, 38, 38], 'true,true,true,true': [5.292, 56, 56], 'true,false,false': [4.183, 35, 35], 'false,true,false': [3.162, 20, 20], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [9.592, 184, 184], 'false,true,true,true': [3.536, 25, 25], 'true,true,true,false': [1.0, 2, 2]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true,false': [4.183, 35, 35], 'true,true,true,true': [5.099, 52, 52], 'true,false,false': [4.183, 35, 35], 'false,true,false': [3.162, 20, 20], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [9.592, 184, 184], 'false,true,true,true': [3.536, 25, 25], 'true,true,true,false': [2.121, 9, 9]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, C), interaction(A, D)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(A, F)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'true': 'interaction(A, C)'}, {'true,false,false,false': [3.0, 18, 18], 'true,true,false': [4.183, 35, 35], 'true,false,false,true': [2.915, 17, 17], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [3.162, 20, 20], 'false,false': [0.0, 0, 0], 'true,true,true': [5.523, 61, 61], 'true,false,true': [9.592, 184, 184], 'false,true,true,true': [3.536, 25, 25]}], ['phenotype(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'true,true,false': [4.183, 35, 35], 'true,true,true,true': [5.099, 52, 52], 'true,false,false': [3.742, 28, 28], 'false,true,false': [3.0, 18, 18], 'false,false': [0.0, 0, 0], 'false,true,true,false': [5.523, 61, 61], 'true,false,true': [7.55, 114, 114], 'false,true,true,true': [4.637, 43, 43], 'true,true,true,false': [2.121, 9, 9]}], ['phenotype(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [6.928, 96, 96], 'true,false,false,false': [3.0, 18, 18], 'false,true,true,true': [3.536, 25, 25], 'true,false,false,true': [2.915, 17, 17], 'true,false,true,false': [7.969, 127, 127], 'true,false,true,true': [5.339, 57, 57], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [3.162, 20, 20]}]]
[{'': [0.25000000000000316, 0.2500000000000035], 'false,true,true': [0.25000000000000056, 0.24999999999999975], 'true,true': [0.24999999999999975, 0.2500000000000016], 'true,true,false': [0.25, 0.25000000000000167], 'false,true': [0.25000000000000294, 0.2499999999999995], 'false': [0.2500000000000035, nan], 'true,true,true': [0.25, 0.25], 'true': [0.2500000000000026, 0.250000000000004]}, {'': [0.25000000000000905, 0.24999999999999897], 'false,true,true': [0.24999999999999958, nan], 'false': [0.24999999999999897, nan], 'true,false,false': [0.25000000000000044, 0.25000000000000006], 'false,true': [0.24999999999999958, 0.25000000000000044], 'true': [0.24999999999999933, 0.2500000000000063], 'true,false': [0.2500000000000032, 0.25000000000000044], 'true,false,true': [0.24999999999999795, 0.25000000000000033]}, {'': [0.25000000000000344, 0.24999999999999625], 'true,true': [0.25000000000000017, 0.25000000000000133], 'true,true,false': [0.25, 0.25000000000000133], 'false': [0.24999999999999625, nan], 'true,false': [0.2499999999999964, 0.2499999999999994], 'false,true': [0.24999999999999883, 0.2499999999999999], 'true,false,true': [0.25000000000000017, 0.2500000000000003], 'true': [0.24999999999999992, 0.2499999999999963]}, {'': [0.24999999999999845, 0.2499999999999996], 'false,true,true': [0.25000000000000033, 0.2500000000000004], 'true,true': [0.25, 0.2500000000000006], 'true,false,true': [0.2500000000000007, 0.25000000000000033], 'true,false': [0.24999999999999978, 0.25000000000000006], 'false,true': [0.24999999999999983, 0.2499999999999996], 'false': [0.2499999999999996, nan], 'true': [0.24999999999999947, 0.24999999999999994]}, {'': [0.24999999999999975, 0.25000000000000044], 'false,true,true': [0.24999999999999967, 0.24999999999999958], 'true,true': [0.24999999999999967, 0.2499999999999997], 'true,false,true': [0.24999999999999978, 0.24999999999999967], 'true,false': [0.2500000000000007, 0.24999999999999986], 'false,true': [0.2500000000000002, 0.2499999999999999], 'false': [0.25000000000000044, nan], 'true': [0.2500000000000001, 0.25000000000000094]}, {'': [0.24999999999999784, 0.24999999999999992], 'false,true,true': [0.2499999999999999, nan], 'true,true': [0.2499999999999991, 0.2499999999999998], 'true,false': [0.2500000000000011, 0.24999999999999986], 'false,true': [0.2499999999999999, 0.25000000000000006], 'false': [0.24999999999999992, nan], 'true,true,true': [0.2499999999999991, 0.24999999999999997], 'true': [0.25000000000000094, 0.25000000000000205]}, {'': [0.2499999999999982, 0.24999999999999975], 'false,true,true': [0.24999999999999986, nan], 'true,true': [0.24999999999999942, 0.24999999999999986], 'true,false': [0.24999999999999714, 0.2499999999999998], 'false,true': [0.24999999999999986, 0.24999999999999986], 'false': [0.24999999999999975, nan], 'true,true,true': [0.24999999999999944, 0.2499999999999999], 'true': [0.25000000000000094, 0.24999999999999725]}, {'': [0.2500000000000017, 0.2499999999999998], 'true,true': [0.24999999999999942, 0.2499999999999995], 'false,true,true': [0.24999999999999964, nan], 'true,false': [0.25000000000000083, 0.24999999999999958], 'false,true': [0.24999999999999964, 0.24999999999999972], 'false': [0.2499999999999998, nan], 'true,false,false': [0.25000000000000006, 0.24999999999999994], 'true': [0.25000000000000133, 0.2500000000000014]}, {'': [0.24999999999999817, 0.2500000000000011], 'false,true,true': [0.24999999999999958, 0.24999999999999928], 'true,true': [0.2499999999999993, 0.25], 'true,false': [0.25000000000000144, 0.2499999999999995], 'false,true': [0.2500000000000012, 0.25], 'false': [0.2500000000000011, nan], 'true,true,true': [0.2499999999999993, 0.25000000000000017], 'true': [0.25000000000000105, 0.25000000000000083]}, {'': [0.2499999999999982, 0.2500000000000004], 'false,true,true': [0.25000000000000033, nan], 'true,false,true': [0.2499999999999999, 0.2500000000000003], 'true,false': [0.2500000000000002, 0.25000000000000017], 'false,true': [0.25000000000000033, 0.2500000000000001], 'false': [0.2500000000000004, nan], 'true,false,false': [0.25, 0.24999999999999994], 'true': [0.25000000000000017, 0.2500000000000002]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;phenotype(A, B) :- interaction(A, C).;true;true', '0;true,true;interaction(A, D), interaction(C, D).;true;true', '0;true,true,false;interaction(E, A), interaction(C, E).;true;true', '0;false,true,true;interaction(G, A).;true;true', '0;false,true;interaction(G, F).;true;true', '0;false;interaction(F, A).;true;true', '0;true,true,true;interaction(D, C).;true;true', '0;true;interaction(C, A).;true;true', '1;;phenotype(A, B) :- interaction(C, A).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(A, F).;true;true', '1;true,false,false;interaction(A, E).;true;true', '1;false,true;interaction(G, F), interaction(A, G).;true;true', '1;true;interaction(A, C).;true;true', '1;true,false;interaction(D, C).;true;true', '1;true,false,true;interaction(D, A).;true;true', '2;;phenotype(A, B) :- interaction(A, C).;true;true', '2;true,true;interaction(A, D), interaction(C, D).;true;true', '2;true,true,false;interaction(E, A), interaction(C, E).;true;true', '2;false;interaction(G, A).;true;true', '2;true,false;interaction(C, F).;true;true', '2;false,true;interaction(H, G).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(C, A).;true;true', '3;;phenotype(A, B) :- interaction(A, C).;true;true', '3;true,true;interaction(D, A), interaction(D, C).;true;true', '3;false;interaction(F, A).;true;true', '3;true,false;interaction(C, E).;true;true', '3;false,true;interaction(G, F).;true;true', '3;true,false,true;interaction(A, E).;true;true', '3;true;interaction(C, A).;true;true', '3;false,true,true;interaction(F, G).;true;true', '4;;phenotype(A, B) :- interaction(A, C).;true;true', '4;true,true;interaction(A, D), interaction(C, D).;true;true', '4;false;interaction(F, A).;true;true', '4;true,false;interaction(C, E).;true;true', '4;false,true;interaction(G, F).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(C, A).;true;true', '4;false,true,true;interaction(F, G).;true;true', '5;;phenotype(A, B) :- interaction(C, A).;true;true', '5;true,true;interaction(D, A), interaction(D, C).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(E, C).;true;true', '5;false,true;interaction(G, F), interaction(A, G).;true;true', '5;false;interaction(A, F).;true;true', '5;true,true,true;interaction(A, D).;true;true', '5;true;interaction(A, C).;true;true', '6;;phenotype(A, B) :- interaction(C, A).;true;true', '6;true,true;interaction(A, D), interaction(C, D).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(E, C).;true;true', '6;false,true;interaction(G, F), interaction(A, G).;true;true', '6;false;interaction(A, F).;true;true', '6;true,true,true;interaction(D, C).;true;true', '6;true;interaction(A, C).;true;true', '7;;phenotype(A, B) :- interaction(C, A).;true;true', '7;true,true;interaction(D, C), interaction(A, D).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(A, F).;true;true', '7;false,true;interaction(H, G), interaction(A, H).;true;true', '7;false;interaction(A, G).;true;true', '7;true,false;interaction(E, C).;true;true', '7;true;interaction(A, C).;true;true', '8;;phenotype(A, B) :- interaction(A, C).;true;true', '8;true,true;interaction(A, D), interaction(C, D).;true;true', '8;false,true,true;interaction(G, A).;true;true', '8;true,false;interaction(C, E).;true;true', '8;false,true;interaction(G, F).;true;true', '8;false;interaction(F, A).;true;true', '8;true,true,true;interaction(D, C).;true;true', '8;true;interaction(C, A).;true;true', '9;;phenotype(A, B) :- interaction(C, A).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(A, F).;true;true', '9;true,false,false;interaction(A, E).;true;true', '9;false,true;interaction(G, F), interaction(A, G).;true;true', '9;true;interaction(A, C).;true;true', '9;true,false;interaction(D, C).;true;true', '9;true,false,true;interaction(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.35814893509951334;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.35814893509951107;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.35814893509951184;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | | else return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.3581489350995126;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.35814893509951334;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3087411357856375;  // std dev = 0,500, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.30874113578563706;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.30874113578563767;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.3087411357856347;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.3087411357856347;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856348;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.2564123687585857;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2564123687585871;  // std dev = 5,196, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.2564123687585862;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2564123687585857;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | else if ( interaction(C, G) )
%   | | then return 0.25641236875858847;  // std dev = 0,500, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.25641236875858564;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.25641236875858625;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(I, A) )
%   | then return 0.2564123687585885;  // std dev = 0,500, 244,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=122 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.20613740734453992;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.20613740734453984;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.20613740734453995;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.20613740734454156;  // std dev = 0,500, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.20613740734453884;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | | else return 0.20613740734453856;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.20613740734453936;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20613740734453906;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.16162857548414458;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else return 0.16162857548414686;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else if ( interaction(C, E) )
%   | | then return 0.16162857548414442;  // std dev = 0,500, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | | else return 0.16162857548414636;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.16162857548414458;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | | else return 0.16162857548414483;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.1616285754841463;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1616285754841462;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.12455597792082052;  // std dev = 0,500, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.12455597792081963;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | | else return 0.12455597792082046;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | else return 0.12455597792081972;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.124555977920819;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.12455597792081914;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792081906;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.09492800936730574;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.09492800936730639;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.09492800936730639;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0.09492800936730758;  // std dev = 0,500, 438,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=219 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730643;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.09492800936730643;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09492800936730644;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then return 0.07186088850055879;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.0718608885005582;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.07186088850055818;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.07186088850055813;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | | else return 0.07186088850055863;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.071860888500558;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.07186088850055818;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, I) )
%   | then return 0.07186088850055854;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.0541830737595491;  // std dev = 0,500, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.05418307375954899;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.05418307375954903;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0.05418307375954723;  // std dev = 0,500, 284,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.05418307375954876;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.05418307375954874;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.054183073759549005;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.054183073759548894;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.04076025323305613;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else return 0.04076025323305637;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.04076025323305604;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.040760253233054704;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else return 0.04076025323305636;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.040760253233056466;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305647;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695287
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.922 seconds
Total inference time: 1.903 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 4, Type: transfer, Time: 07:56:55
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695345, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.771, 'Learning time': 8.76}, 'CLL': -0.695287, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.903, 'Mapping results': {'Total time': 2.5845558643341064, 'Possible mappings': 28, 'Finding best mapping': 0.0034546852111816406, 'Knowledge compiling time': 0.09388947486877441, 'Generating paths time': 2.4453094005584717, 'Generating mappings time': 0.041896820068359375}, 'Learning time': 18.682000000000002}


Start learning from scratch in target domain

Target train facts examples: 2947
Target train pos examples: 360
Target train neg examples: 360

Target test facts examples: 10989
Target test pos examples: 1088
Target test neg examples: 1088

WILL Produced-Tree #1
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( complex(D, C), proteinclass(D, E) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( location(A, F) )
%   | then if ( interaction(G, A) )
%   | | then if ( location(G, F) )
%   | | | then return 0.35814893509950807;  // std dev = 10,392, 432,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=216 */
%   | | | else return 0.35814893509951323;  // std dev = 5,196, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.35814893509951123;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.35814893509951223;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(A, I) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( complex(D, C), proteinclass(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.3087411357856348;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.308741135785635;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( location(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.30874113578563755;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.30874113578563483;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else return 0.3087411357856349;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, A) )
%   | | then return 0.3087411357856348;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else return 0.3087411357856373;  // std dev = 0,500, 144,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=72 */
%   | else return 0.3087411357856374;  // std dev = 0,500, 170,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=85 */
WILL Produced-Tree #3
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.25641236875858636;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.2564123687585886;  // std dev = 7,616, 232,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=116 */
%   | | | else return 0.25641236875858575;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else return 0.2564123687585864;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), proteinclass(H, I) )
%   | | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.2564123687585887;  // std dev = 0,500, 352,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=176 */
WILL Produced-Tree #4
% FOR phenotype(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( complex(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.20613740734454;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2061374073445398;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then return 0.20613740734453392;  // std dev = 0,500, 540,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=270 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.20613740734453936;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.206137407344539;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   else if ( interaction(A, I) )
%   | then return 0.20613740734453975;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.2061374073445388;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.1616285754841467;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, D) )
%   | | then return 0.1616285754841468;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.1616285754841464;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( location(A, E) )
%   | then if ( proteinclass(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.16162857548414944;  // std dev = 6,595, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
%   | | | else return 0.16162857548414625;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.16162857548414872;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | | else return 0.161628575484148;  // std dev = 7,000, 196,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=98 */
%   | else if ( interaction(A, I) )
%   | | then return 0.1616285754841468;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.16162857548414578;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.12455597792081965;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, D) )
%   | | then if ( interaction(E, A), proteinclass(E, F) )
%   | | | then return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081963;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.1245559779208193;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.12455597792081974;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.12455597792081768;  // std dev = 0,500, 540,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=270 */
%   | | else return 0.1245559779208191;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else if ( interaction(A, J) )
%   | | then return 0.12455597792081974;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.12455597792081896;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR phenotype(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.09492800936730683;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09492800936730669;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else if ( interaction(F, A) )
%   | | then if ( location(F, C) )
%   | | | then return 0.09492800936730814;  // std dev = 10,392, 432,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=216 */
%   | | | else return 0.09492800936730765;  // std dev = 5,196, 108,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.09492800936730669;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.09492800936730617;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   else if ( interaction(A, H) )
%   | then return 0.09492800936730683;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.09492800936730639;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR phenotype(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.0718608885005591;  // std dev = 0,500, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( interaction(C, A) )
%   | | | then return 0.07186088850055954;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.0718608885005591;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | else if ( interaction(C, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.07186088850055986;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.07186088850055969;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.07186088850055931;  // std dev = 0,500, 194,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=97 */
%   else if ( proteinclass(A, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.07186088850055992;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.07186088850055905;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else return 0.07186088850055944;  // std dev = 0,500, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
WILL Produced-Tree #9
% FOR phenotype(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.054183073759549234;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(E, C), proteinclass(E, F) )
%   | | | then return 0.054183073759549484;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.0541830737595496;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( location(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.05418307375955144;  // std dev = 7,616, 232,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=116 */
%   | | | else return 0.05418307375954944;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.054183073759549005;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(I, A) )
%   | then return 0.05418307375954926;  // std dev = 0,500, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | else if ( proteinclass(A, J) )
%   | | then return 0.05418307375954834;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.05418307375954801;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #10
% FOR phenotype(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.0407602532330562;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(E, C), proteinclass(E, F) )
%   | | | then return 0.04076025323305629;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.040760253233056286;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), proteinclass(H, I) )
%   | | | then return 0.040760253233055994;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.040760253233056;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0407602532330562;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( location(A, J) )
%   | then return 0.04076025323305896;  // std dev = 0,500, 630,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=315 */
%   | else if ( interaction(A, K) )
%   | | then return 0.04076025323305599;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.04076025323305555;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 25.812 seconds
Total inference time: 1.633 seconds
AUC ROC: 0.5


Dataset: 27_twitter_yeast, Fold: 4, Type: scratch, Time: 07:57:23
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.633, 'Learning time': 25.812}


