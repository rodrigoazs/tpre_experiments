Starting experiment #1 for 26_twitter_yeast

Start learning from source dataset

Source train facts examples: 2052
Source train pos examples: 1372
Source train neg examples: 1372

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.3581489350995074;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.3581489350995129;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3581489350995087;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else return 0.358148935099508;  // std dev = 0,500, 464,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=232 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.3581489350995133;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.3581489350995133;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.3087411357856633;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.3087411357856376;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.3087411357856372;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3087411357856372;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.25641236875856666;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.25641236875857976;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.25641236875858187;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else if ( follows(F, C) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.2564123687585887;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.2564123687585863;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.25641236875858714;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H) )
%   | | then return 0.2564123687585884;  // std dev = 0,500, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | else return 0.25641236875858603;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.20613740734453131;  // std dev = 0,500, 1.846,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=923 */
%   | | else return 0.20613740734453517;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.20613740734454172;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.20613740734453923;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.20613740734454025;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734454133;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.20613740734453861;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.20613740734453867;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.20613740734453984;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.16162857548414433;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else return 0.16162857548414417;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.16162857548414702;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16162857548414444;  // std dev = 10,050, 404,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=202 */
%   | | else return 0.16162857548414647;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414428;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414733;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.16162857548414664;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792081527;  // std dev = 19,274, 1.486,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=743 */
%   | | | else return 0.12455597792081972;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.12455597792081662;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(C, E) )
%   | | then return 0.12455597792082045;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.1245559779208206;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.12455597792082054;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792082118;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.12455597792081967;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.09492800936732027;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.0949280093673082;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.09492800936730682;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(C, E) )
%   | | then return 0.09492800936730778;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.09492800936730793;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.09492800936730791;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.09492800936730716;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730794;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.0718608885005646;  // std dev = 0,500, 1.548,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=774 */
%   | | else return 0.07186088850055461;  // std dev = 0,500, 386,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=193 */
%   | else if ( follows(C, E) )
%   | | then return 0.07186088850055665;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.0718608885005588;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.07186088850055841;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( accounttype(G, I), accounttype(H, I) )
%   | | | then return 0.07186088850055906;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.07186088850055883;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0718608885005595;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07186088850055862;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375954569;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.05418307375954943;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.054183073759546486;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then return 0.05418307375954729;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.05418307375954963;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954887;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.054183073759548894;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.0541830737595491;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.040760253233045114;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.040760253233055585;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.040760253233055425;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.040760253233056494;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.040760253233056175;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.04076025323305458;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.04076025323305688;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.040760253233057535;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Predicates from source: ['tweets(account,word).', 'follows(account,account).', 'accounttype(account,type).']

Starting fold 1

Target predicate: function 

Mapping Results
   Knowledge compiling time   = 0.04744148254394531
   Generating paths time   = 1.9076197147369385
   Generating mappings time   = 0.03400468826293945
   Possible mappings   = 28
   Finding best mapping   = 0.0025594234466552734
   Total time   = 1.9916298389434814


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: function 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;function(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;function(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;function(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;function(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;function(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;function(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;function(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;function(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;function(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;function(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995078;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.35814893509951184;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else return 0.3581489350995074;  // std dev = 19,066, 1.454,000 (wgt'ed) examples reached here.  /* #neg=727 #pos=727 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951146;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578562723;  // std dev = 12,942, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856374;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | | else return 0.3087411357856377;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856375;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.3087411357856347;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.30874113578563617;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.308741135785636;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.30874113578562745;  // std dev = 12,470, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 12,000, 576,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=288 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.256412368758588;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.25641236875858875;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.25641236875858886;  // std dev = 12,083, 584,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=292 */
%   | | | else return 0.25641236875858386;  // std dev = 13,620, 742,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=371 */
%   | | else return 0.25641236875858875;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858564;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else return 0.25641236875858625;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453284;  // std dev = 12,124, 588,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=294 */
%   | | else return 0.2061374073445418;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734453273;  // std dev = 12,083, 584,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=292 */
%   | | | else return 0.20613740734454655;  // std dev = 13,620, 742,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=371 */
%   | | else return 0.20613740734454167;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453914;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.2061374073445394;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.20613740734453975;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414536;  // std dev = 12,000, 576,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=288 */
%   | | else return 0.16162857548414827;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1616285754841474;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.16162857548414458;  // std dev = 17,833, 1.272,000 (wgt'ed) examples reached here.  /* #neg=636 #pos=636 */
%   | | else return 0.16162857548414838;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841467;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.1616285754841462;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.16162857548414758;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082602;  // std dev = 11,790, 556,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=278 */
%   | | | else return 0.12455597792082322;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.12455597792082074;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082074;  // std dev = 9,566, 366,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=183 */
%   | | else return 0.12455597792082061;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082086;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.12455597792082232;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.12455597792082725;  // std dev = 12,470, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936731252;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | | else return 0.0949280093673085;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0949280093673076;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730808;  // std dev = 9,566, 366,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=183 */
%   | | else return 0.09492800936730797;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.0949280093673082;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.09492800936730869;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.09492800936730275;  // std dev = 12,470, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056438;  // std dev = 12,000, 576,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=288 */
%   | | else return 0.0718608885005594;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055891;  // std dev = 9,566, 366,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=183 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055918;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.07186088850055795;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850056221;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.07186088850056009;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.0718608885005643;  // std dev = 12,470, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759549616;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | | else return 0.054183073759549234;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.05418307375954978;  // std dev = 4,848, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759547146;  // std dev = 18,207, 1.326,000 (wgt'ed) examples reached here.  /* #neg=663 #pos=663 */
%   | | else return 0.054183073759548235;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954844;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.05418307375954819;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.05418307375954944;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305829;  // std dev = 12,942, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.040760253233056334;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | | else return 0.04076025323305661;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305675;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.040760253233056334;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305906;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.040760253233057944;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.040760253233059235;  // std dev = 12,470, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 38.404 seconds
Total inference time: 3.126 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [3.317, 22, 22], 'true,true,true,true': [11.937, 285, 285], 'true,true,false,false': [4.472, 40, 40], 'true,false': [19.066, 727, 727], 'false,true,false': [3.742, 28, 28], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.915, 17, 17], 'true,true,false,true': [1.871, 7, 7], 'true,true,true,false': [1.225, 3, 3]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [12.942, 335, 335], 'true,false,false,false': [3.742, 28, 28], 'false,true,true,true': [9.11, 166, 166], 'true,false,false,true': [6.364, 81, 81], 'true,false,true,false': [7.348, 108, 108], 'true,false,true,true': [6.124, 75, 75], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.536, 25, 25], 'false,true,false': [12.47, 311, 311]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [4.416, 39, 39], 'true,false,true,true': [12.083, 292, 292], 'true,true,true': [12.0, 288, 288], 'true,true,false,false': [4.472, 40, 40], 'true,false,true,false': [13.62, 371, 371], 'false,true,false': [3.742, 28, 28], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.871, 7, 7], 'true,false,false': [5.657, 64, 64]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [12.083, 292, 292], 'true,true,false': [4.528, 41, 41], 'false,true,true,true': [3.937, 31, 31], 'true,false,false': [5.657, 64, 64], 'false,true,false': [3.742, 28, 28], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.0, 8, 8], 'true,false,true,false': [13.62, 371, 371], 'true,true,true': [12.124, 294, 294]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [3.674, 27, 27], 'true,true,false': [4.848, 47, 47], 'false,true,true,true': [3.937, 31, 31], 'true,false,false': [5.657, 64, 64], 'false,true,false': [3.742, 28, 28], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.0, 8, 8], 'true,false,true,false': [17.833, 636, 636], 'true,true,true': [12.0, 288, 288]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [4.528, 41, 41], 'true,true,true,true': [11.79, 278, 278], 'true,false,false': [7.382, 109, 109], 'false,true,false': [12.47, 311, 311], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.536, 25, 25], 'true,false,true': [9.566, 183, 183], 'false,true,true,true': [9.11, 166, 166], 'true,true,true,false': [2.828, 16, 16]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [4.848, 47, 47], 'true,true,true,true': [11.937, 285, 285], 'true,false,false': [7.382, 109, 109], 'false,true,false': [12.47, 311, 311], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.536, 25, 25], 'true,false,true': [9.566, 183, 183], 'false,true,true,true': [9.11, 166, 166], 'true,true,true,false': [1.225, 3, 3]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [3.742, 28, 28], 'true,true,false': [4.848, 47, 47], 'true,false,false,true': [6.364, 81, 81], 'false,true,true,false': [3.536, 25, 25], 'false,true,false': [12.47, 311, 311], 'false,false': [0.0, 0, 0], 'true,true,true': [12.0, 288, 288], 'true,false,true': [9.566, 183, 183], 'false,true,true,true': [9.11, 166, 166]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [4.848, 47, 47], 'true,true,true,true': [11.937, 285, 285], 'true,false,false': [5.657, 64, 64], 'false,true,false': [3.742, 28, 28], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.915, 17, 17], 'true,false,true': [18.207, 663, 663], 'false,true,true,true': [3.317, 22, 22], 'true,true,true,false': [1.225, 3, 3]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [12.942, 335, 335], 'true,false,false,false': [3.742, 28, 28], 'false,true,true,true': [9.11, 166, 166], 'true,false,false,true': [6.364, 81, 81], 'true,false,true,false': [7.348, 108, 108], 'true,false,true,true': [6.124, 75, 75], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.536, 25, 25], 'false,true,false': [12.47, 311, 311]}]]
[{'': [0.2500000000000242, 0.24999999999999958], 'true,true': [0.25000000000000255, 0.2500000000000002], 'true,true,false': [0.25, 0.25000000000000117], 'false,true,true': [0.2500000000000011, 0.24999999999999953], 'false,true': [0.2500000000000014, 0.25000000000000144], 'false': [0.24999999999999958, nan], 'true,true,true': [0.2500000000000026, 0.24999999999999992], 'true': [0.2500000000000021, 0.2500000000000224]}, {'': [0.250000000000007, 0.25000000000000855], 'false,true,true': [0.2500000000000022, 0.2499999999999999], 'true,false,true': [0.2499999999999983, 0.25000000000000183], 'true,false': [0.2500000000000039, 0.25000000000000183], 'false,true': [0.2500000000000049, 0.25000000000000955], 'false': [0.25000000000000855, nan], 'true,false,false': [0.24999999999999878, 0.25000000000000133], 'true': [0.2500000000000098, 0.25000000000000894]}, {'': [0.2500000000000271, 0.25000000000000006], 'true,true': [0.2500000000000051, 0.24999999999999928], 'true,true,false': [0.24999999999999992, 0.2499999999999992], 'true,false,true': [0.25000000000000494, 0.2500000000000088], 'true,false': [0.24999999999999994, 0.2500000000000009], 'false,true': [0.2500000000000013, 0.24999999999999933], 'false': [0.25000000000000006, nan], 'true': [0.25000000000000583, 0.24999999999999964]}, {'': [0.24999999999998385, 0.24999999999999994], 'false,true,true': [0.25000000000000033, 0.24999999999999997], 'true,true': [0.2499999999999981, 0.24999999999999908], 'true,false,true': [0.24999999999999714, 0.24999999999999126], 'true,false': [0.25000000000000105, 0.25000000000000083], 'false,true': [0.2500000000000006, 0.25000000000000017], 'false': [0.24999999999999994, nan], 'true': [0.24999999999999775, 0.2500000000000009]}, {'': [0.2500000000000024, 0.25], 'true,true': [0.25000000000000333, 0.2500000000000003], 'false,true,true': [0.24999999999999972, 0.2500000000000001], 'true,false,true': [0.2500000000000002, 0.24999999999999156], 'true,false': [0.24999999999999212, 0.24999999999999992], 'false,true': [0.24999999999999956, 0.24999999999999958], 'false': [0.25, nan], 'true': [0.25000000000000233, 0.24999999999999328]}, {'': [0.25000000000000694, 0.24999999999999534], 'false,true,true': [0.2500000000000034, 0.24999999999999978], 'true,true': [0.24999999999999784, 0.24999999999999994], 'true,false': [0.25000000000000167, 0.2500000000000005], 'false,true': [0.2500000000000035, 0.2499999999999959], 'false': [0.24999999999999534, nan], 'true,true,true': [0.24999999999999922, 0.24999999999999997], 'true': [0.24999999999999517, 0.24999999999999858]}, {'': [0.2500000000000059, 0.24999999999999822], 'false,true,true': [0.24999999999999967, 0.25], 'true,true': [0.24999999999999792, 0.24999999999999997], 'true,false': [0.24999999999999759, 0.25000000000000033], 'false,true': [0.24999999999999956, 0.24999999999999845], 'false': [0.24999999999999822, nan], 'true,true,true': [0.24999999999999795, 0.25], 'true': [0.24999999999999742, 0.24999999999999792]}, {'': [0.24999999999999958, 0.2500000000000008], 'false,true,true': [0.25000000000000117, 0.25], 'true,true': [0.25000000000000216, 0.24999999999999992], 'true,false': [0.25000000000000117, 0.2500000000000006], 'false,true': [0.2500000000000021, 0.25000000000000233], 'false': [0.2500000000000008, nan], 'true,false,false': [0.2500000000000005, 0.2500000000000005], 'true': [0.25000000000000216, 0.25000000000000194]}, {'': [0.25000000000000405, 0.2499999999999999], 'true,true': [0.25000000000000083, 0.24999999999999958], 'false,true,true': [0.25, 0.24999999999999994], 'true,false': [0.2500000000000064, 0.2499999999999996], 'false,true': [0.25000000000000006, 0.2500000000000003], 'false': [0.2499999999999999, nan], 'true,true,true': [0.2500000000000006, 0.25], 'true': [0.25000000000000294, 0.25000000000000655]}, {'': [0.24999999999999264, 0.24999999999999542], 'false,true,true': [0.25000000000000044, 0.2499999999999999], 'true,false,true': [0.24999999999999992, 0.2500000000000004], 'true,false': [0.25000000000000033, 0.2500000000000005], 'false,true': [0.2500000000000004, 0.24999999999999858], 'false': [0.24999999999999542, nan], 'true,false,false': [0.25000000000000017, 0.24999999999999997], 'true': [0.24999999999999503, 0.24999999999999833]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;function(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;function(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;function(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;function(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;function(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;function(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;function(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;function(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;function(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;function(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995078;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.35814893509951184;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.3581489350995111;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.3581489350995082;  // std dev = 9,798, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
%   | | else return 0.3581489350995075;  // std dev = 0,500, 1.004,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=502 */
%   else if ( interaction(A, G) )
%   | then return 0.35814893509951345;  // std dev = 0,500, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.30874113578563755;  // std dev = 0,500, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
%   | | else if ( complex(A, D) )
%   | | | then return 0.30874113578563744;  // std dev = 6,442, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | | else return 0.3087411357856364;  // std dev = 9,083, 330,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=165 */
%   | else if ( interaction(C, E) )
%   | | then return 0.30874113578563284;  // std dev = 0,500, 366,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=183 */
%   | | else return 0.30874113578563755;  // std dev = 0,500, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.30874113578563156;  // std dev = 0,500, 382,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=191 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,416, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | | | else return 0.30874113578563006;  // std dev = 10,025, 402,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=201 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.25641236875858836;  // std dev = 6,595, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
%   | | | else return 0.2564123687585888;  // std dev = 10,025, 402,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=201 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.256412368758586;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.25641236875858564;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else return 0.2564123687585672;  // std dev = 0,500, 1.454,000 (wgt'ed) examples reached here.  /* #neg=727 #pos=727 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then return 0.2564123687585859;  // std dev = 0,500, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( location(A, H) )
%   | | | then return 0.2564123687585856;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.25641236875858564;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.20613740734453154;  // std dev = 0,500, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.20613740734455155;  // std dev = 12,083, 584,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=292 */
%   | | | else return 0.20613740734455302;  // std dev = 13,620, 742,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=371 */
%   | | else return 0.20613740734454494;  // std dev = 0,500, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.2061374073445395;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.20613740734454014;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( location(A, G) )
%   | | | then return 0.20613740734453878;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.20613740734453906;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16162857548415013;  // std dev = 6,595, 174,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
%   | | | else return 0.16162857548414555;  // std dev = 10,025, 402,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=201 */
%   | | else if ( location(A, E) )
%   | | | then return 0.16162857548414783;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | | else return 0.16162857548414863;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.1616285754841447;  // std dev = 0,500, 1.454,000 (wgt'ed) examples reached here.  /* #neg=727 #pos=727 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.1616285754841476;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.16162857548414689;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.16162857548414636;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.12455597792082466;  // std dev = 0,500, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.12455597792082153;  // std dev = 8,485, 288,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=144 */
%   | | | else return 0.1245559779208206;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.124555977920821;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.12455597792081918;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.12455597792082129;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.1245559779208241;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.12455597792082752;  // std dev = 0,500, 622,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=311 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730385;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | | else return 0.09492800936730687;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.09492800936730705;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730765;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.0949280093673086;  // std dev = 8,485, 288,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=144 */
%   | | | else return 0.09492800936730712;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730829;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.09492800936730648;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else return 0.0949280093673152;  // std dev = 0,500, 1.004,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=502 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056221;  // std dev = 0,500, 576,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=288 */
%   | | else return 0.07186088850055913;  // std dev = 0,500, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850056173;  // std dev = 0,500, 366,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=183 */
%   | | else return 0.07186088850055944;  // std dev = 0,500, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.07186088850056221;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.07186088850055962;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07186088850055827;  // std dev = 7,416, 220,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=110 */
%   | | | else return 0.07186088850055686;  // std dev = 10,025, 402,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=201 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759550775;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | | else return 0.054183073759548485;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.054183073759549616;  // std dev = 0,500, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | else if ( interaction(E, C) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.05418307375955125;  // std dev = 12,083, 584,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=292 */
%   | | | else return 0.054183073759553446;  // std dev = 13,620, 742,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=371 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.054183073759553;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.054183073759551316;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, H) )
%   | then return 0.05418307375954884;  // std dev = 0,500, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( enzyme(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.040760253233055856;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.04076025323305681;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.04076025323305602;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | | else return 0.04076025323305884;  // std dev = 10,747, 462,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=231 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.040760253233056744;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | | else return 0.040760253233057986;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.040760253233057646;  // std dev = 6,364, 162,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.040760253233056244;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else return 0.040760253233057445;  // std dev = 0,500, 1.004,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=502 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 57.649 seconds
Total inference time: 2.795 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 1, Type: transfer, Time: 07:20:30
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 3.126, 'Learning time': 38.404}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.795, 'Mapping results': {'Total time': 1.9916298389434814, 'Possible mappings': 28, 'Finding best mapping': 0.0025594234466552734, 'Knowledge compiling time': 0.04744148254394531, 'Generating paths time': 1.9076197147369385, 'Generating mappings time': 0.03400468826293945}, 'Learning time': 96.053}


Start learning from scratch in target domain

Target train facts examples: 3475
Target train pos examples: 1129
Target train neg examples: 1129

Target test facts examples: 7330
Target test pos examples: 3450
Target test neg examples: 3450

WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, D) )
%   | | | then return 0.35814893509951135;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.3581489350995134;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.3581489350995091;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | | else return 0.35814893509950857;  // std dev = 8,485, 288,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=144 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.3581489350995111;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.3581489350995086;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.358148935099509;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else return 0.3581489350995075;  // std dev = 0,500, 1.004,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=502 */
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.30874113578563517;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.30874113578563506;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.3087411357856347;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.3087411357856365;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else return 0.30874113578563517;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( location(A, G) )
%   | then return 0.30874113578566353;  // std dev = 0,500, 1.954,000 (wgt'ed) examples reached here.  /* #neg=977 #pos=977 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.30874113578563556;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.30874113578563556;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3087411357856372;  // std dev = 5,523, 122,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( complex(A, D) )
%   | | then return 0.25641236875858564;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else return 0.25641236875858603;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0.25641236875857126;  // std dev = 0,500, 946,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=473 */
%   else if ( location(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.25641236875858664;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.2564123687585856;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.25641236875856893;  // std dev = 0,500, 1.030,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=515 */
%   | else if ( interaction(A, A) )
%   | | then return 0.2564123687585865;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.25641236875858636;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.25641236875858653;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.20613740734454022;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.20613740734453984;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.20613740734453911;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | else return 0.20613740734452723;  // std dev = 0,500, 1.954,000 (wgt'ed) examples reached here.  /* #neg=977 #pos=977 */
%   else if ( interaction(A, A) )
%   | then return 0.2061374073445399;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2061374073445413;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.20613740734454072;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.20613740734454034;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734454034;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.16162857548414677;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414689;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.16162857548414683;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.16162857548414614;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else if ( interaction(G, A) )
%   | | then if ( phenotype(G, C) )
%   | | | then return 0.1616285754841446;  // std dev = 10,464, 438,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=219 */
%   | | | else return 0.16162857548414467;  // std dev = 10,724, 460,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=230 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.16162857548414708;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.161628575484147;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   else return 0.1616285754841445;  // std dev = 0,500, 1.226,000 (wgt'ed) examples reached here.  /* #neg=613 #pos=613 */
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( complex(A, D) )
%   | | then return 0.12455597792081982;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( location(A, E) )
%   | | | then return 0.12455597792082007;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1245559779208203;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1245559779208196;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.12455597792081985;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.12455597792081931;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.12455597792082057;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(A, I) )
%   | then return 0.12455597792081495;  // std dev = 0,500, 1.080,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=540 */
%   | else return 0.12455597792082447;  // std dev = 0,500, 1.004,000 (wgt'ed) examples reached here.  /* #neg=502 #pos=502 */
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.09492800936730698;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.09492800936730704;  // std dev = 0,500, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | else return 0.09492800936731148;  // std dev = 0,500, 946,000 (wgt'ed) examples reached here.  /* #neg=473 #pos=473 */
%   else if ( interaction(A, A) )
%   | then if ( location(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.09492800936730728;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.09492800936730653;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.09492800936730728;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.09492800936730822;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.09492800936730963;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.09492800936730758;  // std dev = 0,500, 832,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=416 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then return 0.07186088850055546;  // std dev = 0,500, 2.124,000 (wgt'ed) examples reached here.  /* #neg=1.062 #pos=1.062 */
%   else if ( complex(A, D) )
%   | then if ( proteinclass(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.07186088850055887;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07186088850056083;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, G) )
%   | | | then return 0.07186088850056006;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.0718608885005605;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.07186088850055916;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055888;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( location(A, J) )
%   | | | then return 0.07186088850056102;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.07186088850055976;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( proteinclass(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.054183073759551205;  // std dev = 6,782, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   | | | else return 0.05418307375954905;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | else return 0.05418307375955232;  // std dev = 0,500, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   | else if ( complex(A, G) )
%   | | then return 0.05418307375954862;  // std dev = 0,500, 430,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=215 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.05418307375954977;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.05418307375955189;  // std dev = 16,233, 1.054,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=527 */
%   else if ( proteinclass(A, H) )
%   | then if ( interaction(A, A) )
%   | | then return 0.05418307375955056;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.054183073759551684;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0.05418307375955131;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.04076025323305654;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0407602532330571;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.04076025323305695;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04076025323305726;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( complex(A, G) )
%   | | then if ( proteinclass(A, H) )
%   | | | then return 0.0407602532330564;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.040760253233056924;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.04076025323305651;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04076025323305685;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   else return 0.04076025323304936;  // std dev = 0,500, 2.084,000 (wgt'ed) examples reached here.  /* #neg=1.042 #pos=1.042 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 60.862 seconds
Total inference time: 2.622 seconds
AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 1, Type: scratch, Time: 07:21:34
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.622, 'Learning time': 60.862}


Starting fold 2

Target predicate: function 

Mapping Results
   Knowledge compiling time   = 0.0567469596862793
   Generating paths time   = 2.4327120780944824
   Generating mappings time   = 0.041954755783081055
   Possible mappings   = 28
   Finding best mapping   = 0.0034058094024658203
   Total time   = 2.534825563430786


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: function 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;function(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;function(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;function(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;function(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;function(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;function(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;function(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;function(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;function(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;function(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995079;  // std dev = 11,446, 524,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=262 */
%   | | | else return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.35814893509950957;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | else return 0.3581489350995074;  // std dev = 18,439, 1.360,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=680 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3581489350995112;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856266;  // std dev = 14,457, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563755;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0.3087411357856376;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.30874113578563506;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3087411357856348;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856378;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.30874113578563617;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.308741135785627;  // std dev = 13,454, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 12,530, 628,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=314 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.25641236875858764;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.256412368758589;  // std dev = 6,671, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585888;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | | else return 0.2564123687585767;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=429 */
%   | | else return 0.2564123687585882;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.25641236875858686;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453329;  // std dev = 11,937, 570,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=285 */
%   | | else return 0.20613740734454206;  // std dev = 8,155, 266,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=133 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445387;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | | else return 0.2061374073445534;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=429 */
%   | | else return 0.20613740734454125;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445387;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.2061374073445392;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.2061374073445397;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414528;  // std dev = 12,530, 628,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=314 */
%   | | else return 0.16162857548414966;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414666;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.1616285754841445;  // std dev = 17,450, 1.218,000 (wgt'ed) examples reached here.  /* #neg=609 #pos=609 */
%   | | else return 0.16162857548414816;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.161628575484147;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.16162857548414614;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.16162857548414683;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082466;  // std dev = 11,247, 506,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=253 */
%   | | | else return 0.1245559779208224;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | else return 0.12455597792082068;  // std dev = 8,155, 266,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=133 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082067;  // std dev = 9,899, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | else return 0.12455597792082061;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082068;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.12455597792082074;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.124555977920829;  // std dev = 13,454, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936731137;  // std dev = 11,446, 524,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=262 */
%   | | | else return 0.0949280093673083;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.09492800936730814;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730798;  // std dev = 9,899, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | else return 0.09492800936730796;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730811;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.09492800936730765;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.09492800936730104;  // std dev = 13,454, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056456;  // std dev = 12,042, 580,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=290 */
%   | | else return 0.07186088850055897;  // std dev = 8,000, 256,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=128 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055572;  // std dev = 9,899, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055927;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.07186088850055808;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.0718608885005586;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.07186088850055931;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.07186088850056516;  // std dev = 13,454, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759550046;  // std dev = 11,446, 524,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=262 */
%   | | | else return 0.05418307375954974;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.054183073759548464;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | else if ( interaction(E, C) )
%   | | then return 0.054183073759547735;  // std dev = 17,847, 1.274,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=637 */
%   | | else return 0.05418307375954942;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759549595;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return 0.054183073759549186;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else return 0.054183073759548894;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233059554;  // std dev = 14,457, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305641;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0.04076025323305696;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.040760253233056605;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.04076025323305599;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305842;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.04076025323305727;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.04076025323305956;  // std dev = 13,454, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 71.581 seconds
Total inference time: 3.185 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [3.873, 30, 30], 'true,true,true,true': [11.446, 262, 262], 'true,true,false,false': [6.671, 89, 89], 'true,false': [18.439, 680, 680], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.24, 21, 21], 'true,true,false,true': [2.739, 15, 15], 'true,true,true,false': [5.099, 52, 52]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [14.457, 418, 418], 'true,false,false,false': [1.871, 7, 7], 'false,true,true,true': [7.842, 123, 123], 'true,false,false,true': [4.243, 36, 36], 'true,false,true,false': [7.176, 103, 103], 'true,false,true,true': [6.819, 93, 93], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'false,true,false': [13.454, 362, 362]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [5.05, 51, 51], 'true,false,true,true': [10.198, 208, 208], 'true,true,true': [12.53, 314, 314], 'true,true,false,false': [6.671, 89, 89], 'true,false,true,false': [14.646, 429, 429], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'true,true,false,true': [2.739, 15, 15], 'true,false,false': [4.637, 43, 43]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [10.198, 208, 208], 'true,true,false': [8.155, 133, 133], 'false,true,true,true': [4.359, 38, 38], 'true,false,false': [4.637, 43, 43], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.55, 13, 13], 'true,false,true,false': [14.646, 429, 429], 'true,true,true': [11.937, 285, 285]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [3.742, 28, 28], 'true,true,false': [7.211, 104, 104], 'false,true,true,true': [4.359, 38, 38], 'true,false,false': [4.637, 43, 43], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.55, 13, 13], 'true,false,true,false': [17.45, 609, 609], 'true,true,true': [12.53, 314, 314]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [8.155, 133, 133], 'true,true,true,true': [11.247, 253, 253], 'true,false,false': [4.637, 43, 43], 'false,true,false': [13.454, 362, 362], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'true,false,true': [9.899, 196, 196], 'false,true,true,true': [7.842, 123, 123], 'true,true,true,false': [4.0, 32, 32]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [7.211, 104, 104], 'true,true,true,true': [11.446, 262, 262], 'true,false,false': [4.637, 43, 43], 'false,true,false': [13.454, 362, 362], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'true,false,true': [9.899, 196, 196], 'false,true,true,true': [7.842, 123, 123], 'true,true,true,false': [5.099, 52, 52]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.871, 7, 7], 'true,true,false': [8.0, 128, 128], 'true,false,false,true': [4.243, 36, 36], 'false,true,true,false': [2.646, 14, 14], 'false,true,false': [13.454, 362, 362], 'false,false': [0.0, 0, 0], 'true,true,true': [12.042, 290, 290], 'true,false,true': [9.899, 196, 196], 'false,true,true,true': [7.842, 123, 123]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [7.211, 104, 104], 'true,true,true,true': [11.446, 262, 262], 'true,false,false': [4.637, 43, 43], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.24, 21, 21], 'true,false,true': [17.847, 637, 637], 'false,true,true,true': [3.873, 30, 30], 'true,true,true,false': [5.099, 52, 52]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [14.457, 418, 418], 'true,false,false,false': [1.871, 7, 7], 'false,true,true,true': [7.842, 123, 123], 'true,false,false,true': [4.243, 36, 36], 'true,false,true,false': [7.176, 103, 103], 'true,false,true,true': [6.819, 93, 93], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.646, 14, 14], 'false,true,false': [13.454, 362, 362]}]]
[{'': [0.2500000000000243, 0.2499999999999998], 'false,true,true': [0.2500000000000015, 0.25], 'true,true': [0.2500000000000023, 0.25000000000000294], 'true,true,false': [0.24999999999999953, 0.2500000000000022], 'false,true': [0.25000000000000006, 0.25], 'false': [0.2499999999999998, nan], 'true,true,true': [0.2500000000000029, 0.25], 'true': [0.24999999999998987, 0.2499999999999987]}, {'': [0.25000000000000333, 0.2500000000000086], 'false,true,true': [0.2500000000000018, 0.2499999999999998], 'true,false,true': [0.24999999999999906, 0.2500000000000021], 'true,false': [0.250000000000005, 0.24999999999999947], 'false,true': [0.25000000000000155, 0.2500000000000103], 'false': [0.2500000000000086, nan], 'true,false,false': [0.2499999999999996, 0.2500000000000001], 'true': [0.25000000000000966, 0.25000000000000744]}, {'': [0.25000000000002703, 0.25000000000000033], 'true,true': [0.2500000000000055, 0.24999999999999958], 'true,true,false': [0.25000000000000044, 0.25000000000000067], 'true,false,true': [0.24999999999999817, 0.2500000000000048], 'true,false': [0.25000000000000017, 0.24999999999999964], 'false,true': [0.2500000000000007, 0.25], 'false': [0.25000000000000033, nan], 'true': [0.2500000000000078, 0.24999999999999992]}, {'': [0.2499999999999854, 0.2500000000000001], 'false,true,true': [0.2500000000000007, 0.2500000000000001], 'true,true': [0.24999999999999806, 0.25000000000000067], 'true,false,true': [0.250000000000002, 0.24999999999999278], 'true,false': [0.2500000000000038, 0.2499999999999998], 'false,true': [0.2500000000000004, 0.25], 'false': [0.2500000000000001, nan], 'true': [0.24999999999999412, 0.2500000000000031]}, {'': [0.25000000000000727, 0.24999999999999947], 'true,true': [0.2500000000000026, 0.2499999999999998], 'false,true,true': [0.24999999999999964, 0.2500000000000001], 'true,false,true': [0.24999999999999972, 0.24999999999999817], 'true,false': [0.24999999999999947, 0.25000000000000033], 'false,true': [0.24999999999999936, 0.24999999999999994], 'false': [0.24999999999999947, nan], 'true': [0.25000000000000083, 0.24999999999999986]}, {'': [0.2500000000000088, 0.249999999999996], 'false,true,true': [0.24999999999999828, 0.24999999999999983], 'true,true': [0.24999999999999856, 0.24999999999999972], 'true,false': [0.25000000000000155, 0.25000000000000033], 'false,true': [0.24999999999999953, 0.249999999999994], 'false': [0.249999999999996, nan], 'true,true,true': [0.2500000000000019, 0.25000000000000017], 'true': [0.24999999999999398, 0.2500000000000026]}, {'': [0.25000000000000727, 0.24999999999999875], 'false,true,true': [0.2500000000000016, 0.25000000000000017], 'true,true': [0.24999999999999756, 0.2500000000000012], 'true,false': [0.24999999999999725, 0.24999999999999997], 'false,true': [0.25000000000000017, 0.2499999999999987], 'false': [0.24999999999999875, nan], 'true,true,true': [0.24999999999999842, 0.2500000000000003], 'true': [0.24999999999999717, 0.24999999999999759]}, {'': [0.24999999999999922, 0.2500000000000008], 'false,true,true': [0.2500000000000014, 0.24999999999999992], 'true,true': [0.2500000000000023, 0.25000000000000094], 'true,false': [0.250000000000001, 0.24999999999999975], 'false,true': [0.25000000000000133, 0.25000000000000233], 'false': [0.2500000000000008, nan], 'true,false,false': [0.24999999999999986, 0.24999999999999983], 'true': [0.2500000000000016, 0.25000000000000155]}, {'': [0.25000000000000383, 0.2499999999999993], 'true,true': [0.250000000000002, 0.25000000000000083], 'false,true,true': [0.2500000000000002, 0.2500000000000001], 'true,false': [0.25000000000000633, 0.24999999999999958], 'false,true': [0.24999999999999933, 0.25], 'false': [0.2499999999999993, nan], 'true,true,true': [0.24999999999999908, 0.24999999999999953], 'true': [0.2500000000000055, 0.2500000000000064]}, {'': [0.2499999999999923, 0.24999999999999498], 'false,true,true': [0.25000000000000033, 0.2500000000000001], 'true,false,true': [0.2500000000000002, 0.2500000000000002], 'true,false': [0.25000000000000017, 0.25000000000000033], 'false,true': [0.25000000000000033, 0.24999999999999725], 'false': [0.24999999999999498, nan], 'true,false,false': [0.25000000000000033, 0.25], 'true': [0.24999999999999292, 0.25000000000000033]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;function(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;function(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;function(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;function(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;function(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;function(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;function(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;function(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;function(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;function(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3581489350995076;  // std dev = 0,500, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(A, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.35814893509951107;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3581489350995085;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | else return 0.3581489350995075;  // std dev = 0,500, 998,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=499 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3581489350995112;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return 0.3581489350995117;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.30874113578563755;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | | else if ( complex(A, D) )
%   | | | then return 0.30874113578563683;  // std dev = 9,028, 326,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=163 */
%   | | | else return 0.30874113578563595;  // std dev = 9,138, 334,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=167 */
%   | else if ( interaction(C, E) )
%   | | then return 0.3087411357856307;  // std dev = 0,500, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | else return 0.30874113578563556;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.30874113578563783;  // std dev = 0,500, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | | else return 0.3087411357856284;  // std dev = 11,023, 486,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2564123687585884;  // std dev = 6,633, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | | | else return 0.2564123687585888;  // std dev = 10,630, 452,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=226 */
%   | | else return 0.2564123687585885;  // std dev = 0,500, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | else if ( interaction(E, C) )
%   | | then return 0.25641236875856815;  // std dev = 0,500, 1.274,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=637 */
%   | | else return 0.2564123687585887;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then return 0.25641236875858875;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.20613740734453725;  // std dev = 0,500, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.20613740734454547;  // std dev = 10,198, 416,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | | else return 0.20613740734455369;  // std dev = 14,646, 858,000 (wgt'ed) examples reached here.  /* #neg=429 #pos=429 */
%   | | else return 0.2061374073445417;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.20613740734454086;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.20613740734454034;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2061374073445396;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841445;  // std dev = 0,500, 628,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=314 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.16162857548414683;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.16162857548414775;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.16162857548414464;  // std dev = 0,500, 1.360,000 (wgt'ed) examples reached here.  /* #neg=680 #pos=680 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414764;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.16162857548414694;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.16162857548414655;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841465;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.12455597792082203;  // std dev = 0,500, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.12455597792082256;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | | else return 0.12455597792082052;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.12455597792082267;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.12455597792081977;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.12455597792082149;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.1245559779208235;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.12455597792082888;  // std dev = 0,500, 724,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=362 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730501;  // std dev = 11,446, 524,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=262 */
%   | | | else return 0.0949280093673081;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.09492800936730762;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.09492800936730736;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09492800936730864;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | | else return 0.09492800936730747;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730916;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.09492800936730686;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else return 0.09492800936731367;  // std dev = 0,500, 998,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=499 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056395;  // std dev = 0,500, 580,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=290 */
%   | | else return 0.0718608885005583;  // std dev = 0,500, 256,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=128 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.07186088850056233;  // std dev = 8,515, 290,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   | | | else return 0.07186088850055898;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else return 0.07186088850056015;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.07186088850056105;  // std dev = 0,500, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07186088850055737;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | | else return 0.07186088850055619;  // std dev = 11,023, 486,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954846;  // std dev = 11,446, 524,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=262 */
%   | | | else return 0.054183073759549415;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.05418307375954922;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.05418307375954963;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759550206;  // std dev = 9,220, 340,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=170 */
%   | | | else return 0.05418307375955454;  // std dev = 15,281, 934,000 (wgt'ed) examples reached here.  /* #neg=467 #pos=467 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0541830737595484;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05418307375954788;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   else return 0.054183073759549526;  // std dev = 0,500, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233058694;  // std dev = 0,500, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305718;  // std dev = 6,819, 186,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=93 */
%   | | | else return 0.04076025323305797;  // std dev = 7,176, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | else return 0.04076025323305723;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.04076025323305467;  // std dev = 7,842, 246,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=123 */
%   | | | else return 0.04076025323305559;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.04076025323305291;  // std dev = 7,714, 238,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=119 */
%   | | | else return 0.04076025323305742;  // std dev = 11,023, 486,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 71.43299999999999 seconds
Total inference time: 3.041 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 2, Type: transfer, Time: 07:24:06
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 3.185, 'Learning time': 71.581}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 3.041, 'Mapping results': {'Total time': 2.534825563430786, 'Possible mappings': 28, 'Finding best mapping': 0.0034058094024658203, 'Knowledge compiling time': 0.0567469596862793, 'Generating paths time': 2.4327120780944824, 'Generating mappings time': 0.041954755783081055}, 'Learning time': 143.014}


Start learning from scratch in target domain

Target train facts examples: 2804
Target train pos examples: 1156
Target train neg examples: 1156

Target test facts examples: 8001
Target test pos examples: 3423
Target test neg examples: 3423

WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( proteinclass(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.35814893509951107;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, H) )
%   | | then return 0.35814893509950835;  // std dev = 0,500, 330,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=165 */
%   | | else return 0.3581489350995076;  // std dev = 0,500, 808,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=404 */
%   | else return 0.3581489350995075;  // std dev = 0,500, 998,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=499 */
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( enzyme(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.3087411357856349;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3087411357856348;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3087411357856347;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else if ( interaction(H, A) )
%   | then return 0.3087411357856641;  // std dev = 0,500, 2.020,000 (wgt'ed) examples reached here.  /* #neg=1.010 #pos=1.010 */
%   | else if ( location(A, I) )
%   | | then return 0.30874113578563706;  // std dev = 0,500, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(C, D) )
%   | | | then return 0.2564123687585858;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.2564123687585871;  // std dev = 5,050, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.2564123687585819;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.25641236875858775;  // std dev = 11,203, 502,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=251 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2564123687585819;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.2564123687585871;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.2564123687585822;  // std dev = 8,485, 288,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=144 */
%   | | | else return 0.2564123687585827;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else return 0.25641236875856976;  // std dev = 0,500, 998,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=499 */
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( location(A, C) )
%   then return 0.20613740734452193;  // std dev = 0,500, 2.118,000 (wgt'ed) examples reached here.  /* #neg=1.059 #pos=1.059 */
%   else if ( proteinclass(A, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2061374073445356;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445356;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2061374073445384;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.2061374073445384;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.20613740734453553;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453817;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20613740734453823;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2061374073445374;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.16162857548415088;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.16162857548415127;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.16162857548415072;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.16162857548414655;  // std dev = 7,874, 248,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=124 */
%   | | | else return 0.16162857548415155;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.16162857548414453;  // std dev = 11,832, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | | | else return 0.16162857548414772;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   else if ( interaction(I, A) )
%   | then return 0.16162857548414455;  // std dev = 0,500, 1.056,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=528 */
%   | else return 0.16162857548415138;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.12455597792081496;  // std dev = 0,500, 836,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=418 */
%   | else if ( interaction(C, C) )
%   | | then return 0.12455597792082072;  // std dev = 0,500, 234,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=117 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.12455597792081921;  // std dev = 16,125, 1.040,000 (wgt'ed) examples reached here.  /* #neg=520 #pos=520 */
%   | | | else return 0.12455597792082108;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( location(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.12455597792082483;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.12455597792082396;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.12455597792082362;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792082423;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.12455597792082095;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( complex(A, D) )
%   | | then return 0.09492800936731173;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.09492800936731305;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.09492800936731165;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.09492800936731158;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.094928009367313;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09492800936731316;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, A) )
%   | | then return 0.094928009367302;  // std dev = 0,500, 660,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=330 */
%   | | else return 0.09492800936730729;  // std dev = 0,500, 478,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=239 */
%   | else return 0.09492800936731598;  // std dev = 0,500, 998,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=499 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.07186088850056267;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.07186088850055973;  // std dev = 6,285, 158,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return 0.07186088850055788;  // std dev = 9,354, 350,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=175 */
%   | else return 0.07186088850056509;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.07186088850056269;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.0718608885005628;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.07186088850056167;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07186088850056199;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.07186088850055937;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, C) )
%   | | then return 0.054183073759550435;  // std dev = 0,500, 334,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=167 */
%   | | else return 0.05418307375954842;  // std dev = 0,500, 350,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=175 */
%   | else if ( interaction(A, C) )
%   | | then return 0.054183073759546826;  // std dev = 0,500, 386,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=193 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.05418307375954952;  // std dev = 16,125, 1.040,000 (wgt'ed) examples reached here.  /* #neg=520 #pos=520 */
%   | | | else return 0.054183073759546986;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( proteinclass(A, E) )
%   | then return 0.054183073759551954;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else if ( complex(A, F) )
%   | | then return 0.05418307375955219;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( location(A, G) )
%   | | | then return 0.05418307375955225;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.05418307375954991;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, C) )
%   | | then if ( enzyme(A, D) )
%   | | | then return 0.04076025323305744;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.0407602532330594;  // std dev = 8,367, 280,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=140 */
%   | | else return 0.04076025323305832;  // std dev = 0,500, 350,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=175 */
%   | else return 0.040760253233047467;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   else if ( location(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.04076025323305788;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.04076025323305919;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( location(H, E), interaction(A, H) )
%   | | | then return 0.04076025323305801;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.040760253233058236;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.04076025323305667;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 92.154 seconds
Total inference time: 2.103 seconds
AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 2, Type: scratch, Time: 07:25:41
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.103, 'Learning time': 92.154}


Starting fold 3

Target predicate: function 

Mapping Results
   Knowledge compiling time   = 0.10464739799499512
   Generating paths time   = 2.4043445587158203
   Generating mappings time   = 0.03305554389953613
   Possible mappings   = 28
   Finding best mapping   = 0.0025784969329833984
   Total time   = 2.544631242752075


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: function 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;function(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;function(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;function(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;function(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;function(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;function(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;function(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;function(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;function(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;function(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995086;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951345;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | else return 0.3581489350995074;  // std dev = 19,053, 1.452,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=726 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.358148935099509;  // std dev = 7,450, 222,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=111 */
%   | | | else return 0.358148935099509;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | else return 0.3581489350995112;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.308741135785629;  // std dev = 10,320, 426,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=213 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856291;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   | | | else return 0.3087411357856314;  // std dev = 9,798, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.30874113578563767;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.3087411357856347;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.30874113578563767;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.30874113578563567;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.30874113578562723;  // std dev = 12,961, 672,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585876;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858875;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.25641236875858886;  // std dev = 9,899, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | | else return 0.2564123687585874;  // std dev = 13,191, 696,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=348 */
%   | | else return 0.256412368758589;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.256412368758589;  // std dev = 10,488, 440,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=220 */
%   | | else return 0.2564123687585862;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454206;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else return 0.20613740734454153;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445401;  // std dev = 9,899, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | | else return 0.20613740734454464;  // std dev = 13,191, 696,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=348 */
%   | | else return 0.206137407344542;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445419;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | | else return 0.20613740734454192;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.20613740734453967;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.1616285754841448;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else return 0.1616285754841461;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414836;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414458;  // std dev = 16,401, 1.076,000 (wgt'ed) examples reached here.  /* #neg=538 #pos=538 */
%   | | else return 0.16162857548414575;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414505;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | | else return 0.16162857548414494;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else return 0.16162857548414758;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082079;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.12455597792082;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.12455597792082064;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792082257;  // std dev = 14,160, 802,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=401 */
%   | | else return 0.12455597792082057;  // std dev = 8,031, 258,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=129 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082067;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.12455597792082054;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.12455597792082818;  // std dev = 12,961, 672,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730816;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.09492800936730728;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.09492800936730778;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730138;  // std dev = 14,160, 802,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=401 */
%   | | else return 0.09492800936730772;  // std dev = 8,031, 258,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=129 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730796;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.0949280093673075;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.0949280093673018;  // std dev = 12,961, 672,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056098;  // std dev = 8,307, 276,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=138 */
%   | | else return 0.071860888500559;  // std dev = 6,124, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850056539;  // std dev = 14,160, 802,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=401 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055913;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.071860888500558;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055916;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.07186088850055894;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.0718608885005649;  // std dev = 12,961, 672,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759550775;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.05418307375954967;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.05418307375954893;  // std dev = 5,916, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( interaction(E, C) )
%   | | then return 0.0541830737595508;  // std dev = 16,492, 1.088,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=544 */
%   | | else return 0.05418307375954725;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375955161;  // std dev = 7,450, 222,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=111 */
%   | | | else return 0.054183073759547784;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | else return 0.054183073759549595;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305713;  // std dev = 10,320, 426,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=213 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305788;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   | | | else return 0.0407602532330588;  // std dev = 9,798, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305465;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.04076025323305634;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.040760253233054565;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.040760253233056216;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.0407602532330588;  // std dev = 12,961, 672,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=336 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 20.597 seconds
Total inference time: 3.177 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [7.45, 111, 111], 'true,true,true,true': [8.276, 137, 137], 'true,true,false,false': [5.831, 68, 68], 'true,false': [19.053, 726, 726], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'false,true,true,false': [7.382, 109, 109], 'true,true,false,true': [1.0, 2, 2], 'true,true,true,false': [1.732, 6, 6]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [10.32, 213, 213], 'true,false,false,false': [3.808, 29, 29], 'false,true,true,true': [7.246, 105, 105], 'true,false,false,true': [7.071, 100, 100], 'true,false,true,false': [9.798, 192, 192], 'true,false,true,true': [10.223, 209, 209], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'false,true,false': [12.961, 336, 336]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [10.488, 220, 220], 'true,false,true,true': [9.899, 196, 196], 'true,true,true': [8.456, 143, 143], 'true,true,false,false': [5.831, 68, 68], 'true,false,true,false': [13.191, 348, 348], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'true,true,false,true': [1.0, 2, 2], 'true,false,false': [9.539, 182, 182]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [9.899, 196, 196], 'true,true,false': [5.916, 70, 70], 'false,true,true,true': [7.141, 102, 102], 'true,false,false': [9.539, 182, 182], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'false,true,true,false': [7.681, 118, 118], 'true,false,true,false': [13.191, 348, 348], 'true,true,true': [8.456, 143, 143]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [1.732, 6, 6], 'true,true,false': [5.916, 70, 70], 'false,true,true,true': [7.141, 102, 102], 'true,false,false': [9.539, 182, 182], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'false,true,true,false': [7.681, 118, 118], 'true,false,true,false': [16.401, 538, 538], 'true,true,true': [8.456, 143, 143]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [5.916, 70, 70], 'true,true,true,true': [8.276, 137, 137], 'true,false,false': [8.031, 129, 129], 'false,true,false': [12.961, 336, 336], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'true,false,true': [14.16, 401, 401], 'false,true,true,true': [7.246, 105, 105], 'true,true,true,false': [1.732, 6, 6]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [5.916, 70, 70], 'true,true,true,true': [8.276, 137, 137], 'true,false,false': [8.031, 129, 129], 'false,true,false': [12.961, 336, 336], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'true,false,true': [14.16, 401, 401], 'false,true,true,true': [7.246, 105, 105], 'true,true,true,false': [1.732, 6, 6]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [3.808, 29, 29], 'true,true,false': [6.124, 75, 75], 'true,false,false,true': [7.071, 100, 100], 'false,true,true,false': [1.414, 4, 4], 'false,true,false': [12.961, 336, 336], 'false,false': [0.0, 0, 0], 'true,true,true': [8.307, 138, 138], 'true,false,true': [14.16, 401, 401], 'false,true,true,true': [7.246, 105, 105]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [5.916, 70, 70], 'true,true,true,true': [8.276, 137, 137], 'true,false,false': [9.539, 182, 182], 'false,true,false': [3.808, 29, 29], 'false,false': [0.0, 0, 0], 'false,true,true,false': [7.382, 109, 109], 'true,false,true': [16.492, 544, 544], 'false,true,true,true': [7.45, 111, 111], 'true,true,true,false': [1.732, 6, 6]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [10.32, 213, 213], 'true,false,false,false': [3.808, 29, 29], 'false,true,true,true': [7.246, 105, 105], 'true,false,false,true': [7.071, 100, 100], 'true,false,true,false': [9.798, 192, 192], 'true,false,true,true': [10.223, 209, 209], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'false,true,false': [12.961, 336, 336]}]]
[{'': [0.2500000000000237, 0.250000000000003], 'true,true': [0.250000000000004, 0.24999999999999956], 'true,true,false': [0.25, 0.24999999999999958], 'false,true,true': [0.2500000000000032, 0.2500000000000031], 'false,true': [0.2500000000000035, 0.25000000000000144], 'false': [0.250000000000003, nan], 'true,true,true': [0.2500000000000039, 0.25], 'true': [0.2500000000000036, 0.25000000000002237]}, {'': [0.2499999999999912, 0.2500000000000095], 'false,true,true': [0.2500000000000022, 0.25000000000000017], 'true,false,true': [0.25000000000000633, 0.25000000000000433], 'true,false': [0.2500000000000102, 0.25000000000000155], 'false,true': [0.2500000000000021, 0.25000000000000994], 'false': [0.2500000000000095, nan], 'true,false,false': [0.25000000000000233, 0.25000000000000133], 'true': [0.25000000000000605, 0.250000000000008]}, {'': [0.2500000000000274, 0.2500000000000042], 'true,true': [0.2499999999999966, 0.25000000000000006], 'true,true,false': [0.25000000000000006, 0.2500000000000001], 'true,false,true': [0.24999999999999636, 0.2500000000000068], 'true,false': [0.2500000000000008, 0.24999999999999656], 'false,true': [0.25000000000000244, 0.2499999999999994], 'false': [0.2500000000000042, nan], 'true': [0.25000000000000006, 0.24999999999999964]}, {'': [0.2499999999999961, 0.24999999999999814], 'false,true,true': [0.2500000000000002, 0.25], 'true,true': [0.2500000000000003, 0.25000000000000067], 'true,false,true': [0.2500000000000015, 0.24999999999999217], 'true,false': [0.2500000000000028, 0.2500000000000016], 'false,true': [0.2500000000000026, 0.25000000000000044], 'false': [0.24999999999999814, nan], 'true': [0.25000000000000255, 0.25000000000000094]}, {'': [0.24999999999999598, 0.2499999999999999], 'false,true,true': [0.25000000000000105, 0.25000000000000117], 'true,true': [0.2500000000000013, 0.2500000000000004], 'true,false,true': [0.24999999999999992, 0.24999999999999906], 'true,false': [0.24999999999999858, 0.25000000000000155], 'false,true': [0.2500000000000001, 0.2499999999999996], 'false': [0.2499999999999999, nan], 'true': [0.2500000000000002, 0.24999999999999725]}, {'': [0.2500000000000089, 0.24999999999999406], 'true,true': [0.25000000000000017, 0.2499999999999992], 'false,true,true': [0.24999999999999814, 0.24999999999999997], 'true,false': [0.24999999999999445, 0.2500000000000007], 'false,true': [0.2499999999999981, 0.2499999999999946], 'false': [0.24999999999999406, nan], 'true,true,true': [0.24999999999999975, 0.24999999999999992], 'true': [0.25000000000000194, 0.24999999999999983]}, {'': [0.25000000000001066, 0.24999999999999867], 'false,true,true': [0.250000000000001, 0.25000000000000006], 'true,true': [0.24999999999999817, 0.2500000000000001], 'true,false': [0.2499999999999986, 0.2500000000000004], 'false,true': [0.2500000000000009, 0.2499999999999984], 'false': [0.24999999999999867, nan], 'true,true,true': [0.2499999999999982, 0.24999999999999992], 'true': [0.24999999999999759, 0.2500000000000008]}, {'': [0.24999999999999897, 0.2500000000000014], 'false,true,true': [0.25000000000000133, 0.24999999999999997], 'true,true': [0.24999999999999944, 0.25000000000000044], 'true,false': [0.2500000000000023, 0.25000000000000067], 'false,true': [0.2500000000000013, 0.2500000000000022], 'false': [0.2500000000000014, nan], 'true,false,false': [0.25000000000000067, 0.24999999999999964], 'true': [0.250000000000002, 0.25000000000000056]}, {'': [0.2500000000000052, 0.24999999999999872], 'false,true,true': [0.25000000000000105, 0.2500000000000014], 'true,true': [0.2500000000000005, 0.24999999999999986], 'true,false': [0.2500000000000055, 0.24999999999999806], 'false,true': [0.24999999999999867, 0.2500000000000002], 'false': [0.24999999999999872, nan], 'true,true,true': [0.2500000000000008, 0.25000000000000006], 'true': [0.24999999999999803, 0.25000000000000633]}, {'': [0.24999999999999203, 0.25000000000000167], 'false,true,true': [0.2500000000000001, 0.25], 'true,false,true': [0.2500000000000002, 0.2500000000000002], 'true,false': [0.2499999999999931, 0.24999999999999978], 'false,true': [0.2500000000000002, 0.2500000000000001], 'false': [0.25000000000000167, nan], 'true,false,false': [0.24999999999999964, 0.24999999999999997], 'true': [0.2500000000000003, 0.24999999999999406]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;function(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;function(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;function(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;function(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;function(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;function(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;function(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;function(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;function(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;function(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.3581489350995086;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.35814893509951345;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else if ( interaction(A, E) )
%   | | then return 0.35814893509950785;  // std dev = 0,500, 562,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=281 */
%   | | else return 0.35814893509950757;  // std dev = 0,500, 890,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=445 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.358148935099509;  // std dev = 7,450, 222,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=111 */
%   | | | else return 0.358148935099509;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | | else return 0.3581489350995112;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.308741135785629;  // std dev = 0,500, 426,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=213 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856291;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   | | | else return 0.3087411357856314;  // std dev = 9,798, 384,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=192 */
%   | | else return 0.3087411357856377;  // std dev = 0,500, 258,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=129 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.30874113578563767;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.30874113578563567;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.30874113578563767;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | | else return 0.3087411357856286;  // std dev = 10,770, 464,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=232 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 0,500, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585873;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858875;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | else return 0.2564123687585673;  // std dev = 0,500, 1.452,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=726 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.2564123687585889;  // std dev = 5,431, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.25641236875858897;  // std dev = 8,972, 322,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=161 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.25641236875858636;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.25641236875858575;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20613740734454203;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | | else return 0.20613740734454186;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.20613740734454034;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2061374073445412;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2061374073445444;  // std dev = 9,899, 392,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=196 */
%   | | | else return 0.20613740734455321;  // std dev = 13,191, 696,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=348 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.20613740734454544;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.2061374073445451;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   else return 0.2061374073445354;  // std dev = 0,500, 498,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=249 */
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.1616285754841464;  // std dev = 5,745, 132,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=66 */
%   | | | else return 0.16162857548414583;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | else return 0.1616285754841461;  // std dev = 0,500, 140,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | else return 0.16162857548414497;  // std dev = 0,500, 1.452,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=726 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548415013;  // std dev = 7,141, 204,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=102 */
%   | | | else return 0.16162857548414877;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.16162857548414733;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414772;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082079;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.12455597792082;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.12455597792082061;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | | else return 0.12455597792082057;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else if ( interaction(C, F) )
%   | | then return 0.12455597792083029;  // std dev = 0,500, 802,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=401 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.12455597792082149;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.12455597792082063;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else if ( interaction(H, A) )
%   | then return 0.12455597792082825;  // std dev = 0,500, 890,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=445 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730811;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.09492800936730723;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.09492800936730728;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09492800936730772;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09492800936730836;  // std dev = 9,513, 362,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=181 */
%   | | | else return 0.09492800936730741;  // std dev = 10,488, 440,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=220 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730889;  // std dev = 7,071, 200,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=100 */
%   | | | else return 0.09492800936730711;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   else return 0.09492800936731385;  // std dev = 0,500, 890,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=445 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055934;  // std dev = 6,557, 172,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=86 */
%   | | | else return 0.07186088850055938;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.07186088850055929;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else return 0.07186088850056428;  // std dev = 0,500, 1.060,000 (wgt'ed) examples reached here.  /* #neg=530 #pos=530 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.07186088850055936;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.0718608885005596;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.0718608885005591;  // std dev = 6,928, 192,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=96 */
%   | | | else return 0.07186088850055973;  // std dev = 10,954, 480,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759550775;  // std dev = 8,276, 274,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=137 */
%   | | | else return 0.054183073759549394;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.054183073759549456;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | | else return 0.054183073759549394;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954785;  // std dev = 10,320, 426,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=213 */
%   | | | else return 0.054183073759551934;  // std dev = 12,865, 662,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=331 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05418307375955087;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   | | | else return 0.05418307375955197;  // std dev = 7,550, 228,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=114 */
%   else return 0.05418307375954743;  // std dev = 0,500, 498,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=249 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.04076025323305639;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.04076025323305647;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.04076025323305562;  // std dev = 0,500, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | else return 0.04076025323305608;  // std dev = 0,500, 1.060,000 (wgt'ed) examples reached here.  /* #neg=530 #pos=530 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.04076025323305474;  // std dev = 7,246, 210,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=105 */
%   | | | else return 0.040760253233056515;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04076025323305531;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.04076025323305828;  // std dev = 11,811, 558,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=279 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 21.835 seconds
Total inference time: 3.296 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 3, Type: transfer, Time: 07:26:33
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 3.177, 'Learning time': 20.597}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 3.296, 'Mapping results': {'Total time': 2.544631242752075, 'Possible mappings': 28, 'Finding best mapping': 0.0025784969329833984, 'Knowledge compiling time': 0.10464739799499512, 'Generating paths time': 2.4043445587158203, 'Generating mappings time': 0.03305554389953613}, 'Learning time': 42.432}


Start learning from scratch in target domain

Target train facts examples: 2325
Target train pos examples: 1188
Target train neg examples: 1188

Target test facts examples: 8480
Target test pos examples: 3391
Target test neg examples: 3391

WILL Produced-Tree #1
% FOR function(A, B):
%   if ( complex(A, C) )
%   then return 0.3581489350995075;  // std dev = 0,500, 1.012,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=506 */
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3581489350995133;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | | else return 0.35814893509951107;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.3581489350995076;  // std dev = 14,071, 792,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=396 */
%   | | | else return 0.35814893509950885;  // std dev = 7,746, 240,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=120 */
%   | else if ( interaction(A, A) )
%   | | then if ( proteinclass(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.35814893509951334;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.3087411357856614;  // std dev = 0,500, 1.746,000 (wgt'ed) examples reached here.  /* #neg=873 #pos=873 */
%   | else if ( complex(A, E) )
%   | | then return 0.30874113578563755;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | | else return 0.30874113578563783;  // std dev = 0,500, 308,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=154 */
%   else if ( interaction(A, A) )
%   | then if ( proteinclass(A, F) )
%   | | then return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.308741135785635;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.3087411357856349;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.3087411357856365;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.30874113578563483;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( location(A, C) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.2564123687585822;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2564123687585824;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2564123687585815;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.25641236875858203;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | else if ( proteinclass(A, G) )
%   | | then return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( complex(A, I) )
%   | then return 0.25641236875857293;  // std dev = 0,500, 926,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=463 */
%   | else return 0.2564123687585679;  // std dev = 0,500, 1.278,000 (wgt'ed) examples reached here.  /* #neg=639 #pos=639 */
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( location(A, C) )
%   then return 0.20613740734451985;  // std dev = 0,500, 2.220,000 (wgt'ed) examples reached here.  /* #neg=1.110 #pos=1.110 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20613740734453948;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.20613740734454317;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.20613740734454325;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.20613740734454353;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.206137407344543;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.206137407344543;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.2061374073445431;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.206137407344543;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then return 0.16162857548415932;  // std dev = 0,500, 1.878,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=939 */
%   else if ( phenotype(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.16162857548415482;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.16162857548415488;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.16162857548415518;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.16162857548415455;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | else if ( proteinclass(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.16162857548415482;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.161628575484155;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16162857548415685;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | | else return 0.16162857548414966;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.12455597792081856;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else return 0.12455597792082473;  // std dev = 0,500, 2.070,000 (wgt'ed) examples reached here.  /* #neg=1.035 #pos=1.035 */
%   else if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.12455597792081674;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.12455597792081674;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081674;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.12455597792081956;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.12455597792081985;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.12455597792082196;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792082239;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.09492800936730571;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else return 0.09492800936731725;  // std dev = 0,500, 2.070,000 (wgt'ed) examples reached here.  /* #neg=1.035 #pos=1.035 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.09492800936730461;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09492800936730682;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.09492800936730654;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.09492800936730708;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.0949280093673085;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.09492800936730894;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730893;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( location(A, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.07186088850055646;  // std dev = 3,082, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.07186088850055528;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850055679;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then if ( location(A, G) )
%   | | | then return 0.0718608885005564;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.07186088850055683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07186088850055565;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.07186088850055619;  // std dev = 3,937, 62,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   else if ( phenotype(A, I) )
%   | then return 0.07186088850056185;  // std dev = 0,500, 890,000 (wgt'ed) examples reached here.  /* #neg=445 #pos=445 */
%   | else return 0.07186088850056399;  // std dev = 0,500, 1.314,000 (wgt'ed) examples reached here.  /* #neg=657 #pos=657 */
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.05418307375954754;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.05418307375954774;  // std dev = 0,500, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else if ( interaction(E, A) )
%   | | then if ( location(E, C) )
%   | | | then return 0.054183073759535835;  // std dev = 18,000, 1.296,000 (wgt'ed) examples reached here.  /* #neg=648 #pos=648 */
%   | | | else return 0.054183073759545786;  // std dev = 8,660, 300,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=150 */
%   | | else return 0.05418307375954929;  // std dev = 0,500, 474,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=237 */
%   else if ( interaction(A, A) )
%   | then return 0.05418307375954796;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(A, F) )
%   | | then return 0.05418307375954887;  // std dev = 0,500, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.05418307375954789;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05418307375954769;  // std dev = 4,123, 68,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.0407602532330549;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else return 0.040760253233048015;  // std dev = 0,500, 2.070,000 (wgt'ed) examples reached here.  /* #neg=1.035 #pos=1.035 */
%   else if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.04076025323305518;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.04076025323305521;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04076025323305535;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.04076025323305519;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.04076025323305545;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.04076025323305641;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04076025323305656;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 51.115 seconds
Total inference time: 1.657 seconds
AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 3, Type: scratch, Time: 07:27:26
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.657, 'Learning time': 51.115}


Starting fold 4

Target predicate: function 

Mapping Results
   Knowledge compiling time   = 0.04144740104675293
   Generating paths time   = 2.1555323600769043
   Generating mappings time   = 0.04272818565368652
   Possible mappings   = 28
   Finding best mapping   = 0.003345489501953125
   Total time   = 2.243058919906616


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: function 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;function(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;function(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;function(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;function(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;function(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;function(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;function(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;function(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;function(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;function(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509950857;  // std dev = 8,367, 280,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=140 */
%   | | | else return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3581489350995094;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | else return 0.3581489350995074;  // std dev = 18,371, 1.350,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=675 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | | else return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.35814893509951107;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578562795;  // std dev = 11,554, 534,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=267 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563306;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   | | | else return 0.30874113578563783;  // std dev = 8,660, 300,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=150 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.30874113578563506;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3087411357856348;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3087411357856274;  // std dev = 12,570, 632,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.256412368758589;  // std dev = 9,165, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585875;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.256412368758589;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.25641236875858886;  // std dev = 9,327, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | | else return 0.25641236875858897;  // std dev = 12,942, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | | else return 0.25641236875858897;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585886;  // std dev = 8,031, 258,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=129 */
%   | | else return 0.2564123687585859;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734454203;  // std dev = 8,972, 322,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=161 */
%   | | else return 0.20613740734454206;  // std dev = 7,280, 212,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734454186;  // std dev = 9,327, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | | else return 0.2061374073445316;  // std dev = 12,942, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | | else return 0.20613740734454203;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445406;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.2061374073445387;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else return 0.20613740734453928;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414608;  // std dev = 9,165, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.16162857548414508;  // std dev = 7,036, 198,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=99 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414844;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.1616285754841447;  // std dev = 15,700, 986,000 (wgt'ed) examples reached here.  /* #neg=493 #pos=493 */
%   | | else return 0.16162857548414594;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414492;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.1616285754841454;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else return 0.16162857548414764;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082074;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.12455597792082074;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.1245559779208208;  // std dev = 7,280, 212,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792081798;  // std dev = 12,884, 664,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=332 */
%   | | else return 0.12455597792082143;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792082056;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.12455597792082007;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792082788;  // std dev = 12,570, 632,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730816;  // std dev = 8,367, 280,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=140 */
%   | | | else return 0.09492800936730786;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else return 0.09492800936730816;  // std dev = 7,036, 198,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=99 */
%   | else if ( interaction(C, E) )
%   | | then return 0.0949280093673069;  // std dev = 12,884, 664,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=332 */
%   | | else return 0.0949280093673079;  // std dev = 5,958, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730793;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.09492800936730716;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730929;  // std dev = 12,570, 632,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056098;  // std dev = 8,888, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | | else return 0.07186088850055938;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850056217;  // std dev = 12,884, 664,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=332 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850056002;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.07186088850055826;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.07186088850055872;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.07186088850055883;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850056338;  // std dev = 12,570, 632,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759550664;  // std dev = 8,367, 280,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=140 */
%   | | | else return 0.05418307375954955;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else return 0.05418307375955136;  // std dev = 7,036, 198,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=99 */
%   | else if ( interaction(E, C) )
%   | | then return 0.0541830737595526;  // std dev = 15,953, 1.018,000 (wgt'ed) examples reached here.  /* #neg=509 #pos=509 */
%   | | else return 0.05418307375954643;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954861;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | | else return 0.05418307375954701;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.054183073759549345;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305815;  // std dev = 11,554, 534,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=267 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305779;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   | | | else return 0.04076025323305681;  // std dev = 8,660, 300,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=150 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.040760253233057105;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.04076025323305636;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.040760253233054204;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.04076025323305557;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04076025323305904;  // std dev = 12,570, 632,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 24.811 seconds
Total inference time: 3.232 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [6.205, 77, 77], 'true,true,true,true': [8.367, 140, 140], 'true,true,false,false': [6.745, 91, 91], 'true,false': [18.371, 675, 675], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'false,true,true,false': [5.099, 52, 52], 'true,true,false,true': [2.0, 8, 8], 'true,true,true,false': [3.742, 28, 28]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [11.554, 267, 267], 'true,false,false,false': [4.183, 35, 35], 'false,true,true,true': [7.681, 118, 118], 'true,false,false,true': [4.243, 36, 36], 'true,false,true,false': [8.66, 150, 150], 'true,false,true,true': [9.539, 182, 182], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [12.57, 316, 316]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [8.031, 129, 129], 'true,false,true,true': [9.327, 174, 174], 'true,true,true': [9.165, 168, 168], 'true,true,false,false': [6.745, 91, 91], 'true,false,true,false': [12.942, 335, 335], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'true,true,false,true': [2.0, 8, 8], 'true,false,false': [9.11, 166, 166]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [9.327, 174, 174], 'true,true,false': [7.28, 106, 106], 'false,true,true,true': [6.708, 90, 90], 'true,false,false': [9.11, 166, 166], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.416, 39, 39], 'true,false,true,false': [12.942, 335, 335], 'true,true,true': [8.972, 161, 161]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [2.828, 16, 16], 'true,true,false': [7.036, 99, 99], 'false,true,true,true': [6.708, 90, 90], 'true,false,false': [9.11, 166, 166], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.416, 39, 39], 'true,false,true,false': [15.7, 493, 493], 'true,true,true': [9.165, 168, 168]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [7.28, 106, 106], 'true,true,true,true': [8.456, 143, 143], 'true,false,false': [5.958, 71, 71], 'false,true,false': [12.57, 316, 316], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true': [12.884, 332, 332], 'false,true,true,true': [7.681, 118, 118], 'true,true,true,false': [3.0, 18, 18]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [7.036, 99, 99], 'true,true,true,true': [8.367, 140, 140], 'true,false,false': [5.958, 71, 71], 'false,true,false': [12.57, 316, 316], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true': [12.884, 332, 332], 'false,true,true,true': [7.681, 118, 118], 'true,true,true,false': [3.742, 28, 28]}], ['function(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [4.183, 35, 35], 'true,true,false': [7.382, 109, 109], 'true,false,false,true': [4.243, 36, 36], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [12.57, 316, 316], 'false,false': [0.0, 0, 0], 'true,true,true': [8.888, 158, 158], 'true,false,true': [12.884, 332, 332], 'false,true,true,true': [7.681, 118, 118]}], ['function(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [7.036, 99, 99], 'true,true,true,true': [8.367, 140, 140], 'true,false,false': [9.11, 166, 166], 'false,true,false': [4.183, 35, 35], 'false,false': [0.0, 0, 0], 'false,true,true,false': [5.099, 52, 52], 'true,false,true': [15.953, 509, 509], 'false,true,true,true': [6.205, 77, 77], 'true,true,true,false': [3.742, 28, 28]}], ['function(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [11.554, 267, 267], 'true,false,false,false': [4.183, 35, 35], 'false,true,true,true': [7.681, 118, 118], 'true,false,false,true': [4.243, 36, 36], 'true,false,true,false': [8.66, 150, 150], 'true,false,true,true': [9.539, 182, 182], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [12.57, 316, 316]}]]
[{'': [0.2500000000000237, 0.25000000000000433], 'false,true,true': [0.25, 0.25], 'true,true': [0.2500000000000044, 0.2500000000000027], 'true,true,false': [0.24999999999999997, 0.25000000000000244], 'false,true': [0.25000000000000366, 0.2500000000000016], 'false': [0.25000000000000433, nan], 'true,true,true': [0.25000000000000394, 0.25000000000000144], 'true': [0.2500000000000028, 0.2499999999999936]}, {'': [0.25000000000000155, 0.25000000000000966], 'false,true,true': [0.2500000000000019, 0.25], 'true,false,true': [0.25000000000000366, 0.2500000000000009], 'true,false': [0.25000000000000966, 0.24999999999999784], 'false,true': [0.2500000000000019, 0.2500000000000096], 'false': [0.25000000000000966, nan], 'true,false,false': [0.2499999999999996, 0.24999999999999958], 'true': [0.25000000000000794, 0.2500000000000102]}, {'': [0.2500000000000274, 0.24999999999999628], 'true,true': [0.2499999999999966, 0.25000000000000044], 'true,true,false': [0.25, 0.2500000000000005], 'false': [0.24999999999999628, nan], 'true,false': [0.25000000000000105, 0.2499999999999966], 'false,true': [0.24999999999999625, 0.2499999999999995], 'true,false,true': [0.24999999999999642, 0.2500000000000058], 'true': [0.25000000000000466, 0.24999999999999994]}, {'': [0.24999999999999573, 0.2499999999999997], 'false,true,true': [0.24999999999999983, 0.25000000000000044], 'true,true': [0.25000000000000056, 0.2500000000000002], 'true,false,true': [0.2500000000000004, 0.24999999999999753], 'true,false': [0.25000000000000405, 0.2500000000000014], 'false,true': [0.24999999999999967, 0.2500000000000011], 'false': [0.2499999999999997, nan], 'true': [0.24999999999999722, 0.2500000000000015]}, {'': [0.2499999999999937, 0.2500000000000003], 'false,true,true': [0.2499999999999998, 0.24999999999999956], 'true,true': [0.2500000000000004, 0.25000000000000117], 'true,false,true': [0.2499999999999999, 0.24999999999999906], 'true,false': [0.24999999999999842, 0.2500000000000012], 'false,true': [0.2500000000000002, 0.24999999999999975], 'false': [0.2500000000000003, nan], 'true': [0.24999999999999964, 0.249999999999997]}, {'': [0.2500000000000087, 0.24999999999999634], 'true,true': [0.2500000000000013, 0.2499999999999984], 'false,true,true': [0.25000000000000094, 0.25], 'true,false': [0.2499999999999964, 0.2499999999999995], 'false,true': [0.25000000000000094, 0.2499999999999958], 'false': [0.24999999999999634, nan], 'true,true,true': [0.2500000000000001, 0.25000000000000017], 'true': [0.24999999999999908, 0.24999999999999542]}, {'': [0.2500000000000084, 0.24999999999999772], 'true,true': [0.24999999999999792, 0.2499999999999985], 'false,true,true': [0.2500000000000009, 0.25], 'true,false': [0.2499999999999979, 0.25000000000000006], 'false,true': [0.2500000000000009, 0.2499999999999978], 'false': [0.24999999999999772, nan], 'true,true,true': [0.24999999999999817, 0.24999999999999983], 'true': [0.24999999999999775, 0.2499999999999979]}, {'': [0.2499999999999996, 0.2500000000000015], 'false,true,true': [0.25000000000000117, 0.25], 'true,true': [0.25000000000000083, 0.249999999999999], 'true,false': [0.25000000000000233, 0.2500000000000004], 'false,true': [0.25000000000000117, 0.25000000000000216], 'false': [0.2500000000000015, nan], 'true,false,false': [0.25, 0.2500000000000001], 'true': [0.25000000000000216, 0.2500000000000023]}, {'': [0.25000000000000566, 0.2499999999999986], 'true,true': [0.24999999999999958, 0.25000000000000105], 'false,true,true': [0.25000000000000017, 0.25000000000000056], 'true,false': [0.25000000000000566, 0.24999999999999872], 'false,true': [0.2500000000000008, 0.25], 'false': [0.2499999999999986, nan], 'true,true,true': [0.2500000000000006, 0.24999999999999992], 'true': [0.24999999999999958, 0.25000000000000633]}, {'': [0.24999999999999278, 0.24999999999999872], 'false,true,true': [0.24999999999999936, 0.24999999999999994], 'true,false,true': [0.2500000000000002, 0.2500000000000001], 'true,false': [0.2499999999999985, 0.2500000000000002], 'false,true': [0.24999999999999942, 0.24999999999999717], 'false': [0.24999999999999872, nan], 'true,false,false': [0.2500000000000001, 0.2499999999999999], 'true': [0.24999999999999878, 0.24999999999999645]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;function(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;function(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;function(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;function(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;function(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;function(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;function(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;function(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;function(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;function(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509950857;  // std dev = 8,367, 280,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=140 */
%   | | | else return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3581489350995094;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | else return 0.3581489350995074;  // std dev = 0,500, 1.350,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=675 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | | | else return 0.35814893509951323;  // std dev = 5,099, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0.35814893509951107;  // std dev = 0,500, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.30874113578562795;  // std dev = 0,500, 534,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=267 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30874113578563306;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   | | | else return 0.30874113578563783;  // std dev = 8,660, 300,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=150 */
%   | | else return 0.3087411357856374;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.3087411357856377;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.3087411357856358;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856378;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   | | | else return 0.30874113578563256;  // std dev = 9,618, 370,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.2564123687585889;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | | else return 0.256412368758589;  // std dev = 8,246, 272,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=136 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.2564123687585875;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.256412368758589;  // std dev = 6,745, 182,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=91 */
%   | else if ( interaction(G, C) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.25641236875858886;  // std dev = 9,327, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | | else return 0.2564123687585889;  // std dev = 12,942, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.2564123687585883;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.25641236875858875;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else return 0.2564123687585887;  // std dev = 0,500, 328,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=164 */
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.2061374073445343;  // std dev = 0,500, 534,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=267 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.20613740734454186;  // std dev = 9,327, 348,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=174 */
%   | | | else return 0.2061374073445316;  // std dev = 12,942, 670,000 (wgt'ed) examples reached here.  /* #neg=335 #pos=335 */
%   | | else return 0.20613740734454186;  // std dev = 0,500, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.2061374073445406;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.2061374073445387;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.20613740734453873;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.20613740734453864;  // std dev = 3,464, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16162857548415038;  // std dev = 7,211, 208,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | | else return 0.16162857548415055;  // std dev = 5,657, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   | | else return 0.1616285754841508;  // std dev = 0,500, 198,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=99 */
%   | else return 0.16162857548414453;  // std dev = 0,500, 1.350,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=675 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.16162857548414492;  // std dev = 6,708, 180,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=90 */
%   | | | else return 0.1616285754841454;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | else if ( location(A, G) )
%   | | | then return 0.1616285754841467;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.16162857548414622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792082089;  // std dev = 8,456, 286,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=143 */
%   | | | else return 0.12455597792082124;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.12455597792082103;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.12455597792082082;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.12455597792082085;  // std dev = 10,075, 406,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=203 */
%   | | | else return 0.1245559779208204;  // std dev = 8,031, 258,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=129 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.1245559779208213;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.12455597792081963;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else return 0.12455597792082129;  // std dev = 0,500, 872,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=436 */
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.09492800936731155;  // std dev = 0,500, 534,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=267 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.09492800936730823;  // std dev = 10,075, 406,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=203 */
%   | | | else return 0.09492800936730764;  // std dev = 8,031, 258,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=129 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.09492800936730789;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.09492800936730633;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.09492800936730793;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730933;  // std dev = 0,500, 632,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=316 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850056098;  // std dev = 0,500, 316,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=158 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.07186088850055938;  // std dev = 5,612, 126,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=63 */
%   | | | else return 0.07186088850055938;  // std dev = 4,796, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | else return 0.07186088850056233;  // std dev = 0,500, 806,000 (wgt'ed) examples reached here.  /* #neg=403 #pos=403 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.07186088850055872;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07186088850055936;  // std dev = 8,093, 262,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   | | | else return 0.0718608885005607;  // std dev = 9,618, 370,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954736;  // std dev = 8,367, 280,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=140 */
%   | | | else return 0.0541830737595494;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.054183073759549734;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.05418307375954967;  // std dev = 4,528, 82,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759548735;  // std dev = 9,539, 364,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=182 */
%   | | | else return 0.05418307375955205;  // std dev = 12,787, 654,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=327 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05418307375954879;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.05418307375954763;  // std dev = 7,382, 218,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else return 0.05418307375954675;  // std dev = 0,500, 328,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=164 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305918;  // std dev = 0,500, 534,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=267 */
%   | else if ( interaction(C, D) )
%   | | then return 0.04076025323305875;  // std dev = 0,500, 664,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=332 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.0407602532330562;  // std dev = 4,243, 72,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.040760253233055495;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.040760253233054204;  // std dev = 7,681, 236,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=118 */
%   | | | else return 0.04076025323305557;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, I) )
%   | | | then return 0.040760253233058916;  // std dev = 12,104, 586,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=293 */
%   | | | else return 0.04076025323305736;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 25.494 seconds
Total inference time: 2.943 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 4, Type: transfer, Time: 07:28:25
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 3.232, 'Learning time': 24.811}, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.943, 'Mapping results': {'Total time': 2.243058919906616, 'Possible mappings': 28, 'Finding best mapping': 0.003345489501953125, 'Knowledge compiling time': 0.04144740104675293, 'Generating paths time': 2.1555323600769043, 'Generating mappings time': 0.04272818565368652}, 'Learning time': 50.305}


Start learning from scratch in target domain

Target train facts examples: 2201
Target train pos examples: 1106
Target train neg examples: 1106

Target test facts examples: 8604
Target test pos examples: 3473
Target test neg examples: 3473

WILL Produced-Tree #1
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.3581489350995113;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( location(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.35814893509951123;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | | else return 0.3581489350995112;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( complex(A, I) )
%   | then return 0.3581489350995077;  // std dev = 0,500, 736,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=368 */
%   | else return 0.3581489350995074;  // std dev = 0,500, 1.268,000 (wgt'ed) examples reached here.  /* #neg=634 #pos=634 */
WILL Produced-Tree #2
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then if ( complex(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.3087411357856348;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3087411357856351;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3087411357856351;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856347;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( location(A, I) )
%   | | | then return 0.30874113578563706;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.3087411357856639;  // std dev = 0,500, 2.004,000 (wgt'ed) examples reached here.  /* #neg=1.002 #pos=1.002 */
WILL Produced-Tree #3
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then if ( interaction(E, A), proteinclass(E, F) )
%   | | | then return 0.25641236875858664;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25641236875858664;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2564123687585857;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | | else return 0.2564123687585865;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( proteinclass(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2564123687585867;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.25641236875858675;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   else if ( phenotype(A, J) )
%   | then return 0.2564123687585691;  // std dev = 0,500, 1.072,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=536 */
%   | else return 0.2564123687585725;  // std dev = 0,500, 932,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=466 */
WILL Produced-Tree #4
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( proteinclass(A, D) )
%   | | then return 0.2061374073445402;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else return 0.20613740734454133;  // std dev = 0,500, 166,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=83 */
%   | else return 0.20613740734452968;  // std dev = 0,500, 1.884,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=942 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(F, E) )
%   | | | then return 0.20613740734453842;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.20613740734453767;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.20613740734453767;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.2061374073445383;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.20613740734453828;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
WILL Produced-Tree #5
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then if ( phenotype(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.16162857548414683;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16162857548414608;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.1616285754841465;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414586;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( location(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.1616285754841463;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.16162857548414708;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, I) )
%   | then return 0.1616285754841444;  // std dev = 0,500, 1.072,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=536 */
%   | else return 0.16162857548414442;  // std dev = 0,500, 932,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=466 */
WILL Produced-Tree #6
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.12455597792082307;  // std dev = 0,500, 998,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=499 */
%   | | else if ( proteinclass(A, F) )
%   | | | then return 0.12455597792082079;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | | else return 0.12455597792082078;  // std dev = 4,359, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | else return 0.12455597792081002;  // std dev = 0,500, 944,000 (wgt'ed) examples reached here.  /* #neg=472 #pos=472 */
%   else if ( interaction(A, A) )
%   | then return 0.12455597792081963;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( proteinclass(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.12455597792081827;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081817;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1245559779208189;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12455597792081788;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
WILL Produced-Tree #7
% FOR function(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( phenotype(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.09492800936730532;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0.094928009367308;  // std dev = 7,969, 254,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=127 */
%   | | else return 0.09492800936730812;  // std dev = 0,500, 400,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=200 */
%   | else return 0.09492800936730814;  // std dev = 0,500, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), complex(F, G) )
%   | | | then return 0.09492800936730883;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730872;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.09492800936730847;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.09492800936730815;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.09492800936731585;  // std dev = 0,500, 932,000 (wgt'ed) examples reached here.  /* #neg=466 #pos=466 */
WILL Produced-Tree #8
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( proteinclass(A, D) )
%   | then return 0.0718608885005585;  // std dev = 0,500, 560,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=280 */
%   | else return 0.07186088850056506;  // std dev = 0,500, 1.528,000 (wgt'ed) examples reached here.  /* #neg=764 #pos=764 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.07186088850055566;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.07186088850055629;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.07186088850055532;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055523;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.0718608885005554;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.07186088850055532;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055534;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR function(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then if ( complex(A, D) )
%   | | then if ( complex(E, D), proteinclass(E, F) )
%   | | | then return 0.05418307375954774;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.054183073759547035;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.05418307375954901;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.054183073759546826;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0.05418307375954972;  // std dev = 0,500, 118,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   else if ( enzyme(A, H) )
%   | then return 0.054183073759549165;  // std dev = 0,500, 546,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=273 */
%   | else if ( complex(A, I) )
%   | | then return 0.05418307375954886;  // std dev = 0,500, 542,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=271 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05418307375954772;  // std dev = 11,158, 498,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=249 */
%   | | | else return 0.05418307375954672;  // std dev = 10,223, 418,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=209 */
WILL Produced-Tree #10
% FOR function(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, D) )
%   | | then if ( enzyme(E, D), proteinclass(E, F) )
%   | | | then return 0.04076025323305666;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305604;  // std dev = 3,391, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.04076025323305502;  // std dev = 0,500, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else return 0.04076025323304431;  // std dev = 0,500, 1.884,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=942 */
%   else if ( interaction(A, A) )
%   | then return 0.04076025323305654;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.0407602532330544;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | | else return 0.04076025323305413;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.04076025323305378;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305405;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 41.913 seconds
Total inference time: 2.318 seconds
AUC ROC: 0.5


Dataset: 26_twitter_yeast, Fold: 4, Type: scratch, Time: 07:29:09
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 2.318, 'Learning time': 41.913}


