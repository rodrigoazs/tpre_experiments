Starting experiment #1 for 25_twitter_yeast

Start learning from source dataset

Source train facts examples: 2052
Source train pos examples: 1372
Source train neg examples: 1372

WILL Produced-Tree #1
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.3581489350995074;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.3581489350995129;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.3581489350995087;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.35814893509951273;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else return 0.358148935099508;  // std dev = 0,500, 464,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=232 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.3581489350995133;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.3581489350995133;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.3087411357856633;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.3087411357856376;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.3087411357856372;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3087411357856372;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.3087411357856377;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.30874113578563567;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.25641236875856666;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else if ( follows(A, E), follows(E, C) )
%   | | | then return 0.25641236875857976;  // std dev = 8,185, 268,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=134 */
%   | | | else return 0.25641236875858187;  // std dev = 6,205, 154,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=77 */
%   | else if ( follows(F, C) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.2564123687585887;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.2564123687585863;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.25641236875858714;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, G) )
%   | then if ( follows(G, H) )
%   | | then return 0.2564123687585884;  // std dev = 0,500, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | else return 0.25641236875858603;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.2564123687585867;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #4
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then return 0.20613740734453131;  // std dev = 0,500, 1.846,000 (wgt'ed) examples reached here.  /* #neg=923 #pos=923 */
%   | | else return 0.20613740734453517;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.20613740734454172;  // std dev = 9,110, 332,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=166 */
%   | | | else return 0.20613740734453923;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.20613740734454025;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.20613740734454133;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.20613740734453861;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.20613740734453867;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.20613740734453984;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then return 0.16162857548414433;  // std dev = 0,500, 1.512,000 (wgt'ed) examples reached here.  /* #neg=756 #pos=756 */
%   | | else return 0.16162857548414417;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.16162857548414702;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16162857548414444;  // std dev = 10,050, 404,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=202 */
%   | | else return 0.16162857548414647;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.16162857548414428;  // std dev = 7,348, 216,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=108 */
%   | | | else return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16162857548414733;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.16162857548414664;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #6
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, D), follows(C, D) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.12455597792081527;  // std dev = 19,274, 1.486,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=743 */
%   | | | else return 0.12455597792081972;  // std dev = 9,487, 360,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=180 */
%   | | else return 0.12455597792081662;  // std dev = 0,500, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else if ( follows(C, E) )
%   | | then return 0.12455597792082045;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.1245559779208206;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.12455597792082054;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.12455597792082007;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792082118;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.12455597792081967;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #7
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.09492800936732027;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.0949280093673082;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.09492800936730682;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(C, E) )
%   | | then return 0.09492800936730778;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else return 0.09492800936730793;  // std dev = 0,500, 206,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.09492800936730791;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.09492800936730716;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730794;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.09492800936730655;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #8
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then if ( follows(C, D), follows(D, A) )
%   | | then return 0.0718608885005646;  // std dev = 0,500, 1.548,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=774 */
%   | | else return 0.07186088850055461;  // std dev = 0,500, 386,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=193 */
%   | else if ( follows(C, E) )
%   | | then return 0.07186088850055665;  // std dev = 0,500, 336,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=168 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.0718608885005588;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.07186088850055841;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( accounttype(G, I), accounttype(H, I) )
%   | | | then return 0.07186088850055906;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.07186088850055883;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0718608885005595;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07186088850055862;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #9
% FOR tweets(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, C) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( follows(C, D) )
%   | | | then return 0.05418307375954569;  // std dev = 18,868, 1.424,000 (wgt'ed) examples reached here.  /* #neg=712 #pos=712 */
%   | | | else return 0.05418307375954943;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.054183073759546486;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | else if ( follows(E, C) )
%   | | then return 0.05418307375954729;  // std dev = 0,500, 422,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=211 */
%   | | else return 0.05418307375954963;  // std dev = 0,500, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.05418307375954887;  // std dev = 5,339, 114,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
%   | | | else return 0.054183073759548894;  // std dev = 5,292, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   | | else return 0.0541830737595491;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0.05418307375954946;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #10
% FOR tweets(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A) )
%   | then return 0.040760253233045114;  // std dev = 0,500, 1.934,000 (wgt'ed) examples reached here.  /* #neg=967 #pos=967 */
%   | else if ( follows(C, D) )
%   | | then if ( follows(A, D) )
%   | | | then return 0.040760253233055585;  // std dev = 7,106, 202,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=101 */
%   | | | else return 0.040760253233055425;  // std dev = 5,788, 134,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.040760253233056494;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.040760253233056175;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( accounttype(F, H), accounttype(G, H) )
%   | | | then return 0.04076025323305458;  // std dev = 7,517, 226,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=113 */
%   | | | else return 0.04076025323305688;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.040760253233057535;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */


Predicates from source: ['tweets(account,word).', 'follows(account,account).', 'accounttype(account,type).']

Starting fold 1

Target predicate: enzyme 

Mapping Results
   Knowledge compiling time   = 0.06234169006347656
   Generating paths time   = 2.4012486934661865
   Generating mappings time   = 0.033050537109375
   Possible mappings   = 28
   Finding best mapping   = 0.002682924270629883
   Total time   = 2.49932861328125


Best mapping found: ['follows(A,B) -> interaction(B,A)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: enzyme 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;enzyme(A, B) :- interaction(A, C).;true;true
0;true,true;interaction(A, D), interaction(C, D).;true;true
0;true,true,false;interaction(E, A), interaction(C, E).;false;false
0;false,true,true;interaction(G, A).;false;false
0;false,true;interaction(G, F).;true;false
0;false;interaction(F, A).;true;false
0;true,true,true;interaction(D, C).;false;false
0;true;interaction(C, A).;true;false
1;;enzyme(A, B) :- interaction(C, A).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(A, F).;true;false
1;true,false,false;interaction(A, E).;false;false
1;false,true;interaction(G, F), interaction(A, G).;true;false
1;true;interaction(A, C).;false;true
1;true,false;interaction(D, C).;true;true
1;true,false,true;interaction(D, A).;false;false
2;;enzyme(A, B) :- interaction(A, C).;true;true
2;true,true;interaction(A, D), interaction(C, D).;false;true
2;true,true,false;interaction(E, A), interaction(C, E).;false;false
2;false;interaction(G, A).;true;false
2;true,false;interaction(C, F).;true;false
2;false,true;interaction(H, G).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(C, A).;true;true
3;;enzyme(A, B) :- interaction(A, C).;true;true
3;true,true;interaction(D, A), interaction(D, C).;false;false
3;false;interaction(F, A).;true;false
3;true,false;interaction(C, E).;true;false
3;false,true;interaction(G, F).;true;false
3;true,false,true;interaction(A, E).;false;false
3;true;interaction(C, A).;true;true
3;false,true,true;interaction(F, G).;false;false
4;;enzyme(A, B) :- interaction(A, C).;true;true
4;true,true;interaction(A, D), interaction(C, D).;false;false
4;false;interaction(F, A).;true;false
4;true,false;interaction(C, E).;true;false
4;false,true;interaction(G, F).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(C, A).;true;true
4;false,true,true;interaction(F, G).;false;false
5;;enzyme(A, B) :- interaction(C, A).;true;true
5;true,true;interaction(D, A), interaction(D, C).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(E, C).;false;false
5;false,true;interaction(G, F), interaction(A, G).;true;false
5;false;interaction(A, F).;true;false
5;true,true,true;interaction(A, D).;false;false
5;true;interaction(A, C).;true;true
6;;enzyme(A, B) :- interaction(C, A).;true;true
6;true,true;interaction(A, D), interaction(C, D).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(E, C).;false;false
6;false,true;interaction(G, F), interaction(A, G).;true;false
6;false;interaction(A, F).;true;false
6;true,true,true;interaction(D, C).;false;false
6;true;interaction(A, C).;true;true
7;;enzyme(A, B) :- interaction(C, A).;true;true
7;true,true;interaction(D, C), interaction(A, D).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(A, F).;false;false
7;false,true;interaction(H, G), interaction(A, H).;true;false
7;false;interaction(A, G).;true;false
7;true,false;interaction(E, C).;false;true
7;true;interaction(A, C).;true;true
8;;enzyme(A, B) :- interaction(A, C).;true;true
8;true,true;interaction(A, D), interaction(C, D).;true;false
8;false,true,true;interaction(G, A).;false;false
8;true,false;interaction(C, E).;false;false
8;false,true;interaction(G, F).;true;false
8;false;interaction(F, A).;true;false
8;true,true,true;interaction(D, C).;false;false
8;true;interaction(C, A).;true;true
9;;enzyme(A, B) :- interaction(C, A).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(A, F).;true;false
9;true,false,false;interaction(A, E).;false;false
9;false,true;interaction(G, F), interaction(A, G).;true;false
9;true;interaction(A, C).;false;true
9;true,false;interaction(D, C).;true;true
9;true,false,true;interaction(D, A).;false;false


WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.3581489350995112;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.35814893509951307;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.35814893509951234;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3087411357856347;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.3087411357856347;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.308741135785637;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.3087411357856351;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3087411357856347;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856351;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3087411357856351;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3087411357856351;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.2564123687585867;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25641236875858653;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2564123687585865;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2564123687585865;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.2564123687585864;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.25641236875858764;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | else return 0.2564123687585865;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.20613740734453984;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.20613740734453978;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.20613740734453992;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2061374073445399;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.20613740734453992;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.2061374073445386;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.20613740734453861;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.20613740734453953;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.16162857548414664;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.1616285754841467;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841468;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.16162857548414664;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.1616285754841467;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.161628575484146;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.16162857548414686;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.12455597792081975;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.12455597792081963;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.12455597792081974;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, C) )
%   | | then return 0.12455597792082047;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | else return 0.12455597792081985;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792081985;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081982;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081985;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.09492800936730655;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, C) )
%   | | then return 0.09492800936730675;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | else return 0.0949280093673067;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730694;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.0949280093673069;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then return 0.0718608885005585;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.0718608885005586;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, C) )
%   | | then return 0.071860888500559;  // std dev = 6,325, 160,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=80 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.07186088850055874;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07186088850055855;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.07186088850055872;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.05418307375954948;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05418307375954945;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, E) )
%   | | then return 0.05418307375954931;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.05418307375954915;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.054183073759548894;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.05418307375954874;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.05418307375954961;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.04076025323305632;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.040760253233056334;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.04076025323305588;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.04076025323305632;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.04076025323305636;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305632;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04076025323305635;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695399
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.951 seconds
Total inference time: 0.934 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'false,true,true': 'interaction(G, A)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'false,true,true,true': [2.739, 15, 15], 'true,true,true,true': [2.739, 15, 15], 'true,true,false,false': [0.707, 1, 1], 'true,false': [3.873, 30, 30], 'false,true,false': [2.345, 11, 11], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.743, 45, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [2.828, 16, 16], 'true,false,false,false': [2.345, 11, 11], 'false,true,true,true': [1.225, 3, 3], 'true,false,false,true': [0.707, 1, 1], 'true,false,true,false': [5.244, 55, 55], 'true,false,true,true': [3.536, 25, 25], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [1.414, 4, 4]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'true,false': 'interaction(C, F)', 'false,true': 'interaction(H, G)', 'false': 'interaction(G, A)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(C, A)'}, {'false,true,true': [5.477, 60, 60], 'true,false,true,true': [1.871, 7, 7], 'true,true,true': [2.739, 15, 15], 'true,true,false,false': [0.707, 1, 1], 'true,false,true,false': [2.236, 10, 10], 'false,true,false': [2.345, 11, 11], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,false': [2.55, 13, 13]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [1.871, 7, 7], 'true,true,false': [0.707, 1, 1], 'false,true,true,true': [4.637, 43, 43], 'true,false,false': [2.55, 13, 13], 'false,true,false': [2.345, 11, 11], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.915, 17, 17], 'true,false,true,false': [2.236, 10, 10], 'true,true,true': [2.739, 15, 15]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [1.0, 2, 2], 'true,true,false': [0.707, 1, 1], 'false,true,true,true': [4.637, 43, 43], 'true,false,false': [2.55, 13, 13], 'false,true,false': [2.345, 11, 11], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.915, 17, 17], 'true,false,true,false': [2.739, 15, 15], 'true,true,true': [2.739, 15, 15]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(A, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [0.707, 1, 1], 'true,true,true,true': [2.646, 14, 14], 'true,false,false': [2.449, 12, 12], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true': [6.325, 80, 80], 'false,true,true,true': [1.225, 3, 3], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true,false': [0.707, 1, 1], 'true,true,true,true': [2.739, 15, 15], 'true,false,false': [2.449, 12, 12], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'true,false,true': [6.325, 80, 80], 'false,true,true,true': [1.225, 3, 3], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, C), interaction(A, D)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(A, F)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'true': 'interaction(A, C)'}, {'true,false,false,false': [2.345, 11, 11], 'true,true,false': [0.707, 1, 1], 'true,false,false,true': [0.707, 1, 1], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [1.414, 4, 4], 'false,false': [0.0, 0, 0], 'true,true,true': [2.739, 15, 15], 'true,false,true': [6.325, 80, 80], 'false,true,true,true': [1.225, 3, 3]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'true,true,false': [0.707, 1, 1], 'true,true,true,true': [2.739, 15, 15], 'true,false,false': [2.55, 13, 13], 'false,true,false': [2.345, 11, 11], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.743, 45, 45], 'true,false,true': [2.915, 17, 17], 'false,true,true,true': [2.739, 15, 15], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [2.828, 16, 16], 'true,false,false,false': [2.345, 11, 11], 'false,true,true,true': [1.225, 3, 3], 'true,false,false,true': [0.707, 1, 1], 'true,false,true,false': [5.244, 55, 55], 'true,false,true,true': [3.536, 25, 25], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [1.414, 4, 4]}]]
[{'': [0.2500000000000002, 0.2499999999999995], 'true,true': [0.24999999999999953, 0.25], 'true,true,false': [nan, 0.25], 'false,true,true': [0.24999999999999953, 0.25000000000000033], 'false,true': [0.24999999999999975, 0.24999999999999958], 'false': [0.2499999999999995, nan], 'true,true,true': [0.24999999999999953, nan], 'true': [0.24999999999999953, 0.2500000000000015]}, {'': [0.25000000000000044, 0.2499999999999999], 'false,true,true': [0.24999999999999997, 0.24999999999999997], 'true,false,true': [0.25000000000000105, 0.24999999999999786], 'true,false': [0.24999999999999725, 0.2500000000000002], 'false,true': [0.25, 0.24999999999999997], 'false': [0.2499999999999999, nan], 'true,false,false': [0.24999999999999997, 0.25000000000000017], 'true': [0.2500000000000001, 0.24999999999999706]}, {'': [0.24999999999999922, 0.25], 'true,true': [0.2499999999999999, 0.25], 'true,true,false': [nan, 0.25], 'true,false,true': [0.2500000000000001, 0.25], 'true,false': [0.2499999999999999, 0.25000000000000006], 'false,true': [0.2500000000000002, 0.25], 'false': [0.25, nan], 'true': [0.24999999999999992, 0.24999999999999947]}, {'': [0.25000000000000083, 0.2499999999999997], 'false,true,true': [0.2500000000000006, 0.2500000000000005], 'true,true': [0.24999999999999983, 0.25], 'true,false,true': [0.24999999999999997, 0.24999999999999992], 'true,false': [0.2499999999999997, 0.2499999999999999], 'false,true': [0.24999999999999997, 0.2500000000000002], 'false': [0.2499999999999997, nan], 'true': [0.24999999999999964, 0.2500000000000004]}, {'': [0.24999999999999953, 0.24999999999999975], 'true,true': [0.24999999999999983, 0.24999999999999997], 'false,true,true': [0.24999999999999933, 0.2499999999999997], 'true,false,true': [0.25000000000000006, 0.24999999999999994], 'true,false': [0.24999999999999994, 0.25000000000000006], 'false,true': [0.24999999999999953, 0.2499999999999998], 'false': [0.24999999999999975, nan], 'true': [0.24999999999999983, 0.2499999999999998]}, {'': [0.25000000000000083, 0.25], 'true,true': [0.24999999999999992, 0.25], 'false,true,true': [0.25, 0.25000000000000006], 'true,false': [0.2500000000000007, 0.24999999999999992], 'false,true': [0.24999999999999994, 0.25], 'false': [0.25, nan], 'true,true,true': [0.24999999999999986, 0.24999999999999997], 'true': [0.25, 0.25000000000000083]}, {'': [0.25000000000000094, 0.2499999999999999], 'true,true': [0.2500000000000003, 0.25], 'false,true,true': [0.25, 0.25], 'true,false': [0.25000000000000056, 0.25000000000000017], 'false,true': [0.25000000000000006, 0.25], 'false': [0.2499999999999999, nan], 'true,true,true': [0.2500000000000003, nan], 'true': [0.2500000000000003, 0.250000000000001]}, {'': [0.250000000000001, 0.2500000000000001], 'true,true': [0.25000000000000006, 0.24999999999999997], 'false,true,true': [0.24999999999999997, 0.24999999999999997], 'true,false,false': [0.24999999999999994, 0.25000000000000006], 'false,true': [0.25000000000000006, 0.25], 'false': [0.2500000000000001, nan], 'true,false': [0.2500000000000002, 0.25000000000000017], 'true': [0.25000000000000006, 0.25000000000000083]}, {'': [0.2499999999999995, 0.25000000000000033], 'false,true,true': [0.2499999999999998, 0.25000000000000017], 'true,true': [0.24999999999999986, 0.24999999999999997], 'true,false': [0.25, 0.24999999999999997], 'false,true': [0.2500000000000001, 0.25], 'false': [0.25000000000000033, nan], 'true,true,true': [0.24999999999999986, nan], 'true': [0.24999999999999986, 0.2500000000000003]}, {'': [0.25000000000000033, 0.25000000000000006], 'false,true,true': [0.25, 0.25], 'true,false,true': [0.25000000000000006, 0.24999999999999967], 'true,false': [0.25000000000000006, 0.25000000000000006], 'false,true': [0.24999999999999994, 0.24999999999999994], 'false': [0.25000000000000006, nan], 'true,false,false': [0.25, 0.25], 'true': [0.25000000000000006, 0.2500000000000002]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;enzyme(A, B) :- interaction(A, C).;true;true', '0;true,true;interaction(A, D), interaction(C, D).;true;true', '0;true,true,false;interaction(E, A), interaction(C, E).;true;true', '0;false,true,true;interaction(G, A).;true;true', '0;false,true;interaction(G, F).;true;true', '0;false;interaction(F, A).;true;true', '0;true,true,true;interaction(D, C).;true;true', '0;true;interaction(C, A).;true;true', '1;;enzyme(A, B) :- interaction(C, A).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(A, F).;true;true', '1;true,false,false;interaction(A, E).;true;true', '1;false,true;interaction(G, F), interaction(A, G).;true;true', '1;true;interaction(A, C).;true;true', '1;true,false;interaction(D, C).;true;true', '1;true,false,true;interaction(D, A).;true;true', '2;;enzyme(A, B) :- interaction(A, C).;true;true', '2;true,true;interaction(A, D), interaction(C, D).;true;true', '2;true,true,false;interaction(E, A), interaction(C, E).;true;true', '2;false;interaction(G, A).;true;true', '2;true,false;interaction(C, F).;true;true', '2;false,true;interaction(H, G).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(C, A).;true;true', '3;;enzyme(A, B) :- interaction(A, C).;true;true', '3;true,true;interaction(D, A), interaction(D, C).;true;true', '3;false;interaction(F, A).;true;true', '3;true,false;interaction(C, E).;true;true', '3;false,true;interaction(G, F).;true;true', '3;true,false,true;interaction(A, E).;true;true', '3;true;interaction(C, A).;true;true', '3;false,true,true;interaction(F, G).;true;true', '4;;enzyme(A, B) :- interaction(A, C).;true;true', '4;true,true;interaction(A, D), interaction(C, D).;true;true', '4;false;interaction(F, A).;true;true', '4;true,false;interaction(C, E).;true;true', '4;false,true;interaction(G, F).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(C, A).;true;true', '4;false,true,true;interaction(F, G).;true;true', '5;;enzyme(A, B) :- interaction(C, A).;true;true', '5;true,true;interaction(D, A), interaction(D, C).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(E, C).;true;true', '5;false,true;interaction(G, F), interaction(A, G).;true;true', '5;false;interaction(A, F).;true;true', '5;true,true,true;interaction(A, D).;true;true', '5;true;interaction(A, C).;true;true', '6;;enzyme(A, B) :- interaction(C, A).;true;true', '6;true,true;interaction(A, D), interaction(C, D).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(E, C).;true;true', '6;false,true;interaction(G, F), interaction(A, G).;true;true', '6;false;interaction(A, F).;true;true', '6;true,true,true;interaction(D, C).;true;true', '6;true;interaction(A, C).;true;true', '7;;enzyme(A, B) :- interaction(C, A).;true;true', '7;true,true;interaction(D, C), interaction(A, D).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(A, F).;true;true', '7;false,true;interaction(H, G), interaction(A, H).;true;true', '7;false;interaction(A, G).;true;true', '7;true,false;interaction(E, C).;true;true', '7;true;interaction(A, C).;true;true', '8;;enzyme(A, B) :- interaction(A, C).;true;true', '8;true,true;interaction(A, D), interaction(C, D).;true;true', '8;false,true,true;interaction(G, A).;true;true', '8;true,false;interaction(C, E).;true;true', '8;false,true;interaction(G, F).;true;true', '8;false;interaction(F, A).;true;true', '8;true,true,true;interaction(D, C).;true;true', '8;true;interaction(C, A).;true;true', '9;;enzyme(A, B) :- interaction(C, A).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(A, F).;true;true', '9;true,false,false;interaction(A, E).;true;true', '9;false,true;interaction(G, F), interaction(A, G).;true;true', '9;true;interaction(A, C).;true;true', '9;true,false;interaction(D, C).;true;true', '9;true,false,true;interaction(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.35814893509951345;  // std dev = 0,500, 142,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(D, D) )
%   | | then if ( proteinclass(D, E) )
%   | | | then return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3087411357856348;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.30874113578563744;  // std dev = 0,500, 184,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=92 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.25641236875858675;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.2564123687585863;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.256412368758586;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.2564123687585857;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(H, A), proteinclass(H, I) )
%   | | | then return 0.2564123687585856;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.2564123687585858;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0.2564123687585856;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.20613740734453992;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( interaction(C, D) )
%   | | then return 0.20613740734453934;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.20613740734453942;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.20613740734453867;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.20613740734453892;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.20613740734453923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453936;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.16162857548414647;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16162857548414664;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.16162857548414655;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.16162857548414664;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.16162857548414714;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.16162857548414605;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.1616285754841462;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414605;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.12455597792081967;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.12455597792081952;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1245559779208202;  // std dev = 5,148, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   | | | else return 0.12455597792081913;  // std dev = 3,674, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.12455597792081909;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), interaction(A, I) )
%   | | then if ( location(H, J), location(I, J) )
%   | | | then return 0.12455597792081985;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081982;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081977;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.09492800936730655;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0949280093673068;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.09492800936730639;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.09492800936730621;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.09492800936730661;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730643;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(A, H) )
%   | then return 0.09492800936730698;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then return 0.0718608885005585;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.07186088850055852;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.07186088850055804;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.07186088850055879;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.07186088850055847;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07186088850055845;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), interaction(A, I) )
%   | | then return 0.07186088850055855;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.0718608885005586;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.05418307375954948;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.054183073759549255;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.05418307375954923;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.05418307375954915;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.05418307375954908;  // std dev = 0,500, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(I, H) )
%   | | then return 0.05418307375954932;  // std dev = 0,500, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05418307375954921;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954913;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(D, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.0407602532330562;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.040760253233056196;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.0407602532330562;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.04076025323305614;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.04076025323305632;  // std dev = 5,244, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else return 0.040760253233056154;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.04076025323305636;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.04076025323305623;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695336
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.11 seconds
Total inference time: 1.167 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 1, Type: transfer, Time: 06:56:04
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695399, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 0.934, 'Learning time': 7.951}, 'CLL': -0.695336, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.167, 'Mapping results': {'Total time': 2.49932861328125, 'Possible mappings': 28, 'Finding best mapping': 0.002682924270629883, 'Knowledge compiling time': 0.06234169006347656, 'Generating paths time': 2.4012486934661865, 'Generating mappings time': 0.033050537109375}, 'Learning time': 20.061}


Start learning from scratch in target domain

Target train facts examples: 4487
Target train pos examples: 117
Target train neg examples: 117

Target test facts examples: 10528
Target test pos examples: 252
Target test neg examples: 252

WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(C, C) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.35814893509951234;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( proteinclass(A, G) )
%   | then return 0.35814893509951234;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0.3581489350995133;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( complex(D, C) )
%   | | then return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.3087411357856349;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( proteinclass(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.308741135785635;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.30874113578563483;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3087411357856348;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(A, A) )
%   | then return 0.3087411357856348;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.30874113578563733;  // std dev = 0,500, 156,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(C, C) )
%   | | then if ( proteinclass(C, D) )
%   | | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.25641236875858614;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(C, C) )
%   | | then return 0.25641236875858586;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.2564123687585882;  // std dev = 0,500, 164,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   else if ( proteinclass(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.2564123687585862;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.256412368758586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, D) )
%   | | then return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, E) )
%   | | then return 0.20613740734453945;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.20613740734454122;  // std dev = 0,500, 176,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | else if ( proteinclass(A, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.20613740734453972;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453967;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2061374073445395;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2061374073445392;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then return 0.16162857548414608;  // std dev = 0,500, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   else if ( proteinclass(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.161628575484146;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1616285754841458;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.1616285754841458;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414572;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( complex(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.16162857548414578;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1616285754841459;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16162857548414522;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16162857548414492;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then return 0.1245559779208198;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( interaction(C, A) )
%   | | then return 0.12455597792081916;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(C, D) )
%   | | | then return 0.12455597792081927;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.1245559779208189;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( proteinclass(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.12455597792081906;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081903;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.12455597792081896;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081888;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.12455597792081805;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, D) )
%   | | then return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.09492800936730636;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09492800936730639;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.09492800936730644;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else if ( proteinclass(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.09492800936730639;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0949280093673062;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.09492800936730583;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, C) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.07186088850055869;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055862;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.07186088850055815;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.07186088850055826;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   else if ( complex(A, E) )
%   | then if ( proteinclass(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.07186088850055826;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055827;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.07186088850055838;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055845;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0.07186088850055863;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.054183073759549526;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.054183073759549144;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05418307375954898;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(C, C) )
%   | | then return 0.05418307375954925;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.05418307375954923;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.0541830737595488;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( proteinclass(A, G) )
%   | then return 0.05418307375954908;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0.054183073759549276;  // std dev = 0,500, 110,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(A, A) )
%   | | then if ( proteinclass(C, D) )
%   | | | then return 0.04076025323305635;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305636;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305579;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305642;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F) )
%   | | then return 0.04076025323305618;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( phenotype(C, G) )
%   | | | then return 0.040760253233055745;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.040760253233055765;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( phenotype(A, H) )
%   | then return 0.040760253233056;  // std dev = 0,500, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else return 0.04076025323305622;  // std dev = 0,500, 104,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.916 seconds
Total inference time: 1.053 seconds
AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 1, Type: scratch, Time: 06:56:15
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.053, 'Learning time': 9.916}


Starting fold 2

Target predicate: enzyme 

Mapping Results
   Knowledge compiling time   = 0.05911564826965332
   Generating paths time   = 2.4864940643310547
   Generating mappings time   = 0.042582035064697266
   Possible mappings   = 28
   Finding best mapping   = 0.0033369064331054688
   Total time   = 2.591534376144409


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: enzyme 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;enzyme(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;enzyme(A, B) :- interaction(A, C).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;enzyme(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;enzyme(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;enzyme(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;enzyme(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;enzyme(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;enzyme(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;enzyme(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;enzyme(A, B) :- interaction(A, C).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3581489350995131;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.3087411357856348;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856349;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856347;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2564123687585864;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.25641236875858653;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2564123687585866;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585864;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.2564123687585857;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585866;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453953;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445395;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.20613740734453917;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414683;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.16162857548414672;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414672;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16162857548414727;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | else return 0.16162857548414652;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.1245559779208198;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12455597792081984;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081974;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792081981;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.12455597792081963;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792081943;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081949;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0949280093673068;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09492800936730694;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730685;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then return 0.09492800936730672;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0.09492800936730682;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730648;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730682;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055855;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.07186088850055862;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055851;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055851;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.0718608885005585;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055908;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.054183073759549574;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.05418307375954945;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.054183073759549304;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375954963;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.05418307375954922;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954945;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.040760253233056314;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.0407602532330561;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04076025323305617;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.040760253233056196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.04076025323305599;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305634;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.704926
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.272 seconds
Total inference time: 1.375 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [1.0, 2, 2], 'true,true,true,true': [2.0, 8, 8], 'true,true,false,false': [1.0, 2, 2], 'true,false': [4.899, 48, 48], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,true,false,true': [0.707, 1, 1], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [2.449, 12, 12], 'true,false,false,false': [0.0, 0, 0], 'false,true,true,true': [1.871, 7, 7], 'true,false,false,true': [1.0, 2, 2], 'true,false,true,false': [1.581, 5, 5], 'true,false,true,true': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [3.873, 30, 30]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [1.225, 3, 3], 'true,false,true,true': [2.236, 10, 10], 'true,true,true': [2.121, 9, 9], 'true,true,false,false': [1.0, 2, 2], 'true,false,true,false': [4.183, 35, 35], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.707, 1, 1], 'true,false,false': [1.225, 3, 3]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [2.236, 10, 10], 'true,true,false': [1.0, 2, 2], 'false,true,true,true': [1.225, 3, 3], 'true,false,false': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true,false': [4.183, 35, 35], 'true,true,true': [2.236, 10, 10]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [1.225, 3, 3], 'true,true,false': [1.225, 3, 3], 'false,true,true,true': [1.225, 3, 3], 'true,false,false': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true,false': [4.583, 42, 42], 'true,true,true': [2.121, 9, 9]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.0, 2, 2], 'true,true,true,true': [2.0, 8, 8], 'true,false,false': [1.0, 2, 2], 'false,true,false': [3.873, 30, 30], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [2.449, 12, 12], 'false,true,true,true': [1.871, 7, 7], 'true,true,true,false': [1.0, 2, 2]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.225, 3, 3], 'true,true,true,true': [2.0, 8, 8], 'true,false,false': [1.0, 2, 2], 'false,true,false': [3.873, 30, 30], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [2.449, 12, 12], 'false,true,true,true': [1.871, 7, 7], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,true,false': [1.225, 3, 3], 'true,false,false,true': [1.0, 2, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [3.873, 30, 30], 'false,false': [0.0, 0, 0], 'true,true,true': [2.121, 9, 9], 'true,false,true': [2.449, 12, 12], 'false,true,true,true': [1.871, 7, 7]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [1.225, 3, 3], 'true,true,true,true': [2.0, 8, 8], 'true,false,false': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'true,false,true': [4.743, 45, 45], 'false,true,true,true': [1.0, 2, 2], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [2.449, 12, 12], 'true,false,false,false': [0.0, 0, 0], 'false,true,true,true': [1.871, 7, 7], 'true,false,false,true': [1.0, 2, 2], 'true,false,true,false': [1.581, 5, 5], 'true,false,true,true': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [3.873, 30, 30]}]]
[{'': [0.24999999999999975, 0.24999999999999992], 'false,true,true': [0.25, 0.25], 'true,true': [0.25, 0.24999999999999992], 'true,true,false': [0.25, 0.25], 'false,true': [0.24999999999999992, nan], 'false': [0.24999999999999992, nan], 'true,true,true': [0.24999999999999997, 0.25], 'true': [0.24999999999999956, 0.25000000000000017]}, {'': [0.25000000000000083, 0.25000000000000105], 'false,true,true': [0.25, nan], 'true,false,true': [0.25000000000000006, 0.25], 'true,false': [0.25000000000000017, 0.25000000000000006], 'false,true': [0.25, 0.25000000000000094], 'false': [0.25000000000000105, nan], 'true,false,false': [0.25000000000000006, nan], 'true': [0.2500000000000002, 0.25000000000000006]}, {'': [0.2500000000000003, 0.24999999999999997], 'true,true': [0.2500000000000001, 0.24999999999999997], 'true,true,false': [0.25, 0.24999999999999994], 'true,false,true': [0.25000000000000006, 0.2499999999999995], 'true,false': [0.24999999999999936, 0.25], 'false,true': [0.24999999999999997, nan], 'false': [0.24999999999999997, nan], 'true': [0.24999999999999997, 0.24999999999999914]}, {'': [0.2500000000000002, 0.24999999999999997], 'true,true': [0.2500000000000002, 0.25], 'false': [0.24999999999999997, nan], 'true,false': [0.25000000000000094, 0.24999999999999997], 'false,true': [0.24999999999999997, nan], 'true': [0.2500000000000002, 0.2500000000000008], 'true,false,true': [0.2500000000000002, 0.25000000000000094], 'false,true,true': [0.24999999999999997, nan]}, {'': [0.2500000000000001, 0.25], 'false,true,true': [0.25, nan], 'true,true': [0.2499999999999998, 0.25], 'true,false,true': [0.25, 0.2499999999999996], 'true,false': [0.2499999999999997, 0.25], 'false,true': [0.25, nan], 'false': [0.25, nan], 'true': [0.24999999999999978, 0.24999999999999964]}, {'': [0.25000000000000006, 0.24999999999999986], 'true,true': [0.24999999999999994, 0.25], 'false,true,true': [0.25, nan], 'true,false': [0.2499999999999998, 0.24999999999999997], 'false,true': [0.25, 0.25], 'false': [0.24999999999999986, nan], 'true,true,true': [0.24999999999999994, 0.25000000000000006], 'true': [0.2499999999999999, 0.2499999999999998]}, {'': [0.24999999999999986, 0.24999999999999986], 'true,true': [0.25000000000000006, 0.25], 'false,true,true': [0.25000000000000017, nan], 'true,false': [0.25000000000000006, 0.25], 'false,true': [0.25000000000000017, 0.2499999999999999], 'false': [0.24999999999999986, nan], 'true,true,true': [0.25, 0.25], 'true': [0.25000000000000017, 0.25000000000000017]}, {'': [0.24999999999999967, 0.2499999999999996], 'true,true': [0.2500000000000001, 0.25], 'false,true,true': [0.25000000000000006, nan], 'true,false,false': [0.25, nan], 'false,true': [0.25000000000000006, 0.24999999999999967], 'false': [0.2499999999999996, nan], 'true,false': [0.25000000000000006, 0.25], 'true': [0.2500000000000001, 0.25000000000000006]}, {'': [0.24999999999999936, 0.25], 'false,true,true': [0.24999999999999997, 0.24999999999999997], 'true,true': [0.25, 0.25], 'true,false': [0.24999999999999953, 0.25], 'false,true': [0.25, nan], 'false': [0.25, nan], 'true,true,true': [0.24999999999999997, 0.24999999999999997], 'true': [0.24999999999999997, 0.24999999999999944]}, {'': [0.25, 0.24999999999999986], 'false,true,true': [0.25, nan], 'false': [0.24999999999999986, nan], 'true,false,false': [0.25, nan], 'false,true': [0.25, 0.24999999999999994], 'true': [0.25000000000000006, 0.25000000000000006], 'true,false': [0.25000000000000006, 0.25], 'true,false,true': [0.25000000000000006, 0.24999999999999994]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;enzyme(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;enzyme(A, B) :- interaction(A, C).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;enzyme(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;enzyme(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;enzyme(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;enzyme(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;enzyme(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;enzyme(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;enzyme(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;enzyme(A, B) :- interaction(A, C).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.35814893509951223;  // std dev = 0,500, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( location(A, E) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.35814893509951196;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.35814893509951123;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.308741135785635;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.3087411357856351;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.30874113578563483;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.308741135785635;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.3087411357856348;  // std dev = 3,240, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0.2564123687585864;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, C) )
%   | | then return 0.2564123687585863;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.25641236875858664;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.2061374073445398;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20613740734453984;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.20613740734453975;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.20613740734453923;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.2061374073445399;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.20613740734453978;  // std dev = 0,500, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414683;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414686;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1616285754841475;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | else return 0.1616285754841468;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12455597792081978;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12455597792081974;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1245559779208198;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792081984;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.12455597792081977;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.12455597792082003;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0949280093673068;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.0949280093673068;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.09492800936730698;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09492800936730694;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.0949280093673068;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.0949280093673068;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07186088850055848;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0718608885005585;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.07186088850055856;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A) )
%   | then return 0.07186088850055904;  // std dev = 0,500, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954923;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.054183073759549255;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375954958;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0.054183073759549165;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954945;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( proteinclass(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.040760253233056216;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.040760253233056196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.040760253233056196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0407602532330562;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.040760253233056265;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04076025323305622;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.040760253233056196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04076025323305636;  // std dev = 0,500, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.700956
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.144 seconds
Total inference time: 1.249 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 2, Type: transfer, Time: 06:56:30
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.704926, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.375, 'Learning time': 4.272}, 'CLL': -0.700956, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.249, 'Mapping results': {'Total time': 2.591534376144409, 'Possible mappings': 28, 'Finding best mapping': 0.0033369064331054688, 'Knowledge compiling time': 0.05911564826965332, 'Generating paths time': 2.4864940643310547, 'Generating mappings time': 0.042582035064697266}, 'Learning time': 8.416}


Start learning from scratch in target domain

Target train facts examples: 3897
Target train pos examples: 63
Target train neg examples: 63

Target test facts examples: 11118
Target test pos examples: 306
Target test neg examples: 306

WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( location(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.35814893509951234;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3581489350995111;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else if ( interaction(E, D) )
%   | | | then return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( location(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3087411357856348;  // std dev = 4,062, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | else if ( interaction(E, D) )
%   | | | then return 0.3087411357856348;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.25641236875858614;  // std dev = 0,500, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( proteinclass(A, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.2564123687585865;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.25641236875858664;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585865;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.2564123687585865;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585867;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2564123687585866;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585865;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then return 0.20613740734453972;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, C) )
%   | then if ( interaction(D, A) )
%   | | then if ( location(D, C) )
%   | | | then return 0.20613740734453898;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.2061374073445397;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.20613740734453972;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.1616285754841467;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.16162857548414689;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16162857548414689;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( interaction(C, C) )
%   | | then return 0.1616285754841468;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(C, D) )
%   | | | then return 0.16162857548414697;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1616285754841471;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.16162857548414694;  // std dev = 0,500, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.16162857548414702;  // std dev = 0,500, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else return 0.1616285754841467;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( location(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.12455597792081975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1245559779208201;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.12455597792081978;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12455597792081997;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( proteinclass(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.12455597792082;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12455597792081993;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.12455597792081988;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12455597792081995;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   else return 0.12455597792081975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.09492800936730685;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.09492800936730705;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.09492800936730711;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.09492800936730703;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09492800936730696;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else return 0.09492800936730685;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(C, A) )
%   | | then if ( proteinclass(A, D) )
%   | | | then return 0.0718608885005587;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055863;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07186088850055865;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.07186088850055873;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( location(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.07186088850055894;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.07186088850055868;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.07186088850055888;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0718608885005586;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else return 0.07186088850055862;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then return 0.05418307375954935;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, C) )
%   | then if ( interaction(D, A) )
%   | | then if ( location(D, C) )
%   | | | then return 0.05418307375954967;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | | else return 0.05418307375954926;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.05418307375954909;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.05418307375954935;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( complex(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.040760253233056196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305654;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04076025323305623;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( proteinclass(A, E) )
%   | | then return 0.04076025323305634;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.04076025323305641;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, A) )
%   | | then return 0.04076025323305622;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.040760253233056314;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.040760253233056244;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.040760253233056355;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 9.527 seconds
Total inference time: 1.129 seconds
AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 2, Type: scratch, Time: 06:56:41
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.129, 'Learning time': 9.527}


Starting fold 3

Target predicate: enzyme 

Mapping Results
   Knowledge compiling time   = 0.05512690544128418
   Generating paths time   = 2.4645581245422363
   Generating mappings time   = 0.042150020599365234
   Possible mappings   = 28
   Finding best mapping   = 0.0034093856811523438
   Total time   = 2.5652506351470947


Best mapping found: ['follows(A,B) -> interaction(B,A)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> function(A,B)'] 

Transferred target predicate: enzyme 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;enzyme(A, B) :- interaction(A, C).;true;true
0;true,true;interaction(A, D), interaction(C, D).;true;true
0;true,true,false;interaction(E, A), interaction(C, E).;false;false
0;false,true,true;interaction(G, A).;false;false
0;false,true;interaction(G, F).;true;false
0;false;interaction(F, A).;true;false
0;true,true,true;interaction(D, C).;false;false
0;true;interaction(C, A).;true;false
1;;enzyme(A, B) :- interaction(C, A).;true;true
1;false,true,true;function(F, H), function(G, H).;false;false
1;false;interaction(A, F).;true;false
1;true,false,false;interaction(A, E).;false;false
1;false,true;interaction(G, F), interaction(A, G).;true;false
1;true;interaction(A, C).;false;true
1;true,false;interaction(D, C).;true;true
1;true,false,true;interaction(D, A).;false;false
2;;enzyme(A, B) :- interaction(A, C).;true;true
2;true,true;interaction(A, D), interaction(C, D).;false;true
2;true,true,false;interaction(E, A), interaction(C, E).;false;false
2;false;interaction(G, A).;true;false
2;true,false;interaction(C, F).;true;false
2;false,true;interaction(H, G).;false;false
2;true,false,true;interaction(A, F).;false;false
2;true;interaction(C, A).;true;true
3;;enzyme(A, B) :- interaction(A, C).;true;true
3;true,true;interaction(D, A), interaction(D, C).;false;false
3;false;interaction(F, A).;true;false
3;true,false;interaction(C, E).;true;false
3;false,true;interaction(G, F).;true;false
3;true,false,true;interaction(A, E).;false;false
3;true;interaction(C, A).;true;true
3;false,true,true;interaction(F, G).;false;false
4;;enzyme(A, B) :- interaction(A, C).;true;true
4;true,true;interaction(A, D), interaction(C, D).;false;false
4;false;interaction(F, A).;true;false
4;true,false;interaction(C, E).;true;false
4;false,true;interaction(G, F).;true;false
4;true,false,true;interaction(E, A).;false;false
4;true;interaction(C, A).;true;true
4;false,true,true;interaction(F, G).;false;false
5;;enzyme(A, B) :- interaction(C, A).;true;true
5;true,true;interaction(D, A), interaction(D, C).;true;false
5;false,true,true;function(F, H), function(G, H).;false;false
5;true,false;interaction(E, C).;false;false
5;false,true;interaction(G, F), interaction(A, G).;true;false
5;false;interaction(A, F).;true;false
5;true,true,true;interaction(A, D).;false;false
5;true;interaction(A, C).;true;true
6;;enzyme(A, B) :- interaction(C, A).;true;true
6;true,true;interaction(A, D), interaction(C, D).;true;false
6;false,true,true;function(F, H), function(G, H).;false;false
6;true,false;interaction(E, C).;false;false
6;false,true;interaction(G, F), interaction(A, G).;true;false
6;false;interaction(A, F).;true;false
6;true,true,true;interaction(D, C).;false;false
6;true;interaction(A, C).;true;true
7;;enzyme(A, B) :- interaction(C, A).;true;true
7;true,true;interaction(D, C), interaction(A, D).;false;false
7;false,true,true;function(G, I), function(H, I).;false;false
7;true,false,false;interaction(A, F).;false;false
7;false,true;interaction(H, G), interaction(A, H).;true;false
7;false;interaction(A, G).;true;false
7;true,false;interaction(E, C).;false;true
7;true;interaction(A, C).;true;true
8;;enzyme(A, B) :- interaction(A, C).;true;true
8;true,true;interaction(A, D), interaction(C, D).;true;false
8;false,true,true;interaction(G, A).;false;false
8;true,false;interaction(C, E).;false;false
8;false,true;interaction(G, F).;true;false
8;false;interaction(F, A).;true;false
8;true,true,true;interaction(D, C).;false;false
8;true;interaction(C, A).;true;true
9;;enzyme(A, B) :- interaction(C, A).;true;true
9;false,true,true;function(F, H), function(G, H).;false;false
9;false;interaction(A, F).;true;false
9;true,false,false;interaction(A, E).;false;false
9;false,true;interaction(G, F), interaction(A, G).;true;false
9;true;interaction(A, C).;false;true
9;true,false;interaction(D, C).;true;true
9;true,false,true;interaction(D, A).;false;false


WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3581489350995126;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.35814893509951234;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.3087411357856348;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.3087411357856347;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.3087411357856347;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.308741135785635;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3087411357856348;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.2564123687585864;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, A), interaction(C, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.25641236875858653;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.25641236875858664;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.2564123687585864;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.2564123687585861;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else return 0.2564123687585864;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.2061374073445398;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.20613740734454014;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.2061374073445397;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.20613740734453956;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.20613740734453972;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2061374073445401;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.2061374073445397;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.1616285754841468;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1616285754841469;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.16162857548414683;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.16162857548414683;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16162857548414652;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.16162857548414683;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.12455597792081974;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then return 0.12455597792082002;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else return 0.12455597792081977;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.12455597792081964;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081981;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then return 0.09492800936730722;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else return 0.09492800936730661;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.09492800936730643;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730662;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then return 0.0718608885005585;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, C) )
%   | | then return 0.07186088850055855;  // std dev = 4,637, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.07186088850055841;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055856;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( function(G, I), function(H, I) )
%   | | | then return 0.0718608885005585;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0718608885005585;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then return 0.054183073759549435;  // std dev = 4,183, 70,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else return 0.0541830737595491;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.05418307375954923;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.05418307375954951;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0.05418307375954956;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then return 0.04076025323305629;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.04076025323305604;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.040760253233056286;  // std dev = 3,606, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.04076025323305607;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04076025323305621;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.04076025323305628;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.040760253233056314;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.696383
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.855 seconds
Total inference time: 1.283 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'false,true,true': 'interaction(G, A)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'false,true,true,true': [2.0, 8, 8], 'true,true,true,true': [1.732, 6, 6], 'true,true,false,false': [1.225, 3, 3], 'true,false': [4.637, 43, 43], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.0, 18, 18], 'true,true,false,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [2.121, 9, 9], 'true,false,false,false': [1.871, 7, 7], 'false,true,true,true': [2.345, 11, 11], 'true,false,false,true': [1.225, 3, 3], 'true,false,true,false': [3.606, 26, 26], 'true,false,true,true': [2.915, 17, 17], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.449, 12, 12]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'true,true,false': 'interaction(E, A), interaction(C, E)', 'true,false': 'interaction(C, F)', 'false,true': 'interaction(H, G)', 'false': 'interaction(G, A)', 'true,false,true': 'interaction(A, F)', 'true': 'interaction(C, A)'}, {'false,true,true': [3.606, 26, 26], 'true,false,true,true': [3.317, 22, 22], 'true,true,true': [1.732, 6, 6], 'true,true,false,false': [1.225, 3, 3], 'true,false,true,false': [2.55, 13, 13], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,false': [2.0, 8, 8]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [3.317, 22, 22], 'true,true,false': [1.225, 3, 3], 'false,true,true,true': [2.121, 9, 9], 'true,false,false': [2.0, 8, 8], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.915, 17, 17], 'true,false,true,false': [2.55, 13, 13], 'true,true,true': [1.732, 6, 6]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(F, G)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(C, A)'}, {'true,false,true,true': [0.0, 0, 0], 'true,true,false': [1.225, 3, 3], 'false,true,true,true': [2.121, 9, 9], 'true,false,false': [2.0, 8, 8], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.915, 17, 17], 'true,false,true,false': [4.183, 35, 35], 'true,true,true': [1.732, 6, 6]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(A, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [1.225, 3, 3], 'true,true,true,true': [1.732, 6, 6], 'true,false,false': [2.236, 10, 10], 'false,true,false': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [4.637, 43, 43], 'false,true,true,true': [2.345, 11, 11], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true,false': [1.225, 3, 3], 'true,true,true,true': [1.732, 6, 6], 'true,false,false': [2.236, 10, 10], 'false,true,false': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [4.637, 43, 43], 'false,true,true,true': [2.345, 11, 11], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, C), interaction(A, D)', 'false,true,true': 'function(G, I), function(H, I)', 'true,false,false': 'interaction(A, F)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'true': 'interaction(A, C)'}, {'true,false,false,false': [1.871, 7, 7], 'true,true,false': [1.225, 3, 3], 'true,false,false,true': [1.225, 3, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'true,true,true': [1.732, 6, 6], 'true,false,true': [4.637, 43, 43], 'false,true,true,true': [2.345, 11, 11]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, C)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.225, 3, 3], 'true,true,true,true': [1.732, 6, 6], 'true,false,false': [2.0, 8, 8], 'false,true,false': [1.871, 7, 7], 'false,false': [0.0, 0, 0], 'false,true,true,false': [3.0, 18, 18], 'true,false,true': [4.183, 35, 35], 'false,true,true,true': [2.0, 8, 8], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'false,true,true': 'function(F, H), function(G, H)', 'true,false,true': 'interaction(D, A)', 'true,false,false': 'interaction(A, E)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'true,false': 'interaction(D, C)', 'true': 'interaction(A, C)'}, {'true,true': [2.121, 9, 9], 'true,false,false,false': [1.871, 7, 7], 'false,true,true,true': [2.345, 11, 11], 'true,false,false,true': [1.225, 3, 3], 'true,false,true,false': [3.606, 26, 26], 'true,false,true,true': [2.915, 17, 17], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.449, 12, 12]}]]
[{'': [0.25, 0.2500000000000016], 'false,true,true': [0.24999999999999997, 0.2499999999999995], 'true,true': [0.25, 0.24999999999999992], 'true,true,false': [nan, 0.24999999999999992], 'false,true': [0.2500000000000014, 0.25], 'false': [0.2500000000000016, nan], 'true,true,true': [0.25, nan], 'true': [0.25, 0.25000000000000056]}, {'': [0.24999999999999759, 0.24999999999999992], 'false,true,true': [0.25000000000000006, nan], 'true,false,true': [0.25, 0.25000000000000094], 'true,false': [0.25000000000000067, 0.2500000000000001], 'false,true': [0.25000000000000006, 0.25000000000000017], 'false': [0.24999999999999992, nan], 'true,false,false': [0.2499999999999999, 0.2500000000000001], 'true': [0.25000000000000017, 0.2499999999999979]}, {'': [0.2499999999999994, 0.24999999999999953], 'true,true': [0.25000000000000006, 0.25], 'true,true,false': [nan, 0.25], 'true,false,true': [0.25, 0.24999999999999994], 'true,false': [0.2499999999999995, 0.25], 'false,true': [0.24999999999999997, 0.25], 'false': [0.24999999999999953, nan], 'true': [0.25000000000000006, 0.2499999999999995]}, {'': [0.25000000000000056, 0.25000000000000094], 'true,true': [0.24999999999999992, 0.24999999999999997], 'false,true,true': [0.2499999999999999, 0.24999999999999964], 'true,false,true': [0.24999999999999964, 0.25000000000000017], 'true,false': [0.25000000000000094, 0.25000000000000017], 'false,true': [0.24999999999999986, 0.25], 'false': [0.25000000000000094, nan], 'true': [0.2500000000000002, 0.25000000000000094]}, {'': [0.24999999999999942, 0.24999999999999978], 'false,true,true': [0.2499999999999998, 0.24999999999999983], 'true,true': [0.24999999999999997, 0.25], 'true,false,true': [nan, 0.2499999999999997], 'true,false': [0.2499999999999997, 0.24999999999999986], 'false,true': [0.2499999999999999, 0.24999999999999994], 'false': [0.24999999999999978, nan], 'true': [0.24999999999999975, 0.2499999999999995]}, {'': [0.24999999999999967, 0.25], 'false,true,true': [0.24999999999999975, nan], 'true,true': [0.25000000000000006, 0.25], 'true,false': [0.24999999999999983, 0.24999999999999986], 'false,true': [0.24999999999999975, 0.24999999999999986], 'false': [0.25, nan], 'true,true,true': [0.25000000000000006, nan], 'true': [0.2499999999999999, 0.2499999999999996]}, {'': [0.24999999999999947, 0.2499999999999997], 'false,true,true': [0.2500000000000001, nan], 'true,true': [0.25, 0.25], 'true,false': [0.24999999999999975, 0.25000000000000017], 'false,true': [0.2500000000000001, 0.2500000000000002], 'false': [0.2499999999999997, nan], 'true,true,true': [0.25, nan], 'true': [0.2500000000000001, 0.24999999999999956]}, {'': [0.2499999999999995, 0.2499999999999996], 'false,true,true': [0.25000000000000006, nan], 'true,true': [0.25000000000000006, 0.24999999999999997], 'true,false': [0.2499999999999995, 0.25000000000000006], 'false,true': [0.25000000000000006, 0.25000000000000006], 'false': [0.2499999999999996, nan], 'true,false,false': [0.25, 0.2500000000000001], 'true': [0.25000000000000006, 0.24999999999999947]}, {'': [0.24999999999999936, 0.2500000000000001], 'false,true,true': [0.2499999999999999, 0.24999999999999994], 'true,true': [0.2499999999999999, 0.25], 'true,false': [0.25000000000000006, 0.25], 'false,true': [0.2500000000000002, 0.24999999999999997], 'false': [0.2500000000000001, nan], 'true,true,true': [0.2499999999999999, nan], 'true': [0.2499999999999999, 0.24999999999999964]}, {'': [0.25000000000000006, 0.25], 'false,true,true': [0.25000000000000006, nan], 'true,false,true': [0.25, 0.24999999999999997], 'true,false': [0.2499999999999999, 0.25000000000000006], 'false,true': [0.25000000000000006, 0.2500000000000001], 'false': [0.25, nan], 'true,false,false': [0.25, 0.2500000000000001], 'true': [0.25, 0.2499999999999999]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;enzyme(A, B) :- interaction(A, C).;true;true', '0;true,true;interaction(A, D), interaction(C, D).;true;true', '0;true,true,false;interaction(E, A), interaction(C, E).;true;true', '0;false,true,true;interaction(G, A).;true;true', '0;false,true;interaction(G, F).;true;true', '0;false;interaction(F, A).;true;true', '0;true,true,true;interaction(D, C).;true;true', '0;true;interaction(C, A).;true;true', '1;;enzyme(A, B) :- interaction(C, A).;true;true', '1;false,true,true;function(F, H), function(G, H).;true;true', '1;false;interaction(A, F).;true;true', '1;true,false,false;interaction(A, E).;true;true', '1;false,true;interaction(G, F), interaction(A, G).;true;true', '1;true;interaction(A, C).;true;true', '1;true,false;interaction(D, C).;true;true', '1;true,false,true;interaction(D, A).;true;true', '2;;enzyme(A, B) :- interaction(A, C).;true;true', '2;true,true;interaction(A, D), interaction(C, D).;true;true', '2;true,true,false;interaction(E, A), interaction(C, E).;true;true', '2;false;interaction(G, A).;true;true', '2;true,false;interaction(C, F).;true;true', '2;false,true;interaction(H, G).;true;true', '2;true,false,true;interaction(A, F).;true;true', '2;true;interaction(C, A).;true;true', '3;;enzyme(A, B) :- interaction(A, C).;true;true', '3;true,true;interaction(D, A), interaction(D, C).;true;true', '3;false;interaction(F, A).;true;true', '3;true,false;interaction(C, E).;true;true', '3;false,true;interaction(G, F).;true;true', '3;true,false,true;interaction(A, E).;true;true', '3;true;interaction(C, A).;true;true', '3;false,true,true;interaction(F, G).;true;true', '4;;enzyme(A, B) :- interaction(A, C).;true;true', '4;true,true;interaction(A, D), interaction(C, D).;true;true', '4;false;interaction(F, A).;true;true', '4;true,false;interaction(C, E).;true;true', '4;false,true;interaction(G, F).;true;true', '4;true,false,true;interaction(E, A).;true;true', '4;true;interaction(C, A).;true;true', '4;false,true,true;interaction(F, G).;true;true', '5;;enzyme(A, B) :- interaction(C, A).;true;true', '5;true,true;interaction(D, A), interaction(D, C).;true;true', '5;false,true,true;function(F, H), function(G, H).;true;true', '5;true,false;interaction(E, C).;true;true', '5;false,true;interaction(G, F), interaction(A, G).;true;true', '5;false;interaction(A, F).;true;true', '5;true,true,true;interaction(A, D).;true;true', '5;true;interaction(A, C).;true;true', '6;;enzyme(A, B) :- interaction(C, A).;true;true', '6;true,true;interaction(A, D), interaction(C, D).;true;true', '6;false,true,true;function(F, H), function(G, H).;true;true', '6;true,false;interaction(E, C).;true;true', '6;false,true;interaction(G, F), interaction(A, G).;true;true', '6;false;interaction(A, F).;true;true', '6;true,true,true;interaction(D, C).;true;true', '6;true;interaction(A, C).;true;true', '7;;enzyme(A, B) :- interaction(C, A).;true;true', '7;true,true;interaction(D, C), interaction(A, D).;true;true', '7;false,true,true;function(G, I), function(H, I).;true;true', '7;true,false,false;interaction(A, F).;true;true', '7;false,true;interaction(H, G), interaction(A, H).;true;true', '7;false;interaction(A, G).;true;true', '7;true,false;interaction(E, C).;true;true', '7;true;interaction(A, C).;true;true', '8;;enzyme(A, B) :- interaction(A, C).;true;true', '8;true,true;interaction(A, D), interaction(C, D).;true;true', '8;false,true,true;interaction(G, A).;true;true', '8;true,false;interaction(C, E).;true;true', '8;false,true;interaction(G, F).;true;true', '8;false;interaction(F, A).;true;true', '8;true,true,true;interaction(D, C).;true;true', '8;true;interaction(C, A).;true;true', '9;;enzyme(A, B) :- interaction(C, A).;true;true', '9;false,true,true;function(F, H), function(G, H).;true;true', '9;false;interaction(A, F).;true;true', '9;true,false,false;interaction(A, E).;true;true', '9;false,true;interaction(G, F), interaction(A, G).;true;true', '9;true;interaction(A, C).;true;true', '9;true,false;interaction(D, C).;true;true', '9;true,false,true;interaction(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.35814893509951234;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(D, A) )
%   | | then return 0.35814893509951196;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.35814893509951234;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.35814893509951234;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.35814893509951234;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( complex(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.30874113578563506;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.30874113578563694;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856348;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.2564123687585864;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.2564123687585862;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.25641236875858653;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.25641236875858636;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.25641236875858614;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.25641236875858564;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.256412368758586;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.25641236875858614;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.20613740734453959;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2061374073445397;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.2061374073445396;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.20613740734453948;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then return 0.20613740734453875;  // std dev = 0,500, 52,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.20613740734453945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20613740734453945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.16162857548414722;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.16162857548414677;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1616285754841463;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.1616285754841464;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16162857548414636;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.12455597792081974;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.1245559779208202;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.12455597792081981;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1245559779208197;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.09492800936730683;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.0949280093673065;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.09492800936730665;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, H) )
%   | | | then return 0.09492800936730678;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0949280093673068;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, C), interaction(A, D) )
%   | | then if ( proteinclass(A, E) )
%   | | | then return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0718608885005586;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.07186088850055851;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.0718608885005588;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( function(F, H), function(G, H) )
%   | | | then return 0.0718608885005585;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.07186088850055851;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0718608885005585;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, C) )
%   | | | then return 0.054183073759549526;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05418307375954937;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.05418307375954936;  // std dev = 0,500, 86,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.054183073759549186;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.054183073759549207;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( proteinclass(A, G) )
%   | | | then return 0.054183073759549005;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.054183073759549005;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.04076025323305626;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.04076025323305635;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( function(E, G), function(F, G) )
%   | | | then return 0.04076025323305628;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( proteinclass(A, H) )
%   | | | then return 0.0407602532330562;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.040760253233056175;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695866
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 5.054 seconds
Total inference time: 1.321 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 3, Type: transfer, Time: 06:56:55
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.696383, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.283, 'Learning time': 3.855}, 'CLL': -0.695866, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.321, 'Mapping results': {'Total time': 2.5652506351470947, 'Possible mappings': 28, 'Finding best mapping': 0.0034093856811523438, 'Knowledge compiling time': 0.05512690544128418, 'Generating paths time': 2.4645581245422363, 'Generating mappings time': 0.042150020599365234}, 'Learning time': 8.909}


Start learning from scratch in target domain

Target train facts examples: 3428
Target train pos examples: 85
Target train neg examples: 85

Target test facts examples: 11587
Target test pos examples: 284
Target test neg examples: 284

WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C) )
%   | then return 0.35814893509951234;  // std dev = 0,500, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(D, C) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.3581489350995112;  // std dev = 3,742, 56,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | else if ( complex(C, E) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( proteinclass(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( location(D, C) )
%   | | then return 0.308741135785636;  // std dev = 0,500, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( proteinclass(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3087411357856347;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, H) )
%   | | then return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.30874113578563495;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.30874113578563506;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.2564123687585862;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.25641236875858625;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( proteinclass(D, E) )
%   | | | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.25641236875858653;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.25641236875858575;  // std dev = 3,873, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else if ( location(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.25641236875858653;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.25641236875858653;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0.25641236875858653;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( location(D, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20613740734453945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2061374073445389;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2061374073445398;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( proteinclass(A, E) )
%   | | then return 0.20613740734453978;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.20613740734454009;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, F) )
%   | | then return 0.2061374073445397;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2061374073445399;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.20613740734453978;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16162857548414655;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414664;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( proteinclass(D, C) )
%   | | | then return 0.16162857548414689;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16162857548414672;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.1616285754841467;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841467;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16162857548414677;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return 0.1616285754841466;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.1616285754841474;  // std dev = 0,500, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(A, A) )
%   | then return 0.12455597792081952;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A) )
%   | | then if ( proteinclass(D, C) )
%   | | | then return 0.12455597792081993;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1245559779208198;  // std dev = 3,317, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.12455597792081971;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12455597792081974;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( location(A, F) )
%   | then if ( interaction(A, G) )
%   | | then return 0.12455597792081952;  // std dev = 0,500, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else return 0.12455597792081952;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then return 0.12455597792081967;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.12455597792081961;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.09492800936730683;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( proteinclass(C, D) )
%   | | | then return 0.09492800936730694;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730693;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.09492800936730754;  // std dev = 0,500, 106,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else if ( location(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.09492800936730685;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730658;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0.09492800936730672;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( complex(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.07186088850055865;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055851;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.07186088850055847;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055854;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( proteinclass(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.07186088850055847;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07186088850055859;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.0718608885005583;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055837;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.071860888500559;  // std dev = 0,500, 92,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( proteinclass(A, C) )
%   | then return 0.05418307375954924;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.05418307375954922;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.054183073759549165;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.054183073759548984;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.05418307375954958;  // std dev = 0,500, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | else if ( proteinclass(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.05418307375954934;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05418307375954922;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.054183073759549234;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05418307375954912;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( proteinclass(A, C) )
%   then if ( interaction(A, D) )
%   | then if ( proteinclass(D, C) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.040760253233056175;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305632;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.04076025323305606;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.04076025323305621;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.040760253233056085;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0407602532330562;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( proteinclass(G, C), interaction(G, H) )
%   | | | then return 0.04076025323305582;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04076025323305598;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.04076025323305632;  // std dev = 0,500, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.287 seconds
Total inference time: 1.152 seconds
AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 3, Type: scratch, Time: 06:57:05
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.152, 'Learning time': 8.287}


Starting fold 4

Target predicate: enzyme 

Mapping Results
   Knowledge compiling time   = 0.10301423072814941
   Generating paths time   = 1.986649513244629
   Generating mappings time   = 0.03356051445007324
   Possible mappings   = 28
   Finding best mapping   = 0.0026705265045166016
   Total time   = 2.125899076461792


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Transferred target predicate: enzyme 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;enzyme(A, B) :- interaction(C, A).;true;true
0;true,true;interaction(D, A), interaction(D, C).;true;true
0;true,true,false;interaction(A, E), interaction(E, C).;false;false
0;false,true,true;interaction(A, G).;false;false
0;false,true;interaction(F, G).;true;false
0;false;interaction(A, F).;true;false
0;true,true,true;interaction(C, D).;false;false
0;true;interaction(A, C).;true;false
1;;enzyme(A, B) :- interaction(A, C).;true;true
1;false,true,true;location(F, H), location(G, H).;false;false
1;false;interaction(F, A).;true;false
1;true,false,false;interaction(E, A).;false;false
1;false,true;interaction(F, G), interaction(G, A).;true;false
1;true;interaction(C, A).;false;true
1;true,false;interaction(C, D).;true;true
1;true,false,true;interaction(A, D).;false;false
2;;enzyme(A, B) :- interaction(C, A).;true;true
2;true,true;interaction(D, A), interaction(D, C).;false;true
2;true,true,false;interaction(A, E), interaction(E, C).;false;false
2;false;interaction(A, G).;true;false
2;true,false;interaction(F, C).;true;false
2;false,true;interaction(G, H).;false;false
2;true,false,true;interaction(F, A).;false;false
2;true;interaction(A, C).;true;true
3;;enzyme(A, B) :- interaction(C, A).;true;true
3;true,true;interaction(A, D), interaction(C, D).;false;false
3;false;interaction(A, F).;true;false
3;true,false;interaction(E, C).;true;false
3;false,true;interaction(F, G).;true;false
3;true,false,true;interaction(E, A).;false;false
3;true;interaction(A, C).;true;true
3;false,true,true;interaction(G, F).;false;false
4;;enzyme(A, B) :- interaction(C, A).;true;true
4;true,true;interaction(D, A), interaction(D, C).;false;false
4;false;interaction(A, F).;true;false
4;true,false;interaction(E, C).;true;false
4;false,true;interaction(F, G).;true;false
4;true,false,true;interaction(A, E).;false;false
4;true;interaction(A, C).;true;true
4;false,true,true;interaction(G, F).;false;false
5;;enzyme(A, B) :- interaction(A, C).;true;true
5;true,true;interaction(A, D), interaction(C, D).;true;false
5;false,true,true;location(F, H), location(G, H).;false;false
5;true,false;interaction(C, E).;false;false
5;false,true;interaction(F, G), interaction(G, A).;true;false
5;false;interaction(F, A).;true;false
5;true,true,true;interaction(D, A).;false;false
5;true;interaction(C, A).;true;true
6;;enzyme(A, B) :- interaction(A, C).;true;true
6;true,true;interaction(D, A), interaction(D, C).;true;false
6;false,true,true;location(F, H), location(G, H).;false;false
6;true,false;interaction(C, E).;false;false
6;false,true;interaction(F, G), interaction(G, A).;true;false
6;false;interaction(F, A).;true;false
6;true,true,true;interaction(C, D).;false;false
6;true;interaction(C, A).;true;true
7;;enzyme(A, B) :- interaction(A, C).;true;true
7;true,true;interaction(C, D), interaction(D, A).;false;false
7;false,true,true;location(G, I), location(H, I).;false;false
7;true,false,false;interaction(F, A).;false;false
7;false,true;interaction(G, H), interaction(H, A).;true;false
7;false;interaction(G, A).;true;false
7;true,false;interaction(C, E).;false;true
7;true;interaction(C, A).;true;true
8;;enzyme(A, B) :- interaction(C, A).;true;true
8;true,true;interaction(D, A), interaction(D, C).;true;false
8;false,true,true;interaction(A, G).;false;false
8;true,false;interaction(E, C).;false;false
8;false,true;interaction(F, G).;true;false
8;false;interaction(A, F).;true;false
8;true,true,true;interaction(C, D).;false;false
8;true;interaction(A, C).;true;true
9;;enzyme(A, B) :- interaction(A, C).;true;true
9;false,true,true;location(F, H), location(G, H).;false;false
9;false;interaction(F, A).;true;false
9;true,false,false;interaction(E, A).;false;false
9;false,true;interaction(F, G), interaction(G, A).;true;false
9;true;interaction(C, A).;false;true
9;true,false;interaction(C, D).;true;true
9;true,false,true;interaction(A, D).;false;false


WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.35814893509951345;  // std dev = 5,831, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856348;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3087411357856347;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.3087411357856348;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.3087411357856347;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3087411357856353;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.25641236875858675;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(F, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2564123687585861;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.2564123687585857;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else return 0.25641236875858575;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2564123687585865;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.2564123687585864;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453992;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.20613740734453984;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2061374073445397;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.20613740734453906;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else return 0.20613740734454003;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.20613740734453964;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2061374073445398;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then return 0.16162857548414652;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1616285754841474;  // std dev = 4,899, 96,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=48 */
%   | | else return 0.16162857548414625;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16162857548414683;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16162857548414675;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.1245559779208196;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(C, E) )
%   | | then return 0.12455597792081927;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.12455597792081972;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.12455597792081928;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12455597792082;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730655;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.09492800936730683;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(C, E) )
%   | | then return 0.0949280093673067;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0.0949280093673068;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.09492800936730644;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09492800936730719;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then return 0.07186088850055866;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.07186088850055856;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(C, E) )
%   | | then return 0.07186088850055894;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.07186088850055843;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055855;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(G, I), location(H, I) )
%   | | | then return 0.0718608885005585;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07186088850055847;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.05418307375954946;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.054183073759549255;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.05418307375954945;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(E, C) )
%   | | then return 0.05418307375954953;  // std dev = 5,000, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else return 0.054183073759549234;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.054183073759549526;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.05418307375954949;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.04076025323305633;  // std dev = 3,162, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305637;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.04076025323305633;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.04076025323305615;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04076025323305626;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.04076025323305622;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.04076025323305621;  // std dev = 4,583, 84,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695402
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.648 seconds
Total inference time: 1.398 seconds
AUC ROC: 0.5


Structure after Parameter Learning
[['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'false,true,true': 'interaction(A, G)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'false,true,true,true': [1.732, 6, 6], 'true,true,true,true': [2.739, 15, 15], 'true,true,false,false': [1.414, 4, 4], 'true,false': [5.831, 68, 68], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.581, 5, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [3.162, 20, 20], 'true,false,false,false': [1.581, 5, 5], 'false,true,true,true': [2.121, 9, 9], 'true,false,false,true': [1.225, 3, 3], 'true,false,true,false': [2.55, 13, 13], 'true,false,true,true': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.583, 42, 42]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'true,true,false': 'interaction(A, E), interaction(E, C)', 'true,false': 'interaction(F, C)', 'false,true': 'interaction(G, H)', 'false': 'interaction(A, G)', 'true,false,true': 'interaction(F, A)', 'true': 'interaction(A, C)'}, {'false,true,true': [2.345, 11, 11], 'true,false,true,true': [2.55, 13, 13], 'true,true,true': [2.828, 16, 16], 'true,true,false,false': [1.414, 4, 4], 'true,false,true,false': [4.301, 37, 37], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,false': [3.0, 18, 18]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(E, A)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [2.55, 13, 13], 'true,true,false': [1.414, 4, 4], 'false,true,true,true': [2.0, 8, 8], 'true,false,false': [3.0, 18, 18], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'true,false,true,false': [4.301, 37, 37], 'true,true,true': [2.828, 16, 16]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(G, F)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,false,true': 'interaction(A, E)', 'true': 'interaction(A, C)'}, {'true,false,true,true': [1.0, 2, 2], 'true,true,false': [1.414, 4, 4], 'false,true,true,true': [2.0, 8, 8], 'true,false,false': [3.0, 18, 18], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.225, 3, 3], 'true,false,true,false': [4.899, 48, 48], 'true,true,true': [2.828, 16, 16]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(A, D), interaction(C, D)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(D, A)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.414, 4, 4], 'true,true,true,true': [2.828, 16, 16], 'true,false,false': [2.0, 8, 8], 'false,true,false': [4.583, 42, 42], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [3.536, 25, 25], 'false,true,true,true': [2.121, 9, 9], 'true,true,true,false': [0.0, 0, 0]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false': 'interaction(C, E)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true,false': [1.414, 4, 4], 'true,true,true,true': [2.739, 15, 15], 'true,false,false': [2.0, 8, 8], 'false,true,false': [4.583, 42, 42], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true,false,true': [3.536, 25, 25], 'false,true,true,true': [2.121, 9, 9], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'true,true': 'interaction(C, D), interaction(D, A)', 'false,true,true': 'location(G, I), location(H, I)', 'true,false,false': 'interaction(F, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false': 'interaction(G, A)', 'true,false': 'interaction(C, E)', 'true': 'interaction(C, A)'}, {'true,false,false,false': [1.581, 5, 5], 'true,true,false': [1.414, 4, 4], 'true,false,false,true': [1.225, 3, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.583, 42, 42], 'false,false': [0.0, 0, 0], 'true,true,true': [2.828, 16, 16], 'true,false,true': [3.536, 25, 25], 'false,true,true,true': [2.121, 9, 9]}], ['enzyme(A, B)', {'': 'interaction(C, A)', 'true,true': 'interaction(D, A), interaction(D, C)', 'false,true,true': 'interaction(A, G)', 'true,false': 'interaction(E, C)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F)', 'true,true,true': 'interaction(C, D)', 'true': 'interaction(A, C)'}, {'true,true,false': [1.414, 4, 4], 'true,true,true,true': [2.739, 15, 15], 'true,false,false': [3.0, 18, 18], 'false,true,false': [1.581, 5, 5], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.581, 5, 5], 'true,false,true': [5.0, 50, 50], 'false,true,true,true': [1.732, 6, 6], 'true,true,true,false': [0.707, 1, 1]}], ['enzyme(A, B)', {'': 'interaction(A, C)', 'false,true,true': 'location(F, H), location(G, H)', 'true,false,true': 'interaction(A, D)', 'true,false,false': 'interaction(E, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'true,false': 'interaction(C, D)', 'true': 'interaction(C, A)'}, {'true,true': [3.162, 20, 20], 'true,false,false,false': [1.581, 5, 5], 'false,true,true,true': [2.121, 9, 9], 'true,false,false,true': [1.225, 3, 3], 'true,false,true,false': [2.55, 13, 13], 'true,false,true,true': [2.449, 12, 12], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [4.583, 42, 42]}]]
[{'': [0.250000000000002, 0.24999999999999953], 'true,true': [0.24999999999999953, 0.24999999999999986], 'true,true,false': [nan, 0.24999999999999986], 'false,true,true': [0.25, 0.24999999999999983], 'false,true': [0.24999999999999958, 0.24999999999999983], 'false': [0.24999999999999953, nan], 'true,true,true': [0.24999999999999953, 0.25], 'true': [0.24999999999999983, 0.24999999999999958]}, {'': [0.2499999999999979, 0.24999999999999806], 'false,true,true': [0.2499999999999999, nan], 'true,false,true': [0.25000000000000006, 0.24999999999999997], 'true,false': [0.25000000000000083, 0.2500000000000001], 'false,true': [0.2499999999999999, 0.2500000000000008], 'false': [0.24999999999999806, nan], 'true,false,false': [0.24999999999999992, 0.24999999999999994], 'true': [0.25, 0.25000000000000094]}, {'': [0.25, 0.24999999999999986], 'true,true': [0.24999999999999992, 0.25], 'true,true,false': [nan, 0.25], 'false': [0.24999999999999986, nan], 'true,false': [0.25000000000000006, 0.2500000000000003], 'false,true': [0.25, 0.25000000000000006], 'true': [0.24999999999999994, 0.2500000000000001], 'true,false,true': [0.2500000000000001, 0.25000000000000094]}, {'': [0.24999999999999958, 0.24999999999999964], 'false,true,true': [0.2500000000000002, 0.24999999999999997], 'true,true': [0.24999999999999964, 0.24999999999999994], 'true,false,true': [0.25000000000000017, 0.2500000000000006], 'true,false': [0.2500000000000005, 0.2499999999999995], 'false,true': [0.2500000000000002, 0.24999999999999992], 'false': [0.24999999999999964, nan], 'true': [0.2499999999999996, 0.2499999999999999]}, {'': [0.25000000000000006, 0.24999999999999983], 'true,true': [0.25, 0.24999999999999997], 'false,true,true': [0.24999999999999986, 0.25], 'true,false,true': [0.25000000000000006, 0.24999999999999936], 'true,false': [0.2499999999999994, 0.2499999999999999], 'false,true': [0.24999999999999972, 0.24999999999999994], 'false': [0.24999999999999983, nan], 'true': [0.24999999999999986, 0.2499999999999997]}, {'': [0.2499999999999996, 0.2499999999999996], 'true,true': [0.24999999999999994, 0.24999999999999997], 'false,true,true': [0.24999999999999994, nan], 'true,false': [0.25, 0.24999999999999997], 'false,true': [0.24999999999999994, 0.24999999999999983], 'false': [0.2499999999999996, nan], 'true,true,true': [0.24999999999999994, nan], 'true': [0.25, 0.24999999999999994]}, {'': [0.24999999999999964, 0.24999999999999958], 'true,true': [0.2500000000000003, 0.25], 'false,true,true': [0.25000000000000017, nan], 'true,false': [0.24999999999999986, 0.25], 'false,true': [0.25000000000000017, 0.24999999999999967], 'false': [0.24999999999999958, nan], 'true,true,true': [0.2500000000000003, 0.25], 'true': [0.25, 0.24999999999999983]}, {'': [0.2499999999999997, 0.24999999999999936], 'true,true': [0.25000000000000006, 0.24999999999999997], 'false,true,true': [0.25000000000000006, nan], 'true,false,false': [0.24999999999999997, 0.25000000000000006], 'false,true': [0.25000000000000006, 0.24999999999999967], 'false': [0.24999999999999936, nan], 'true,false': [0.2499999999999996, 0.25000000000000006], 'true': [0.24999999999999978, 0.24999999999999967]}, {'': [0.2500000000000007, 0.24999999999999997], 'true,true': [0.2499999999999998, 0.24999999999999997], 'false,true,true': [0.24999999999999997, 0.25], 'true,false': [0.2499999999999994, 0.25], 'false,true': [0.25, 0.25], 'false': [0.24999999999999997, nan], 'true,true,true': [0.24999999999999983, 0.25], 'true': [0.25000000000000006, 0.24999999999999975]}, {'': [0.2500000000000002, 0.24999999999999992], 'false,true,true': [0.2500000000000001, nan], 'false': [0.24999999999999992, nan], 'true,false,false': [0.25, 0.24999999999999994], 'false,true': [0.2500000000000001, 0.24999999999999983], 'true': [0.25000000000000006, 0.2500000000000001], 'true,false': [0.25000000000000006, 0.24999999999999994], 'true,false,true': [0.2500000000000001, 0.2500000000000001]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;enzyme(A, B) :- interaction(C, A).;true;true', '0;true,true;interaction(D, A), interaction(D, C).;true;true', '0;true,true,false;interaction(A, E), interaction(E, C).;true;true', '0;false,true,true;interaction(A, G).;true;true', '0;false,true;interaction(F, G).;true;true', '0;false;interaction(A, F).;true;true', '0;true,true,true;interaction(C, D).;true;true', '0;true;interaction(A, C).;true;true', '1;;enzyme(A, B) :- interaction(A, C).;true;true', '1;false,true,true;location(F, H), location(G, H).;true;true', '1;false;interaction(F, A).;true;true', '1;true,false,false;interaction(E, A).;true;true', '1;false,true;interaction(F, G), interaction(G, A).;true;true', '1;true;interaction(C, A).;true;true', '1;true,false;interaction(C, D).;true;true', '1;true,false,true;interaction(A, D).;true;true', '2;;enzyme(A, B) :- interaction(C, A).;true;true', '2;true,true;interaction(D, A), interaction(D, C).;true;true', '2;true,true,false;interaction(A, E), interaction(E, C).;true;true', '2;false;interaction(A, G).;true;true', '2;true,false;interaction(F, C).;true;true', '2;false,true;interaction(G, H).;true;true', '2;true,false,true;interaction(F, A).;true;true', '2;true;interaction(A, C).;true;true', '3;;enzyme(A, B) :- interaction(C, A).;true;true', '3;true,true;interaction(A, D), interaction(C, D).;true;true', '3;false;interaction(A, F).;true;true', '3;true,false;interaction(E, C).;true;true', '3;false,true;interaction(F, G).;true;true', '3;true,false,true;interaction(E, A).;true;true', '3;true;interaction(A, C).;true;true', '3;false,true,true;interaction(G, F).;true;true', '4;;enzyme(A, B) :- interaction(C, A).;true;true', '4;true,true;interaction(D, A), interaction(D, C).;true;true', '4;false;interaction(A, F).;true;true', '4;true,false;interaction(E, C).;true;true', '4;false,true;interaction(F, G).;true;true', '4;true,false,true;interaction(A, E).;true;true', '4;true;interaction(A, C).;true;true', '4;false,true,true;interaction(G, F).;true;true', '5;;enzyme(A, B) :- interaction(A, C).;true;true', '5;true,true;interaction(A, D), interaction(C, D).;true;true', '5;false,true,true;location(F, H), location(G, H).;true;true', '5;true,false;interaction(C, E).;true;true', '5;false,true;interaction(F, G), interaction(G, A).;true;true', '5;false;interaction(F, A).;true;true', '5;true,true,true;interaction(D, A).;true;true', '5;true;interaction(C, A).;true;true', '6;;enzyme(A, B) :- interaction(A, C).;true;true', '6;true,true;interaction(D, A), interaction(D, C).;true;true', '6;false,true,true;location(F, H), location(G, H).;true;true', '6;true,false;interaction(C, E).;true;true', '6;false,true;interaction(F, G), interaction(G, A).;true;true', '6;false;interaction(F, A).;true;true', '6;true,true,true;interaction(C, D).;true;true', '6;true;interaction(C, A).;true;true', '7;;enzyme(A, B) :- interaction(A, C).;true;true', '7;true,true;interaction(C, D), interaction(D, A).;true;true', '7;false,true,true;location(G, I), location(H, I).;true;true', '7;true,false,false;interaction(F, A).;true;true', '7;false,true;interaction(G, H), interaction(H, A).;true;true', '7;false;interaction(G, A).;true;true', '7;true,false;interaction(C, E).;true;true', '7;true;interaction(C, A).;true;true', '8;;enzyme(A, B) :- interaction(C, A).;true;true', '8;true,true;interaction(D, A), interaction(D, C).;true;true', '8;false,true,true;interaction(A, G).;true;true', '8;true,false;interaction(E, C).;true;true', '8;false,true;interaction(F, G).;true;true', '8;false;interaction(A, F).;true;true', '8;true,true,true;interaction(C, D).;true;true', '8;true;interaction(A, C).;true;true', '9;;enzyme(A, B) :- interaction(A, C).;true;true', '9;false,true,true;location(F, H), location(G, H).;true;true', '9;false;interaction(F, A).;true;true', '9;true,false,false;interaction(E, A).;true;true', '9;false,true;interaction(F, G), interaction(G, A).;true;true', '9;true;interaction(C, A).;true;true', '9;true,false;interaction(C, D).;true;true', '9;true,false,true;interaction(A, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.35814893509951234;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, E), interaction(E, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( location(A, G) )
%   | | | then return 0.3581489350995132;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H) )
%   | then return 0.35814893509951234;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then return 0.3087411357856348;  // std dev = 0,500, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3087411357856347;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.3087411357856347;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.3087411357856348;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.3087411357856347;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3087411357856347;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.3087411357856347;  // std dev = 3,808, 58,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(E, A), proteinclass(E, F) )
%   | | | then return 0.2564123687585864;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2564123687585864;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(H, C) )
%   | | then return 0.2564123687585867;  // std dev = 0,500, 100,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2564123687585864;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.25641236875858625;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else if ( interaction(A, J) )
%   | then return 0.25641236875858675;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.20613740734453992;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.20613740734453984;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(E, C) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20613740734453956;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.20613740734453886;  // std dev = 4,301, 74,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else return 0.20613740734454009;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.2061374073445395;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20613740734453953;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16162857548414683;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.161628575484146;  // std dev = 0,500, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.16162857548414683;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16162857548414675;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, D), interaction(C, D) )
%   | | then return 0.1245559779208196;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.12455597792081993;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( location(F, H), location(G, H) )
%   | | | then return 0.1245559779208198;  // std dev = 2,121, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, I) )
%   | | | then return 0.12455597792082036;  // std dev = 4,472, 80,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.12455597792081997;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.09492800936730655;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.09492800936730683;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.09492800936730718;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.09492800936730665;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.09492800936730694;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.09492800936730747;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(C, D), interaction(D, A) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.0718608885005587;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055852;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.07186088850055859;  // std dev = 2,646, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.0718608885005585;  // std dev = 2,345, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07186088850055865;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0718608885005585;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0.07186088850055877;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), interaction(D, C) )
%   | | then if ( interaction(C, D) )
%   | | | then return 0.0541830737595496;  // std dev = 2,739, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.054183073759549255;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.05418307375954903;  // std dev = 0,500, 136,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=68 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.05418307375954923;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05418307375954923;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.05418307375954923;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.040760253233056286;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.04076025323305626;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(C, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.04076025323305642;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.04076025323305638;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.04076025323305635;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.040760253233056036;  // std dev = 0,500, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.04076025323305621;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04076025323305635;  // std dev = 4,000, 64,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.69527
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 4.803 seconds
Total inference time: 1.284 seconds
AUC ROC: 0.5


Refined model AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 4, Type: transfer, Time: 06:57:19
{'AUC ROC': 0.5, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695402, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.398, 'Learning time': 3.648}, 'CLL': -0.69527, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.284, 'Mapping results': {'Total time': 2.125899076461792, 'Possible mappings': 28, 'Finding best mapping': 0.0026705265045166016, 'Knowledge compiling time': 0.10301423072814941, 'Generating paths time': 1.986649513244629, 'Generating mappings time': 0.03356051445007324}, 'Learning time': 8.451}


Start learning from scratch in target domain

Target train facts examples: 3203
Target train pos examples: 104
Target train neg examples: 104

Target test facts examples: 11812
Target test pos examples: 265
Target test neg examples: 265

WILL Produced-Tree #1
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), phenotype(D, E) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A), proteinclass(G, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(I, A) )
%   | then return 0.3581489350995135;  // std dev = 0,500, 146,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=73 */
%   | else if ( proteinclass(A, J) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #2
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), proteinclass(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30874113578563506;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30874113578563506;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.3087411357856372;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else return 0.3087411357856347;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( interaction(A, J) )
%   | | then return 0.30874113578563483;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.30874113578563483;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), proteinclass(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2564123687585864;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2564123687585864;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.2564123687585858;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2564123687585858;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.25641236875858575;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.25641236875858764;  // std dev = 5,477, 120,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=60 */
%   | else return 0.2564123687585869;  // std dev = 0,500, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
WILL Produced-Tree #4
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), proteinclass(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2061374073445397;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.20613740734453972;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20613740734453975;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.20613740734454064;  // std dev = 0,500, 138,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | else return 0.20613740734453984;  // std dev = 0,500, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( interaction(A, J) )
%   | | then return 0.20613740734453948;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20613740734453923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(C, A), proteinclass(C, D) )
%   | then if ( interaction(C, C) )
%   | | then return 0.16162857548414666;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(C, E) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1616285754841468;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( phenotype(A, H) )
%   | then return 0.16162857548414533;  // std dev = 0,500, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | else if ( location(A, I) )
%   | | then return 0.1616285754841451;  // std dev = 0,500, 94,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16162857548414622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.12455597792081963;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, C) )
%   | | | then return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A), proteinclass(G, H) )
%   | | then return 0.12455597792081963;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.1245559779208197;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, A) )
%   | | then return 0.12455597792081911;  // std dev = 0,500, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(I, I) )
%   | | | then return 0.1245559779208195;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12455597792081953;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0.12455597792081828;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
WILL Produced-Tree #7
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.09492800936730682;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), proteinclass(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09492800936730683;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09492800936730683;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( complex(A, H) )
%   | then if ( interaction(A, I) )
%   | | then if ( complex(I, H) )
%   | | | then return 0.09492800936730648;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.0949280093673065;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.09492800936730635;  // std dev = 0,500, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0.09492800936730654;  // std dev = 0,500, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
WILL Produced-Tree #8
% FOR enzyme(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.07186088850055854;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0718608885005585;  // std dev = 2,550, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( proteinclass(A, E) )
%   | | | then return 0.07186088850055826;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07186088850055826;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.07186088850055772;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07186088850055887;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(C, G) )
%   | | | then return 0.0718608885005582;  // std dev = 2,915, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.07186088850055847;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return 0.07186088850055862;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
WILL Produced-Tree #9
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.05418307375954935;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), proteinclass(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05418307375954945;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05418307375954923;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, A) )
%   | | then if ( proteinclass(A, I) )
%   | | | then return 0.05418307375954902;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054183073759549005;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.05418307375954917;  // std dev = 0,500, 66,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return 0.05418307375954927;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
WILL Produced-Tree #10
% FOR enzyme(A, B):
%   if ( interaction(A, A) )
%   then if ( phenotype(A, C) )
%   | then return 0.040760253233056196;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, A), proteinclass(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.040760253233056216;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.040760253233056216;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04076025323305631;  // std dev = 0,500, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, A) )
%   | | then if ( proteinclass(A, G) )
%   | | | then return 0.04076025323305599;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04076025323305599;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.040760253233056154;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.04076025323305582;  // std dev = 3,536, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0.040760253233056216;  // std dev = 0,500, 102,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */


Results
   AUC ROC   = 0.5
   AUC PR    = 0.5
   CLL	      = -0.695026
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.478 seconds
Total inference time: 1.268 seconds
AUC ROC: 0.5


Dataset: 25_twitter_yeast, Fold: 4, Type: scratch, Time: 06:57:29
{'AUC ROC': 0.5, 'Recall': 0.0, 'CLL': -0.695026, 'AUC PR': 0.5, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.268, 'Learning time': 8.478}


