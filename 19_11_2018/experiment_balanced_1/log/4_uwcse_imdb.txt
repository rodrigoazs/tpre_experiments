Starting experiment #1 for 4_uwcse_imdb

Start learning from source dataset

Source train facts examples: 1653
Source train pos examples: 734
Source train neg examples: 734

WILL Produced-Tree #1
% FOR publication(A, B):
%   if ( professor(B) )
%   then if ( advisedby(C, B), tempadvisedby(D, B) )
%   | then if ( ta(E, D, F), ta(G, C, F) )
%   | | then return 0.6598730730305452;  // std dev = 0,399, 116,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=93 */
%   | | else return 0.4779572418087755;  // std dev = 0,485, 313,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=194 */
%   | else if ( advisedby(H, B), ta(I, H, J) )
%   | | then if ( ta(I, K, L), tempadvisedby(K, M) )
%   | | | then return 0.4484267128772878;  // std dev = 5,901, 144,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=85 */
%   | | | else return -0.030739953789376676;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.5466735252634476;  // std dev = 0,463, 183,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=126 */
%   else if ( ta(N, B, P) )
%   | then return 0.08503969140203353;  // std dev = 0,419, 238,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=54 */
%   | else if ( advisedby(B, Q), tempadvisedby(R, Q) )
%   | | then if ( projectmember(S, Q) )
%   | | | then return -0.030739953789376686;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.3376009898940296;  // std dev = 7,393, 219,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=105 */
%   | | else return 0.18271033860828367;  // std dev = 0,468, 228,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=74 */
WILL Produced-Tree #2
% FOR publication(A, B):
%   if ( professor(B) )
%   then if ( advisedby(C, B) )
%   | then if ( advisedby(C, D), tempadvisedby(E, D) )
%   | | then return 0.4583645501259547;  // std dev = 0,465, 599,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=404 */
%   | | else if ( ta(F, C, G) )
%   | | | then return 0.43438672236598924;  // std dev = 3,394, 50,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   | | | else return -0.15069626989875995;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.33556746636497564;  // std dev = 0,497, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | else return 0.43787515867266796;  // std dev = 0,474, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   else if ( ta(I, B, J) )
%   | then return 0.07436930905472833;  // std dev = 0,419, 238,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=54 */
%   | else if ( advisedby(B, K), tempadvisedby(L, K) )
%   | | then if ( advisedby(M, K), ta(N, M, P) )
%   | | | then return 0.2871377187414265;  // std dev = 7,122, 206,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=97 */
%   | | | else return 0.13447996809017615;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else return 0.158982405243031;  // std dev = 0,468, 228,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=74 */
WILL Produced-Tree #3
% FOR publication(A, B):
%   if ( professor(B) )
%   then if ( projectmember(C, B) )
%   | then return 0.14092856413672633;  // std dev = 0,496, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( advisedby(D, B) )
%   | | then return 0.3646897682377105;  // std dev = 0,465, 647,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=430 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.27227757594012036;  // std dev = 3,581, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.3532699285834965;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   else if ( ta(F, B, G) )
%   | then return 0.06450609508674615;  // std dev = 0,419, 238,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=54 */
%   | else if ( advisedby(B, H), tempadvisedby(I, H) )
%   | | then if ( projectmember(J, H) )
%   | | | then return -0.06490111472039191;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.2472839566627249;  // std dev = 7,377, 219,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=105 */
%   | | else if ( inphase(B, K) )
%   | | | then return 0.08869299232641807;  // std dev = 5,574, 155,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=43 */
%   | | | else return 0.2359311717342836;  // std dev = 4,223, 73,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
WILL Produced-Tree #4
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then if ( advisedby(B, D) )
%   | then if ( projectmember(E, D) )
%   | | then return -0.07795749038509497;  // std dev = 0,288, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else return 0.1491531086476309;  // std dev = 0,476, 479,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=180 */
%   | else return -0.010112405696266105;  // std dev = 0,381, 118,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
%   else if ( advisedby(F, B) )
%   | then if ( advisedby(F, G), projectmember(H, G) )
%   | | then return 0.014579933530242072;  // std dev = 0,458, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( advisedby(F, I), tempadvisedby(J, I) )
%   | | | then return 0.3025356658307416;  // std dev = 11,007, 574,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=396 */
%   | | | else return 0.17309111864507562;  // std dev = 3,848, 64,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.2136838003037207;  // std dev = 3,581, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.2735315341352777;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | else return 0.19713896006359222;  // std dev = 0,494, 73,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
WILL Produced-Tree #5
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then if ( advisedby(B, D) )
%   | then return 0.11014531521899402;  // std dev = 0,468, 512,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=183 */
%   | else return -0.008575506575158194;  // std dev = 0,381, 118,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
%   else if ( advisedby(E, B) )
%   | then if ( advisedby(E, F), tempadvisedby(G, F) )
%   | | then if ( ta(H, E, I) )
%   | | | then return 0.20511378817606835;  // std dev = 10,222, 480,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=316 */
%   | | | else return 0.2791503324602644;  // std dev = 4,738, 119,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=88 */
%   | | else if ( ta(J, E, K) )
%   | | | then return 0.23372975167049803;  // std dev = 3,394, 50,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   | | | else return -0.22460832305772022;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( professor(B) )
%   | | then if ( tempadvisedby(L, B) )
%   | | | then return 0.16399515228023734;  // std dev = 3,581, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.20702308817373288;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | else return 0.16064900591634287;  // std dev = 0,494, 73,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
WILL Produced-Tree #6
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then if ( advisedby(B, D) )
%   | then return 0.0894682463595168;  // std dev = 0,468, 512,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=183 */
%   | else return -0.0072797745804893494;  // std dev = 0,381, 118,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
%   else if ( advisedby(E, B) )
%   | then if ( ta(F, E, G), tempadvisedby(H, B) )
%   | | then if ( ta(I, H, G) )
%   | | | then return 0.2542236060623343;  // std dev = 4,294, 116,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=93 */
%   | | | else return 0.14823129864102588;  // std dev = 7,777, 266,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=171 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return -0.09758569210816087;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.15261390112157439;  // std dev = 7,292, 255,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=162 */
%   | else if ( tempadvisedby(M, B) )
%   | | then return 0.12424564532848165;  // std dev = 0,497, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | else if ( professor(B) )
%   | | | then return 0.15540682050428797;  // std dev = 3,350, 50,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | | else return 0.12827588584727806;  // std dev = 4,223, 73,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
WILL Produced-Tree #7
% FOR publication(A, B):
%   if ( ta(C, B, D) )
%   then if ( ta(C, E, F), tempadvisedby(E, G) )
%   | then return -0.05110345122913296;  // std dev = 0,356, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | else if ( ta(C, H, D), advisedby(H, I) )
%   | | then if ( projectmember(J, I) )
%   | | | then return -0.12265423322983636;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.06910970579451026;  // std dev = 5,447, 144,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | else return -0.062431774500984596;  // std dev = 0,307, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   else if ( tempadvisedby(B, K) )
%   | then return -0.05036997708864731;  // std dev = 0,355, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( advisedby(L, B) )
%   | | then if ( advisedby(L, M), tempadvisedby(N, M) )
%   | | | then return 0.12594599098159795;  // std dev = 11,222, 599,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=404 */
%   | | | else return 0.062120019568835366;  // std dev = 3,711, 64,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | | else if ( advisedby(B, P), tempadvisedby(Q, P) )
%   | | | then return 0.11012268026149719;  // std dev = 7,536, 237,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=107 */
%   | | | else return 0.08430377509444838;  // std dev = 8,315, 303,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=132 */
WILL Produced-Tree #8
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then if ( advisedby(B, D), projectmember(E, D) )
%   | then return -0.0968416628602828;  // std dev = 0,287, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else return 0.05145137003935981;  // std dev = 0,458, 597,000 (wgt'ed) examples reached here.  /* #neg=396 #pos=201 */
%   else if ( advisedby(F, B), ta(G, F, H) )
%   | then if ( ta(G, I, H), tempadvisedby(I, J) )
%   | | then if ( advisedby(K, J) )
%   | | | then return -0.12946227115576578;  // std dev = 2,805, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return -0.0050245428302913685;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( ta(L, M, H), tempadvisedby(M, B) )
%   | | | then return 0.16278874292984624;  // std dev = 4,294, 116,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=93 */
%   | | | else return 0.08037252891723419;  // std dev = 9,095, 364,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=230 */
%   | else if ( tempadvisedby(N, B), advisedby(P, B) )
%   | | then if ( inphase(N, Q), inphase(P, Q) )
%   | | | then return -0.17059310545496276;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.021487036658601813;  // std dev = 2,854, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | else return 0.13221764492467977;  // std dev = 0,449, 256,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=157 */
WILL Produced-Tree #9
% FOR publication(A, B):
%   if ( ta(C, B, D) )
%   then if ( ta(C, E, F), tempadvisedby(E, G) )
%   | then return -0.051159056929041095;  // std dev = 0,356, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | else if ( advisedby(B, H), projectmember(I, H) )
%   | | then return -0.09123494509617515;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( advisedby(B, J), tempadvisedby(K, J) )
%   | | | then return 0.05660879711154266;  // std dev = 5,002, 118,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return -0.021885079754446275;  // std dev = 2,538, 45,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   else if ( tempadvisedby(B, L) )
%   | then return -0.050542092188976324;  // std dev = 0,355, 27,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( advisedby(M, B) )
%   | | then if ( advisedby(M, N), projectmember(P, N) )
%   | | | then return -0.11824893397232893;  // std dev = 2,282, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.07989371970969843;  // std dev = 11,483, 638,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=429 */
%   | | else if ( advisedby(B, Q), tempadvisedby(R, Q) )
%   | | | then return 0.07509302516040119;  // std dev = 7,521, 237,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=107 */
%   | | | else return 0.04350108173869916;  // std dev = 8,309, 303,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=132 */
WILL Produced-Tree #10
% FOR publication(A, B):
%   if ( ta(C, B, D) )
%   then if ( ta(C, E, F), tempadvisedby(E, G) )
%   | then return -0.04310531763177393;  // std dev = 0,356, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | else return 0.0190607319024687;  // std dev = 0,429, 178,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=45 */
%   else if ( advisedby(H, B) )
%   | then if ( advisedby(H, I), projectmember(J, I) )
%   | | then if ( sameperson(B, I) )
%   | | | then return 0.0037960986638393562;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.2553779886212142;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( advisedby(H, K), tempadvisedby(L, K) )
%   | | | then return 0.06719021196432795;  // std dev = 10,858, 574,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=396 */
%   | | | else return 0.006065253627610173;  // std dev = 3,715, 64,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | else if ( advisedby(B, M), projectmember(N, M) )
%   | | then return -0.08694738649807669;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( advisedby(B, P), tempadvisedby(Q, P) )
%   | | | then return 0.06943019444838817;  // std dev = 7,371, 219,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=105 */
%   | | | else return 0.027545871528774454;  // std dev = 8,520, 330,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=136 */


Predicates from source: ['publication(title,person).', 'sameperson(person,person).', 'ta(course,person,quarter).', 'professor(person).', 'inphase(person,prequals).', 'advisedby(person,person).', 'tempadvisedby(person,person).', 'projectmember(project,person).']

Starting fold 1

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.016309022903442383
   Generating paths time   = 2.1589324474334717
   Generating mappings time   = 0.10024666786193848
   Possible mappings   = 1729
   Finding best mapping   = 0.8046813011169434
   Total time   = 3.080174207687378


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;true
0;false;workedunder(Q, B), workedunder(Q, R).;true;false
0;false,true;workedunder(Q, S).;false;false
0;true;workedunder(B, C), workedunder(B, D).;false;true
0;true,false;workedunder(B, H).;true;false
0;true,false,true;workedunder(M, K).;false;false
1;;movie(A, B) :- actor(B).;true;true
1;true,true;workedunder(D, C), workedunder(D, E).;false;false
1;true,false;workedunder(B, H).;false;false
1;false,true;workedunder(K, M).;false;false
1;false;workedunder(K, B), workedunder(K, L).;true;false
1;true;workedunder(B, C).;true;true
2;;movie(A, B) :- actor(B).;true;true
2;false,false;genre(B, K).;false;false
2;true,false,false;workedunder(B, E).;false;false
2;false,true;workedunder(H, J).;false;false
2;false;workedunder(H, B), workedunder(H, I).;true;true
2;true,false;workedunder(B, D).;false;true
2;true;workedunder(B, C).;false;true
3;;movie(A, B) :- genre(B, C).;true;true
3;true,true;workedunder(D, E).;false;false
3;false,false,true;workedunder(B, K).;false;false
3;false,false;actor(B).;true;false
3;false,true,false;workedunder(I, F), workedunder(I, J).;false;false
3;false,true;workedunder(G, F), workedunder(G, H).;false;true
3;false;workedunder(B, F).;true;true
3;true;workedunder(D, B).;true;false
4;;movie(A, B) :- genre(B, C).;true;true
4;false,false,true;workedunder(B, L).;false;false
4;false,false;actor(B).;true;false
4;false,true;workedunder(F, E), workedunder(F, G).;false;false
4;false;workedunder(B, E).;true;true
4;true;workedunder(D, B).;false;false
5;;movie(A, B) :- genre(B, C).;true;true
5;false,true,false;workedunder(B, J).;false;false
5;false,false,false;actor(B).;false;false
5;false,false;workedunder(B, M).;false;true
5;false,true;workedunder(B, H).;false;true
5;false;workedunder(B, E).;true;true
5;true;workedunder(D, B).;false;false
6;;movie(A, B) :- workedunder(G, E).;false;true
6;false;workedunder(K, B).;false;true
6;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
6;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
6;false,false;workedunder(B, L).;true;true
7;;movie(A, B) :- genre(B, C).;true;true
7;false,true,true;workedunder(J, K).;false;false
7;false,false,true;genre(N, Q), genre(P, Q).;false;false
7;false,false;workedunder(B, N), workedunder(B, P).;true;false
7;false,true,false;workedunder(B, M).;false;false
7;false,true;workedunder(J, I).;true;true
7;false;workedunder(B, F).;true;true
7;true;workedunder(D, B), workedunder(D, E).;false;false
8;;movie(A, B) :- workedunder(G, E).;false;true
8;false;workedunder(L, B).;false;true
8;false,false,true;workedunder(N, M), workedunder(N, P).;false;false
8;false,false,false;workedunder(Q, B), workedunder(Q, R).;false;false
8;false,false;workedunder(B, M).;true;true
9;;movie(A, B) :- workedunder(G, E).;false;true
9;false,true,false;workedunder(K, H), workedunder(K, L).;false;false
9;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
9;false,false;workedunder(M, B), workedunder(M, N).;false;true
9;false,true;workedunder(I, H), workedunder(I, J).;false;true
9;false;workedunder(B, H).;true;true


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then return 0.36235061577178224;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then return 0.312292061844724;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.2616318086752123;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then return 0.2591827727155065;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2192721473492705;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.17873524574687283;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then return 0.2081507590524313;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.1424392447767628;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then return 0.16301800148037107;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.11159559999632969;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.12548663798967535;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09489940295634577;  // std dev = 5,654, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.0642759631868019;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07242837364636896;  // std dev = 5,454, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.054187058519728916;  // std dev = 5,654, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04077378181427004;  // std dev = 5,654, 128,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.495009
   AUC PR    = 0.496868
   CLL	      = -0.697378
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.758 seconds
Total inference time: 1.02 seconds
AUC ROC: 0.495009


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(E, B), workedunder(E, F)', 'true': 'workedunder(B, C), workedunder(B, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [5.454, 59, 60], 'false,true,true': [1.491, 5, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'actor(B)', 'true,true': 'workedunder(D, C), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(F, H)', 'false': 'workedunder(F, B), workedunder(F, G)'}, {'false,true,true': [1.491, 5, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [5.454, 59, 60]}], ['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(D, F)'}, {'true,true': [5.454, 59, 60], 'false,true,true': [1.491, 5, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'true,true': 'workedunder(D, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(G, F), workedunder(G, H)', 'false': 'workedunder(B, F)'}, {'false,true,true': [5.454, 59, 60], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.491, 5, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(F, E), workedunder(F, G)'}, {'true,true': [1.491, 5, 4], 'false,true,true': [5.454, 59, 60], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(B, F)'}, {'true,true': [1.491, 5, 4], 'false,true,true': [5.454, 59, 60], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.654, 64, 64]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true,true': 'workedunder(G, I)', 'false,true': 'workedunder(G, H)'}, {'true,true': [1.491, 5, 4], 'false,true,true,true': [5.454, 59, 60], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.654, 64, 64]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.654, 64, 64]}]]
[{'': [0.24998234587952806, 0.2469135802469134], 'false': [0.2469135802469134, nan], 'true': [0.24998234587952806, nan], 'false,true': [0.2469135802469134, nan]}, {'': [0.24998234587952756, 0.24691358024691354], 'true,true': [0.24998234587952756, nan], 'true': [0.24998234587952756, nan], 'false,true': [0.24691358024691354, nan], 'false': [0.24691358024691354, nan]}, {'': [0.24998234587952914, 0.24691358024691365], 'false': [0.24691358024691365, nan], 'true': [0.24998234587952914, nan], 'false,true': [0.24691358024691365, nan]}, {'': [0.2469135802469136, 0.2499823458795284], 'false': [0.2499823458795284, nan], 'true,true': [0.2469135802469136, nan], 'true': [0.2469135802469136, nan], 'false,true': [0.2499823458795284, nan]}, {'': [0.2469135802469136, 0.24998234587952847], 'false': [0.24998234587952847, nan], 'true': [0.2469135802469136, nan], 'false,true': [0.24998234587952847, nan]}, {'': [0.2469135802469136, 0.24998234587952745], 'false': [0.24998234587952745, nan], 'true': [0.2469135802469136, nan], 'false,true': [0.24998234587952745, nan]}, {'': [0.24977207511158006, nan]}, {'': [0.2469135802469136, 0.24998234587952908], 'false': [0.24998234587952908, nan], 'false,true,true': [0.24998234587952908, nan], 'true': [0.2469135802469136, nan], 'false,true': [0.24998234587952908, nan]}, {'': [0.2497685943248705, nan]}, {'': [0.24976830199210415, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;false;workedunder(E, B), workedunder(E, F).;true;true', '0;true;workedunder(B, C), workedunder(B, D).;true;true', '0;false,true;workedunder(E, G).;true;true', '1;;movie(A, B) :- actor(B).;true;true', '1;true,true;workedunder(D, C), workedunder(D, E).;true;true', '1;true;workedunder(B, C).;true;true', '1;false,true;workedunder(F, H).;true;true', '1;false;workedunder(F, B), workedunder(F, G).;true;true', '2;;movie(A, B) :- actor(B).;true;true', '2;false;workedunder(D, B), workedunder(D, E).;true;true', '2;true;workedunder(B, C).;true;true', '2;false,true;workedunder(D, F).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;true,true;workedunder(D, E).;true;true', '3;true;workedunder(D, B).;true;true', '3;false,true;workedunder(G, F), workedunder(G, H).;true;true', '3;false;workedunder(B, F).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, E).;true;true', '4;true;workedunder(D, B).;true;true', '4;false,true;workedunder(F, E), workedunder(F, G).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, E).;true;true', '5;true;workedunder(D, B).;true;true', '5;false,true;workedunder(B, F).;true;true', '6;;movie(A, B) :- workedunder(C, D).;true;true', '7;;movie(A, B) :- genre(B, C).;true;true', '7;false;workedunder(B, F).;true;true', '7;false,true,true;workedunder(G, I).;true;true', '7;true;workedunder(D, B), workedunder(D, E).;true;true', '7;false,true;workedunder(G, H).;true;true', '8;;movie(A, B) :- workedunder(C, D).;true;true', '9;;movie(A, B) :- workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.39263169372020085;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | else return 0.3335587711650849;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.30259337954395676;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then if ( female(B) )
%   | | | then return 0.33783328321527484;  // std dev = 3,799, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | else return 0.28792570368038944;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.2616318086752123;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( female(B) )
%   | | then return 0.27899123863584213;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | else return 0.24009062233034;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2192721473492705;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.17873524574687283;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then if ( female(B) )
%   | | | then return 0.22243083833742386;  // std dev = 3,799, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | else return 0.19419122142128528;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.1424392447767628;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then if ( female(B) )
%   | | | then return 0.17281039200927534;  // std dev = 3,799, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | else return 0.15333078726422442;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.11159559999632969;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.1320412855065648;  // std dev = 3,799, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | else return 0.11898212077439592;  // std dev = 3,900, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.09992057280757799;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( actor(B) )
%   | | then return 0.0912481128788254;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0.08637026299843623;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.06628370899125427;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07226338970928499;  // std dev = 5,445, 119,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.057236358739813704;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( actor(B) )
%   | | then return 0.05190677082648834;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0.05057564362187433;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.042942188147377436;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( actor(B) )
%   | | then return 0.03918617135754798;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | else return 0.038438849075129386;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.493426
   AUC PR    = 0.495492
   CLL	      = -0.699609
   Precision = 0.493506 at threshold = 0.5
   Recall    = 0.342342
   F1        = 0.404255


Total learning time: 3.238 seconds
Total inference time: 1.975 seconds
AUC ROC: 0.493426


Refined model AUC ROC: 0.493426


Dataset: 4_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:08:35
{'AUC ROC': 0.493426, 'Recall': 0.342342, 'Parameter Learning results': {'AUC ROC': 0.495009, 'Recall': 0.0, 'CLL': -0.697378, 'AUC PR': 0.496868, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.02, 'Learning time': 1.758}, 'CLL': -0.699609, 'AUC PR': 0.495492, 'Precision': [0.493506, 0.5], 'F1': 0.404255, 'Inference time': 1.975, 'Mapping results': {'Total time': 3.080174207687378, 'Possible mappings': 1729, 'Finding best mapping': 0.8046813011169434, 'Knowledge compiling time': 0.016309022903442383, 'Generating paths time': 2.1589324474334717, 'Generating mappings time': 0.10024666786193848}, 'Learning time': 4.996}


Start learning from scratch in target domain

Target train facts examples: 151
Target train pos examples: 64
Target train neg examples: 64

Target test facts examples: 641
Target test pos examples: 222
Target test neg examples: 222

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.39263169372020085;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.3335587711650849;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.30259337954395676;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.33783328321527484;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.28792570368038944;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.2616318086752123;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.27899123863584213;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.24009062233034;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.2192721473492705;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.22243083833742386;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.19419122142128528;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.17873524574687283;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.17281039200927534;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.15333078726422442;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.1424392447767628;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1320412855065648;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.11898212077439592;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.11159559999632969;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.09992057280757799;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.0912481128788254;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.08637026299843623;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.07522738331625095;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.06944516627970902;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.06628370899125427;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.056496845543073805;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.05259468629760857;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.05057564362187433;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.042386217000058464;  // std dev = 0,499, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.03971001211914699;  // std dev = 0,499, 61,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0.038438849075129386;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.491661
   AUC PR    = 0.495022
   CLL	      = -0.699092
   Precision = 0.493506 at threshold = 0.5
   Recall    = 0.342342
   F1        = 0.404255


Total learning time: 1.752 seconds
Total inference time: 0.744 seconds
AUC ROC: 0.491661


Dataset: 4_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:08:38
{'AUC ROC': 0.491661, 'Recall': 0.342342, 'CLL': -0.699092, 'AUC PR': 0.495022, 'Precision': [0.493506, 0.5], 'F1': 0.404255, 'Inference time': 0.744, 'Learning time': 1.752}


Starting fold 2

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.017992496490478516
   Generating paths time   = 2.5850090980529785
   Generating mappings time   = 0.10037112236022949
   Possible mappings   = 1729
   Finding best mapping   = 0.8149073123931885
   Total time   = 3.5182852745056152


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;true
0;false;workedunder(Q, B), workedunder(Q, R).;true;false
0;false,true;workedunder(Q, S).;false;false
0;true;workedunder(B, C), workedunder(B, D).;false;true
0;true,false;workedunder(B, H).;true;false
0;true,false,true;workedunder(M, K).;false;false
1;;movie(A, B) :- actor(B).;true;true
1;true,true;workedunder(D, C), workedunder(D, E).;false;false
1;true,false;workedunder(B, H).;false;false
1;false,true;workedunder(K, M).;false;false
1;false;workedunder(K, B), workedunder(K, L).;true;false
1;true;workedunder(B, C).;true;true
2;;movie(A, B) :- actor(B).;true;true
2;false,false;genre(B, K).;false;false
2;true,false,false;workedunder(B, E).;false;false
2;false,true;workedunder(H, J).;false;false
2;false;workedunder(H, B), workedunder(H, I).;true;true
2;true,false;workedunder(B, D).;false;true
2;true;workedunder(B, C).;false;true
3;;movie(A, B) :- genre(B, C).;true;true
3;true,true;workedunder(D, E).;false;false
3;false,false,true;workedunder(B, K).;false;false
3;false,false;actor(B).;true;false
3;false,true,false;workedunder(I, F), workedunder(I, J).;false;false
3;false,true;workedunder(G, F), workedunder(G, H).;false;true
3;false;workedunder(B, F).;true;true
3;true;workedunder(D, B).;true;false
4;;movie(A, B) :- genre(B, C).;true;true
4;false,false,true;workedunder(B, L).;false;false
4;false,false;actor(B).;true;false
4;false,true;workedunder(F, E), workedunder(F, G).;false;false
4;false;workedunder(B, E).;true;true
4;true;workedunder(D, B).;false;false
5;;movie(A, B) :- genre(B, C).;true;true
5;false,true,false;workedunder(B, J).;false;false
5;false,false,false;actor(B).;false;false
5;false,false;workedunder(B, M).;false;true
5;false,true;workedunder(B, H).;false;true
5;false;workedunder(B, E).;true;true
5;true;workedunder(D, B).;false;false
6;;movie(A, B) :- workedunder(G, E).;false;true
6;false;workedunder(K, B).;false;true
6;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
6;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
6;false,false;workedunder(B, L).;true;true
7;;movie(A, B) :- genre(B, C).;true;true
7;false,true,true;workedunder(J, K).;false;false
7;false,false,true;genre(N, Q), genre(P, Q).;false;false
7;false,false;workedunder(B, N), workedunder(B, P).;true;false
7;false,true,false;workedunder(B, M).;false;false
7;false,true;workedunder(J, I).;true;true
7;false;workedunder(B, F).;true;true
7;true;workedunder(D, B), workedunder(D, E).;false;false
8;;movie(A, B) :- workedunder(G, E).;false;true
8;false;workedunder(L, B).;false;true
8;false,false,true;workedunder(N, M), workedunder(N, P).;false;false
8;false,false,false;workedunder(Q, B), workedunder(Q, R).;false;false
8;false,false;workedunder(B, M).;true;true
9;;movie(A, B) :- workedunder(G, E).;false;true
9;false,true,false;workedunder(K, H), workedunder(K, L).;false;false
9;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
9;false,false;workedunder(M, B), workedunder(M, N).;false;true
9;false,true;workedunder(I, H), workedunder(I, J).;false;true
9;false;workedunder(B, H).;true;true


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then return 0.35814893509951334;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then return 0.30874113578563706;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then return 0.25641236875858747;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.20613740734453972;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then return 0.20613740734453992;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then return 0.16162857548414458;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.1245559779208203;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09492800936730589;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.07186088850055887;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07186088850055868;  // std dev = 5,385, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05418307375954902;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04076025323305624;  // std dev = 5,568, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.49719
   AUC PR    = 0.498056
   CLL	      = -0.694501
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.157 seconds
Total inference time: 1.046 seconds
AUC ROC: 0.49719


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(E, B), workedunder(E, F)', 'true': 'workedunder(B, C), workedunder(B, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [5.385, 58, 58], 'false,true,true': [1.414, 4, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'actor(B)', 'true,true': 'workedunder(D, C), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(F, H)', 'false': 'workedunder(F, B), workedunder(F, G)'}, {'false,true,true': [1.414, 4, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [5.385, 58, 58]}], ['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(D, F)'}, {'true,true': [5.385, 58, 58], 'false,true,true': [1.414, 4, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'true,true': 'workedunder(D, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(G, F), workedunder(G, H)', 'false': 'workedunder(B, F)'}, {'false,true,true': [5.385, 58, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.414, 4, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(F, E), workedunder(F, G)'}, {'true,true': [1.414, 4, 4], 'false,true,true': [5.385, 58, 58], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(B, F)'}, {'true,true': [1.414, 4, 4], 'false,true,true': [5.385, 58, 58], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.568, 62, 62]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true,true': 'workedunder(G, I)', 'false,true': 'workedunder(G, H)'}, {'true,true': [1.414, 4, 4], 'false,true,true,true': [5.385, 58, 58], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.568, 62, 62]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.568, 62, 62]}]]
[{'': [0.2499999999999998, 0.24999999999999986], 'false': [0.24999999999999986, nan], 'true': [0.2499999999999998, nan], 'false,true': [0.24999999999999986, nan]}, {'': [0.2499999999999977, 0.24999999999999994], 'false': [0.24999999999999994, nan], 'true,true': [0.2499999999999977, nan], 'true': [0.2499999999999977, nan], 'false,true': [0.24999999999999994, nan]}, {'': [0.25000000000000033, 0.25], 'false': [0.25, nan], 'true': [0.25000000000000033, nan], 'false,true': [0.25, nan]}, {'': [0.24999999999999994, 0.25], 'false': [0.25, nan], 'true,true': [0.24999999999999994, nan], 'true': [0.24999999999999994, nan], 'false,true': [0.25, nan]}, {'': [0.24999999999999997, 0.24999999999999967], 'false': [0.24999999999999967, nan], 'true': [0.24999999999999997, nan], 'false,true': [0.24999999999999967, nan]}, {'': [0.24999999999999997, 0.24999999999999942], 'false': [0.24999999999999942, nan], 'true': [0.24999999999999997, nan], 'false,true': [0.24999999999999942, nan]}, {'': [0.24999999999999942, nan]}, {'': [0.25, 0.24999999999999936], 'false': [0.24999999999999936, nan], 'false,true,true': [0.24999999999999936, nan], 'true': [0.25, nan], 'false,true': [0.24999999999999936, nan]}, {'': [0.24999999999999933, nan]}, {'': [0.2499999999999999, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;false;workedunder(E, B), workedunder(E, F).;true;true', '0;true;workedunder(B, C), workedunder(B, D).;true;true', '0;false,true;workedunder(E, G).;true;true', '1;;movie(A, B) :- actor(B).;true;true', '1;true,true;workedunder(D, C), workedunder(D, E).;true;true', '1;true;workedunder(B, C).;true;true', '1;false,true;workedunder(F, H).;true;true', '1;false;workedunder(F, B), workedunder(F, G).;true;true', '2;;movie(A, B) :- actor(B).;true;true', '2;false;workedunder(D, B), workedunder(D, E).;true;true', '2;true;workedunder(B, C).;true;true', '2;false,true;workedunder(D, F).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;true,true;workedunder(D, E).;true;true', '3;true;workedunder(D, B).;true;true', '3;false,true;workedunder(G, F), workedunder(G, H).;true;true', '3;false;workedunder(B, F).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, E).;true;true', '4;true;workedunder(D, B).;true;true', '4;false,true;workedunder(F, E), workedunder(F, G).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, E).;true;true', '5;true;workedunder(D, B).;true;true', '5;false,true;workedunder(B, F).;true;true', '6;;movie(A, B) :- workedunder(C, D).;true;true', '7;;movie(A, B) :- genre(B, C).;true;true', '7;false;workedunder(B, F).;true;true', '7;false,true,true;workedunder(G, I).;true;true', '7;true;workedunder(D, B), workedunder(D, E).;true;true', '7;false,true;workedunder(G, H).;true;true', '8;;movie(A, B) :- workedunder(C, D).;true;true', '9;;movie(A, B) :- workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.32326521416927945;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | else return 0.37869688030499077;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then if ( female(B) )
%   | | | then return 0.2791951618074623;  // std dev = 3,271, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.3260905683893191;  // std dev = 4,268, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( female(B) )
%   | | then return 0.23320308622288513;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | else return 0.26990995281288577;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.20613740734453972;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then if ( female(B) )
%   | | | then return 0.1891054906677026;  // std dev = 3,271, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.21590871904212322;  // std dev = 4,268, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.1616285754841467;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then if ( female(B) )
%   | | | then return 0.14976766549032963;  // std dev = 3,271, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.16835047059960637;  // std dev = 4,268, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.12455597792081965;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.11657636648133224;  // std dev = 3,271, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.1290555712910267;  // std dev = 4,268, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.08966180769004162;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | else if ( actor(B) )
%   | | then return 0.09791834063168882;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0.09492800936730683;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.07186088850055856;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07184244841868191;  // std dev = 5,378, 116,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.05109904032492669;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | else if ( actor(B) )
%   | | then return 0.05604488990289678;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0.05418307375954945;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.0386500696831022;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | else if ( actor(B) )
%   | | then return 0.042080159206573035;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0.040760253233056216;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.495735
   AUC PR    = 0.493126
   CLL	      = -0.697473
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.71 seconds
Total inference time: 1.972 seconds
AUC ROC: 0.495735


Refined model AUC ROC: 0.495735


Dataset: 4_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:08:48
{'AUC ROC': 0.495735, 'Recall': 0.0, 'Parameter Learning results': {'AUC ROC': 0.49719, 'Recall': 0.0, 'CLL': -0.694501, 'AUC PR': 0.498056, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.046, 'Learning time': 1.157}, 'CLL': -0.697473, 'AUC PR': 0.493126, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.972, 'Mapping results': {'Total time': 3.5182852745056152, 'Possible mappings': 1729, 'Finding best mapping': 0.8149073123931885, 'Knowledge compiling time': 0.017992496490478516, 'Generating paths time': 2.5850090980529785, 'Generating mappings time': 0.10037112236022949}, 'Learning time': 3.867}


Start learning from scratch in target domain

Target train facts examples: 146
Target train pos examples: 62
Target train neg examples: 62

Target test facts examples: 646
Target test pos examples: 224
Target test neg examples: 224

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.32326521416927945;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.37869688030499077;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.2791951618074623;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.3260905683893191;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.23320308622288513;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.26990995281288577;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1891054906677026;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.21590871904212322;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.20613740734453972;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.14976766549032963;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | else return 0.16835047059960637;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   else return 0.1616285754841467;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.11657636648133224;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.1290555712910267;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.12455597792081965;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.08966180769004162;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.09791834063168882;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.09492800936730683;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.0684141130302908;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.07386187885293974;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.07186088850055856;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.05193053244792527;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.055542541004023525;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.05418307375954945;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.03928511717803008;  // std dev = 0,499, 43,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.04170157990259627;  // std dev = 0,500, 73,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | else return 0.040760253233056216;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.484614
   AUC PR    = 0.489343
   CLL	      = -0.69806
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.813 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.484614


Dataset: 4_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:08:51
{'AUC ROC': 0.484614, 'Recall': 0.0, 'CLL': -0.69806, 'AUC PR': 0.489343, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 0.743, 'Learning time': 1.813}


Starting fold 3

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.04305696487426758
   Generating paths time   = 2.5251846313476562
   Generating mappings time   = 0.13060307502746582
   Possible mappings   = 1729
   Finding best mapping   = 1.034391164779663
   Total time   = 3.7332417964935303


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;true
0;false;workedunder(Q, B), workedunder(Q, R).;true;false
0;false,true;workedunder(Q, S).;false;false
0;true;workedunder(B, C), workedunder(B, D).;false;true
0;true,false;workedunder(B, H).;true;false
0;true,false,true;workedunder(M, K).;false;false
1;;movie(A, B) :- actor(B).;true;true
1;true,true;workedunder(D, C), workedunder(D, E).;false;false
1;true,false;workedunder(B, H).;false;false
1;false,true;workedunder(K, M).;false;false
1;false;workedunder(K, B), workedunder(K, L).;true;false
1;true;workedunder(B, C).;true;true
2;;movie(A, B) :- actor(B).;true;true
2;false,false;genre(B, K).;false;false
2;true,false,false;workedunder(B, E).;false;false
2;false,true;workedunder(H, J).;false;false
2;false;workedunder(H, B), workedunder(H, I).;true;true
2;true,false;workedunder(B, D).;false;true
2;true;workedunder(B, C).;false;true
3;;movie(A, B) :- genre(B, C).;true;true
3;true,true;workedunder(D, E).;false;false
3;false,false,true;workedunder(B, K).;false;false
3;false,false;actor(B).;true;false
3;false,true,false;workedunder(I, F), workedunder(I, J).;false;false
3;false,true;workedunder(G, F), workedunder(G, H).;false;true
3;false;workedunder(B, F).;true;true
3;true;workedunder(D, B).;true;false
4;;movie(A, B) :- genre(B, C).;true;true
4;false,false,true;workedunder(B, L).;false;false
4;false,false;actor(B).;true;false
4;false,true;workedunder(F, E), workedunder(F, G).;false;false
4;false;workedunder(B, E).;true;true
4;true;workedunder(D, B).;false;false
5;;movie(A, B) :- genre(B, C).;true;true
5;false,true,false;workedunder(B, J).;false;false
5;false,false,false;actor(B).;false;false
5;false,false;workedunder(B, M).;false;true
5;false,true;workedunder(B, H).;false;true
5;false;workedunder(B, E).;true;true
5;true;workedunder(D, B).;false;false
6;;movie(A, B) :- workedunder(G, E).;false;true
6;false;workedunder(K, B).;false;true
6;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
6;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
6;false,false;workedunder(B, L).;true;true
7;;movie(A, B) :- genre(B, C).;true;true
7;false,true,true;workedunder(J, K).;false;false
7;false,false,true;genre(N, Q), genre(P, Q).;false;false
7;false,false;workedunder(B, N), workedunder(B, P).;true;false
7;false,true,false;workedunder(B, M).;false;false
7;false,true;workedunder(J, I).;true;true
7;false;workedunder(B, F).;true;true
7;true;workedunder(D, B), workedunder(D, E).;false;false
8;;movie(A, B) :- workedunder(G, E).;false;true
8;false;workedunder(L, B).;false;true
8;false,false,true;workedunder(N, M), workedunder(N, P).;false;false
8;false,false,false;workedunder(Q, B), workedunder(Q, R).;false;false
8;false,false;workedunder(B, M).;true;true
9;;movie(A, B) :- workedunder(G, E).;false;true
9;false,true,false;workedunder(K, H), workedunder(K, L).;false;false
9;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
9;false,false;workedunder(M, B), workedunder(M, N).;false;true
9;false,true;workedunder(I, H), workedunder(I, J).;false;true
9;false;workedunder(B, H).;true;true


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then return 0.3581489350995129;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.35814893509951234;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then return 0.3087411357856356;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.3087411357856347;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then return 0.2564123687585859;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2564123687585867;  // std dev = 3,000, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.3936374073445395;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then return 0.20613740734453892;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05613740734453968;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.3059702244955171;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then return 0.1616285754841473;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.044355232106110254;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.23165714196937964;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.12455597792082006;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03486161171181514;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09420355432197444;  // std dev = 5,494, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.15037575458848954;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07203825194394496;  // std dev = 4,690, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, J), workedunder(B, K) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.006365623820600702;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05395831975898286;  // std dev = 5,486, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04079458932088485;  // std dev = 5,485, 124,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.50014
   AUC PR    = 0.502391
   CLL	      = -0.696145
   Precision = 0.517241 at threshold = 0.5
   Recall    = 0.066964
   F1        = 0.118577


Total learning time: 1.678 seconds
Total inference time: 0.907 seconds
AUC ROC: 0.50014


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(E, B), workedunder(E, F)', 'true': 'workedunder(B, C), workedunder(B, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [4.69, 44, 44], 'false,true,true': [3.0, 18, 18], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'actor(B)', 'true,true': 'workedunder(D, C), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(F, H)', 'false': 'workedunder(F, B), workedunder(F, G)'}, {'false,true,true': [3.0, 18, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [4.69, 44, 44]}], ['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(D, F)'}, {'true,true': [4.69, 44, 44], 'false,true,true': [3.0, 18, 18], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'true,true': 'workedunder(D, E)', 'false,false': 'actor(B)', 'false,true': 'workedunder(G, F), workedunder(G, H)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B)'}, {'false,true,true': [4.69, 44, 44], 'true,true,false': [0.0, 0, 0], 'false,false,false': [2.133, 13, 7], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [1.854, 5, 11], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(F, E), workedunder(F, G)', 'false,false': 'actor(B)'}, {'true,true': [1.854, 5, 11], 'false,true,true': [4.69, 44, 44], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.133, 13, 7], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false,false,false': 'actor(B)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)', 'false,false': 'workedunder(B, G)', 'true': 'workedunder(D, B)'}, {'true,true': [1.854, 5, 11], 'false,true,true': [4.69, 44, 44], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 13, 7], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.494, 62, 62]}], ['movie(A, B)', {'': 'genre(B, C)', 'false,true,true': 'workedunder(G, I)', 'false,false': 'workedunder(B, J), workedunder(B, K)', 'false,true': 'workedunder(G, H)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)'}, {'true,true': [1.854, 5, 11], 'false,true,true,true': [4.69, 44, 44], 'false,false,false': [2.133, 13, 7], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.486, 62, 62]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [5.485, 62, 62]}]]
[{'': [0.2500000000000005, 0.2499999999999995], 'false': [0.2499999999999995, nan], 'true': [0.2500000000000005, nan], 'false,true': [0.2499999999999995, nan]}, {'': [0.25000000000000056, 0.25000000000000006], 'true,true': [0.25000000000000056, nan], 'true': [0.25000000000000056, nan], 'false,true': [0.25000000000000006, nan], 'false': [0.25000000000000006, nan]}, {'': [0.2500000000000012, 0.2499999999999999], 'false': [0.2499999999999999, nan], 'true': [0.2500000000000012, nan], 'false,true': [0.2499999999999999, nan]}, {'': [0.21484375000000025, 0.2492283950617288], 'true,true': [0.21484375000000025, nan], 'false,false': [nan, 0.22750000000000012], 'false,true': [0.2500000000000006, nan], 'false': [0.2500000000000006, 0.22750000000000012], 'true': [0.21484375000000025, nan]}, {'': [0.21484375000000006, 0.24790855154646999], 'false': [0.24999999999999944, 0.22750000000000004], 'true': [0.21484375000000006, nan], 'false,true': [0.24999999999999944, nan], 'false,false': [nan, 0.22750000000000004]}, {'': [0.21484375000000003, 0.24704726848595285], 'false,false,false': [nan, 0.22749999999999995], 'false,false': [nan, 0.22749999999999995], 'false,true': [0.24999999999999975, nan], 'false': [0.24999999999999975, 0.22749999999999995], 'true': [0.21484375000000003, nan]}, {'': [0.24337598656404758, nan]}, {'': [0.21484375, 0.2464841129620146], 'false,true,true': [0.24999999999999964, nan], 'false,false': [nan, 0.22749999999999998], 'false,true': [0.24999999999999964, nan], 'false': [0.24999999999999964, 0.22749999999999998], 'true': [0.21484375, nan]}, {'': [0.24267636023172282, nan]}, {'': [0.24266307353576438, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;false;workedunder(E, B), workedunder(E, F).;true;true', '0;true;workedunder(B, C), workedunder(B, D).;true;true', '0;false,true;workedunder(E, G).;true;true', '1;;movie(A, B) :- actor(B).;true;true', '1;true,true;workedunder(D, C), workedunder(D, E).;true;true', '1;true;workedunder(B, C).;true;true', '1;false,true;workedunder(F, H).;true;true', '1;false;workedunder(F, B), workedunder(F, G).;true;true', '2;;movie(A, B) :- actor(B).;true;true', '2;false;workedunder(D, B), workedunder(D, E).;true;true', '2;true;workedunder(B, C).;true;true', '2;false,true;workedunder(D, F).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;true,true;workedunder(D, E).;true;true', '3;false,false;actor(B).;true;true', '3;false,true;workedunder(G, F), workedunder(G, H).;true;true', '3;false;workedunder(B, F).;true;true', '3;true;workedunder(D, B).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, E).;true;true', '4;true;workedunder(D, B).;true;true', '4;false,true;workedunder(F, E), workedunder(F, G).;true;true', '4;false,false;actor(B).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false,false,false;actor(B).;true;true', '5;false,false;workedunder(B, G).;true;true', '5;false,true;workedunder(B, F).;true;true', '5;false;workedunder(B, E).;true;true', '5;true;workedunder(D, B).;true;true', '6;;movie(A, B) :- workedunder(C, D).;true;true', '7;;movie(A, B) :- genre(B, C).;true;true', '7;false,true,true;workedunder(G, I).;true;true', '7;false,false;workedunder(B, J), workedunder(B, K).;true;true', '7;false,true;workedunder(G, H).;true;true', '7;false;workedunder(B, F).;true;true', '7;true;workedunder(D, B), workedunder(D, E).;true;true', '8;;movie(A, B) :- workedunder(C, D).;true;true', '9;;movie(A, B) :- workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.3071285269362462;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | else return 0.42225149920207555;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then if ( female(B) )
%   | | | then return 0.2654884656905158;  // std dev = 3,482, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.3627317202820194;  // std dev = 3,097, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.3087411357856347;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( female(B) )
%   | | then return 0.2223398029964893;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | else return 0.2981033569258199;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2564123687585867;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.3936374073445395;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then if ( female(B) )
%   | | | then return 0.18102856844321286;  // std dev = 3,482, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.23602953423650092;  // std dev = 3,097, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05613740734453968;  // std dev = 0,477, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.3059702244955171;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then if ( female(B) )
%   | | | then return 0.1440674625667271;  // std dev = 3,482, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.18205913473761667;  // std dev = 3,097, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.044355232106110254;  // std dev = 0,477, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.23165714196937964;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.11270649878191542;  // std dev = 3,482, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.1382577573074591;  // std dev = 3,097, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03486161171181514;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.0871058235694599;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | else if ( actor(B) )
%   | | then return 0.10415829145499848;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0.09243266421115987;  // std dev = 0,477, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.15081606529070518;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07183005959600584;  // std dev = 4,660, 88,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, J), workedunder(B, K) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.006764937039479629;  // std dev = 0,477, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.04966092189743504;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | else if ( actor(B) )
%   | | then return 0.06024730207091126;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0.0533952912121069;  // std dev = 0,474, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.037691705353524126;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | else if ( actor(B) )
%   | | then return 0.045194421222832126;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else return 0.040860759207270156;  // std dev = 0,474, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.483937
   AUC PR    = 0.493919
   CLL	      = -0.704065
   Precision = 0.485915 at threshold = 0.5
   Recall    = 0.616071
   F1        = 0.543307


Total learning time: 4.654 seconds
Total inference time: 1.413 seconds
AUC ROC: 0.483937


Refined model AUC ROC: 0.483937


Dataset: 4_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:09:04
{'AUC ROC': 0.483937, 'Recall': 0.616071, 'Parameter Learning results': {'AUC ROC': 0.50014, 'Recall': 0.066964, 'CLL': -0.696145, 'AUC PR': 0.502391, 'Precision': [0.517241, 0.5], 'F1': 0.118577, 'Inference time': 0.907, 'Learning time': 1.678}, 'CLL': -0.704065, 'AUC PR': 0.493919, 'Precision': [0.485915, 0.5], 'F1': 0.543307, 'Inference time': 1.413, 'Mapping results': {'Total time': 3.7332417964935303, 'Possible mappings': 1729, 'Finding best mapping': 1.034391164779663, 'Knowledge compiling time': 0.04305696487426758, 'Generating paths time': 2.5251846313476562, 'Generating mappings time': 0.13060307502746582}, 'Learning time': 6.332}


Start learning from scratch in target domain

Target train facts examples: 279
Target train pos examples: 62
Target train neg examples: 62

Target test facts examples: 513
Target test pos examples: 224
Target test neg examples: 224

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.3071285269362462;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.42225149920207555;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.35814893509951234;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.2654884656905158;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.3627317202820194;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.3087411357856347;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.2223398029964893;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.2981033569258199;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.2564123687585867;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.18102856844321286;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.23602953423650092;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.20613740734454003;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1440674625667271;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.18205913473761667;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.16162857548414641;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.11270649878191542;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.1382577573074591;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.1245559779208195;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.0871058235694599;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.10415829145499848;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.09492800936730651;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.06675930920391772;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.07820100239632329;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.07186088850055877;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.050876585429319;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.058654705566057876;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.054183073759549616;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.03862481788182935;  // std dev = 0,497, 49,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.04400165302883467;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return 0.04076025323305632;  // std dev = 0,500, 36,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */


Results
   AUC ROC   = 0.480489
   AUC PR    = 0.487267
   CLL	      = -0.703178
   Precision = 0.482353 at threshold = 0.5
   Recall    = 0.549107
   F1        = 0.51357


Total learning time: 2.365 seconds
Total inference time: 0.673 seconds
AUC ROC: 0.480489


Dataset: 4_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:09:07
{'AUC ROC': 0.480489, 'Recall': 0.549107, 'CLL': -0.703178, 'AUC PR': 0.487267, 'Precision': [0.482353, 0.5], 'F1': 0.51357, 'Inference time': 0.673, 'Learning time': 2.365}


Starting fold 4

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.016804933547973633
   Generating paths time   = 2.507345676422119
   Generating mappings time   = 0.1296248435974121
   Possible mappings   = 1729
   Finding best mapping   = 1.0459768772125244
   Total time   = 3.699758291244507


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;true
0;false;workedunder(Q, B), workedunder(Q, R).;true;false
0;false,true;workedunder(Q, S).;false;false
0;true;workedunder(B, C), workedunder(B, D).;false;true
0;true,false;workedunder(B, H).;true;false
0;true,false,true;workedunder(M, K).;false;false
1;;movie(A, B) :- actor(B).;true;true
1;true,true;workedunder(D, C), workedunder(D, E).;false;false
1;true,false;workedunder(B, H).;false;false
1;false,true;workedunder(K, M).;false;false
1;false;workedunder(K, B), workedunder(K, L).;true;false
1;true;workedunder(B, C).;true;true
2;;movie(A, B) :- actor(B).;true;true
2;false,false;genre(B, K).;false;false
2;true,false,false;workedunder(B, E).;false;false
2;false,true;workedunder(H, J).;false;false
2;false;workedunder(H, B), workedunder(H, I).;true;true
2;true,false;workedunder(B, D).;false;true
2;true;workedunder(B, C).;false;true
3;;movie(A, B) :- genre(B, C).;true;true
3;true,true;workedunder(D, E).;false;false
3;false,false,true;workedunder(B, K).;false;false
3;false,false;actor(B).;true;false
3;false,true,false;workedunder(I, F), workedunder(I, J).;false;false
3;false,true;workedunder(G, F), workedunder(G, H).;false;true
3;false;workedunder(B, F).;true;true
3;true;workedunder(D, B).;true;false
4;;movie(A, B) :- genre(B, C).;true;true
4;false,false,true;workedunder(B, L).;false;false
4;false,false;actor(B).;true;false
4;false,true;workedunder(F, E), workedunder(F, G).;false;false
4;false;workedunder(B, E).;true;true
4;true;workedunder(D, B).;false;false
5;;movie(A, B) :- genre(B, C).;true;true
5;false,true,false;workedunder(B, J).;false;false
5;false,false,false;actor(B).;false;false
5;false,false;workedunder(B, M).;false;true
5;false,true;workedunder(B, H).;false;true
5;false;workedunder(B, E).;true;true
5;true;workedunder(D, B).;false;false
6;;movie(A, B) :- workedunder(G, E).;false;true
6;false;workedunder(K, B).;false;true
6;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
6;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
6;false,false;workedunder(B, L).;true;true
7;;movie(A, B) :- genre(B, C).;true;true
7;false,true,true;workedunder(J, K).;false;false
7;false,false,true;genre(N, Q), genre(P, Q).;false;false
7;false,false;workedunder(B, N), workedunder(B, P).;true;false
7;false,true,false;workedunder(B, M).;false;false
7;false,true;workedunder(J, I).;true;true
7;false;workedunder(B, F).;true;true
7;true;workedunder(D, B), workedunder(D, E).;false;false
8;;movie(A, B) :- workedunder(G, E).;false;true
8;false;workedunder(L, B).;false;true
8;false,false,true;workedunder(N, M), workedunder(N, P).;false;false
8;false,false,false;workedunder(Q, B), workedunder(Q, R).;false;false
8;false,false;workedunder(B, M).;true;true
9;;movie(A, B) :- workedunder(G, E).;false;true
9;false,true,false;workedunder(K, H), workedunder(K, L).;false;false
9;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
9;false,false;workedunder(M, B), workedunder(M, N).;false;true
9;false,true;workedunder(I, H), workedunder(I, J).;false;true
9;false;workedunder(B, H).;true;true


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then return 0.35814893509951307;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then return 0.30874113578563583;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.30874113578563506;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then return 0.25641236875858603;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2564123687585864;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.20613740734453972;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then return 0.20613740734453867;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.1616285754841467;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then return 0.16162857548414733;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.12455597792081965;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.12455597792082009;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09492800936730739;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.0718608885005585;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.07186088850055854;  // std dev = 4,743, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.05418307375954952;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04076025323305626;  // std dev = 4,950, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.497258
   AUC PR    = 0.498147
   CLL	      = -0.69453
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.649 seconds
Total inference time: 1.087 seconds
AUC ROC: 0.497258


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(E, B), workedunder(E, F)', 'true': 'workedunder(B, C), workedunder(B, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [4.743, 45, 45], 'false,true,true': [1.414, 4, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'actor(B)', 'true,true': 'workedunder(D, C), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(F, H)', 'false': 'workedunder(F, B), workedunder(F, G)'}, {'false,true,true': [1.414, 4, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [4.743, 45, 45]}], ['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(D, F)'}, {'true,true': [4.743, 45, 45], 'false,true,true': [1.414, 4, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'true,true': 'workedunder(D, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(G, F), workedunder(G, H)', 'false': 'workedunder(B, F)'}, {'false,true,true': [4.743, 45, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [1.414, 4, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(F, E), workedunder(F, G)'}, {'true,true': [1.414, 4, 4], 'false,true,true': [4.743, 45, 45], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(B, F)'}, {'true,true': [1.414, 4, 4], 'false,true,true': [4.743, 45, 45], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [4.95, 49, 49]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true,true': 'workedunder(G, I)', 'false,true': 'workedunder(G, H)'}, {'true,true': [1.414, 4, 4], 'false,true,true,true': [4.743, 45, 45], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [4.95, 49, 49]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [4.95, 49, 49]}]]
[{'': [0.25000000000000033, 0.24999999999999986], 'false': [0.24999999999999986, nan], 'true': [0.25000000000000033, nan], 'false,true': [0.24999999999999986, nan]}, {'': [0.2500000000000005, 0.24999999999999994], 'true,true': [0.2500000000000005, nan], 'true': [0.2500000000000005, nan], 'false,true': [0.24999999999999994, nan], 'false': [0.24999999999999994, nan]}, {'': [0.2500000000000011, 0.25], 'false': [0.25, nan], 'true': [0.2500000000000011, nan], 'false,true': [0.25, nan]}, {'': [0.24999999999999994, 0.2500000000000007], 'false': [0.2500000000000007, nan], 'true,true': [0.24999999999999994, nan], 'true': [0.24999999999999994, nan], 'false,true': [0.2500000000000007, nan]}, {'': [0.24999999999999997, 0.24999999999999942], 'false': [0.24999999999999942, nan], 'true': [0.24999999999999997, nan], 'false,true': [0.24999999999999942, nan]}, {'': [0.24999999999999997, 0.24999999999999972], 'false': [0.24999999999999972, nan], 'true': [0.24999999999999997, nan], 'false,true': [0.24999999999999972, nan]}, {'': [0.2499999999999996, nan]}, {'': [0.24999999999999994, 0.24999999999999953], 'false': [0.24999999999999953, nan], 'false,true,true': [0.24999999999999953, nan], 'true': [0.24999999999999994, nan], 'false,true': [0.24999999999999953, nan]}, {'': [0.2499999999999994, nan]}, {'': [0.24999999999999978, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;false;workedunder(E, B), workedunder(E, F).;true;true', '0;true;workedunder(B, C), workedunder(B, D).;true;true', '0;false,true;workedunder(E, G).;true;true', '1;;movie(A, B) :- actor(B).;true;true', '1;true,true;workedunder(D, C), workedunder(D, E).;true;true', '1;true;workedunder(B, C).;true;true', '1;false,true;workedunder(F, H).;true;true', '1;false;workedunder(F, B), workedunder(F, G).;true;true', '2;;movie(A, B) :- actor(B).;true;true', '2;false;workedunder(D, B), workedunder(D, E).;true;true', '2;true;workedunder(B, C).;true;true', '2;false,true;workedunder(D, F).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;true,true;workedunder(D, E).;true;true', '3;true;workedunder(D, B).;true;true', '3;false,true;workedunder(G, F), workedunder(G, H).;true;true', '3;false;workedunder(B, F).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, E).;true;true', '4;true;workedunder(D, B).;true;true', '4;false,true;workedunder(F, E), workedunder(F, G).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, E).;true;true', '5;true;workedunder(D, B).;true;true', '5;false,true;workedunder(B, F).;true;true', '6;;movie(A, B) :- workedunder(C, D).;true;true', '7;;movie(A, B) :- genre(B, C).;true;true', '7;false;workedunder(B, F).;true;true', '7;false,true,true;workedunder(G, I).;true;true', '7;true;workedunder(D, B), workedunder(D, E).;true;true', '7;false,true;workedunder(G, H).;true;true', '8;;movie(A, B) :- workedunder(C, D).;true;true', '9;;movie(A, B) :- workedunder(C, D).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.5456489350995123;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0.3176083945589705;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then if ( female(B) )
%   | | | then return 0.46555214248586174;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.27439300629849933;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then return 0.2553008540182454;  // std dev = 0,495, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.20613740734453972;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then return 0.2054158313643392;  // std dev = 0,495, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.1616285754841467;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then return 0.1612895364995886;  // std dev = 0,495, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.12455597792081965;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.22910177371950186;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.10190454301000426;  // std dev = 4,287, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.1719277695396259;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( actor(B) )
%   | | then return 0.07817215101736966;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | else return 0.09492800936730683;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.07186088850055856;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.0719479450821739;  // std dev = 4,678, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.11154626100321867;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( actor(B) )
%   | | then return 0.042183933770062756;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | else return 0.05418307375954945;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then if ( female(B) )
%   | then return 0.0845598175047321;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( actor(B) )
%   | | then return 0.031892241044286014;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | | else return 0.040760253233056216;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504647
   AUC PR    = 0.498581
   CLL	      = -0.712621
   Precision = 0.489796 at threshold = 0.5
   Recall    = 0.405063
   F1        = 0.443418


Total learning time: 2.866 seconds
Total inference time: 1.662 seconds
AUC ROC: 0.504647


Refined model AUC ROC: 0.504647


Dataset: 4_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:09:19
{'AUC ROC': 0.504647, 'Recall': 0.405063, 'Parameter Learning results': {'AUC ROC': 0.497258, 'Recall': 0.0, 'CLL': -0.69453, 'AUC PR': 0.498147, 'Precision': [nan, 0.5], 'F1': nan, 'Inference time': 1.087, 'Learning time': 1.649}, 'CLL': -0.712621, 'AUC PR': 0.498581, 'Precision': [0.489796, 0.5], 'F1': 0.443418, 'Inference time': 1.662, 'Mapping results': {'Total time': 3.699758291244507, 'Possible mappings': 1729, 'Finding best mapping': 1.0459768772125244, 'Knowledge compiling time': 0.016804933547973633, 'Generating paths time': 2.507345676422119, 'Generating mappings time': 0.1296248435974121}, 'Learning time': 4.515000000000001}


Start learning from scratch in target domain

Target train facts examples: 102
Target train pos examples: 49
Target train neg examples: 49

Target test facts examples: 690
Target test pos examples: 237
Target test neg examples: 237

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then return 0.35814893509951307;  // std dev = 0,500, 90,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else return 0.3581489350995123;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.4962411357856348;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.26820059524509415;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.30874113578563506;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.4077314428722865;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.22326368076944844;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.2564123687585864;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.31881876170436213;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.18065241719871403;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.20613740734453972;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.24204697584108628;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.14292288965657712;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.1616285754841467;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.18175344021880444;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.1112255837980798;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.12455597792081965;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.13649288231374612;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.08557448320462645;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.09492800936730683;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.10300985838650464;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.06533585369119725;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.07186088850055856;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.07823031010203246;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.04963124201482557;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.05418307375954945;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.059773972171805544;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.03757550177002474;  // std dev = 0,498, 74,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=34 */
%   | else return 0.040760253233056216;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.493003
   AUC PR    = 0.494273
   CLL	      = -0.718411
   Precision = 0.489796 at threshold = 0.5
   Recall    = 0.405063
   F1        = 0.443418


Total learning time: 1.725 seconds
Total inference time: 0.683 seconds
AUC ROC: 0.493003


Dataset: 4_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:09:22
{'AUC ROC': 0.493003, 'Recall': 0.405063, 'CLL': -0.718411, 'AUC PR': 0.494273, 'Precision': [0.489796, 0.5], 'F1': 0.443418, 'Inference time': 0.683, 'Learning time': 1.725}


Starting fold 5

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.05556845664978027
   Generating paths time   = 2.5381383895874023
   Generating mappings time   = 0.13023591041564941
   Possible mappings   = 1729
   Finding best mapping   = 1.0468168258666992
   Total time   = 3.770765542984009


Best mapping found: ['tempadvisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'professor(A) -> actor(A)', 'inphase(A,B) -> genre(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;true
0;false;workedunder(Q, B), workedunder(Q, R).;true;false
0;false,true;workedunder(Q, S).;false;false
0;true;workedunder(B, C), workedunder(B, D).;false;true
0;true,false;workedunder(B, H).;true;false
0;true,false,true;workedunder(M, K).;false;false
1;;movie(A, B) :- actor(B).;true;true
1;true,true;workedunder(D, C), workedunder(D, E).;false;false
1;true,false;workedunder(B, H).;false;false
1;false,true;workedunder(K, M).;false;false
1;false;workedunder(K, B), workedunder(K, L).;true;false
1;true;workedunder(B, C).;true;true
2;;movie(A, B) :- actor(B).;true;true
2;false,false;genre(B, K).;false;false
2;true,false,false;workedunder(B, E).;false;false
2;false,true;workedunder(H, J).;false;false
2;false;workedunder(H, B), workedunder(H, I).;true;true
2;true,false;workedunder(B, D).;false;true
2;true;workedunder(B, C).;false;true
3;;movie(A, B) :- genre(B, C).;true;true
3;true,true;workedunder(D, E).;false;false
3;false,false,true;workedunder(B, K).;false;false
3;false,false;actor(B).;true;false
3;false,true,false;workedunder(I, F), workedunder(I, J).;false;false
3;false,true;workedunder(G, F), workedunder(G, H).;false;true
3;false;workedunder(B, F).;true;true
3;true;workedunder(D, B).;true;false
4;;movie(A, B) :- genre(B, C).;true;true
4;false,false,true;workedunder(B, L).;false;false
4;false,false;actor(B).;true;false
4;false,true;workedunder(F, E), workedunder(F, G).;false;false
4;false;workedunder(B, E).;true;true
4;true;workedunder(D, B).;false;false
5;;movie(A, B) :- genre(B, C).;true;true
5;false,true,false;workedunder(B, J).;false;false
5;false,false,false;actor(B).;false;false
5;false,false;workedunder(B, M).;false;true
5;false,true;workedunder(B, H).;false;true
5;false;workedunder(B, E).;true;true
5;true;workedunder(D, B).;false;false
6;;movie(A, B) :- workedunder(G, E).;false;true
6;false;workedunder(K, B).;false;true
6;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
6;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
6;false,false;workedunder(B, L).;true;true
7;;movie(A, B) :- genre(B, C).;true;true
7;false,true,true;workedunder(J, K).;false;false
7;false,false,true;genre(N, Q), genre(P, Q).;false;false
7;false,false;workedunder(B, N), workedunder(B, P).;true;false
7;false,true,false;workedunder(B, M).;false;false
7;false,true;workedunder(J, I).;true;true
7;false;workedunder(B, F).;true;true
7;true;workedunder(D, B), workedunder(D, E).;false;false
8;;movie(A, B) :- workedunder(G, E).;false;true
8;false;workedunder(L, B).;false;true
8;false,false,true;workedunder(N, M), workedunder(N, P).;false;false
8;false,false,false;workedunder(Q, B), workedunder(Q, R).;false;false
8;false,false;workedunder(B, M).;true;true
9;;movie(A, B) :- workedunder(G, E).;false;true
9;false,true,false;workedunder(K, H), workedunder(K, L).;false;false
9;false,false,false;workedunder(P, B), workedunder(P, Q).;false;false
9;false,false;workedunder(M, B), workedunder(M, N).;false;true
9;false,true;workedunder(I, H), workedunder(I, J).;false;true
9;false;workedunder(B, H).;true;true


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C), workedunder(B, D) )
%   | then return 0.3420199028414485;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(E, B), workedunder(E, F) )
%   | then if ( workedunder(E, G) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(D, C), workedunder(D, E) )
%   | | then return 0.2950945092334478;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(F, B), workedunder(F, G) )
%   | then if ( workedunder(F, H) )
%   | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then return 0.24572761349188973;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then if ( workedunder(D, E) )
%   | | then return 0.28541139495094314;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, F), workedunder(G, H) )
%   | | then return 0.19833363740893914;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5354113949509431;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.21417940333886568;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(F, E), workedunder(F, G) )
%   | | then return 0.1562190432905969;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4028682297194971;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B) )
%   | then return 0.16151458548959527;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.12092610815781733;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.31079686872911527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.09536555974311388;  // std dev = 4,899, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.10101336507730427;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(G, H) )
%   | | then if ( workedunder(G, I) )
%   | | | then return 0.06959432601033505;  // std dev = 4,819, 93,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, J), workedunder(B, K) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.23102030939782348;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.055091554194627905;  // std dev = 4,899, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, D) )
%   then return 0.04164586483947319;  // std dev = 4,899, 98,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.49635
   AUC PR    = 0.488913
   CLL	      = -0.720515
   Precision = 0.491803 at threshold = 0.5
   Recall    = 0.126582
   F1        = 0.201342


Total learning time: 1.362 seconds
Total inference time: 1.042 seconds
AUC ROC: 0.49635


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(E, B), workedunder(E, F)', 'true': 'workedunder(B, C), workedunder(B, D)', 'false,true': 'workedunder(E, G)'}, {'true,true': [4.819, 48, 45], 'false,true,true': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'actor(B)', 'true,true': 'workedunder(D, C), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(F, H)', 'false': 'workedunder(F, B), workedunder(F, G)'}, {'false,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true': [4.819, 48, 45]}], ['movie(A, B)', {'': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'true': 'workedunder(B, C)', 'false,true': 'workedunder(D, F)'}, {'true,true': [4.819, 48, 45], 'false,true,true': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'true,true': 'workedunder(D, E)', 'false,false': 'actor(B)', 'false,true': 'workedunder(G, F), workedunder(G, H)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B)'}, {'false,true,true': [4.819, 48, 45], 'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [0.866, 1, 3], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, E)', 'true': 'workedunder(D, B)', 'false,true': 'workedunder(F, E), workedunder(F, G)', 'false,false': 'actor(B)'}, {'true,true': [0.866, 1, 3], 'false,true,true': [4.819, 48, 45], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false,false,false': 'actor(B)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)', 'false,false': 'workedunder(B, G)', 'true': 'workedunder(D, B)'}, {'true,true': [0.866, 1, 3], 'false,true,true': [4.819, 48, 45], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [4.899, 49, 49]}], ['movie(A, B)', {'': 'genre(B, C)', 'false,true,true': 'workedunder(G, I)', 'false,false': 'workedunder(B, J), workedunder(B, K)', 'false,true': 'workedunder(G, H)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)'}, {'true,true': [0.866, 1, 3], 'false,true,true,true': [4.819, 48, 45], 'false,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [4.899, 49, 49]}], ['movie(A, B)', {'': 'workedunder(C, D)'}, {'false': [0.0, 0, 0], 'true': [4.899, 49, 49]}]]
[{'': [0.24973985431841866, 0.15999999999999986], 'false': [0.15999999999999986, nan], 'true': [0.24973985431841866, nan], 'false,true': [0.15999999999999986, nan]}, {'': [0.2497398543184165, 0.16], 'true,true': [0.2497398543184165, nan], 'true': [0.2497398543184165, nan], 'false,true': [0.16, nan], 'false': [0.16, nan]}, {'': [0.24973985431841816, 0.15999999999999998], 'false': [0.15999999999999998, nan], 'true': [0.24973985431841816, nan], 'false,true': [0.15999999999999998, nan]}, {'': [0.1875, 0.24827892689137135], 'true,true': [0.1875, nan], 'false,false': [nan, 0.0], 'false,true': [0.24973985431841786, nan], 'false': [0.24973985431841786, 0.0], 'true': [0.1875, nan]}, {'': [0.18749999999999997, 0.24772335194885164], 'false': [0.24973985431841822, 0.0], 'true': [0.18749999999999997, nan], 'false,true': [0.24973985431841822, nan], 'false,false': [nan, 0.0]}, {'': [0.1875, 0.24746248762828993], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true': [0.24973985431841877, nan], 'false': [0.24973985431841877, 0.0], 'true': [0.1875, nan]}, {'': [0.24492892080210302, nan]}, {'': [0.1875, 0.2473573147154911], 'false,true,true': [0.24973985431841753, nan], 'false,false': [nan, 0.0], 'false,true': [0.24973985431841753, nan], 'false': [0.24973985431841753, 0.0], 'true': [0.1875, nan]}, {'': [0.2448718015310853, nan]}, {'': [0.24488947346283227, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['3;;movie(A, B) :- genre(B, C).;true;true', '3;false;workedunder(B, F).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, E).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, E).;true;true', '7;;movie(A, B) :- genre(B, C).;true;true', '7;false;workedunder(B, F).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.35814893509951135;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.3262340414824902;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.3087411357856347;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.28171422482890246;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.25641236875858686;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.23519292070564615;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.28541139495094314;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.20613740734454022;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.19057755295478856;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else return 0.5354113949509431;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.21417940333886568;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.16162857548414628;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.15080101353659994;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else return 0.4028682297194971;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.16151458548959527;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.12455597792082038;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.11727501093763941;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else return 0.31079686872911527;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.09492800936730647;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.09012256866998798;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.14810619011890608;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.08909530257822254;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( female(B) )
%   | | then return 0.07186088850055894;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.06871315573496113;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else return 0.22178410736987497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.05418307375954963;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.05212246791353032;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.09271223196588593;  // std dev = 0,872, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.04076025323305635;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.039407136735360955;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.074140405975055;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.499288
   AUC PR    = 0.490479
   CLL	      = -0.725125
   Precision = 0.491803 at threshold = 0.5
   Recall    = 0.126582
   F1        = 0.201342


Total learning time: 1.744 seconds
Total inference time: 0.797 seconds
AUC ROC: 0.499288


Refined model AUC ROC: 0.499288


Dataset: 4_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:09:31
{'AUC ROC': 0.499288, 'Recall': 0.126582, 'Parameter Learning results': {'AUC ROC': 0.49635, 'Recall': 0.126582, 'CLL': -0.720515, 'AUC PR': 0.488913, 'Precision': [0.491803, 0.5], 'F1': 0.201342, 'Inference time': 1.042, 'Learning time': 1.362}, 'CLL': -0.725125, 'AUC PR': 0.490479, 'Precision': [0.491803, 0.5], 'F1': 0.201342, 'Inference time': 0.797, 'Mapping results': {'Total time': 3.770765542984009, 'Possible mappings': 1729, 'Finding best mapping': 1.0468168258666992, 'Knowledge compiling time': 0.05556845664978027, 'Generating paths time': 2.5381383895874023, 'Generating mappings time': 0.13023591041564941}, 'Learning time': 3.106}


Start learning from scratch in target domain

Target train facts examples: 114
Target train pos examples: 49
Target train neg examples: 49

Target test facts examples: 678
Target test pos examples: 237
Target test neg examples: 237

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.35814893509951135;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.3262340414824902;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.3087411357856347;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.28171422482890246;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.25641236875858686;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.23519292070564615;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.20613740734454022;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.19057755295478856;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.16162857548414628;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.15080101353659994;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.25176837314502193;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.12455597792082038;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.11727501093763941;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.19047961032437172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.09492800936730647;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.09012256866998798;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.14620194507639933;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.07186088850055894;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.06871315573496113;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.11389369465607464;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.05418307375954963;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.05212246791353032;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.08989956180301868;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.04076025323305635;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else return 0.039407136735360955;  // std dev = 0,499, 47,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else return 0.0717481021516045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.500828
   AUC PR    = 0.499097
   CLL	      = -0.716119
   Precision = 0.491803 at threshold = 0.5
   Recall    = 0.126582
   F1        = 0.201342


Total learning time: 1.794 seconds
Total inference time: 0.751 seconds
AUC ROC: 0.500828


Dataset: 4_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:09:34
{'AUC ROC': 0.500828, 'Recall': 0.126582, 'CLL': -0.716119, 'AUC PR': 0.499097, 'Precision': [0.491803, 0.5], 'F1': 0.201342, 'Inference time': 0.751, 'Learning time': 1.794}


