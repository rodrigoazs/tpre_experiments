Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.14386322081379807;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.7711924133603816;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.4652917922423689;  // std dev = 3,655, 56,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   else return -0.14185106490048802;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(C, F), publication(E, F) )
%   | | | then return 0.3861400788776212;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.6285643213018635;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return 0.14274903276520085;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.6370720642963897;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5301902723425784;  // std dev = 3,340, 62,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=47 */
%   | | | else return 0.2847516480457605;  // std dev = 1,974, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return -0.12544463852839127;  // std dev = 5,96e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5725712483977502;  // std dev = 0,145, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.2443539812257133;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4644573458371937;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.027896061445591175;  // std dev = 1,990, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.48592628078559036;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.4803635870804116;  // std dev = 2,429, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | | else return 0.33530903565122666;  // std dev = 3,360, 50,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   else return -0.11231637819360642;  // std dev = 5,58e-08, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, B), publication(C, A) )
%   | | then if ( publication(C, D), ta(E, D, F) )
%   | | | then return 0.4521120578111139;  // std dev = 0,145, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.38720883035152787;  // std dev = 0,972, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.13926796548246548;  // std dev = 3,040, 39,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.33078698107238863;  // std dev = 3,711, 73,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=55 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783648;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.18545918109803056;  // std dev = 0,933, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.32643137349529333;  // std dev = 0,010, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3490825311182001;  // std dev = 0,132, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then if ( publication(J, A) )
%   | | | then return -0.4185151781366958;  // std dev = 0,260, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0025748783689608368;  // std dev = 1,363, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.36678594717326296;  // std dev = 1,437, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17751671677802294;  // std dev = 4,502, 98,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=60 */
%   else return -0.09269127618926065;  // std dev = 8,69e-08, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B), publication(E, A) )
%   | | then if ( publication(G, F) )
%   | | | then return 0.0474709853408497;  // std dev = 0,856, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.260481461841796;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.5419743421011803;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3059691614886971;  // std dev = 2,162, 37,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return -0.053200807418884166;  // std dev = 1,152, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2680443902770318;  // std dev = 0,076, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( tempadvisedby(N, B), publication(P, B) )
%   | | | then return -0.07590350908163754;  // std dev = 2,448, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.14907099600102913;  // std dev = 3,206, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   else return -0.08518475138839678;  // std dev = 7,15e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.2323605304663118;  // std dev = 0,191, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.15349517077945463;  // std dev = 0,934, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.06204652189474957;  // std dev = 3,092, 51,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | | | else return 0.1760119433601777;  // std dev = 3,147, 48,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | else if ( ta(J, A, K), publication(L, B) )
%   | | then return 0.24453898996759085;  // std dev = 1,006, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(M, A), publication(M, B) )
%   | | | then return 0.21367299326565573;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.24548983258301127;  // std dev = 1,635, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( ta(N, A, P) )
%   | then return -0.08958540337684642;  // std dev = 0,068, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.07444762298136824;  // std dev = 0,050, 137,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.2677195101842362;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.191017402885785;  // std dev = 0,128, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(G, A) )
%   | | | then return -0.23220469397823204;  // std dev = 0,381, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03300179359982612;  // std dev = 1,246, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.056717008049567044;  // std dev = 2,743, 45,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | | else return 0.14113661061993762;  // std dev = 3,531, 61,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   else return -0.07328726652426731;  // std dev = 0,006, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.5392413168430027;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32751715962696626;  // std dev = 0,106, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, B), ta(G, A, H) )
%   | | then if ( ta(G, I, J), tempadvisedby(I, K) )
%   | | | then return 0.04360821347753422;  // std dev = 2,101, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.2316189819229224;  // std dev = 1,419, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else if ( publication(L, A), publication(L, B) )
%   | | | then return 0.16633429076564776;  // std dev = 0,124, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.017160374242431393;  // std dev = 3,679, 67,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=31 */
%   else if ( student(B) )
%   | then return -0.06850088350932798;  // std dev = 0,005, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( hasposition(B, M) )
%   | | then return -0.06870082740474615;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.02446962377776844;  // std dev = 0,709, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.14063188032703763;  // std dev = 0,058, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.15812153956850084;  // std dev = 0,828, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.18420847384125377;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13800681695663403;  // std dev = 0,055, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then if ( ta(L, J, M) )
%   | | | then return 0.12653859117808702;  // std dev = 0,502, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2318242649797125;  // std dev = 1,246, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return -0.015270381644293275;  // std dev = 2,553, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return 0.07714886473603602;  // std dev = 3,815, 74,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   else return -0.06426970154793316;  // std dev = 0,005, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */


Predicates from source: ['advisedby(person,person).', 'ta(course,person,quarter).', 'projectmember(project,person).', 'professor(person).', 'student(person).', 'hasposition(person,faculty).', 'tempadvisedby(person,person).', 'publication(title,person).']

Starting fold 1

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.011740922927856445
   Generating paths time   = 2.303838014602661
   Generating mappings time   = 0.08180475234985352
   Possible mappings   = 864
   Finding best mapping   = 0.23665547370910645
   Total time   = 2.6340463161468506


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(D, E), director(E).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true,false;movie(I, A).;true;true
1;true,false,true;movie(I, J), director(J).;false;false
1;true;movie(C, A), movie(C, B).;true;true
1;true,false,false;movie(K, B).;false;false
1;true,true;movie(E, D).;true;false
1;true,true,true;movie(C, F), movie(E, F).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true,false;movie(G, B), movie(H, A).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true;movie(C, B), movie(C, A).;false;true
3;;workedunder(A, B) :- director(B).;true;false
3;true;actor(A).;true;false
3;true,true,false;movie(G, A).;false;false
3;true,true;movie(C, B), movie(C, A).;true;true
3;true,true,true;movie(C, D).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,false;movie(I, H).;true;true
4;true,false,true;movie(J, A).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,false;genre(B, K).;false;false
4;true,true;movie(G, D).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false;movie(J, B), movie(J, A).;true;true
5;true,false,true;movie(J, K).;false;false
5;true;movie(E, B).;true;true
5;true,true,false;movie(H, A).;false;false
5;true,false,false;movie(P, B).;false;false
5;true,true;movie(E, A).;true;true
5;true,true,true;movie(G, F).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;false
6;true,false;movie(L, B).;false;true
6;true;genre(D, C), genre(D, E).;true;true
6;true,true,false;movie(I, B).;false;false
6;true,false,false;movie(M, A), movie(M, B).;false;false
6;true,true;movie(F, A), movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(F, E).;true;true
7;true,false,true;movie(G, A).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(I, B).;false;false
7;true,true;movie(C, D).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false;movie(F, B).;false;true
8;false;actor(B).;false;true
8;true;genre(B, D).;true;true
8;false,false;genre(B, M).;false;false
8;true,false,false;movie(L, A), movie(L, B).;false;false
8;true,true;movie(E, A).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(K, J).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,true;movie(C, G).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09279022122591189;  // std dev = 0,009, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08517704108542276;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), genre(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877013399171434;  // std dev = 4,71e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324048226989596;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.12449509761154491;  // std dev = 0,598, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842195043682041;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( genre(B, F) )
%   | | then return -0.07518861675223204;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1373192993223986;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.08215912691507406;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06418740437801267;  // std dev = 4,28e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065949
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.138 seconds
Total inference time: 2.794 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [8.94e-08, 101, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [0.0, 112, 0], 'true,true,true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [7.74e-08, 95, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [1.03e-07, 0, 56]}], ['workedunder(A, B)', {'': 'director(B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, B), movie(C, A)', 'true,true,true': 'movie(C, D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 111, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(H, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [0.009, 90, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 117, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C), genre(D, E)', 'true,true': 'movie(F, A), movie(F, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.71e-08, 124, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'false': [0.0, 98, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'false': 'actor(B)', 'false,false': 'genre(B, F)', 'true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 120, 0], 'true,true,true': [0.598, 8, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'false': [4.28e-08, 98, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 6, 0], 'true,true,true': [1.49e-08, 0, 56]}]]
[{'': [0.03329369797859664, 7.91446116564468e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.044419605220055364, -5.9476233462061954e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.03354584670317022, 6.310741403132469e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0]}, {'': [0.02355453548953108, -8.001607384685813e-18], 'true': [0.02355453548953108, nan], 'true,true,false': [-2.3129646346357427e-18, nan], 'true,true': [-3.489272363107635e-16, -2.3129646346357427e-18], 'true,true,true': [-3.489272363107635e-16, nan]}, {'': [0.010633911082358413, 8.713207047329598e-07], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.005590808503434667, -3.3211799881949126e-17], 'true': [0.005590808503434667, nan], 'true,true,false': [0.0, nan], 'true,true': [-3.172065784643304e-17, 0.0], 'true,true,true': [-3.172065784643304e-17, nan]}, {'': [-1.586032892321652e-17, 1.7906822977825105e-17], 'true': [-1.586032892321652e-17, nan], 'true,true': [-1.586032892321652e-17, nan]}, {'': [0.005722761906304002, -2.4923374022197392e-17], 'true,false': [-1.1564823173178713e-18, nan], 'true,false,true': [-1.1564823173178713e-18, nan], 'true': [-3.9650822308041306e-17, -1.1564823173178713e-18], 'true,true': [-3.9650822308041306e-17, nan]}, {'': [0.005585947281435629, 3.7528398078207393e-07], 'false,false': [0.0, nan], 'false': [-1.7578531223231644e-17, 0.0], 'true': [0.005585947281435629, nan], 'true,true': [0.005585947281435629, nan]}, {'': [0.004210557216471319, 1.8692530516648043e-17], 'true,false': [1.1564823173178713e-18, nan], 'true': [3.96508223080413e-18, 1.1564823173178713e-18], 'true,true': [3.96508223080413e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;false;actor(B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1123163781936062;  // std dev = 8,43e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839694;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839691;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839689;  // std dev = 1,61e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.08518475138839689;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839691;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.19922405609607363;  // std dev = 0,055, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.19992630006517106;  // std dev = 0,053, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17863682797613833;  // std dev = 4,56e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.17853381398196164;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.10209070019875843;  // std dev = 5,26e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333707;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333707;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333707;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1539113515653119;  // std dev = 3,73e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1538333344336111;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09310999688526014;  // std dev = 5,13e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1349178155972092;  // std dev = 4,56e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1348569938158075;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08551711653453327;  // std dev = 6,34e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066302
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.971 seconds
Total inference time: 2.145 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:02:48
{'Inference time': 2.145, 'Parameter Learning results': {'Inference time': 2.794, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.065949, 'Recall': 1.0, 'Learning time': 2.138, 'AUC ROC': 1.0}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Mapping results': {'Possible mappings': 864, 'Total time': 2.6340463161468506, 'Finding best mapping': 0.23665547370910645, 'Generating paths time': 2.303838014602661, 'Knowledge compiling time': 0.011740922927856445, 'Generating mappings time': 0.08180475234985352}, 'CLL': -0.066302, 'Recall': 1.0, 'Learning time': 5.109, 'AUC ROC': 1.0}


Start learning from scratch in target domain

Target train facts examples: 159
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 537
Target test pos examples: 326
Target test neg examples: 10928

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 8,69e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8,30e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6,66e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.3059474498976706;  // std dev = 0,077, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3207118471601495;  // std dev = 2,11e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6,05e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.24442371865896778;  // std dev = 0,070, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2425527238837125;  // std dev = 0,068, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5,96e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21289902347850395;  // std dev = 0,008, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1514266220505955;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333714;  // std dev = 3,80e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.179397296718624;  // std dev = 0,007, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.132624232523096;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15448714859991042;  // std dev = 0,006, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11841720393609324;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1353666161666918;  // std dev = 0,006, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10712866514071569;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081463
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.431 seconds
Total inference time: 1.579 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:02:52
{'Inference time': 1.579, 'F1': 0.847854, 'Precision': [0.735892, 0.5], 'AUC PR': 1.0, 'CLL': -0.081463, 'Recall': 1.0, 'Learning time': 2.431, 'AUC ROC': 1.0}


Starting fold 2

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.013169288635253906
   Generating paths time   = 2.340230703353882
   Generating mappings time   = 0.08179712295532227
   Possible mappings   = 864
   Finding best mapping   = 0.23602843284606934
   Total time   = 2.6712329387664795


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(D, E), director(E).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true,false;movie(I, A).;true;true
1;true,false,true;movie(I, J), director(J).;false;false
1;true;movie(C, A), movie(C, B).;true;true
1;true,false,false;movie(K, B).;false;false
1;true,true;movie(E, D).;true;false
1;true,true,true;movie(C, F), movie(E, F).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true,false;movie(G, B), movie(H, A).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true;movie(C, B), movie(C, A).;false;true
3;;workedunder(A, B) :- director(B).;true;false
3;true;actor(A).;true;false
3;true,true,false;movie(G, A).;false;false
3;true,true;movie(C, B), movie(C, A).;true;true
3;true,true,true;movie(C, D).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,false;movie(I, H).;true;true
4;true,false,true;movie(J, A).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,false;genre(B, K).;false;false
4;true,true;movie(G, D).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false;movie(J, B), movie(J, A).;true;true
5;true,false,true;movie(J, K).;false;false
5;true;movie(E, B).;true;true
5;true,true,false;movie(H, A).;false;false
5;true,false,false;movie(P, B).;false;false
5;true,true;movie(E, A).;true;true
5;true,true,true;movie(G, F).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;false
6;true,false;movie(L, B).;false;true
6;true;genre(D, C), genre(D, E).;true;true
6;true,true,false;movie(I, B).;false;false
6;true,false,false;movie(M, A), movie(M, B).;false;false
6;true,true;movie(F, A), movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(F, E).;true;true
7;true,false,true;movie(G, A).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(I, B).;false;false
7;true,true;movie(C, D).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false;movie(F, B).;false;true
8;false;actor(B).;false;true
8;true;genre(B, D).;true;true
8;false,false;genre(B, M).;false;false
8;true,false,false;movie(L, A), movie(L, B).;false;false
8;true,true;movie(E, A).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(K, J).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,true;movie(C, G).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783634;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6,50e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), genre(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 6,75e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.14537149689574166;  // std dev = 0,308, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4,71e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13486489706754656;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07829540047708301;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.752 seconds
Total inference time: 3.251 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [8.69e-08, 104, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [0.0, 118, 0], 'true,true,true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'false': [8.82e-08, 111, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [1.19e-07, 0, 58]}], ['workedunder(A, B)', {'': 'director(B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, B), movie(C, A)', 'true,true,true': 'movie(C, D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false': [0.0, 113, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,false,true': [3.73e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(H, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [6.5e-08, 110, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 105, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C), genre(D, E)', 'true,true,false': 'movie(G, B)', 'true,true': 'movie(F, A), movie(F, B)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [6.75e-08, 118, 0], 'true,true,false,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [1.86e-09, 3, 0], 'false': [0.0, 102, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'actor(B)', 'true': 'genre(B, D)', 'true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [4.71e-08, 97, 0], 'true,true,true': [0.308, 2, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'false': [0.0, 122, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58]}]]
[{'': [0.06035379812695064, 7.259150545626024e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0]}, {'': [0.0230030098461001, -5.645201820127915e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [0.0474865377396351, 7.001406461600086e-17], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.734723475976807e-18, nan], 'true': [2.4501473646900006e-16, -1.734723475976807e-18]}, {'': [0.03133571028662497, -1.1789979022568034e-17], 'true': [0.028704418625989055, 0.0], 'true,true,false': [1.734723475976807e-18, nan], 'true,true': [-3.3689526264487507e-16, 1.734723475976807e-18], 'true,true,true': [-3.3689526264487507e-16, nan]}, {'': [0.005506846810506941, 3.835315903250541e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-1.5313421029312505e-16, 0.0], 'true,true': [-1.5313421029312505e-16, nan]}, {'': [0.006991557995307807, 3.172065784643304e-17], 'true': [0.006991557995307807, nan], 'true,true,false': [0.0, nan], 'true,true': [-3.062684205862501e-17, 0.0], 'true,true,true': [-3.062684205862501e-17, nan]}, {'': [0.0038930052303991457, 3.8575545770874085e-17], 'true': [0.0038930052303991457, nan], 'true,true,false': [0.0, nan], 'true,true': [-2.2970131543968756e-17, 0.0]}, {'': [0.0029306200976042637, -4.353815782843751e-18], 'true,false': [1.1564823173178713e-18, nan], 'true,false,true': [1.1564823173178713e-18, nan], 'true': [-3.062684205862501e-17, 1.1564823173178713e-18], 'true,true': [-3.062684205862501e-17, nan]}, {'': [0.0015761995793491948, 2.2891196384023845e-17], 'false': [2.2891196384023845e-17, nan], 'true': [0.0015761995793491948, nan], 'true,true': [0.0015761995793491948, nan]}, {'': [0.0027423143829971358, -1.8200377452871417e-17], 'true,false': [0.0, nan], 'true': [-3.4455197315953135e-17, 0.0], 'true,true': [-3.4455197315953135e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B).;true;true', '3;true;actor(A).;true;true', '3;true,true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(F, A), movie(F, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360617;  // std dev = 9,31e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878364;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926092;  // std dev = 5,77e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2242306976642271;  // std dev = 0,098, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.2227572907639766;  // std dev = 0,100, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,96e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21509558458835124;  // std dev = 0,000900, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10429333878134255;  // std dev = 0,000169, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109158;  // std dev = 6,14e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18100178583710128;  // std dev = 0,000791, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09493588135871253;  // std dev = 0,000166, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333711;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.14401471722287637;  // std dev = 0,052, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.14954106390533584;  // std dev = 0,240, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.06842697784420265;  // std dev = 4,89e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13726300847086634;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09960330524861281;  // std dev = 0,000325, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066995
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.753 seconds
Total inference time: 1.93 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:03:04
{'Inference time': 1.93, 'Parameter Learning results': {'Inference time': 3.251, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.065543, 'Recall': 1.0, 'Learning time': 1.752, 'AUC ROC': 1.0}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Mapping results': {'Possible mappings': 864, 'Total time': 2.6712329387664795, 'Finding best mapping': 0.23602843284606934, 'Generating paths time': 2.340230703353882, 'Knowledge compiling time': 0.013169288635253906, 'Generating mappings time': 0.08179712295532227}, 'CLL': -0.066995, 'Recall': 1.0, 'Learning time': 3.505, 'AUC ROC': 1.0}


Start learning from scratch in target domain

Target train facts examples: 150
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 546
Target test pos examples: 324
Target test neg examples: 10813

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0,213, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0,158, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7261241329559043;  // std dev = 0,016, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2739260269386626;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12684590979336993;  // std dev = 0,149, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5619155249619598;  // std dev = 0,020, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22342935461078892;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11606344272918862;  // std dev = 0,237, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1011273805373669;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42239227266481477;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18624776757396078;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0922984909582418;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3240235484575295;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16037175645396515;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0848512972120225;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25743210203356565;  // std dev = 0,015, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1393326902800265;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21135362247557318;  // std dev = 0,013, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12304098251863949;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0791982348190755;  // std dev = 0,076, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17826666871226424;  // std dev = 0,012, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11043028822117103;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07584490096931083;  // std dev = 0,355, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15363132291891843;  // std dev = 0,010, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10018130603762304;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0686892727091045;  // std dev = 0,067, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06375855688221325;  // std dev = 2,47e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13469972133925806;  // std dev = 0,009, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09180982179142815;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.336 seconds
Total inference time: 2.072 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:03:09
{'Inference time': 2.072, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.072497, 'Recall': 1.0, 'Learning time': 2.336, 'AUC ROC': 1.0}


Starting fold 3

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.017929553985595703
   Generating paths time   = 2.5855050086975098
   Generating mappings time   = 0.06304001808166504
   Possible mappings   = 864
   Finding best mapping   = 0.18132352828979492
   Total time   = 2.8478047847747803


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'projectmember(A,B) -> genre(B,A)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(D, E), director(E).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true,false;movie(I, A).;true;true
1;true,false,true;movie(I, J), director(J).;false;false
1;true;movie(C, A), movie(C, B).;true;true
1;true,false,false;movie(K, B).;false;false
1;true,true;movie(E, D).;true;false
1;true,true,true;movie(C, F), movie(E, F).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true,false;movie(G, B), movie(H, A).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true;movie(C, B), movie(C, A).;false;true
3;;workedunder(A, B) :- director(B).;true;false
3;true;actor(A).;true;false
3;true,true,false;movie(G, A).;false;false
3;true,true;movie(C, B), movie(C, A).;true;true
3;true,true,true;movie(C, D).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,false;movie(I, H).;true;true
4;true,false,true;movie(J, A).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,false;genre(B, K).;false;false
4;true,true;movie(G, D).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false;movie(J, B), movie(J, A).;true;true
5;true,false,true;movie(J, K).;false;false
5;true;movie(E, B).;true;true
5;true,true,false;movie(H, A).;false;false
5;true,false,false;movie(P, B).;false;false
5;true,true;movie(E, A).;true;true
5;true,true,true;movie(G, F).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;false
6;true,false;movie(L, B).;false;true
6;true;genre(D, C), genre(D, E).;true;true
6;true,true,false;movie(I, B).;false;false
6;true,false,false;movie(M, A), movie(M, B).;false;false
6;true,true;movie(F, A), movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(F, E).;true;true
7;true,false,true;movie(G, A).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(I, B).;false;false
7;true,true;movie(C, D).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false;movie(F, B).;false;true
8;false;actor(B).;false;true
8;true;genre(B, D).;true;true
8;false,false;genre(B, M).;false;false
8;true,false,false;movie(L, A), movie(L, B).;false;false
8;true,true;movie(E, A).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(K, J).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,true;movie(C, G).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360688;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1015963294878362;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1015963294878366;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.09269127618926107;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 1,15e-07, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,42e-08, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), genre(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.20975771563253537;  // std dev = 2,21e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.07877675473109179;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04046187926275071;  // std dev = 1,881, 369,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18795548111968838;  // std dev = 0,235, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07416137524746767;  // std dev = 0,009, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07588999093971437;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(B, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.09934089213619719;  // std dev = 1,214, 169,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07073612679813122;  // std dev = 6,83e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( genre(B, F) )
%   | | then return -0.0707361267981312;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.09283835556679199;  // std dev = 1,086, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14828837268846737;  // std dev = 0,201, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07586844534879177;  // std dev = 0,008, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06660777134931939;  // std dev = 0,034, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.196 seconds
Total inference time: 2.667 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 58, 0], 'false': [0.0, 271, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [1.09e-06, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 60, 0], 'false': [0.0, 287, 0], 'true,true,true,true': [0.0, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [6.14e-08, 76, 0], 'false': [0.0, 313, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [5.9e-07, 0, 178]}], ['workedunder(A, B)', {'': 'director(B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, B), movie(C, A)', 'true,true,true': 'movie(C, D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 25, 0], 'false': [0.0, 265, 0], 'true,true,true,true': [3.77e-07, 0, 178], 'true,true,false,true': [3.94e-08, 57, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(H, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 73, 0], 'false': [1.15e-07, 292, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [3.58e-07, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 292, 0], 'true,true,true,true': [3.63e-07, 0, 178], 'true,true,false,true': [2.24e-08, 42, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C), genre(D, E)', 'true,true,false': 'movie(G, B)', 'true,true': 'movie(F, A), movie(F, B)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [2.21e-07, 0, 129], 'false': [1.881, 320, 49], 'true,true,false,true': [5.27e-09, 27, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.009, 52, 0], 'false': [0.0, 296, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.235, 0, 178]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(B, D)', 'false': 'actor(B)', 'false,false': 'genre(B, F)', 'true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 10, 0], 'false,false,false': [1.086, 28, 49], 'false,true': [6.83e-08, 278, 0], 'true,true,true': [1.214, 40, 129]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'false': [0.034, 284, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.008, 55, 0], 'true,true,true': [0.201, 0, 178]}]]
[{'': [0.18536340132146512, -1.4092867914061027e-16], 'true,false': [6.125368411725002e-17, nan], 'true,false,true': [6.125368411725002e-17, nan], 'true': [6.706246045376226e-15, 6.125368411725002e-17]}, {'': [0.13460045111799862, -5.57045698766629e-17], 'true,false': [-4.070817756958907e-17, nan], 'true,false,true': [-4.070817756958907e-17, nan], 'true': [-3.193450497798203e-15, -4.070817756958907e-17], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.09347738573377443, -9.931707568531751e-17], 'true,false': [4.966787215428332e-17, nan], 'true,false,true': [4.966787215428332e-17, nan], 'true': [1.9559884299013994e-15, 4.966787215428332e-17]}, {'': [0.058184298747005564, -6.535652522321676e-17], 'true': [0.04950827323520463, -1.5543122344752193e-17], 'true,true,false': [2.7268635692547703e-17, nan], 'true,true': [7.983626244495507e-16, 2.7268635692547703e-17], 'true,true,true': [7.983626244495507e-16, nan]}, {'': [0.03524868554913869, 4.562560375171876e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [7.185263620045957e-16, 0.0], 'true,true': [7.185263620045957e-16, nan]}, {'': [0.017893417269014986, 3.0417069167812506e-17], 'true': [0.017893417269014986, nan], 'true,true,false': [1.1895246692412391e-17, nan], 'true,true': [7.384854276158345e-16, 1.1895246692412391e-17], 'true,true,true': [7.384854276158345e-16, nan]}, {'': [0.011915154736525118, 0.009587132618151726], 'true': [0.011915154736525118, nan], 'true,true,false': [1.02798428206033e-18, nan], 'true,true': [3.7868072157757276e-16, 1.02798428206033e-18]}, {'': [0.012262078018577115, -3.225647976951468e-17], 'true,false': [1.5819417590206253e-06, nan], 'true,false,true': [1.5819417590206253e-06, nan], 'true': [0.00031043591980426863, 1.5819417590206253e-06], 'true,true': [0.00031043591980426863, nan]}, {'': [0.008721393962745183, 0.0076822767279713395], 'false,false': [-1.3877787807814458e-18, 0.015303921199700888], 'false': [1.677315360944481e-17, 0.016266819765243728], 'true': [0.008721393962745183, nan], 'true,true': [0.008721393962745183, nan]}, {'': [0.009233965546973482, 4.007947413741281e-06], 'true,false': [1.2002754132035452e-06, nan], 'true': [0.0002260766246220602, 1.2002754132035452e-06], 'true,true': [0.0002260766246220602, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B).;true;true', '3;true;actor(A).;true;true', '3;true,true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(F, A), movie(F, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;false;actor(B).;true;true', '8;false,false;genre(B, F).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.14185106490048813;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.12544463852839188;  // std dev = 0,000, 329,000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360686;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 4,21e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783626;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783658;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0926912761892605;  // std dev = 1,26e-07, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,42e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253537;  // std dev = 2,21e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(B), female(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325361;  // std dev = 4,21e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0726748172913773;  // std dev = 0,755, 331,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1788646584060417;  // std dev = 0,117, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07334312607820118;  // std dev = 0,001, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0736615128270405;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15251517528600508;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842080121843798;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( actor(B) )
%   | then return -0.06879036265891968;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else if ( genre(B, E) )
%   | | then return -0.06879036265891968;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1263894307238017;  // std dev = 0,603, 57,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=49 */
%   | | | else return -0.06868036133520834;  // std dev = 0,000998, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13612163693111815;  // std dev = 0,103, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06426714456302544;  // std dev = 0,001, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06463242019026733;  // std dev = 0,022, 321,000 (wgt'ed) examples reached here.  /* #neg=321 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063843
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.275 seconds
Total inference time: 2.265 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:03:23
{'Inference time': 2.265, 'Parameter Learning results': {'Inference time': 2.667, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.065877, 'Recall': 1.0, 'Learning time': 3.196, 'AUC ROC': 1.0}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Mapping results': {'Possible mappings': 864, 'Total time': 2.8478047847747803, 'Finding best mapping': 0.18132352828979492, 'Generating paths time': 2.5855050086975098, 'Knowledge compiling time': 0.017929553985595703, 'Generating mappings time': 0.06304001808166504}, 'CLL': -0.063843, 'Recall': 1.0, 'Learning time': 5.471, 'AUC ROC': 1.0}


Start learning from scratch in target domain

Target train facts examples: 163
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 533
Target test pos examples: 204
Target test neg examples: 10693

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.1418510649004881;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.12544463852839186;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360686;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4,59e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783644;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926062;  // std dev = 4,21e-08, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3,00e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109146;  // std dev = 6,99e-08, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333686;  // std dev = 8,43e-08, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420276;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7,60e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.06419184008202623;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.364 seconds
Total inference time: 1.976 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:03:28
{'Inference time': 1.976, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.063555, 'Recall': 1.0, 'Learning time': 3.364, 'AUC ROC': 1.0}


Starting fold 4

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.012376546859741211
   Generating paths time   = 2.0921878814697266
   Generating mappings time   = 0.08099126815795898
   Possible mappings   = 864
   Finding best mapping   = 0.2523026466369629
   Total time   = 2.4378645420074463


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'projectmember(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(D, E), director(E).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true,false;movie(I, A).;true;true
1;true,false,true;movie(I, J), director(J).;false;false
1;true;movie(C, A), movie(C, B).;true;true
1;true,false,false;movie(K, B).;false;false
1;true,true;movie(E, D).;true;false
1;true,true,true;movie(C, F), movie(E, F).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true,false;movie(G, B), movie(H, A).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true;movie(C, B), movie(C, A).;false;true
3;;workedunder(A, B) :- director(B).;true;false
3;true;actor(A).;true;false
3;true,true,false;movie(G, A).;false;false
3;true,true;movie(C, B), movie(C, A).;true;true
3;true,true,true;movie(C, D).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,false;movie(I, H).;true;true
4;true,false,true;movie(J, A).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,false;movie(K, B).;false;false
4;true,true;movie(G, D).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false;movie(J, B), movie(J, A).;true;true
5;true,false,true;movie(J, K).;false;false
5;true;movie(E, B).;true;true
5;true,true,false;movie(H, A).;false;false
5;true,false,false;movie(P, B).;false;false
5;true,true;movie(E, A).;true;true
5;true,true,true;movie(G, F).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;false
6;true,false;movie(L, B).;false;true
6;true;genre(D, C), movie(E, D).;true;true
6;true,true,false;movie(I, B).;false;false
6;true,false,false;movie(M, A), movie(M, B).;false;false
6;true,true;movie(F, A), movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(F, E).;true;true
7;true,false,true;movie(G, A).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(I, B).;false;false
7;true,true;movie(C, D).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false;movie(F, B).;false;true
8;false;actor(B).;false;true
8;true;movie(D, B).;true;true
8;false,false;genre(B, M).;false;false
8;true,false,false;movie(L, A), movie(L, B).;false;false
8;true,true;movie(E, A).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(K, J).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,true;movie(C, G).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,50e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 3,16e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 4,71e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), movie(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 5,05e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.11588205210402526;  // std dev = 0,606, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3,25e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1383428149447503;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07619357811890955;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065235
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.775 seconds
Total inference time: 3.553 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'false': [7.3e-08, 74, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'false': [0.0, 87, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false': [6.5e-08, 81, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, B), movie(C, A)', 'true,true,true': 'movie(C, D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false': [5.58e-08, 84, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(H, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [3.16e-08, 94, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 79, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C), movie(E, D)', 'true,true,false': 'movie(G, B)', 'true,true': 'movie(F, A), movie(F, B)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [5.58e-08, 0, 45], 'false': [5.05e-08, 88, 0], 'true,true,false,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [0.0, 92, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'actor(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [3.25e-08, 72, 0], 'true,true,true': [0.606, 9, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'false': [0.0, 77, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true,true': [0.0, 0, 45]}]]
[{'': [0.05859375000000089, 7.201446646217232e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.09149132947221877, -1.7865657867531254e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.05193310189730332, 5.208453695772339e-17], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true': [-3.947459643111668e-17, -1.982541115402065e-18]}, {'': [0.0313922549076915, 3.700743415417188e-17], 'true': [0.027973194025505906, 0.0], 'true,true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, 0.0], 'true,true,true': [-4.144832625267251e-16, nan]}, {'': [0.006962966417181677, 1.0629794916623839e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,true': [1.973729821555834e-17, nan]}, {'': [0.010425859500244368, 2.810691201582675e-17], 'true': [0.010425859500244368, nan], 'true,true,false': [0.0, nan], 'true,true': [-2.960594732333751e-17, 0.0], 'true,true,true': [-2.960594732333751e-17, nan]}, {'': [0.00749269265292174, 2.901719268906659e-17], 'true': [0.00749269265292174, nan], 'true,true,false': [-1.3877787807814458e-18, nan], 'true,true': [6.908054375445419e-17, -1.3877787807814458e-18]}, {'': [0.004698403272997808, -7.84396702180817e-18], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-8.388351741612294e-17, 0.0], 'true,true': [-8.388351741612294e-17, nan]}, {'': [0.006793963704091305, 1.4648776019359705e-17], 'false': [1.4648776019359705e-17, nan], 'true': [0.006793963704091305, nan], 'true,true': [0.006793963704091305, nan]}, {'': [0.004142327755388848, -1.0092936587501423e-17], 'true,false': [-6.938893903907229e-19, nan], 'true': [-2.4671622769447924e-18, -6.938893903907229e-19], 'true,true': [-2.4671622769447924e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B).;true;true', '3;true;actor(A).;true;true', '3;true,true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(F, A), movie(F, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926108;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08537459409039648;  // std dev = 0,012, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07876297876226164;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07323427503733594;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06841651705514448;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06443441970779044;  // std dev = 0,011, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064577
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.834 seconds
Total inference time: 1.728 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:03:40
{'Inference time': 1.728, 'Parameter Learning results': {'Inference time': 3.553, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.065235, 'Recall': 1.0, 'Learning time': 1.775, 'AUC ROC': 1.0}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Mapping results': {'Possible mappings': 864, 'Total time': 2.4378645420074463, 'Finding best mapping': 0.2523026466369629, 'Generating paths time': 2.0921878814697266, 'Knowledge compiling time': 0.012376546859741211, 'Generating mappings time': 0.08099126815795898}, 'CLL': -0.064577, 'Recall': 1.0, 'Learning time': 3.609, 'AUC ROC': 1.0}


Start learning from scratch in target domain

Target train facts examples: 106
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 590
Target test pos examples: 337
Target test neg examples: 12345

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048768;  // std dev = 6,83e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360628;  // std dev = 5,37e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09498700797127091;  // std dev = 0,192, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08500601917751187;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862325893658478;  // std dev = 2,58e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07311305237213446;  // std dev = 4,41e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07079783813338103;  // std dev = 0,260, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06393993091051026;  // std dev = 2,69e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0.1296983589190972;  // std dev = 0,196, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.877 seconds
Total inference time: 2.071 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:03:44
{'Inference time': 2.071, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.068338, 'Recall': 1.0, 'Learning time': 1.877, 'AUC ROC': 1.0}


Starting fold 5

Target predicate: workedunder 

Mapping Results
   Knowledge compiling time   = 0.016181468963623047
   Generating paths time   = 2.5876011848449707
   Generating mappings time   = 0.08177661895751953
   Possible mappings   = 864
   Finding best mapping   = 0.23357701301574707
   Total time   = 2.9191441535949707


Best mapping found: ['advisedby(A,B) -> workedunder(A,B)', 'student(A) -> actor(A)', 'professor(A) -> director(A)', 'publication(A,B) -> movie(A,B)', 'projectmember(A,B) -> movie(A,B)', 'hasposition(A,B) -> genre(A,B)'] 

Transferred target predicate: workedunder 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true,false;movie(D, A).;true;false
0;true,false,true;movie(D, E), director(E).;false;false
0;true;movie(C, B), movie(C, A).;false;true
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true,false;movie(I, A).;true;true
1;true,false,true;movie(I, J), director(J).;false;false
1;true;movie(C, A), movie(C, B).;true;true
1;true,false,false;movie(K, B).;false;false
1;true,true;movie(E, D).;true;false
1;true,true,true;movie(C, F), movie(E, F).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true,false;movie(G, B), movie(H, A).;true;false
2;true,false,true;movie(H, I), director(I).;false;false
2;true;movie(C, B), movie(C, A).;false;true
3;;workedunder(A, B) :- director(B).;true;false
3;true;actor(A).;true;false
3;true,true,false;movie(G, A).;false;false
3;true,true;movie(C, B), movie(C, A).;true;true
3;true,true,true;movie(C, D).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true,false;movie(I, H).;true;true
4;true,false,true;movie(J, A).;false;false
4;true;movie(C, A), movie(C, B).;true;true
4;true,false,false;movie(K, B).;false;false
4;true,true;movie(G, D).;false;false
5;;workedunder(A, B) :- director(B), actor(A).;true;false
5;true,false;movie(J, B), movie(J, A).;true;true
5;true,false,true;movie(J, K).;false;false
5;true;movie(E, B).;true;true
5;true,true,false;movie(H, A).;false;false
5;true,false,false;movie(P, B).;false;false
5;true,true;movie(E, A).;true;true
5;true,true,true;movie(G, F).;false;false
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;false
6;true,false;movie(L, B).;false;true
6;true;genre(D, C), movie(E, D).;true;true
6;true,true,false;movie(I, B).;false;false
6;true,false,false;movie(M, A), movie(M, B).;false;false
6;true,true;movie(F, A), movie(F, B).;false;true
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true,false;movie(F, E).;true;true
7;true,false,true;movie(G, A).;false;false
7;true;movie(C, B), movie(C, A).;true;true
7;true,false,false;movie(I, B).;false;false
7;true,true;movie(C, D).;false;false
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true,false;movie(F, B).;false;true
8;false;actor(B).;false;true
8;true;movie(D, B).;true;true
8;false,false;genre(B, M).;false;false
8;true,false,false;movie(L, A), movie(L, B).;false;false
8;true,true;movie(E, A).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true,false;movie(K, J).;false;false
9;true;movie(C, A), movie(C, B).;true;true
9;true,true;movie(C, G).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, B), movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 3,16e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 4,94e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C), movie(E, D) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04963185873476575;  // std dev = 0,865, 99,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18620909135100527;  // std dev = 0,114, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.07424780773009093;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0752493896968449;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13968010970480643;  // std dev = 0,303, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07017751786359099;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14497156213101095;  // std dev = 0,333, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14166827766648832;  // std dev = 0,090, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07844059084693245;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06598231052669495;  // std dev = 0,022, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.711 seconds
Total inference time: 3.02 seconds
AUC ROC: 1.0


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'false': [8.69e-08, 97, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(G, A)', 'true,false,true': 'movie(G, H), director(H)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [0.0, 78, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [7.45e-08, 91, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'director(B)', 'true': 'actor(A)', 'true,true,false': 'movie(E, A)', 'true,true': 'movie(C, B), movie(C, A)', 'true,true,true': 'movie(C, D)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 99, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(H, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [3.16e-08, 91, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 84, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [2.63e-09, 7, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C), movie(E, D)', 'true,true,false': 'movie(G, B)', 'true,true': 'movie(F, A), movie(F, B)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [5.37e-08, 0, 35], 'false': [0.865, 89, 10], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true,false,true': 'movie(G, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.001, 2, 0], 'false': [0.0, 67, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.114, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'actor(B)', 'false,false': 'genre(B, F)', 'true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.333, 2, 10], 'false,true': [0.0, 86, 0], 'true,true,true': [0.303, 2, 35]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'false': [0.022, 90, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.002, 4, 0], 'true,true,true': [0.09, 0, 45]}]]
[{'': [0.12815948736205124, 7.783006770568107e-17], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18]}, {'': [0.05351918877289897, -2.5620531337503614e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.040122030722945186, 6.100126508929432e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.024252759220113572, 1.570012358055777e-17], 'true': [0.024252759220113572, nan], 'true,true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, 0.0], 'true,true,true': [-4.144832625267251e-16, nan]}, {'': [0.006962966417181677, 1.0980227716072976e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,true': [1.973729821555834e-17, nan]}, {'': [0.013495010447801522, 2.9077269692563625e-17], 'true': [0.013495010447801522, nan], 'true,true,false': [9.912705577010326e-19, nan], 'true,true': [-2.960594732333751e-17, 9.912705577010326e-19], 'true,true,true': [-2.960594732333751e-17, nan]}, {'': [0.00425686620975997, 0.00755988216746627], 'true': [0.00425686620975997, nan], 'true,true,false': [0.0, nan], 'true,true': [8.247371040072592e-17, 0.0]}, {'': [0.003042188701496791, -4.14262322621327e-18], 'true,false': [1.0031664361273215e-06, nan], 'true,false,true': [1.0031664361273215e-06, nan], 'true': [0.0002906377677809916, 1.0031664361273215e-06], 'true,true': [0.0002906377677809916, nan]}, {'': [0.0024732572579416324, 0.006108308988272643], 'true': [0.0024732572579416324, nan], 'false': [-2.0009833583360378e-17, 0.00926345310282862], 'false,false': [nan, 0.00926345310282862], 'true,true': [0.0024732572579416324, nan]}, {'': [0.0037989001593594232, 5.482975663993904e-06], 'true,false': [1.1787431546325666e-06, nan], 'true': [0.0001815436413955392, 1.1787431546325666e-06], 'true,true': [0.0001815436413955392, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;workedunder(A, B) :- director(B), actor(A).;true;true', '0;true;movie(C, B), movie(C, A).;true;true', '1;;workedunder(A, B) :- director(B), actor(A).;true;true', '1;true;movie(C, A), movie(C, B).;true;true', '2;;workedunder(A, B) :- director(B), actor(A).;true;true', '2;true;movie(C, B), movie(C, A).;true;true', '3;;workedunder(A, B) :- director(B).;true;true', '3;true;movie(C, B), movie(C, A).;true;true', '4;;workedunder(A, B) :- director(B), actor(A).;true;true', '4;true;movie(C, A), movie(C, B).;true;true', '5;;workedunder(A, B) :- director(B), actor(A).;true;true', '5;true;movie(C, A).;true;true', '6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '6;true;movie(F, A), movie(F, B).;true;true', '7;;workedunder(A, B) :- director(B), actor(A).;true;true', '7;true;movie(C, B), movie(C, A).;true;true', '8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true', '8;false;actor(B).;true;true', '9;;workedunder(A, B) :- director(B), actor(A).;true;true', '9;true;movie(C, A), movie(C, B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783616;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926108;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.24099070115457757;  // std dev = 0,068, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.2403741123974075;  // std dev = 0,069, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21217112060385057;  // std dev = 0,000305, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109164;  // std dev = 4,83e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.166681363745681;  // std dev = 0,111, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.14860079236126786;  // std dev = 0,285, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1805861170823764;  // std dev = 0,003, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.18064128175893807;  // std dev = 0,004, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.11584293701380649;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.1399696528724369;  // std dev = 0,057, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.1407705712975927;  // std dev = 0,056, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3,16e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( female(A) )
%   | | then return 0.15983283403493653;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.16235210132563704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13726424262766027;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13735415960299768;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.11411664108330938;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.081 seconds
Total inference time: 2.064 seconds
AUC ROC: 1.0


Refined model AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:03:56
{'Inference time': 2.064, 'Parameter Learning results': {'Inference time': 3.02, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'CLL': -0.067001, 'Recall': 1.0, 'Learning time': 1.711, 'AUC ROC': 1.0}, 'F1': 1.0, 'Precision': [1.0, 0.5], 'AUC PR': 1.0, 'Mapping results': {'Possible mappings': 864, 'Total time': 2.9191441535949707, 'Finding best mapping': 0.23357701301574707, 'Generating paths time': 2.5876011848449707, 'Knowledge compiling time': 0.016181468963623047, 'Generating mappings time': 0.08177661895751953}, 'CLL': -0.069294, 'Recall': 1.0, 'Learning time': 3.792, 'AUC ROC': 1.0}


Start learning from scratch in target domain

Target train facts examples: 118
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 578
Target test pos examples: 337
Target test neg examples: 12165

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(A) )
%   | then return 0.6518799681518065;  // std dev = 0,229, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5638624426140388;  // std dev = 0,056, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22751829855267258;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11484828853116814;  // std dev = 0,161, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10136546360185147;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4238838060522143;  // std dev = 0,055, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18322687075767705;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092497940549557;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.31202746350932165;  // std dev = 0,097, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.29657378602983747;  // std dev = 0,098, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.085020644744521;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( female(A) )
%   | then return 0.24757532911764643;  // std dev = 0,093, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.23672032584796704;  // std dev = 0,095, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20211136221186723;  // std dev = 0,093, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.19420920369897854;  // std dev = 0,095, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return -0.0786358210470288;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12260288299320553;  // std dev = 0,152, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.0786358210470288;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07265457431666275;  // std dev = 0,010, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18607441349470227;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2828007310073253;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06795220684909642;  // std dev = 0,008, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16170942723702228;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.12150733005252615;  // std dev = 0,168, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.23235714317115014;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06362274396826702;  // std dev = 0,009, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( female(A) )
%   | then return 0.11454159923829377;  // std dev = 0,090, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.14179585073628645;  // std dev = 2,47e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092164
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.247 seconds
Total inference time: 2.277 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:04:01
{'Inference time': 2.277, 'F1': 0.852086, 'Precision': [0.742291, 0.5], 'AUC PR': 1.0, 'CLL': -0.092164, 'Recall': 1.0, 'Learning time': 2.247, 'AUC ROC': 1.0}


