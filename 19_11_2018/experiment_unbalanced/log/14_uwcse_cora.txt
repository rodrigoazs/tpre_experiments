Starting experiment #1 for 14_uwcse_cora

Start learning from source dataset

Source train facts examples: 2274
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.44905802600860323;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.058148935099512286;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.5925239350995126;  // std dev = 3,533, 64,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.14185106490048824;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7306581903347503;  // std dev = 0,107, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), professor(F) )
%   | | | then return 0.03630030229997918;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.7942835867510752;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.6444942817163936;  // std dev = 0,986, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.40673858144333525;  // std dev = 4,388, 83,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=53 */
%   else return -0.12544463852839138;  // std dev = 2,11e-08, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, F) )
%   | | | then return 0.3026028459328486;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5526028459328486;  // std dev = 5,96e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.5777840271512001;  // std dev = 0,111, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.04269848311029074;  // std dev = 2,639, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.5407133755239925;  // std dev = 0,889, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.4840479751916907;  // std dev = 3,100, 59,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | | | else return 0.0878797867469324;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return -0.11231637819360656;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.43432226802108714;  // std dev = 0,149, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.0888152139273221;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4221485472606554;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.3127032352669456;  // std dev = 0,651, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09832514160952457;  // std dev = 1,157, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.18526598807813408;  // std dev = 2,722, 37,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.33912493688674844;  // std dev = 3,489, 67,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=51 */
%   else return -0.10159632948783646;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, A) )
%   | | then return 0.3324205879833659;  // std dev = 0,136, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.1992480532524609;  // std dev = 3,006, 46,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   | | | else return 0.2745784791464414;  // std dev = 2,795, 50,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=39 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.18421877432388892;  // std dev = 1,531, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.16922080804322492;  // std dev = 1,494, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.20567883889262778;  // std dev = 0,992, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5270006480482298;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 2,58e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, F), tempadvisedby(E, G) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.04085649116889191;  // std dev = 1,835, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.41734408619486807;  // std dev = 0,085, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.2651628848836009;  // std dev = 1,942, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.616627771926506;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.20510696871532766;  // std dev = 0,981, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.266845503526552;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return -0.11868080464288273;  // std dev = 1,706, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.1576862368274803;  // std dev = 3,111, 47,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   else return -0.08518475138839678;  // std dev = 3,65e-08, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B) )
%   | then if ( publication(E, A), ta(F, A, G) )
%   | | then if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return -0.13883065621578525;  // std dev = 1,057, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10195189228902612;  // std dev = 1,902, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | | then return 0.18479046330814397;  // std dev = 3,250, 95,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=75 */
%   | | | else return -0.04139666267441934;  // std dev = 1,109, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( ta(L, A, M) )
%   | | then if ( projectmember(N, B) )
%   | | | then return -0.46030232956357336;  // std dev = 0,976, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.00378445610942002;  // std dev = 0,983, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(P, A) )
%   | | | then return 0.26839227335471155;  // std dev = 1,075, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.056194489603029814;  // std dev = 1,467, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.0798914575822099;  // std dev = 0,056, 198,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( projectmember(D, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.4895394687943573;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3419734493444523;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.13705698940624836;  // std dev = 1,648, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.00792813860221277;  // std dev = 2,649, 35,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.12969965923795007;  // std dev = 3,155, 58,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | | else return 0.23651837907787257;  // std dev = 0,771, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.07317059436409364;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.3414954106776604;  // std dev = 0,882, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07317059436409337;  // std dev = 8,69e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.18370982819616885;  // std dev = 0,156, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.09965825997946398;  // std dev = 1,892, 25,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.12085266781639474;  // std dev = 2,608, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.29252205329376396;  // std dev = 0,745, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.03539559815104728;  // std dev = 1,272, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.07503379587796682;  // std dev = 2,073, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return 0.18000178502513497;  // std dev = 1,100, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06836077221353229;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B) )
%   | then if ( publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.254296729766355;  // std dev = 0,114, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1587487865967497;  // std dev = 1,817, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( ta(H, D, I) )
%   | | | then return 0.1785405724772066;  // std dev = 1,558, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.010731583219281722;  // std dev = 2,555, 36,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return -0.08554848613998076;  // std dev = 1,721, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1490149569107152;  // std dev = 1,357, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( ta(N, A, P) )
%   | | | then return 0.11228373973517304;  // std dev = 1,306, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.29313950195917976;  // std dev = 0,053, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06462712209578322;  // std dev = 0,053, 201,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=1 */


Predicates from source: ['advisedby(person,person).', 'ta(course,person,quarter).', 'projectmember(project,person).', 'professor(person).', 'student(person).', 'hasposition(person,faculty).', 'tempadvisedby(person,person).', 'publication(title,person).']

Starting fold 1

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.07071328163146973
   Generating paths time   = 2.345235824584961
   Generating mappings time   = 0.009415864944458008
   Possible mappings   = 54
   Finding best mapping   = 0.010198116302490234
   Total time   = 2.4355690479278564


Best mapping found: ['publication(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(B,A)', 'projectmember(A,B) -> title(A,B)', 'hasposition(A,B) -> haswordtitle(A,B)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(B, A) :- haswordtitle(B, C), haswordtitle(A, C).;true;false
0;true,false;haswordtitle(A, I).;true;true
0;true,false,true;haswordtitle(J, I).;false;false
0;true;haswordtitle(G, H).;false;true
0;true,false,false;haswordtitle(B, M).;false;false
1;;sametitle(B, A) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
2;;sametitle(B, A) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(B, A) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(B, A) :- haswordtitle(B, C).;true;false
4;true,false;title(G, B).;false;true
4;true,false,false;haswordtitle(A, H).;false;false
4;true;haswordtitle(A, C).;false;true
5;;sametitle(B, A) :- haswordtitle(B, I).;false;false
6;;sametitle(B, A) :- haswordtitle(B, C).;true;false
6;true,false;title(N, B).;false;true
6;true;haswordtitle(B, D).;true;true
6;true,true,false;haswordtitle(J, C).;false;false
6;true,false,false;haswordtitle(A, P).;false;false
6;true,true;haswordtitle(A, E).;true;true
6;true,true,true;haswordtitle(H, I).;false;false
7;;sametitle(B, A) :- haswordtitle(B, C).;true;false
7;true,false;haswordtitle(A, F).;true;true
7;true,false,true;haswordtitle(B, F).;false;false
7;true;title(D, B).;true;true
7;true,false,false;haswordtitle(B, G).;false;false
7;true,true;haswordtitle(A, E).;false;false
8;;sametitle(B, A) :- haswordtitle(A, D), haswordtitle(B, D).;false;false
9;;sametitle(B, A) :- haswordtitle(B, C).;true;false
9;true,false;haswordtitle(A, J).;true;false
9;true,false,true;haswordtitle(K, J).;false;false
9;true;haswordtitle(D, E).;false;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.26518411097890515;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.22974501977182177;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.19372234090715318;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.1594156091981743;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.12853891336589762;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then return 0.10199149388186568;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.0799509608303557;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( title(D, A) )
%   | then if ( haswordtitle(B, E) )
%   | | then return 0.06211668783897666;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.04794951989538333;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.03684133918460116;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.50625
   AUC PR    = 0.530693
   CLL	      = -0.735399
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 12.053 seconds
Total inference time: 2.602 seconds
AUC ROC: 0.50625


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true': 'haswordtitle(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true': 'haswordtitle(A, D)', 'true,true': 'haswordtitle(B, E)', 'true,true,true': 'haswordtitle(F, G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [9.801, 236, 162], 'true,true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true': 'title(D, A)', 'true,true': 'haswordtitle(B, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [9.801, 236, 162]}]]
[{'': [0.241357541476229, nan], 'true': [0.241357541476229, nan]}, {'': [0.24135754147622376, nan]}, {'': [0.24135754147622027, nan]}, {'': [0.2413575414762306, nan]}, {'': [0.24135754147622468, nan], 'true': [0.24135754147622468, nan]}, {'': [0.2413575414762287, nan]}, {'': [0.24135754147622449, nan], 'true': [0.24135754147622449, nan], 'true,true': [0.24135754147622449, nan], 'true,true,true': [0.24135754147622449, nan]}, {'': [0.24135754147622548, nan], 'true': [0.24135754147622548, nan], 'true,true': [0.24135754147622548, nan]}, {'': [0.24135754147622485, nan]}, {'': [0.2413575414762261, nan], 'true': [0.2413575414762261, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '0;true;haswordtitle(D, E).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '4;true;haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '6;true;haswordtitle(A, D).;true;true', '6;true,true;haswordtitle(B, E).;true;true', '6;true,true,true;haswordtitle(F, G).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '7;true;title(D, A).;true;true', '7;true,true;haswordtitle(B, E).;true;true', '8;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '9;true;haswordtitle(D, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(D, E) )
%   | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(B, F) )
%   | | | then return 0.7369368138873914;  // std dev = 2,651, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | | else return 0.003310225422092987;  // std dev = 2,774, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return 0.01886322081379807;  // std dev = 2,748, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return 0.2600180939780157;  // std dev = 7,172, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6220633676283396;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.23274550562375218;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.031143383265136704;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.4558371783570768;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.026515762819393735;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return 0.22533125375206722;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.48728512046144257;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.201918601559637;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.027385497018114976;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return 0.013630079349719108;  // std dev = 0,360, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else return 0.19015949657647718;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3672186186501392;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.1710887245064434;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.024150219567855256;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.387792393131566;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.024933206691287825;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return 0.15668998800103418;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | | then if ( title(F, A), venue(F, E) )
%   | | | then return 0.09922568680946992;  // std dev = 8,462, 369,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=142 */
%   | | | else return 0.3519266282666906;  // std dev = 1,419, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | | then return 0.21886175285893605;  // std dev = 0,621, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2961098121240924;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.6079241033315181;  // std dev = 1,967, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.2221242126918464;  // std dev = 2,919, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( title(H, A), venue(H, E) )
%   | | | then return 0.22214856818373663;  // std dev = 1,200, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.45967324031323553;  // std dev = 0,434, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then return 0.1745380766697462;  // std dev = 0,597, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.24695664467293268;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D) )
%   | then if ( haswordtitle(B, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.06739818459501247;  // std dev = 7,265, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( title(D, A) )
%   | then if ( haswordtitle(B, E) )
%   | | then if ( haswordtitle(A, F), haswordvenue(G, F) )
%   | | | then return 0.05243757022657007;  // std dev = 7,158, 388,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=156 */
%   | | | else return 0.15064958587347949;  // std dev = 0,996, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.44729021558864585;  // std dev = 1,944, 136,000 (wgt'ed) examples reached here.  /* #pos=136 */
%   | | | else return -0.20416092423886562;  // std dev = 2,898, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( title(H, A), venue(H, E) )
%   | | | then return 0.13157947155306457;  // std dev = 1,153, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.33629526521081793;  // std dev = 0,396, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then return 0.09496832648386389;  // std dev = 0,586, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1591750074814096;  // std dev = 0,785, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then if ( haswordtitle(B, F), haswordvenue(G, F) )
%   | | then if ( title(H, B), venue(H, G) )
%   | | | then return 0.019621798110360328;  // std dev = 5,888, 369,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=142 */
%   | | | else return 0.1791760003159586;  // std dev = 1,247, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | | then return 0.07641951810388471;  // std dev = 0,588, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1253745677445941;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981584
   AUC PR    = 0.985857
   CLL	      = -0.375781
   Precision = 0.903226 at threshold = 0.5
   Recall    = 0.940299
   F1        = 0.921389


Total learning time: 435.142 seconds
Total inference time: 159.631 seconds
AUC ROC: 0.981584


Refined model AUC ROC: 0.981584


Dataset: 14_uwcse_cora, Fold: 1, Type: transfer, Time: 04:00:51
{'Inference time': 159.631, 'Parameter Learning results': {'Inference time': 2.602, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.530693, 'CLL': -0.735399, 'Recall': 0.0, 'Learning time': 12.053, 'AUC ROC': 0.50625}, 'F1': 0.921389, 'Precision': [0.903226, 0.5], 'AUC PR': 0.985857, 'Mapping results': {'Possible mappings': 54, 'Total time': 2.4355690479278564, 'Finding best mapping': 0.010198116302490234, 'Generating paths time': 2.345235824584961, 'Knowledge compiling time': 0.07071328163146973, 'Generating mappings time': 0.009415864944458008}, 'CLL': -0.375781, 'Recall': 0.940299, 'Learning time': 447.195, 'AUC ROC': 0.981584}


Start learning from scratch in target domain

Target train facts examples: 7301
Target train pos examples: 162
Target train neg examples: 236

Target test facts examples: 34559
Target test pos examples: 536
Target test neg examples: 480

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7369368138873914;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.030739953789376603;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.024204006076958298;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else return 0.2600180939780157;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6220633676283396;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else return 0.002557515549288521;  // std dev = 0,350, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   else return 0.1818497020010909;  // std dev = 0,474, 270,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.48728512046144257;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.20196858633872047;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.027343827785405832;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else return 0.15468462171797678;  // std dev = 0,474, 270,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3672186186501392;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.17113730529774163;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.02411424364843527;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.3321026283400304;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.0666246941743842;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else return 0.17100668024697496;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.642032249936541;  // std dev = 1,669, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.6185855903290233;  // std dev = 0,971, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.20475948716198014;  // std dev = 0,182, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.39807224506280847;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.034236495868208136;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.7373888418759614;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.20722586605899243;  // std dev = 0,661, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.30247933553875145;  // std dev = 0,870, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.5035266741331672;  // std dev = 1,696, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.4898042282314973;  // std dev = 1,015, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.1711424318133023;  // std dev = 0,180, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.30755472608314727;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.03025324461143468;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.5732325085746213;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.1642936447882546;  // std dev = 0,642, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2517994668780689;  // std dev = 0,846, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.3919742446372877;  // std dev = 1,528, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.3873640690026984;  // std dev = 0,947, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.14579815389023926;  // std dev = 0,179, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.24617252978697307;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.02664990645456834;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.4308999197114709;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.1306409435491976;  // std dev = 0,633, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.20369307965722117;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then return 0.03244189931468581;  // std dev = 0,266, 369,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=142 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(B, F) )
%   | | | then return 0.20337970921485166;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.023410046216382027;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.3298020770564759;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return 0.10428957393808758;  // std dev = 0,629, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.1612439053536645;  // std dev = 0,814, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.30405174654042516;  // std dev = 1,302, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.30509293034703217;  // std dev = 0,834, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.13037479609491515;  // std dev = 0,178, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.1724042028944549;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.020512769893998233;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.2613656844269089;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.08358473136494744;  // std dev = 0,629, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.12574145527096126;  // std dev = 0,805, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.24764900678153695;  // std dev = 1,120, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.2509426009396873;  // std dev = 0,732, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.11394482866530899;  // std dev = 0,178, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.14917487560723686;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.017934296040412443;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.21412326011563032;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then return 0.06516638323892822;  // std dev = 0,637, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.10021039856278868;  // std dev = 0,793, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.960665
   AUC PR    = 0.955806
   CLL	      = -0.258762
   Precision = 0.949275 at threshold = 0.5
   Recall    = 0.977612
   F1        = 0.963235


Total learning time: 434.983 seconds
Total inference time: 61.41 seconds
AUC ROC: 0.960665


Dataset: 14_uwcse_cora, Fold: 1, Type: scratch, Time: 04:09:08
{'Inference time': 61.41, 'F1': 0.963235, 'Precision': [0.949275, 0.5], 'AUC PR': 0.955806, 'CLL': -0.258762, 'Recall': 0.977612, 'Learning time': 434.983, 'AUC ROC': 0.960665}


Starting fold 2

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.13859319686889648
   Generating paths time   = 2.430058717727661
   Generating mappings time   = 0.00953364372253418
   Possible mappings   = 54
   Finding best mapping   = 0.010133981704711914
   Total time   = 2.588325262069702


Best mapping found: ['publication(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'projectmember(A,B) -> haswordtitle(B,A)', 'hasposition(A,B) -> title(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;false
0;true,false;haswordtitle(A, I).;true;true
0;true,false,true;haswordtitle(J, I).;false;false
0;true;haswordtitle(G, H).;false;true
0;true,false,false;haswordtitle(B, M).;false;false
1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(B, C).;true;false
4;true,false;haswordtitle(B, G).;false;true
4;true,false,false;haswordtitle(A, H).;false;false
4;true;haswordtitle(A, C).;false;true
5;;sametitle(A, B) :- haswordtitle(B, I).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false;haswordtitle(B, N).;false;true
6;true;haswordtitle(B, D).;true;true
6;true,true,false;title(C, J).;false;false
6;true,false,false;haswordtitle(A, P).;false;false
6;true,true;haswordtitle(A, E).;true;true
6;true,true,true;haswordtitle(H, I).;false;false
7;;sametitle(A, B) :- title(C, B).;true;false
7;true,false;haswordtitle(A, F).;true;true
7;true,false,true;haswordtitle(B, F).;false;false
7;true;haswordtitle(B, D).;true;true
7;true,false,false;haswordtitle(B, G).;false;false
7;true,true;haswordtitle(A, E).;false;false
8;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,false;haswordtitle(A, J).;true;false
9;true,false,true;haswordtitle(K, J).;false;false
9;true;haswordtitle(D, E).;false;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.5873156017661759;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.4999402443806515;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.40017390037908546;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30667917321820926;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2306394324712994;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.17321489938454096;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.13096845545467165;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then return 0.09993275151492949;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07693472961057128;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.05969439626280079;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504518
   AUC PR    = 0.458882
   CLL	      = -0.793386
   Precision = 0.458882 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.629087


Total learning time: 9.209 seconds
Total inference time: 2.78 seconds
AUC ROC: 0.504518


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true': 'haswordtitle(A, C)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)', 'true,true,true': 'haswordtitle(F, G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [6.158, 52, 140], 'true,true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [6.158, 52, 140]}]]
[{'': [0.19748263888889372, nan], 'true': [0.19748263888889372, nan]}, {'': [0.19748263888888998, nan]}, {'': [0.19748263888888862, nan]}, {'': [0.1974826388888887, nan]}, {'': [0.19748263888888862, nan], 'true': [0.19748263888888862, nan]}, {'': [0.19748263888888826, nan]}, {'': [0.19748263888888865, nan], 'true': [0.19748263888888865, nan], 'true,true': [0.19748263888888865, nan], 'true,true,true': [0.19748263888888865, nan]}, {'': [0.19748263888888837, nan], 'true': [0.19748263888888837, nan], 'true,true': [0.19748263888888837, nan]}, {'': [0.19748263888888898, nan]}, {'': [0.1974826388888886, nan], 'true': [0.1974826388888886, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '0;true;haswordtitle(D, E).;true;true', '1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '4;true;haswordtitle(A, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- title(C, B).;true;true', '6;true;haswordtitle(B, D).;true;true', '6;true,true;haswordtitle(A, E).;true;true', '6;true,true,true;haswordtitle(F, G).;true;true', '7;;sametitle(A, B) :- title(C, B).;true;true', '7;true;haswordtitle(B, D).;true;true', '7;true,true;haswordtitle(A, E).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- title(C, B).;true;true', '9;true;haswordtitle(D, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(B, F) )
%   | | | then return 0.799325405687748;  // std dev = 1,940, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.5618526388032163;  // std dev = 0,457, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.7311911912464265;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.666675062214168;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.22475862895351809;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.6013283275682223;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.5722214529189243;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5177074913802713;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.1880232639236015;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.48012100179645917;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.4301670462453783;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.38917138267307494;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.16098339778189036;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.3651815023510468;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.29855850669823747;  // std dev = 1,935, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.21273758805102275;  // std dev = 0,380, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.26910641651714284;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.22981114402088695;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.1680969426578716;  // std dev = 1,67e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.1767565466615819;  // std dev = 0,366, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.13260344980870392;  // std dev = 4,415, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return 0.10147786538160249;  // std dev = 2,265, 84,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=64 */
%   | | | else return 0.11208076041909658;  // std dev = 3,764, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.18253205491629668;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14322739979730964;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12428548429557053;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.17752732911773986;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.12706142774971582;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(D, E) )
%   | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(B, F) )
%   | | | then return 0.12383561392160992;  // std dev = 1,935, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return -0.11137777355810764;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | | | then return -0.15307060841442616;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.10102262566756842;  // std dev = 3,636, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.711529
   AUC PR    = 0.663662
   CLL	      = -0.700175
   Precision = 0.550976 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.686486


Total learning time: 232.04 seconds
Total inference time: 175.577 seconds
AUC ROC: 0.711529


Refined model AUC ROC: 0.711529


Dataset: 14_uwcse_cora, Fold: 2, Type: transfer, Time: 04:16:11
{'Inference time': 175.577, 'Parameter Learning results': {'Inference time': 2.78, 'F1': 0.629087, 'Precision': [0.458882, 0.5], 'AUC PR': 0.458882, 'CLL': -0.793386, 'Recall': 1.0, 'Learning time': 9.209, 'AUC ROC': 0.504518}, 'F1': 0.686486, 'Precision': [0.550976, 0.5], 'AUC PR': 0.663662, 'Mapping results': {'Possible mappings': 54, 'Total time': 2.588325262069702, 'Finding best mapping': 0.010133981704711914, 'Generating paths time': 2.430058717727661, 'Knowledge compiling time': 0.13859319686889648, 'Generating mappings time': 0.00953364372253418}, 'CLL': -0.700175, 'Recall': 0.910394, 'Learning time': 241.249, 'AUC ROC': 0.711529}


Start learning from scratch in target domain

Target train facts examples: 8876
Target train pos examples: 140
Target train neg examples: 52

Target test facts examples: 32984
Target test pos examples: 558
Target test neg examples: 664

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7936328060672545;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.5618526388032163;  // std dev = 0,457, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.7237518087032814;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6673784342854517;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.22475862895351809;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.6013283275682223;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.5596022372298854;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5189205286489138;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.1880232639236015;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.48012100179645917;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3928062610399144;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.16098339778189036;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.3651815023510468;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.331455706092026;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.295377469010403;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.21273758805102275;  // std dev = 0,380, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), title(E, B) )
%   | then return 0.26275425640002165;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( haswordtitle(A, C) )
%   | | then return 0.23046887383415324;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.1680969426578716;  // std dev = 1,67e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.2223115550180999;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.2168100565825198;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18473231810550436;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.12365874528316613;  // std dev = 0,367, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.18227165609011223;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1517871174342934;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.1619740049611817;  // std dev = 1,29e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.1111116942351025;  // std dev = 0,358, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.12976956045466265;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | else return -0.1411722907219471;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.08987250301343339;  // std dev = 0,357, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.14174738691587122;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10771914838145052;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.12490712560974854;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.07326521617113103;  // std dev = 0,356, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */


Results
   AUC ROC   = 0.710468
   AUC PR    = 0.662841
   CLL	      = -0.700968
   Precision = 0.548596 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.684636


Total learning time: 22.605 seconds
Total inference time: 2.378 seconds
AUC ROC: 0.710468


Dataset: 14_uwcse_cora, Fold: 2, Type: scratch, Time: 04:16:36
{'Inference time': 2.378, 'F1': 0.684636, 'Precision': [0.548596, 0.5], 'AUC PR': 0.662841, 'CLL': -0.700968, 'Recall': 0.910394, 'Learning time': 22.605, 'AUC ROC': 0.710468}


Starting fold 3

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.08769893646240234
   Generating paths time   = 2.2234737873077393
   Generating mappings time   = 0.009701251983642578
   Possible mappings   = 54
   Finding best mapping   = 0.010489940643310547
   Total time   = 2.331369161605835


Best mapping found: ['publication(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'projectmember(A,B) -> haswordtitle(B,A)', 'hasposition(A,B) -> title(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;false
0;true,false;haswordtitle(A, I).;true;true
0;true,false,true;haswordtitle(J, I).;false;false
0;true;haswordtitle(G, H).;false;true
0;true,false,false;haswordtitle(B, M).;false;false
1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(B, C).;true;false
4;true,false;haswordtitle(B, G).;false;true
4;true,false,false;haswordtitle(A, H).;false;false
4;true;haswordtitle(A, C).;false;true
5;;sametitle(A, B) :- haswordtitle(B, I).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false;haswordtitle(B, N).;false;true
6;true;haswordtitle(B, D).;true;true
6;true,true,false;title(C, J).;false;false
6;true,false,false;haswordtitle(A, P).;false;false
6;true,true;haswordtitle(A, E).;true;true
6;true,true,true;haswordtitle(H, I).;false;false
7;;sametitle(A, B) :- title(C, B).;true;false
7;true,false;haswordtitle(A, F).;true;true
7;true,false,true;haswordtitle(B, F).;false;false
7;true;haswordtitle(B, D).;true;true
7;true,false,false;haswordtitle(B, G).;false;false
7;true,true;haswordtitle(A, E).;false;false
8;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,false;haswordtitle(A, J).;true;false
9;true,false,true;haswordtitle(K, J).;false;false
9;true;haswordtitle(D, E).;false;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.2123809100211385;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.18451283689969777;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.15690831629013716;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.13087298691539415;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.10735248824417692;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   | else if ( haswordtitle(B, D) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.08472461919388796;  // std dev = 8,549, 323,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=113 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.0679297061917791;  // std dev = 8,548, 323,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=113 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then return 0.054009225209278;  // std dev = 8,548, 323,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04448637516683916;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.10273152057069787;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.03330366755092858;  // std dev = 8,546, 323,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=113 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.501976
   AUC PR    = 0.53719
   CLL	      = -0.782859
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 82.119 seconds
Total inference time: 2.118 seconds
AUC ROC: 0.501976


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true,false': 'haswordtitle(B, D)', 'true': 'haswordtitle(A, C)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true': [8.542, 206, 113], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [8.549, 210, 113]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)', 'true,true,true': 'haswordtitle(F, G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [8.548, 210, 113], 'true,true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.548, 210, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [8.546, 210, 113]}]]
[{'': [0.2287516828647543, 0.0], 'true': [0.2287516828647543, nan]}, {'': [0.22875168286474865, 0.0]}, {'': [0.22875168286475048, 0.0]}, {'': [0.22875168286475583, 0.0]}, {'': [0.22640828041241276, nan], 'true,false': [0.0, nan], 'true': [0.2287516828647557, 0.0]}, {'': [0.2262808408525237, nan]}, {'': [0.22623965990274142, nan], 'true': [0.22623965990274142, nan], 'true,true': [0.22623965990274142, nan], 'true,true,true': [0.22623965990274142, nan]}, {'': [0.22620804717946189, nan], 'true': [0.22620804717946189, nan], 'true,true': [0.22620804717946189, nan]}, {'': [0.22875168286475328, 0.0]}, {'': [0.2261209128718634, nan], 'true': [0.2261209128718634, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.34050187627598266;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.07627729440868444;  // std dev = 0,248, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.06912379217321499;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.3844647245731975;  // std dev = 5,331, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.29380884329300117;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.0679881150803658;  // std dev = 0,248, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.06008978392419368;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.3294592162075104;  // std dev = 5,317, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.7620554731734874;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.24471789042177308;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.060388414781080126;  // std dev = 0,248, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.05323821421201073;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.272218310756415;  // std dev = 5,315, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.6013112003517542;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1975929329354872;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.054498056339600316;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.04681672280236439;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.21609075092396393;  // std dev = 5,305, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.4901934060019715;  // std dev = 0,188, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, B), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, A) )
%   | | | then return 0.674977606530256;  // std dev = 0,665, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | | else return -0.22157526488927773;  // std dev = 1,637, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | | else return 0.5539118580071355;  // std dev = 0,267, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( haswordtitle(A, H), haswordtitle(B, H) )
%   | | then return 0.43435629353790406;  // std dev = 0,320, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.50633479790553;  // std dev = 0,435, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.5373838446115585;  // std dev = 0,725, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.18809810495376827;  // std dev = 0,100, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.4199549587575724;  // std dev = 0,267, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.3401276059266542;  // std dev = 0,300, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.38375017154421653;  // std dev = 0,473, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.4124835707652636;  // std dev = 0,781, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.16469523913666323;  // std dev = 0,094, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.31353421423698746;  // std dev = 0,204, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.2735725940462229;  // std dev = 0,271, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then return 2.3340804897053004E-5;  // std dev = 0,228, 301,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=96 */
%   | else return 0.24621258933949355;  // std dev = 0,195, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then return 0.2260312299152492;  // std dev = 0,242, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.03321662735945958;  // std dev = 0,257, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.023653651181056286;  // std dev = 0,167, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else return 0.014134626549087924;  // std dev = 0,234, 173,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=68 */
%   else return -0.07784705653248777;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.2945978220673193;  // std dev = 0,473, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return 0.3202240372352917;  // std dev = 0,773, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.14517290059732402;  // std dev = 0,083, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.20496684208759736;  // std dev = 0,222, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.1882356899623594;  // std dev = 0,211, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06362828197042725;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.974389
   AUC PR    = 0.980653
   CLL	      = -0.28802
   Precision = 0.957672 at threshold = 0.5
   Recall    = 0.928205
   F1        = 0.942708


Total learning time: 184.667 seconds
Total inference time: 37.246 seconds
AUC ROC: 0.974389


Refined model AUC ROC: 0.974389


Dataset: 14_uwcse_cora, Fold: 3, Type: transfer, Time: 04:21:45
{'Inference time': 37.246, 'Parameter Learning results': {'Inference time': 2.118, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.53719, 'CLL': -0.782859, 'Recall': 0.0, 'Learning time': 82.119, 'AUC ROC': 0.501976}, 'F1': 0.942708, 'Precision': [0.957672, 0.5], 'AUC PR': 0.980653, 'Mapping results': {'Possible mappings': 54, 'Total time': 2.331369161605835, 'Finding best mapping': 0.010489940643310547, 'Generating paths time': 2.2234737873077393, 'Knowledge compiling time': 0.08769893646240234, 'Generating mappings time': 0.009701251983642578}, 'CLL': -0.28802, 'Recall': 0.928205, 'Learning time': 266.786, 'AUC ROC': 0.974389}


Start learning from scratch in target domain

Target train facts examples: 9193
Target train pos examples: 113
Target train neg examples: 210

Target test facts examples: 32667
Target test pos examples: 585
Target test neg examples: 506

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then return 0.14267559742488678;  // std dev = 0,394, 302,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=96 */
%   | else return 0.6673923081472714;  // std dev = 0,229, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then return 0.7225254794457083;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839136;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.6883898964524663;  // std dev = 0,134, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.14217917498169938;  // std dev = 0,082, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.5181551719957221;  // std dev = 0,234, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.584364643865537;  // std dev = 0,118, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12219474024358502;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.5261802836453077;  // std dev = 0,142, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.12570830367301883;  // std dev = 0,075, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.39044044353042834;  // std dev = 0,232, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.4411711533536127;  // std dev = 0,126, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10970176850461982;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.3962886340551563;  // std dev = 0,127, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.11427024001289617;  // std dev = 0,395, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.2923710735474235;  // std dev = 0,174, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.33806659544735623;  // std dev = 0,118, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09945291230199754;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.3064030590835709;  // std dev = 0,108, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.10328387466639045;  // std dev = 0,377, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.23180830234964933;  // std dev = 0,165, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.26778226905081126;  // std dev = 0,106, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09090577143965635;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.2454119141879492;  // std dev = 0,091, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.09347826735278583;  // std dev = 0,179, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.19805834599299713;  // std dev = 0,188, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.21912939905522597;  // std dev = 0,094, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08367678624778263;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.20285574021670125;  // std dev = 0,078, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.08689929691362933;  // std dev = 0,417, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.15895109415322395;  // std dev = 0,144, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.18426517221506392;  // std dev = 0,084, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07748791107042143;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.1720279134432973;  // std dev = 0,068, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.07966084166080983;  // std dev = 0,211, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.13935222517101525;  // std dev = 0,179, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.15837864595992207;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0721331294191033;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.14889467110751586;  // std dev = 0,060, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.07495012011148268;  // std dev = 0,442, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.1174461298732178;  // std dev = 0,132, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.13854260361981235;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0674568120381585;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.983068
   AUC PR    = 0.975305
   CLL	      = -0.172397
   Precision = 0.986038 at threshold = 0.5
   Recall    = 0.965812
   F1        = 0.97582


Total learning time: 203.114 seconds
Total inference time: 31.502 seconds
AUC ROC: 0.983068


Dataset: 14_uwcse_cora, Fold: 3, Type: scratch, Time: 04:25:40
{'Inference time': 31.502, 'F1': 0.97582, 'Precision': [0.986038, 0.5], 'AUC PR': 0.975305, 'CLL': -0.172397, 'Recall': 0.965812, 'Learning time': 203.114, 'AUC ROC': 0.983068}


Starting fold 4

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.07950854301452637
   Generating paths time   = 2.238064765930176
   Generating mappings time   = 0.00955963134765625
   Possible mappings   = 54
   Finding best mapping   = 0.010542154312133789
   Total time   = 2.3376810550689697


Best mapping found: ['publication(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'projectmember(A,B) -> haswordtitle(B,A)', 'hasposition(A,B) -> title(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;false
0;true,false;haswordtitle(A, I).;true;true
0;true,false,true;haswordtitle(J, I).;false;false
0;true;haswordtitle(G, H).;false;true
0;true,false,false;haswordtitle(B, M).;false;false
1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(B, C).;true;false
4;true,false;haswordtitle(B, G).;false;true
4;true,false,false;haswordtitle(A, H).;false;false
4;true;haswordtitle(A, C).;false;true
5;;sametitle(A, B) :- haswordtitle(B, I).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false;haswordtitle(B, N).;false;true
6;true;haswordtitle(B, D).;true;true
6;true,true,false;title(C, J).;false;false
6;true,false,false;haswordtitle(A, P).;false;false
6;true,true;haswordtitle(A, E).;true;true
6;true,true,true;haswordtitle(H, I).;false;false
7;;sametitle(A, B) :- title(C, B).;true;false
7;true,false;haswordtitle(A, F).;true;true
7;true,false,true;haswordtitle(B, F).;false;false
7;true;haswordtitle(B, D).;true;true
7;true,false,false;haswordtitle(B, G).;false;false
7;true,true;haswordtitle(A, E).;false;false
8;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,false;haswordtitle(A, J).;true;false
9;true,false,true;haswordtitle(K, J).;false;false
9;true;haswordtitle(D, E).;false;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.50639014112966;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.43299877452533375;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.351029517594339;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2729495848556248;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.20712469400580077;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.1556174928114235;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.11675537240059652;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then return 0.08782150157750745;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06631466170514136;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.05027412262826942;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504644
   AUC PR    = 0.470637
   CLL	      = -0.72857
   Precision = 0.470637 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.640045


Total learning time: 4.743 seconds
Total inference time: 2.375 seconds
AUC ROC: 0.504644


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true': 'haswordtitle(A, C)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)', 'true,true,true': 'haswordtitle(F, G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [6.736, 70, 129], 'true,true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [6.736, 70, 129]}]]
[{'': [0.22802454483473067, nan], 'true': [0.22802454483473067, nan]}, {'': [0.22802454483473095, nan]}, {'': [0.22802454483472503, nan]}, {'': [0.22802454483472656, nan]}, {'': [0.22802454483472698, nan], 'true': [0.22802454483472698, nan]}, {'': [0.2280245448347273, nan]}, {'': [0.22802454483472612, nan], 'true': [0.22802454483472612, nan], 'true,true': [0.22802454483472612, nan], 'true,true,true': [0.22802454483472612, nan]}, {'': [0.22802454483472537, nan], 'true': [0.22802454483472537, nan], 'true,true': [0.22802454483472537, nan]}, {'': [0.22802454483472684, nan]}, {'': [0.22802454483472637, nan], 'true': [0.22802454483472637, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '0;true;haswordtitle(D, E).;true;true', '1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '4;true;haswordtitle(A, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- title(C, B).;true;true', '6;true;haswordtitle(B, D).;true;true', '6;true,true;haswordtitle(A, E).;true;true', '6;true,true,true;haswordtitle(F, G).;true;true', '7;;sametitle(A, B) :- title(C, B).;true;true', '7;true;haswordtitle(B, D).;true;true', '7;true,true;haswordtitle(A, E).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- title(C, B).;true;true', '9;true;haswordtitle(D, E).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.50639014112966;  // std dev = 0,478, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.7847575684951855;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.015526799264416665;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.015526799264416665;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.4446215140734151;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6245373860251923;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.012892524856849151;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.3319985651671233;  // std dev = 0,479, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4711109375298731;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.010687565989475043;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.25907163742528155;  // std dev = 0,479, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | | then if ( haswordtitle(B, D) )
%   | | | then return 0.3573703302726123;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.008847603969768912;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | | then return -0.10392867641827538;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.2239884019328937;  // std dev = 5,744, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.28005952533626216;  // std dev = 2,98e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.007316108806698424;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.1480702083056812;  // std dev = 0,475, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.11967699393859126;  // std dev = 6,229, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | | then return 0.13274921780828236;  // std dev = 1,654, 39,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   | | | else return 0.08192981523784745;  // std dev = 6,001, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.18593363237511704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.040950852556846544;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.061893899386237974;  // std dev = 0,474, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.05637925775973503;  // std dev = 0,441, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.74826
   AUC PR    = 0.696881
   CLL	      = -0.61993
   Precision = 0.583062 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.720805


Total learning time: 10.723 seconds
Total inference time: 6.166 seconds
AUC ROC: 0.74826


Refined model AUC ROC: 0.74826


Dataset: 14_uwcse_cora, Fold: 4, Type: transfer, Time: 04:26:07
{'Inference time': 6.166, 'Parameter Learning results': {'Inference time': 2.375, 'F1': 0.640045, 'Precision': [0.470637, 0.5], 'AUC PR': 0.470637, 'CLL': -0.72857, 'Recall': 1.0, 'Learning time': 4.743, 'AUC ROC': 0.504644}, 'F1': 0.720805, 'Precision': [0.583062, 0.5], 'AUC PR': 0.696881, 'Mapping results': {'Possible mappings': 54, 'Total time': 2.3376810550689697, 'Finding best mapping': 0.010542154312133789, 'Generating paths time': 2.238064765930176, 'Knowledge compiling time': 0.07950854301452637, 'Generating mappings time': 0.00955963134765625}, 'CLL': -0.61993, 'Recall': 0.943761, 'Learning time': 15.466000000000001, 'AUC ROC': 0.74826}


Start learning from scratch in target domain

Target train facts examples: 8000
Target train pos examples: 129
Target train neg examples: 70

Target test facts examples: 33860
Target test pos examples: 569
Target test neg examples: 646

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,478, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.48314893509950974;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.019426559477543768;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.44852127428654304;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.01617044320432853;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.3642619889388496;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.013432400712573424;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.283278747998026;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then return 0.23031756389186392;  // std dev = 0,275, 39,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.011138855015842528;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.21483806790650511;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.2727291215056952;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.012818676052353737;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.14899129461955585;  // std dev = 0,472, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.22208638532667516;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.010625858836138978;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.11265183528067238;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,438, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.1860875657672221;  // std dev = 1,83e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.008796184829081554;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.03914856642296102;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.09628691347241448;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */


Results
   AUC ROC   = 0.746149
   AUC PR    = 0.695718
   CLL	      = -0.594204
   Precision = 0.580541 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.718876


Total learning time: 7.371 seconds
Total inference time: 1.773 seconds
AUC ROC: 0.746149


Dataset: 14_uwcse_cora, Fold: 4, Type: scratch, Time: 04:26:16
{'Inference time': 1.773, 'F1': 0.718876, 'Precision': [0.580541, 0.5], 'AUC PR': 0.695718, 'CLL': -0.594204, 'Recall': 0.943761, 'Learning time': 7.371, 'AUC ROC': 0.746149}


Starting fold 5

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.12706685066223145
   Generating paths time   = 2.6337008476257324
   Generating mappings time   = 0.012285947799682617
   Possible mappings   = 54
   Finding best mapping   = 0.013442754745483398
   Total time   = 2.7865028381347656


Best mapping found: ['publication(A,B) -> haswordtitle(B,A)', 'advisedby(A,B) -> sametitle(A,B)', 'projectmember(A,B) -> haswordtitle(B,A)', 'hasposition(A,B) -> title(B,A)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;false
0;true,false;haswordtitle(A, I).;true;true
0;true,false,true;haswordtitle(J, I).;false;false
0;true;haswordtitle(G, H).;false;true
0;true,false,false;haswordtitle(B, M).;false;false
1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(B, C).;true;false
4;true,false;haswordtitle(B, G).;false;true
4;true,false,false;haswordtitle(A, H).;false;false
4;true;haswordtitle(A, C).;false;true
5;;sametitle(A, B) :- haswordtitle(B, I).;false;false
6;;sametitle(A, B) :- title(C, B).;true;false
6;true,false;haswordtitle(B, N).;false;true
6;true;haswordtitle(B, D).;true;true
6;true,true,false;title(C, J).;false;false
6;true,false,false;haswordtitle(A, P).;false;false
6;true,true;haswordtitle(A, E).;true;true
6;true,true,true;haswordtitle(H, I).;false;false
7;;sametitle(A, B) :- title(C, B).;true;false
7;true,false;haswordtitle(A, F).;true;true
7;true,false,true;haswordtitle(B, F).;false;false
7;true;haswordtitle(B, D).;true;true
7;true,false,false;haswordtitle(B, G).;false;false
7;true,true;haswordtitle(A, E).;false;false
8;;sametitle(A, B) :- haswordtitle(A, D), haswordtitle(B, D).;false;false
9;;sametitle(A, B) :- title(C, B).;true;false
9;true,false;haswordtitle(A, J).;true;false
9;true,false,true;haswordtitle(K, J).;false;false
9;true;haswordtitle(D, E).;false;true


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.3714822684328418;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then return 0.32000358944101137;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.26518533117208726;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.21249917188183085;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.16601088986002235;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   | else if ( haswordtitle(B, D) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C) )
%   then return 0.1260815840806668;  // std dev = 8,662, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then if ( haswordtitle(F, G) )
%   | | | then return 0.09594054346723165;  // std dev = 8,661, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(B, D) )
%   | then if ( haswordtitle(A, E) )
%   | | then return 0.07255795812152085;  // std dev = 8,661, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05579051037560023;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.11112315514393388;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( title(C, B) )
%   then if ( haswordtitle(D, E) )
%   | then return 0.04097029939220885;  // std dev = 8,660, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.503521
   AUC PR    = 0.490975
   CLL	      = -0.691062
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.435 seconds
Total inference time: 2.508 seconds
AUC ROC: 0.503521


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 2, 0], 'true,true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C), haswordtitle(A, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)', 'true,false': 'haswordtitle(B, D)', 'true': 'haswordtitle(A, C)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [8.657, 146, 154], 'false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [8.662, 148, 154]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)', 'true,true,true': 'haswordtitle(F, G)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [8.661, 148, 154], 'true,true,false': [0.0, 0, 0]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(B, D)', 'true,true': 'haswordtitle(A, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [8.661, 148, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'title(C, B)', 'true': 'haswordtitle(D, E)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true': [8.66, 148, 154]}]]
[{'': [0.2498222222222265, 0.0], 'true': [0.2498222222222265, nan]}, {'': [0.24982222222221978, 0.0]}, {'': [0.24982222222222325, 0.0]}, {'': [0.2498222222222224, 0.0]}, {'': [0.24860805907377434, nan], 'true,false': [0.0, nan], 'true': [0.2498222222222226, 0.0]}, {'': [0.24846532684944142, nan]}, {'': [0.2484121968875155, nan], 'true': [0.2484121968875155, nan], 'true,true': [0.2484121968875155, nan], 'true,true,true': [0.2484121968875155, nan]}, {'': [0.24837595567646154, nan], 'true': [0.24837595567646154, nan], 'true,true': [0.24837595567646154, nan]}, {'': [0.24982222222222306, 0.0]}, {'': [0.24830140744383247, nan], 'true': [0.24830140744383247, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(B, C), haswordtitle(A, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.2642624722174136;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.014812149378556561;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.22895776974583762;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.013040256218347378;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.19308733108125853;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011495970442168556;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.4194835195810378;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12218314708562883;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.16566088961161832;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02665557794064159;  // std dev = 0,941, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0.12801851848748277;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.023743779313526732;  // std dev = 0,298, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.10162275397643337;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.19670004057326665;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.021198519696516552;  // std dev = 0,298, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.07970124340468875;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16371858628713193;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.018964261783566465;  // std dev = 0,298, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.06195522835051038;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.13909109340224876;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 9.309549414140798E-5;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.04785070185876266;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.0853508180781468;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.12013771168374343;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.052078905701252655;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.01571753145356728;  // std dev = 0,297, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.03678539149957675;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */


Results
   AUC ROC   = 0.741773
   AUC PR    = 0.696471
   CLL	      = -0.621257
   Precision = 0.762646 at threshold = 0.5
   Recall    = 0.360294
   F1        = 0.489388


Total learning time: 15.54 seconds
Total inference time: 4.595 seconds
AUC ROC: 0.741773


Refined model AUC ROC: 0.741773


Dataset: 14_uwcse_cora, Fold: 5, Type: transfer, Time: 04:26:51
{'Inference time': 4.595, 'Parameter Learning results': {'Inference time': 2.508, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.490975, 'CLL': -0.691062, 'Recall': 0.0, 'Learning time': 8.435, 'AUC ROC': 0.503521}, 'F1': 0.489388, 'Precision': [0.762646, 0.5], 'AUC PR': 0.696471, 'Mapping results': {'Possible mappings': 54, 'Total time': 2.7865028381347656, 'Finding best mapping': 0.013442754745483398, 'Generating paths time': 2.6337008476257324, 'Knowledge compiling time': 0.12706685066223145, 'Generating mappings time': 0.012285947799682617}, 'CLL': -0.621257, 'Recall': 0.360294, 'Learning time': 23.975, 'AUC ROC': 0.741773}


Start learning from scratch in target domain

Target train facts examples: 8490
Target train pos examples: 154
Target train neg examples: 148

Target test facts examples: 33370
Target test pos examples: 544
Target test neg examples: 568

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.2642624722174136;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.22895776974583762;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03254015317273094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.19308733108125853;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.028843434243526523;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.4194835195810378;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12218314708562883;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.16566088961161832;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,447, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.025640477399664095;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.12801851848748277;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.022850675562834787;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.10162275397643337;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.19670004057326665;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.02040946845150366;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.07970124340468875;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16371858628713193;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.018264572141688296;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.06195522835051038;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13909109340224876;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.01637321748135532;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.04785070185876266;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */


Results
   AUC ROC   = 0.73954
   AUC PR    = 0.695161
   CLL	      = -0.622793
   Precision = 0.762646 at threshold = 0.5
   Recall    = 0.360294
   F1        = 0.489388


Total learning time: 13.674 seconds
Total inference time: 1.846 seconds
AUC ROC: 0.73954


Dataset: 14_uwcse_cora, Fold: 5, Type: scratch, Time: 04:27:07
{'Inference time': 1.846, 'F1': 0.489388, 'Precision': [0.762646, 0.5], 'AUC PR': 0.695161, 'CLL': -0.622793, 'Recall': 0.360294, 'Learning time': 13.674, 'AUC ROC': 0.73954}


