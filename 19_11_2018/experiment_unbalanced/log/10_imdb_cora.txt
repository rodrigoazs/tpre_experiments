Starting experiment #1 for 10_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048904;  // std dev = 0,000, 687,000 (wgt'ed) examples reached here.  /* #neg=687 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839235;  // std dev = 0,000, 693,000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1123163781936063;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360671;  // std dev = 0,000, 718,000 (wgt'ed) examples reached here.  /* #neg=718 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783504;  // std dev = 4,64e-07, 710,000 (wgt'ed) examples reached here.  /* #neg=710 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.09269127618926182;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839675;  // std dev = 1,33e-07, 704,000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109273;  // std dev = 0,000, 677,000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.0732462257633365;  // std dev = 2,50e-07, 733,000 (wgt'ed) examples reached here.  /* #neg=733 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06842697784420254;  // std dev = 1,86e-07, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0641918400820253;  // std dev = 2,53e-07, 730,000 (wgt'ed) examples reached here.  /* #neg=730 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'director(person).', 'movie(movie,person).']

Starting fold 1

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.10418581962585449
   Generating paths time   = 2.42814302444458
   Generating mappings time   = 0.0010228157043457031
   Possible mappings   = 6
   Finding best mapping   = 0.0003597736358642578
   Total time   = 2.533717632293701


Best mapping found: ['movie(A,B) -> haswordtitle(B,A)', 'workedunder(A,B) -> sametitle(A,B)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.26518411097890515;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.22974501977182177;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.19372234090715318;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1594156091981743;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.12853891336589762;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.10199149388186568;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.0799509608303557;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06211668783897666;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04794951989538333;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.03684133918460116;  // std dev = 9,801, 398,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=162 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.50625
   AUC PR    = 0.530693
   CLL	      = -0.735133
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 7.836 seconds
Total inference time: 1.354 seconds
AUC ROC: 0.50625


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [9.801, 236, 162]}]]
[{'': [0.241357541476229, nan]}, {'': [0.24135754147622376, nan]}, {'': [0.24135754147622027, nan]}, {'': [0.2413575414762306, nan]}, {'': [0.24135754147622468, nan]}, {'': [0.2413575414762287, nan]}, {'': [0.24135754147622449, nan]}, {'': [0.24135754147622548, nan]}, {'': [0.24135754147622485, nan]}, {'': [0.2413575414762261, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.7369368138873914;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.030739953789376603;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.024204006076958298;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return 0.2600180939780157;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6220633676283396;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.202334239218108;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.027039036105351338;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.021283130990843033;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return 0.22533125375206722;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.48728512046144257;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.17149281961528945;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.023851027745157644;  // std dev = 2,309, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | else return 0.15311916475628032;  // std dev = 0,471, 270,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3672186186501392;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else return -1.0374326409013887E-5;  // std dev = 0,345, 62,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.008628117156507163;  // std dev = 0,353, 56,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else return 0.1634800416001035;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.6342098222609891;  // std dev = 1,919, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.20407003800387238;  // std dev = 2,849, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.2526297863694245;  // std dev = 1,144, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.7306752972004606;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | then return 0.21393642509306643;  // std dev = 0,638, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.29923736443157123;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.4978459575294813;  // std dev = 1,968, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.17074449773401792;  // std dev = 2,815, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.2046981542880167;  // std dev = 1,114, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.5664486402519198;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | then return 0.17060628332869343;  // std dev = 0,615, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.24873468121915998;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.3888566813362047;  // std dev = 1,798, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.145568579020088;  // std dev = 2,790, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.16612084279989894;  // std dev = 1,099, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.4257842359809655;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(B, J), haswordauthor(K, J) )
%   | | then return 0.1364926913513266;  // std dev = 0,603, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2010524434067975;  // std dev = 0,819, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.30910036635681903;  // std dev = 1,575, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.12602800062850789;  // std dev = 2,770, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( title(H, B), venue(H, E) )
%   | | | then return 0.10894202258870327;  // std dev = 1,076, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.2894181124424871;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | | then return 0.10677690582491602;  // std dev = 0,607, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1634388614624993;  // std dev = 0,797, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.2518943331184778;  // std dev = 1,370, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.11050073614607461;  // std dev = 2,755, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( title(H, B), venue(H, E) )
%   | | | then return 0.08877366847304029;  // std dev = 1,074, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.23392478684244342;  // std dev = 0,074, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | | then return 0.0853622514519768;  // std dev = 0,608, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.12874618774747076;  // std dev = 0,785, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordvenue(E, D) )
%   | then if ( title(F, A), venue(F, E) )
%   | | then if ( samebib(F, G), title(G, B) )
%   | | | then return 0.21032737990461936;  // std dev = 1,198, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09791154481954678;  // std dev = 2,744, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | | else if ( haswordtitle(A, H), haswordauthor(I, H) )
%   | | | then return 0.08519551968531353;  // std dev = 1,072, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.23836746981040574;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( haswordtitle(A, J), haswordauthor(K, J) )
%   | | then return 0.0666336338559796;  // std dev = 0,617, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.10326131529330092;  // std dev = 0,772, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985619
   AUC PR    = 0.989401
   CLL	      = -0.224657
   Precision = 0.956204 at threshold = 0.5
   Recall    = 0.977612
   F1        = 0.96679


Total learning time: 362.271 seconds
Total inference time: 206.75 seconds
AUC ROC: 0.985619


Refined model AUC ROC: 0.985619


Dataset: 10_imdb_cora, Fold: 1, Type: transfer, Time: 01:36:01
{'Inference time': 206.75, 'Parameter Learning results': {'Inference time': 1.354, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.530693, 'CLL': -0.735133, 'Recall': 0.0, 'Learning time': 7.836, 'AUC ROC': 0.50625}, 'F1': 0.96679, 'Precision': [0.956204, 0.5], 'AUC PR': 0.989401, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.533717632293701, 'Finding best mapping': 0.0003597736358642578, 'Generating paths time': 2.42814302444458, 'Knowledge compiling time': 0.10418581962585449, 'Generating mappings time': 0.0010228157043457031}, 'CLL': -0.224657, 'Recall': 0.977612, 'Learning time': 370.107, 'AUC ROC': 0.985619}


Start learning from scratch in target domain

Target train facts examples: 7301
Target train pos examples: 162
Target train neg examples: 236

Target test facts examples: 34559
Target test pos examples: 536
Target test neg examples: 480

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7369368138873914;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.23314893509951226;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.030739953789376603;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.024204006076958298;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else return 0.2600180939780157;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6220633676283396;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.202334239218108;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.027039036105351338;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.021283130990843033;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else return 0.22533125375206722;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.48728512046144257;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.17149281961528945;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.023851027745157644;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.32092546969114216;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.01875657120835472;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else return 0.19015949657647718;  // std dev = 0,490, 214,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=86 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.3672186186501392;  // std dev = 0,326, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.14228146899184052;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.02109064741059412;  // std dev = 0,314, 54,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   else return 0.1257308055511181;  // std dev = 0,468, 270,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.6385665723604161;  // std dev = 1,653, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.6188759177811007;  // std dev = 0,981, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.20503381885020475;  // std dev = 0,181, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return 0.2535896702857773;  // std dev = 0,295, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0.7308147788741787;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.21554752269473107;  // std dev = 0,632, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.3005069601638714;  // std dev = 0,861, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.5001820980820868;  // std dev = 1,683, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.490708204128742;  // std dev = 1,033, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.17155126887714992;  // std dev = 0,179, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.3391479395782666;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.00544023395953656;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.5665884763551228;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.1721420117980276;  // std dev = 0,608, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.25006398305549815;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.38939203720319904;  // std dev = 1,524, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.3888286742592417;  // std dev = 0,974, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.1462453751086829;  // std dev = 0,177, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.2677160331766038;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.004703181107163325;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.42588926978758823;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, I), haswordauthor(J, I) )
%   | then return 0.13793492550857292;  // std dev = 0,595, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.20234476113958094;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.3086494082877839;  // std dev = 1,326, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.3129232461676428;  // std dev = 0,875, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.1265998233616326;  // std dev = 0,176, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.21858053520461956;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0040637968066665016;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.32639574895438694;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then return 0.1072093896421118;  // std dev = 0,602, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.16598154519261393;  // std dev = 0,790, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then if ( venue(F, D) )
%   | | | then return 0.25103454058605496;  // std dev = 1,148, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return 0.2572144223863856;  // std dev = 0,775, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.11098813670242431;  // std dev = 0,176, 235,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=8 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(B, G) )
%   | | | then return 0.1835410782488296;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.003509698355273964;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.25904695378763276;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(A, I), haswordauthor(J, I) )
%   | then return 0.08640281710735154;  // std dev = 0,601, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.13006783315881543;  // std dev = 0,780, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then return 0.013883515013994919;  // std dev = 0,214, 369,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=142 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(B, F) )
%   | | | then return 0.15761534875551264;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0030299287716576786;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.21249104803670715;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( haswordtitle(B, H), haswordauthor(I, H) )
%   | then return 0.06723632850719137;  // std dev = 0,611, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.1049051681755228;  // std dev = 0,765, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.960829
   AUC PR    = 0.956155
   CLL	      = -0.257863
   Precision = 0.949275 at threshold = 0.5
   Recall    = 0.977612
   F1        = 0.963235


Total learning time: 461.332 seconds
Total inference time: 65.095 seconds
AUC ROC: 0.960829


Dataset: 10_imdb_cora, Fold: 1, Type: scratch, Time: 01:44:48
{'Inference time': 65.095, 'F1': 0.963235, 'Precision': [0.949275, 0.5], 'AUC PR': 0.956155, 'CLL': -0.257863, 'Recall': 0.977612, 'Learning time': 461.332, 'AUC ROC': 0.960829}


Starting fold 2

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.07868170738220215
   Generating paths time   = 2.3425588607788086
   Generating mappings time   = 0.0009109973907470703
   Possible mappings   = 6
   Finding best mapping   = 0.0003941059112548828
   Total time   = 2.422550916671753


Best mapping found: ['movie(A,B) -> haswordtitle(B,A)', 'workedunder(A,B) -> sametitle(A,B)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.5873156017661759;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.4999402443806515;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.40017390037908546;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.30667917321820926;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2306394324712994;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.17321489938454096;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.13096845545467165;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09993275151492949;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07693472961057128;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05969439626280079;  // std dev = 6,158, 192,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=140 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504518
   AUC PR    = 0.458882
   CLL	      = -0.792991
   Precision = 0.458882 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.629087


Total learning time: 10.121 seconds
Total inference time: 1.18 seconds
AUC ROC: 0.504518


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.158, 52, 140]}]]
[{'': [0.19748263888889372, nan]}, {'': [0.19748263888888998, nan]}, {'': [0.19748263888888862, nan]}, {'': [0.1974826388888887, nan]}, {'': [0.19748263888888862, nan]}, {'': [0.19748263888888826, nan]}, {'': [0.19748263888888865, nan]}, {'': [0.19748263888888837, nan]}, {'': [0.19748263888888898, nan]}, {'': [0.1974826388888886, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7936328060672545;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5618526388032163;  // std dev = 0,457, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.7237518087032814;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6673784342854517;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.478945074750187;  // std dev = 0,457, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.5589366687406878;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5189849385027072;  // std dev = 1,934, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.31881948350713596;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.5072674730146044;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.39280631510831254;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | else return -0.25388056084682503;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.3887396235055974;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.3321629077543768;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.29530913797948355;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.20884487148991215;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.2349567330882152;  // std dev = 0,376, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.26300431907731914;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23044477977069647;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.17642667980685725;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11443167662428472;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.23420239583254845;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.21654996102278104;  // std dev = 0,025, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18475765683803852;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.15223554373863446;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.13722967978241266;  // std dev = 0,364, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.18263018093332561;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1517524856541651;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.13361007167418043;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.10911084492283675;  // std dev = 0,362, 108,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then if ( author(F, E), title(F, B) )
%   | | | then return 0.15790559392138415;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12704693602670775;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.12849374345082815;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then return -0.1188862584977382;  // std dev = 1,29e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1250366237400246;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then if ( author(F, E), title(F, A) )
%   | | | then return 0.13848490594845145;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10809655884717313;  // std dev = 1,933, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.10698585835796542;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordtitle(A, G), haswordauthor(H, G) )
%   | | then return -0.11477820927665534;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.09950664502135308;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.711529
   AUC PR    = 0.663662
   CLL	      = -0.703502
   Precision = 0.550976 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.686486


Total learning time: 298.725 seconds
Total inference time: 10.572 seconds
AUC ROC: 0.711529


Refined model AUC ROC: 0.711529


Dataset: 10_imdb_cora, Fold: 2, Type: transfer, Time: 01:50:11
{'Inference time': 10.572, 'Parameter Learning results': {'Inference time': 1.18, 'F1': 0.629087, 'Precision': [0.458882, 0.5], 'AUC PR': 0.458882, 'CLL': -0.792991, 'Recall': 1.0, 'Learning time': 10.121, 'AUC ROC': 0.504518}, 'F1': 0.686486, 'Precision': [0.550976, 0.5], 'AUC PR': 0.663662, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.422550916671753, 'Finding best mapping': 0.0003941059112548828, 'Generating paths time': 2.3425588607788086, 'Knowledge compiling time': 0.07868170738220215, 'Generating mappings time': 0.0009109973907470703}, 'CLL': -0.703502, 'Recall': 0.910394, 'Learning time': 308.846, 'AUC ROC': 0.711529}


Start learning from scratch in target domain

Target train facts examples: 8876
Target train pos examples: 140
Target train neg examples: 52

Target test facts examples: 32984
Target test pos examples: 558
Target test neg examples: 664

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.799325405687748;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.6842358916212514;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.7311911912464265;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.666675062214168;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.5792891135108365;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.5225175468101523;  // std dev = 0,235, 68,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.4570789878895837;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.44238774962958566;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.38797949159476736;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.34592553794605063;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.33765375121224994;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2947478997197207;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.25984624421661506;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.26891126972422685;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22983949886063051;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.19744953338909077;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, B) )
%   | | then return 0.21980725675397647;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18441113312453536;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.1526381372739871;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.18598299408792995;  // std dev = 0,024, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15140086448584145;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.11999813200741807;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.15946658657365176;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.12687298820921383;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.09572464243777015;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then if ( author(E, D), title(E, A) )
%   | | then return 0.13924351416259187;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.108003750610357;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.07729377897012889;  // std dev = 0,379, 92,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */


Results
   AUC ROC   = 0.709121
   AUC PR    = 0.662421
   CLL	      = -0.735036
   Precision = 0.548596 at threshold = 0.5
   Recall    = 0.910394
   F1        = 0.684636


Total learning time: 18.231 seconds
Total inference time: 2.301 seconds
AUC ROC: 0.709121


Dataset: 10_imdb_cora, Fold: 2, Type: scratch, Time: 01:50:32
{'Inference time': 2.301, 'F1': 0.684636, 'Precision': [0.548596, 0.5], 'AUC PR': 0.662421, 'CLL': -0.735036, 'Recall': 0.910394, 'Learning time': 18.231, 'AUC ROC': 0.709121}


Starting fold 3

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.08025693893432617
   Generating paths time   = 2.0065090656280518
   Generating mappings time   = 0.0009403228759765625
   Possible mappings   = 6
   Finding best mapping   = 0.00037026405334472656
   Total time   = 2.0880823135375977


Best mapping found: ['movie(A,B) -> haswordtitle(B,A)', 'workedunder(A,B) -> sametitle(A,B)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2123809100211385;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.18451283689969777;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.15690831629013716;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.13087298691539415;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.10735248824417692;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.08685514421686333;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06950168703611669;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05513792287692194;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04345249980234128;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.03406949409167172;  // std dev = 8,542, 319,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=113 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.501976
   AUC PR    = 0.53719
   CLL	      = -0.781831
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 8.397 seconds
Total inference time: 1.518 seconds
AUC ROC: 0.501976


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 4, 0], 'true': [8.542, 206, 113]}]]
[{'': [0.2287516828647543, 0.0]}, {'': [0.22875168286474865, 0.0]}, {'': [0.22875168286475048, 0.0]}, {'': [0.22875168286475583, 0.0]}, {'': [0.2287516828647557, 0.0]}, {'': [0.2287516828647518, 0.0]}, {'': [0.22875168286475284, 0.0]}, {'': [0.22875168286475436, 0.0]}, {'': [0.22875168286475017, 0.0]}, {'': [0.22875168286475317, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.34050187627598266;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.07627729440868444;  // std dev = 0,248, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.06912379217321499;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.3844647245731975;  // std dev = 5,331, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.29380884329300117;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.0679881150803658;  // std dev = 0,248, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.06008978392419368;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.3294592162075104;  // std dev = 5,317, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.7620554731734874;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.24471789042177308;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.060388414781080126;  // std dev = 0,248, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.05323821421201073;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.272218310756415;  // std dev = 5,315, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.6013112003517542;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.1975929329354872;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.054498056339600316;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.04681672280236439;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.21609075092396393;  // std dev = 5,305, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.4901934060019715;  // std dev = 0,188, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.1557034832346506;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.0489750346124372;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.04184670747748826;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.16819729455902377;  // std dev = 5,304, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.3746077314078353;  // std dev = 0,176, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.12057945577250606;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.04461766941127019;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.037096029349812445;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.12798143686012814;  // std dev = 5,300, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.31710095582215614;  // std dev = 0,201, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.09230138702323207;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.040461271175737994;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.033363178099753345;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.09706882519824239;  // std dev = 5,300, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.2553348629069963;  // std dev = 0,176, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.07013259959696126;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.03713772324043716;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else return 0.04369172947930164;  // std dev = 0,432, 173,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=68 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.05304162920772202;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.040048066144815805;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.026860485604127418;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(A, H), haswordvenue(I, H) )
%   | | | then return 0.061859381917507845;  // std dev = 5,297, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.22063884487269136;  // std dev = 0,182, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.040000425254385685;  // std dev = 0,500, 85,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
%   | | else return -0.03632450905773418;  // std dev = 0,247, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return -0.024477675890785967;  // std dev = 0,260, 55,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordtitle(B, H), haswordvenue(I, H) )
%   | | | then return 0.046502156438837074;  // std dev = 5,297, 114,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=60 */
%   | | | else return 0.18691622856152984;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.528486
   AUC PR    = 0.545226
   CLL	      = -0.680334
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.006838
   F1        = 0.013582


Total learning time: 22.657 seconds
Total inference time: 3.486 seconds
AUC ROC: 0.528486


Refined model AUC ROC: 0.528486


Dataset: 10_imdb_cora, Fold: 3, Type: transfer, Time: 01:51:11
{'Inference time': 3.486, 'Parameter Learning results': {'Inference time': 1.518, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.53719, 'CLL': -0.781831, 'Recall': 0.0, 'Learning time': 8.397, 'AUC ROC': 0.501976}, 'F1': 0.013582, 'Precision': [1.0, 0.5], 'AUC PR': 0.545226, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.0880823135375977, 'Finding best mapping': 0.00037026405334472656, 'Generating paths time': 2.0065090656280518, 'Knowledge compiling time': 0.08025693893432617, 'Generating mappings time': 0.0009403228759765625}, 'CLL': -0.680334, 'Recall': 0.006838, 'Learning time': 31.054000000000002, 'AUC ROC': 0.528486}


Start learning from scratch in target domain

Target train facts examples: 9193
Target train pos examples: 113
Target train neg examples: 210

Target test facts examples: 32667
Target test pos examples: 585
Target test neg examples: 506

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.12612338422298822;  // std dev = 0,139, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.6673923081472714;  // std dev = 0,229, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.7225254794457083;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839136;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then return 0.0995455867001947;  // std dev = 0,311, 302,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=96 */
%   | else return 0.5235516292488022;  // std dev = 0,214, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then return 0.5583951624779799;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360636;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.5294753614289639;  // std dev = 0,114, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.12341747328715781;  // std dev = 0,199, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.4001858950091284;  // std dev = 0,191, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.4433645537439409;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10858346719654566;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.39863226725749284;  // std dev = 0,104, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.11069496956881054;  // std dev = 0,185, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.30490492432774946;  // std dev = 0,187, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.3390838297821593;  // std dev = 0,093, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09852064042471542;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.30796943539573907;  // std dev = 0,089, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.10027486063207795;  // std dev = 0,173, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.23776068514113782;  // std dev = 0,189, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.26816013849928283;  // std dev = 0,083, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09011727027603067;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.24647701484970316;  // std dev = 0,075, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.092760763132408;  // std dev = 0,383, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.1871067674939641;  // std dev = 0,147, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.2191937543027099;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08300153178116877;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, B), venue(E, D) )
%   | then if ( samebib(E, F), title(F, A) )
%   | | then return 0.20360792029351407;  // std dev = 0,065, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.08453643493204653;  // std dev = 0,205, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0.1615085134478644;  // std dev = 0,177, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.18418061919642564;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07690335482020245;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then if ( samebib(E, F), title(F, B) )
%   | | then return 0.17257986091443134;  // std dev = 0,056, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.07928508787855398;  // std dev = 0,413, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else return 0.13478123879362577;  // std dev = 0,132, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, G), haswordtitle(B, G) )
%   | then return 0.15822594283901353;  // std dev = 0,058, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07162228040746611;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordvenue(D, C) )
%   then if ( title(E, A), venue(E, D) )
%   | then return -0.0026059232030270726;  // std dev = 0,107, 301,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=96 */
%   | else return 0.11523417708424241;  // std dev = 0,133, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( haswordtitle(A, F), haswordtitle(B, F) )
%   | then return 0.13836175373809995;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06700663942049828;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.979616
   AUC PR    = 0.964003
   CLL	      = -0.183255
   Precision = 0.986038 at threshold = 0.5
   Recall    = 0.965812
   F1        = 0.97582


Total learning time: 207.749 seconds
Total inference time: 26.872 seconds
AUC ROC: 0.979616


Dataset: 10_imdb_cora, Fold: 3, Type: scratch, Time: 01:55:06
{'Inference time': 26.872, 'F1': 0.97582, 'Precision': [0.986038, 0.5], 'AUC PR': 0.964003, 'CLL': -0.183255, 'Recall': 0.965812, 'Learning time': 207.749, 'AUC ROC': 0.979616}


Starting fold 4

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.1164400577545166
   Generating paths time   = 2.007979154586792
   Generating mappings time   = 0.0009319782257080078
   Possible mappings   = 6
   Finding best mapping   = 0.0003676414489746094
   Total time   = 2.125722885131836


Best mapping found: ['movie(A,B) -> haswordtitle(B,A)', 'workedunder(A,B) -> sametitle(A,B)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.50639014112966;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.43299877452533375;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.351029517594339;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.2729495848556248;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.20712469400580077;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.1556174928114235;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.11675537240059652;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.08782150157750745;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.06631466170514136;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.05027412262826942;  // std dev = 6,736, 199,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504644
   AUC PR    = 0.470637
   CLL	      = -0.728227
   Precision = 0.470637 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.640045


Total learning time: 3.533 seconds
Total inference time: 1.444 seconds
AUC ROC: 0.504644


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 0, 0], 'true': [6.736, 70, 129]}]]
[{'': [0.22802454483473067, nan]}, {'': [0.22802454483473095, nan]}, {'': [0.22802454483472503, nan]}, {'': [0.22802454483472656, nan]}, {'': [0.22802454483472698, nan]}, {'': [0.2280245448347273, nan]}, {'': [0.22802454483472612, nan]}, {'': [0.22802454483472537, nan]}, {'': [0.22802454483472684, nan]}, {'': [0.22802454483472637, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.48314893509950974;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.4136573287083117;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.3366053739648672;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.13125518378207865;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | | then return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.29783953102692334;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.1015212839571254;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.21225861046073988;  // std dev = 0,472, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.01588110875754176;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.15339603412648814;  // std dev = 0,475, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.2097577156325355;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.013189657536071153;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.11544259204570977;  // std dev = 0,475, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.010935904729344402;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.08693915179072778;  // std dev = 0,475, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.009054579111756151;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.06563142344436633;  // std dev = 0,474, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.007488209536800747;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( haswordtitle(A, F), haswordauthor(G, F) )
%   | | then return -0.17585083830330955;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.06963328871319523;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.748521
   AUC PR    = 0.696952
   CLL	      = -0.611466
   Precision = 0.583062 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.720805


Total learning time: 8.539 seconds
Total inference time: 2.867 seconds
AUC ROC: 0.748521


Refined model AUC ROC: 0.748521


Dataset: 10_imdb_cora, Fold: 4, Type: transfer, Time: 01:55:25
{'Inference time': 2.867, 'Parameter Learning results': {'Inference time': 1.444, 'F1': 0.640045, 'Precision': [0.470637, 0.5], 'AUC PR': 0.470637, 'CLL': -0.728227, 'Recall': 1.0, 'Learning time': 3.533, 'AUC ROC': 0.504644}, 'F1': 0.720805, 'Precision': [0.583062, 0.5], 'AUC PR': 0.696952, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.125722885131836, 'Finding best mapping': 0.0003676414489746094, 'Generating paths time': 2.007979154586792, 'Knowledge compiling time': 0.1164400577545166, 'Generating mappings time': 0.0009319782257080078}, 'CLL': -0.611466, 'Recall': 0.943761, 'Learning time': 12.072, 'AUC ROC': 0.748521}


Start learning from scratch in target domain

Target train facts examples: 8000
Target train pos examples: 129
Target train neg examples: 70

Target test facts examples: 33860
Target test pos examples: 569
Target test neg examples: 646

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8581489350995118;  // std dev = 1,46e-07, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.48314893509950974;  // std dev = 0,484, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.07774578121441031;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return 0.019426559477543768;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.44852127428654304;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.06739536297660921;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.33597955084791986;  // std dev = 0,479, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.41751358415831;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.0579733820773872;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.2626182191385533;  // std dev = 0,479, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.10130317623110081;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.049528997355293175;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.2268910608159442;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.07922849942363255;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.16013114154917385;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.2097577156325355;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.016319175265921682;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.0625415187621679;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.13057496978523903;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.013557217681363122;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0.08619118520784019;  // std dev = 0,471, 160,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=100 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(A, C) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.06746746012940433;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(A, E), haswordauthor(F, E) )
%   | then return 0.011243235072375235;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.07711792809064509;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.009310809469156935;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( haswordtitle(B, E), haswordauthor(F, E) )
%   | then return -0.05354193218671417;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else return 0.058494533505477765;  // std dev = 0,474, 147,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=97 */


Results
   AUC ROC   = 0.746454
   AUC PR    = 0.6958
   CLL	      = -0.606555
   Precision = 0.580541 at threshold = 0.5
   Recall    = 0.943761
   F1        = 0.718876


Total learning time: 8.19 seconds
Total inference time: 1.662 seconds
AUC ROC: 0.746454


Dataset: 10_imdb_cora, Fold: 4, Type: scratch, Time: 01:55:35
{'Inference time': 1.662, 'F1': 0.718876, 'Precision': [0.580541, 0.5], 'AUC PR': 0.6958, 'CLL': -0.606555, 'Recall': 0.943761, 'Learning time': 8.19, 'AUC ROC': 0.746454}


Starting fold 5

Target predicate: sametitle 

Mapping Results
   Knowledge compiling time   = 0.10280323028564453
   Generating paths time   = 1.967919111251831
   Generating mappings time   = 0.0012035369873046875
   Possible mappings   = 6
   Finding best mapping   = 0.0004649162292480469
   Total time   = 2.0723979473114014


Best mapping found: ['movie(A,B) -> haswordtitle(B,A)', 'workedunder(A,B) -> sametitle(A,B)'] 

Transferred target predicate: sametitle 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false
9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;false;false


WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.3714822684328418;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.32000358944101137;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.26518533117208726;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.21249917188183085;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.16601088986002235;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.12749002631712725;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.09687482554396132;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.07315883543391806;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.055059825349243495;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.04136272538430987;  // std dev = 8,657, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.503521
   AUC PR    = 0.490975
   CLL	      = -0.690866
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.873 seconds
Total inference time: 1.281 seconds
AUC ROC: 0.503521


Structure after Parameter Learning
[['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}], ['sametitle(A, B)', {'': 'haswordtitle(A, C), haswordtitle(B, C)'}, {'false': [0.0, 2, 0], 'true': [8.657, 146, 154]}]]
[{'': [0.2498222222222265, 0.0]}, {'': [0.24982222222221978, 0.0]}, {'': [0.24982222222222325, 0.0]}, {'': [0.2498222222222224, 0.0]}, {'': [0.2498222222222226, 0.0]}, {'': [0.24982222222222072, 0.0]}, {'': [0.24982222222222275, 0.0]}, {'': [0.24982222222222064, 0.0]}, {'': [0.24982222222222286, 0.0]}, {'': [0.24982222222222308, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '1;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '2;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '3;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '4;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '5;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '6;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '7;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '8;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true', '9;;sametitle(A, B) :- haswordtitle(A, C), haswordtitle(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.2642624722174136;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.014812149378556561;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.22895776974583762;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.4536404606300186;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08802620603664803;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.19451115752503226;  // std dev = 0,489, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.3196950546070076;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.037852955302470494;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.15969797689246873;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.24420657969787565;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03275802106373834;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.3333986945629297;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10028865912596631;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.13447589392856327;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.18377898064629497;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.028454085807194898;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordtitle(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), title(I, A) )
%   | | | then return 0.2557174192269796;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08326809770190234;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.10667579119723652;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.19670004057326665;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.13787281513294727;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.024794068423036296;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.07962878459680725;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then return 0.080497569500788;  // std dev = 0,442, 300,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=154 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(A, D) )
%   | | then return 0.15129181876437353;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, A) )
%   | | | then return 0.15271999852636622;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09622560286720835;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.04499015268042043;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordtitle(B, C) )
%   then if ( haswordtitle(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(B, D) )
%   | | then return 0.12959323536410144;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else if ( author(F, E), title(F, B) )
%   | | | then return 0.07311594738680975;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03807510616744769;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.03372137684735555;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
%   else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.741971
   AUC PR    = 0.69657
   CLL	      = -0.609012
   Precision = 0.759542 at threshold = 0.5
   Recall    = 0.365809
   F1        = 0.493797


Total learning time: 16.578 seconds
Total inference time: 5.095 seconds
AUC ROC: 0.741971


Refined model AUC ROC: 0.741971


Dataset: 10_imdb_cora, Fold: 5, Type: transfer, Time: 01:56:04
{'Inference time': 5.095, 'Parameter Learning results': {'Inference time': 1.281, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.490975, 'CLL': -0.690866, 'Recall': 0.0, 'Learning time': 2.873, 'AUC ROC': 0.503521}, 'F1': 0.493797, 'Precision': [0.759542, 0.5], 'AUC PR': 0.69657, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.0723979473114014, 'Finding best mapping': 0.0004649162292480469, 'Generating paths time': 1.967919111251831, 'Knowledge compiling time': 0.10280323028564453, 'Generating mappings time': 0.0012035369873046875}, 'CLL': -0.609012, 'Recall': 0.365809, 'Learning time': 19.451, 'AUC ROC': 0.741971}


Start learning from scratch in target domain

Target train facts examples: 8490
Target train pos examples: 154
Target train neg examples: 148

Target test facts examples: 33370
Target test pos examples: 544
Target test neg examples: 568

WILL Produced-Tree #1
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.8248156017661792;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.04185106490048778;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.2642624722174136;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #2
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.6928183180467428;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03683251744007497;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.22895776974583762;  // std dev = 0,491, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #3
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.5367928709789446;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03254015317273094;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.4536404606300186;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.08802620603664803;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.19981783066060227;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #4
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.4034008832853693;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.028843434243526523;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.15875598870914898;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #5
% FOR sametitle(A, B):
%   return 0;  // std dev = 0,447, 302,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=154 */
WILL Produced-Tree #6
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.30789442979240567;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.025640477399664095;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.12805350540639643;  // std dev = 0,490, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #7
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.24240066496454685;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.1594898822817116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.022850675562834787;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.30458253250542794;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12324459714496096;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.10711273319752121;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #8
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.19670004057326665;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.11975529938157474;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.02040946845150366;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( haswordtitle(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), title(H, A) )
%   | | then return 0.23173242771822591;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.10096428377961629;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.08391651086648354;  // std dev = 0,492, 218,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=90 */
WILL Produced-Tree #9
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.16371858628713193;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.09028081829440963;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.018264572141688296;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.061360290167058885;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */
WILL Produced-Tree #10
% FOR sametitle(A, B):
%   if ( haswordtitle(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(B, C) )
%   | then return 0.13909109340224876;  // std dev = 0,180, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | else if ( author(E, D), title(E, B) )
%   | | then return 0.06840311429118533;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.01637321748135532;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0.047429684078464804;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=93 */


Results
   AUC ROC   = 0.73954
   AUC PR    = 0.695161
   CLL	      = -0.615083
   Precision = 0.759542 at threshold = 0.5
   Recall    = 0.365809
   F1        = 0.493797


Total learning time: 12.631 seconds
Total inference time: 2.229 seconds
AUC ROC: 0.73954


Dataset: 10_imdb_cora, Fold: 5, Type: scratch, Time: 01:56:19
{'Inference time': 2.229, 'F1': 0.493797, 'Precision': [0.759542, 0.5], 'AUC PR': 0.695161, 'CLL': -0.615083, 'Recall': 0.365809, 'Learning time': 12.631, 'AUC ROC': 0.73954}


