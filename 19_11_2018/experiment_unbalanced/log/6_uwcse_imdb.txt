Starting experiment #1 for 6_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2247
Source train pos examples: 140
Source train neg examples: 280

WILL Produced-Tree #1
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then if ( tempadvisedby(A, D) )
%   | then return 0.1914822684328457;  // std dev = 0,471, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( advisedby(A, E) )
%   | | then return 0.19148226843284577;  // std dev = 0,471, 138,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
%   | | else return 0.1914822684328457;  // std dev = 0,471, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( advisedby(A, F) )
%   | then if ( tempadvisedby(G, F) )
%   | | then if ( publication(H, G) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.19148226843284444;  // std dev = 4,243, 81,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | else return 0.1914822684328457;  // std dev = 0,471, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( tempadvisedby(A, I) )
%   | | then if ( publication(J, I) )
%   | | | then return 0.19148226843284455;  // std dev = 4,163, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.1914822684328457;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.1914822684328457;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #2
% FOR inphase(A, B):
%   if ( advisedby(A, C) )
%   then return 0.16653882456488164;  // std dev = 0,471, 273,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=91 */
%   else if ( tempadvisedby(A, D) )
%   | then if ( publication(E, D) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.16653882456488167;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.16653882456488245;  // std dev = 4,320, 84,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | else if ( projectmember(F, D) )
%   | | | then return 0.1665388245648817;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16653882456488167;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( publication(G, A) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.16653882456488167;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1665388245648817;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.16653882456488167;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.16653882456488167;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( advisedby(D, C) )
%   | then if ( publication(E, D) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.14209424281556476;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1420942428155646;  // std dev = 4,163, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | else if ( publication(F, C) )
%   | | | then return 0.14209424281556485;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(G, C) )
%   | | then return 0.1420942428155648;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( publication(H, A) )
%   | then return 0.1420942428155646;  // std dev = 0,471, 153,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
%   | else if ( advisedby(A, I) )
%   | | then return 0.14209424281556463;  // std dev = 0,471, 135,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else return 0.1420942428155646;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #4
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then if ( tempadvisedby(A, D) )
%   | then if ( publication(C, D) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11914890490746428;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.11914890490746417;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( advisedby(A, G) )
%   | | then if ( publication(C, G) )
%   | | | then return 0.11914890490746366;  // std dev = 4,761, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | | else return 0.1191489049074642;  // std dev = 2,828, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.1191489049074644;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1191489049074644;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( tempadvisedby(A, J) )
%   | then return 0.11914890490746381;  // std dev = 0,471, 96,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else return 0.11914890490746445;  // std dev = 0,471, 156,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #5
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then return 0.09841340278401824;  // std dev = 0,471, 168,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else if ( tempadvisedby(A, D) )
%   | then if ( publication(E, D) )
%   | | then if ( advisedby(F, D) )
%   | | | then return 0.09841340278401943;  // std dev = 4,000, 72,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.09841340278401874;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( advisedby(G, D) )
%   | | | then return 0.09841340278401874;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.09841340278401874;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( advisedby(A, H) )
%   | | then if ( tempadvisedby(I, H) )
%   | | | then return 0.09841340278401947;  // std dev = 4,546, 93,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0.09841340278401842;  // std dev = 3,055, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.09841340278401871;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.09841340278401868;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then if ( advisedby(A, D) )
%   | then if ( publication(C, D) )
%   | | then if ( tempadvisedby(E, D) )
%   | | | then return 0.0802665494425224;  // std dev = 4,163, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.08026654944252279;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.08026654944252272;  // std dev = 0,471, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.08026654944252268;  // std dev = 0,471, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( tempadvisedby(A, F) )
%   | then if ( publication(G, F) )
%   | | then return 0.0802665494425224;  // std dev = 0,471, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | else return 0.08026654944252255;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( advisedby(A, H) )
%   | | then if ( tempadvisedby(I, H) )
%   | | | then return 0.0802665494425221;  // std dev = 4,546, 93,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0.08026654944252276;  // std dev = 3,055, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else return 0.08026654944252246;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #7
% FOR inphase(A, B):
%   if ( tempadvisedby(A, C) )
%   then if ( advisedby(D, C) )
%   | then return 0.06479591611329169;  // std dev = 0,471, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | else if ( publication(E, C) )
%   | | then return 0.06479591611329236;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.06479591611329234;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( publication(F, A) )
%   | then if ( advisedby(A, G) )
%   | | then return 0.06479591611329218;  // std dev = 0,471, 138,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.06479591611329234;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06479591611329234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( advisedby(A, J) )
%   | | then return 0.06479591611329201;  // std dev = 0,471, 135,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.06479591611329234;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.06479591611329234;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then if ( advisedby(A, D) )
%   | then if ( publication(C, D) )
%   | | then if ( tempadvisedby(E, D) )
%   | | | then return 0.05187916934404081;  // std dev = 4,163, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.05187916934404083;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.05187916934404077;  // std dev = 0,471, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( tempadvisedby(A, F) )
%   | | then return 0.05187916934404068;  // std dev = 0,471, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.05187916934404059;  // std dev = 0,471, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( advisedby(A, G) )
%   | then return 0.051879169344041104;  // std dev = 0,471, 135,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | else if ( tempadvisedby(A, H) )
%   | | then if ( advisedby(I, H) )
%   | | | then return 0.05187916934404069;  // std dev = 4,397, 87,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.05187916934404062;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.051879169344040556;  // std dev = 0,471, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #9
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then if ( advisedby(A, D) )
%   | then if ( publication(C, D) )
%   | | then if ( tempadvisedby(E, D) )
%   | | | then return 0.04126932998424678;  // std dev = 4,163, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.041269329984246296;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( publication(F, D) )
%   | | | then return 0.04126932998424623;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.04126932998424623;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( tempadvisedby(A, G) )
%   | | then if ( publication(C, G) )
%   | | | then return 0.04126932998424646;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.041269329984246234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.041269329984246234;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.041269329984246234;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.04126932998424519;  // std dev = 0,471, 252,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=84 */
WILL Produced-Tree #10
% FOR inphase(A, B):
%   if ( publication(C, A) )
%   then if ( tempadvisedby(A, D) )
%   | then if ( publication(C, D) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.032663748734830134;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.03266374873483011;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.03266374873483011;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( advisedby(A, G) )
%   | | then if ( publication(C, G) )
%   | | | then return 0.03266374873483032;  // std dev = 4,761, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | | else return 0.032663748734830224;  // std dev = 2,828, 36,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.03266374873483008;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03266374873483011;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( tempadvisedby(A, J) )
%   | then return 0.03266374873483094;  // std dev = 0,471, 96,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else return 0.03266374873483099;  // std dev = 0,471, 156,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */


Predicates from source: ['inphase(person,prequals).', 'tempadvisedby(person,person).', 'projectmember(project,person).', 'advisedby(person,person).', 'publication(title,person).', 'ta(course,person,quarter).']

Starting fold 1

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.05156707763671875
   Generating paths time   = 2.123852491378784
   Generating mappings time   = 0.018487215042114258
   Possible mappings   = 145
   Finding best mapping   = 0.02118992805480957
   Total time   = 2.215101957321167


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(C, A).;true;true
0;true,false;workedunder(E, A).;false;false
0;false;workedunder(F, A).;true;true
0;true;workedunder(D, A).;false;true
0;false,true,true;movie(H, G).;false;false
0;false,false;workedunder(I, A).;true;false
0;false,false,true;movie(J, I).;false;false
0;false,true;workedunder(F, G).;true;false
1;;genre(A, B) :- workedunder(C, A).;false;true
1;false;workedunder(D, A).;true;true
1;false,false;movie(G, A).;false;false
1;false,true,true;movie(E, A).;false;false
1;false,true,false;workedunder(D, F).;false;false
1;false,true;movie(E, D).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
2;true,false;movie(G, C).;false;false
2;false;movie(H, A).;false;true
2;true;workedunder(C, D).;true;true
2;true,true,false;movie(F, C).;false;false
2;false,false;workedunder(I, A).;false;false
2;true,true;movie(E, D).;true;true
2;true,true,true;movie(E, A).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true,false;workedunder(G, A).;true;false
3;true,false,true;movie(C, G).;false;false
3;true;workedunder(D, A).;true;true
3;true,true;movie(C, D).;false;false
3;false;workedunder(J, A).;false;false
4;;genre(A, B) :- movie(C, A).;false;true
4;false;workedunder(D, A).;true;true
4;false,false;workedunder(H, A).;true;false
4;false,true,true;workedunder(D, F).;false;false
4;false,true,false;workedunder(D, G).;false;false
4;false,false,true;workedunder(H, I).;false;false
4;false,true;movie(E, D).;true;true
5;;genre(A, B) :- movie(C, A).;true;true
5;false;workedunder(F, A).;true;true
5;true;workedunder(D, A).;true;false
5;false,true;movie(G, F).;false;false
5;false,false;workedunder(H, A).;true;false
5;false,false,true;workedunder(H, I).;false;false
5;true,true;movie(C, D).;true;false
5;true,true,true;workedunder(D, E).;false;false
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,false;movie(E, C).;false;false
6;false;movie(F, A).;true;true
6;true;workedunder(C, D).;false;true
6;false,false;workedunder(J, A).;false;false
6;false,true;workedunder(G, A).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true,false;workedunder(F, A).;false;false
7;false;workedunder(G, A).;false;true
7;true;workedunder(D, A).;true;true
7;false,false;workedunder(H, A).;true;false
7;false,false,true;workedunder(H, I).;false;false
7;true,true;movie(C, D).;true;false
7;true,true,true;workedunder(D, E).;false;false
8;;genre(A, B) :- movie(C, A).;true;false
8;true,false;workedunder(G, A).;true;false
8;true,false,true;movie(C, G).;false;false
8;true;workedunder(D, A).;true;true
8;true,true,false;movie(F, D).;false;false
8;true,true;movie(C, D).;true;true
8;true,true,true;workedunder(D, E).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;true,false;workedunder(G, A).;true;false
9;true,false,true;movie(C, G).;false;false
9;true;workedunder(D, A).;true;true
9;true,true;movie(C, D).;false;false
9;false;workedunder(J, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6526478931012827;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then if ( movie(E, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5920717450160503;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.3620022298734767;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return -0.026761451832706364;  // std dev = 1,806, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.36475704784471535;  // std dev = 3,33e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09046504783711799;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.20171971158611124;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08329212025522932;  // std dev = 1,18e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.24577898016260402;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07714915260063032;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.11976650065671561;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07183243390562986;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18440277775240219;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06718802521435789;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.93932
   AUC PR    = 0.137931
   CLL	      = -0.27892
   Precision = 0.137931 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.242424


Total learning time: 1.008 seconds
Total inference time: 1.191 seconds
AUC ROC: 0.93932


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)'}, {'true,false,false': [2.11e-08, 26, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.957, 1, 11], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'movie(E, A)'}, {'true': [0.957, 1, 11], 'false,false,true': [0.0, 21, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(F, A)', 'true': 'workedunder(C, D)', 'true,true': 'movie(E, D)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 11], 'false,true': [1.39e-08, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 19, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [0.957, 1, 11]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'false': [0.0, 0, 0], 'true': [1.806, 31, 11]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 16, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [3.33e-08, 0, 11], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, A)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(F, A)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.957, 1, 11], 'false,true,false': [1.18e-08, 29, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [9.13e-09, 27, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [5.27e-09, 18, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.957, 1, 11], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 22, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [7.45e-09, 0, 11]}]]
[{'': [0.20567867036011028, nan], 'true,false': [nan, 1.708035422500241e-17], 'true': [0.07638888888888877, 1.708035422500241e-17]}, {'': [0.07638888888888906, -2.64338815386942e-18], 'false': [nan, -2.64338815386942e-18], 'false,false': [-2.64338815386942e-18, nan]}, {'': [-1.2111523905001707e-16, 1.295260195396016e-17], 'false': [1.295260195396016e-17, nan], 'true': [-1.2111523905001707e-16, nan], 'true,true': [-1.2111523905001707e-16, nan], 'true,true,true': [-1.2111523905001707e-16, nan]}, {'': [0.0805611373504854, nan], 'true,false': [nan, -5.843279076974508e-18], 'true': [0.07638888888888885, -5.843279076974508e-18], 'true,true': [0.07638888888888885, nan]}, {'': [0.07766540497270487, nan]}, {'': [0.05003015024124145, nan], 'true': [1.0092936587501423e-16, -5.204170427930421e-18], 'true,true': [1.0092936587501423e-16, nan], 'true,true,true': [1.0092936587501423e-16, nan]}, {'': [0.07638888888888888, 4.785444071660158e-18], 'false': [4.785444071660158e-18, nan], 'true': [0.07638888888888888, nan], 'false,true': [nan, 4.785444071660158e-18]}, {'': [0.02144870217603524, nan], 'true,false': [nan, 3.0839528461809902e-18], 'true': [0.0, 3.0839528461809902e-18], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.03936599196965777, nan], 'true,false': [nan, 1.5419764230904951e-18], 'true': [0.0763888888888889, 1.5419764230904951e-18], 'true,true': [0.0763888888888889, nan], 'true,true,true': [0.0763888888888889, nan]}, {'': [0.01406620714165758, nan], 'true,false': [nan, 0.0], 'true': [5.046468293750712e-18, 0.0], 'true,true': [5.046468293750712e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(D, A).;true;true', '5;;genre(A, B) :- workedunder(D, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(D, A).;true;true', '8;;genre(A, B) :- workedunder(D, A).;true;true', '9;;genre(A, B) :- workedunder(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5656272583648003;  // std dev = 0,361, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5929620091023856;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3626932362972741;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3590634300653848;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.28120447228271755;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.0851847513883968;  // std dev = 1,90e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.14465603192977575;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.12020001847061146;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10140700674583562;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.0866193844016762;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06419184008202622;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.93932
   AUC PR    = 0.137931
   CLL	      = -0.276615
   Precision = 0.137931 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.242424


Total learning time: 1.221 seconds
Total inference time: 0.922 seconds
AUC ROC: 0.93932


Refined model AUC ROC: 0.93932


Dataset: 6_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:13:10
{'Inference time': 0.922, 'Parameter Learning results': {'Inference time': 1.191, 'F1': 0.242424, 'Precision': [0.137931, 0.5], 'AUC PR': 0.137931, 'CLL': -0.27892, 'Recall': 1.0, 'Learning time': 1.008, 'AUC ROC': 0.93932}, 'F1': 0.242424, 'Precision': [0.137931, 0.5], 'AUC PR': 0.137931, 'Mapping results': {'Possible mappings': 145, 'Total time': 2.215101957321167, 'Finding best mapping': 0.02118992805480957, 'Generating paths time': 2.123852491378784, 'Knowledge compiling time': 0.05156707763671875, 'Generating mappings time': 0.018487215042114258}, 'CLL': -0.276615, 'Recall': 1.0, 'Learning time': 2.229, 'AUC ROC': 0.93932}


Start learning from scratch in target domain

Target train facts examples: 204
Target train pos examples: 11
Target train neg examples: 511

Target test facts examples: 827
Target test pos examples: 36
Target test neg examples: 1854

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0.4720331034129513;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0.4379083062503245;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.3345752465918847;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0.18127762470142494;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0.14753464169719718;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0.12238156098408497;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0.18643656854427784;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0.07645962141338376;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */


Results
   AUC ROC   = 0.93932
   AUC PR    = 0.137931
   CLL	      = -0.282839
   Precision = 0.137931 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.242424


Total learning time: 1.147 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.93932


Dataset: 6_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:13:12
{'Inference time': 0.752, 'F1': 0.242424, 'Precision': [0.137931, 0.5], 'AUC PR': 0.137931, 'CLL': -0.282839, 'Recall': 1.0, 'Learning time': 1.147, 'AUC ROC': 0.93932}


Starting fold 2

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.01213836669921875
   Generating paths time   = 2.485527753829956
   Generating mappings time   = 0.024236202239990234
   Possible mappings   = 145
   Finding best mapping   = 0.027886629104614258
   Total time   = 2.5497944355010986


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(C, A).;true;true
0;true,false;workedunder(E, A).;false;false
0;false;workedunder(F, A).;true;true
0;true;workedunder(D, A).;false;true
0;false,true,true;movie(H, G).;false;false
0;false,false;workedunder(I, A).;true;false
0;false,false,true;movie(J, I).;false;false
0;false,true;workedunder(F, G).;true;false
1;;genre(A, B) :- workedunder(C, A).;false;true
1;false;workedunder(D, A).;true;true
1;false,false;movie(G, A).;false;false
1;false,true,true;movie(E, A).;false;false
1;false,true,false;workedunder(D, F).;false;false
1;false,true;movie(E, D).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
2;true,false;movie(G, C).;false;false
2;false;movie(H, A).;false;true
2;true;workedunder(C, D).;true;true
2;true,true,false;movie(F, C).;false;false
2;false,false;workedunder(I, A).;false;false
2;true,true;movie(E, D).;true;true
2;true,true,true;movie(E, A).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true,false;workedunder(G, A).;true;false
3;true,false,true;movie(C, G).;false;false
3;true;workedunder(D, A).;true;true
3;true,true;movie(C, D).;false;false
3;false;workedunder(J, A).;false;false
4;;genre(A, B) :- movie(C, A).;false;true
4;false;workedunder(D, A).;true;true
4;false,false;workedunder(H, A).;true;false
4;false,true,true;workedunder(D, F).;false;false
4;false,true,false;workedunder(D, G).;false;false
4;false,false,true;workedunder(H, I).;false;false
4;false,true;movie(E, D).;true;true
5;;genre(A, B) :- movie(C, A).;true;true
5;false;workedunder(F, A).;true;true
5;true;workedunder(D, A).;true;false
5;false,true;movie(G, F).;false;false
5;false,false;workedunder(H, A).;true;false
5;false,false,true;workedunder(H, I).;false;false
5;true,true;movie(C, D).;true;false
5;true,true,true;workedunder(D, E).;false;false
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,false;movie(E, C).;false;false
6;false;movie(F, A).;true;true
6;true;workedunder(C, D).;false;true
6;false,false;workedunder(J, A).;false;false
6;false,true;workedunder(G, A).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true,false;workedunder(F, A).;false;false
7;false;workedunder(G, A).;false;true
7;true;workedunder(D, A).;true;true
7;false,false;workedunder(H, A).;true;false
7;false,false,true;workedunder(H, I).;false;false
7;true,true;movie(C, D).;true;false
7;true,true,true;workedunder(D, E).;false;false
8;;genre(A, B) :- movie(C, A).;true;false
8;true,false;workedunder(G, A).;true;false
8;true,false,true;movie(C, G).;false;false
8;true;workedunder(D, A).;true;true
8;true,true,false;movie(F, D).;false;false
8;true,true;movie(C, D).;true;true
8;true,true,true;workedunder(D, E).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;true,false;workedunder(G, A).;true;false
9;true,false,true;movie(C, G).;false;false
9;true;workedunder(D, A).;true;true
9;true,true;movie(C, D).;false;false
9;false;workedunder(J, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6810962576987776;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then if ( movie(E, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4703360792492303;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4206816233892121;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.0513036649602052;  // std dev = 1,530, 37,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.3049591961804595;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09709699149156867;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.17005800036965804;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08891124142106933;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.027562704743608446;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08196727325632815;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.19514673332908009;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07600691588061086;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.15825622852761181;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07083802347057028;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.941224
   AUC PR    = 0.138889
   CLL	      = -0.244955
   Precision = 0.138889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.243902


Total learning time: 1.128 seconds
Total inference time: 0.977 seconds
AUC ROC: 0.941224


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)'}, {'true,false,false': [1.49e-08, 24, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [1.549, 3, 12], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'movie(E, A)'}, {'true': [0.961, 1, 12], 'false,false,true': [0.0, 24, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(F, A)', 'true': 'workedunder(C, D)', 'true,true': 'movie(E, D)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [1.309, 2, 12], 'false,true': [0.0, 35, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 25, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [0.961, 1, 12]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'false': [0.0, 0, 0], 'true': [1.53, 25, 12]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [1.49e-08, 23, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [0.961, 1, 12], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, A)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(F, A)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [1.309, 2, 12], 'false,true,false': [1.39e-08, 24, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [9.13e-09, 22, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [1.732, 4, 12], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 25, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.961, 1, 12], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 26, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [0.961, 1, 12]}]]
[{'': [0.21301775147928945, nan], 'true,false': [nan, 9.25185853854297e-18], 'true': [0.15999999999999973, 9.25185853854297e-18]}, {'': [0.07100591715976333, -4.625929269271485e-18], 'false': [nan, -4.625929269271485e-18], 'false,false': [-4.625929269271485e-18, nan]}, {'': [0.12244897959183675, -1.2688263138573217e-17], 'false': [-1.2688263138573217e-17, nan], 'true': [0.12244897959183675, nan], 'true,true': [0.12244897959183675, nan], 'true,true,true': [0.12244897959183675, nan]}, {'': [0.08568459667374746, nan], 'true,false': [nan, -2.220446049250313e-18], 'true': [0.07100591715976344, -2.220446049250313e-18], 'true,true': [0.07100591715976344, nan]}, {'': [0.06322718139720326, nan]}, {'': [0.06293508755118317, nan], 'true': [0.07100591715976332, 9.654113257610057e-18], 'true,true': [0.07100591715976332, nan], 'true,true,true': [0.07100591715976332, nan]}, {'': [0.12244897959183672, 8.0953762212251e-18], 'false': [8.0953762212251e-18, nan], 'true': [0.12244897959183672, nan], 'false,true': [nan, 8.0953762212251e-18]}, {'': [0.08187180004182452, nan], 'true,false': [nan, 3.784851220313033e-18], 'true': [0.1875, 3.784851220313033e-18], 'true,true': [0.1875, nan], 'true,true,true': [0.1875, nan]}, {'': [0.040839557519277, nan], 'true,false': [nan, -6.661338147750939e-18], 'true': [0.07100591715976326, -6.661338147750939e-18], 'true,true': [0.07100591715976326, nan], 'true,true,true': [0.07100591715976326, nan]}, {'': [0.035331789341833654, nan], 'true,false': [nan, -4.270088556250602e-18], 'true': [0.0710059171597633, -4.270088556250602e-18], 'true,true': [0.0710059171597633, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(D, A).;true;true', '5;;genre(A, B) :- workedunder(D, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(D, A).;true;true', '8;;genre(A, B) :- workedunder(D, A).;true;true', '9;;genre(A, B) :- workedunder(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5766162693538114;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3903070371782126;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.35087512506526813;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926101;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0.2642475707392774;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.26827939792625455;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.144454993991697;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2586629860444177;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.135297437200297;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.19048069768920337;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.941224
   AUC PR    = 0.138889
   CLL	      = -0.266696
   Precision = 0.138889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.243902


Total learning time: 0.981 seconds
Total inference time: 0.897 seconds
AUC ROC: 0.941224


Refined model AUC ROC: 0.941224


Dataset: 6_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:13:19
{'Inference time': 0.897, 'Parameter Learning results': {'Inference time': 0.977, 'F1': 0.243902, 'Precision': [0.138889, 0.5], 'AUC PR': 0.138889, 'CLL': -0.244955, 'Recall': 1.0, 'Learning time': 1.128, 'AUC ROC': 0.941224}, 'F1': 0.243902, 'Precision': [0.138889, 0.5], 'AUC PR': 0.138889, 'Mapping results': {'Possible mappings': 145, 'Total time': 2.5497944355010986, 'Finding best mapping': 0.027886629104614258, 'Generating paths time': 2.485527753829956, 'Knowledge compiling time': 0.01213836669921875, 'Generating mappings time': 0.024236202239990234}, 'CLL': -0.266696, 'Recall': 1.0, 'Learning time': 2.109, 'AUC ROC': 0.941224}


Start learning from scratch in target domain

Target train facts examples: 196
Target train pos examples: 12
Target train neg examples: 519

Target test facts examples: 835
Target test pos examples: 35
Target test neg examples: 1846

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return 0.7152917922423694;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0.7473839334745777;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0.5066173341818098;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0.31492038586063;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.23840053335530076;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0.24989454991007523;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return 0.19745770470591648;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return 0.09400394488213794;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.22029120524729387;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0.18478462508713256;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */


Results
   AUC ROC   = 0.941224
   AUC PR    = 0.138889
   CLL	      = -0.269669
   Precision = 0.138889 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.243902


Total learning time: 1.399 seconds
Total inference time: 0.94 seconds
AUC ROC: 0.941224


Dataset: 6_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:13:22
{'Inference time': 0.94, 'F1': 0.243902, 'Precision': [0.138889, 0.5], 'AUC PR': 0.138889, 'CLL': -0.269669, 'Recall': 1.0, 'Learning time': 1.399, 'AUC ROC': 0.941224}


Starting fold 3

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.017094135284423828
   Generating paths time   = 2.524557113647461
   Generating mappings time   = 0.018550872802734375
   Possible mappings   = 145
   Finding best mapping   = 0.020999670028686523
   Total time   = 2.581207752227783


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(C, A).;true;true
0;true,false;workedunder(E, A).;false;false
0;false;workedunder(F, A).;true;true
0;true;workedunder(D, A).;false;true
0;false,true,true;movie(H, G).;false;false
0;false,false;workedunder(I, A).;true;false
0;false,false,true;movie(J, I).;false;false
0;false,true;workedunder(F, G).;true;false
1;;genre(A, B) :- workedunder(C, A).;false;true
1;false;workedunder(D, A).;true;true
1;false,false;movie(G, A).;false;false
1;false,true,true;movie(E, A).;false;false
1;false,true,false;workedunder(D, F).;false;false
1;false,true;movie(E, D).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
2;true,false;movie(G, C).;false;false
2;false;movie(H, A).;false;true
2;true;workedunder(C, D).;true;true
2;true,true,false;movie(F, C).;false;false
2;false,false;workedunder(I, A).;false;false
2;true,true;movie(E, D).;true;true
2;true,true,true;movie(E, A).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true,false;workedunder(G, A).;true;false
3;true,false,true;movie(C, G).;false;false
3;true;workedunder(D, A).;true;true
3;true,true;movie(C, D).;false;false
3;false;workedunder(J, A).;false;false
4;;genre(A, B) :- movie(C, A).;false;true
4;false;workedunder(D, A).;true;true
4;false,false;workedunder(H, A).;true;false
4;false,true,true;workedunder(D, F).;false;false
4;false,true,false;workedunder(D, G).;false;false
4;false,false,true;workedunder(H, I).;false;false
4;false,true;movie(E, D).;true;true
5;;genre(A, B) :- movie(C, A).;true;true
5;false;workedunder(F, A).;true;true
5;true;workedunder(D, A).;true;false
5;false,true;movie(G, F).;false;false
5;false,false;workedunder(H, A).;true;false
5;false,false,true;workedunder(H, I).;false;false
5;true,true;movie(C, D).;true;false
5;true,true,true;workedunder(D, E).;false;false
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,false;movie(E, C).;false;false
6;false;movie(F, A).;true;true
6;true;workedunder(C, D).;false;true
6;false,false;workedunder(J, A).;false;false
6;false,true;workedunder(G, A).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true,false;workedunder(F, A).;false;false
7;false;workedunder(G, A).;false;true
7;true;workedunder(D, A).;true;true
7;false,false;workedunder(H, A).;true;false
7;false,false,true;workedunder(H, I).;false;false
7;true,true;movie(C, D).;true;false
7;true,true,true;workedunder(D, E).;false;false
8;;genre(A, B) :- movie(C, A).;true;false
8;true,false;workedunder(G, A).;true;false
8;true,false,true;movie(C, G).;false;false
8;true;workedunder(D, A).;true;true
8;true,true,false;movie(F, D).;false;false
8;true,true;movie(C, D).;true;true
8;true,true,true;workedunder(D, E).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;true,false;workedunder(G, A).;true;false
9;true,false,true;movie(C, G).;false;false
9;true;workedunder(D, A).;true;true
9;true,true;movie(C, D).;false;false
9;false;workedunder(J, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.5781489350995124;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3930787935763391;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then if ( movie(E, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.3627619371543516;  // std dev = 2,449, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.3344390223473249;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return 0.10759498272811803;  // std dev = 2,466, 45,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.28860249079358097;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10214516365998084;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.034226837155211555;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09315062231280134;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.06869504392195479;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08557445643775981;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.10144132578292787;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07911128466750127;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.13485547439345447;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0735363509559745;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973555
   AUC PR    = 0.230159
   CLL	      = -0.127278
   Precision = 0.230159 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.374194


Total learning time: 0.989 seconds
Total inference time: 0.972 seconds
AUC ROC: 0.973555


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)'}, {'true,false,false': [4.59e-08, 44, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [2.245, 7, 18], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'movie(E, A)'}, {'true': [2.613, 11, 18], 'false,false,true': [0.0, 28, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(F, A)', 'true': 'workedunder(C, D)', 'true,true': 'movie(E, D)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [2.449, 9, 18], 'false,true': [0.0, 31, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 23, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [2.245, 7, 18]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'false': [0.0, 0, 0], 'true': [2.466, 27, 18]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 29, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [1.978, 5, 18], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, A)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(F, A)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [2.683, 12, 18], 'false,true,false': [0.0, 24, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [2.535, 10, 18], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 34, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [2.353, 8, 18], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 23, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [2.121, 6, 18]}]]
[{'': [0.19281663516067998, nan], 'true,false': [nan, 4.794144879063176e-17], 'true': [0.2015999999999996, 4.794144879063176e-17]}, {'': [0.2354340071343638, -7.93016446160826e-18], 'false': [nan, -7.93016446160826e-18], 'false,false': [-7.93016446160826e-18, nan]}, {'': [0.2222222222222215, -8.953411488912552e-18], 'false': [-8.953411488912552e-18, nan], 'true': [0.2222222222222215, nan], 'true,true': [0.2222222222222215, nan], 'true,true,true': [0.2222222222222215, nan]}, {'': [0.15244918668782884, nan], 'true,false': [nan, -2.413528314402514e-18], 'true': [0.2016, -2.413528314402514e-18], 'true,true': [0.2016, nan]}, {'': [0.13510026232222938, nan]}, {'': [0.11291357559912187, nan], 'true': [0.1701323251417768, -1.914177628664063e-18], 'true,true': [0.1701323251417768, nan], 'true,true,true': [0.1701323251417768, nan]}, {'': [0.24000000000000007, -1.2721305490496585e-17], 'false': [-1.2721305490496585e-17, nan], 'true': [0.24000000000000007, nan], 'false,true': [nan, -1.2721305490496585e-17]}, {'': [0.10630323310540458, nan], 'true,false': [nan, -7.709882115452476e-18], 'true': [0.22959183673469394, -7.709882115452476e-18], 'true,true': [0.22959183673469394, nan], 'true,true,true': [0.22959183673469394, nan]}, {'': [0.10031261805885078, nan], 'true,false': [nan, -3.2653618371328133e-18], 'true': [0.21301775147928986, -3.2653618371328133e-18], 'true,true': [0.21301775147928986, nan], 'true,true,true': [0.21301775147928986, nan]}, {'': [0.10659655427143577, nan], 'true,false': [nan, -1.8101462358018856e-18], 'true': [0.18750000000000003, -1.8101462358018856e-18], 'true,true': [0.18750000000000003, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(D, A).;true;true', '5;;genre(A, B) :- workedunder(D, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(D, A).;true;true', '8;;genre(A, B) :- workedunder(D, A).;true;true', '9;;genre(A, B) :- workedunder(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.47883859027192616;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.4100645251105146;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.43322456682090377;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.39985402353892635;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0.1401843412971196;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.2044634914730063;  // std dev = 0,449, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.10040139145441411;  // std dev = 0,471, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.009258647905485124;  // std dev = 0,490, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.049879259409295176;  // std dev = 0,479, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08734924026734675;  // std dev = 0,462, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   else return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 0.973555
   AUC PR    = 0.230159
   CLL	      = -0.116586
   Precision = 0.230159 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.374194


Total learning time: 1.344 seconds
Total inference time: 0.961 seconds
AUC ROC: 0.973555


Refined model AUC ROC: 0.973555


Dataset: 6_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:13:29
{'Inference time': 0.961, 'Parameter Learning results': {'Inference time': 0.972, 'F1': 0.374194, 'Precision': [0.230159, 0.5], 'AUC PR': 0.230159, 'CLL': -0.127278, 'Recall': 1.0, 'Learning time': 0.989, 'AUC ROC': 0.973555}, 'F1': 0.374194, 'Precision': [0.230159, 0.5], 'AUC PR': 0.230159, 'Mapping results': {'Possible mappings': 145, 'Total time': 2.581207752227783, 'Finding best mapping': 0.020999670028686523, 'Generating paths time': 2.524557113647461, 'Knowledge compiling time': 0.017094135284423828, 'Generating mappings time': 0.018550872802734375}, 'CLL': -0.116586, 'Recall': 1.0, 'Learning time': 2.333, 'AUC ROC': 0.973555}


Start learning from scratch in target domain

Target train facts examples: 323
Target train pos examples: 18
Target train neg examples: 531

Target test facts examples: 708
Target test pos examples: 29
Target test neg examples: 1834

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0.4581489350995123;  // std dev = 0,490, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0.4134838387494629;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0.262198459155306;  // std dev = 0,498, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return 0.26064475194357933;  // std dev = 0,490, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0.38262283323544344;  // std dev = 0,412, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0.25572504524128914;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0.0627452024879443;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0.06949816034261379;  // std dev = 0,479, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.052590632026930366;  // std dev = 0,479, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06419184008202622;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0.01776699486494008;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */


Results
   AUC ROC   = 0.973555
   AUC PR    = 0.230159
   CLL	      = -0.114545
   Precision = 0.230159 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.374194


Total learning time: 1.556 seconds
Total inference time: 0.953 seconds
AUC ROC: 0.973555


Dataset: 6_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:13:32
{'Inference time': 0.953, 'F1': 0.374194, 'Precision': [0.230159, 0.5], 'AUC PR': 0.230159, 'CLL': -0.114545, 'Recall': 1.0, 'Learning time': 1.556, 'AUC ROC': 0.973555}


Starting fold 4

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.015330076217651367
   Generating paths time   = 2.565019130706787
   Generating mappings time   = 0.023971080780029297
   Possible mappings   = 145
   Finding best mapping   = 0.028142213821411133
   Total time   = 2.6324679851531982


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(C, A).;true;true
0;true,false;workedunder(E, A).;false;false
0;false;workedunder(F, A).;true;true
0;true;workedunder(D, A).;false;true
0;false,true,true;movie(H, G).;false;false
0;false,false;workedunder(I, A).;true;false
0;false,false,true;movie(J, I).;false;false
0;false,true;workedunder(F, G).;true;false
1;;genre(A, B) :- workedunder(C, A).;false;true
1;false;workedunder(D, A).;true;true
1;false,false;movie(G, A).;false;false
1;false,true,true;movie(E, A).;false;false
1;false,true,false;workedunder(D, F).;false;false
1;false,true;movie(E, D).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
2;true,false;movie(G, C).;false;false
2;false;movie(H, A).;false;true
2;true;workedunder(C, D).;true;true
2;true,true,false;movie(F, C).;false;false
2;false,false;workedunder(I, A).;false;false
2;true,true;movie(E, D).;true;true
2;true,true,true;movie(E, A).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true,false;workedunder(G, A).;true;false
3;true,false,true;movie(C, G).;false;false
3;true;workedunder(D, A).;true;true
3;true,true;movie(C, D).;false;false
3;false;workedunder(J, A).;false;false
4;;genre(A, B) :- movie(C, A).;false;true
4;false;workedunder(D, A).;true;true
4;false,false;workedunder(H, A).;true;false
4;false,true,true;workedunder(D, F).;false;false
4;false,true,false;workedunder(D, G).;false;false
4;false,false,true;workedunder(H, I).;false;false
4;false,true;movie(E, D).;true;true
5;;genre(A, B) :- movie(C, A).;true;true
5;false;workedunder(F, A).;true;true
5;true;workedunder(D, A).;true;false
5;false,true;movie(G, F).;false;false
5;false,false;workedunder(H, A).;true;false
5;false,false,true;workedunder(H, I).;false;false
5;true,true;movie(C, D).;true;false
5;true,true,true;workedunder(D, E).;false;false
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,false;movie(E, C).;false;false
6;false;movie(F, A).;true;true
6;true;workedunder(C, D).;false;true
6;false,false;workedunder(J, A).;false;false
6;false,true;workedunder(G, A).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true,false;workedunder(F, A).;false;false
7;false;workedunder(G, A).;false;true
7;true;workedunder(D, A).;true;true
7;false,false;workedunder(H, A).;true;false
7;false,false,true;workedunder(H, I).;false;false
7;true,true;movie(C, D).;true;false
7;true,true,true;workedunder(D, E).;false;false
8;;genre(A, B) :- movie(C, A).;true;false
8;true,false;workedunder(G, A).;true;false
8;true,false,true;movie(C, G).;false;false
8;true;workedunder(D, A).;true;true
8;true,true,false;movie(F, D).;false;false
8;true,true;movie(C, D).;true;true
8;true,true,true;workedunder(D, E).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;true,false;workedunder(G, A).;true;false
9;true,false,true;movie(C, G).;false;false
9;true;workedunder(D, A).;true;true
9;true,true;movie(C, D).;false;false
9;false;workedunder(J, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then if ( movie(E, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.6419486100244409;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.28547486813963047;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return -0.03459287415454191;  // std dev = 1,206, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.22335912122423904;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08982273295568034;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.03663375793116922;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08274484111514131;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.36146950514484966;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07667759937479311;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.08283114462298109;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07142213130762053;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return -0.06699731654399228;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06682792460418334;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.947035
   AUC PR    = 0.170635
   CLL	      = -0.195834
   Precision = 0.170635 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.291525


Total learning time: 0.912 seconds
Total inference time: 1.222 seconds
AUC ROC: 0.947035


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)'}, {'true,false,false': [0.0, 10, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.894, 1, 4], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'movie(E, A)'}, {'true': [0.894, 1, 4], 'false,false,true': [0.0, 9, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(F, A)', 'true': 'workedunder(C, D)', 'true,true': 'movie(E, D)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 4], 'false,true': [0.0, 6, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 5, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [0.894, 1, 4]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'false': [0.0, 0, 0], 'true': [1.206, 14, 4]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, A)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(F, A)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [1.155, 2, 4], 'false,true,false': [0.0, 4, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 6, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 7, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [2.63e-09, 7, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [1.155, 2, 4]}]]
[{'': [0.1955555555555554, nan], 'true,false': [nan, -1.1102230246251566e-17], 'true': [0.15999999999999986, -1.1102230246251566e-17]}, {'': [0.16, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.11745602800819037, nan], 'true,false': [nan, 0.0], 'true': [0.16, 0.0], 'true,true': [0.16, nan]}, {'': [0.08082492271204979, nan]}, {'': [0.11310688241668448, nan], 'true': [0.15999999999999998, 0.0], 'true,true': [0.15999999999999998, nan], 'true,true,true': [0.15999999999999998, nan]}, {'': [0.22222222222222224, 0.0], 'false': [0.0, nan], 'true': [0.22222222222222224, nan], 'false,true': [nan, 0.0]}, {'': [0.046073492447747236, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.07244994833150196, nan], 'true,false': [nan, -9.912705577010326e-19], 'true': [0.16, -9.912705577010326e-19], 'true,true': [0.16, nan], 'true,true,true': [0.16, nan]}, {'': [0.1025641096950637, nan], 'true,false': [nan, 9.912705577010326e-19], 'true': [0.2222222222222222, 9.912705577010326e-19], 'true,true': [0.2222222222222222, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(D, A).;true;true', '5;;genre(A, B) :- workedunder(D, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(D, A).;true;true', '8;;genre(A, B) :- workedunder(D, A).;true;true', '9;;genre(A, B) :- workedunder(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5194734122109546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.6040520610480189;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.45470590928508814;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.14606523123960385;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3137930537776089;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.25044533018578385;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.006413036991061838;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.20536451632720343;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return -0.026132475404040668;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.947035
   AUC PR    = 0.170635
   CLL	      = -0.237859
   Precision = 0.170635 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.291525


Total learning time: 0.797 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.947035


Refined model AUC ROC: 0.947035


Dataset: 6_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:13:39
{'Inference time': 0.79, 'Parameter Learning results': {'Inference time': 1.222, 'F1': 0.291525, 'Precision': [0.170635, 0.5], 'AUC PR': 0.170635, 'CLL': -0.195834, 'Recall': 1.0, 'Learning time': 0.912, 'AUC ROC': 0.947035}, 'F1': 0.291525, 'Precision': [0.170635, 0.5], 'AUC PR': 0.170635, 'Mapping results': {'Possible mappings': 145, 'Total time': 2.6324679851531982, 'Finding best mapping': 0.028142213821411133, 'Generating paths time': 2.565019130706787, 'Knowledge compiling time': 0.015330076217651367, 'Generating mappings time': 0.023971080780029297}, 'CLL': -0.237859, 'Recall': 1.0, 'Learning time': 1.709, 'AUC ROC': 0.947035}


Start learning from scratch in target domain

Target train facts examples: 147
Target train pos examples: 4
Target train neg examples: 392

Target test facts examples: 884
Target test pos examples: 43
Target test neg examples: 1973

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.6419486100244409;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.4854748681396305;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.0340191131132093;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.3594825195977843;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.08148783988640025;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.2653038537002814;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.21688962373077136;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.1823100087863515;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.947035
   AUC PR    = 0.170635
   CLL	      = -0.250341
   Precision = 0.170635 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.291525


Total learning time: 0.871 seconds
Total inference time: 0.785 seconds
AUC ROC: 0.947035


Dataset: 6_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:13:41
{'Inference time': 0.785, 'F1': 0.291525, 'Precision': [0.170635, 0.5], 'AUC PR': 0.170635, 'CLL': -0.250341, 'Recall': 1.0, 'Learning time': 0.871, 'AUC ROC': 0.947035}


Starting fold 5

Target predicate: genre 

Mapping Results
   Knowledge compiling time   = 0.015628814697265625
   Generating paths time   = 2.563687801361084
   Generating mappings time   = 0.02382373809814453
   Possible mappings   = 145
   Finding best mapping   = 0.02776360511779785
   Total time   = 2.630908966064453


Best mapping found: ['publication(A,B) -> movie(A,B)', 'advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'inphase(A,B) -> genre(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)'] 

Transferred target predicate: genre 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;genre(A, B) :- movie(C, A).;true;true
0;true,false;workedunder(E, A).;false;false
0;false;workedunder(F, A).;true;true
0;true;workedunder(D, A).;false;true
0;false,true,true;movie(H, G).;false;false
0;false,false;workedunder(I, A).;true;false
0;false,false,true;movie(J, I).;false;false
0;false,true;workedunder(F, G).;true;false
1;;genre(A, B) :- workedunder(C, A).;false;true
1;false;workedunder(D, A).;true;true
1;false,false;movie(G, A).;false;false
1;false,true,true;movie(E, A).;false;false
1;false,true,false;workedunder(D, F).;false;false
1;false,true;movie(E, D).;true;true
2;;genre(A, B) :- workedunder(C, A).;true;true
2;true,false;movie(G, C).;false;false
2;false;movie(H, A).;false;true
2;true;workedunder(C, D).;true;true
2;true,true,false;movie(F, C).;false;false
2;false,false;workedunder(I, A).;false;false
2;true,true;movie(E, D).;true;true
2;true,true,true;movie(E, A).;false;false
3;;genre(A, B) :- movie(C, A).;true;true
3;true,false;workedunder(G, A).;true;false
3;true,false,true;movie(C, G).;false;false
3;true;workedunder(D, A).;true;true
3;true,true;movie(C, D).;false;false
3;false;workedunder(J, A).;false;false
4;;genre(A, B) :- movie(C, A).;false;true
4;false;workedunder(D, A).;true;true
4;false,false;workedunder(H, A).;true;false
4;false,true,true;workedunder(D, F).;false;false
4;false,true,false;workedunder(D, G).;false;false
4;false,false,true;workedunder(H, I).;false;false
4;false,true;movie(E, D).;true;true
5;;genre(A, B) :- movie(C, A).;true;true
5;false;workedunder(F, A).;true;true
5;true;workedunder(D, A).;true;false
5;false,true;movie(G, F).;false;false
5;false,false;workedunder(H, A).;true;false
5;false,false,true;workedunder(H, I).;false;false
5;true,true;movie(C, D).;true;false
5;true,true,true;workedunder(D, E).;false;false
6;;genre(A, B) :- workedunder(C, A).;true;true
6;true,false;movie(E, C).;false;false
6;false;movie(F, A).;true;true
6;true;workedunder(C, D).;false;true
6;false,false;workedunder(J, A).;false;false
6;false,true;workedunder(G, A).;false;false
7;;genre(A, B) :- movie(C, A).;true;true
7;true,false;workedunder(F, A).;false;false
7;false;workedunder(G, A).;false;true
7;true;workedunder(D, A).;true;true
7;false,false;workedunder(H, A).;true;false
7;false,false,true;workedunder(H, I).;false;false
7;true,true;movie(C, D).;true;false
7;true,true,true;workedunder(D, E).;false;false
8;;genre(A, B) :- movie(C, A).;true;false
8;true,false;workedunder(G, A).;true;false
8;true,false,true;movie(C, G).;false;false
8;true;workedunder(D, A).;true;true
8;true,true,false;movie(F, D).;false;false
8;true,true;movie(C, D).;true;true
8;true,true,true;workedunder(D, E).;false;false
9;;genre(A, B) :- movie(C, A).;true;true
9;true,false;workedunder(G, A).;true;false
9;true,false,true;movie(C, G).;false;false
9;true;workedunder(D, A).;true;true
9;true,true;movie(C, D).;false;false
9;false;workedunder(J, A).;false;false


WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( workedunder(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then if ( movie(E, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.22203310341295115;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5000861373182933;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then return -0.010515671382261838;  // std dev = 0,830, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.38007593885655344;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09181069216110783;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then if ( workedunder(C, D) )
%   | then return 0.29539959210919975;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08443690010229822;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.2378140575019374;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07813420892715979;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then if ( workedunder(D, E) )
%   | | | then return 0.19741724217702294;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0726885315410604;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( movie(C, A) )
%   then if ( workedunder(D, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.167991014567747;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06793859499856585;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.9447
   AUC PR    = 0.172414
   CLL	      = -0.268991
   Precision = 0.172414 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.294118


Total learning time: 0.828 seconds
Total inference time: 1.313 seconds
AUC ROC: 0.9447


Structure after Parameter Learning
[['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)'}, {'true,false,false': [0.0, 7, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'workedunder(D, A)', 'false,false': 'movie(E, A)'}, {'true': [0.0, 0, 2], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(F, A)', 'true': 'workedunder(C, D)', 'true,true': 'movie(E, D)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,true': [0.816, 1, 2], 'false,true': [2.63e-09, 3, 0], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 2]}], ['genre(A, B)', {'': 'movie(C, A)'}, {'false': [0.0, 0, 0], 'true': [0.83, 3, 2]}], ['genre(A, B)', {'': 'movie(C, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'workedunder(C, A)', 'false': 'movie(E, A)', 'true': 'workedunder(C, D)', 'false,true': 'workedunder(F, A)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,true,false': [0.0, 2, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(F, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'workedunder(D, E)'}, {'true,true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 4, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['genre(A, B)', {'': 'movie(C, A)', 'true,false': 'workedunder(E, A)', 'true': 'workedunder(D, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 5, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 2]}]]
[{'': [0.17283950617283952, nan], 'true,false': [nan, -7.93016446160826e-18], 'true': [0.0, -7.93016446160826e-18]}, {'': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan]}, {'': [0.22222222222222224, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan], 'true': [0.22222222222222224, nan], 'true,true': [0.22222222222222224, nan], 'true,true,true': [0.22222222222222224, nan]}, {'': [0.08044928685820207, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.13783522001693074, nan]}, {'': [0.04948377611848853, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'true': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.024955826764887945, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.01621269533240988, nan], 'true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.011359751157165882, nan], 'true,false': [nan, -6.938893903907229e-19], 'true': [0.0, -6.938893903907229e-19], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;genre(A, B) :- workedunder(D, A).;true;true', '1;;genre(A, B) :- workedunder(C, A).;true;true', '2;;genre(A, B) :- workedunder(C, A).;true;true', '3;;genre(A, B) :- workedunder(D, A).;true;true', '5;;genre(A, B) :- workedunder(D, A).;true;true', '6;;genre(A, B) :- workedunder(C, A).;true;true', '7;;genre(A, B) :- workedunder(D, A).;true;true', '8;;genre(A, B) :- workedunder(D, A).;true;true', '9;;genre(A, B) :- workedunder(D, A).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.08418025082497664;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   return 0;  // std dev = 0,245, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3971943732859068;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return 0.3069614601072389;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return -0.08756771654022284;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return -0.07097698274768234;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   if ( workedunder(C, A) )
%   then return -0.05701142917222276;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.9447
   AUC PR    = 0.172414
   CLL	      = -0.20389
   Precision = 0.172414 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.294118


Total learning time: 0.693 seconds
Total inference time: 0.949 seconds
AUC ROC: 0.9447


Refined model AUC ROC: 0.9447


Dataset: 6_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:13:48
{'Inference time': 0.949, 'Parameter Learning results': {'Inference time': 1.313, 'F1': 0.294118, 'Precision': [0.172414, 0.5], 'AUC PR': 0.172414, 'CLL': -0.268991, 'Recall': 1.0, 'Learning time': 0.828, 'AUC ROC': 0.9447}, 'F1': 0.294118, 'Precision': [0.172414, 0.5], 'AUC PR': 0.172414, 'Mapping results': {'Possible mappings': 145, 'Total time': 2.630908966064453, 'Finding best mapping': 0.02776360511779785, 'Generating paths time': 2.563687801361084, 'Knowledge compiling time': 0.015628814697265625, 'Generating mappings time': 0.02382373809814453}, 'CLL': -0.20389, 'Recall': 1.0, 'Learning time': 1.521, 'AUC ROC': 0.9447}


Start learning from scratch in target domain

Target train facts examples: 161
Target train pos examples: 2
Target train neg examples: 412

Target test facts examples: 870
Target test pos examples: 45
Target test neg examples: 1953

WILL Produced-Tree #1
% FOR genre(A, B):
%   if ( actor(A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR genre(A, B):
%   return 0;  // std dev = 0,461, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR genre(A, B):
%   return 0;  // std dev = 0,428, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR genre(A, B):
%   return 0;  // std dev = 0,444, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR genre(A, B):
%   if ( female(A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.328092150523452;  // std dev = 0,907, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR genre(A, B):
%   return 0;  // std dev = 0,376, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR genre(A, B):
%   return 0;  // std dev = 0,393, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR genre(A, B):
%   return 0;  // std dev = 0,443, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR genre(A, B):
%   return 0;  // std dev = 0,467, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR genre(A, B):
%   return 0;  // std dev = 0,426, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.9447
   AUC PR    = 0.172414
   CLL	      = -0.201206
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.895 seconds
Total inference time: 0.877 seconds
AUC ROC: 0.9447


Dataset: 6_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:13:50
{'Inference time': 0.877, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.172414, 'CLL': -0.201206, 'Recall': 0.0, 'Learning time': 0.895, 'AUC ROC': 0.9447}


