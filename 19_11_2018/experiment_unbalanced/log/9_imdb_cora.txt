Starting experiment #1 for 9_imdb_cora

Start learning from source dataset

Source train facts examples: 696
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048918;  // std dev = 0,000, 722,000 (wgt'ed) examples reached here.  /* #neg=722 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839235;  // std dev = 0,000, 691,000 (wgt'ed) examples reached here.  /* #neg=691 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360608;  // std dev = 0,000, 637,000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783517;  // std dev = 4,41e-07, 684,000 (wgt'ed) examples reached here.  /* #neg=684 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926203;  // std dev = 0,000, 704,000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839675;  // std dev = 1,30e-07, 736,000 (wgt'ed) examples reached here.  /* #neg=736 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109164;  // std dev = 4,41e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return -0.07877675473109284;  // std dev = 0,000, 713,000 (wgt'ed) examples reached here.  /* #neg=713 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333645;  // std dev = 2,63e-07, 736,000 (wgt'ed) examples reached here.  /* #neg=736 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,97e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420258;  // std dev = 1,83e-07, 712,000 (wgt'ed) examples reached here.  /* #neg=712 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06419184008202539;  // std dev = 2,48e-07, 694,000 (wgt'ed) examples reached here.  /* #neg=694 */


Predicates from source: ['workedunder(person,person).', 'actor(person).', 'director(person).', 'movie(movie,person).']

Starting fold 1

Target predicate: sameauthor 

Mapping Results
   Knowledge compiling time   = 0.06412076950073242
   Generating paths time   = 2.480362892150879
   Generating mappings time   = 0.001245260238647461
   Possible mappings   = 6
   Finding best mapping   = 0.00047206878662109375
   Total time   = 2.5462071895599365


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7870378239883978;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.662488340457355;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5156213669758928;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3876955880049945;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2940939243456708;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.22896466584551245;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18317125213999816;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15002240685857746;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12526566858187835;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10624539867445687;  // std dev = 3,855, 225,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=209 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.724138
   AUC PR    = 0.949606
   CLL	      = -0.255665
   Precision = 0.949606 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.974152


Total learning time: 4.243 seconds
Total inference time: 1.386 seconds
AUC ROC: 0.724138


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [3.855, 16, 209]}]]
[{'': [0.06605432098765972, nan]}, {'': [0.06605432098765264, nan]}, {'': [0.06605432098765675, nan]}, {'': [0.06605432098765261, nan]}, {'': [0.06605432098765453, nan]}, {'': [0.06605432098765375, nan]}, {'': [0.06605432098765465, nan]}, {'': [0.06605432098765432, nan]}, {'': [0.066054320987654, nan]}, {'': [0.06605432098765424, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.6530207299713078;  // std dev = 0,404, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.7589587358414972;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5367365136192742;  // std dev = 3,528, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.6305994815805623;  // std dev = 0,060, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.42287450479998057;  // std dev = 3,516, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.476490965595785;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.3214044961983109;  // std dev = 3,515, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | | else return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.3837763333686148;  // std dev = 0,097, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2394155024004485;  // std dev = 3,510, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.2551722425694898;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | then if ( haswordauthor(B, F) )
%   | | | then return 0.18986895449527808;  // std dev = 3,522, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | | | else return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.2551722425694898;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #pos=107 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( author(F, B), title(F, E) )
%   | | then return 0.24814286443768965;  // std dev = 0,101, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, A), title(G, E) )
%   | | | then return 0.2829442410048567;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14315627235308123;  // std dev = 3,510, 84,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=68 */
%   | else return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.21619227413052058;  // std dev = 0,069, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10253441987706852;  // std dev = 3,508, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.18040170738334663;  // std dev = 0,020, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.17777949473970822;  // std dev = 0,031, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, A), title(F, E) )
%   | | | then return 0.1901117596932708;  // std dev = 0,074, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0798363109295579;  // std dev = 3,507, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.15524989383737062;  // std dev = 0,018, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.15326291999827388;  // std dev = 0,028, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( author(F, B), title(F, E) )
%   | | | then return 0.16621869279980583;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0630287801041704;  // std dev = 3,506, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | | else return 0.1359626947171741;  // std dev = 0,016, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.13441290902789424;  // std dev = 0,025, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.812146
   AUC PR    = 0.968828
   CLL	      = -0.284659
   Precision = 0.949606 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.974152


Total learning time: 7.305 seconds
Total inference time: 24.65 seconds
AUC ROC: 0.812146


Refined model AUC ROC: 0.812146


Dataset: 9_imdb_cora, Fold: 1, Type: transfer, Time: 01:24:03
{'Inference time': 24.65, 'Parameter Learning results': {'Inference time': 1.386, 'F1': 0.974152, 'Precision': [0.949606, 0.5], 'AUC PR': 0.949606, 'CLL': -0.255665, 'Recall': 1.0, 'Learning time': 4.243, 'AUC ROC': 0.724138}, 'F1': 0.974152, 'Precision': [0.949606, 0.5], 'AUC PR': 0.968828, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.5462071895599365, 'Finding best mapping': 0.00047206878662109375, 'Generating paths time': 2.480362892150879, 'Knowledge compiling time': 0.06412076950073242, 'Generating mappings time': 0.001245260238647461}, 'CLL': -0.284659, 'Recall': 1.0, 'Learning time': 11.548, 'AUC ROC': 0.812146}


Start learning from scratch in target domain

Target train facts examples: 7254
Target train pos examples: 209
Target train neg examples: 16

Target test facts examples: 34492
Target test pos examples: 603
Target test neg examples: 58

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, A), title(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6228548174524539;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.7194734122109544;  // std dev = 4,21e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5397140729264953;  // std dev = 0,415, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.7194734122109555;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.584589470211753;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, A), title(F, D) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41887841115201474;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, A), title(E, D) )
%   | | then return 0.41515047375001934;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.32664901725515194;  // std dev = 0,413, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.3552323366866755;  // std dev = 0,070, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, A), title(F, D) )
%   | | | then return 0.3212268823392238;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23770808622401418;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | else return 0.32071184716014955;  // std dev = 3,33e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.2788506497315078;  // std dev = 0,061, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, A), title(F, D) )
%   | | | then return 0.2555236454775579;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1791060926753191;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.2551722425694898;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then return 0.14711411855767195;  // std dev = 0,397, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | else return 0.20975771563253584;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.2018193364139331;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( author(F, A), title(F, D) )
%   | | | then return 0.18663822146417675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10274952604426646;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=52 */
%   | else return 0.17709649774527741;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.17709649774527814;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then return 0.0912576125943027;  // std dev = 0,397, 78,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=62 */
%   | else return 0.1527438580936708;  // std dev = 1,97e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.1527438580936714;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( author(E, B), title(E, D) )
%   | | then return 0.15877226393397173;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06563507953570777;  // std dev = 0,413, 72,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=56 */
%   | else return 0.13400703000801112;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return 0.13400703000801106;  // std dev = 5,58e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */


Results
   AUC ROC   = 0.360897
   AUC PR    = 0.87404
   CLL	      = -0.37065
   Precision = 0.912254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954114


Total learning time: 8.085 seconds
Total inference time: 3.559 seconds
AUC ROC: 0.360897


Dataset: 9_imdb_cora, Fold: 1, Type: scratch, Time: 01:24:15
{'Inference time': 3.559, 'F1': 0.954114, 'Precision': [0.912254, 0.5], 'AUC PR': 0.87404, 'CLL': -0.37065, 'Recall': 1.0, 'Learning time': 8.085, 'AUC ROC': 0.360897}


Starting fold 2

Target predicate: sameauthor 

Mapping Results
   Knowledge compiling time   = 0.1221761703491211
   Generating paths time   = 2.0512280464172363
   Generating mappings time   = 0.0009365081787109375
   Possible mappings   = 6
   Finding best mapping   = 0.00036406517028808594
   Total time   = 2.1747093200683594


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7966104735610489;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6701860162815748;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.521000173904994;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3916498696084713;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2975214947349439;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23226801019815924;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18647488053184677;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15334928569517428;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.12860778205329093;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1095875440488626;  // std dev = 2,740, 130,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.62963
   AUC PR    = 0.945205
   CLL	      = -0.258457
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 2.901 seconds
Total inference time: 1.268 seconds
AUC ROC: 0.62963


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [9.13e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.27e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 12, 0], 'true': [2.74, 8, 122]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [5.89e-09, 12, 0], 'true': [2.74, 8, 122]}]]
[{'': [0.05775147928994478, -1.1564823173178714e-17]}, {'': [0.05775147928993674, 2.3129646346357427e-18]}, {'': [0.057751479289940406, 6.938893903907228e-18]}, {'': [0.057751479289941336, 0.0]}, {'': [0.05775147928994032, 2.3129646346357427e-18]}, {'': [0.05775147928994095, 2.3129646346357427e-18]}, {'': [0.05775147928994094, 1.1564823173178713e-18]}, {'': [0.057751479289940774, 1.1564823173178713e-18]}, {'': [0.057751479289940844, 5.782411586589357e-19]}, {'': [0.05775147928994075, 2.8912057932946786e-18]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7405018762759833;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.7194734122109547;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6249475655895573;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5553664367462839;  // std dev = 9,42e-08, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.499220773881868;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.4208050190658723;  // std dev = 0,041, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583102;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.36619101959563904;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.32295649078154026;  // std dev = 0,037, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.27627363646021824;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.25671064343184136;  // std dev = 0,033, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21258517876828603;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.21084828774453157;  // std dev = 0,028, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.20975771563253567;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.167367880534948;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.17789878843265086;  // std dev = 0,025, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13451997766132667;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15335407213094096;  // std dev = 0,022, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.11000655346283453;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.134484523743318;  // std dev = 0,020, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.0912453807999745;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.25356
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 4.054 seconds
Total inference time: 1.648 seconds
AUC ROC: 0.569243


Refined model AUC ROC: 0.569243


Dataset: 9_imdb_cora, Fold: 2, Type: transfer, Time: 01:24:27
{'Inference time': 1.648, 'Parameter Learning results': {'Inference time': 1.268, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.945205, 'CLL': -0.258457, 'Recall': 1.0, 'Learning time': 2.901, 'AUC ROC': 0.62963}, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.934792, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.1747093200683594, 'Finding best mapping': 0.00036406517028808594, 'Generating paths time': 2.0512280464172363, 'Knowledge compiling time': 0.1221761703491211, 'Generating mappings time': 0.0009365081787109375}, 'CLL': -0.25356, 'Recall': 1.0, 'Learning time': 6.955, 'AUC ROC': 0.569243}


Start learning from scratch in target domain

Target train facts examples: 8894
Target train pos examples: 122
Target train neg examples: 20

Target test facts examples: 32852
Target test pos examples: 690
Target test neg examples: 54

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.8581489350995122;  // std dev = 1,46e-07, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.758148935099513;  // std dev = 0,300, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.7242094762470882;  // std dev = 0,060, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6215599535379817;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.5600892937443024;  // std dev = 0,074, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4859058493344546;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.42108739528248806;  // std dev = 0,074, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.36595513937430685;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.32317525765478194;  // std dev = 0,067, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.28279557054222954;  // std dev = 0,297, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2568760264477807;  // std dev = 0,058, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then return 0.26244522970254675;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21098789550797986;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.2109748439178615;  // std dev = 0,051, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.17352046091955278;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then return 0.17799776985476623;  // std dev = 0,045, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.14051650834012416;  // std dev = 0,298, 80,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.15418661058633423;  // std dev = 0,049, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.163480105621061;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.10689506964376388;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then return 0.1351387584957693;  // std dev = 0,044, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | then return 0.14233390649673208;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.08883127105443955;  // std dev = 0,322, 68,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.569243
   AUC PR    = 0.934792
   CLL	      = -0.253596
   Precision = 0.945205 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.971831


Total learning time: 5.968 seconds
Total inference time: 1.4 seconds
AUC ROC: 0.569243


Dataset: 9_imdb_cora, Fold: 2, Type: scratch, Time: 01:24:35
{'Inference time': 1.4, 'F1': 0.971831, 'Precision': [0.945205, 0.5], 'AUC PR': 0.934792, 'CLL': -0.253596, 'Recall': 1.0, 'Learning time': 5.968, 'AUC ROC': 0.569243}


Starting fold 3

Target predicate: sameauthor 

Mapping Results
   Knowledge compiling time   = 0.10837626457214355
   Generating paths time   = 2.2071783542633057
   Generating mappings time   = 0.0012047290802001953
   Possible mappings   = 6
   Finding best mapping   = 0.00047016143798828125
   Total time   = 2.3172361850738525


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8323424834866066;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.698845893395818;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5409946853316354;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.40656478352990505;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.31073437611251203;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2452079090461179;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.19955514587821926;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1666316310048982;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.14205263897659914;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1231347582007454;  // std dev = 1,974, 155,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=151 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.685714
   AUC PR    = 0.937589
   CLL	      = -0.256513
   Precision = 0.937589 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967789


Total learning time: 3.65 seconds
Total inference time: 1.378 seconds
AUC ROC: 0.685714


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 0, 0], 'true': [1.974, 4, 151]}]]
[{'': [0.02514047866805994, nan]}, {'': [0.025140478668053523, nan]}, {'': [0.02514047866805412, nan]}, {'': [0.025140478668053523, nan]}, {'': [0.025140478668054807, nan]}, {'': [0.025140478668053867, nan]}, {'': [0.025140478668053995, nan]}, {'': [0.025140478668053936, nan]}, {'': [0.025140478668054293, nan]}, {'': [0.025140478668054102, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.7781489350995119;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995117;  // std dev = 2,38e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | then if ( haswordauthor(B, F), haswordauthor(A, D) )
%   | | | then return 0.7518526675222027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4739677240518402;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.6553330076073378;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.7194734122109543;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7121103442571843;  // std dev = 0,093, 107,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=106 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.4231647827342793;  // std dev = 0,904, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4937271969665707;  // std dev = 0,899, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.5715125125210191;  // std dev = 0,044, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.5135291869333778;  // std dev = 1,361, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.5571838835508116;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.556907315558819;  // std dev = 0,006, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.48533469115876027;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3815872876378738;  // std dev = 1,354, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.35708034138725303;  // std dev = 0,225, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4136808074276556;  // std dev = 0,090, 107,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=106 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.20313852378961725;  // std dev = 0,889, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.272845528494094;  // std dev = 0,887, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.33582801602468454;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(A, J), haswordvenue(K, J) )
%   | | | then return 0.37028822233825603;  // std dev = 1,29e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29658839809540266;  // std dev = 1,354, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return 0.32447089045195054;  // std dev = 0,037, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.15718865256906633;  // std dev = 0,890, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21242227390254617;  // std dev = 0,891, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.26555860844800855;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.22275888351704531;  // std dev = 1,354, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.26159163509079064;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.25773963973486325;  // std dev = 0,033, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.1237750647616786;  // std dev = 0,892, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.16955324047992093;  // std dev = 0,896, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.21712649022813865;  // std dev = 0,038, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.17789720011471963;  // std dev = 1,354, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.21428217532785473;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2115721071354174;  // std dev = 0,029, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.2438997054816766;  // std dev = 0,066, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14332172797189335;  // std dev = 1,352, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.12064964442267676;  // std dev = 0,224, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(A, H) )
%   | | | then return 0.13828488255039353;  // std dev = 0,901, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.17165178252199997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1784276797674407;  // std dev = 0,025, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return 0.20187010717504889;  // std dev = 0,057, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11946207500404891;  // std dev = 1,352, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.09880238408389928;  // std dev = 0,226, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.11549618576151181;  // std dev = 0,897, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.15276753598223758;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15418167195776536;  // std dev = 0,038, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordauthor(B, F), haswordtitle(G, F) )
%   | | | then return 0.02669942016766778;  // std dev = 0,868, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0972479987906723;  // std dev = 0,901, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.14015952494999137;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( haswordauthor(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.1010774540563935;  // std dev = 1,353, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.14326685279601165;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.1356167832207269;  // std dev = 0,045, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.704841
   AUC PR    = 0.956982
   CLL	      = -0.26711
   Precision = 0.937589 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967789


Total learning time: 8.395 seconds
Total inference time: 4.093 seconds
AUC ROC: 0.704841


Refined model AUC ROC: 0.704841


Dataset: 9_imdb_cora, Fold: 3, Type: transfer, Time: 01:24:55
{'Inference time': 4.093, 'Parameter Learning results': {'Inference time': 1.378, 'F1': 0.967789, 'Precision': [0.937589, 0.5], 'AUC PR': 0.937589, 'CLL': -0.256513, 'Recall': 1.0, 'Learning time': 3.65, 'AUC ROC': 0.685714}, 'F1': 0.967789, 'Precision': [0.937589, 0.5], 'AUC PR': 0.956982, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.3172361850738525, 'Finding best mapping': 0.00047016143798828125, 'Generating paths time': 2.2071783542633057, 'Knowledge compiling time': 0.10837626457214355, 'Generating mappings time': 0.0012047290802001953}, 'CLL': -0.26711, 'Recall': 1.0, 'Learning time': 12.045, 'AUC ROC': 0.704841}


Start learning from scratch in target domain

Target train facts examples: 9155
Target train pos examples: 151
Target train neg examples: 4

Target test facts examples: 32591
Target test pos examples: 661
Target test neg examples: 70

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(B, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7672398441904211;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.8581489350995117;  // std dev = 2,38e-07, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | then if ( haswordauthor(B, E), haswordauthor(A, C) )
%   | | then return 0.7518526675222027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4739677240518402;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( haswordauthor(A, C) )
%   | | then if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6465415686654065;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.7194734122109543;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | then return 0.6549653625650375;  // std dev = 0,241, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.7214274608374258;  // std dev = 0,054, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then return 0.5982265566734745;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5044629797645589;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.49408688004839607;  // std dev = 0,229, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | then if ( haswordauthor(A, I) )
%   | | then return 0.489417158509881;  // std dev = 0,278, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.5548838625574901;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5573718555703983;  // std dev = 0,056, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.2817571117447784;  // std dev = 0,866, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3701938626907253;  // std dev = 0,270, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.43836923558836116;  // std dev = 0,067, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37956420580342326;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.4324875304263897;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.41904808246321784;  // std dev = 0,056, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then return 0.36812309050712033;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2871467034260754;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.2704380076731905;  // std dev = 0,226, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | then return 0.2732779411757659;  // std dev = 0,228, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.32443894144695556;  // std dev = 0,140, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.13508173742159826;  // std dev = 0,853, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.20970568944787046;  // std dev = 0,269, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.25444220163035386;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.2815399913246802;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22234379807937277;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.2739576596667828;  // std dev = 3,33e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2567490169909163;  // std dev = 0,080, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then return 0.10531677531352583;  // std dev = 0,868, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.16877771318578275;  // std dev = 0,266, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.20924197459451999;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.22822245288591814;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1765996628955613;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.22294389187570565;  // std dev = 2,36e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21088548470638063;  // std dev = 0,070, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordvenue(F, E) )
%   | | then return 0.22383566994573928;  // std dev = 0,073, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordauthor(B, G), haswordvenue(H, G) )
%   | | | then return 0.17727812273737542;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14344282165366495;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.1269895374543602;  // std dev = 0,223, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( haswordauthor(A, I), haswordtitle(J, I) )
%   | then return 0.13283573325552403;  // std dev = 0,225, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.18040758720378977;  // std dev = 0,141, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(B, C), haswordvenue(D, C) )
%   then if ( haswordauthor(A, C) )
%   | then if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then return 0.04804509094591684;  // std dev = 0,859, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.10853740115852316;  // std dev = 0,267, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.15215424386645907;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.1583663697968739;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11869034739602338;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.16818774789038932;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.15408334059998835;  // std dev = 0,078, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordvenue(D, C) )
%   then if ( haswordauthor(B, C) )
%   | then if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then return 0.03849060819522696;  // std dev = 0,869, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.09267936211407711;  // std dev = 0,265, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.133532341785188;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(A, G) )
%   | | then if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.13419906493368616;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09970391597144293;  // std dev = 1,348, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.14595150083014102;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.13519795322366523;  // std dev = 0,069, 92,000 (wgt'ed) examples reached here.  /* #pos=92 */


Results
   AUC ROC   = 0.4807
   AUC PR    = 0.925184
   CLL	      = -0.334713
   Precision = 0.904241 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.949713


Total learning time: 8.891 seconds
Total inference time: 1.988 seconds
AUC ROC: 0.4807


Dataset: 9_imdb_cora, Fold: 3, Type: scratch, Time: 01:25:06
{'Inference time': 1.988, 'F1': 0.949713, 'Precision': [0.904241, 0.5], 'AUC PR': 0.925184, 'CLL': -0.334713, 'Recall': 1.0, 'Learning time': 8.891, 'AUC ROC': 0.4807}


Starting fold 4

Target predicate: sameauthor 

Mapping Results
   Knowledge compiling time   = 0.07185888290405273
   Generating paths time   = 2.4674057960510254
   Generating mappings time   = 0.0011839866638183594
   Possible mappings   = 6
   Finding best mapping   = 0.0004799365997314453
   Total time   = 2.5409352779388428


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.8099561640151723;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6809038096058014;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5284825663747693;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.39719039176974347;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3023776209869051;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.23698715759628264;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.191220720417513;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15814910131754492;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1334484328508451;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.11444708609402138;  // std dev = 2,759, 166,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=158 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.655172
   AUC PR    = 0.942363
   CLL	      = -0.255786
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 4.672 seconds
Total inference time: 1.375 seconds
AUC ROC: 0.655172


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [3.73e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 8, 0], 'true': [2.759, 8, 158]}]]
[{'': [0.045870227899556054, -6.938893903907228e-18]}, {'': [0.045870227899547665, 0.0]}, {'': [0.04587022789954968, -1.734723475976807e-18]}, {'': [0.045870227899550815, 1.734723475976807e-18]}, {'': [0.04587022789955062, 0.0]}, {'': [0.04587022789955009, 1.734723475976807e-18]}, {'': [0.04587022789955017, 0.0]}, {'': [0.045870227899549997, 8.673617379884035e-19]}, {'': [0.04587022789954986, 0.0]}, {'': [0.04587022789954993, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(B, D) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.24943130095222288;  // std dev = 0,118, 100,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=98 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.2101813604316692;  // std dev = 0,003, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09757640477927293;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2107109164305867;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1774071977066205;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.0738270298306603;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1777953101635164;  // std dev = 1,05e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15297954012583967;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.056135893173478925;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15327377097564776;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13419101421252783;  // std dev = 0,002, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordauthor(A, D) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.04287350726734244;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13442058897419248;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.632342
   AUC PR    = 0.928822
   CLL	      = -0.262036
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 8.644 seconds
Total inference time: 3.057 seconds
AUC ROC: 0.632342


Refined model AUC ROC: 0.632342


Dataset: 9_imdb_cora, Fold: 4, Type: transfer, Time: 01:25:27
{'Inference time': 3.057, 'Parameter Learning results': {'Inference time': 1.375, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.942363, 'CLL': -0.255786, 'Recall': 1.0, 'Learning time': 4.672, 'AUC ROC': 0.655172}, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.928822, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.5409352779388428, 'Finding best mapping': 0.0004799365997314453, 'Generating paths time': 2.4674057960510254, 'Knowledge compiling time': 0.07185888290405273, 'Generating mappings time': 0.0011839866638183594}, 'CLL': -0.262036, 'Recall': 1.0, 'Learning time': 13.315999999999999, 'AUC ROC': 0.632342}


Start learning from scratch in target domain

Target train facts examples: 7971
Target train pos examples: 158
Target train neg examples: 16

Target test facts examples: 33775
Target test pos examples: 654
Target test neg examples: 58

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.7194734122109548;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.5851860008555358;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109538;  // std dev = 2,23e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.5553664367462843;  // std dev = 1,03e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.4612598391067553;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462836;  // std dev = 3,32e-07, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.4175135841583098;  // std dev = 5,16e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2807538536965854;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415831047;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.3207118471601495;  // std dev = 2,11e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.26212705508354195;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.21248070121827137;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716015005;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.15948988228171151;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2551722425694895;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.11975529938157475;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20975771563253573;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09028081829440963;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17709649774527716;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.15274385809367086;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.09745354768081692;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.15274385809367091;  // std dev = 1,83e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06840311429118533;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15274385809367055;  // std dev = 8,16e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(F, D) )
%   | | then return 0.13400703000801112;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( haswordtitle(E, C) )
%   | | | then return 0.07895233872555119;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then if ( haswordvenue(I, G) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.052078905701252655;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13400703000801092;  // std dev = 5,37e-08, 78,000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.717916
   AUC PR    = 0.957639
   CLL	      = -0.262547
   Precision = 0.942363 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.970326


Total learning time: 10.625 seconds
Total inference time: 2.969 seconds
AUC ROC: 0.717916


Dataset: 9_imdb_cora, Fold: 4, Type: scratch, Time: 01:25:41
{'Inference time': 2.969, 'F1': 0.970326, 'Precision': [0.942363, 0.5], 'AUC PR': 0.957639, 'CLL': -0.262547, 'Recall': 1.0, 'Learning time': 10.625, 'AUC ROC': 0.717916}


Starting fold 5

Target predicate: sameauthor 

Mapping Results
   Knowledge compiling time   = 0.07640957832336426
   Generating paths time   = 2.2510385513305664
   Generating mappings time   = 0.0013308525085449219
   Possible mappings   = 6
   Finding best mapping   = 0.0003681182861328125
   Total time   = 2.3291549682617188


Best mapping found: ['movie(A,B) -> haswordauthor(B,A)', 'workedunder(A,B) -> sameauthor(A,B)'] 

Transferred target predicate: sameauthor 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false
9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;false;false


WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.7929315437951615;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.6672286583325434;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.5189342160940956;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.3901282969327416;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.29619880730637854;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.2309904888781173;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.18519538758533224;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.15205934164006435;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.1273106151181766;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0.10828905626740594;  // std dev = 3,349, 184,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=172 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.678571
   AUC PR    = 0.946746
   CLL	      = -0.255769
   Precision = 0.946746 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972644


Total learning time: 3.8 seconds
Total inference time: 1.275 seconds
AUC ROC: 0.678571


Structure after Parameter Learning
[['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [2.63e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [1.86e-09, 6, 0], 'true': [3.349, 12, 172]}], ['sameauthor(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'false': [0.0, 6, 0], 'true': [3.349, 12, 172]}]]
[{'': [0.060964083175810056, -6.938893903907228e-18]}, {'': [0.06096408317580048, -2.3129646346357427e-18]}, {'': [0.06096408317580515, 0.0]}, {'': [0.06096408317580519, 0.0]}, {'': [0.06096408317580405, 1.1564823173178713e-18]}, {'': [0.0609640831758035, 1.1564823173178713e-18]}, {'': [0.06096408317580343, -1.1564823173178713e-18]}, {'': [0.060964083175803305, 0.0]}, {'': [0.06096408317580364, 5.782411586589357e-19]}, {'': [0.060964083175803416, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Candidate for revision
['0;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '1;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '2;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '3;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '4;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '5;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '6;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '7;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '8;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true', '9;;sameauthor(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(A, I), haswordvenue(J, I) )
%   | | | then return 0.7899671169176937;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.7613747415511246;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.448295606241962;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.6662342855866199;  // std dev = 1,665, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.6398382471887702;  // std dev = 1,653, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36236334632262296;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, G), haswordtitle(H, G) )
%   | | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.5186620442957852;  // std dev = 1,663, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.49917709441757435;  // std dev = 1,654, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.4382086330791386;  // std dev = 0,153, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( haswordauthor(A, F), haswordtitle(G, F) )
%   | | | then return 0.3444748207830022;  // std dev = 1,083, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.13615679959192953;  // std dev = 1,605, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3498035954218565;  // std dev = 0,838, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.19507174284002124;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, K), haswordtitle(L, K) )
%   | | | then return 0.43323329226399493;  // std dev = 0,220, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.49811747790248284;  // std dev = 0,254, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.3349229389479607;  // std dev = 0,138, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.42985865191160155;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17689827189757662;  // std dev = 1,933, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( author(I, A), venue(I, H) )
%   | | | then return 0.41968802691188056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.207860002433833;  // std dev = 1,652, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.3320137719545891;  // std dev = 0,206, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.37750480897790256;  // std dev = 0,250, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then return 0.26843120350118027;  // std dev = 0,220, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else if ( haswordvenue(F, D) )
%   | | | then return -0.16493632573466974;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09436340370735025;  // std dev = 1,054, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordauthor(B, G) )
%   | | | then return 0.27928821859071973;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.07993084040355287;  // std dev = 1,443, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, I), haswordvenue(J, I) )
%   | | | then return 0.040308853750937484;  // std dev = 1,560, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.2862392376412621;  // std dev = 0,138, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(B, D), haswordvenue(E, D) )
%   | then if ( haswordauthor(A, D) )
%   | | then return 0.21507046316921896;  // std dev = 0,097, 62,000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( author(F, B), venue(F, E) )
%   | | | then return 0.32025604441936373;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09750401971631867;  // std dev = 1,881, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( haswordauthor(A, G), haswordvenue(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.18897006989287007;  // std dev = 0,617, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.06194610345122993;  // std dev = 1,444, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, J), haswordtitle(K, J) )
%   | | | then return 0.2143484917542737;  // std dev = 0,156, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.24653183694947353;  // std dev = 0,284, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.16943708232947943;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.1987636799755774;  // std dev = 0,196, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.16827326057925487;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.026304857220593465;  // std dev = 1,019, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(A, H), haswordvenue(I, H) )
%   | | then if ( haswordauthor(B, H) )
%   | | | then return 0.19118112913858812;  // std dev = 3,65e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.04832709379008296;  // std dev = 1,445, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return -0.006016920480480553;  // std dev = 1,531, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.19181246792068574;  // std dev = 0,117, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.14690821940971774;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.16908630367298425;  // std dev = 0,173, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.14601702915310247;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02034974300838155;  // std dev = 1,020, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then return 0.054185537619059;  // std dev = 0,704, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.13429784804101555;  // std dev = 1,449, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.1130559710556907;  // std dev = 1,478, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordauthor(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(B, D) )
%   | | then if ( haswordvenue(F, D) )
%   | | | then return 0.1294345804903002;  // std dev = 3,25e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.1467044091774053;  // std dev = 0,154, 66,000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else if ( haswordvenue(G, D) )
%   | | | then return -0.12873333118293304;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.015773318716038858;  // std dev = 1,020, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | then return 0.04443214367322699;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordauthor(B, J), haswordvenue(K, J) )
%   | | | then return 0.1140976729286982;  // std dev = 1,460, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return 0.09551665701454094;  // std dev = 1,485, 31,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.509849
   AUC PR    = 0.896564
   CLL	      = -0.459249
   Precision = 0.943987 at threshold = 0.5
   Recall    = 0.895313
   F1        = 0.919006


Total learning time: 10.605 seconds
Total inference time: 3.124 seconds
AUC ROC: 0.509849


Refined model AUC ROC: 0.509849


Dataset: 9_imdb_cora, Fold: 5, Type: transfer, Time: 01:26:03
{'Inference time': 3.124, 'Parameter Learning results': {'Inference time': 1.275, 'F1': 0.972644, 'Precision': [0.946746, 0.5], 'AUC PR': 0.946746, 'CLL': -0.255769, 'Recall': 1.0, 'Learning time': 3.8, 'AUC ROC': 0.678571}, 'F1': 0.919006, 'Precision': [0.943987, 0.5], 'AUC PR': 0.896564, 'Mapping results': {'Possible mappings': 6, 'Total time': 2.3291549682617188, 'Finding best mapping': 0.0003681182861328125, 'Generating paths time': 2.2510385513305664, 'Knowledge compiling time': 0.07640957832336426, 'Generating mappings time': 0.0013308525085449219}, 'CLL': -0.459249, 'Recall': 0.895313, 'Learning time': 14.405000000000001, 'AUC ROC': 0.509849}


Start learning from scratch in target domain

Target train facts examples: 8472
Target train pos examples: 172
Target train neg examples: 18

Target test facts examples: 33274
Target test pos examples: 640
Target test neg examples: 56

WILL Produced-Tree #1
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.8581489350995115;  // std dev = 2,92e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordtitle(I, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7781489350995129;  // std dev = 2,349, 75,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.719473412210954;  // std dev = 2,06e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(A, G), haswordtitle(F, G) )
%   | | | then return -0.17190784947654805;  // std dev = 0,093, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.7353330076073376;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.5932990944527866;  // std dev = 2,409, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.5553664367462835;  // std dev = 4,04e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.24631678022197315;  // std dev = 0,137, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3920435058586973;  // std dev = 0,866, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.5711434828205633;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.4655893497300328;  // std dev = 2,398, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4175135841583099;  // std dev = 2,15e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(A, G), haswordtitle(F, G) )
%   | | | then return -0.15348919291559132;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3775177670015815;  // std dev = 0,762, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.42932015805374496;  // std dev = 5,16e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3517881777792324;  // std dev = 2,392, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3207118471601504;  // std dev = 4,21e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(B, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.2204034837940402;  // std dev = 0,206, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2581535358717198;  // std dev = 0,677, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(H, C) )
%   | | | then return 0.32872759734627105;  // std dev = 8,16e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.26515902160988153;  // std dev = 2,389, 47,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2551722425694897;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordauthor(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(G, E) )
%   | | | then return -0.25503649846833176;  // std dev = 0,219, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22999866088350793;  // std dev = 0,593, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordauthor(B, H), haswordvenue(I, H) )
%   | | | then return 0.20058079552673636;  // std dev = 1,667, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return 0.2619463459477864;  // std dev = 1,669, 35,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2097577156325357;  // std dev = 1,23e-07, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.2238700919551775;  // std dev = 2,58e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return -0.03539586245016564;  // std dev = 1,530, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.19170835637206265;  // std dev = 1,840, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1770964977452772;  // std dev = 8,16e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.18738013501273026;  // std dev = 2,98e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return -0.06388052893157961;  // std dev = 1,538, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.16538914265643972;  // std dev = 1,773, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1527438580936713;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.1605011224560912;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(A, F), haswordvenue(G, F) )
%   | | | then return -0.060104489318676554;  // std dev = 1,530, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.13720608580183016;  // std dev = 1,768, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR sameauthor(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.13400703000801115;  // std dev = 3,65e-08, 95,000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( haswordvenue(E, C) )
%   | | then return 0.14003427425938905;  // std dev = 1,49e-08, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( haswordauthor(B, F), haswordvenue(G, F) )
%   | | | then return -0.07751248033470781;  // std dev = 1,538, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.12254749257266491;  // std dev = 1,722, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.547098
   AUC PR    = 0.917606
   CLL	      = -0.413262
   Precision = 0.94306 at threshold = 0.5
   Recall    = 0.828125
   F1        = 0.881864


Total learning time: 7.731 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.547098


Dataset: 9_imdb_cora, Fold: 5, Type: scratch, Time: 01:26:13
{'Inference time': 2.258, 'F1': 0.881864, 'Precision': [0.94306, 0.5], 'AUC PR': 0.917606, 'CLL': -0.413262, 'Recall': 0.828125, 'Learning time': 7.731, 'AUC ROC': 0.547098}


