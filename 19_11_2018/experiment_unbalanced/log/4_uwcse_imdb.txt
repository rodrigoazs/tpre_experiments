Starting experiment #1 for 4_uwcse_imdb

Start learning from source dataset

Source train facts examples: 1653
Source train pos examples: 734
Source train neg examples: 8162

WILL Produced-Tree #1
% FOR publication(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( advisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(G, I, E) )
%   | | | then return 0.5700133418791705;  // std dev = 6,025, 177,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=126 */
%   | | | else return 0.324815601766179;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( advisedby(J, B) )
%   | | | then return 0.10259337954395681;  // std dev = 2,883, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.48858371770820697;  // std dev = 3,274, 46,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( advisedby(K, B), ta(L, K, M) )
%   | | then if ( ta(L, N, M), tempadvisedby(N, P) )
%   | | | then return 0.13814893509951237;  // std dev = 3,175, 50,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.32481560176617474;  // std dev = 10,405, 435,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=203 */
%   | | else if ( advisedby(Q, B) )
%   | | | then return 0.4810997547716439;  // std dev = 5,353, 122,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=76 */
%   | | | else return 0.3295775065280825;  // std dev = 4,176, 70,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   else return 0.05333165935199912;  // std dev = 0,396, 1.204,000 (wgt'ed) examples reached here.  /* #neg=969 #pos=235 */
WILL Produced-Tree #2
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then if ( advisedby(B, D), tempadvisedby(E, D) )
%   | then return 0.06309767475427099;  // std dev = 0,408, 709,000 (wgt'ed) examples reached here.  /* #neg=559 #pos=150 */
%   | else return -0.02050582526912487;  // std dev = 0,334, 422,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=54 */
%   else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | then if ( advisedby(I, B), ta(J, I, K) )
%   | | then if ( samecourse(G, J) )
%   | | | then return 0.5515940168978011;  // std dev = 3,055, 54,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | | else return 0.427533112881115;  // std dev = 5,635, 140,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=91 */
%   | | else if ( advisedby(L, B) )
%   | | | then return 0.04889942474641771;  // std dev = 2,960, 54,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.30560719750574694;  // std dev = 3,739, 56,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   | else if ( professor(B) )
%   | | then if ( advisedby(M, B), ta(N, M, P) )
%   | | | then return 0.28065035415357453;  // std dev = 10,761, 468,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=217 */
%   | | | else return 0.33708148514069625;  // std dev = 7,068, 202,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=109 */
%   | | else return 0.2205797084704373;  // std dev = 0,483, 84,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #3
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then if ( advisedby(B, D), tempadvisedby(E, D) )
%   | then if ( projectmember(F, D) )
%   | | then return -0.12047865426092537;  // std dev = 0,187, 83,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=3 */
%   | | else if ( ta(G, B, H) )
%   | | | then return 0.03171757460070881;  // std dev = 5,839, 223,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=42 */
%   | | | else return 0.09947432840143297;  // std dev = 8,838, 410,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=105 */
%   | else return -0.021756170063681586;  // std dev = 0,330, 435,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=54 */
%   else if ( professor(B) )
%   | then if ( advisedby(I, B), ta(J, I, K) )
%   | | then if ( ta(J, L, M), tempadvisedby(L, N) )
%   | | | then return 0.3159465380749741;  // std dev = 8,996, 336,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=191 */
%   | | | else return 0.2294460036128183;  // std dev = 8,888, 325,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=159 */
%   | | else if ( advisedby(P, B), tempadvisedby(Q, B) )
%   | | | then return 0.07807340220690147;  // std dev = 3,980, 84,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | | else return 0.3134426172912659;  // std dev = 7,284, 219,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=126 */
%   | else return 0.14774910294288807;  // std dev = 0,469, 95,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
WILL Produced-Tree #4
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then return 0.0268079151312603;  // std dev = 0,384, 1.116,000 (wgt'ed) examples reached here.  /* #neg=912 #pos=204 */
%   else if ( tempadvisedby(D, B), advisedby(E, B) )
%   | then if ( ta(F, E, G) )
%   | | then if ( ta(H, D, I), ta(F, J, I) )
%   | | | then return 0.3177288583971758;  // std dev = 6,178, 181,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=126 */
%   | | | else return 0.24907170370104756;  // std dev = 8,026, 261,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=138 */
%   | | else if ( ta(K, D, L) )
%   | | | then return 0.008173309019159632;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return 0.23345769673348246;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else if ( advisedby(M, B), ta(N, M, P) )
%   | | then if ( advisedby(M, Q), projectmember(R, Q) )
%   | | | then return -0.23238238091249902;  // std dev = 0,978, 23,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.17221635783730127;  // std dev = 6,741, 185,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=85 */
%   | | else if ( advisedby(S, B) )
%   | | | then return 0.3348236656305406;  // std dev = 4,570, 95,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=64 */
%   | | | else return 0.13440500150900273;  // std dev = 7,374, 230,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=93 */
WILL Produced-Tree #5
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then return 0.020840884194731596;  // std dev = 0,382, 1.135,000 (wgt'ed) examples reached here.  /* #neg=931 #pos=204 */
%   else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, G, F), advisedby(G, H) )
%   | | then if ( advisedby(I, B) )
%   | | | then return -0.1402283682695975;  // std dev = 2,373, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.16229652124304936;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( advisedby(J, B), ta(K, J, F) )
%   | | | then return 0.3238412894751012;  // std dev = 4,379, 110,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=85 */
%   | | | else return 0.15155935192986106;  // std dev = 5,579, 144,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=70 */
%   | else if ( advisedby(L, B) )
%   | | then if ( advisedby(L, M), tempadvisedby(N, M) )
%   | | | then return 0.1681084976692866;  // std dev = 11,009, 517,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=260 */
%   | | | else return 0.015971245450270788;  // std dev = 4,710, 90,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | else if ( professor(B) )
%   | | | then return 0.02760102275734633;  // std dev = 4,586, 91,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | | else return 0.10958146648758167;  // std dev = 4,546, 93,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
WILL Produced-Tree #6
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then return 0.01596695477606982;  // std dev = 0,380, 1.147,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=204 */
%   else if ( tempadvisedby(D, B), advisedby(E, B) )
%   | then if ( ta(F, E, G) )
%   | | then if ( ta(H, D, G) )
%   | | | then return 0.20392871712147373;  // std dev = 4,983, 131,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=93 */
%   | | | else return 0.15143470395926303;  // std dev = 8,735, 314,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=171 */
%   | | else if ( ta(I, D, J) )
%   | | | then return -0.024248492908642887;  // std dev = 3,018, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return 0.0674157503255166;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( advisedby(K, B), ta(L, K, M) )
%   | | then if ( advisedby(K, N), projectmember(P, N) )
%   | | | then return -0.22872506864284337;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | | else return 0.09903786558557008;  // std dev = 6,827, 189,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=85 */
%   | | else if ( advisedby(Q, B) )
%   | | | then return 0.21573935854407186;  // std dev = 4,520, 96,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=64 */
%   | | | else return 0.08743055020118273;  // std dev = 7,371, 231,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=93 */
WILL Produced-Tree #7
% FOR publication(A, B):
%   if ( ta(C, B, D) )
%   then if ( advisedby(B, E), tempadvisedby(F, E) )
%   | then return 0.0063542223882360836;  // std dev = 0,379, 247,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=43 */
%   | else return -0.07834019563486193;  // std dev = 0,260, 151,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=11 */
%   else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | then if ( advisedby(J, B), ta(K, J, L) )
%   | | then if ( ta(H, G, L) )
%   | | | then return 0.18161437886825282;  // std dev = 4,720, 126,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=93 */
%   | | | else return 0.2874914542045787;  // std dev = 2,695, 49,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=40 */
%   | | else if ( advisedby(M, B) )
%   | | | then return -0.005887968586812253;  // std dev = 2,992, 59,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.1699481164278989;  // std dev = 3,441, 49,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | else if ( tempadvisedby(B, N) )
%   | | then return -0.08964941621560574;  // std dev = 0,240, 65,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
%   | | else if ( tempadvisedby(P, B) )
%   | | | then return 0.08992831168785972;  // std dev = 8,458, 290,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=143 */
%   | | | else return 0.06535989810382126;  // std dev = 14,938, 1.125,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=360 */
WILL Produced-Tree #8
% FOR publication(A, B):
%   if ( ta(C, B, D) )
%   then if ( advisedby(B, E), tempadvisedby(F, E) )
%   | then if ( projectmember(G, E) )
%   | | then return -0.11006653039165883;  // std dev = 0,196, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else return 0.003024766653883316;  // std dev = 0,379, 242,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=42 */
%   | else return -0.065017864434258;  // std dev = 0,266, 144,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=11 */
%   else if ( tempadvisedby(H, B) )
%   | then if ( advisedby(I, B) )
%   | | then if ( ta(J, I, K) )
%   | | | then return 0.07791567808959504;  // std dev = 10,256, 455,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=264 */
%   | | | else return -0.009804396128548271;  // std dev = 4,011, 91,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | else return 0.16680909286684004;  // std dev = 0,483, 46,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( tempadvisedby(B, L) )
%   | | then return -0.07552312218615814;  // std dev = 0,246, 62,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=4 */
%   | | else if ( advisedby(B, M), tempadvisedby(N, M) )
%   | | | then return 0.07362530881083401;  // std dev = 8,871, 412,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=107 */
%   | | | else return 0.026725819675208175;  // std dev = 12,146, 756,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=253 */
WILL Produced-Tree #9
% FOR publication(A, B):
%   if ( inphase(B, C) )
%   then return 0.0024800660649092975;  // std dev = 0,375, 1.174,000 (wgt'ed) examples reached here.  /* #neg=970 #pos=204 */
%   else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(E, G, F), advisedby(G, H) )
%   | | then if ( advisedby(I, B) )
%   | | | then return -0.23126711122320112;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.1178697797049452;  // std dev = 1,936, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( advisedby(J, B), ta(K, J, L) )
%   | | | then return 0.09055687700886662;  // std dev = 5,843, 173,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=125 */
%   | | | else return -0.020315181536473513;  // std dev = 4,399, 99,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | else if ( advisedby(M, B), ta(N, M, P) )
%   | | then if ( ta(N, Q, P), tempadvisedby(Q, R) )
%   | | | then return -0.1284830623476478;  // std dev = 3,197, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.0656108724266438;  // std dev = 10,052, 420,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=203 */
%   | | else if ( advisedby(S, B) )
%   | | | then return 0.10309302207830778;  // std dev = 5,305, 126,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=76 */
%   | | | else return 0.0491248431900593;  // std dev = 6,285, 172,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=64 */
WILL Produced-Tree #10
% FOR publication(A, B):
%   if ( ta(C, B, D) )
%   then if ( advisedby(B, E) )
%   | then return -0.011604591469511899;  // std dev = 0,358, 309,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=47 */
%   | else return -0.06916807341674401;  // std dev = 0,246, 108,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=7 */
%   else if ( advisedby(B, F), tempadvisedby(G, F) )
%   | then if ( projectmember(H, F) )
%   | | then return -0.12050681191689692;  // std dev = 0,213, 42,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | | else if ( ta(I, G, J) )
%   | | | then return 0.11927479717595914;  // std dev = 6,278, 181,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   | | | else return 0.06740423679711147;  // std dev = 5,863, 175,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=47 */
%   | else if ( professor(B) )
%   | | then if ( projectmember(K, B) )
%   | | | then return -0.1098141332004739;  // std dev = 1,984, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.053998619286086756;  // std dev = 14,565, 943,000 (wgt'ed) examples reached here.  /* #neg=451 #pos=492 */
%   | | else if ( tempadvisedby(B, L) )
%   | | | then return -0.06589810039122088;  // std dev = 1,933, 61,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
%   | | | else return 0.004805382695499492;  // std dev = 7,370, 338,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=70 */


Predicates from source: ['publication(title,person).', 'advisedby(person,person).', 'ta(course,person,quarter).', 'projectmember(project,person).', 'inphase(person,prequals).', 'professor(person).', 'samecourse(course,course).', 'tempadvisedby(person,person).']

Starting fold 1

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.015434503555297852
   Generating paths time   = 2.641497850418091
   Generating mappings time   = 0.1200859546661377
   Possible mappings   = 1731
   Finding best mapping   = 0.47297120094299316
   Total time   = 3.249995708465576


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'samecourse(A,B) -> workedunder(B,A)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;false
0;true,false;workedunder(B, K).;true;true
0;true,false,true;workedunder(P, N).;false;false
0;true;workedunder(B, C).;true;true
0;true,true,false;workedunder(B, J).;false;false
0;true,false,false;workedunder(B, Q).;false;false
0;true,true;workedunder(B, F).;false;true
1;;movie(A, B) :- genre(B, C).;true;true
1;false;workedunder(B, F).;true;true
1;true;workedunder(D, B), workedunder(D, E).;false;false
1;false,false;actor(B).;true;false
1;false,true,true;workedunder(J, G).;false;false
1;false,true,false;workedunder(B, L).;false;false
1;false,false,true;workedunder(B, M).;false;false
1;false,true;workedunder(B, I).;true;true
2;;movie(A, B) :- genre(B, C).;true;true
2;false;actor(B).;true;false
2;true;workedunder(D, B), workedunder(D, E).;true;false
2;true,true;workedunder(D, F).;false;false
2;false,true,true;workedunder(N, L).;false;false
2;false,true,false;workedunder(B, P), workedunder(B, Q).;false;false
2;false,true;workedunder(B, I).;true;true
3;;movie(A, B) :- genre(B, C).;false;true
3;false,false,true;workedunder(Q, M), workedunder(Q, R).;false;false
3;false;workedunder(B, D), workedunder(B, E).;false;true
3;false,false;workedunder(B, M).;true;true
3;false,false,false;workedunder(B, S).;false;false
4;;movie(A, B) :- genre(B, C).;false;true
4;false;workedunder(B, D).;true;true
4;false,false;workedunder(B, L).;true;true
4;false,true,true;workedunder(B, I).;false;false
4;false,true,false;workedunder(B, J).;false;false
4;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
4;false,false,false;actor(B).;false;false
4;false,true;workedunder(H, G).;true;true
5;;movie(A, B) :- genre(B, C).;false;true
5;false,false,true;workedunder(N, K), workedunder(N, P).;false;false
5;false;workedunder(B, D), workedunder(B, E).;false;true
5;false,false;workedunder(B, K).;true;true
5;false,false,false;workedunder(B, Q).;false;false
6;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;false;true
6;false;workedunder(B, G).;true;true
6;false,false;workedunder(N, B).;false;true
6;false,true,false;workedunder(B, M).;false;false
6;false,false,false;workedunder(B, P).;false;false
6;false,true;workedunder(B, J).;false;true
7;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;true;true
7;false;workedunder(B, H).;true;true
7;false,false;workedunder(L, B).;false;true
7;true;workedunder(E, G).;false;false
7;false,false,false;workedunder(M, B), workedunder(M, N).;false;false
7;false,true;workedunder(B, I).;false;false
8;;movie(A, B) :- genre(B, C).;false;true
8;false;workedunder(B, D).;true;true
8;false,false;workedunder(B, M).;true;true
8;false,true,true;workedunder(B, I).;false;false
8;false,true,false;workedunder(B, J).;false;false
8;false,false,true;workedunder(R, Q).;false;false
8;false,false,false;workedunder(B, S).;false;false
8;false,true;workedunder(H, G).;true;true
9;;movie(A, B) :- workedunder(E, B).;false;true
9;false;workedunder(F, B), workedunder(F, G).;true;true
9;false,false;actor(B).;true;true
9;false,false,true;workedunder(B, K).;false;false
9;false,false,false;workedunder(L, B).;false;false
9;false,true;workedunder(F, H).;false;false


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then return 0.18964064780669596;  // std dev = 6,333, 181,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.16108476880549796;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.15954822829450055;  // std dev = 6,359, 184,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.13381810971683736;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.1327038805137553;  // std dev = 6,375, 186,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.14564517606934232;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.1278496796291392;  // std dev = 6,298, 177,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.08068617480594781;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.09465597859561338;  // std dev = 6,350, 183,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.10039683462058421;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.07910539797888655;  // std dev = 6,342, 182,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.12335974514128664;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.05174985499866941;  // std dev = 6,399, 189,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.05145289018629171;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then return 0.05740442614751855;  // std dev = 6,325, 180,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return -0.026985913352339425;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.02495592669836087;  // std dev = 6,423, 192,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.045876985067556754;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.02817202550236422;  // std dev = 6,383, 187,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.500671
   AUC PR    = 0.264098
   CLL	      = -0.582218
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.105 seconds
Total inference time: 1.397 seconds
AUC ROC: 0.500671


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'true': 'workedunder(B, C)', 'true,true': 'workedunder(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [1.309, 3, 4], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.333, 121, 60]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [6.359, 124, 60], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true': [1.595, 7, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'actor(B)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)', 'true,true': 'workedunder(D, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [6.375, 126, 60], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [1.595, 7, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)'}, {'true': [1.549, 6, 4], 'false,false': [0.0, 0, 0], 'false,true': [6.298, 117, 60]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,true': 'workedunder(E, F)', 'false,true,true': 'workedunder(B, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [1.595, 7, 4], 'false,true,true,true': [6.35, 123, 60], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)'}, {'true': [1.549, 6, 4], 'false,false': [0.0, 0, 0], 'false,true': [6.342, 122, 60]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [6.399, 129, 60], 'true': [1.491, 5, 4], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, F)', 'true': 'workedunder(C, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [6.325, 120, 60], 'false,false': [0.0, 0, 0], 'true,true': [1.549, 6, 4], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,true': 'workedunder(E, F)', 'false,true,true': 'workedunder(B, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [1.633, 8, 4], 'false,true,true,true': [6.423, 132, 60], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B)', 'false,false': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'false,false,true': 'workedunder(B, F)'}, {'false,false,true,true': [6.383, 127, 60], 'true': [1.549, 6, 4], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}]]
[{'': [0.22160495711364148, 0.24489795918367332], 'true': [0.22160495711364148, nan], 'true,true': [0.22160495711364148, nan]}, {'': [0.23140495867768607, 0.219754253308126], 'false': [0.219754253308126, nan], 'true': [0.23140495867768607, nan], 'false,true': [0.219754253308126, nan], 'false,true,true': [0.219754253308126, nan]}, {'': [0.2314049586776859, 0.2185223725286141], 'false': [0.2185223725286141, nan], 'true': [0.2314049586776859, nan], 'true,true': [0.2314049586776859, nan], 'false,true,true': [0.2185223725286141, nan], 'false,true': [0.2185223725286141, nan]}, {'': [0.24000000000000007, 0.22407354208560865], 'false': [0.22407354208560865, nan]}, {'': [0.23140495867768604, 0.22037086804622583], 'false': [0.22037086804622583, nan], 'false,true': [0.22037086804622583, nan], 'false,true,true': [0.22037086804622583, nan]}, {'': [0.24000000000000005, 0.22098780340538532], 'false': [0.22098780340538532, nan]}, {'': [0.2469135802469136, 0.21667926429831227], 'false': [0.21667926429831227, nan], 'false,true': [0.21667926429831227, nan]}, {'': [0.24000000000000005, 0.22222222222222127], 'false': [0.22222222222222127, nan], 'true': [0.24000000000000005, nan], 'false,true': [0.22222222222222127, nan]}, {'': [0.2222222222222222, 0.21484375000000067], 'false': [0.21484375000000067, nan], 'false,true': [0.21484375000000067, nan], 'false,true,true': [0.21484375000000067, nan]}, {'': [0.24, 0.21790728931339123], 'false,false,true': [0.21790728931339123, nan], 'false': [nan, 0.21790728931339123], 'false,false': [0.21790728931339123, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;true;workedunder(B, C).;true;true', '0;true,true;workedunder(B, D).;true;true', '1;;movie(A, B) :- genre(B, C).;true;true', '1;false;workedunder(B, F).;true;true', '1;true;workedunder(D, B), workedunder(D, E).;true;true', '1;false,true;workedunder(B, G).;true;true', '1;false,true,true;workedunder(H, I).;true;true', '2;;movie(A, B) :- genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;workedunder(D, B), workedunder(D, E).;true;true', '2;true,true;workedunder(D, F).;true;true', '2;false,true,true;workedunder(H, I).;true;true', '2;false,true;workedunder(B, G).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;false;workedunder(B, D), workedunder(B, E).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, D).;true;true', '4;false,true;workedunder(E, F).;true;true', '4;false,true,true;workedunder(B, G).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, D), workedunder(B, E).;true;true', '6;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '6;false;workedunder(B, E).;true;true', '6;false,true;workedunder(B, F).;true;true', '7;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '7;false;workedunder(B, F).;true;true', '7;true;workedunder(C, E).;true;true', '7;false,true;workedunder(B, G).;true;true', '8;;movie(A, B) :- genre(B, C).;true;true', '8;false;workedunder(B, D).;true;true', '8;false,true;workedunder(E, F).;true;true', '8;false,true,true;workedunder(B, G).;true;true', '9;;movie(A, B) :- workedunder(C, B).;true;true', '9;false,false,true;workedunder(B, F).;true;true', '9;false;workedunder(D, B), workedunder(D, E).;true;true', '9;false,false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then if ( female(B) )
%   | | | then return 0.21861405137858075;  // std dev = 4,453, 86,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.1571180072644595;  // std dev = 4,509, 97,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.2581489350995123;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.26817809892855027;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.16169562888255234;  // std dev = 6,348, 183,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.2258152951821709;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.14180001268935152;  // std dev = 6,329, 181,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.1039996646548914;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.16013922651097354;  // std dev = 0,485, 82,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | else return 0.09765216689565764;  // std dev = 0,461, 95,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.1198782975369844;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.08481616248923991;  // std dev = 6,381, 188,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.09508046815479484;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.10653211419071304;  // std dev = 0,483, 84,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | else return 0.0450859778615388;  // std dev = 0,451, 102,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.03820003564675505;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.06465952959798302;  // std dev = 4,495, 89,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | | else return 0.045399796197306296;  // std dev = 4,528, 99,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.02975881392258296;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( female(B) )
%   | | | then return 0.07207236462307638;  // std dev = 4,423, 84,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return 0.05242847440822105;  // std dev = 4,478, 94,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.0594716025682299;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.061524379816319;  // std dev = 6,242, 171,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.14599226990677655;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.04099801331264002;  // std dev = 6,278, 175,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.508076
   AUC PR    = 0.267525
   CLL	      = -0.584754
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.395 seconds
Total inference time: 1.265 seconds
AUC ROC: 0.508076


Refined model AUC ROC: 0.508076


Dataset: 4_uwcse_imdb, Fold: 1, Type: transfer, Time: 00:09:30
{'Inference time': 1.265, 'Parameter Learning results': {'Inference time': 1.397, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.264098, 'CLL': -0.582218, 'Recall': 0.0, 'Learning time': 2.105, 'AUC ROC': 0.500671}, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.267525, 'Mapping results': {'Possible mappings': 1731, 'Total time': 3.249995708465576, 'Finding best mapping': 0.47297120094299316, 'Generating paths time': 2.641497850418091, 'Knowledge compiling time': 0.015434503555297852, 'Generating mappings time': 0.1200859546661377}, 'CLL': -0.584754, 'Recall': 0.0, 'Learning time': 4.5, 'AUC ROC': 0.508076}


Start learning from scratch in target domain

Target train facts examples: 151
Target train pos examples: 64
Target train neg examples: 168

Target test facts examples: 641
Target test pos examples: 222
Target test neg examples: 618

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.19880827575885163;  // std dev = 0,474, 91,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | else return 0.19148226843284433;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   else return 0.4295775065280837;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.188506718216155;  // std dev = 0,479, 87,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.13528882456488245;  // std dev = 0,459, 96,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | else return 0.13078173850246763;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1732367132359109;  // std dev = 0,483, 84,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.12205830626629323;  // std dev = 0,462, 94,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | else return 0.13913783991786702;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.13593308332296444;  // std dev = 0,480, 86,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | else return 0.11654316342306736;  // std dev = 0,467, 90,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   else return 0.1947987693118163;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1113832866602354;  // std dev = 0,480, 86,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.07054582501245302;  // std dev = 0,456, 98,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | else return 0.15656473879944052;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.09855643034821651;  // std dev = 0,483, 84,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   else if ( actor(B) )
%   | then return 0.05207357379961607;  // std dev = 0,454, 100,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | else return 0.12343559579217851;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.05794208396872106;  // std dev = 0,476, 89,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | else return 0.06433123931336313;  // std dev = 0,463, 93,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   else return 0.015151040945330404;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.049817492418414426;  // std dev = 0,478, 88,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | else return 0.04241186470914441;  // std dev = 0,459, 96,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   else return 0.14806688612283825;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( actor(B) )
%   then return 0.05672471646726425;  // std dev = 0,476, 173,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=60 */
%   else return 0.013603731007489111;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.022920417659019168;  // std dev = 0,476, 89,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | else return 0.019790581499433198;  // std dev = 0,458, 97,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   else return -0.02599021338445664;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */


Results
   AUC ROC   = 0.505394
   AUC PR    = 0.26558
   CLL	      = -0.585261
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.345 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.505394


Dataset: 4_uwcse_imdb, Fold: 1, Type: scratch, Time: 00:09:34
{'Inference time': 0.775, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.26558, 'CLL': -0.585261, 'Recall': 0.0, 'Learning time': 2.345, 'AUC ROC': 0.505394}


Starting fold 2

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.016190052032470703
   Generating paths time   = 2.6365814208984375
   Generating mappings time   = 0.12166404724121094
   Possible mappings   = 1731
   Finding best mapping   = 0.48137831687927246
   Total time   = 3.255821943283081


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'samecourse(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;false
0;true,false;workedunder(B, K).;true;true
0;true,false,true;workedunder(P, N).;false;false
0;true;workedunder(B, C).;true;true
0;true,true,false;workedunder(B, J).;false;false
0;true,false,false;workedunder(B, Q).;false;false
0;true,true;workedunder(B, F).;false;true
1;;movie(A, B) :- genre(B, C).;true;true
1;false;workedunder(B, F).;true;true
1;true;workedunder(D, B), workedunder(D, E).;false;false
1;false,false;actor(B).;true;false
1;false,true,true;workedunder(G, J).;false;false
1;false,true,false;workedunder(B, L).;false;false
1;false,false,true;workedunder(B, M).;false;false
1;false,true;workedunder(B, I).;true;true
2;;movie(A, B) :- genre(B, C).;true;true
2;false;actor(B).;true;false
2;true;workedunder(D, B), workedunder(D, E).;true;false
2;true,true;workedunder(D, F).;false;false
2;false,true,true;workedunder(N, L).;false;false
2;false,true,false;workedunder(B, P), workedunder(B, Q).;false;false
2;false,true;workedunder(B, I).;true;true
3;;movie(A, B) :- genre(B, C).;false;true
3;false,false,true;workedunder(Q, M), workedunder(Q, R).;false;false
3;false;workedunder(B, D), workedunder(B, E).;false;true
3;false,false;workedunder(B, M).;true;true
3;false,false,false;workedunder(B, S).;false;false
4;;movie(A, B) :- genre(B, C).;false;true
4;false;workedunder(B, D).;true;true
4;false,false;workedunder(B, L).;true;true
4;false,true,true;workedunder(B, I).;false;false
4;false,true,false;workedunder(B, J).;false;false
4;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
4;false,false,false;actor(B).;false;false
4;false,true;workedunder(H, G).;true;true
5;;movie(A, B) :- genre(B, C).;false;true
5;false,false,true;workedunder(N, K), workedunder(N, P).;false;false
5;false;workedunder(B, D), workedunder(B, E).;false;true
5;false,false;workedunder(B, K).;true;true
5;false,false,false;workedunder(B, Q).;false;false
6;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;false;true
6;false;workedunder(B, G).;true;true
6;false,false;workedunder(N, B).;false;true
6;false,true,false;workedunder(B, M).;false;false
6;false,false,false;workedunder(B, P).;false;false
6;false,true;workedunder(B, J).;false;true
7;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;true;true
7;false;workedunder(B, H).;true;true
7;false,false;workedunder(L, B).;false;true
7;true;workedunder(E, G).;false;false
7;false,false,false;workedunder(M, B), workedunder(M, N).;false;false
7;false,true;workedunder(B, I).;false;false
8;;movie(A, B) :- genre(B, C).;false;true
8;false;workedunder(B, D).;true;true
8;false,false;workedunder(B, M).;true;true
8;false,true,true;workedunder(B, I).;false;false
8;false,true,false;workedunder(B, J).;false;false
8;false,false,true;workedunder(R, Q).;false;false
8;false,false,false;workedunder(B, S).;false;false
8;false,true;workedunder(H, G).;true;true
9;;movie(A, B) :- workedunder(E, B).;false;true
9;false;workedunder(F, B), workedunder(F, G).;true;true
9;false,false;actor(B).;true;true
9;false,false,true;workedunder(B, K).;false;false
9;false,false,false;workedunder(L, B).;false;false
9;false,true;workedunder(F, H).;false;false


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then return 0.18957750652808503;  // std dev = 6,227, 175,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.19258789115538322;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.18077542504531544;  // std dev = 6,153, 167,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.04989317044793051;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.14405562130902735;  // std dev = 6,200, 172,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.099479772203124;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.12060936348879492;  // std dev = 6,200, 172,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.10824460595033514;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.09749692203206742;  // std dev = 6,209, 173,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.06316363596456404;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.06634059121143031;  // std dev = 6,270, 180,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.10725182477658662;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.053505777525884334;  // std dev = 6,270, 180,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.05597311873162638;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then return 0.052068643790187295;  // std dev = 6,227, 175,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.04461577271656403;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.04921960345687597;  // std dev = 6,191, 171,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return -0.03129881885963033;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.04097749680223181;  // std dev = 6,182, 170,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.500263
   AUC PR    = 0.268004
   CLL	      = -0.585117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.694 seconds
Total inference time: 1.219 seconds
AUC ROC: 0.500263


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'true': 'workedunder(B, C)', 'true,true': 'workedunder(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [1.595, 7, 4], 'true,true,false': [0.0, 0, 0], 'true,true,true': [6.227, 117, 58]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [6.153, 109, 58], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true': [1.595, 7, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'actor(B)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)', 'true,true': 'workedunder(D, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [6.2, 114, 58], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [1.732, 12, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)'}, {'true': [1.664, 9, 4], 'false,false': [0.0, 0, 0], 'false,true': [6.2, 114, 58]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,true': 'workedunder(E, F)', 'false,true,true': 'workedunder(B, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [1.633, 8, 4], 'false,true,true,true': [6.209, 115, 58], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)'}, {'true': [1.664, 9, 4], 'false,false': [0.0, 0, 0], 'false,true': [6.27, 122, 58]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [6.27, 122, 58], 'true': [1.595, 7, 4], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, F)', 'true': 'workedunder(C, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [6.227, 117, 58], 'false,false': [0.0, 0, 0], 'true,true': [1.633, 8, 4], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,true': 'workedunder(E, F)', 'false,true,true': 'workedunder(B, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [1.633, 8, 4], 'false,true,true,true': [6.191, 113, 58], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B)', 'false,false': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'false,false,true': 'workedunder(B, F)'}, {'false,false,true,true': [6.182, 112, 58], 'true': [1.713, 11, 4], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}]]
[{'': [0.22158367346938804, 0.2314049586776858], 'true': [0.22158367346938804, nan], 'true,true': [0.22158367346938804, nan]}, {'': [0.23140495867768582, 0.22668435583921956], 'false': [0.22668435583921956, nan], 'true': [0.23140495867768582, nan], 'false,true': [0.22668435583921956, nan], 'false,true,true': [0.22668435583921956, nan]}, {'': [0.18750000000000014, 0.2234991887506736], 'false': [0.2234991887506736, nan], 'true': [0.18750000000000014, nan], 'true,true': [0.18750000000000014, nan], 'false,true,true': [0.2234991887506736, nan], 'false,true': [0.2234991887506736, nan]}, {'': [0.21301775147929009, 0.22349918875067526], 'false': [0.22349918875067526, nan]}, {'': [0.22222222222222232, 0.22286077049015776], 'false': [0.22286077049015776, nan], 'false,true': [0.22286077049015776, nan], 'false,true,true': [0.22286077049015776, nan]}, {'': [0.21301775147929009, 0.21839506172839382], 'false': [0.21839506172839382, nan]}, {'': [0.23140495867768587, 0.21839506172839485], 'false': [0.21839506172839485, nan], 'false,true': [0.21839506172839485, nan]}, {'': [0.22222222222222232, 0.22158367346938682], 'false': [0.22158367346938682, nan], 'true': [0.22222222222222232, nan], 'false,true': [0.22158367346938682, nan]}, {'': [0.2222222222222222, 0.22413734140419098], 'false': [0.22413734140419098, nan], 'false,true': [0.22413734140419098, nan], 'false,true,true': [0.22413734140419098, nan]}, {'': [0.19555555555555545, 0.22477508650518985], 'false,false,true': [0.22477508650518985, nan], 'false': [nan, 0.22477508650518985], 'false,false': [0.22477508650518985, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;true;workedunder(B, C).;true;true', '0;true,true;workedunder(B, D).;true;true', '1;;movie(A, B) :- genre(B, C).;true;true', '1;false;workedunder(B, F).;true;true', '1;true;workedunder(D, B), workedunder(D, E).;true;true', '1;false,true;workedunder(B, G).;true;true', '1;false,true,true;workedunder(H, I).;true;true', '2;;movie(A, B) :- genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;workedunder(D, B), workedunder(D, E).;true;true', '2;true,true;workedunder(D, F).;true;true', '2;false,true,true;workedunder(H, I).;true;true', '2;false,true;workedunder(B, G).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;false;workedunder(B, D), workedunder(B, E).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, D).;true;true', '4;false,true;workedunder(E, F).;true;true', '4;false,true,true;workedunder(B, G).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, D), workedunder(B, E).;true;true', '6;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '6;false;workedunder(B, E).;true;true', '6;false,true;workedunder(B, F).;true;true', '7;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '7;false;workedunder(B, F).;true;true', '7;true;workedunder(C, E).;true;true', '7;false,true;workedunder(B, G).;true;true', '8;;movie(A, B) :- genre(B, C).;true;true', '8;false;workedunder(B, D).;true;true', '8;false,true;workedunder(E, F).;true;true', '8;false,true,true;workedunder(B, G).;true;true', '9;;movie(A, B) :- workedunder(C, B).;true;true', '9;false,false,true;workedunder(B, F).;true;true', '9;false;workedunder(D, B), workedunder(D, E).;true;true', '9;false,false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then if ( female(B) )
%   | | | then return 0.2217852987358757;  // std dev = 3,568, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.16460054800273682;  // std dev = 5,134, 124,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19148226843284566;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.14089779892385604;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.1566106504681905;  // std dev = 6,268, 180,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.0984096436591081;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.16964394780234773;  // std dev = 6,100, 162,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.16088889754588093;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.12851617293639792;  // std dev = 0,477, 57,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.0938216366829658;  // std dev = 0,461, 124,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.1033351371828622;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.08847794640211147;  // std dev = 6,264, 180,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.058885520825308166;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.0950203791407143;  // std dev = 0,479, 56,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.05446883360562006;  // std dev = 0,458, 127,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.0733587636213865;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.11908866965081198;  // std dev = 3,464, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return 0.06983491047231118;  // std dev = 5,065, 117,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return -0.007667640291370111;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( female(B) )
%   | | | then return 0.04529540629354868;  // std dev = 3,603, 57,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.04303338937938021;  // std dev = 5,115, 122,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.03488179206942603;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.03638604725316413;  // std dev = 6,251, 178,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.08385126098106314;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.0365037536608755;  // std dev = 6,215, 174,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.512911
   AUC PR    = 0.275278
   CLL	      = -0.585147
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.493 seconds
Total inference time: 1.278 seconds
AUC ROC: 0.512911


Refined model AUC ROC: 0.512911


Dataset: 4_uwcse_imdb, Fold: 2, Type: transfer, Time: 00:09:44
{'Inference time': 1.278, 'Parameter Learning results': {'Inference time': 1.219, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.268004, 'CLL': -0.585117, 'Recall': 0.0, 'Learning time': 1.694, 'AUC ROC': 0.500263}, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.275278, 'Mapping results': {'Possible mappings': 1731, 'Total time': 3.255821943283081, 'Finding best mapping': 0.48137831687927246, 'Generating paths time': 2.6365814208984375, 'Knowledge compiling time': 0.016190052032470703, 'Generating mappings time': 0.12166404724121094}, 'CLL': -0.585147, 'Recall': 0.0, 'Learning time': 4.186999999999999, 'AUC ROC': 0.512911}


Start learning from scratch in target domain

Target train facts examples: 146
Target train pos examples: 62
Target train neg examples: 174

Target test facts examples: 646
Target test pos examples: 224
Target test neg examples: 612

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.25814893509951203;  // std dev = 0,490, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.19743464938522534;  // std dev = 0,473, 112,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | else return 0.19148226843284566;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1873700181204688;  // std dev = 0,481, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.14904328960693697;  // std dev = 0,465, 120,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | else return 0.16653882456488167;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.1794766436031556;  // std dev = 0,487, 52,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.13257378915812415;  // std dev = 0,467, 118,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else return 0.14209424281556468;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.12119125073912808;  // std dev = 0,479, 56,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | else return 0.11137332928827216;  // std dev = 0,467, 118,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   else return 0.18581557157413103;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.11187682694609778;  // std dev = 0,483, 54,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return 0.10950944567519616;  // std dev = 0,473, 112,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   else return 0.06057924524798289;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.08312698379160102;  // std dev = 0,481, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | else return 0.0696001086300845;  // std dev = 0,466, 119,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   else return 0.027158768070854787;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.06604819532753263;  // std dev = 0,481, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | else return 0.07629182539122657;  // std dev = 0,473, 112,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   else return 0.04389628870333999;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.06578238511933478;  // std dev = 0,485, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.04398763846002926;  // std dev = 0,467, 118,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else return 0.03528337247153089;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.0074752660447233304;  // std dev = 0,471, 60,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else if ( actor(B) )
%   | then return 0.03507210543463496;  // std dev = 0,467, 118,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else return 0.08417830816003152;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.04985616452521629;  // std dev = 0,485, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else return 0.048151004422025225;  // std dev = 0,474, 111,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
%   else return -0.011004266569098713;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */


Results
   AUC ROC   = 0.509002
   AUC PR    = 0.274073
   CLL	      = -0.58669
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.148 seconds
Total inference time: 0.826 seconds
AUC ROC: 0.509002


Dataset: 4_uwcse_imdb, Fold: 2, Type: scratch, Time: 00:09:47
{'Inference time': 0.826, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.274073, 'CLL': -0.58669, 'Recall': 0.0, 'Learning time': 2.148, 'AUC ROC': 0.509002}


Starting fold 3

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.01760578155517578
   Generating paths time   = 2.586080551147461
   Generating mappings time   = 0.11984610557556152
   Possible mappings   = 1731
   Finding best mapping   = 0.47509193420410156
   Total time   = 3.1986303329467773


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'samecourse(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;false
0;true,false;workedunder(B, K).;true;true
0;true,false,true;workedunder(P, N).;false;false
0;true;workedunder(B, C).;true;true
0;true,true,false;workedunder(B, J).;false;false
0;true,false,false;workedunder(B, Q).;false;false
0;true,true;workedunder(B, F).;false;true
1;;movie(A, B) :- genre(B, C).;true;true
1;false;workedunder(B, F).;true;true
1;true;workedunder(D, B), workedunder(D, E).;false;false
1;false,false;actor(B).;true;false
1;false,true,true;workedunder(G, J).;false;false
1;false,true,false;workedunder(B, L).;false;false
1;false,false,true;workedunder(B, M).;false;false
1;false,true;workedunder(B, I).;true;true
2;;movie(A, B) :- genre(B, C).;true;true
2;false;actor(B).;true;false
2;true;workedunder(D, B), workedunder(D, E).;true;false
2;true,true;workedunder(D, F).;false;false
2;false,true,true;workedunder(N, L).;false;false
2;false,true,false;workedunder(B, P), workedunder(B, Q).;false;false
2;false,true;workedunder(B, I).;true;true
3;;movie(A, B) :- genre(B, C).;false;true
3;false,false,true;workedunder(Q, M), workedunder(Q, R).;false;false
3;false;workedunder(B, D), workedunder(B, E).;false;true
3;false,false;workedunder(B, M).;true;true
3;false,false,false;workedunder(B, S).;false;false
4;;movie(A, B) :- genre(B, C).;false;true
4;false;workedunder(B, D).;true;true
4;false,false;workedunder(B, L).;true;true
4;false,true,true;workedunder(B, I).;false;false
4;false,true,false;workedunder(B, J).;false;false
4;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
4;false,false,false;actor(B).;false;false
4;false,true;workedunder(H, G).;true;true
5;;movie(A, B) :- genre(B, C).;false;true
5;false,false,true;workedunder(N, K), workedunder(N, P).;false;false
5;false;workedunder(B, D), workedunder(B, E).;false;true
5;false,false;workedunder(B, K).;true;true
5;false,false,false;workedunder(B, Q).;false;false
6;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;false;true
6;false;workedunder(B, G).;true;true
6;false,false;workedunder(N, B).;false;true
6;false,true,false;workedunder(B, M).;false;false
6;false,false,false;workedunder(B, P).;false;false
6;false,true;workedunder(B, J).;false;true
7;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;true;true
7;false;workedunder(B, H).;true;true
7;false,false;workedunder(L, B).;false;true
7;true;workedunder(E, G).;false;false
7;false,false,false;workedunder(M, B), workedunder(M, N).;false;false
7;false,true;workedunder(B, I).;false;false
8;;movie(A, B) :- genre(B, C).;false;true
8;false;workedunder(B, D).;true;true
8;false,false;workedunder(B, M).;true;true
8;false,true,true;workedunder(B, I).;false;false
8;false,true,false;workedunder(B, J).;false;false
8;false,false,true;workedunder(R, Q).;false;false
8;false,false,false;workedunder(B, S).;false;false
8;false,true;workedunder(H, G).;true;true
9;;movie(A, B) :- workedunder(E, B).;false;true
9;false;workedunder(F, B), workedunder(F, G).;true;true
9;false,false;actor(B).;true;true
9;false,false,true;workedunder(B, K).;false;false
9;false,false,false;workedunder(L, B).;false;false
9;false,true;workedunder(F, H).;false;false


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then return 0.176989514809657;  // std dev = 5,475, 138,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16849376268571928;  // std dev = 3,523, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.15990528548550142;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.17629516547378576;  // std dev = 5,384, 129,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14072369980775196;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.11059789817067316;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.167215980927429;  // std dev = 5,316, 123,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.10786236479257978;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.08539635606505731;  // std dev = 2,796, 38,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.11319160842613159;  // std dev = 5,426, 133,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10380740941443144;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.18910841863544375;  // std dev = 2,553, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.10622697232012246;  // std dev = 5,374, 128,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07396537792732022;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.04501904865590487;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.07353304563629906;  // std dev = 5,426, 133,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1027725421357631;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.0548659490465703;  // std dev = 3,519, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.0472460715786351;  // std dev = 5,475, 138,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.07959752755513728;  // std dev = 3,429, 52,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then return 0.04248798230059871;  // std dev = 5,456, 136,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.009686402990027038;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.051379539925046264;  // std dev = 5,384, 129,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.016369659837529287;  // std dev = 2,227, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.06744880973922743;  // std dev = 3,414, 51,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.04881481760208985;  // std dev = 5,351, 126,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.497428
   AUC PR    = 0.269476
   CLL	      = -0.5876
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.268 seconds
Total inference time: 1.17 seconds
AUC ROC: 0.497428


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'true': 'workedunder(B, C)', 'true,true': 'workedunder(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [3.523, 40, 18], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.475, 94, 44]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'false,false': 'actor(B)', 'false,true,true': 'workedunder(H, I)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true,true': [5.384, 85, 44], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.207, 16, 7], 'true,true': [2.728, 23, 11]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'actor(B)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)', 'true,true': 'workedunder(D, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [2.227, 17, 7], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [5.316, 79, 44], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [2.78, 26, 11]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)', 'false,false': 'workedunder(B, F)', 'false,false,false': 'workedunder(B, G)'}, {'false,false,false,false': [2.207, 16, 7], 'false,false,false,true': [0.0, 0, 0], 'true': [2.796, 27, 11], 'false,false,true': [0.0, 0, 0], 'false,true': [5.426, 89, 44]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,false': 'workedunder(B, H)', 'false,true,true': 'workedunder(B, G)', 'false,false,false': 'actor(B)', 'false,true': 'workedunder(E, F)'}, {'false,false,false,false': [2.227, 17, 7], 'true': [2.553, 16, 11], 'false,true,true,true': [5.374, 84, 44], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)', 'false,false': 'workedunder(B, F)', 'false,false,false': 'workedunder(B, G)'}, {'false,false,false,false': [2.16, 14, 7], 'false,false,false,true': [0.0, 0, 0], 'true': [2.78, 26, 11], 'false,false,true': [0.0, 0, 0], 'false,true': [5.426, 89, 44]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [5.475, 94, 44], 'true': [3.519, 40, 18], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, F)', 'true': 'workedunder(C, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [5.456, 92, 44], 'false,false': [0.0, 0, 0], 'true,true': [3.429, 34, 18], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,false': 'workedunder(B, H)', 'false,true,true': 'workedunder(B, G)', 'false,false,false': 'workedunder(B, I)', 'false,true': 'workedunder(E, F)'}, {'false,false,false,false': [2.227, 17, 7], 'true': [2.78, 26, 11], 'false,true,true,true': [5.384, 85, 44], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B)', 'false,false': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'false,false,true': 'workedunder(B, F)'}, {'false,false,true,true': [5.351, 82, 44], 'true': [3.414, 33, 18], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}]]
[{'': [0.21718126444024471, 0.2140309155766939], 'true': [0.21718126444024471, nan], 'true,true': [0.21718126444024471, nan]}, {'': [0.21885813148788918, 0.22293758007773845], 'false': [0.2247461090078713, 0.21172022684310016], 'true': [0.21885813148788918, nan], 'false,true,true': [0.2247461090078713, nan], 'false,false': [nan, 0.21172022684310016], 'false,true': [0.2247461090078713, nan]}, {'': [0.20891161431701966, 0.22645741870516653], 'false': [0.2297574195254143, 0.2065972222222224], 'true': [0.20891161431701966, nan], 'true,true': [0.20891161431701966, nan], 'false,true,true': [0.2297574195254143, nan], 'false,true': [0.2297574195254143, nan]}, {'': [0.20567867036011067, 0.2199673145436146], 'false': [0.22138051896658978, 0.21172022684310002], 'false,false': [nan, 0.21172022684310002], 'false,false,false': [nan, 0.21172022684310002]}, {'': [0.24142661179698213, 0.2227261096104143], 'false': [0.22558593750000072, 0.2065972222222222], 'false,false': [nan, 0.2065972222222222], 'false,true,true': [0.22558593750000072, nan], 'false,false,false': [nan, 0.2065972222222222], 'false,true': [0.22558593750000072, nan]}, {'': [0.20891161431701977, 0.22159598272637815], 'false': [0.22138051896658964, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}, {'': [0.21351394662244716, 0.21718126444024297], 'false': [0.21718126444024297, nan], 'false,true': [0.21718126444024297, nan]}, {'': [0.22608466552030054, 0.21885813148788924], 'false': [0.21885813148788924, nan], 'true': [0.22608466552030054, nan], 'false,true': [0.21885813148788924, nan]}, {'': [0.20891161431701935, 0.22206133089850802], 'false': [0.224746109007873, 0.2065972222222221], 'false,false': [nan, 0.2065972222222221], 'false,true,true': [0.224746109007873, nan], 'false,false,false': [nan, 0.2065972222222221], 'false,true': [0.224746109007873, nan]}, {'': [0.2285292740587092, 0.22726127488032224], 'false,false,true': [0.22726127488032224, nan], 'false': [nan, 0.22726127488032224], 'false,false': [0.22726127488032224, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;true;workedunder(B, C).;true;true', '0;true,true;workedunder(B, D).;true;true', '1;;movie(A, B) :- genre(B, C).;true;true', '1;false;workedunder(B, F).;true;true', '1;true;workedunder(D, B), workedunder(D, E).;true;true', '1;false,true,true;workedunder(H, I).;true;true', '1;false,false;actor(B).;true;true', '1;false,true;workedunder(B, G).;true;true', '2;;movie(A, B) :- genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;workedunder(D, B), workedunder(D, E).;true;true', '2;true,true;workedunder(D, F).;true;true', '2;false,true,true;workedunder(H, I).;true;true', '2;false,true;workedunder(B, G).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;false;workedunder(B, D), workedunder(B, E).;true;true', '3;false,false;workedunder(B, F).;true;true', '3;false,false,false;workedunder(B, G).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, D).;true;true', '4;false,false;workedunder(B, H).;true;true', '4;false,true,true;workedunder(B, G).;true;true', '4;false,false,false;actor(B).;true;true', '4;false,true;workedunder(E, F).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, D), workedunder(B, E).;true;true', '5;false,false;workedunder(B, F).;true;true', '5;false,false,false;workedunder(B, G).;true;true', '6;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '6;false;workedunder(B, E).;true;true', '6;false,true;workedunder(B, F).;true;true', '7;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '7;false;workedunder(B, F).;true;true', '7;true;workedunder(C, E).;true;true', '7;false,true;workedunder(B, G).;true;true', '8;;movie(A, B) :- genre(B, C).;true;true', '8;false;workedunder(B, D).;true;true', '8;false,false;workedunder(B, H).;true;true', '8;false,true,true;workedunder(B, G).;true;true', '8;false,false,false;workedunder(B, I).;true;true', '8;false,true;workedunder(E, F).;true;true', '9;;movie(A, B) :- workedunder(C, B).;true;true', '9;false,false,true;workedunder(B, F).;true;true', '9;false;workedunder(D, B), workedunder(D, E).;true;true', '9;false,false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then if ( female(B) )
%   | | | then return 0.17243464938522607;  // std dev = 3,884, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.16800809002908926;  // std dev = 3,897, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.18542166237223964;  // std dev = 0,469, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.148331772756442;  // std dev = 0,464, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.17988908548625326;  // std dev = 5,374, 128,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.20246711110230672;  // std dev = 0,482, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.13601562366787018;  // std dev = 0,468, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.15105326838900193;  // std dev = 5,385, 129,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17251977856857353;  // std dev = 0,482, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.11440824436870876;  // std dev = 0,468, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.12372762879334653;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | else return 0.13521791782926865;  // std dev = 0,477, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12549289186643978;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.13799425298353665;  // std dev = 0,482, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.11782686210440901;  // std dev = 5,328, 124,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10289241914176031;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.043380113868209204;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.08549700301727514;  // std dev = 0,475, 64,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else return 0.045947132975516905;  // std dev = 0,461, 72,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06658945916416426;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.02616819254498278;  // std dev = 0,456, 61,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.06349561943686141;  // std dev = 3,815, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.054992355207218416;  // std dev = 3,858, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.05309963654940396;  // std dev = 0,469, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( female(B) )
%   | | | then return 0.013566359428382618;  // std dev = 3,920, 73,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return 0.08118033862651071;  // std dev = 3,750, 61,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.04568523599014562;  // std dev = 0,468, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.040065205090232335;  // std dev = 5,415, 132,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.008124795468367621;  // std dev = 2,207, 23,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.030462398014455095;  // std dev = 0,467, 56,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.034002972252017274;  // std dev = 5,407, 131,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.479319
   AUC PR    = 0.260119
   CLL	      = -0.587602
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 3.036 seconds
Total inference time: 1.171 seconds
AUC ROC: 0.479319


Refined model AUC ROC: 0.479319


Dataset: 4_uwcse_imdb, Fold: 3, Type: transfer, Time: 00:09:59
{'Inference time': 1.171, 'Parameter Learning results': {'Inference time': 1.17, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.269476, 'CLL': -0.5876, 'Recall': 0.0, 'Learning time': 2.268, 'AUC ROC': 0.497428}, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.260119, 'Mapping results': {'Possible mappings': 1731, 'Total time': 3.1986303329467773, 'Finding best mapping': 0.47509193420410156, 'Generating paths time': 2.586080551147461, 'Knowledge compiling time': 0.01760578155517578, 'Generating mappings time': 0.11984610557556152}, 'CLL': -0.587602, 'Recall': 0.0, 'Learning time': 5.304, 'AUC ROC': 0.479319}


Start learning from scratch in target domain

Target train facts examples: 279
Target train pos examples: 62
Target train neg examples: 182

Target test facts examples: 513
Target test pos examples: 224
Target test neg examples: 604

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.18650714405473565;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.19661047356105021;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else return 0.1914822684328457;  // std dev = 0,471, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.17235729742161957;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else return 0.17095312367806306;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   else return 0.19320549123154904;  // std dev = 0,480, 50,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.14709197605073612;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else return 0.16211936138320773;  // std dev = 0,478, 62,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   else return 0.09968443874882901;  // std dev = 0,456, 61,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.11318903001216826;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else return 0.11413034867050836;  // std dev = 0,471, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   else return 0.10424284060425353;  // std dev = 0,465, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.11430776898693228;  // std dev = 0,477, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else return 0.1098454758893897;  // std dev = 0,477, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   else return 0.08633338387813111;  // std dev = 0,465, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.06746906679495211;  // std dev = 0,468, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.07853323214710435;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else return 0.07635310088145908;  // std dev = 0,467, 56,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.05923541704098859;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else return 0.06314390556599123;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   else return 0.10052489258249096;  // std dev = 0,480, 50,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.05240113491081088;  // std dev = 0,471, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | else return 0.06111337768954023;  // std dev = 0,477, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   else return 0.036537196329175535;  // std dev = 0,465, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.022647550961884835;  // std dev = 0,464, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   else if ( actor(B) )
%   | then return 0.0376740458268325;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else return 0.034763472891160996;  // std dev = 0,467, 56,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.03201941266999372;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else return 0.029691687742631808;  // std dev = 0,473, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   else return 0.02196326697389495;  // std dev = 0,465, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */


Results
   AUC ROC   = 0.479349
   AUC PR    = 0.260125
   CLL	      = -0.588056
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.699 seconds
Total inference time: 0.804 seconds
AUC ROC: 0.479349


Dataset: 4_uwcse_imdb, Fold: 3, Type: scratch, Time: 00:10:02
{'Inference time': 0.804, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.260125, 'CLL': -0.588056, 'Recall': 0.0, 'Learning time': 2.699, 'AUC ROC': 0.479349}


Starting fold 4

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.016501426696777344
   Generating paths time   = 2.6248393058776855
   Generating mappings time   = 0.09261703491210938
   Possible mappings   = 1731
   Finding best mapping   = 0.3688364028930664
   Total time   = 3.1027991771698


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'samecourse(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;false
0;true,false;workedunder(B, K).;true;true
0;true,false,true;workedunder(P, N).;false;false
0;true;workedunder(B, C).;true;true
0;true,true,false;workedunder(B, J).;false;false
0;true,false,false;workedunder(B, Q).;false;false
0;true,true;workedunder(B, F).;false;true
1;;movie(A, B) :- genre(B, C).;true;true
1;false;workedunder(B, F).;true;true
1;true;workedunder(D, B), workedunder(D, E).;false;false
1;false,false;actor(B).;true;false
1;false,true,true;workedunder(G, J).;false;false
1;false,true,false;workedunder(B, L).;false;false
1;false,false,true;workedunder(B, M).;false;false
1;false,true;workedunder(B, I).;true;true
2;;movie(A, B) :- genre(B, C).;true;true
2;false;actor(B).;true;false
2;true;workedunder(D, B), workedunder(D, E).;true;false
2;true,true;workedunder(D, F).;false;false
2;false,true,true;workedunder(N, L).;false;false
2;false,true,false;workedunder(B, P), workedunder(B, Q).;false;false
2;false,true;workedunder(B, I).;true;true
3;;movie(A, B) :- genre(B, C).;false;true
3;false,false,true;workedunder(Q, M), workedunder(Q, R).;false;false
3;false;workedunder(B, D), workedunder(B, E).;false;true
3;false,false;workedunder(B, M).;true;true
3;false,false,false;workedunder(B, S).;false;false
4;;movie(A, B) :- genre(B, C).;false;true
4;false;workedunder(B, D).;true;true
4;false,false;workedunder(B, L).;true;true
4;false,true,true;workedunder(B, I).;false;false
4;false,true,false;workedunder(B, J).;false;false
4;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
4;false,false,false;actor(B).;false;false
4;false,true;workedunder(H, G).;true;true
5;;movie(A, B) :- genre(B, C).;false;true
5;false,false,true;workedunder(N, K), workedunder(N, P).;false;false
5;false;workedunder(B, D), workedunder(B, E).;false;true
5;false,false;workedunder(B, K).;true;true
5;false,false,false;workedunder(B, Q).;false;false
6;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;false;true
6;false;workedunder(B, G).;true;true
6;false,false;workedunder(N, B).;false;true
6;false,true,false;workedunder(B, M).;false;false
6;false,false,false;workedunder(B, P).;false;false
6;false,true;workedunder(B, J).;false;true
7;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;true;true
7;false;workedunder(B, H).;true;true
7;false,false;workedunder(L, B).;false;true
7;true;workedunder(E, G).;false;false
7;false,false,false;workedunder(M, B), workedunder(M, N).;false;false
7;false,true;workedunder(B, I).;false;false
8;;movie(A, B) :- genre(B, C).;false;true
8;false;workedunder(B, D).;true;true
8;false,false;workedunder(B, M).;true;true
8;false,true,true;workedunder(B, I).;false;false
8;false,true,false;workedunder(B, J).;false;false
8;false,false,true;workedunder(R, Q).;false;false
8;false,false,false;workedunder(B, S).;false;false
8;false,true;workedunder(H, G).;true;true
9;;movie(A, B) :- workedunder(E, B).;false;true
9;false;workedunder(F, B), workedunder(F, G).;true;true
9;false,false;actor(B).;true;true
9;false,false,true;workedunder(B, K).;false;false
9;false,false,false;workedunder(L, B).;false;false
9;false,true;workedunder(F, H).;false;false


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then return 0.19905802600860323;  // std dev = 5,446, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.08320549123154833;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.16303235076008848;  // std dev = 5,487, 136,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.08798607007378542;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.15164218626548404;  // std dev = 5,435, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.05804025205670053;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.10494331555237753;  // std dev = 5,526, 140,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.06554295776494581;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.0985191341214763;  // std dev = 5,477, 135,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.09583112225790079;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.07549158731830459;  // std dev = 5,497, 137,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.07938817067288427;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.056235055442809934;  // std dev = 5,516, 139,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.06510078716827922;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then return 0.05466532343494758;  // std dev = 5,477, 135,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.03096159357567143;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.029360756135557425;  // std dev = 5,535, 141,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.10296099739942598;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.032599118971217;  // std dev = 5,497, 137,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.499129
   AUC PR    = 0.264104
   CLL	      = -0.581085
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.343 seconds
Total inference time: 1.238 seconds
AUC ROC: 0.499129


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'true': 'workedunder(B, C)', 'true,true': 'workedunder(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [1.633, 8, 4], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.446, 87, 45]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [5.487, 91, 45], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true': [1.732, 12, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'actor(B)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)', 'true,true': 'workedunder(D, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [5.435, 86, 45], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [1.713, 11, 4]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)'}, {'true': [1.732, 12, 4], 'false,false': [0.0, 0, 0], 'false,true': [5.526, 95, 45]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,true': 'workedunder(E, F)', 'false,true,true': 'workedunder(B, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [1.713, 11, 4], 'false,true,true,true': [5.477, 90, 45], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)'}, {'true': [1.664, 9, 4], 'false,false': [0.0, 0, 0], 'false,true': [5.497, 92, 45]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [5.516, 94, 45], 'true': [1.664, 9, 4], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, F)', 'true': 'workedunder(C, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [5.477, 90, 45], 'false,false': [0.0, 0, 0], 'true,true': [1.664, 9, 4], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,true': 'workedunder(E, F)', 'false,true,true': 'workedunder(B, G)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'true': [1.69, 10, 4], 'false,true,true,true': [5.535, 96, 45], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B)', 'false,false': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'false,false,true': 'workedunder(B, F)'}, {'false,false,true,true': [5.497, 92, 45], 'true': [1.595, 7, 4], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}]]
[{'': [0.22469008264462906, 0.22222222222222207], 'true': [0.22469008264462906, nan], 'true,true': [0.22469008264462906, nan]}, {'': [0.18750000000000017, 0.22139922145328758], 'false': [0.22139922145328758, nan], 'true': [0.18750000000000017, nan], 'false,true': [0.22139922145328758, nan], 'false,true,true': [0.22139922145328758, nan]}, {'': [0.1955555555555555, 0.22551133383835495], 'false': [0.22551133383835495, nan], 'true': [0.1955555555555555, nan], 'true,true': [0.1955555555555555, nan], 'false,true,true': [0.22551133383835495, nan], 'false,true': [0.22551133383835495, nan]}, {'': [0.18749999999999997, 0.21811224489795894], 'false': [0.21811224489795894, nan]}, {'': [0.19555555555555557, 0.22222222222222257], 'false': [0.22222222222222257, nan], 'false,true': [0.22222222222222257, nan], 'false,true,true': [0.22222222222222257, nan]}, {'': [0.2130177514792899, 0.22057648249773515], 'false': [0.22057648249773515, nan]}, {'': [0.21301775147928997, 0.21893276745510037], 'false': [0.21893276745510037, nan], 'false,true': [0.21893276745510037, nan]}, {'': [0.2130177514792899, 0.22222222222222213], 'false': [0.22222222222222213, nan], 'true': [0.2130177514792899, nan], 'false,true': [0.22222222222222213, nan]}, {'': [0.20408163265306137, 0.2172928927116335], 'false': [0.2172928927116335, nan], 'false,true': [0.2172928927116335, nan], 'false,true,true': [0.2172928927116335, nan]}, {'': [0.23140495867768582, 0.22057648249773654], 'false,false,true': [0.22057648249773654, nan], 'false': [nan, 0.22057648249773654], 'false,false': [0.22057648249773654, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;true;workedunder(B, C).;true;true', '0;true,true;workedunder(B, D).;true;true', '1;;movie(A, B) :- genre(B, C).;true;true', '1;false;workedunder(B, F).;true;true', '1;true;workedunder(D, B), workedunder(D, E).;true;true', '1;false,true;workedunder(B, G).;true;true', '1;false,true,true;workedunder(H, I).;true;true', '2;;movie(A, B) :- genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;workedunder(D, B), workedunder(D, E).;true;true', '2;true,true;workedunder(D, F).;true;true', '2;false,true,true;workedunder(H, I).;true;true', '2;false,true;workedunder(B, G).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;false;workedunder(B, D), workedunder(B, E).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, D).;true;true', '4;false,true;workedunder(E, F).;true;true', '4;false,true,true;workedunder(B, G).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, D), workedunder(B, E).;true;true', '6;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '6;false;workedunder(B, E).;true;true', '6;false,true;workedunder(B, F).;true;true', '7;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '7;false;workedunder(B, F).;true;true', '7;true;workedunder(C, E).;true;true', '7;false,true;workedunder(B, G).;true;true', '8;;movie(A, B) :- genre(B, C).;true;true', '8;false;workedunder(B, D).;true;true', '8;false,true;workedunder(E, F).;true;true', '8;false,true,true;workedunder(B, G).;true;true', '9;;movie(A, B) :- workedunder(C, B).;true;true', '9;false,false,true;workedunder(B, F).;true;true', '9;false;workedunder(D, B), workedunder(D, E).;true;true', '9;false,false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then if ( female(B) )
%   | | | then return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.19148226843284427;  // std dev = 4,761, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.10814893509951232;  // std dev = 0,433, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.13018172355004123;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.17340765434927896;  // std dev = 5,446, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.09325942877783694;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.14530898642473702;  // std dev = 5,456, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.14614891359339163;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.13528957242133297;  // std dev = 0,478, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0.117446853161035;  // std dev = 0,471, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.12289096521047015;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.1027938640270058;  // std dev = 5,446, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.035079363718339536;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.08070704828182237;  // std dev = 0,475, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else return 0.09502876597115538;  // std dev = 0,477, 97,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.012111477539222206;  // std dev = 0,433, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then if ( female(B) )
%   | | | then return 0.08768233150438706;  // std dev = 2,639, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.046776538243224086;  // std dev = 4,806, 106,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.09324206356391344;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( female(B) )
%   | | | then return 0.057880078949086596;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.022925922182720503;  // std dev = 4,856, 111,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return -0.007512623124310832;  // std dev = 0,433, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.04303260753878787;  // std dev = 5,464, 134,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return 0.02963545646097283;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.01986060591211525;  // std dev = 5,522, 140,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.512114
   AUC PR    = 0.272772
   CLL	      = -0.582568
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.764 seconds
Total inference time: 1.43 seconds
AUC ROC: 0.512114


Refined model AUC ROC: 0.512114


Dataset: 4_uwcse_imdb, Fold: 4, Type: transfer, Time: 00:10:12
{'Inference time': 1.43, 'Parameter Learning results': {'Inference time': 1.238, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.264104, 'CLL': -0.581085, 'Recall': 0.0, 'Learning time': 1.343, 'AUC ROC': 0.499129}, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.272772, 'Mapping results': {'Possible mappings': 1731, 'Total time': 3.1027991771698, 'Finding best mapping': 0.3688364028930664, 'Generating paths time': 2.6248393058776855, 'Knowledge compiling time': 0.016501426696777344, 'Generating mappings time': 0.09261703491210938}, 'CLL': -0.582568, 'Recall': 0.0, 'Learning time': 3.107, 'AUC ROC': 0.512114}


Start learning from scratch in target domain

Target train facts examples: 102
Target train pos examples: 49
Target train neg examples: 127

Target test facts examples: 690
Target test pos examples: 237
Target test neg examples: 659

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.224815601766179;  // std dev = 0,482, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else return 0.20866439901703673;  // std dev = 0,477, 97,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   else return 0.16584124279182003;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.19518809641219506;  // std dev = 0,482, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else return 0.17080392979812253;  // std dev = 0,474, 100,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else return 0.12245283634661483;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.13232373963849595;  // std dev = 0,471, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else return 0.14205541551243886;  // std dev = 0,473, 101,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   else return 0.1829502502711116;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.131735420213881;  // std dev = 0,478, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.1155236231329061;  // std dev = 0,471, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | else return 0.09832704131556393;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.0865676538967899;  // std dev = 0,471, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else return 0.09850247288068006;  // std dev = 0,473, 101,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   else return 0.05960787132681279;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.09163234936391297;  // std dev = 0,478, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | else return 0.08697440114427914;  // std dev = 0,475, 99,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   else return 0.049007625255330325;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.09795268827022867;  // std dev = 0,485, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.059940397956559525;  // std dev = 0,471, 102,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | else return 0.0620171867382686;  // std dev = 0,462, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.06508648349822585;  // std dev = 0,482, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else return 0.04146272930299992;  // std dev = 0,469, 104,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   else return 0.009318215045072027;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.028286281018808063;  // std dev = 0,475, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.02082252806241477;  // std dev = 0,464, 108,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else return 0.026580911791080592;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.04506298797833735;  // std dev = 0,482, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   else if ( actor(B) )
%   | then return 0.025476834240710882;  // std dev = 0,468, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | else return 0.021445242959161025;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */


Results
   AUC ROC   = 0.511909
   AUC PR    = 0.27273
   CLL	      = -0.582953
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.029 seconds
Total inference time: 0.796 seconds
AUC ROC: 0.511909


Dataset: 4_uwcse_imdb, Fold: 4, Type: scratch, Time: 00:10:15
{'Inference time': 0.796, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.27273, 'CLL': -0.582953, 'Recall': 0.0, 'Learning time': 2.029, 'AUC ROC': 0.511909}


Starting fold 5

Target predicate: movie 

Mapping Results
   Knowledge compiling time   = 0.05614280700683594
   Generating paths time   = 2.3978705406188965
   Generating mappings time   = 0.09240984916687012
   Possible mappings   = 1731
   Finding best mapping   = 0.360292911529541
   Total time   = 2.906721830368042


Best mapping found: ['advisedby(A,B) -> workedunder(B,A)', 'projectmember(A,B) -> workedunder(B,A)', 'samecourse(A,B) -> workedunder(A,B)', 'tempadvisedby(A,B) -> workedunder(B,A)', 'publication(A,B) -> movie(A,B)', 'inphase(A,B) -> genre(A,B)', 'professor(A) -> actor(A)'] 

Transferred target predicate: movie 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;movie(A, B) :- actor(B).;true;false
0;true,false;workedunder(B, K).;true;true
0;true,false,true;workedunder(P, N).;false;false
0;true;workedunder(B, C).;true;true
0;true,true,false;workedunder(B, J).;false;false
0;true,false,false;workedunder(B, Q).;false;false
0;true,true;workedunder(B, F).;false;true
1;;movie(A, B) :- genre(B, C).;true;true
1;false;workedunder(B, F).;true;true
1;true;workedunder(D, B), workedunder(D, E).;false;false
1;false,false;actor(B).;true;false
1;false,true,true;workedunder(G, J).;false;false
1;false,true,false;workedunder(B, L).;false;false
1;false,false,true;workedunder(B, M).;false;false
1;false,true;workedunder(B, I).;true;true
2;;movie(A, B) :- genre(B, C).;true;true
2;false;actor(B).;true;false
2;true;workedunder(D, B), workedunder(D, E).;true;false
2;true,true;workedunder(D, F).;false;false
2;false,true,true;workedunder(N, L).;false;false
2;false,true,false;workedunder(B, P), workedunder(B, Q).;false;false
2;false,true;workedunder(B, I).;true;true
3;;movie(A, B) :- genre(B, C).;false;true
3;false,false,true;workedunder(Q, M), workedunder(Q, R).;false;false
3;false;workedunder(B, D), workedunder(B, E).;false;true
3;false,false;workedunder(B, M).;true;true
3;false,false,false;workedunder(B, S).;false;false
4;;movie(A, B) :- genre(B, C).;false;true
4;false;workedunder(B, D).;true;true
4;false,false;workedunder(B, L).;true;true
4;false,true,true;workedunder(B, I).;false;false
4;false,true,false;workedunder(B, J).;false;false
4;false,false,true;workedunder(M, L), workedunder(M, N).;false;false
4;false,false,false;actor(B).;false;false
4;false,true;workedunder(H, G).;true;true
5;;movie(A, B) :- genre(B, C).;false;true
5;false,false,true;workedunder(N, K), workedunder(N, P).;false;false
5;false;workedunder(B, D), workedunder(B, E).;false;true
5;false,false;workedunder(B, K).;true;true
5;false,false,false;workedunder(B, Q).;false;false
6;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;false;true
6;false;workedunder(B, G).;true;true
6;false,false;workedunder(N, B).;false;true
6;false,true,false;workedunder(B, M).;false;false
6;false,false,false;workedunder(B, P).;false;false
6;false,true;workedunder(B, J).;false;true
7;;movie(A, B) :- workedunder(E, B), workedunder(E, F).;true;true
7;false;workedunder(B, H).;true;true
7;false,false;workedunder(L, B).;false;true
7;true;workedunder(E, G).;false;false
7;false,false,false;workedunder(M, B), workedunder(M, N).;false;false
7;false,true;workedunder(B, I).;false;false
8;;movie(A, B) :- genre(B, C).;false;true
8;false;workedunder(B, D).;true;true
8;false,false;workedunder(B, M).;true;true
8;false,true,true;workedunder(B, I).;false;false
8;false,true,false;workedunder(B, J).;false;false
8;false,false,true;workedunder(R, Q).;false;false
8;false,false,false;workedunder(B, S).;false;false
8;false,true;workedunder(H, G).;true;true
9;;movie(A, B) :- workedunder(E, B).;false;true
9;false;workedunder(F, B), workedunder(F, G).;true;true
9;false,false;actor(B).;true;true
9;false,false,true;workedunder(B, K).;false;false
9;false,false,false;workedunder(L, B).;false;false
9;false,true;workedunder(F, H).;false;false


WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then return 0.19649479976116643;  // std dev = 5,457, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.4332054912315484;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.1585946717535922;  // std dev = 5,507, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.26410388548978414;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.1501230142349755;  // std dev = 5,446, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.08824736587379522;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.09107887221956484;  // std dev = 5,588, 147,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.06986451414038708;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.13803633219703024;  // std dev = 5,329, 122,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2650800694506852;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.1798530308664353;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.06985999452404608;  // std dev = 5,507, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.03584390376587972;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.120358095714285;  // std dev = 1,452, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.05397544080275594;  // std dev = 5,516, 139,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.03690639419088721;  // std dev = 1,543, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then return 0.04555750465646115;  // std dev = 5,507, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.20252064963670793;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.04853017695895855;  // std dev = 5,457, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.061260034694665635;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return -0.0022704121549348977;  // std dev = 1,545, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.014780085954926437;  // std dev = 5,553, 143,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.49987
   AUC PR    = 0.265912
   CLL	      = -0.590083
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.358 seconds
Total inference time: 1.214 seconds
AUC ROC: 0.49987


Structure after Parameter Learning
[['movie(A, B)', {'': 'actor(B)', 'true': 'workedunder(B, C)', 'true,true': 'workedunder(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [1.633, 8, 4], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.457, 88, 45]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, F)', 'false,false': 'actor(B)', 'false,true,true': 'workedunder(H, I)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true,true': [5.507, 93, 45], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.816, 2, 1], 'true,true': [1.095, 2, 3]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'actor(B)', 'true': 'workedunder(D, B), workedunder(D, E)', 'false,true': 'workedunder(B, G)', 'false,true,true': 'workedunder(H, I)', 'true,true': 'workedunder(D, F)'}, {'true,false': [0.0, 0, 0], 'false,false': [0.816, 2, 1], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [5.446, 87, 45], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,true,true': [1.225, 3, 3]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)', 'false,false': 'workedunder(B, F)', 'false,false,false': 'workedunder(B, G)'}, {'false,false,false,false': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'true': [1.369, 5, 3], 'false,false,true': [0.0, 0, 0], 'false,true': [5.588, 102, 45]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,false': 'workedunder(B, H)', 'false,true,true': 'workedunder(B, G)', 'false,false,false': 'actor(B)', 'false,true': 'workedunder(E, F)'}, {'false,false,false,false': [0.707, 1, 1], 'true': [1.369, 5, 3], 'false,true,true,true': [5.329, 77, 45], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D), workedunder(B, E)', 'false,false': 'workedunder(B, F)', 'false,false,false': 'workedunder(B, G)'}, {'false,false,false,false': [0.866, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'true': [1.225, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,true': [5.507, 93, 45]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, E)', 'false,true': 'workedunder(B, F)'}, {'false,true,false': [0.0, 0, 0], 'false,true,true': [5.516, 94, 45], 'true': [1.452, 5, 4], 'false,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B), workedunder(C, D)', 'false': 'workedunder(B, F)', 'true': 'workedunder(C, E)', 'false,true': 'workedunder(B, G)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [5.507, 93, 45], 'false,false': [0.0, 0, 0], 'true,true': [1.543, 6, 4], 'false,true,false': [0.0, 0, 0]}], ['movie(A, B)', {'': 'genre(B, C)', 'false': 'workedunder(B, D)', 'false,false': 'workedunder(B, H)', 'false,true,true': 'workedunder(B, G)', 'false,false,false': 'workedunder(B, I)', 'false,true': 'workedunder(E, F)'}, {'false,false,false,false': [0.866, 3, 1], 'true': [1.095, 2, 3], 'false,true,true,true': [5.457, 88, 45], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['movie(A, B)', {'': 'workedunder(C, B)', 'false,false': 'actor(B)', 'false': 'workedunder(D, B), workedunder(D, E)', 'false,false,true': 'workedunder(B, F)'}, {'false,false,true,true': [5.553, 98, 45], 'true': [1.545, 6, 4], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}]]
[{'': [0.2238679405280127, 0.22222222222222207], 'true': [0.2238679405280127, nan], 'true,true': [0.2238679405280127, nan]}, {'': [0.24000000000000007, 0.21980807747241027], 'false': [0.21975425330812784, 0.2222222222222222], 'false,false': [nan, 0.2222222222222222], 'false,true,true': [0.21975425330812784, nan], 'true': [0.24000000000000007, nan], 'false,true': [0.21975425330812784, nan]}, {'': [0.24999999999999997, 0.224636641939686], 'false': [0.22469008264462773, 0.22222222222222218], 'true': [0.24999999999999997, nan], 'true,true': [0.24999999999999997, nan], 'false,true,true': [0.22469008264462773, nan], 'false,true': [0.22469008264462773, nan]}, {'': [0.23437499999999994, 0.21262315311457466], 'false': [0.21241149521032848, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}, {'': [0.234375, 0.23333386224085056], 'false': [0.23280032249395335, 0.25], 'false,false': [nan, 0.25], 'false,true,true': [0.23280032249395335, nan], 'false,false,false': [nan, 0.25], 'false,true': [0.23280032249395335, nan]}, {'': [0.25, 0.2191515580845483], 'false': [0.21975425330812803, 0.18749999999999997], 'false,false': [nan, 0.18749999999999997], 'false,false,false': [nan, 0.18749999999999997]}, {'': [0.2344135080693366, 0.21893276745510024], 'false': [0.21893276745510024, nan], 'false,true': [0.21893276745510024, nan]}, {'': [0.2381160992540218, 0.21975425330812876], 'false': [0.21975425330812876, nan], 'true': [0.2381160992540218, nan], 'false,true': [0.21975425330812876, nan]}, {'': [0.24, 0.22314776568526673], 'false': [0.22386794052801157, 0.18749999999999997], 'false,false': [nan, 0.18749999999999997], 'false,true,true': [0.22386794052801157, nan], 'false,false,false': [nan, 0.18749999999999997], 'false,true': [0.22386794052801157, nan]}, {'': [0.2386922199071963, 0.21565846740671984], 'false,false,true': [0.21565846740671984, nan], 'false': [nan, 0.21565846740671984], 'false,false': [0.21565846740671984, nan]}]


******************************************
Performing Theory Revision
******************************************
Pruning resulted in null theory

Candidate for revision
['0;;movie(A, B) :- actor(B).;true;true', '0;true;workedunder(B, C).;true;true', '0;true,true;workedunder(B, D).;true;true', '1;;movie(A, B) :- genre(B, C).;true;true', '1;false;workedunder(B, F).;true;true', '1;true;workedunder(D, B), workedunder(D, E).;true;true', '1;false,true,true;workedunder(H, I).;true;true', '1;false,false;actor(B).;true;true', '1;false,true;workedunder(B, G).;true;true', '2;;movie(A, B) :- genre(B, C).;true;true', '2;false;actor(B).;true;true', '2;true;workedunder(D, B), workedunder(D, E).;true;true', '2;true,true;workedunder(D, F).;true;true', '2;false,true,true;workedunder(H, I).;true;true', '2;false,true;workedunder(B, G).;true;true', '3;;movie(A, B) :- genre(B, C).;true;true', '3;false;workedunder(B, D), workedunder(B, E).;true;true', '3;false,false;workedunder(B, F).;true;true', '3;false,false,false;workedunder(B, G).;true;true', '4;;movie(A, B) :- genre(B, C).;true;true', '4;false;workedunder(B, D).;true;true', '4;false,false;workedunder(B, H).;true;true', '4;false,true,true;workedunder(B, G).;true;true', '4;false,false,false;actor(B).;true;true', '4;false,true;workedunder(E, F).;true;true', '5;;movie(A, B) :- genre(B, C).;true;true', '5;false;workedunder(B, D), workedunder(B, E).;true;true', '5;false,false;workedunder(B, F).;true;true', '5;false,false,false;workedunder(B, G).;true;true', '6;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '6;false;workedunder(B, E).;true;true', '6;false,true;workedunder(B, F).;true;true', '7;;movie(A, B) :- workedunder(C, B), workedunder(C, D).;true;true', '7;false;workedunder(B, F).;true;true', '7;true;workedunder(C, E).;true;true', '7;false,true;workedunder(B, G).;true;true', '8;;movie(A, B) :- genre(B, C).;true;true', '8;false;workedunder(B, D).;true;true', '8;false,false;workedunder(B, H).;true;true', '8;false,true,true;workedunder(B, G).;true;true', '8;false,false,false;workedunder(B, I).;true;true', '8;false,true;workedunder(E, F).;true;true', '9;;movie(A, B) :- workedunder(C, B).;true;true', '9;false,false,true;workedunder(B, F).;true;true', '9;false;workedunder(D, B), workedunder(D, E).;true;true', '9;false,false;actor(B).;true;true']


Refining candidate
***************************
WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( workedunder(B, C) )
%   | then if ( workedunder(B, D) )
%   | | then if ( female(B) )
%   | | | then return 0.19148226843284494;  // std dev = 3,916, 69,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.16370449065506737;  // std dev = 3,909, 72,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.19148226843284566;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0.33320549123154836;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.1612879668997186;  // std dev = 5,506, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then if ( workedunder(D, B), workedunder(D, E) )
%   | then if ( workedunder(D, F) )
%   | | then return 0.21022218810817891;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( workedunder(B, G) )
%   | | then if ( workedunder(H, I) )
%   | | | then return 0.15253928421745253;  // std dev = 5,446, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.3436620586810887;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then return 0.12322581728018267;  // std dev = 0,472, 134,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28581557157413096;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.047921393440790265;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.10186938664030197;  // std dev = 5,465, 134,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( actor(B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23381572177043639;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.09085932897767465;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( workedunder(B, D), workedunder(B, E) )
%   | then if ( female(B) )
%   | | then return 0.07785327432881796;  // std dev = 0,471, 69,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else return 0.12264892751097044;  // std dev = 0,484, 59,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( workedunder(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.019068051919848394;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then return 0.05365672815184499;  // std dev = 0,489, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( workedunder(B, E) )
%   | then if ( workedunder(B, F) )
%   | | then return 0.06610452912633771;  // std dev = 0,473, 133,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( workedunder(C, B), workedunder(C, D) )
%   then if ( workedunder(C, E) )
%   | then return 0.09173972917734627;  // std dev = 0,490, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( workedunder(B, F) )
%   | then if ( workedunder(B, G) )
%   | | then if ( female(B) )
%   | | | then return 0.04476081438977431;  // std dev = 3,930, 70,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.022576761634434523;  // std dev = 3,897, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( genre(B, C) )
%   then return 0.3576037600955173;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( workedunder(B, D) )
%   | then if ( workedunder(E, F) )
%   | | then if ( workedunder(B, G) )
%   | | | then return 0.05633828357696757;  // std dev = 5,413, 129,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( workedunder(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( workedunder(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10073981394644153;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( workedunder(C, B) )
%   then return -0.07502396339878596;  // std dev = 0,483, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( workedunder(D, B), workedunder(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( workedunder(B, F) )
%   | | | then return 0.01715860686100496;  // std dev = 5,526, 140,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.508918
   AUC PR    = 0.269611
   CLL	      = -0.592062
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.803 seconds
Total inference time: 1.355 seconds
AUC ROC: 0.508918


Refined model AUC ROC: 0.508918


Dataset: 4_uwcse_imdb, Fold: 5, Type: transfer, Time: 00:10:24
{'Inference time': 1.355, 'Parameter Learning results': {'Inference time': 1.214, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.265912, 'CLL': -0.590083, 'Recall': 0.0, 'Learning time': 1.358, 'AUC ROC': 0.49987}, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.269611, 'Mapping results': {'Possible mappings': 1731, 'Total time': 2.906721830368042, 'Finding best mapping': 0.360292911529541, 'Generating paths time': 2.3978705406188965, 'Knowledge compiling time': 0.05614280700683594, 'Generating mappings time': 0.09240984916687012}, 'CLL': -0.592062, 'Recall': 0.0, 'Learning time': 3.161, 'AUC ROC': 0.508918}


Start learning from scratch in target domain

Target train facts examples: 114
Target train pos examples: 49
Target train neg examples: 135

Target test facts examples: 678
Target test pos examples: 237
Target test neg examples: 651

WILL Produced-Tree #1
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.21752393509951154;  // std dev = 0,480, 64,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | else return 0.18650714405473565;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   else return 0.30259337954395676;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.16779019747560972;  // std dev = 0,473, 68,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | else return 0.15742517072478696;  // std dev = 0,468, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else return 0.21718736423076787;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR movie(A, B):
%   if ( female(B) )
%   then return 0.16387897606719323;  // std dev = 0,480, 64,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   else if ( actor(B) )
%   | then return 0.12078965550931277;  // std dev = 0,462, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | else return 0.14612346000846665;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.1156748007955584;  // std dev = 0,473, 68,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | else return 0.1152417543993025;  // std dev = 0,468, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else return 0.2565939715093517;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.08535619281410278;  // std dev = 0,470, 70,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | else return 0.06936723044215465;  // std dev = 0,457, 74,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   else return 0.10630427045121497;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #6
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.10010686307666267;  // std dev = 0,480, 64,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | else return 0.04534738522278054;  // std dev = 0,452, 77,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   else return 0.18377989181812654;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.040493057795472666;  // std dev = 0,466, 72,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | else return 0.06554161006532377;  // std dev = 0,464, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   else return -0.023894248228249593;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.032275956986501875;  // std dev = 0,466, 72,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | else return 0.04866671920270308;  // std dev = 0,462, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   else return 0.14824000852504154;  // std dev = 0,500, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.025623861880677758;  // std dev = 0,466, 72,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | else return 0.05283718161472472;  // std dev = 0,468, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else return -0.022620973130446066;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR movie(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return 0.054680931047248596;  // std dev = 0,478, 65,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | else return 0.042280727783777027;  // std dev = 0,468, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else return -0.04757540643330862;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */


Results
   AUC ROC   = 0.508828
   AUC PR    = 0.269308
   CLL	      = -0.585327
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 2.184 seconds
Total inference time: 0.816 seconds
AUC ROC: 0.508828


Dataset: 4_uwcse_imdb, Fold: 5, Type: scratch, Time: 00:10:27
{'Inference time': 0.816, 'F1': nan, 'Precision': [nan, 0.5], 'AUC PR': 0.269308, 'CLL': -0.585327, 'Recall': 0.0, 'Learning time': 2.184, 'AUC ROC': 0.508828}


