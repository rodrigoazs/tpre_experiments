Starting experiment #3 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 7,45e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.1418510649004891;  // std dev = 0,000, 709,000 (wgt'ed) examples reached here.  /* #neg=709 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839233;  // std dev = 0,000, 679,000 (wgt'ed) examples reached here.  /* #neg=679 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360654;  // std dev = 0,000, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783626;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783509;  // std dev = 4,52e-07, 704,000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926196;  // std dev = 0,000, 683,000 (wgt'ed) examples reached here.  /* #neg=683 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839675;  // std dev = 1,43e-07, 753,000 (wgt'ed) examples reached here.  /* #neg=753 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109287;  // std dev = 0,000, 721,000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333645;  // std dev = 2,60e-07, 721,000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420264;  // std dev = 1,78e-07, 748,000 (wgt'ed) examples reached here.  /* #neg=748 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202534;  // std dev = 2,49e-07, 693,000 (wgt'ed) examples reached here.  /* #neg=693 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.12825817045203977;  // std dev = 14,090, 1.007,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.1204964386927781;  // std dev = 14,007, 976,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.09520276753989493;  // std dev = 14,090, 1.007,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.07837995200472309;  // std dev = 14,116, 1.017,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0637225651493203;  // std dev = 14,138, 1.026,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04697287307394622;  // std dev = 14,199, 1.051,000 (wgt'ed) examples reached here.  /* #neg=779 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0538649973303658;  // std dev = 14,056, 994,000 (wgt'ed) examples reached here.  /* #neg=722 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04284739359264548;  // std dev = 14,072, 1.000,000 (wgt'ed) examples reached here.  /* #neg=728 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.03655791072772694;  // std dev = 14,059, 995,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.015815075493332106;  // std dev = 14,194, 1.049,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.294016
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 3.193 seconds
Total inference time: 13.984 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.291846
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 3.62 seconds
Parameter learned model CLL: -0.291846


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.09, 735, 272], 'true': [3.37e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.007, 704, 272], 'true': [1.88e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.09, 735, 272], 'true': [4.09e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.116, 745, 272], 'true': [2.23e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.138, 754, 272], 'true': [4.21e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.199, 779, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.056, 722, 272], 'true': [1.26e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.072, 728, 272], 'true': [7.6e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.059, 723, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.194, 777, 272], 'true': [3.65e-08, 0, 96]}]]
[{'': [1.1842378929335002e-15, 0.19715023632980413]}, {'': [3.7007434154171886e-16, 0.20102123085191562]}, {'': [1.7393494052460785e-15, 0.19715023632979956]}, {'': [5.181040781584064e-16, 0.19592202952945753]}, {'': [1.850371707708594e-17, 0.19482537836902672]}, {'': [-4.625929269271486e-17, 0.19182311078841466]}, {'': [1.6653345369377348e-16, 0.19876198842957976]}, {'': [6.013708050052931e-17, 0.19801599999999958]}, {'': [-6.013708050052931e-17, 0.19863740814625802]}, {'': [1.3877787807814457e-17, 0.1920608941649556]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17784202972866361;  // std dev = 0,466, 782,000 (wgt'ed) examples reached here.  /* #neg=532 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.04363677918620196;  // std dev = 3,150, 112,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01756922495458482;  // std dev = 3,041, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14488186855197674;  // std dev = 0,462, 807,000 (wgt'ed) examples reached here.  /* #neg=557 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.031859839816747844;  // std dev = 3,138, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.013139615081899399;  // std dev = 3,045, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13182280700398302;  // std dev = 0,466, 787,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.050200231117528166;  // std dev = 3,177, 133,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01613420361878953;  // std dev = 3,037, 68,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12407313409754317;  // std dev = 0,470, 756,000 (wgt'ed) examples reached here.  /* #neg=506 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.04240098952546866;  // std dev = 3,170, 133,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=11 */
%   | | | else return -0.11990440785437674;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0453330003048251;  // std dev = 2,979, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08876203705703739;  // std dev = 0,465, 790,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.03344035373923555;  // std dev = 3,162, 127,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
%   | | | else return -0.1115807808471225;  // std dev = 0,022, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0036966854170732057;  // std dev = 3,045, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08526910925301769;  // std dev = 0,470, 760,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.02630300466363094;  // std dev = 3,156, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | | else return -0.09566263800995857;  // std dev = 0,029, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.05362018158142271;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03966670993135594;  // std dev = 0,458, 835,000 (wgt'ed) examples reached here.  /* #neg=585 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.09141237288651957;  // std dev = 0,017, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.014961136429306968;  // std dev = 3,142, 110,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.05049803471707706;  // std dev = 2,945, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.12850082515727318;  // std dev = 0,286, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.04538039793326762;  // std dev = 0,464, 796,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=249 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.029371083947257307;  // std dev = 3,017, 127,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=10 */
%   | | | else return 0.0335232643632417;  // std dev = 2,959, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.02869930071931317;  // std dev = 0,460, 821,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.0773092053663813;  // std dev = 0,035, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.013390977898993557;  // std dev = 3,149, 114,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.008538842907199721;  // std dev = 3,032, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | | else return -0.075554634041697;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.022394892844595775;  // std dev = 0,460, 822,000 (wgt'ed) examples reached here.  /* #neg=572 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.07519791429524514;  // std dev = 0,023, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.01796203209567573;  // std dev = 3,160, 121,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.028895331559793114;  // std dev = 2,965, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.07044376569140441;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.609127
   AUC PR    = 0.170422
   CLL	      = -0.314176
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 23.941 seconds
Total inference time: 157.739 seconds
AUC ROC: 0.609127


Results scoring model
   AUC ROC   = 0.698615
   AUC PR    = 0.283885
   CLL	      = -0.29303
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 12.29 seconds
Refined model CLL: -0.29303


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.294016
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 43.044 seconds
Total inference time: 13.984 seconds
AUC ROC: 0.575311
Total revision time: 43.044
Best scored revision CLL: -0.291846


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:15:48
{'Inference time': 13.984, 'Precision': [1.0, 0.5], 'parameter': {'Inference time': 13.984, 'Precision': [1.0, 0.5], 'Learning time': 3.193, 'AUC ROC': 0.575311, 'CLL': -0.294016, 'F1': 0.261811, 'Recall': 0.150623, 'AUC PR': 0.168925}, 'Learning time': 43.044, 'AUC ROC': 0.575311, 'CLL': -0.294016, 'F1': 0.261811, 'Recall': 0.150623, 'AUC PR': 0.168925}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.16068516698356525;  // std dev = 21,585, 2.208,000 (wgt'ed) examples reached here.  /* #neg=1.540 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.14052698452701998;  // std dev = 21,576, 2.204,000 (wgt'ed) examples reached here.  /* #neg=1.536 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.12061649639153195;  // std dev = 21,574, 2.203,000 (wgt'ed) examples reached here.  /* #neg=1.535 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.10219556061732499;  // std dev = 21,570, 2.201,000 (wgt'ed) examples reached here.  /* #neg=1.533 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.08252940951759798;  // std dev = 21,612, 2.221,000 (wgt'ed) examples reached here.  /* #neg=1.553 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07462458946922942;  // std dev = 21,512, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.506 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06089654244178858;  // std dev = 21,514, 2.175,000 (wgt'ed) examples reached here.  /* #neg=1.507 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.059633525752067755;  // std dev = 21,355, 2.105,000 (wgt'ed) examples reached here.  /* #neg=1.437 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.035606193488458664;  // std dev = 21,548, 2.191,000 (wgt'ed) examples reached here.  /* #neg=1.523 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.03092688011286651;  // std dev = 21,512, 2.174,000 (wgt'ed) examples reached here.  /* #neg=1.506 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.340833
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 4.914 seconds
Total inference time: 12.34 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.341349
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 5.474 seconds
Parameter learned model CLL: -0.341349


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.585, 1540, 668], 'true': [4.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.576, 1536, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.574, 1535, 668], 'true': [4.3e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.57, 1533, 668], 'true': [2.6e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.612, 1553, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.512, 1506, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.514, 1507, 668], 'true': [1.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.355, 1437, 668], 'true': [5.16e-08, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.548, 1523, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.512, 1506, 668], 'true': [6.83e-08, 0, 103]}]]
[{'': [1.9315724855614373e-15, 0.21100806028145228]}, {'': [-3.4492365813597096e-16, 0.21122460070947788]}, {'': [1.793603022307049e-15, 0.21127876421561032]}, {'': [6.553549504583448e-16, 0.21138712505427446]}, {'': [-2.4144656069517967e-16, 0.21030558252332487]}, {'': [-5.1738548720395646e-17, 0.21285426411828484]}, {'': [2.0695419488158259e-16, 0.21279978861143536]}, {'': [2.5869274360197823e-17, 0.21663520291581986]}, {'': [-1.2503482607428947e-16, 0.21192959622170066]}, {'': [4.527123013034619e-17, 0.21285426411829364]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17488200282859095;  // std dev = 0,465, 2.008,000 (wgt'ed) examples reached here.  /* #neg=1.372 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.10814893509951218;  // std dev = 3,873, 80,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return -0.01940208530865097;  // std dev = 2,295, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else return -0.09185106490048765;  // std dev = 0,218, 120,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.154296747747796;  // std dev = 0,466, 1.995,000 (wgt'ed) examples reached here.  /* #neg=1.359 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09763199479778065;  // std dev = 3,865, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return -0.006172300117185708;  // std dev = 2,280, 45,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else return -0.06651742720099282;  // std dev = 0,246, 93,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12663708370034982;  // std dev = 0,464, 2.029,000 (wgt'ed) examples reached here.  /* #neg=1.393 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.097875535606538;  // std dev = 3,830, 75,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | | else return 0.027900332302795466;  // std dev = 2,236, 36,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else return -0.069589668580834;  // std dev = 0,226, 111,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5659044566219836;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.18118179046426341;  // std dev = 0,987, 39,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | else return 0.13014555903103597;  // std dev = 0,473, 1.834,000 (wgt'ed) examples reached here.  /* #neg=1.216 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1200587969805906;  // std dev = 3,734, 66,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return -0.02674982142582474;  // std dev = 2,304, 52,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11629860415917782;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.040349237070570296;  // std dev = 2,355, 79,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.45705049768587735;  // std dev = 2,289, 25,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return -0.17897226847543327;  // std dev = 0,975, 21,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else return 0.08468510100206901;  // std dev = 0,462, 1.971,000 (wgt'ed) examples reached here.  /* #neg=1.353 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.030951789482378023;  // std dev = 3,918, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | | else return -0.016454909754822368;  // std dev = 2,295, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else return -0.05116425204691612;  // std dev = 0,238, 99,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24736612944275685;  // std dev = 2,714, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return -0.161890485739578;  // std dev = 0,981, 27,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.047714976988390195;  // std dev = 3,147, 64,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.08039489580281055;  // std dev = 20,129, 1.848,000 (wgt'ed) examples reached here.  /* #neg=1.248 #pos=600 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.02592371441050281;  // std dev = 3,918, 86,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | | else return -0.006512610843225328;  // std dev = 2,284, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | else return -0.03809090647234772;  // std dev = 0,253, 87,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06666622715664818;  // std dev = 0,466, 1.948,000 (wgt'ed) examples reached here.  /* #neg=1.312 #pos=636 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.05224129633748266;  // std dev = 3,839, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return -0.01863752769736977;  // std dev = 2,343, 71,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=6 */
%   | | else return -0.033381067252609475;  // std dev = 0,302, 59,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41361366324553633;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.19090418052855668;  // std dev = 0,991, 53,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
%   | | else return 0.05171219281351882;  // std dev = 0,466, 1.906,000 (wgt'ed) examples reached here.  /* #neg=1.288 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.002523615323166183;  // std dev = 3,707, 100,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
%   | | | else return -0.030715362338461474;  // std dev = 2,697, 49,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02961902490766902;  // std dev = 2,359, 83,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=6 */
%   | | | else return -0.10056670776608434;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.03407581049663951;  // std dev = 20,125, 1.902,000 (wgt'ed) examples reached here.  /* #neg=1.298 #pos=604 */
%   | | | else return 0.06441992627002678;  // std dev = 4,394, 97,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | else return 0.0600921554178913;  // std dev = 0,343, 98,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.6402699016996727;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.006252020966548742;  // std dev = 0,343, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3828336649762802;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.16357010632285038;  // std dev = 0,996, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.05974763419058391;  // std dev = 2,917, 50,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.028529066985441942;  // std dev = 20,158, 1.879,000 (wgt'ed) examples reached here.  /* #neg=1.279 #pos=600 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03129906156813839;  // std dev = 3,628, 78,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return -0.006063634183202238;  // std dev = 2,650, 41,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else return -0.05210161929190121;  // std dev = 0,222, 115,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=6 */


Results
   AUC ROC   = 0.643366
   AUC PR    = 0.203485
   CLL	      = -0.32667
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 69.621 seconds
Total inference time: 176.264 seconds
AUC ROC: 0.643366


Results scoring model
   AUC ROC   = 0.648994
   AUC PR    = 0.17972
   CLL	      = -0.332585
   Precision = 0.40678 at threshold = 0.5
   Recall    = 0.155642
   F1        = 0.225141


Total scoring time: 20.913 seconds
Refined model CLL: -0.332585


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.643366
   AUC PR    = 0.203485
   CLL	      = -0.32667
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 100.922 seconds
Total inference time: 176.264 seconds
AUC ROC: 0.643366
Total revision time: 100.922
Best scored revision CLL: -0.332585


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:20:40
{'Inference time': 176.264, 'Precision': [0.281059, 0.5], 'parameter': {'Inference time': 12.34, 'Precision': [1.0, 0.5], 'Learning time': 4.914, 'AUC ROC': 0.587266, 'CLL': -0.340833, 'F1': 0.297195, 'Recall': 0.174533, 'AUC PR': 0.193231}, 'Learning time': 100.922, 'AUC ROC': 0.643366, 'CLL': -0.32667, 'F1': 0.22264, 'Recall': 0.184328, 'AUC PR': 0.203485}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.15715637926824186;  // std dev = 18,381, 1.612,000 (wgt'ed) examples reached here.  /* #neg=1.130 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.13471952763136488;  // std dev = 18,410, 1.624,000 (wgt'ed) examples reached here.  /* #neg=1.142 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.11946924448138879;  // std dev = 18,359, 1.603,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.08831050494745385;  // std dev = 18,526, 1.674,000 (wgt'ed) examples reached here.  /* #neg=1.192 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.07642939756626402;  // std dev = 18,492, 1.659,000 (wgt'ed) examples reached here.  /* #neg=1.177 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.0695498028621234;  // std dev = 18,410, 1.624,000 (wgt'ed) examples reached here.  /* #neg=1.142 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.054209763776825244;  // std dev = 18,448, 1.640,000 (wgt'ed) examples reached here.  /* #neg=1.158 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.045270858041794204;  // std dev = 18,434, 1.634,000 (wgt'ed) examples reached here.  /* #neg=1.152 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.03869265726033253;  // std dev = 18,408, 1.623,000 (wgt'ed) examples reached here.  /* #neg=1.141 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.034354690325455566;  // std dev = 18,367, 1.606,000 (wgt'ed) examples reached here.  /* #neg=1.124 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.327729
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 3.871 seconds
Total inference time: 12.13 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.327059
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 4.377 seconds
Parameter learned model CLL: -0.327059


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.381, 1130, 482], 'true': [3.77e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.41, 1142, 482], 'true': [1.19e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.359, 1121, 482], 'true': [4.21e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.526, 1192, 482], 'true': [2.46e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.492, 1177, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.41, 1142, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.448, 1158, 482], 'true': [1.37e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.434, 1152, 482], 'true': [6.99e-08, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.408, 1141, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.367, 1124, 482], 'true': [6.5e-08, 0, 99]}]]
[{'': [1.4354398702224246e-15, 0.2096019925003989]}, {'': [1.4354398702224247e-16, 0.2087089592079389]}, {'': [1.794299837778031e-15, 0.21027401445122196]}, {'': [6.100619448445304e-16, 0.20502762754274106]}, {'': [0.0, 0.20612502865803417]}, {'': [-4.485749594445077e-17, 0.2087089592079276]}, {'': [1.8840148296669324e-16, 0.20752379535991056]}, {'': [4.9343245538895844e-17, 0.20796747212313255]}, {'': [-1.1214373986112693e-16, 0.20878324486008495]}, {'': [4.261462114722823e-17, 0.21004979769201507]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16851775903826868;  // std dev = 0,463, 1.437,000 (wgt'ed) examples reached here.  /* #neg=991 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.2059750220560341;  // std dev = 3,230, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.0168510649004878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.00949812372401706;  // std dev = 3,952, 136,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14913556311494736;  // std dev = 0,464, 1.426,000 (wgt'ed) examples reached here.  /* #neg=980 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.13306842837926075;  // std dev = 3,342, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.05981214937855653;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.018593242437137295;  // std dev = 3,890, 113,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.16627812225577943;  // std dev = 0,477, 37,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.13757952798342052;  // std dev = 0,467, 1.342,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.04697305059943116;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return -0.06134404254934185;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.013241677166547809;  // std dev = 1,298, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.011311892973770228;  // std dev = 3,727, 122,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.1496379840967496;  // std dev = 0,480, 36,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0.10233775803351675;  // std dev = 0,462, 1.401,000 (wgt'ed) examples reached here.  /* #neg=968 #pos=433 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.002264374849638948;  // std dev = 3,700, 111,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=16 */
%   | | | else return -0.06784185724240836;  // std dev = 1,361, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.1299589547248418;  // std dev = 1,130, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.01636050681243809;  // std dev = 3,563, 82,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09758952076094289;  // std dev = 0,467, 1.385,000 (wgt'ed) examples reached here.  /* #neg=939 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09637379659505649;  // std dev = 3,353, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.0704070009013124;  // std dev = 1,374, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004127053012141322;  // std dev = 3,939, 132,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=18 */
%   | | | else return -0.11317515859931104;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07814327389710324;  // std dev = 0,466, 1.394,000 (wgt'ed) examples reached here.  /* #neg=948 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08569897499455684;  // std dev = 3,341, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.008928643869284944;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0032559306490220147;  // std dev = 3,923, 126,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.10283089948265767;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04889547251529033;  // std dev = 0,460, 1.461,000 (wgt'ed) examples reached here.  /* #neg=1.015 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06068651265631649;  // std dev = 3,363, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.020344137705073196;  // std dev = 1,344, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -5.220680588032656E-4;  // std dev = 3,931, 129,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=18 */
%   | | | else return -0.09428681380184575;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6861077888805338;  // std dev = 4,265, 353,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=334 */
%   | | | else return -0.22884049184930244;  // std dev = 4,046, 720,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.24099312655516475;  // std dev = 2,052, 290,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=4 */
%   | | | else return 0.33982734844585133;  // std dev = 6,445, 175,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.0713875836310646;  // std dev = 0,388, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.567877397297697;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07618188772092802;  // std dev = 3,300, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.01963554678242857;  // std dev = 0,390, 1.480,000 (wgt'ed) examples reached here.  /* #neg=1.034 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04575049464346772;  // std dev = 3,294, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.0775316176881926;  // std dev = 1,460, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0117139015707664;  // std dev = 3,502, 149,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=18 */
%   | | | else return -0.09375364868460806;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.026638908377316365;  // std dev = 0,391, 1.430,000 (wgt'ed) examples reached here.  /* #neg=984 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04251084045359762;  // std dev = 3,272, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.04781340058917419;  // std dev = 1,440, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.011300158971299094;  // std dev = 3,518, 146,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=18 */
%   | | | else return -0.08526237910854786;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.968651
   AUC PR    = 0.585524
   CLL	      = -0.263111
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 54.639 seconds
Total inference time: 480.653 seconds
AUC ROC: 0.968651


Results scoring model
   AUC ROC   = 0.961261
   AUC PR    = 0.495518
   CLL	      = -0.266781
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 23.184 seconds
Refined model CLL: -0.266781


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968651
   AUC PR    = 0.585524
   CLL	      = -0.263111
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 86.071 seconds
Total inference time: 480.653 seconds
AUC ROC: 0.968651
Total revision time: 86.071
Best scored revision CLL: -0.266781


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:30:20
{'Inference time': 480.653, 'Precision': [1.0, 0.5], 'parameter': {'Inference time': 12.13, 'Precision': [1.0, 0.5], 'Learning time': 3.871, 'AUC ROC': 0.581281, 'CLL': -0.327729, 'F1': 0.279661, 'Recall': 0.162562, 'AUC PR': 0.181212}, 'Learning time': 86.071, 'AUC ROC': 0.968651, 'CLL': -0.263111, 'F1': 0.279661, 'Recall': 0.162562, 'AUC PR': 0.585524}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.15710825392637578;  // std dev = 21,049, 2.114,000 (wgt'ed) examples reached here.  /* #neg=1.482 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.12783629070664487;  // std dev = 21,184, 2.180,000 (wgt'ed) examples reached here.  /* #neg=1.548 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.1165228319520216;  // std dev = 21,083, 2.130,000 (wgt'ed) examples reached here.  /* #neg=1.498 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.09852531302778181;  // std dev = 21,085, 2.131,000 (wgt'ed) examples reached here.  /* #neg=1.499 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.07815813751047898;  // std dev = 21,148, 2.162,000 (wgt'ed) examples reached here.  /* #neg=1.530 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0667530349350743;  // std dev = 21,118, 2.147,000 (wgt'ed) examples reached here.  /* #neg=1.515 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.05673681224327812;  // std dev = 21,089, 2.133,000 (wgt'ed) examples reached here.  /* #neg=1.501 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.04039374291428538;  // std dev = 21,176, 2.176,000 (wgt'ed) examples reached here.  /* #neg=1.544 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0365287616971735;  // std dev = 21,120, 2.148,000 (wgt'ed) examples reached here.  /* #neg=1.516 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03127111565343302;  // std dev = 21,093, 2.135,000 (wgt'ed) examples reached here.  /* #neg=1.503 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.325674
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 4.866 seconds
Total inference time: 12.085 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.324728
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 5.401 seconds
Parameter learned model CLL: -0.324728


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.049, 1482, 632], 'true': [6.19e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.184, 1548, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.083, 1498, 632], 'true': [4.62e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.085, 1499, 632], 'true': [3.26e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.148, 1530, 632], 'true': [1.84e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.118, 1515, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.089, 1501, 632], 'true': [1.76e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.176, 1544, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.12, 1516, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.093, 1503, 632], 'true': [7.6e-08, 0, 115]}]]
[{'': [3.3364615418300357e-15, 0.20958264451342776]}, {'': [-1.0503675224279742e-15, 0.20586145947313386]}, {'': [1.853589745461131e-15, 0.20867464568317565]}, {'': [9.267948727305654e-16, 0.20861801640595587]}, {'': [2.934850430313457e-16, 0.20686981680888655]}, {'': [-4.633974363652827e-17, 0.20771392974977473]}, {'': [2.703151712130816e-16, 0.20850480109738365]}, {'': [-2.703151712130816e-17, 0.20608509948096368]}, {'': [-1.5832745742480493e-16, 0.20765754987534335]}, {'': [5.0201388939572296e-17, 0.2083916436770796]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15849702062909457;  // std dev = 0,458, 2.011,000 (wgt'ed) examples reached here.  /* #neg=1.407 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0353641249729301;  // std dev = 3,394, 79,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=14 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.0028857772047754977;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1450140457475705;  // std dev = 0,461, 1.842,000 (wgt'ed) examples reached here.  /* #neg=1.276 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.6441909572393034;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.6024452266890181;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03799984691859718;  // std dev = 3,380, 76,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | | else return 0.127334239218108;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.017202711852304993;  // std dev = 0,331, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1088028064100507;  // std dev = 0,455, 1.940,000 (wgt'ed) examples reached here.  /* #neg=1.374 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3884244988276713;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.5033740402689996;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.002082204364897576;  // std dev = 3,452, 94,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return 0.03914904874552815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.015117194094533194;  // std dev = 3,102, 88,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return -0.14011719409453322;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09330617824308046;  // std dev = 0,453, 2.035,000 (wgt'ed) examples reached here.  /* #neg=1.431 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.00841254836085176;  // std dev = 3,466, 100,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
%   | | | else return 0.037526263884630526;  // std dev = 1,560, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.057298978460843135;  // std dev = 0,405, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0843585177681602;  // std dev = 0,458, 1.890,000 (wgt'ed) examples reached here.  /* #neg=1.324 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.36140807551687587;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.174042794805452;  // std dev = 2,377, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.004711671068349954;  // std dev = 3,433, 94,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return -0.03974298835176678;  // std dev = 1,628, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return -0.010826994239666387;  // std dev = 0,353, 75,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06361752371765429;  // std dev = 0,453, 2.025,000 (wgt'ed) examples reached here.  /* #neg=1.421 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.03932371514442155;  // std dev = 2,279, 46,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | | else return -0.011430475252193097;  // std dev = 3,100, 87,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | else return 0.042443646369445344;  // std dev = 0,401, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06481175599607528;  // std dev = 0,458, 1.940,000 (wgt'ed) examples reached here.  /* #neg=1.336 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.018494050859924713;  // std dev = 3,467, 101,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=14 */
%   | | | else return 0.05897942964053238;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.008286806586671584;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.04367841905552569;  // std dev = 19,878, 1.893,000 (wgt'ed) examples reached here.  /* #neg=1.331 #pos=562 */
%   | | | else return 0.07119794719129477;  // std dev = 3,438, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | else return 0.06001707721124104;  // std dev = 0,395, 90,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.43500707059615423;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05154767795666953;  // std dev = 2,945, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.1350260472577063;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.050447203776508;  // std dev = 0,463, 1.814,000 (wgt'ed) examples reached here.  /* #neg=1.248 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.31024637652255055;  // std dev = 2,214, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.1670496026338574;  // std dev = 1,725, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.012303588405562298;  // std dev = 3,403, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | | else return -0.03652342371387768;  // std dev = 1,629, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004834534956146818;  // std dev = 3,018, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.12001820936469815;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03820025454277072;  // std dev = 0,462, 1.828,000 (wgt'ed) examples reached here.  /* #neg=1.262 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19318499808479503;  // std dev = 2,183, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.12391707450382461;  // std dev = 2,046, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.1688674362383832;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.16098732898052806;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.013748311444703244;  // std dev = 4,879, 194,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=28 */


Results
   AUC ROC   = 0.634258
   AUC PR    = 0.204533
   CLL	      = -0.312196
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 90.23 seconds
Total inference time: 489.987 seconds
AUC ROC: 0.634258


Results scoring model
   AUC ROC   = 0.623597
   AUC PR    = 0.191847
   CLL	      = -0.324699
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 33.129 seconds
Refined model CLL: -0.324699


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.634258
   AUC PR    = 0.204533
   CLL	      = -0.312196
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 133.626 seconds
Total inference time: 489.987 seconds
AUC ROC: 0.634258
Total revision time: 133.626
Best scored revision CLL: -0.324699


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:40:57
{'Inference time': 489.987, 'Precision': [0.522782, 0.5], 'parameter': {'Inference time': 12.085, 'Precision': [1.0, 0.5], 'Learning time': 4.866, 'AUC ROC': 0.5837, 'CLL': -0.325674, 'F1': 0.286792, 'Recall': 0.167401, 'AUC PR': 0.186484}, 'Learning time': 133.626, 'AUC ROC': 0.634258, 'CLL': -0.312196, 'F1': 0.280928, 'Recall': 0.19207, 'AUC PR': 0.204533}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.16584124279181506;  // std dev = 18,000, 1.521,000 (wgt'ed) examples reached here.  /* #neg=1.053 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.13501770933214174;  // std dev = 18,122, 1.569,000 (wgt'ed) examples reached here.  /* #neg=1.101 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.11629690629692337;  // std dev = 18,115, 1.566,000 (wgt'ed) examples reached here.  /* #neg=1.098 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08429218954214908;  // std dev = 18,295, 1.643,000 (wgt'ed) examples reached here.  /* #neg=1.175 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07974579780866552;  // std dev = 18,175, 1.591,000 (wgt'ed) examples reached here.  /* #neg=1.123 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07713714384875393;  // std dev = 18,031, 1.533,000 (wgt'ed) examples reached here.  /* #neg=1.065 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06011634623052523;  // std dev = 18,072, 1.549,000 (wgt'ed) examples reached here.  /* #neg=1.081 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04794599930127281;  // std dev = 18,085, 1.554,000 (wgt'ed) examples reached here.  /* #neg=1.086 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.033069070777994716;  // std dev = 18,158, 1.584,000 (wgt'ed) examples reached here.  /* #neg=1.116 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.027742209677224225;  // std dev = 18,144, 1.578,000 (wgt'ed) examples reached here.  /* #neg=1.110 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.329495
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 3.644 seconds
Total inference time: 13.57 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.332826
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 3.926 seconds
Parameter learned model CLL: -0.332826


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.0, 1053, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.122, 1101, 468], 'true': [2.67e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.115, 1098, 468], 'true': [3.48e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.295, 1175, 468], 'true': [1.03e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.175, 1123, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.031, 1065, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.072, 1081, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.085, 1086, 468], 'true': [4.21e-08, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.158, 1116, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.144, 1110, 468], 'true': [5.77e-08, 0, 82]}]]
[{'': [-6.932124251318051e-16, 0.21301775147927343]}, {'': [8.665155314147563e-16, 0.2093087021851583]}, {'': [1.4730764034050857e-15, 0.20953890870657618]}, {'': [1.2997732971221344e-16, 0.2037082382367677]}, {'': [-3.4660621256590254e-16, 0.20762767942398122]}, {'': [-5.415722071342227e-17, 0.21208558484381482]}, {'': [-1.408087738548979e-16, 0.21084762405281823]}, {'': [2.166288828536891e-17, 0.2104619788017402]}, {'': [-5.144935967775116e-17, 0.20816115702480603]}, {'': [4.06179155350667e-17, 0.20861946825891692]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7002541982574071;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.018148935099512348;  // std dev = 2,592, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.19713198594696973;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.19480051880991472;  // std dev = 15,709, 1.105,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15083186192878065;  // std dev = 2,913, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.07481195875523625;  // std dev = 3,346, 179,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=12 */
%   | | | else return 0.074365151315728;  // std dev = 4,337, 111,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16197267667604548;  // std dev = 0,469, 1.262,000 (wgt'ed) examples reached here.  /* #neg=846 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2148756809511095;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.09795810143472455;  // std dev = 2,982, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.24045806362802502;  // std dev = 2,862, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.03153107668262115;  // std dev = 4,415, 207,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4805543815707259;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.05411053151244665;  // std dev = 2,667, 72,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | else return 0.14398024429497996;  // std dev = 0,472, 1.170,000 (wgt'ed) examples reached here.  /* #neg=778 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4133703512358557;  // std dev = 1,147, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10689148298584975;  // std dev = 2,886, 40,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05134933580995647;  // std dev = 3,319, 152,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=12 */
%   | | | else return 0.07254105146763595;  // std dev = 4,295, 105,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0985976637177894;  // std dev = 3,542, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.7659537438302978;  // std dev = 0,176, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11756134747652618;  // std dev = 0,468, 1.180,000 (wgt'ed) examples reached here.  /* #neg=788 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.12430642140493246;  // std dev = 0,020, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.03299366221183208;  // std dev = 4,439, 145,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07426734748906297;  // std dev = 4,383, 106,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=26 */
%   | | | else return -0.16706806428149962;  // std dev = 0,037, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07124160273429023;  // std dev = 3,570, 60,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.6091417809441741;  // std dev = 0,217, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.053055270354426136;  // std dev = 3,165, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.09650623964805378;  // std dev = 15,773, 1.123,000 (wgt'ed) examples reached here.  /* #neg=751 #pos=372 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.005598450974894613;  // std dev = 4,552, 180,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=26 */
%   | | | else return -0.1265618735195636;  // std dev = 0,039, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.07144334991013851;  // std dev = 4,363, 102,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return -0.1482944075460892;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.029334595575452697;  // std dev = 2,990, 63,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.6886450509945822;  // std dev = 0,493, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03329631168490297;  // std dev = 3,606, 67,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.07667634400162958;  // std dev = 15,797, 1.130,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.6387656177358059;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08694788490293713;  // std dev = 2,893, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04077841861093967;  // std dev = 3,293, 151,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=12 */
%   | | | else return 0.04339775553937265;  // std dev = 4,281, 106,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.058773215658171625;  // std dev = 0,463, 1.275,000 (wgt'ed) examples reached here.  /* #neg=859 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.04795547826345391;  // std dev = 0,784, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09688245865883559;  // std dev = 2,929, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.034871689883056674;  // std dev = 3,291, 148,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=12 */
%   | | | else return 0.05333477837631431;  // std dev = 4,232, 99,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05417748414807679;  // std dev = 0,466, 1.246,000 (wgt'ed) examples reached here.  /* #neg=830 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.131473017531733;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09489875055840513;  // std dev = 2,796, 35,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03993025521271715;  // std dev = 3,306, 168,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=12 */
%   | | | else return 0.05332564262411302;  // std dev = 4,205, 96,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04107687386179329;  // std dev = 0,465, 1.257,000 (wgt'ed) examples reached here.  /* #neg=841 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34056441414484817;  // std dev = 1,338, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04353794992718696;  // std dev = 2,860, 48,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08481923244584447;  // std dev = 2,794, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.03497011485745099;  // std dev = 4,377, 226,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6769144353177419;  // std dev = 3,224, 435,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=425 */
%   | | | else return -0.2657284710661573;  // std dev = 3,228, 981,000 (wgt'ed) examples reached here.  /* #neg=974 #pos=7 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.2974629262612515;  // std dev = 0,017, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.09931747842734265;  // std dev = 0,039, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.4206706630085687;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.40977825832994935;  // std dev = 1,186, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.045209188895853465;  // std dev = 4,262, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return -0.17278052804541552;  // std dev = 0,103, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.913446
   AUC PR    = 0.493569
   CLL	      = -0.27061
   Precision = 0.88664 at threshold = 0.5
   Recall    = 0.177544
   F1        = 0.295846


Total learning time: 87.202 seconds
Total inference time: 509.869 seconds
AUC ROC: 0.913446


Results scoring model
   AUC ROC   = 0.945485
   AUC PR    = 0.635685
   CLL	      = -0.258823
   Precision = 0.564103 at threshold = 0.5
   Recall    = 0.2
   F1        = 0.295302


Total scoring time: 27.852 seconds
Refined model CLL: -0.258823


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.913446
   AUC PR    = 0.493569
   CLL	      = -0.27061
   Precision = 0.88664 at threshold = 0.5
   Recall    = 0.177544
   F1        = 0.295846


Total learning time: 122.624 seconds
Total inference time: 509.869 seconds
AUC ROC: 0.913446
Total revision time: 122.624
Best scored revision CLL: -0.258823


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 01:51:45
{'Inference time': 509.869, 'Precision': [0.88664, 0.5], 'parameter': {'Inference time': 13.57, 'Precision': [1.0, 0.5], 'Learning time': 3.644, 'AUC ROC': 0.583705, 'CLL': -0.329495, 'F1': 0.286806, 'Recall': 0.16741, 'AUC PR': 0.185174}, 'Learning time': 122.624, 'AUC ROC': 0.913446, 'CLL': -0.27061, 'F1': 0.295846, 'Recall': 0.177544, 'AUC PR': 0.493569}


