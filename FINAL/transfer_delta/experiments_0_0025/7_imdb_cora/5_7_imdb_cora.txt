Starting experiment #5 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048904;  // std dev = 0,000, 699,000 (wgt'ed) examples reached here.  /* #neg=699 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.12544463852839235;  // std dev = 0,000, 706,000 (wgt'ed) examples reached here.  /* #neg=706 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360678;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783513;  // std dev = 4,43e-07, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926201;  // std dev = 0,000, 717,000 (wgt'ed) examples reached here.  /* #neg=717 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839675;  // std dev = 1,23e-07, 631,000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.0787767547310927;  // std dev = 0,000, 684,000 (wgt'ed) examples reached here.  /* #neg=684 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333649;  // std dev = 2,45e-07, 697,000 (wgt'ed) examples reached here.  /* #neg=697 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0684269778442025;  // std dev = 1,90e-07, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0641918400820253;  // std dev = 2,52e-07, 720,000 (wgt'ed) examples reached here.  /* #neg=720 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.12799020494077734;  // std dev = 14,093, 1.008,000 (wgt'ed) examples reached here.  /* #neg=736 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.10015318673418737;  // std dev = 14,204, 1.053,000 (wgt'ed) examples reached here.  /* #neg=781 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.10559914182001709;  // std dev = 14,018, 980,000 (wgt'ed) examples reached here.  /* #neg=708 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.09377018922981711;  // std dev = 13,982, 967,000 (wgt'ed) examples reached here.  /* #neg=695 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.051749967372644375;  // std dev = 14,245, 1.071,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05649491926572266;  // std dev = 14,118, 1.018,000 (wgt'ed) examples reached here.  /* #neg=746 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04747208257695022;  // std dev = 14,113, 1.016,000 (wgt'ed) examples reached here.  /* #neg=744 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04568823266694074;  // std dev = 14,051, 992,000 (wgt'ed) examples reached here.  /* #neg=720 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.036432919722434357;  // std dev = 14,061, 996,000 (wgt'ed) examples reached here.  /* #neg=724 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.02680509881078656;  // std dev = 14,090, 1.007,000 (wgt'ed) examples reached here.  /* #neg=735 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.296392
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 3.072 seconds
Total inference time: 13.251 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.294237
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 3.619 seconds
Parameter learned model CLL: -0.294237


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.093, 736, 272], 'true': [3.37e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.204, 781, 272], 'true': [1.88e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.018, 708, 272], 'true': [4.09e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [13.982, 695, 272], 'true': [2.23e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.245, 799, 272], 'true': [4.21e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.118, 746, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.113, 744, 272], 'true': [1.26e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.051, 720, 272], 'true': [7.6e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.061, 724, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.09, 735, 272], 'true': [3.65e-08, 0, 96]}]]
[{'': [1.1842378929335002e-15, 0.19702695893172237]}, {'': [3.7007434154171886e-16, 0.1915857465081931]}, {'': [1.7393494052460785e-15, 0.2005164514785436]}, {'': [5.181040781584064e-16, 0.2021625748992831]}, {'': [1.850371707708594e-17, 0.1894683799445679]}, {'': [-4.625929269271486e-17, 0.19579976918415173]}, {'': [1.6653345369377348e-16, 0.19604439208878385]}, {'': [6.013708050052931e-17, 0.1990114464099806]}, {'': [-6.013708050052931e-17, 0.19851292721085548]}, {'': [1.3877787807814457e-17, 0.19715023632980752]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18324646435828526;  // std dev = 0,468, 769,000 (wgt'ed) examples reached here.  /* #neg=519 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0578815992516327;  // std dev = 3,174, 131,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.05814893509951237;  // std dev = 2,966, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14375285652301661;  // std dev = 0,462, 808,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.13495015993344245;  // std dev = 1,29e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.04681872552506493;  // std dev = 3,166, 126,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0342553658468874;  // std dev = 2,997, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.013513046091786062;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.13605190619542099;  // std dev = 0,467, 772,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.04228712796359033;  // std dev = 3,166, 128,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=11 */
%   | | | else return -0.11678745838568094;  // std dev = 0,014, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02985750857813331;  // std dev = 2,997, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10168276861267864;  // std dev = 0,462, 808,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.11251729552227233;  // std dev = 0,027, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.024754264611185087;  // std dev = 3,145, 111,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.011835567143184681;  // std dev = 3,023, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08236907753673323;  // std dev = 0,461, 813,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.03392034305582563;  // std dev = 3,163, 128,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=11 */
%   | | | else return -0.10204121067058296;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.08841898980162463;  // std dev = 0,428, 45,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07404164490653496;  // std dev = 0,464, 797,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=250 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.024688981317578833;  // std dev = 3,060, 78,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return -0.11976982226476772;  // std dev = 0,134, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04805694408772402;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.03216842271017766;  // std dev = 3,019, 119,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05174733553397978;  // std dev = 0,460, 819,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08972437659428852;  // std dev = 0,017, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.03529668866810977;  // std dev = 3,178, 139,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0021458433723795293;  // std dev = 3,021, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.09753154751124324;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.07388693454385185;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.06398640581566838;  // std dev = 0,469, 760,000 (wgt'ed) examples reached here.  /* #neg=511 #pos=249 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.03748051246516644;  // std dev = 2,951, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.10708449106769696;  // std dev = 0,149, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.02061421174293601;  // std dev = 3,158, 122,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=11 */
%   | | | else return -0.08927744735855389;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03837003021658088;  // std dev = 0,464, 796,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.062170467880088655;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.08913650829171879;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.055977480532249435;  // std dev = 0,968, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.020470401734989638;  // std dev = 4,184, 189,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.01878910624930829;  // std dev = 0,459, 827,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.010653760388716774;  // std dev = 3,145, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | | else return -0.082515494993554;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.012275436041021402;  // std dev = 2,997, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.08060450060593626;  // std dev = 0,006, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.609192
   AUC PR    = 0.170423
   CLL	      = -0.314731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 24.792 seconds
Total inference time: 127.022 seconds
AUC ROC: 0.609192


Results scoring model
   AUC ROC   = 0.698798
   AUC PR    = 0.283888
   CLL	      = -0.293378
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 10.949 seconds
Refined model CLL: -0.293378


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.609192
   AUC PR    = 0.170423
   CLL	      = -0.314731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 42.432 seconds
Total inference time: 127.022 seconds
AUC ROC: 0.609192
Total revision time: 42.432
Best scored revision CLL: -0.293378


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:12:41
{'Inference time': 127.022, 'Precision': [1.0, 0.5], 'parameter': {'Inference time': 13.251, 'Precision': [1.0, 0.5], 'Learning time': 3.072, 'AUC ROC': 0.575311, 'CLL': -0.296392, 'F1': 0.261811, 'Recall': 0.150623, 'AUC PR': 0.168925}, 'Learning time': 42.432, 'AUC ROC': 0.609192, 'CLL': -0.314731, 'F1': 0.261811, 'Recall': 0.150623, 'AUC PR': 0.170423}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.15837365420063088;  // std dev = 21,621, 2.225,000 (wgt'ed) examples reached here.  /* #neg=1.557 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.1370392672212937;  // std dev = 21,635, 2.232,000 (wgt'ed) examples reached here.  /* #neg=1.564 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.11501462320983845;  // std dev = 21,674, 2.251,000 (wgt'ed) examples reached here.  /* #neg=1.583 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.10610494912231634;  // std dev = 21,538, 2.186,000 (wgt'ed) examples reached here.  /* #neg=1.518 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.08626232248466685;  // std dev = 21,574, 2.203,000 (wgt'ed) examples reached here.  /* #neg=1.535 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.0702896715862452;  // std dev = 21,589, 2.210,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06395683421827966;  // std dev = 21,489, 2.164,000 (wgt'ed) examples reached here.  /* #neg=1.496 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.05151581404800048;  // std dev = 21,496, 2.167,000 (wgt'ed) examples reached here.  /* #neg=1.499 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.032719726732606175;  // std dev = 21,633, 2.231,000 (wgt'ed) examples reached here.  /* #neg=1.563 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.02925406108047211;  // std dev = 21,587, 2.209,000 (wgt'ed) examples reached here.  /* #neg=1.541 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.336045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 4.997 seconds
Total inference time: 12.2 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.336566
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 5.44 seconds
Parameter learned model CLL: -0.336566


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.621, 1557, 668], 'true': [4.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.635, 1564, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.674, 1583, 668], 'true': [4.3e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.538, 1518, 668], 'true': [2.6e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.574, 1535, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.589, 1542, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.489, 1496, 668], 'true': [1.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.496, 1499, 668], 'true': [5.16e-08, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.633, 1563, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.587, 1541, 668], 'true': [6.83e-08, 0, 103]}]]
[{'': [1.9315724855614373e-15, 0.21008983714177407]}, {'': [-3.4492365813597096e-16, 0.20971274778071122]}, {'': [1.793603022307049e-15, 0.20869228168692483]}, {'': [6.553549504583448e-16, 0.2122012406991467]}, {'': [-2.4144656069517967e-16, 0.21127876421557912]}, {'': [-5.1738548720395646e-17, 0.21089985872524722]}, {'': [2.0695419488158259e-16, 0.2133995715471671]}, {'': [2.5869274360197823e-17, 0.21323587503877295]}, {'': [-1.2503482607428947e-16, 0.20976658112603325]}, {'': [4.527123013034619e-17, 0.21095395375228682]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7081489350995123;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.1180415410909639;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else return 0.17703438401591598;  // std dev = 0,466, 1.938,000 (wgt'ed) examples reached here.  /* #neg=1.320 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07792915487973198;  // std dev = 3,950, 91,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
%   | | | else return -0.034708207757630574;  // std dev = 2,315, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09100360727336902;  // std dev = 2,386, 118,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13992268450397424;  // std dev = 0,459, 2.088,000 (wgt'ed) examples reached here.  /* #neg=1.452 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07566810928783678;  // std dev = 3,931, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | | else return -0.02447079922536512;  // std dev = 2,307, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.06352270665441874;  // std dev = 2,365, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
%   | | | else return -0.13113008112393135;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13341802292866947;  // std dev = 0,464, 1.997,000 (wgt'ed) examples reached here.  /* #neg=1.361 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.048930592795931434;  // std dev = 3,974, 95,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return -0.012349794481283592;  // std dev = 2,295, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.05715305748965155;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=6 */
%   | | | else return -0.11689854312281267;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1068658572347855;  // std dev = 0,462, 2.033,000 (wgt'ed) examples reached here.  /* #neg=1.397 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09482268041012158;  // std dev = 3,839, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.0029987098131357788;  // std dev = 2,276, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1127927214584699;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.03870259241126677;  // std dev = 2,350, 76,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3427105685912918;  // std dev = 2,714, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return -0.19365306777234503;  // std dev = 0,985, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | else return 0.10124014257662095;  // std dev = 0,467, 1.900,000 (wgt'ed) examples reached here.  /* #neg=1.282 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.04524202897916645;  // std dev = 3,931, 88,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | | else return 0.009145248047971297;  // std dev = 2,268, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | else return -0.05050710484072967;  // std dev = 0,242, 96,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.088814628118691;  // std dev = 0,468, 1.922,000 (wgt'ed) examples reached here.  /* #neg=1.286 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.08891360600187352;  // std dev = 3,801, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return -0.03641411381333182;  // std dev = 2,326, 61,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04133503764150711;  // std dev = 2,365, 89,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=6 */
%   | | | else return -0.09724286700015493;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05958539611496962;  // std dev = 0,463, 1.997,000 (wgt'ed) examples reached here.  /* #neg=1.361 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.007612722194714097;  // std dev = 3,705, 100,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
%   | | | else return -0.03305197947790016;  // std dev = 2,733, 53,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else return -0.04264345882086454;  // std dev = 0,241, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056293186572815464;  // std dev = 0,467, 1.946,000 (wgt'ed) examples reached here.  /* #neg=1.310 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.029088531081667538;  // std dev = 3,923, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | | else return -0.00900243249741474;  // std dev = 2,295, 49,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else return -0.04129816000185331;  // std dev = 0,236, 101,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04222418438391582;  // std dev = 0,465, 1.965,000 (wgt'ed) examples reached here.  /* #neg=1.329 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.0506118095961644;  // std dev = 3,856, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return -0.02690038723178698;  // std dev = 2,319, 58,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08697811528913124;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0313943815046506;  // std dev = 2,366, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5898842664945471;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.41011573350545294;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.23154248254677792;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.21258260338595636;  // std dev = 0,990, 49,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordvenue(B, I) )
%   | | | then return 0.02550414569537352;  // std dev = 20,089, 1.876,000 (wgt'ed) examples reached here.  /* #neg=1.284 #pos=592 */
%   | | | else return 0.07255518155379714;  // std dev = 5,159, 170,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=40 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.6329157729542982;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.012162011528127533;  // std dev = 2,302, 53,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */


Results
   AUC ROC   = 0.642879
   AUC PR    = 0.215416
   CLL	      = -0.32367
   Precision = 0.995192 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.311044


Total learning time: 47.792 seconds
Total inference time: 121.529 seconds
AUC ROC: 0.642879


Results scoring model
   AUC ROC   = 0.645989
   AUC PR    = 0.19628
   CLL	      = -0.33156
   Precision = 0.991736 at threshold = 0.5
   Recall    = 0.155642
   F1        = 0.269058


Total scoring time: 15.376 seconds
Refined model CLL: -0.33156


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.642879
   AUC PR    = 0.215416
   CLL	      = -0.32367
   Precision = 0.995192 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.311044


Total learning time: 73.605 seconds
Total inference time: 121.529 seconds
AUC ROC: 0.642879
Total revision time: 73.605
Best scored revision CLL: -0.33156


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:16:10
{'Inference time': 121.529, 'Precision': [0.995192, 0.5], 'parameter': {'Inference time': 12.2, 'Precision': [1.0, 0.5], 'Learning time': 4.997, 'AUC ROC': 0.587266, 'CLL': -0.336045, 'F1': 0.297195, 'Recall': 0.174533, 'AUC PR': 0.193231}, 'Learning time': 73.605, 'AUC ROC': 0.642879, 'CLL': -0.32367, 'F1': 0.311044, 'Recall': 0.184328, 'AUC PR': 0.215416}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.1543997033846948;  // std dev = 18,418, 1.627,000 (wgt'ed) examples reached here.  /* #neg=1.145 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.12900723181923754;  // std dev = 18,490, 1.658,000 (wgt'ed) examples reached here.  /* #neg=1.176 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.10591999260199193;  // std dev = 18,553, 1.686,000 (wgt'ed) examples reached here.  /* #neg=1.204 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.09939630135447731;  // std dev = 18,427, 1.631,000 (wgt'ed) examples reached here.  /* #neg=1.149 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.08180848457947909;  // std dev = 18,446, 1.639,000 (wgt'ed) examples reached here.  /* #neg=1.157 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.05893259897174732;  // std dev = 18,562, 1.690,000 (wgt'ed) examples reached here.  /* #neg=1.208 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.06224927424146431;  // std dev = 18,381, 1.612,000 (wgt'ed) examples reached here.  /* #neg=1.130 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.040605193897106574;  // std dev = 18,515, 1.669,000 (wgt'ed) examples reached here.  /* #neg=1.187 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.04465445089766324;  // std dev = 18,362, 1.604,000 (wgt'ed) examples reached here.  /* #neg=1.122 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.031630553835186134;  // std dev = 18,420, 1.628,000 (wgt'ed) examples reached here.  /* #neg=1.146 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.325234
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 3.959 seconds
Total inference time: 12.752 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.324558
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 5.096 seconds
Parameter learned model CLL: -0.324558


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.418, 1145, 482], 'true': [3.77e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.49, 1176, 482], 'true': [1.19e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.553, 1204, 482], 'true': [4.21e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.427, 1149, 482], 'true': [2.46e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.446, 1157, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.562, 1208, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.381, 1130, 482], 'true': [1.37e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.515, 1187, 482], 'true': [6.99e-08, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.362, 1122, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.42, 1146, 482], 'true': [6.5e-08, 0, 99]}]]
[{'': [1.4354398702224246e-15, 0.20848625057560682]}, {'': [1.4354398702224247e-16, 0.2061984078365526]}, {'': [1.794299837778031e-15, 0.2041542308509462]}, {'': [6.100619448445304e-16, 0.20818965468633133]}, {'': [0.0, 0.2075976772694042]}, {'': [-4.485749594445077e-17, 0.20386401036380078]}, {'': [1.8840148296669324e-16, 0.20960199250040462]}, {'': [4.9343245538895844e-17, 0.20539273776449923]}, {'': [-1.1214373986112693e-16, 0.21019925249220991]}, {'': [4.261462114722823e-17, 0.20841206406319032]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17069273327750317;  // std dev = 0,464, 1.427,000 (wgt'ed) examples reached here.  /* #neg=981 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09344305274657119;  // std dev = 3,498, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return -0.0418510649004878;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.002316181179557408;  // std dev = 3,936, 129,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16233660650684775;  // std dev = 0,469, 1.367,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.12709092537932684;  // std dev = 3,392, 57,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.059909440516998085;  // std dev = 1,359, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016569351511368444;  // std dev = 3,969, 144,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.1080510500368975;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else return 0.12704821119092805;  // std dev = 0,464, 1.377,000 (wgt'ed) examples reached here.  /* #neg=944 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.15565949260426784;  // std dev = 3,283, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.042952827884954956;  // std dev = 1,351, 23,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.004229308078749434;  // std dev = 3,945, 133,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1048934961886303;  // std dev = 0,463, 1.428,000 (wgt'ed) examples reached here.  /* #neg=982 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.09098368605240266;  // std dev = 3,347, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.060198575058374997;  // std dev = 1,411, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.009564133496844462;  // std dev = 3,958, 139,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=18 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08888658263703975;  // std dev = 0,464, 1.420,000 (wgt'ed) examples reached here.  /* #neg=974 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09724730071483473;  // std dev = 3,323, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.06875850151406444;  // std dev = 1,389, 31,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.02789542302533507;  // std dev = 1,332, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.0028281751744895427;  // std dev = 3,707, 114,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.13369391121905327;  // std dev = 0,483, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0.07765685173625582;  // std dev = 0,466, 1.358,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return -0.047936717278473887;  // std dev = 0,290, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.024428380305427835;  // std dev = 3,665, 86,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | | else return -0.006629916248355785;  // std dev = 3,722, 125,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.11573736806986744;  // std dev = 0,483, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0.05723685540553535;  // std dev = 0,464, 1.383,000 (wgt'ed) examples reached here.  /* #neg=950 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.0503419579591503;  // std dev = 3,386, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.009822480467688488;  // std dev = 1,349, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.1374680440581491;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.00813351703609037;  // std dev = 3,959, 142,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05339257827955643;  // std dev = 0,467, 1.391,000 (wgt'ed) examples reached here.  /* #neg=945 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07830643074464423;  // std dev = 3,299, 51,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.05987240825684423;  // std dev = 1,386, 30,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.003005787751043501;  // std dev = 3,938, 130,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.08895886882896387;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03622072102168281;  // std dev = 0,464, 1.420,000 (wgt'ed) examples reached here.  /* #neg=974 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.047936171150822465;  // std dev = 0,300, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -8.974416972726873E-4;  // std dev = 3,717, 118,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=16 */
%   | | | else return -0.016336707754863306;  // std dev = 3,722, 95,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.29222639147967683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1271284472300008;  // std dev = 2,747, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04542046136301354;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.025338304753476176;  // std dev = 17,024, 1.355,000 (wgt'ed) examples reached here.  /* #neg=935 #pos=420 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.014087469962110027;  // std dev = 3,393, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return -0.029704918860667274;  // std dev = 1,424, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.014038960613706365;  // std dev = 0,325, 150,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=18 */


Results
   AUC ROC   = 0.61183
   AUC PR    = 0.181053
   CLL	      = -0.327565
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 31.821 seconds
Total inference time: 73.97 seconds
AUC ROC: 0.61183


Results scoring model
   AUC ROC   = 0.625244
   AUC PR    = 0.190168
   CLL	      = -0.324454
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 9.921 seconds
Refined model CLL: -0.324454


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.61183
   AUC PR    = 0.181053
   CLL	      = -0.327565
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 50.797000000000004 seconds
Total inference time: 73.97 seconds
AUC ROC: 0.61183
Total revision time: 50.797000000000004
Best scored revision CLL: -0.324454


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:18:29
{'Inference time': 73.97, 'Precision': [1.0, 0.5], 'parameter': {'Inference time': 12.752, 'Precision': [1.0, 0.5], 'Learning time': 3.959, 'AUC ROC': 0.581281, 'CLL': -0.325234, 'F1': 0.279661, 'Recall': 0.162562, 'AUC PR': 0.181212}, 'Learning time': 50.797000000000004, 'AUC ROC': 0.61183, 'CLL': -0.327565, 'F1': 0.279661, 'Recall': 0.162562, 'AUC PR': 0.181053}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.16025218557751877;  // std dev = 21,002, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.460 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.1396038700428968;  // std dev = 21,002, 2.092,000 (wgt'ed) examples reached here.  /* #neg=1.460 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.11811900629771109;  // std dev = 21,025, 2.103,000 (wgt'ed) examples reached here.  /* #neg=1.471 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.10012515579488801;  // std dev = 21,021, 2.101,000 (wgt'ed) examples reached here.  /* #neg=1.469 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.07148929668531903;  // std dev = 21,202, 2.189,000 (wgt'ed) examples reached here.  /* #neg=1.557 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0659749393187761;  // std dev = 21,099, 2.138,000 (wgt'ed) examples reached here.  /* #neg=1.506 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.06528919608938052;  // std dev = 20,931, 2.060,000 (wgt'ed) examples reached here.  /* #neg=1.428 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.0495953599014081;  // std dev = 20,984, 2.084,000 (wgt'ed) examples reached here.  /* #neg=1.452 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03494204422346354;  // std dev = 21,062, 2.120,000 (wgt'ed) examples reached here.  /* #neg=1.488 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.03311481969602501;  // std dev = 20,986, 2.085,000 (wgt'ed) examples reached here.  /* #neg=1.453 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.333212
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 5.054 seconds
Total inference time: 12.102 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.332298
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 5.509 seconds
Parameter learned model CLL: -0.332298


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.002, 1460, 632], 'true': [6.19e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.002, 1460, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.025, 1471, 632], 'true': [4.62e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.021, 1469, 632], 'true': [3.26e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.202, 1557, 632], 'true': [1.84e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.099, 1506, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [20.931, 1428, 632], 'true': [1.76e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [20.984, 1452, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.062, 1488, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [20.986, 1453, 632], 'true': [7.6e-08, 0, 115]}]]
[{'': [3.3364615418300357e-15, 0.21083687652861594]}, {'': [-1.0503675224279742e-15, 0.2108368765286228]}, {'': [1.853589745461131e-15, 0.2102089513226392]}, {'': [9.267948727305654e-16, 0.2103230006970867]}, {'': [2.934850430313457e-16, 0.20535920184001732]}, {'': [-4.633974363652827e-17, 0.20822201667716303]}, {'': [2.703151712130816e-16, 0.21267225940241014]}, {'': [-2.703151712130816e-17, 0.21129453546076002]}, {'': [-1.5832745742480493e-16, 0.2092417230331184]}, {'': [5.0201388939572296e-17, 0.21123728355443555]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.16195999253375315;  // std dev = 0,460, 1.863,000 (wgt'ed) examples reached here.  /* #neg=1.297 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.691482268432845;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return 0.5423594614153018;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.008148935099512315;  // std dev = 2,258, 40,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.03002393509951237;  // std dev = 3,018, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.009320944418559959;  // std dev = 3,089, 83,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14422805852118106;  // std dev = 0,460, 1.956,000 (wgt'ed) examples reached here.  /* #neg=1.352 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03697401346106341;  // std dev = 3,384, 77,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.056974114032718175;  // std dev = 1,550, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return -0.02227639235986454;  // std dev = 0,323, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12709917139048066;  // std dev = 0,462, 1.933,000 (wgt'ed) examples reached here.  /* #neg=1.329 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.050350187382887816;  // std dev = 3,347, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.15003517327698215;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.006886471454355991;  // std dev = 0,352, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09936055977533348;  // std dev = 0,459, 1.871,000 (wgt'ed) examples reached here.  /* #neg=1.305 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4493069083125844;  // std dev = 2,571, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.5103731734526883;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.024821739207266703;  // std dev = 3,401, 84,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | | else return -0.028874954986518892;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.012007795498828744;  // std dev = 3,067, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | | else return -0.12376594650549784;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08377440903907295;  // std dev = 0,460, 1.865,000 (wgt'ed) examples reached here.  /* #neg=1.299 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.25311074345074136;  // std dev = 3,015, 39,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | | else return 0.39348478286097316;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.013976200611493537;  // std dev = 3,418, 88,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | | else return -0.053378773272454154;  // std dev = 1,646, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else return -0.019939460448302884;  // std dev = 0,340, 82,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.11559049338480572;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.26559049338480584;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.06393007560226928;  // std dev = 19,769, 1.867,000 (wgt'ed) examples reached here.  /* #neg=1.310 #pos=557 */
%   | | | else return 0.09549919822209307;  // std dev = 4,575, 125,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.49907246480974665;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.058200802083929415;  // std dev = 0,399, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06098685601129828;  // std dev = 0,459, 1.923,000 (wgt'ed) examples reached here.  /* #neg=1.319 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.01745274268787936;  // std dev = 3,459, 102,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=14 */
%   | | | else return -0.05560739865572915;  // std dev = 1,643, 30,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else return 0.03558989853347463;  // std dev = 0,400, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04737180161692522;  // std dev = 0,458, 1.937,000 (wgt'ed) examples reached here.  /* #neg=1.333 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02161385351658074;  // std dev = 3,373, 75,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return 0.02703852143546096;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.025062582490303097;  // std dev = 3,105, 89,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
%   | | | else return -0.11845366507040288;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.034510666317991906;  // std dev = 0,459, 1.877,000 (wgt'ed) examples reached here.  /* #neg=1.311 #pos=566 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.059058658242629056;  // std dev = 4,145, 105,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.03285081602408206;  // std dev = 2,182, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.43277813661861547;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.001695188241310855;  // std dev = 0,380, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.022582144157320124;  // std dev = 0,454, 1.988,000 (wgt'ed) examples reached here.  /* #neg=1.384 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.031991602569061604;  // std dev = 2,264, 42,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return -0.025105202991353406;  // std dev = 3,097, 86,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.006662493562279211;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.10679412622073377;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.638807
   AUC PR    = 0.206789
   CLL	      = -0.311653
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 79.836 seconds
Total inference time: 185.16 seconds
AUC ROC: 0.638807


Results scoring model
   AUC ROC   = 0.623314
   AUC PR    = 0.191058
   CLL	      = -0.323746
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 18.062 seconds
Refined model CLL: -0.323746


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.638807
   AUC PR    = 0.206789
   CLL	      = -0.311653
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 108.461 seconds
Total inference time: 185.16 seconds
AUC ROC: 0.638807
Total revision time: 108.461
Best scored revision CLL: -0.323746


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 02:23:37
{'Inference time': 185.16, 'Precision': [0.522782, 0.5], 'parameter': {'Inference time': 12.102, 'Precision': [1.0, 0.5], 'Learning time': 5.054, 'AUC ROC': 0.5837, 'CLL': -0.333212, 'F1': 0.286792, 'Recall': 0.167401, 'AUC PR': 0.186484}, 'Learning time': 108.461, 'AUC ROC': 0.638807, 'CLL': -0.311653, 'F1': 0.280928, 'Recall': 0.19207, 'AUC PR': 0.206789}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.14937482184499584;  // std dev = 18,213, 1.607,000 (wgt'ed) examples reached here.  /* #neg=1.139 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.13668545080004613;  // std dev = 18,129, 1.572,000 (wgt'ed) examples reached here.  /* #neg=1.104 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.11324534423287146;  // std dev = 18,182, 1.594,000 (wgt'ed) examples reached here.  /* #neg=1.126 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.09552713625940926;  // std dev = 18,187, 1.596,000 (wgt'ed) examples reached here.  /* #neg=1.128 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.09020528327871531;  // std dev = 18,054, 1.542,000 (wgt'ed) examples reached here.  /* #neg=1.074 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06551535621903003;  // std dev = 18,173, 1.590,000 (wgt'ed) examples reached here.  /* #neg=1.122 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04425461911328715;  // std dev = 18,295, 1.643,000 (wgt'ed) examples reached here.  /* #neg=1.175 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04780961000299;  // std dev = 18,144, 1.578,000 (wgt'ed) examples reached here.  /* #neg=1.110 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.0480723496275804;  // std dev = 18,024, 1.530,000 (wgt'ed) examples reached here.  /* #neg=1.062 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03365630724769429;  // std dev = 18,090, 1.556,000 (wgt'ed) examples reached here.  /* #neg=1.088 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.328741
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 3.68 seconds
Total inference time: 13.527 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.332081
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 3.713 seconds
Parameter learned model CLL: -0.332081


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.213, 1139, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.129, 1104, 468], 'true': [2.67e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.182, 1126, 468], 'true': [3.48e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.187, 1128, 468], 'true': [1.03e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.054, 1074, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.173, 1122, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.295, 1175, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.144, 1110, 468], 'true': [4.21e-08, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.024, 1062, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.09, 1088, 468], 'true': [5.77e-08, 0, 82]}]]
[{'': [-6.932124251318051e-16, 0.20641336963477522]}, {'': [8.665155314147563e-16, 0.20907872501603478]}, {'': [1.4730764034050857e-15, 0.2073994543528215]}, {'': [1.2997732971221344e-16, 0.20724744191306302]}, {'': [-3.4660621256590254e-16, 0.21138851458766708]}, {'': [-5.415722071342227e-17, 0.20770380918474918]}, {'': [-1.408087738548979e-16, 0.2037082382367558]}, {'': [2.166288828536891e-17, 0.20861946825890143]}, {'': [-5.144935967775116e-17, 0.21231833910034803]}, {'': [4.06179155350667e-17, 0.21030788852835078]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7470378239884012;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.029175008562459526;  // std dev = 2,664, 71,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=8 */
%   | | else return 0.18508805102944906;  // std dev = 0,469, 1.199,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.17393840878372288;  // std dev = 2,865, 38,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.05909244421083249;  // std dev = 3,318, 145,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=12 */
%   | | | else return 0.06327714022771695;  // std dev = 4,368, 117,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5032480743687228;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.024928723661396646;  // std dev = 2,587, 49,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24225549485484002;  // std dev = 3,440, 49,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.1707438132591356;  // std dev = 15,709, 1.105,000 (wgt'ed) examples reached here.  /* #neg=733 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.4505560236474524;  // std dev = 0,753, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.175928143314049;  // std dev = 3,015, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.056377497491838874;  // std dev = 3,325, 153,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=12 */
%   | | | else return 0.09027032920257277;  // std dev = 4,271, 100,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14472308773504144;  // std dev = 0,470, 1.235,000 (wgt'ed) examples reached here.  /* #neg=819 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17531769731668234;  // std dev = 1,629, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.05862003385975508;  // std dev = 3,013, 54,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.24297458493090135;  // std dev = 2,759, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.0251060180685716;  // std dev = 4,386, 196,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3998862119994292;  // std dev = 1,789, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.0029632673365390405;  // std dev = 2,597, 51,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else return 0.11818632449206905;  // std dev = 0,471, 1.177,000 (wgt'ed) examples reached here.  /* #neg=785 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.16354283353404364;  // std dev = 0,483, 39,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.05588902025310923;  // std dev = 3,336, 170,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=12 */
%   | | | else return 0.06423268718473824;  // std dev = 4,301, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34795193254675993;  // std dev = 2,569, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return -0.06375549514977973;  // std dev = 2,541, 44,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else return 0.10693723489714711;  // std dev = 0,469, 1.146,000 (wgt'ed) examples reached here.  /* #neg=754 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.12379298706421797;  // std dev = 0,480, 40,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.04583176945072701;  // std dev = 3,329, 161,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=12 */
%   | | | else return 0.05960674616772954;  // std dev = 4,283, 103,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5350620406578783;  // std dev = 1,549, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.05174271678395834;  // std dev = 2,558, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else return 0.07782098849813605;  // std dev = 0,466, 1.178,000 (wgt'ed) examples reached here.  /* #neg=786 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.23187313405758736;  // std dev = 1,518, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.03891576453668742;  // std dev = 2,994, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.0454246502280232;  // std dev = 2,990, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.024360990083184854;  // std dev = 4,382, 205,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.7316440863483846;  // std dev = 0,271, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.012103091268054634;  // std dev = 3,433, 66,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.06355432468562487;  // std dev = 15,996, 1.175,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0329255498228967;  // std dev = 4,478, 111,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=26 */
%   | | | else return -0.1294273272969548;  // std dev = 0,288, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.1427628035229462;  // std dev = 2,764, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.013407752522918332;  // std dev = 3,286, 115,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.017806739441525367;  // std dev = 3,031, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.5341838806788911;  // std dev = 0,918, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.04952907136516213;  // std dev = 0,466, 1.180,000 (wgt'ed) examples reached here.  /* #neg=788 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1066920465317037;  // std dev = 0,260, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0.0014934072068935758;  // std dev = 4,432, 147,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07665825939616629;  // std dev = 4,297, 94,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return -0.201462156377915;  // std dev = 0,192, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03196508820665425;  // std dev = 16,098, 1.221,000 (wgt'ed) examples reached here.  /* #neg=823 #pos=398 */
%   | | | else return 0.043346147615110193;  // std dev = 4,756, 163,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.30200119311076506;  // std dev = 0,148, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11749569296216854;  // std dev = 0,213, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.6112617005891903;  // std dev = 0,258, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7253265765304227;  // std dev = 0,080, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08243833094504333;  // std dev = 4,203, 90,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return -0.1706496530897536;  // std dev = 0,120, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3497646575485773;  // std dev = 0,976, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.09634589510980024;  // std dev = 2,440, 62,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | else return 0.020748743642753687;  // std dev = 0,464, 1.216,000 (wgt'ed) examples reached here.  /* #neg=824 #pos=392 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.18933105132223702;  // std dev = 1,448, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04098012161452411;  // std dev = 2,894, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07343297751602108;  // std dev = 3,134, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.020898002648553914;  // std dev = 4,324, 202,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=22 */


Results
   AUC ROC   = 0.642065
   AUC PR    = 0.19526
   CLL	      = -0.336919
   Precision = 0.264688 at threshold = 0.5
   Recall    = 0.177138
   F1        = 0.212239


Total learning time: 90.441 seconds
Total inference time: 222.574 seconds
AUC ROC: 0.642065


Results scoring model
   AUC ROC   = 0.692049
   AUC PR    = 0.208491
   CLL	      = -0.324417
   Precision = 0.4 at threshold = 0.5
   Recall    = 0.181818
   F1        = 0.25


Total scoring time: 16.016 seconds
Refined model CLL: -0.324417


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.642065
   AUC PR    = 0.19526
   CLL	      = -0.336919
   Precision = 0.264688 at threshold = 0.5
   Recall    = 0.177138
   F1        = 0.212239


Total learning time: 113.85 seconds
Total inference time: 222.574 seconds
AUC ROC: 0.642065
Total revision time: 113.85
Best scored revision CLL: -0.324417


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:29:28
{'Inference time': 222.574, 'Precision': [0.264688, 0.5], 'parameter': {'Inference time': 13.527, 'Precision': [1.0, 0.5], 'Learning time': 3.68, 'AUC ROC': 0.583705, 'CLL': -0.328741, 'F1': 0.286806, 'Recall': 0.16741, 'AUC PR': 0.185174}, 'Learning time': 113.85, 'AUC ROC': 0.642065, 'CLL': -0.336919, 'F1': 0.212239, 'Recall': 0.177138, 'AUC PR': 0.19526}


