Starting experiment #2 for 7_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048938;  // std dev = 0,000, 763,000 (wgt'ed) examples reached here.  /* #neg=763 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839235;  // std dev = 0,000, 685,000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360661;  // std dev = 0,000, 704,000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783617;  // std dev = 5,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783523;  // std dev = 4,10e-07, 656,000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926203;  // std dev = 0,000, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839675;  // std dev = 1,37e-07, 713,000 (wgt'ed) examples reached here.  /* #neg=713 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109272;  // std dev = 0,000, 692,000 (wgt'ed) examples reached here.  /* #neg=692 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333654;  // std dev = 2,31e-07, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420247;  // std dev = 1,92e-07, 680,000 (wgt'ed) examples reached here.  /* #neg=680 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202533;  // std dev = 2,22e-07, 669,000 (wgt'ed) examples reached here.  /* #neg=669 */


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 31946

Target test facts examples: 35095
Target test pos	 examples: 2649
Target test neg examples: 218007

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.13069402527986823;  // std dev = 14,067, 998,000 (wgt'ed) examples reached here.  /* #neg=726 #pos=272 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.12017179222237788;  // std dev = 14,007, 976,000 (wgt'ed) examples reached here.  /* #neg=704 #pos=272 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.084083211963055;  // std dev = 14,194, 1.049,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=272 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.0779289922187725;  // std dev = 14,133, 1.024,000 (wgt'ed) examples reached here.  /* #neg=752 #pos=272 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.06344313127609794;  // std dev = 14,156, 1.033,000 (wgt'ed) examples reached here.  /* #neg=761 #pos=272 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.05724641365850255;  // std dev = 14,116, 1.017,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=272 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04498050268299672;  // std dev = 14,141, 1.027,000 (wgt'ed) examples reached here.  /* #neg=755 #pos=272 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.04323529598452656;  // std dev = 14,082, 1.004,000 (wgt'ed) examples reached here.  /* #neg=732 #pos=272 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.031032483262997394;  // std dev = 14,126, 1.021,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=272 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else return 0.023073884839605697;  // std dev = 14,148, 1.030,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=272 */


Results
   AUC ROC   = 0.575311
   AUC PR    = 0.168925
   CLL	      = -0.292551
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 3.328 seconds
Total inference time: 14.163 seconds
AUC ROC: 0.575311


Results scoring model
   AUC ROC   = 0.630435
   AUC PR    = 0.280066
   CLL	      = -0.290372
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 3.82 seconds
Parameter learned model CLL: -0.290372


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.067, 726, 272], 'true': [3.37e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.007, 704, 272], 'true': [1.88e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.194, 777, 272], 'true': [4.09e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.133, 752, 272], 'true': [2.23e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.156, 761, 272], 'true': [4.21e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.116, 745, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.141, 755, 272], 'true': [1.26e-07, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.082, 732, 272], 'true': [7.6e-08, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.126, 749, 272], 'true': [0.0, 0, 96]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [14.148, 758, 272], 'true': [3.65e-08, 0, 96]}]]
[{'': [1.1842378929335002e-15, 0.19826426399894131]}, {'': [3.7007434154171886e-16, 0.20102123085192175]}, {'': [1.7393494052460785e-15, 0.19206089416495217]}, {'': [5.181040781584064e-16, 0.19506835937499195]}, {'': [1.850371707708594e-17, 0.19397819675771885]}, {'': [-4.625929269271486e-17, 0.19592202952946647]}, {'': [1.6653345369377348e-16, 0.19470404246019055]}, {'': [6.013708050052931e-17, 0.19752067427501]}, {'': [-6.013708050052931e-17, 0.19543360247726613]}, {'': [1.3877787807814457e-17, 0.19434065416155877]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3,37e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17743373714293034;  // std dev = 0,466, 783,000 (wgt'ed) examples reached here.  /* #neg=533 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.0494140901105717;  // std dev = 3,160, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.027379704330281595;  // std dev = 3,023, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1,88e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1544335468529638;  // std dev = 0,466, 783,000 (wgt'ed) examples reached here.  /* #neg=533 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.13212458942191438;  // std dev = 0,024, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.05181313863565104;  // std dev = 3,173, 132,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02144989451064074;  // std dev = 3,028, 66,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,09e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11580370516977871;  // std dev = 0,460, 825,000 (wgt'ed) examples reached here.  /* #neg=575 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.046136177603565566;  // std dev = 3,173, 133,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=11 */
%   | | | else return -0.11797336671061205;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.05964753276993511;  // std dev = 2,952, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2,23e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.10548986786142489;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.10040693803538324;  // std dev = 0,461, 814,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=249 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return -0.04260290726236644;  // std dev = 3,176, 135,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | | else return -0.10547249830059419;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04442432691565301;  // std dev = 2,966, 55,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07715728106865176;  // std dev = 0,458, 836,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.10825892039979226;  // std dev = 0,037, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.030129075447680606;  // std dev = 3,162, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010373524330128423;  // std dev = 3,018, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07261276045277228;  // std dev = 0,462, 811,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.09770421862279392;  // std dev = 0,034, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0382295735222721;  // std dev = 3,181, 143,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.02541118279368871;  // std dev = 3,080, 80,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1,26e-07, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06744243513012425;  // std dev = 0,465, 790,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return -0.08891261306138225;  // std dev = 0,037, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.005404166636799026;  // std dev = 3,131, 103,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0208524229533177;  // std dev = 3,003, 61,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7,60e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04233247127831733;  // std dev = 0,460, 822,000 (wgt'ed) examples reached here.  /* #neg=572 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.021368882694358944;  // std dev = 3,158, 124,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=11 */
%   | | | else return -0.08446639504466716;  // std dev = 0,048, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.06229045451845887;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.0026803731164781372;  // std dev = 2,892, 66,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.041711736275651834;  // std dev = 0,463, 802,000 (wgt'ed) examples reached here.  /* #neg=552 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return -0.02742121580801562;  // std dev = 3,172, 137,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=11 */
%   | | | else return -0.08952749385756557;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04666779749910302;  // std dev = 2,951, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.07250222597027754;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3,65e-08, 96,000 (wgt'ed) examples reached here.  /* #pos=96 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.021028216594498897;  // std dev = 0,458, 835,000 (wgt'ed) examples reached here.  /* #neg=585 #pos=250 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.035177708594496856;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.010861081955534334;  // std dev = 3,146, 119,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=11 */
%   | | | else return 0.0062522657183443;  // std dev = 2,860, 63,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */


Results
   AUC ROC   = 0.609173
   AUC PR    = 0.170423
   CLL	      = -0.309609
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 25.971 seconds
Total inference time: 146.875 seconds
AUC ROC: 0.609173


Results scoring model
   AUC ROC   = 0.698707
   AUC PR    = 0.283887
   CLL	      = -0.288498
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total scoring time: 11.9 seconds
Refined model CLL: -0.288498


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.609173
   AUC PR    = 0.170423
   CLL	      = -0.309609
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total learning time: 45.019 seconds
Total inference time: 146.875 seconds
AUC ROC: 0.609173
Total revision time: 45.019
Best scored revision CLL: -0.288498


Dataset: 7_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:45:29
{'Inference time': 146.875, 'Precision': [1.0, 0.5], 'parameter': {'Inference time': 14.163, 'Precision': [1.0, 0.5], 'Learning time': 3.328, 'AUC ROC': 0.575311, 'CLL': -0.292551, 'F1': 0.261811, 'Recall': 0.150623, 'AUC PR': 0.168925}, 'Learning time': 45.019, 'AUC ROC': 0.609173, 'CLL': -0.309609, 'F1': 0.261811, 'Recall': 0.150623, 'AUC PR': 0.170423}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 64082

Target test facts examples: 33542
Target test pos	 examples: 2246
Target test neg examples: 185871

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.16345058043771568;  // std dev = 21,542, 2.188,000 (wgt'ed) examples reached here.  /* #neg=1.520 #pos=668 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.13810137227765762;  // std dev = 21,608, 2.219,000 (wgt'ed) examples reached here.  /* #neg=1.551 #pos=668 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.11489300521962133;  // std dev = 21,662, 2.245,000 (wgt'ed) examples reached here.  /* #neg=1.577 #pos=668 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.10127769924062835;  // std dev = 21,598, 2.214,000 (wgt'ed) examples reached here.  /* #neg=1.546 #pos=668 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.08012245044346505;  // std dev = 21,666, 2.247,000 (wgt'ed) examples reached here.  /* #neg=1.579 #pos=668 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.07076059369322332;  // std dev = 21,595, 2.213,000 (wgt'ed) examples reached here.  /* #neg=1.545 #pos=668 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.06308141429972243;  // std dev = 21,516, 2.176,000 (wgt'ed) examples reached here.  /* #neg=1.508 #pos=668 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.056279677282089144;  // std dev = 21,438, 2.141,000 (wgt'ed) examples reached here.  /* #neg=1.473 #pos=668 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.027302596410048056;  // std dev = 21,718, 2.273,000 (wgt'ed) examples reached here.  /* #neg=1.605 #pos=668 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else return 0.028270582886281242;  // std dev = 21,621, 2.225,000 (wgt'ed) examples reached here.  /* #neg=1.557 #pos=668 */


Results
   AUC ROC   = 0.587266
   AUC PR    = 0.193231
   CLL	      = -0.334172
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total learning time: 5.027 seconds
Total inference time: 11.874 seconds
AUC ROC: 0.587266


Results scoring model
   AUC ROC   = 0.566796
   AUC PR    = 0.151416
   CLL	      = -0.334696
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total scoring time: 5.301 seconds
Parameter learned model CLL: -0.334696


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.542, 1520, 668], 'true': [4.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.608, 1551, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.662, 1577, 668], 'true': [4.3e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.598, 1546, 668], 'true': [2.6e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.666, 1579, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.595, 1545, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.516, 1508, 668], 'true': [1.46e-07, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.438, 1473, 668], 'true': [5.16e-08, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.718, 1605, 668], 'true': [0.0, 0, 103]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.621, 1557, 668], 'true': [6.83e-08, 0, 103]}]]
[{'': [1.9315724855614373e-15, 0.21209255069198976]}, {'': [-3.4492365813597096e-16, 0.21041352683337516]}, {'': [1.793603022307049e-15, 0.20901404258906003]}, {'': [6.553549504583448e-16, 0.21068359433971282]}, {'': [-2.4144656069517967e-16, 0.20890673793608922]}, {'': [-5.1738548720395646e-17, 0.2107376430079237]}, {'': [2.0695419488158259e-16, 0.21274532331316595]}, {'': [2.5869274360197823e-17, 0.21465740493700802]}, {'': [-1.2503482607428947e-16, 0.20751649705247566]}, {'': [4.527123013034619e-17, 0.21008983714178536]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995112;  // std dev = 4,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17191311862195427;  // std dev = 0,464, 2.027,000 (wgt'ed) examples reached here.  /* #neg=1.391 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07792915487973198;  // std dev = 3,950, 91,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
%   | | | else return -0.024204006076958298;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.08185106490048767;  // std dev = 0,237, 100,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109546;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15891399446332;  // std dev = 0,468, 1.969,000 (wgt'ed) examples reached here.  /* #neg=1.333 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.0836894996621683;  // std dev = 3,911, 85,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | | else return -0.013930189814372442;  // std dev = 2,291, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else return -0.06695900975285776;  // std dev = 0,247, 92,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,30e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12872111004866507;  // std dev = 0,465, 2.014,000 (wgt'ed) examples reached here.  /* #neg=1.378 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07827842189665081;  // std dev = 3,896, 83,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return -0.01962504858197009;  // std dev = 2,301, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.06282749530543766;  // std dev = 0,241, 97,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583097;  // std dev = 2,60e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7370086706078919;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.17713274353352215;  // std dev = 0,985, 33,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10290905374965444;  // std dev = 3,523, 58,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.10104751665188116;  // std dev = 20,369, 1.945,000 (wgt'ed) examples reached here.  /* #neg=1.345 #pos=600 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.05625317881711738;  // std dev = 3,925, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | | else return -0.014964444098706836;  // std dev = 2,298, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | else return -0.04391238231328095;  // std dev = 0,262, 81,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1046335613794714;  // std dev = 0,469, 1.927,000 (wgt'ed) examples reached here.  /* #neg=1.291 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.04803300760847742;  // std dev = 3,925, 87,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | | else return 0.006308000205015107;  // std dev = 2,272, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else return -0.05741802320641391;  // std dev = 0,230, 107,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06779239301336751;  // std dev = 0,461, 2.043,000 (wgt'ed) examples reached here.  /* #neg=1.407 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03474597369822339;  // std dev = 3,656, 89,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return -0.024468869685129048;  // std dev = 2,741, 55,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03966095906767599;  // std dev = 2,365, 88,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=6 */
%   | | | else return -0.10784277724949419;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325356;  // std dev = 1,46e-07, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5505609731751373;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.18227277028782224;  // std dev = 0,988, 41,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | else return 0.06306203769489802;  // std dev = 0,466, 1.937,000 (wgt'ed) examples reached here.  /* #neg=1.319 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06693837963126296;  // std dev = 3,852, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return -0.010379908302275451;  // std dev = 2,288, 47,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | | else return -0.038015734672984525;  // std dev = 0,248, 91,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 5,16e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.04227099453663079;  // std dev = 0,460, 1.957,000 (wgt'ed) examples reached here.  /* #neg=1.347 #pos=610 */
%   | | else if ( title(F, E), venue(F, B) )
%   | | | then return 0.08946715733350837;  // std dev = 4,459, 123,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=30 */
%   | | | else return 0.060328269234816184;  // std dev = 2,678, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.5318278665752852;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.015120337848411713;  // std dev = 0,324, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.49580577620513183;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.24989446949511404;  // std dev = 0,986, 37,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
%   | | else return 0.038943086543913374;  // std dev = 0,462, 1.944,000 (wgt'ed) examples reached here.  /* #neg=1.326 #pos=618 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.007751089551528411;  // std dev = 3,583, 89,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | | else return 0.11472684262497167;  // std dev = 2,591, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.04515263871001451;  // std dev = 2,370, 94,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=6 */
%   | | | else return -0.09330378160123326;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,83e-08, 103,000 (wgt'ed) examples reached here.  /* #pos=103 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.032528416693378276;  // std dev = 0,461, 1.991,000 (wgt'ed) examples reached here.  /* #neg=1.355 #pos=636 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.03347232765257513;  // std dev = 3,852, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return -0.02890021796577217;  // std dev = 2,315, 56,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02768235889728796;  // std dev = 2,353, 78,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=6 */
%   | | | else return -0.08570433415539586;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.642514
   AUC PR    = 0.203164
   CLL	      = -0.323135
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 55.218 seconds
Total inference time: 128.475 seconds
AUC ROC: 0.642514


Results scoring model
   AUC ROC   = 0.64596
   AUC PR    = 0.178495
   CLL	      = -0.328713
   Precision = 0.40678 at threshold = 0.5
   Recall    = 0.155642
   F1        = 0.225141


Total scoring time: 15.752 seconds
Refined model CLL: -0.328713


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.642514
   AUC PR    = 0.203164
   CLL	      = -0.323135
   Precision = 0.281059 at threshold = 0.5
   Recall    = 0.184328
   F1        = 0.22264


Total learning time: 81.298 seconds
Total inference time: 128.475 seconds
AUC ROC: 0.642514
Total revision time: 81.298
Best scored revision CLL: -0.328713


Dataset: 7_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:49:12
{'Inference time': 128.475, 'Precision': [0.281059, 0.5], 'parameter': {'Inference time': 11.874, 'Precision': [1.0, 0.5], 'Learning time': 5.027, 'AUC ROC': 0.587266, 'CLL': -0.334172, 'F1': 0.297195, 'Recall': 0.174533, 'AUC PR': 0.193231}, 'Learning time': 81.298, 'AUC ROC': 0.642514, 'CLL': -0.323135, 'F1': 0.22264, 'Recall': 0.184328, 'AUC PR': 0.203164}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 50581

Target test facts examples: 33252
Target test pos	 examples: 2436
Target test neg examples: 199372

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.15062466325484716;  // std dev = 18,467, 1.648,000 (wgt'ed) examples reached here.  /* #neg=1.166 #pos=482 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.13469365479557974;  // std dev = 18,422, 1.629,000 (wgt'ed) examples reached here.  /* #neg=1.147 #pos=482 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.11691799081511212;  // std dev = 18,406, 1.622,000 (wgt'ed) examples reached here.  /* #neg=1.140 #pos=482 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.0934198268716272;  // std dev = 18,478, 1.653,000 (wgt'ed) examples reached here.  /* #neg=1.171 #pos=482 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.07346990245714512;  // std dev = 18,539, 1.680,000 (wgt'ed) examples reached here.  /* #neg=1.198 #pos=482 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.07058688603512184;  // std dev = 18,413, 1.625,000 (wgt'ed) examples reached here.  /* #neg=1.143 #pos=482 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.07235261602873344;  // std dev = 18,224, 1.550,000 (wgt'ed) examples reached here.  /* #neg=1.068 #pos=482 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.029699171719038523;  // std dev = 18,607, 1.711,000 (wgt'ed) examples reached here.  /* #neg=1.229 #pos=482 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.03625560116895297;  // std dev = 18,448, 1.640,000 (wgt'ed) examples reached here.  /* #neg=1.158 #pos=482 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else return 0.027833767200591226;  // std dev = 18,467, 1.648,000 (wgt'ed) examples reached here.  /* #neg=1.166 #pos=482 */


Results
   AUC ROC   = 0.581281
   AUC PR    = 0.181212
   CLL	      = -0.32452
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 3.998 seconds
Total inference time: 12.96 seconds
AUC ROC: 0.581281


Results scoring model
   AUC ROC   = 0.585198
   AUC PR    = 0.18832
   CLL	      = -0.323842
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 4.777 seconds
Parameter learned model CLL: -0.323842


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.467, 1166, 482], 'true': [3.77e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.422, 1147, 482], 'true': [1.19e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.406, 1140, 482], 'true': [4.21e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.478, 1171, 482], 'true': [2.46e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.539, 1198, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.413, 1143, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.224, 1068, 482], 'true': [1.37e-07, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.607, 1229, 482], 'true': [6.99e-08, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.448, 1158, 482], 'true': [0.0, 0, 99]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.467, 1166, 482], 'true': [6.5e-08, 0, 99]}]]
[{'': [1.4354398702224246e-15, 0.20693367659532663]}, {'': [1.4354398702224247e-16, 0.20833790252712714]}, {'': [1.794299837778031e-15, 0.20885755510315254]}, {'': [6.100619448445304e-16, 0.20656570813521238]}, {'': [0.0, 0.20459041950113804]}, {'': [-4.485749594445077e-17, 0.20863469822486352]}, {'': [1.8840148296669324e-16, 0.2142668054110292]}, {'': [4.9343245538895844e-17, 0.20234799340467682]}, {'': [-1.1214373986112693e-16, 0.20752379535991916]}, {'': [4.261462114722823e-17, 0.2069336765953265]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995114;  // std dev = 3,77e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16960144906598784;  // std dev = 0,463, 1.432,000 (wgt'ed) examples reached here.  /* #neg=986 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.1340110040650296;  // std dev = 3,404, 58,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.06185106490048781;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010464203586619036;  // std dev = 3,954, 137,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,19e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15894492358942103;  // std dev = 0,468, 1.382,000 (wgt'ed) examples reached here.  /* #neg=936 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09910483336731898;  // std dev = 3,445, 62,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return -0.03448744112577215;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.003417968108834498;  // std dev = 3,925, 125,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4,21e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.1553834928463381;  // std dev = 0,474, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else return 0.1304943469045536;  // std dev = 0,465, 1.365,000 (wgt'ed) examples reached here.  /* #neg=932 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.147338967244625;  // std dev = 3,298, 50,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.05052344475409187;  // std dev = 1,356, 25,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.0018616488926950186;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.015323327188568967;  // std dev = 3,739, 128,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583098;  // std dev = 2,46e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11501582072784501;  // std dev = 0,467, 1.383,000 (wgt'ed) examples reached here.  /* #neg=937 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09617619839119083;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.02489593383806241;  // std dev = 1,342, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.006964380169103012;  // std dev = 3,952, 136,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=18 */
%   | | | else return -0.1110107286941486;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09405970566088154;  // std dev = 0,467, 1.389,000 (wgt'ed) examples reached here.  /* #neg=943 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08065076464782571;  // std dev = 3,368, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06505734086154114;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.00801726683952168;  // std dev = 3,956, 138,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=18 */
%   | | | else return -0.10084459548324726;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.028164133708321718;  // std dev = 0,447, 47,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else return 0.07645264385867531;  // std dev = 0,467, 1.352,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.09847075180297603;  // std dev = 3,246, 54,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.034575291657966925;  // std dev = 1,415, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.13736486160824904;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.025671532476888408;  // std dev = 3,997, 162,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 1,37e-07, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05938738773346184;  // std dev = 0,465, 1.405,000 (wgt'ed) examples reached here.  /* #neg=959 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05236245796102008;  // std dev = 3,355, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.04763100793756644;  // std dev = 1,376, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -1.2483154464426109E-4;  // std dev = 3,947, 134,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=18 */
%   | | | else return -0.08890805755096877;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 6,99e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.04438791482971286;  // std dev = 0,462, 42,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else return 0.04633841072196421;  // std dev = 0,465, 1.370,000 (wgt'ed) examples reached here.  /* #neg=937 #pos=433 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.030319035102251462;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.011818530410687842;  // std dev = 3,746, 131,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=16 */
%   | | | else return -0.028486482166901493;  // std dev = 3,771, 98,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367128;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044596331570358506;  // std dev = 0,468, 1.379,000 (wgt'ed) examples reached here.  /* #neg=933 #pos=446 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.013822128724892833;  // std dev = 0,359, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.07505685068659164;  // std dev = 1,089, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 1.9719069437615258E-4;  // std dev = 5,098, 203,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801087;  // std dev = 6,50e-08, 99,000 (wgt'ed) examples reached here.  /* #pos=99 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6559808869640242;  // std dev = 4,626, 357,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=334 */
%   | | | else return -0.24594351871973882;  // std dev = 4,124, 739,000 (wgt'ed) examples reached here.  /* #neg=723 #pos=16 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.2620550733969832;  // std dev = 2,073, 276,000 (wgt'ed) examples reached here.  /* #neg=272 #pos=4 */
%   | | | else return 0.3378861620088747;  // std dev = 6,288, 169,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.5453316003795847;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04674517173689181;  // std dev = 3,567, 72,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return -0.0803690544450147;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.957217
   AUC PR    = 0.568997
   CLL	      = -0.271395
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 53.336 seconds
Total inference time: 466.18399999999997 seconds
AUC ROC: 0.957217


Results scoring model
   AUC ROC   = 0.941076
   AUC PR    = 0.472668
   CLL	      = -0.274802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total scoring time: 21.459 seconds
Refined model CLL: -0.274802


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957217
   AUC PR    = 0.568997
   CLL	      = -0.271395
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total learning time: 83.57 seconds
Total inference time: 466.18399999999997 seconds
AUC ROC: 0.957217
Total revision time: 83.57
Best scored revision CLL: -0.274802


Dataset: 7_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 00:58:36
{'Inference time': 466.18399999999997, 'Precision': [1.0, 0.5], 'parameter': {'Inference time': 12.96, 'Precision': [1.0, 0.5], 'Learning time': 3.998, 'AUC ROC': 0.581281, 'CLL': -0.32452, 'F1': 0.279661, 'Recall': 0.162562, 'AUC PR': 0.181212}, 'Learning time': 83.57, 'AUC ROC': 0.957217, 'CLL': -0.271395, 'F1': 0.279661, 'Recall': 0.162562, 'AUC PR': 0.568997}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 67804

Target test facts examples: 34429
Target test pos	 examples: 2270
Target test neg examples: 182149

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.14232159697001087;  // std dev = 21,270, 2.224,000 (wgt'ed) examples reached here.  /* #neg=1.592 #pos=632 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.13023387304093725;  // std dev = 21,178, 2.177,000 (wgt'ed) examples reached here.  /* #neg=1.545 #pos=632 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.12460430632485385;  // std dev = 20,989, 2.086,000 (wgt'ed) examples reached here.  /* #neg=1.454 #pos=632 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.10301443050299552;  // std dev = 21,028, 2.104,000 (wgt'ed) examples reached here.  /* #neg=1.472 #pos=632 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.08071933527878312;  // std dev = 21,110, 2.143,000 (wgt'ed) examples reached here.  /* #neg=1.511 #pos=632 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.06301635190328142;  // std dev = 21,166, 2.171,000 (wgt'ed) examples reached here.  /* #neg=1.539 #pos=632 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.06906468395739603;  // std dev = 20,906, 2.049,000 (wgt'ed) examples reached here.  /* #neg=1.417 #pos=632 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.04245987008163339;  // std dev = 21,114, 2.145,000 (wgt'ed) examples reached here.  /* #neg=1.513 #pos=632 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.030037734272713362;  // std dev = 21,178, 2.177,000 (wgt'ed) examples reached here.  /* #neg=1.545 #pos=632 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else return 0.04249906501984241;  // std dev = 20,904, 2.048,000 (wgt'ed) examples reached here.  /* #neg=1.416 #pos=632 */


Results
   AUC ROC   = 0.5837
   AUC PR    = 0.186484
   CLL	      = -0.330424
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total learning time: 4.682 seconds
Total inference time: 11.935 seconds
AUC ROC: 0.5837


Results scoring model
   AUC ROC   = 0.576975
   AUC PR    = 0.170861
   CLL	      = -0.329498
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total scoring time: 5.557 seconds
Parameter learned model CLL: -0.329498


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.27, 1592, 632], 'true': [6.19e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.178, 1545, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [20.989, 1454, 632], 'true': [4.62e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.028, 1472, 632], 'true': [3.26e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.11, 1511, 632], 'true': [1.84e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.166, 1539, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [20.906, 1417, 632], 'true': [1.76e-07, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.114, 1513, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [21.178, 1545, 632], 'true': [0.0, 0, 115]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [20.904, 1416, 632], 'true': [7.6e-08, 0, 115]}]]
[{'': [3.3364615418300357e-15, 0.20341856011591986]}, {'': [-1.0503675224279742e-15, 0.2060291657321159]}, {'': [1.853589745461131e-15, 0.21118004428924586]}, {'': [9.267948727305654e-16, 0.2101519466813167]}, {'': [2.934850430313457e-16, 0.20793959824049799]}, {'': [-4.633974363652827e-17, 0.20636500446297085]}, {'': [2.703151712130816e-16, 0.21330597053495348]}, {'': [-2.703151712130816e-17, 0.20782673426028644]}, {'': [-1.5832745742480493e-16, 0.20602916573210278]}, {'': [5.0201388939572296e-17, 0.2133636474609211]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995107;  // std dev = 6,19e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17273226843284065;  // std dev = 0,464, 1.920,000 (wgt'ed) examples reached here.  /* #neg=1.316 #pos=604 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.09814893509951236;  // std dev = 2,135, 25,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.01756922495458482;  // std dev = 3,041, 69,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | else return 0.013078512564301082;  // std dev = 0,362, 71,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109551;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13814542887220127;  // std dev = 0,459, 1.872,000 (wgt'ed) examples reached here.  /* #neg=1.306 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5710891191688335;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.6482950015217752;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.015487709862416179;  // std dev = 3,426, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | | | else return 0.1803066830267632;  // std dev = 1,412, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.024426010124677194;  // std dev = 0,324, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4,62e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1175259864138617;  // std dev = 0,458, 1.991,000 (wgt'ed) examples reached here.  /* #neg=1.387 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09262555686037884;  // std dev = 2,108, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.047618340836370496;  // std dev = 2,979, 57,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | else return -0.022727191618639307;  // std dev = 0,323, 93,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 3,26e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09059860257608796;  // std dev = 0,455, 1.932,000 (wgt'ed) examples reached here.  /* #neg=1.366 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.37672215065832676;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.4676687142542194;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.060086590756807015;  // std dev = 2,297, 50,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | | | else return -0.0073354598809659485;  // std dev = 3,092, 84,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | else return 0.013205510412695732;  // std dev = 0,370, 67,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1,84e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08337623991238097;  // std dev = 0,457, 1.984,000 (wgt'ed) examples reached here.  /* #neg=1.380 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.006900843731007875;  // std dev = 2,216, 34,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.043343949174224676;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.007320809216756018;  // std dev = 3,067, 76,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=11 */
%   | | | else return -0.13932961108585204;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06735835063394897;  // std dev = 0,456, 1.992,000 (wgt'ed) examples reached here.  /* #neg=1.388 #pos=604 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0434750480788179;  // std dev = 3,341, 69,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return 0.06514432854336455;  // std dev = 1,499, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.018720877614945366;  // std dev = 3,112, 92,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.12344553555409336;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253545;  // std dev = 1,76e-07, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06585459556523747;  // std dev = 0,462, 1.826,000 (wgt'ed) examples reached here.  /* #neg=1.260 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2770502705652248;  // std dev = 2,847, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.4271301867347152;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.010470601504575692;  // std dev = 3,476, 103,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=14 */
%   | | | else return 0.010819212266878054;  // std dev = 1,569, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.008035813468205977;  // std dev = 0,377, 64,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04205532563521602;  // std dev = 0,458, 1.896,000 (wgt'ed) examples reached here.  /* #neg=1.330 #pos=566 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3955551686449857;  // std dev = 1,857, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.10410783908320434;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.04504625656936491;  // std dev = 2,150, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.0043646848124946885;  // std dev = 3,077, 79,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | else return -0.007096813130522036;  // std dev = 0,363, 70,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367136;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.048522643162572696;  // std dev = 19,648, 1.795,000 (wgt'ed) examples reached here.  /* #neg=1.233 #pos=562 */
%   | | | else return 0.0954855288065314;  // std dev = 3,233, 54,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else return 0.07813425890047099;  // std dev = 0,405, 72,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.36311928864051585;  // std dev = 0,259, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.03963895613007675;  // std dev = 0,379, 63,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801084;  // std dev = 7,60e-08, 115,000 (wgt'ed) examples reached here.  /* #pos=115 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03429834090608734;  // std dev = 0,462, 1.835,000 (wgt'ed) examples reached here.  /* #neg=1.269 #pos=566 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.21691103815970314;  // std dev = 2,200, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.07097436101512798;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.039783993165596915;  // std dev = 2,241, 37,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return -0.007060936925285656;  // std dev = 3,025, 65,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | else return -0.007256754880258708;  // std dev = 0,339, 83,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=11 */


Results
   AUC ROC   = 0.634213
   AUC PR    = 0.204078
   CLL	      = -0.315791
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 86.862 seconds
Total inference time: 491.132 seconds
AUC ROC: 0.634213


Results scoring model
   AUC ROC   = 0.623519
   AUC PR    = 0.191033
   CLL	      = -0.328043
   Precision = 0.222384 at threshold = 0.5
   Recall    = 0.204819
   F1        = 0.21324


Total scoring time: 34.188 seconds
Refined model CLL: -0.328043


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.634213
   AUC PR    = 0.204078
   CLL	      = -0.315791
   Precision = 0.522782 at threshold = 0.5
   Recall    = 0.19207
   F1        = 0.280928


Total learning time: 131.289 seconds
Total inference time: 491.132 seconds
AUC ROC: 0.634213
Total revision time: 131.289
Best scored revision CLL: -0.328043


Dataset: 7_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:09:12
{'Inference time': 491.132, 'Precision': [0.522782, 0.5], 'parameter': {'Inference time': 11.935, 'Precision': [1.0, 0.5], 'Learning time': 4.682, 'AUC ROC': 0.5837, 'CLL': -0.330424, 'F1': 0.286792, 'Recall': 0.167401, 'AUC PR': 0.186484}, 'Learning time': 131.289, 'AUC ROC': 0.634213, 'CLL': -0.315791, 'F1': 0.280928, 'Recall': 0.19207, 'AUC PR': 0.204078}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 35540

Target test facts examples: 33914
Target test pos	 examples: 2467
Target test neg examples: 214413

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1558588587636295;  // std dev = 18,129, 1.572,000 (wgt'ed) examples reached here.  /* #neg=1.104 #pos=468 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1341128161278058;  // std dev = 18,151, 1.581,000 (wgt'ed) examples reached here.  /* #neg=1.113 #pos=468 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.11359026299099176;  // std dev = 18,170, 1.589,000 (wgt'ed) examples reached here.  /* #neg=1.121 #pos=468 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1033588667467474;  // std dev = 18,077, 1.551,000 (wgt'ed) examples reached here.  /* #neg=1.083 #pos=468 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08699350031447398;  // std dev = 18,070, 1.548,000 (wgt'ed) examples reached here.  /* #neg=1.080 #pos=468 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06788478391278226;  // std dev = 18,122, 1.569,000 (wgt'ed) examples reached here.  /* #neg=1.101 #pos=468 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04695313140819156;  // std dev = 18,234, 1.616,000 (wgt'ed) examples reached here.  /* #neg=1.148 #pos=468 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03966138995701504;  // std dev = 18,215, 1.608,000 (wgt'ed) examples reached here.  /* #neg=1.140 #pos=468 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03709459345146106;  // std dev = 18,151, 1.581,000 (wgt'ed) examples reached here.  /* #neg=1.113 #pos=468 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.038784273899435145;  // std dev = 18,036, 1.535,000 (wgt'ed) examples reached here.  /* #neg=1.067 #pos=468 */


Results
   AUC ROC   = 0.583705
   AUC PR    = 0.185174
   CLL	      = -0.328726
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total learning time: 3.715 seconds
Total inference time: 13.664 seconds
AUC ROC: 0.583705


Results scoring model
   AUC ROC   = 0.574545
   AUC PR    = 0.171923
   CLL	      = -0.332067
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total scoring time: 3.69 seconds
Parameter learned model CLL: -0.332067


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.129, 1104, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.151, 1113, 468], 'true': [2.67e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.17, 1121, 468], 'true': [3.48e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.077, 1083, 468], 'true': [1.03e-07, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.07, 1080, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.122, 1101, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.234, 1148, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.215, 1140, 468], 'true': [4.21e-08, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.151, 1113, 468], 'true': [0.0, 0, 82]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'false': [18.036, 1067, 468], 'true': [5.77e-08, 0, 82]}]]
[{'': [-6.932124251318051e-16, 0.2090787250160078]}, {'': [8.665155314147563e-16, 0.2083901933179428]}, {'': [1.4730764034050857e-15, 0.20777996618510236]}, {'': [1.2997732971221344e-16, 0.21069329452392319]}, {'': [-3.4660621256590254e-16, 0.2109248242293169]}, {'': [-5.415722071342227e-17, 0.20930870218516107]}, {'': [-1.408087738548979e-16, 0.20573350651896563]}, {'': [2.166288828536891e-17, 0.20633771441300894]}, {'': [-5.144935967775116e-17, 0.2083901933179679]}, {'': [4.06179155350667e-17, 0.21193052446180383]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.524815601766179;  // std dev = 2,309, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return 0.06327714022771751;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1113134920615375;  // std dev = 3,865, 79,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0.18590223906426517;  // std dev = 15,814, 1.135,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=372 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.24524570929306072;  // std dev = 2,712, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.06341969235146805;  // std dev = 3,325, 153,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=12 */
%   | | | else return 0.09814893509951172;  // std dev = 4,271, 100,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2,67e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.8331099817957531;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16223597438899579;  // std dev = 0,469, 1.255,000 (wgt'ed) examples reached here.  /* #neg=843 #pos=412 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordvenue(B, H) )
%   | | | then return -0.13430495666288886;  // std dev = 4,47e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.026094316314361994;  // std dev = 4,572, 151,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=26 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.07362613467318758;  // std dev = 4,460, 113,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.16319121609804563;  // std dev = 0,030, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6578129697781513;  // std dev = 1,582, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.025475470121182668;  // std dev = 2,462, 49,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | else return 0.14732567917737427;  // std dev = 0,472, 1.160,000 (wgt'ed) examples reached here.  /* #neg=768 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.21973332440501284;  // std dev = 1,485, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.10022251704763942;  // std dev = 2,944, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.06562225214825683;  // std dev = 3,330, 180,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=12 */
%   | | | else return 0.043614981441008845;  // std dev = 4,355, 117,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1,03e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10414286664773853;  // std dev = 0,463, 1.305,000 (wgt'ed) examples reached here.  /* #neg=889 #pos=416 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.285179345135957;  // std dev = 1,474, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04750089430929295;  // std dev = 3,028, 56,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0703072155964105;  // std dev = 3,158, 52,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.022095974640299384;  // std dev = 4,357, 192,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09441001129885009;  // std dev = 0,465, 1.275,000 (wgt'ed) examples reached here.  /* #neg=859 #pos=416 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5200113507261017;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10199258747527296;  // std dev = 2,875, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04664598324008118;  // std dev = 3,305, 157,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=12 */
%   | | | else return 0.09555151589674787;  // std dev = 4,171, 90,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.014440600451493792;  // std dev = 3,330, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return 0.7095630666243019;  // std dev = 0,297, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.07390208101119522;  // std dev = 0,467, 1.213,000 (wgt'ed) examples reached here.  /* #neg=821 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4045712572667332;  // std dev = 0,891, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07188081199930502;  // std dev = 2,897, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.047808388623115164;  // std dev = 3,316, 172,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=12 */
%   | | | else return 0.042674840541514894;  // std dev = 4,277, 106,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.012645233202082155;  // std dev = 3,428, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.6288839272724562;  // std dev = 0,457, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0390775615693962;  // std dev = 3,334, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.06507247484378821;  // std dev = 15,814, 1.135,000 (wgt'ed) examples reached here.  /* #neg=763 #pos=372 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.21688885589314014;  // std dev = 1,500, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04204226066295095;  // std dev = 2,926, 52,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.053729358807990436;  // std dev = 3,110, 128,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=12 */
%   | | | else return 0.01966227373540492;  // std dev = 4,265, 139,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4,21e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3969203567151811;  // std dev = 1,945, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.09821778839241907;  // std dev = 2,242, 59,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03149902182017727;  // std dev = 3,462, 62,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.05372640147031544;  // std dev = 15,797, 1.130,000 (wgt'ed) examples reached here.  /* #neg=758 #pos=372 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return -0.09789477144412839;  // std dev = 0,030, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0.023722684124983552;  // std dev = 4,401, 147,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=26 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03624238427170035;  // std dev = 4,375, 107,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | | else return -0.16872165960474295;  // std dev = 0,060, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.012119184023113122;  // std dev = 3,419, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.48585926777505906;  // std dev = 0,476, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04824465381779443;  // std dev = 0,467, 1.175,000 (wgt'ed) examples reached here.  /* #neg=783 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.07533075418204122;  // std dev = 0,912, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.08564457255850876;  // std dev = 2,921, 41,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03515433197863976;  // std dev = 3,279, 157,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=12 */
%   | | | else return 0.032988125273693845;  // std dev = 4,263, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.46473971481135196;  // std dev = 1,038, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.03525765019319029;  // std dev = 2,155, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0.04366146471808261;  // std dev = 0,472, 1.151,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=392 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.29015107685508984;  // std dev = 0,911, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03097235643691234;  // std dev = 2,888, 42,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03408524821699299;  // std dev = 3,284, 164,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=12 */
%   | | | else return 0.035474729193666586;  // std dev = 4,239, 101,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */


Results
   AUC ROC   = 0.628165
   AUC PR    = 0.190102
   CLL	      = -0.339995
   Precision = 0.259172 at threshold = 0.5
   Recall    = 0.177544
   F1        = 0.210729


Total learning time: 37.428 seconds
Total inference time: 102.965 seconds
AUC ROC: 0.628165


Results scoring model
   AUC ROC   = 0.686526
   AUC PR    = 0.203148
   CLL	      = -0.323723
   Precision = 0.321321 at threshold = 0.5
   Recall    = 0.194545
   F1        = 0.242356


Total scoring time: 12.119 seconds
Refined model CLL: -0.323723


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.628165
   AUC PR    = 0.190102
   CLL	      = -0.339995
   Precision = 0.259172 at threshold = 0.5
   Recall    = 0.177544
   F1        = 0.210729


Total learning time: 56.952 seconds
Total inference time: 102.965 seconds
AUC ROC: 0.628165
Total revision time: 56.952
Best scored revision CLL: -0.323723


Dataset: 7_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 01:12:07
{'Inference time': 102.965, 'Precision': [0.259172, 0.5], 'parameter': {'Inference time': 13.664, 'Precision': [1.0, 0.5], 'Learning time': 3.715, 'AUC ROC': 0.583705, 'CLL': -0.328726, 'F1': 0.286806, 'Recall': 0.16741, 'AUC PR': 0.185174}, 'Learning time': 56.952, 'AUC ROC': 0.628165, 'CLL': -0.339995, 'F1': 0.210729, 'Recall': 0.177544, 'AUC PR': 0.190102}


