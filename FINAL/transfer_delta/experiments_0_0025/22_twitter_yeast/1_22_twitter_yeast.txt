Starting experiment #1 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( follows(C, D), recursion_accounttype(D, B) )
%   | | then return 0.8581489350995116;  // std dev = 2,67e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else return 0.8392810105712102;  // std dev = 0,136, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return 0.7748156017661786;  // std dev = 0,276, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.14185106490048738;  // std dev = 2,87e-07, 388,000 (wgt'ed) examples reached here.  /* #neg=388 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.10533994633546698;  // std dev = 4,070, 89,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | | else return 0.1785372846140751;  // std dev = 4,736, 103,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then return 0.6819234899704824;  // std dev = 0,192, 104,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=100 */
%   | else return 0.7264872595243326;  // std dev = 0,056, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), follows(F, G) )
%   | | | then return 0.684019048973414;  // std dev = 1,397, 48,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return 0.23012307523231335;  // std dev = 0,979, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.12544463852839227;  // std dev = 0,000, 428,000 (wgt'ed) examples reached here.  /* #neg=428 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.7391101054858882;  // std dev = 1,789, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.1504073991372953;  // std dev = 0,876, 97,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1176941662945931;  // std dev = 2,691, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.30166342402872265;  // std dev = 2,733, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.5577852484232504;  // std dev = 0,085, 136,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=135 */
%   | else return 0.5317967219676916;  // std dev = 0,168, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.5340811725608713;  // std dev = 1,414, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0.31410327881494937;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11231637819360613;  // std dev = 0,000, 420,000 (wgt'ed) examples reached here.  /* #neg=420 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.6481180330533819;  // std dev = 1,200, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.13070037122256004;  // std dev = 0,885, 100,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=1 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.2409738123677209;  // std dev = 2,715, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.09428008419001545;  // std dev = 2,792, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(A, D) )
%   | then return 0.41683196702485503;  // std dev = 0,091, 119,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=118 */
%   | else return 0.4312651003671681;  // std dev = 0,040, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( tweets(E, F), follows(E, G) )
%   | | then if ( tweets(A, F), follows(G, E) )
%   | | | then return 0.28142315402467405;  // std dev = 1,392, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.44730749915211937;  // std dev = 0,353, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.13478889528092733;  // std dev = 0,795, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.44992629019953423;  // std dev = 0,183, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.10159632948783591;  // std dev = 2,25e-07, 411,000 (wgt'ed) examples reached here.  /* #neg=411 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.10621321630883042;  // std dev = 3,037, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.06691305564273614;  // std dev = 4,195, 115,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.3285853250439032;  // std dev = 0,050, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return 0.2997643884874522;  // std dev = 0,165, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.08148645185305942;  // std dev = 0,073, 300,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.2995812907155804;  // std dev = 1,397, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.09269127618926082;  // std dev = 7,60e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( tweets(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.49987547458311055;  // std dev = 1,294, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.15309365947611167;  // std dev = 0,329, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.0997949641360134;  // std dev = 2,269, 50,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.06285506473948141;  // std dev = 3,539, 59,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, D), tweets(D, F) )
%   | | | then return 0.24394087672869152;  // std dev = 1,404, 112,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=110 */
%   | | | else return -0.07508826707954368;  // std dev = 1,154, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2613170715597371;  // std dev = 0,040, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return 0.05980022664631268;  // std dev = 0,902, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(G, A) )
%   | then return -0.05333101164893728;  // std dev = 0,136, 464,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=48 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.14883017804169738;  // std dev = 0,574, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.40121948597978035;  // std dev = 0,320, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.016517828911479737;  // std dev = 2,923, 126,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | | else return 0.06114807789116381;  // std dev = 3,959, 76,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(A, C), follows(D, A) )
%   | | then if ( tweets(C, E), tweets(D, E) )
%   | | | then return 0.15000358805526046;  // std dev = 2,367, 92,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=86 */
%   | | | else return 0.21771440563637554;  // std dev = 0,014, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.21574321328367968;  // std dev = 0,023, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.2256960390957812;  // std dev = 0,117, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(F, A) )
%   | then return -0.04182840160784289;  // std dev = 0,124, 461,000 (wgt'ed) examples reached here.  /* #neg=413 #pos=48 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.44767456001406886;  // std dev = 1,745, 56,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return -0.15468634176724366;  // std dev = 0,513, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.27181219728226846;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.149572017314999;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(C, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then return 0.15480839584536193;  // std dev = 0,182, 116,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=112 */
%   | | else return 0.02554240701872042;  // std dev = 0,857, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1878000077594469;  // std dev = 0,106, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(H, A), recursion_accounttype(G, B) )
%   | | | then return 0.3255838583794513;  // std dev = 0,205, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.10441322835938946;  // std dev = 1,053, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return -0.33155812595365997;  // std dev = 0,870, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(I, A) )
%   | | then return -0.052365630923639626;  // std dev = 0,107, 428,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=30 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.0011428824672607687;  // std dev = 2,309, 126,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | | else return 0.05862687801455339;  // std dev = 3,582, 68,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( follows(C, D) )
%   | | then return 0.14995500346551027;  // std dev = 0,149, 119,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=116 */
%   | | else return 0.2228649883345055;  // std dev = 0,092, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( follows(A, E), follows(E, C) )
%   | | then if ( follows(C, F), recursion_accounttype(F, B) )
%   | | | then return -0.0627701186107189;  // std dev = 1,465, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.20285694850125924;  // std dev = 0,186, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1826010098689154;  // std dev = 0,077, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( follows(A, G), follows(H, A) )
%   | then return -0.04010012558184574;  // std dev = 0,116, 412,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=44 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.15561609592473805;  // std dev = 0,007, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( follows(J, A), tweets(A, K) )
%   | | | then return -0.07311245579673922;  // std dev = 0,605, 46,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
%   | | | else return 0.011533428842972607;  // std dev = 4,406, 193,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, E) )
%   | then if ( tweets(A, F), follows(D, C) )
%   | | then return 0.1498009240544253;  // std dev = 0,092, 124,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=123 */
%   | | else if ( follows(E, C), follows(E, A) )
%   | | | then return 0.1450453281088136;  // std dev = 0,057, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.015926805861620607;  // std dev = 1,134, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.2645387479899307;  // std dev = 0,233, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then if ( follows(A, H) )
%   | | then return 0.17415105605625986;  // std dev = 0,082, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.09275443561702303;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( follows(I, A) )
%   | | then return -0.045719273778152075;  // std dev = 0,101, 466,000 (wgt'ed) examples reached here.  /* #neg=436 #pos=30 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.010284666084030359;  // std dev = 3,309, 160,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
%   | | | else return -0.045308375839918126;  // std dev = 2,858, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true,true;follows(C, D), recursion_accounttype(D, B).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
0;true;follows(A, D).;true;false
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false;follows(E, A).;true;true
0;false,false,false;follows(A, I), tweets(A, J).;false;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, C), tweets(A, D).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,true;follows(A, G), follows(F, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(H, B).;false;false
2;true;follows(C, D), follows(D, A).;false;false
2;false,false;follows(A, G), follows(G, H).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false;follows(E, A).;true;true
2;false,false,false;follows(A, I).;false;false
2;false,true,true;follows(F, E).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;true;follows(D, C), follows(A, D).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(E, F), follows(E, G).;true;false
3;false;follows(A, E), recursion_accounttype(E, B).;true;true
3;false,false,false;tweets(A, J), follows(A, K).;false;false
3;false,true,true;tweets(A, F), follows(G, E).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;true;follows(D, C), follows(D, A).;false;false
4;false,false,false;follows(A, K), follows(K, L).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false;follows(E, A).;true;true
4;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;tweets(A, I).;false;false
5;true,true;follows(A, E), tweets(A, F).;true;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;false
5;true,true,true;follows(E, D), tweets(D, F).;false;false
5;false,false,false;follows(A, J), follows(J, K).;false;false
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true,true;follows(A, C), follows(D, A).;true;false
6;false,false;follows(A, G).;true;true
6;true;follows(A, D), follows(D, C).;true;false
6;true,true,true;tweets(C, E), tweets(D, E).;false;false
6;false,false,false;tweets(A, I).;false;false
6;false;follows(F, A).;false;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true;follows(A, E), follows(C, E).;false;false
7;false,false;follows(I, A).;false;true
7;true;follows(A, C), tweets(C, D).;true;false
7;false,true;follows(F, G).;true;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
7;false,true,true;follows(H, A), recursion_accounttype(G, B).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,false;follows(A, E), follows(E, C).;true;false
8;true,true;follows(C, D).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;true;follows(D, A), follows(D, C).;true;true
8;true,false,true;follows(C, F), recursion_accounttype(F, B).;false;false
8;false;follows(A, G), follows(H, A).;false;true
8;false,false,false;follows(J, A), tweets(A, K).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;tweets(A, F), follows(D, C).;false;true
9;false,false;follows(I, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, H).;false;false
9;true,true,false;follows(E, C), follows(E, A).;false;false
9;false,false,false;follows(A, J).;false;false
9;false;follows(G, A), recursion_accounttype(G, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8025933795439567;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.35814893509951223;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.11269438964496692;  // std dev = 3,231, 55,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.2095002864508625;  // std dev = 4,107, 74,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5944734122109545;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.6975150272909652;  // std dev = 0,983, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.5309340682798304;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8277656753762211;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22141347544201373;  // std dev = 4,752, 96,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17720282603087842;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08068639764548347;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.4612637065624859;  // std dev = 0,929, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5859815224154469;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.4974929387229011;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.49848229723314025;  // std dev = 1,310, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.6777945745308814;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15140800463064802;  // std dev = 4,897, 106,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.24761722444194328;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4538458847205242;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4483626302188549;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( phenotype(A, F), interaction(E, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6142452073400709;  // std dev = 0,184, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.11424520734007093;  // std dev = 0,891, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4113460717186133;  // std dev = 0,532, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.0013932320069622037;  // std dev = 2,313, 105,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=20 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.20487588748565272;  // std dev = 2,798, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.13014860835533545;  // std dev = 4,042, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.3477513473041308;  // std dev = 0,041, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3347082298370008;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.009242471027825811;  // std dev = 1,883, 69,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.45002999724640713;  // std dev = 0,114, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.10172356666880426;  // std dev = 1,49e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.559393132453746;  // std dev = 1,587, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.24867153016051693;  // std dev = 0,013, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.13083210966175712;  // std dev = 3,802, 62,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.7562165568904593;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(D, E), phenotype(D, F) )
%   | | | then return 0.2610567543405098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2869998308231384;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2858790991152008;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2647013118710989;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.026581545267738236;  // std dev = 2,287, 122,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.4321165046580435;  // std dev = 0,268, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03712916634656159;  // std dev = 4,742, 118,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | | | else return -0.046008619168058006;  // std dev = 1,367, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(C, A), interaction(A, D) )
%   | | then if ( phenotype(C, E), phenotype(D, E) )
%   | | | then return 0.21390594480131686;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23123294445004405;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.22035246479703557;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return 0.013053670473337985;  // std dev = 2,310, 131,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.583157767282463;  // std dev = 1,694, 46,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return -0.26748195442287964;  // std dev = 0,453, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.18013310042689057;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.18820475228093533;  // std dev = 0,016, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(A, H), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17057826770294254;  // std dev = 0,107, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3498080555975124;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.025937493271733947;  // std dev = 2,298, 114,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0189790230825886;  // std dev = 3,829, 119,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | | | else return -0.11488079780380923;  // std dev = 1,188, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(D, C) )
%   | | then return 0.15935112192866566;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15512816976400468;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(C, E) )
%   | | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08142059772050503;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2453584112299615;  // std dev = 0,042, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then return -0.004752841736707115;  // std dev = 2,401, 119,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.15512816976400468;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.22317251034861765;  // std dev = 0,594, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.010968598856722918;  // std dev = 4,054, 129,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( phenotype(A, F), interaction(C, D) )
%   | | then return 0.13529507268934815;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, E), interaction(A, E) )
%   | | | then return 0.144284464504556;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12951478727402413;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22880882089308863;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return -0.17354217613263714;  // std dev = 0,821, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13586568476159155;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.002781224275334298;  // std dev = 2,428, 127,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00767129228694683;  // std dev = 4,124, 122,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987438
   AUC PR    = 0.226048
   CLL	      = -0.201124
   Precision = 0.215558 at threshold = 0.5
   Recall    = 0.815603
   F1        = 0.340993


Total learning time: 2.957 seconds
Total inference time: 13.011 seconds
AUC ROC: 0.987438


Results scoring model
   AUC ROC   = 0.985319
   AUC PR    = 0.234393
   CLL	      = -0.209387
   Precision = 0.217993 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.335106


Total scoring time: 6.301 seconds
Parameter learned model CLL: -0.209387


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), phenotype(A, J)', 'false,true,true': 'interaction(G, E), interaction(A, G)'}, {'true,false': [0.0, 0, 1], 'false,true,true,true': [0.972, 1, 17], 'false,false,true': [1.225, 3, 3], 'false,false,false,false': [4.107, 48, 26], 'true,true,true': [0.0, 0, 8], 'false,true,true,false': [0.97, 1, 16], 'false,false,false,true': [3.231, 41, 14], 'false,true,false': [8.69e-08, 104, 0], 'true,true,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'phenotype(A, J)', 'false,true,true': 'interaction(G, A), interaction(G, F)'}, {'true,false': [0.935, 1, 7], 'false,true,true,true': [0.983, 1, 29], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.225, 6, 2], 'true,true': [0.0, 0, 4], 'false,true,true,false': [0.894, 1, 4], 'false,false,true,false': [4.752, 59, 37], 'false,true,false': [0.0, 87, 0], 'false,false,true,true': [0.025, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)', 'false,true,true': 'interaction(E, F)'}, {'true,false': [0.0, 0, 3], 'false,true,true,true': [0.961, 1, 12], 'false,false,false,true': [1.309, 4, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.929, 1, 8], 'false,true,true,false': [1.31, 2, 21], 'false,false,true,false': [4.897, 69, 37], 'false,true,false': [5.27e-08, 67, 0], 'false,false,true,true': [0.038, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, H)', 'false,true': 'phenotype(E, F), interaction(G, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)', 'false,true,true': 'phenotype(A, F), interaction(E, G)'}, {'true,false': [0.027, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [2.798, 19, 14], 'false,false,false,false': [4.042, 46, 26], 'true,true': [0.041, 0, 7], 'false,true,true,false': [0.184, 0, 2], 'false,false,true,false': [2.313, 85, 20], 'false,true,false': [0.891, 1, 1], 'false,false,true,true': [0.532, 1, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), phenotype(A, I)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,false': [7.45e-09, 0, 3], 'false,false,true,false': [0.013, 27, 0], 'false,false,false,true': [3.802, 38, 24], 'false,true,false,true': [0.114, 0, 16], 'true,true': [0.041, 0, 8], 'false,false,false,false': [0.0, 0, 2], 'false,false,true,true': [1.587, 3, 17], 'false,true,false,false': [1.49e-08, 26, 0], 'false,true,true': [1.883, 52, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'interaction(E, A), phenotype(A, F)', 'true,true,true': 'interaction(D, E), phenotype(D, F)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false': 'interaction(A, G)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [5.27e-09, 0, 3], 'false,false,false,true': [4.742, 81, 37], 'false,false,false,false': [1.367, 7, 3], 'false,false,true,true': [0.268, 0, 3], 'false,true': [2.287, 89, 33], 'false,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false,false': 'interaction(G, A)', 'true,true': 'interaction(C, A), interaction(A, D)', 'true,true,true': 'phenotype(C, E), phenotype(D, E)', 'false': 'interaction(A, F)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [0.013, 0, 4], 'false,false,true,true': [1.694, 3, 43], 'false,true': [2.31, 98, 33], 'false,false,true,false': [0.453, 81, 0], 'true,true,true,false': [5.27e-09, 0, 3], 'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false,false': 'interaction(A, I)', 'true,true': 'interaction(E, A), interaction(E, C)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(G, B)'}, {'true,false': [0.016, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,false,true': [2.298, 81, 33], 'false,false,false,false': [1.188, 8, 3], 'true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.107, 0, 2], 'false,false,false,true': [3.829, 82, 37], 'false,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, A), interaction(C, E)', 'true,true': 'interaction(D, C)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false,true': 'interaction(F, C), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), interaction(A, H)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.594, 2, 3], 'false,false,false,false': [4.054, 88, 41], 'true,true,true': [0.013, 0, 7], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.042, 0, 2], 'false,true': [2.401, 88, 31], 'false,false,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,false': 'interaction(A, I)', 'true,true': 'phenotype(A, F), interaction(C, D)', 'false,true': 'interaction(H, A)', 'true,true,false': 'interaction(C, E), interaction(A, E)', 'false,false,false': 'interaction(J, A)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,false': [0.0, 0, 1], 'false,false,true': [2.428, 94, 33], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'true,true,false,true': [2.63e-09, 0, 3], 'false,true,true': [0.821, 1, 2], 'false,false,false,true': [4.124, 82, 40], 'false,true,false': [0.0, 0, 1], 'true,true,false,false': [0.072, 0, 3]}]]
[{'': [-1.6148698540002277e-16, 0.2004368906175088], 'true': [-8.881784197001253e-17, 0.0], 'false,false': [0.24999999999999992, 0.2139294513550881], 'true,true': [-2.220446049250313e-16, 0.0], 'false,true': [0.0538775510204098, 7.259150545626024e-17], 'false': [0.18104652968272986, 0.2170644718792878], 'false,false,false': [0.18975206611570195, 0.22790357925493188], 'false,true,true': [0.05246913580246885, 0.055363321799307655]}, {'': [0.07638888888888906, 0.19271209969909736], 'false,false,true': [0.00020993221917553484, 0.2352164732874454], 'true': [0.0, 0.109375], 'false,false': [0.23889875045588327, 0.1988173837693545], 'false,true': [0.053876604754928434, -1.7865657867531254e-17], 'false': [0.14611491420770137, 0.23647733086077127], 'false,false,false': [0.2222222222222223, 0.18749999999999992], 'false,true,true': [0.032242323516410626, 0.15989724998169158]}, {'': [0.07489633601183084, 0.1743277355785887], 'false,false,true': [0.0004890995863734057, 0.2262077661556086], 'true': [0.09597314795132461, 0.0], 'false,false': [0.22741156491840162, 0.24489971059408022], 'false,true': [0.07332602001591271, 4.142623226213271e-17], 'false': [0.11034946312481833, 0.2288455719196291], 'false,false,false': [0.24489971059408022, nan], 'false,true,true': [0.07100591715976316, 0.07463702903333978]}, {'': [0.0002219296303159656, 0.14896795503969326], 'false,false,true': [0.020239244599613855, 0.05096815631822781], 'true': [0.00023532167736568205, 0.00017936058802359156], 'false,false': [0.06479880311821584, 0.23137415120570914], 'false,true': [0.0169434787528982, 0.3971105973078474], 'false': [0.2695270380303728, 0.14557502279497023], 'false,false,false': [0.2372085741851596, 0.22694501699607875], 'false,true,true': [nan, 0.0169434787528982]}, {'': [0.0001831085353074726, 0.1464167414281218], 'false,false,true': [0.1258639971847597, 6.61749897086968e-06], 'true': [0.00020537707788552406, 1.850371707708594e-17], 'false,true,false': [0.0008164602037840085, 8.540177112501205e-18], 'false,false': [0.21318404001876662, 0.2377469503465688], 'false,true': [0.051361242995655476, 0.07210451887692054], 'false': [0.06152585306453932, 0.2280900507430641], 'false,false,false': [0.23319415347075018, 0.0]}, {'': [0.00013039074446344586, 0.11937789863886202], 'false,false,true': [0.024020369859930207, nan], 'true': [0.0001576519779621921, 9.25185853854297e-18], 'false,false': [0.024020369859930207, 0.19075868447917027], 'true,true,true': [0.0, 0.0], 'true,true': [0.0001076869147813686, -9.25185853854297e-18], 'false': [0.04286770717713967, 0.1905470478302924], 'false,false,false': [0.1905539640425806, 0.18680248576473715]}, {'': [6.348091477470508e-05, 0.1150787800172766], 'false,false,true': [0.062386464967828424, 0.0025288666268630847], 'true': [7.352446942702841e-05, 4.529435716313368e-05], 'false,false': [0.19136740215767878, nan], 'true,true,true': [0.0, 9.25185853854297e-18], 'true,true': [7.352446942702841e-05, nan], 'false': [0.04074541854626642, 0.19136740215767878]}, {'': [3.7406834570909783e-05, 0.08795055994432621], 'true': [0.0, 3.509069091946799e-05], 'false,false': [0.046317918525364696, 0.1250350512005741], 'true,true': [0.0, nan], 'false,true': [0.005693413834712755, 0.0], 'false': [0.010934124082860172, 0.08834060099607943], 'false,false,false': [0.12321644091529864, 0.12830683295324788], 'false,true,true': [nan, 0.005693413834712755]}, {'': [0.0020068167349095796, 0.08985773285727111], 'true,false': [0.0, 0.0008751934757434687], 'true': [2.3598281906858642e-05, 0.006555819361220382], 'false,false': [0.0, 0.1268994239226748], 'true,true': [2.4740299413275207e-05, 0.0], 'true,false,true': [nan, 0.0], 'false': [0.048424287658082536, 0.12609590415901825], 'false,false,false': [0.07046966143953158, 0.12740638147964978]}, {'': [0.001213006422652079, 0.09362618500064565], 'true': [0.0005556079180845913, 0.0], 'false,false': [0.04641134109953395, 0.13938198697714083], 'true,true': [0.0, 0.0009249833604190738], 'false,true': [0.22494754474139558, 0.0], 'false': [0.18666063812788586, 0.09196919959945013], 'false,false,false': [0.13938198697714083, nan], 'true,true,false': [2.3129646346357427e-18, 0.0017408950380910966]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;true;interaction(D, A).;true;true
0;false;interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
1;true;interaction(C, A), phenotype(A, D).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, E).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false,true;recursion_proteinclass(H, B).;true;true
2;true;interaction(D, C), interaction(A, D).;true;true
2;false,false;interaction(G, A), interaction(H, G).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false;interaction(A, E).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(D, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false,true;phenotype(J, I), recursion_proteinclass(J, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;false,false,false;interaction(K, A), interaction(L, K).;true;true
4;false,false;interaction(H, A), phenotype(A, I).;true;true
4;false,true;interaction(E, F), interaction(A, F).;true;true
4;false;interaction(A, E).;true;true
4;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,true;interaction(E, A), phenotype(A, F).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;true,true,true;interaction(D, E), phenotype(D, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true,true;phenotype(C, E), phenotype(D, E).;true;true
6;true;interaction(D, A), interaction(C, D).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,true;interaction(G, F).;true;true
7;true;interaction(C, A), phenotype(C, D).;true;true
7;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, A), interaction(C, E).;true;true
8;true,true;interaction(D, C).;true;true
8;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(G, A), interaction(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true,true;phenotype(A, F), interaction(C, D).;true;true
9;true;interaction(D, C), interaction(E, D).;true;true
9;false,true;interaction(H, A).;true;true
9;true,true,false;interaction(C, E), interaction(A, E).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8287371703936293;  // std dev = 0,169, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.10814893509951236;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.17336632640386004;  // std dev = 4,456, 92,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7499846662542919;  // std dev = 0,096, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7253711349463985;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.33112512265614163;  // std dev = 1,220, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16419712573026382;  // std dev = 4,971, 112,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | else return 0.3357079637885923;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.5796985683304614;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5508385692671709;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6141882700601665;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.4702559590677822;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5611650499768731;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.776823241532638;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19276952697805552;  // std dev = 4,781, 96,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | | else return 0.38430383395185413;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41343885708314054;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4698793127614682;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.4845101661959374;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.0664558128554102;  // std dev = 1,221, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.02771914010042406;  // std dev = 2,437, 54,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6160319024973564;  // std dev = 0,525, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17230933849278693;  // std dev = 0,219, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.030634829393275075;  // std dev = 2,359, 49,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.07614610331896147;  // std dev = 4,338, 118,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3322874934803986;  // std dev = 0,031, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10286493825714883;  // std dev = 0,015, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.05841574056591022;  // std dev = 1,667, 52,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.4047622917330523;  // std dev = 0,137, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.10403464519118655;  // std dev = 0,041, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6299233940881702;  // std dev = 1,372, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.22912050087191085;  // std dev = 0,192, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.061061408458282146;  // std dev = 4,008, 81,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.01737571907303681;  // std dev = 1,073, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2633269413186308;  // std dev = 0,028, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.3954724623146421;  // std dev = 0,091, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3071719240707965;  // std dev = 0,455, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.10175895307254129;  // std dev = 0,043, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.033409862440932754;  // std dev = 1,538, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.10876170521940122;  // std dev = 3,829, 76,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.27573273233565276;  // std dev = 2,153, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.09591514867290347;  // std dev = 0,722, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.02202772482172279;  // std dev = 1,058, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( phenotype(C, E), phenotype(D, E) )
%   | | then return 0.2055627113583267;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20293904999808865;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.03745804265501389;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5116420916109262;  // std dev = 0,141, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0888479992594169;  // std dev = 0,043, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.008190542395655252;  // std dev = 3,906, 148,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
%   | | | else return 0.023301004228015364;  // std dev = 3,710, 106,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.17401443509644193;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.1888419092827322;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2251999254549344;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.07885284942452715;  // std dev = 0,777, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.38454566843371285;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), complex(A, K) )
%   | | | then return -0.1684317505916734;  // std dev = 0,412, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.011825733134884928;  // std dev = 2,955, 98,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.07659889084312264;  // std dev = 2,869, 59,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.007568641910286401;  // std dev = 3,225, 72,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.14875509741177398;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), interaction(C, E) )
%   | | then return -0.20209428757934167;  // std dev = 0,682, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3822774359372524;  // std dev = 0,119, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07765557811038572;  // std dev = 0,007, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.03048559601759066;  // std dev = 1,682, 76,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | else return -0.01790189056337936;  // std dev = 0,837, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.22261816940015722;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.02065358779534746;  // std dev = 2,544, 50,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.0633752989840298;  // std dev = 3,997, 78,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( phenotype(A, F), interaction(C, D) )
%   | | then return 0.1323659140603095;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05533987167197907;  // std dev = 0,373, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.22493746354994848;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return -0.13133204834380255;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18647313699474344;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, L) )
%   | | | then return -0.08810854450297678;  // std dev = 1,026, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.008175761847791261;  // std dev = 2,251, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.042064808308153546;  // std dev = 3,028, 83,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | | else return -0.013058164042728679;  // std dev = 3,517, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */


Results
   AUC ROC   = 0.969267
   AUC PR    = 0.234495
   CLL	      = -0.228657
   Precision = 0.215054 at threshold = 0.5
   Recall    = 0.638298
   F1        = 0.321716


Total learning time: 7.221 seconds
Total inference time: 11.908 seconds
AUC ROC: 0.969267


Results scoring model
   AUC ROC   = 0.952141
   AUC PR    = 0.292175
   CLL	      = -0.228048
   Precision = 0.253731 at threshold = 0.5
   Recall    = 0.586207
   F1        = 0.354167


Total scoring time: 6.316 seconds
Refined model CLL: -0.228048


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987438
   AUC PR    = 0.226048
   CLL	      = -0.201124
   Precision = 0.215558 at threshold = 0.5
   Recall    = 0.815603
   F1        = 0.340993


Total learning time: 22.794999999999998 seconds
Total inference time: 13.011 seconds
AUC ROC: 0.987438
Total revision time: 22.794999999999998
Best scored revision CLL: -0.209387


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:15
{'Learning time': 22.794999999999998, 'Recall': 0.815603, 'Precision': [0.215558, 0.5], 'CLL': -0.201124, 'AUC PR': 0.226048, 'F1': 0.340993, 'Inference time': 13.011, 'AUC ROC': 0.987438, 'parameter': {'Learning time': 2.957, 'Recall': 0.815603, 'Precision': [0.215558, 0.5], 'CLL': -0.201124, 'AUC PR': 0.226048, 'F1': 0.340993, 'Inference time': 13.011, 'AUC ROC': 0.987438}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true,true;follows(C, D), recursion_accounttype(D, B).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
0;true;follows(A, D).;true;false
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false;follows(E, A).;true;true
0;false,false,false;follows(A, I), tweets(A, J).;false;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, C), tweets(A, D).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,true;follows(A, G), follows(F, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(H, B).;false;false
2;true;follows(C, D), follows(D, A).;false;false
2;false,false;follows(A, G), follows(G, H).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false;follows(E, A).;true;true
2;false,false,false;follows(A, I).;false;false
2;false,true,true;follows(F, E).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;true;follows(D, C), follows(A, D).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(E, F), follows(E, G).;true;false
3;false;follows(A, E), recursion_accounttype(E, B).;true;true
3;false,false,false;tweets(A, J), follows(A, K).;false;false
3;false,true,true;tweets(A, F), follows(G, E).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;true;follows(D, C), follows(D, A).;false;false
4;false,false,false;follows(A, K), follows(K, L).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false;follows(E, A).;true;true
4;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;tweets(A, I).;false;false
5;true,true;follows(A, E), tweets(A, F).;true;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;false
5;true,true,true;follows(E, D), tweets(D, F).;false;false
5;false,false,false;follows(A, J), follows(J, K).;false;false
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true,true;follows(A, C), follows(D, A).;true;false
6;false,false;follows(A, G).;true;true
6;true;follows(A, D), follows(D, C).;true;false
6;true,true,true;tweets(C, E), tweets(D, E).;false;false
6;false,false,false;tweets(A, I).;false;false
6;false;follows(F, A).;false;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true;follows(A, E), follows(C, E).;false;false
7;false,false;follows(I, A).;false;true
7;true;follows(A, C), tweets(C, D).;true;false
7;false,true;follows(F, G).;true;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
7;false,true,true;follows(H, A), recursion_accounttype(G, B).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,false;follows(A, E), follows(E, C).;true;false
8;true,true;follows(C, D).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;true;follows(D, A), follows(D, C).;true;true
8;true,false,true;follows(C, F), recursion_accounttype(F, B).;false;false
8;false;follows(A, G), follows(H, A).;false;true
8;false,false,false;follows(J, A), tweets(A, K).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;tweets(A, F), follows(D, C).;false;true
9;false,false;follows(I, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, H).;false;false
9;true,true,false;follows(E, C), follows(E, A).;false;false
9;false,false,false;follows(A, J).;false;false
9;false;follows(G, A), recursion_accounttype(G, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6308762078267841;  // std dev = 2,780, 44,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   | | | else return 0.7152917922423695;  // std dev = 2,619, 56,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | else return -0.14185106490048832;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.7324251143354538;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6525131830759539;  // std dev = 0,939, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.6770590915829161;  // std dev = 1,660, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0.6073194002747684;  // std dev = 2,608, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.308741135785635;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1346354921544117;  // std dev = 1,598, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3592211942800474;  // std dev = 1,513, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.44923288278163753;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6148588008491852;  // std dev = 0,042, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.49089677027805617;  // std dev = 2,803, 70,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=61 */
%   | | else return -0.11231637819360633;  // std dev = 4,21e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7564123687585864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22087673578321612;  // std dev = 1,457, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.36069352620222705;  // std dev = 0,895, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3907357924390288;  // std dev = 0,954, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(E, G) )
%   | | then if ( phenotype(A, F), interaction(G, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2060866255033134;  // std dev = 0,875, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5358501530766671;  // std dev = 0,123, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.32689376940953135;  // std dev = 1,545, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.008616588542798145;  // std dev = 4,316, 257,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=55 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.09727209894272501;  // std dev = 1,540, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.16989962059355207;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.3297959556304853;  // std dev = 0,957, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.05282422208373002;  // std dev = 0,766, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03164314611782464;  // std dev = 3,091, 116,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3984388105882196;  // std dev = 1,902, 52,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.10329588178805658;  // std dev = 0,068, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3689871822776217;  // std dev = 1,117, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.27109645377201586;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1826787088838682;  // std dev = 0,467, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( interaction(E, D), phenotype(D, F) )
%   | | | then return 0.14687893755703607;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3146738664970933;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21409325927440237;  // std dev = 0,857, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.02477134066675407;  // std dev = 4,385, 280,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=82 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.467000533042763;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.044329207181421255;  // std dev = 1,392, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, C), interaction(D, A) )
%   | | then if ( phenotype(C, E), phenotype(D, E) )
%   | | | then return 0.28002981511467856;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25444453410393564;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.18492010380168755;  // std dev = 0,924, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.035005288229702704;  // std dev = 4,308, 257,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=82 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.41878376555482905;  // std dev = 0,757, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.20619747691747148;  // std dev = 0,075, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.22725637490597014;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.23516176926841964;  // std dev = 0,069, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(H, A), recursion_proteinclass(G, B) )
%   | | | then return 0.33487518077312234;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3009241898798301;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.34839492253853277;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return -0.0020304132796074036;  // std dev = 4,470, 288,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=76 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.002558101862236369;  // std dev = 1,195, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(C, D) )
%   | | then return 0.18746603126033395;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.12502580471467553;  // std dev = 0,899, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, E), interaction(E, C) )
%   | | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25304740122515357;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21100161050482003;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return 0.007061303762843135;  // std dev = 2,568, 101,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19097916401006904;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.07285443076409719;  // std dev = 2,572, 80,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | | else return 0.03019341237513302;  // std dev = 2,203, 76,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( phenotype(A, F), interaction(D, C) )
%   | | then return 0.025768009410688852;  // std dev = 0,769, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(E, C), interaction(E, A) )
%   | | | then return 0.1806331235235067;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2082556230711895;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21756088115832775;  // std dev = 0,093, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return -0.16222767037154495;  // std dev = 1,006, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.16324709828178363;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.011183873597491026;  // std dev = 4,202, 268,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=76 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.004950654824768442;  // std dev = 1,272, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.986571
   AUC PR    = 0.308073
   CLL	      = -0.155267
   Precision = 0.175076 at threshold = 0.5
   Recall    = 0.864151
   F1        = 0.291163


Total learning time: 3.664 seconds
Total inference time: 13.465 seconds
AUC ROC: 0.986571


Results scoring model
   AUC ROC   = 0.97495
   AUC PR    = 0.164056
   CLL	      = -0.187241
   Precision = 0.077395 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.143364


Total scoring time: 9.692 seconds
Parameter learned model CLL: -0.187241


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), phenotype(A, J)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [0.0, 0, 5], 'false,true,true,true': [2.78, 10, 34], 'false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 7], 'false,true,true,false': [2.619, 8, 48], 'false,false,false,true': [1.414, 4, 4], 'false,true,false': [0.0, 184, 0], 'true,true,false': [0.913, 1, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(A, G), interaction(F, G)'}, {'true,false': [0.939, 1, 12], 'false,true,true,true': [1.66, 3, 35], 'true,true': [0.035, 0, 5], 'false,true,false': [0.0, 188, 0], 'false,true,true,false': [2.608, 8, 47], 'false,false,true,false': [1.598, 8, 4], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(F, E)'}, {'true,false': [0.926, 1, 6], 'false,true,true,true': [0.042, 0, 21], 'true,true': [1.513, 3, 11], 'false,true,false': [4.21e-08, 165, 0], 'false,true,true,false': [2.803, 9, 61], 'false,false,true,false': [1.457, 5, 4], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(H, A)', 'false,true': 'phenotype(E, F), interaction(E, G)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)', 'false,true,true': 'phenotype(A, F), interaction(G, E)'}, {'true,false': [0.954, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.54, 7, 4], 'false,false,false,false': [0.0, 2, 0], 'true,true': [0.895, 1, 7], 'false,true,true,false': [0.875, 1, 3], 'false,false,true,false': [4.316, 202, 55], 'false,true,false': [0.123, 0, 4], 'false,false,true,true': [1.545, 5, 21]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), phenotype(A, I)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,false': [0.766, 1, 2], 'false,false,true,false': [0.0, 4, 0], 'false,false,false,true': [0.467, 1, 1], 'false,true,false,true': [1.902, 4, 48], 'true,true': [0.957, 1, 15], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.117, 2, 4], 'false,true,false,false': [0.068, 101, 0], 'false,true,true': [3.091, 82, 34]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'interaction(A, E), phenotype(A, F)', 'true,true,true': 'interaction(E, D), phenotype(D, F)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false': 'interaction(G, A)'}, {'true,true,true,true': [0.927, 1, 5], 'true,false': [0.857, 1, 7], 'false,false,false,true': [1.392, 8, 4], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,true': [4.385, 198, 82], 'false,false,true,false': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.007, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false,false': 'interaction(A, G)', 'true,true': 'interaction(A, C), interaction(D, A)', 'true,true,true': 'phenotype(C, E), phenotype(D, E)', 'false': 'interaction(F, A)'}, {'true,true,true,true': [0.047, 0, 6], 'true,false': [0.924, 1, 10], 'false,false,true,true': [0.757, 1, 5], 'false,true': [4.308, 175, 82], 'false,false,true,false': [0.075, 9, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false,false': 'interaction(I, A)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(G, B)'}, {'true,false': [0.069, 0, 11], 'false,true,true,true': [0.019, 0, 2], 'false,false,true': [4.47, 212, 76], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.041, 0, 6], 'false,true,true,false': [0.06, 0, 4], 'false,false,false,true': [1.195, 10, 4], 'false,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'interaction(A, E), interaction(E, C)', 'true,true': 'interaction(C, D)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false,true': 'interaction(C, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false,false': 'interaction(J, A), phenotype(A, K)'}, {'true,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.572, 51, 29], 'false,false,false,false': [2.203, 54, 22], 'true,true,true': [0.039, 0, 7], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.568, 69, 32], 'false,false,true': [0.04, 0, 5], 'true,true,false': [0.899, 1, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,false': 'interaction(I, A)', 'true,true': 'phenotype(A, F), interaction(D, C)', 'false,true': 'interaction(A, H)', 'true,true,false': 'interaction(E, C), interaction(E, A)', 'false,false,false': 'interaction(A, J)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)'}, {'true,false': [0.093, 0, 6], 'false,false,true': [4.202, 192, 76], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.769, 1, 5], 'true,true,false,true': [0.068, 0, 4], 'false,true,true': [1.006, 2, 3], 'false,false,false,true': [1.272, 8, 4], 'false,true,false': [0.036, 0, 5], 'true,true,false,false': [0.0, 0, 1]}]]
[{'': [0.05246913580246885, 0.2071217222732379], 'true': [0.07100591715976314, 0.0], 'false,false': [0.0, 0.22222222222222207], 'true,true': [-2.5376526277146434e-16, 0.1388888888888887], 'false,true': [0.14760000000000098, -2.0756343503861623e-16], 'false': [0.20536599880976053, 0.2366863905325442], 'false,false,false': [0.24999999999999986, 0.0], 'false,true,true': [0.17561983471074558, 0.12244897959183706]}, {'': [0.05030365381819399, 0.16557359021104698], 'false,false,true': [0.25000000000000006, 0.21291230843055117], 'true': [0.0002516198818825366, 0.06778057033538434], 'false,false': [0.22192231846833882, nan], 'false,true': [0.1039234443519584, -2.362176648138631e-17], 'false': [0.162714482733293, 0.22192231846833882], 'false,true,true': [0.07249393343896297, 0.12365109171658904]}, {'': [0.15171653165942675, 0.12839555520408708], 'false,false,true': [0.0, 0.23602097943646033], 'true': [0.16359617117721661, 0.1225558499125754], 'false,false': [0.23823073876958406, nan], 'false,true': [0.08905560881972023, 1.0765799026668185e-17], 'false': [0.12311661911195847, 0.23823073876958406], 'false,true,true': [8.219406400913765e-05, 0.11220149824105162]}, {'': [0.09031086692560827, 0.09132689274272683], 'false,false,true': [0.09175165041928132, 0.07249678431493398], 'true': [0.1002271670254157, 0.08271899640834858], 'false,false': [0.08271749297793994, 0.19163093797908923], 'false,true': [0.19153032283084243, 0.0037931504747049094], 'false': [0.12484773268217922, 0.08751493293506028], 'false,false,false': [0.2154912762841029, 0.0], 'false,true,true': [nan, 0.19153032283084243]}, {'': [0.08928267806648997, 0.08689003088221144], 'false,false,true': [0.20803348939479904, 0.0], 'true': [0.05719708677795911, 0.19580512323993596], 'false,true,false': [0.06956540302208933, 4.520250296146232e-05], 'false,false': [0.2231497883101255, 0.10886091929600349], 'false,true': [0.08233803557452539, 0.08015238878970261], 'false': [0.08140548514889172, 0.20477686194375666], 'false,false,false': [0.10886091929600349, nan]}, {'': [0.08792200613770594, 0.07291045758591715], 'false,false,true': [nan, 0.0], 'true,true': [0.14320389095210814, 1.0095679596078266e-05], 'false,false': [0.0, 0.16141842086455607], 'true': [0.08509641496328005, 0.09175971281704012], 'true,true,true': [0.14320389095210814, nan], 'false,false,false': [0.16141842086455607, nan], 'false': [0.06866839339898748, 0.1616869008954755]}, {'': [0.04958576086918223, 0.0755193093081641], 'false,false,true': [0.09542296887524175, 0.0006312916172122965], 'true': [0.000392713917382413, 0.0776377772140202], 'false,false': [0.132292335346557, nan], 'true,true,true': [0.00036465100774634346, 0.0], 'true,true': [0.000392713917382413, nan], 'false': [0.07220144793872753, 0.132292335346557]}, {'': [0.0003924344627500445, 0.07156569761056962], 'true': [0.00027753816113469204, 0.00043304802212468745], 'false,false': [0.06937650234030493, 0.10203947070309922], 'true,true': [0.00027753816113469204, nan], 'false,true': [0.0009146581768583739, 0.0], 'false': [0.0009440448786930558, 0.07089069199173945], 'false,false,false': [0.10203947070309922, nan], 'false,true,true': [0.00018278341740338155, 0.0008963722957070624]}, {'': [0.04919372112986873, 0.07014460478850129], 'true,false': [0.0, 0.0], 'true': [0.054980759368347995, 0.00044196212932452045], 'false,false': [0.0003216335590275121, 0.07395821338559638], 'true,true': [0.00021791182266139058, 0.10107881942165635], 'true,false,true': [nan, 0.0], 'false': [0.0652903348984587, 0.07225199282841537], 'false,false,false': [0.08268723781346138, 0.06383645252199538]}, {'': [0.043001979453542796, 0.07088610859829501], 'true': [0.06067444067354324, 0.0014566299051573899], 'false,false': [0.06589200604033936, 0.13484297957781302], 'true,true': [0.09867240242863062, 0.0010451620476711776], 'false,true': [0.20244115940890248, 0.0002531582846205527], 'false': [0.12783061510424595, 0.06884864152995965], 'false,false,false': [0.13484297957781302, nan], 'true,true,false': [0.0011538520633366314, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true,true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;true;interaction(A, D).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false;interaction(E, A).;true;true
0;false,false,false;interaction(A, I), phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;true;interaction(A, C), phenotype(A, D).;true;true
1;false;interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false;interaction(E, A).;true;true
2;false,false;recursion_proteinclass(H, B).;true;true
2;false,true,true;interaction(F, E).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;phenotype(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false,true;phenotype(J, I), recursion_proteinclass(J, B).;true;true
4;false,false;interaction(A, H), phenotype(A, I).;true;true
4;false,true;interaction(F, E), interaction(F, A).;true;true
4;false;interaction(E, A).;true;true
4;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true,true;interaction(A, E), phenotype(A, F).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(G, A).;true;true
5;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true,true;phenotype(C, E), phenotype(D, E).;true;true
6;true;interaction(A, D), interaction(D, C).;true;true
6;false;interaction(F, A).;true;true
6;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,true;interaction(F, G).;true;true
7;true;interaction(A, C), phenotype(C, D).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(H, A), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(A, E), interaction(E, C).;true;true
8;true,true;interaction(C, D).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(A, G), interaction(H, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true,true;phenotype(A, F), interaction(D, C).;true;true
9;true;interaction(C, D), interaction(D, E).;true;true
9;false,true;interaction(A, H).;true;true
9;true,true,false;interaction(E, C), interaction(E, A).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.6653778507621636;  // std dev = 3,594, 83,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.14185106490048827;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5528067455442879;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.29090198363952596;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.641522634103616;  // std dev = 0,311, 92,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.1570669878174392;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.009599678849227494;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.07373365448410585;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.297668593915818;  // std dev = 0,951, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5926858383383037;  // std dev = 0,084, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06378554722824138;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5899924150216419;  // std dev = 0,046, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.49583632659700444;  // std dev = 1,620, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.45776665457236554;  // std dev = 3,035, 72,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=61 */
%   | | else return -0.11231637819360644;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.47510013037762927;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28060836450598736;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.20233259941093573;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.42409138327311363;  // std dev = 0,020, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5227598336890246;  // std dev = 0,115, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3214361596371878;  // std dev = 0,721, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return 0.16915463047365684;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5250469066946434;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.003545638691395029;  // std dev = 3,193, 136,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
%   | | | else return 0.05528338074432205;  // std dev = 3,810, 154,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.16594576322540794;  // std dev = 1,479, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.15385710036803804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.32769477170673666;  // std dev = 0,015, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4086785180469182;  // std dev = 0,121, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.040917115374413754;  // std dev = 3,165, 118,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return -0.08669306737165376;  // std dev = 0,701, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4218189663716932;  // std dev = 1,666, 51,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.10486808256069935;  // std dev = 0,021, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.37386345292030154;  // std dev = 1,145, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.2197978759169467;  // std dev = 0,125, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0029378868827568683;  // std dev = 0,537, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.29193709529239315;  // std dev = 0,106, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.28194018472154436;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2691415665688439;  // std dev = 0,033, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10572713898184617;  // std dev = 1,32e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.06605999706682358;  // std dev = 2,255, 54,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.03090365173151243;  // std dev = 3,773, 217,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=64 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4604490741567262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.031064025266389024;  // std dev = 1,072, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1027522625860672;  // std dev = 0,924, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.23093548271301653;  // std dev = 0,038, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.09218961871125368;  // std dev = 0,715, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.07365411872157994;  // std dev = 0,791, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22477564721094048;  // std dev = 0,069, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.06791722853113166;  // std dev = 0,267, 65,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | else return 0.008871532228411218;  // std dev = 0,269, 216,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=61 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.2615181586453023;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33133702724513553;  // std dev = 0,752, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1948902214282755;  // std dev = 0,086, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.19154221786201905;  // std dev = 0,088, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.3081529143536293;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.21175169132379704;  // std dev = 0,039, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3244447729565094;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2985210537417952;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.25668509821454905;  // std dev = 1,802, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.07634548464777248;  // std dev = 2,063, 105,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.014046719459798728;  // std dev = 1,994, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.07657029247376049;  // std dev = 2,369, 90,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(C, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.17357877443411915;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13972818442782323;  // std dev = 0,797, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26363688144152897;  // std dev = 0,085, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21835827437949085;  // std dev = 8,42e-05, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(A, G), complex(A, H) )
%   | | then return -0.032850799514897416;  // std dev = 0,212, 73,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else return 0.03854309274757799;  // std dev = 0,246, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.053565246060718996;  // std dev = 0,834, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0642775245130477;  // std dev = 2,592, 96,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return 0.004631171328169918;  // std dev = 1,834, 67,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( phenotype(A, F), interaction(D, C) )
%   | | then return 0.16441562075604593;  // std dev = 0,106, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, C), interaction(E, A) )
%   | | | then return 0.19413245223747058;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.26349277210560246;  // std dev = 0,632, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.21161559662439944;  // std dev = 0,201, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.18732876030937218;  // std dev = 0,032, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.22574044646104602;  // std dev = 1,237, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.08438013919303401;  // std dev = 1,322, 73,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=4 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.02456963181759831;  // std dev = 3,011, 126,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | | else return -0.005266397071294861;  // std dev = 2,508, 87,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */


Results
   AUC ROC   = 0.984525
   AUC PR    = 0.282143
   CLL	      = -0.156065
   Precision = 0.188852 at threshold = 0.5
   Recall    = 0.856604
   F1        = 0.309475


Total learning time: 7.489 seconds
Total inference time: 34.157 seconds
AUC ROC: 0.984525


Results scoring model
   AUC ROC   = 0.974531
   AUC PR    = 0.180442
   CLL	      = -0.184636
   Precision = 0.082516 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.152108


Total scoring time: 10.96 seconds
Refined model CLL: -0.184636


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984525
   AUC PR    = 0.282143
   CLL	      = -0.156065
   Precision = 0.188852 at threshold = 0.5
   Recall    = 0.856604
   F1        = 0.309475


Total learning time: 31.805 seconds
Total inference time: 34.157 seconds
AUC ROC: 0.984525
Total revision time: 31.805
Best scored revision CLL: -0.184636


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:35
{'Learning time': 31.805, 'Recall': 0.856604, 'Precision': [0.188852, 0.5], 'CLL': -0.156065, 'AUC PR': 0.282143, 'F1': 0.309475, 'Inference time': 34.157, 'AUC ROC': 0.984525, 'parameter': {'Learning time': 3.664, 'Recall': 0.864151, 'Precision': [0.175076, 0.5], 'CLL': -0.155267, 'AUC PR': 0.308073, 'F1': 0.291163, 'Inference time': 13.465, 'AUC ROC': 0.986571}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true,true;follows(C, D), recursion_accounttype(D, B).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
0;true;follows(A, D).;true;false
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false;follows(E, A).;true;true
0;false,false,false;follows(A, I), tweets(A, J).;false;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, C), tweets(A, D).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,true;follows(A, G), follows(F, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(H, B).;false;false
2;true;follows(C, D), follows(D, A).;false;false
2;false,false;follows(A, G), follows(G, H).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false;follows(E, A).;true;true
2;false,false,false;follows(A, I).;false;false
2;false,true,true;follows(F, E).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;true;follows(D, C), follows(A, D).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(E, F), follows(E, G).;true;false
3;false;follows(A, E), recursion_accounttype(E, B).;true;true
3;false,false,false;tweets(A, J), follows(A, K).;false;false
3;false,true,true;tweets(A, F), follows(G, E).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;true;follows(D, C), follows(D, A).;false;false
4;false,false,false;follows(A, K), follows(K, L).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false;follows(E, A).;true;true
4;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;tweets(A, I).;false;false
5;true,true;follows(A, E), tweets(A, F).;true;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;false
5;true,true,true;follows(E, D), tweets(D, F).;false;false
5;false,false,false;follows(A, J), follows(J, K).;false;false
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true,true;follows(A, C), follows(D, A).;true;false
6;false,false;follows(A, G).;true;true
6;true;follows(A, D), follows(D, C).;true;false
6;true,true,true;tweets(C, E), tweets(D, E).;false;false
6;false,false,false;tweets(A, I).;false;false
6;false;follows(F, A).;false;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true;follows(A, E), follows(C, E).;false;false
7;false,false;follows(I, A).;false;true
7;true;follows(A, C), tweets(C, D).;true;false
7;false,true;follows(F, G).;true;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
7;false,true,true;follows(H, A), recursion_accounttype(G, B).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,false;follows(A, E), follows(E, C).;true;false
8;true,true;follows(C, D).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;true;follows(D, A), follows(D, C).;true;true
8;true,false,true;follows(C, F), recursion_accounttype(F, B).;false;false
8;false;follows(A, G), follows(H, A).;false;true
8;false,false,false;follows(J, A), tweets(A, K).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;tweets(A, F), follows(D, C).;false;true
9;false,false;follows(I, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, H).;false;false
9;true,true,false;follows(E, C), follows(E, A).;false;false
9;false,false,false;follows(A, J).;false;false
9;false;follows(G, A), recursion_accounttype(G, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995121;  // std dev = 1,69e-07, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.14185106490048804;  // std dev = 0,000, 148,000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.10814893509951237;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6285643213018637;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.6668418332635865;  // std dev = 1,376, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else return -0.12544463852839105;  // std dev = 8,16e-08, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.281970425023355;  // std dev = 0,619, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.14343007108475875;  // std dev = 3,698, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3301953470876925;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5628067293505384;  // std dev = 0,026, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5776873145590464;  // std dev = 2,11e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5643358447424281;  // std dev = 0,043, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.11231637819360624;  // std dev = 9,54e-08, 150,000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.6592335753457994;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13674390031017541;  // std dev = 3,661, 62,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2784776868454798;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.42015253248519224;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.43468885870668816;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(E, G) )
%   | | then if ( phenotype(A, F), interaction(G, E) )
%   | | | then return 0.415333887361365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6596370235584235;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4370857812520573;  // std dev = 0,073, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03343840877382795;  // std dev = 3,177, 191,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.054030330553976796;  // std dev = 2,598, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.1269708068646739;  // std dev = 2,681, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32466212955228285;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33201414390552264;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06326374326090482;  // std dev = 1,186, 24,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3842010730391494;  // std dev = 1,001, 49,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.10468932063171484;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7658902736852009;  // std dev = 0,280, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20462303116198777;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1313952303363563;  // std dev = 2,549, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.034187474119547444;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( interaction(E, D), phenotype(D, F) )
%   | | | then return 0.25251497104252074;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.26478974212513956;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2628702093562424;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.00898795654915056;  // std dev = 2,908, 211,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.31781092961247825;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3617367803389281;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09039099264132656;  // std dev = 3,258, 56,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.6936376257812491;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, C), interaction(D, A) )
%   | | then if ( phenotype(C, E), phenotype(D, E) )
%   | | | then return 0.20787887955076378;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22112466044605417;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.21542033478968264;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.013151539912802539;  // std dev = 2,738, 211,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=56 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6317930345518857;  // std dev = 0,599, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.24625828308507045;  // std dev = 0,443, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.17571722912467203;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09068811634330236;  // std dev = 0,954, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(H, A), recursion_proteinclass(G, B) )
%   | | | then return 0.23800784067085967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06244712721963499;  // std dev = 0,247, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14126058240365758;  // std dev = 0,323, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then return 0.00974289765850766;  // std dev = 2,750, 198,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=52 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.002817343591315275;  // std dev = 2,752, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.37560394501282324;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(C, D) )
%   | | then return 0.15577395587896914;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, E), interaction(E, C) )
%   | | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.18111794594961483;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1415112017617109;  // std dev = 0,315, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0087645435665474;  // std dev = 1,601, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16848811356295298;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.0010540596390353825;  // std dev = 1,381, 57,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.02337637529485019;  // std dev = 3,335, 134,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( phenotype(A, F), interaction(D, C) )
%   | | then return 0.14025624833552813;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, C), interaction(E, A) )
%   | | | then return 0.1510087468303617;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14178426686397907;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17797624923823818;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.16919858787183417;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.02056176668349195;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01979932953994736;  // std dev = 2,764, 172,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.023736503521253997;  // std dev = 2,651, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978911
   AUC PR    = 0.181245
   CLL	      = -0.193088
   Precision = 0.092787 at threshold = 0.5
   Recall    = 0.98917
   F1        = 0.169659


Total learning time: 2.382 seconds
Total inference time: 19.196 seconds
AUC ROC: 0.978911


Results scoring model
   AUC ROC   = 0.995367
   AUC PR    = 0.494246
   CLL	      = -0.153069
   Precision = 0.278912 at threshold = 0.5
   Recall    = 0.891304
   F1        = 0.42487


Total scoring time: 3.654 seconds
Parameter learned model CLL: -0.153069


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), phenotype(A, J)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 8], 'false,false,true': [0.0, 0, 2], 'false,false,false,false': [2.664, 20, 11], 'true,true,true': [0.0, 0, 5], 'false,true,true,false': [1.69e-07, 0, 48], 'false,false,false,true': [2.598, 27, 9], 'false,true,false': [0.0, 148, 0], 'true,true,false': [0.0, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'phenotype(A, J)', 'false,true,true': 'interaction(A, G), interaction(F, G)'}, {'true,false': [0.953, 1, 10], 'false,true,true,true': [7.3e-08, 0, 20], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1], 'true,true': [0.0, 0, 4], 'false,true,true,false': [1.376, 2, 36], 'false,false,true,false': [3.698, 45, 20], 'false,true,false': [8.16e-08, 127, 0], 'false,false,true,true': [0.619, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)', 'false,true,true': 'interaction(F, E)'}, {'true,false': [2.11e-08, 0, 8], 'false,true,true,true': [0.0, 0, 4], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.026, 0, 6], 'false,true,true,false': [0.043, 0, 52], 'false,false,true,false': [3.661, 42, 20], 'false,true,false': [9.54e-08, 150, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(H, A)', 'false,true': 'phenotype(E, F), interaction(E, G)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)', 'false,true,true': 'phenotype(A, F), interaction(G, E)'}, {'true,false': [0.003, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [2.598, 27, 9], 'false,false,false,false': [2.681, 21, 11], 'true,true': [0.02, 0, 5], 'false,true,true,false': [0.0, 0, 1], 'false,false,true,false': [3.177, 142, 49], 'false,true,false': [0.073, 0, 4], 'false,false,true,true': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), phenotype(A, I)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,false': [1.05e-08, 0, 8], 'false,false,true,false': [0.0, 21, 0], 'false,false,false,true': [2.549, 18, 11], 'false,true,false,true': [1.001, 1, 48], 'true,true': [0.021, 0, 6], 'false,false,false,false': [0.816, 2, 1], 'false,false,true,true': [0.28, 0, 10], 'false,true,false,false': [0.0, 86, 0], 'false,true,true': [1.186, 16, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'interaction(A, E), phenotype(A, F)', 'true,true,true': 'interaction(E, D), phenotype(D, F)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false': 'interaction(G, A)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 4], 'false,false,false,true': [3.258, 37, 19], 'false,false,false,false': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,true': [2.908, 155, 56], 'false,false,true,false': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.007, 0, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false,false': 'interaction(A, G)', 'true,true': 'interaction(A, C), interaction(D, A)', 'true,true,true': 'phenotype(C, E), phenotype(D, E)', 'false': 'interaction(F, A)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [0.003, 0, 9], 'false,false,true,true': [0.599, 0, 22], 'false,true': [2.738, 155, 56], 'false,false,true,false': [0.443, 37, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false,false': 'interaction(I, A)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(G, B)'}, {'true,false': [0.954, 1, 10], 'false,true,true,true': [0.0, 0, 1], 'false,false,true': [2.75, 146, 52], 'false,false,false,false': [0.0, 0, 1], 'true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.247, 1, 2], 'false,false,false,true': [2.752, 50, 19], 'false,true,false': [0.323, 1, 3], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'interaction(A, E), interaction(E, C)', 'true,true': 'interaction(C, D)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false,true': 'interaction(C, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false,false': 'interaction(J, A), phenotype(A, K)'}, {'true,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.381, 44, 13], 'false,false,false,false': [3.335, 91, 43], 'true,true,true': [0.018, 0, 5], 'true,false,true,true': [0.023, 0, 2], 'true,false,false': [0.315, 1, 7], 'false,true': [1.601, 51, 17], 'false,false,true': [0.003, 0, 5], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,false': 'interaction(I, A)', 'true,true': 'phenotype(A, F), interaction(D, C)', 'false,true': 'interaction(A, H)', 'true,true,false': 'interaction(E, C), interaction(E, A)', 'false,false,false': 'interaction(A, J)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)'}, {'true,false': [0.034, 0, 4], 'false,false,true': [2.764, 120, 52], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.034, 0, 5], 'true,true,false,true': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,false,false,true': [2.651, 45, 20], 'false,true,false': [0.913, 1, 5], 'true,true,false,false': [0.017, 0, 4]}]]
[{'': [-2.5376526277146434e-16, 0.20408163265306192], 'true': [-2.9605947323337506e-16, 0.0], 'false,false': [0.0, 0.2094007574069944], 'true,true': [0.0, 0.0], 'false,true': [-1.2688263138573217e-16, -1.0802169969325848e-16], 'false': [0.19915417147251122, 0.21718126444024455], 'false,false,false': [0.1875000000000001, 0.22892819979188297], 'false,true,true': [-2.220446049250313e-16, 5.921189464667501e-16]}, {'': [0.06222222222222236, 0.168400593474018], 'false,false,true': [0.19140886379807281, 0.21041377638289835], 'true': [0.0, 0.08264462809917356], 'false,false': [0.21040230112574962, 0.25000000000000006], 'false,true': [0.03329369797859688, 5.245148147835385e-17], 'false': [0.1517975071159365, 0.2124888098283032], 'false,false,false': [nan, 0.25000000000000006], 'false,true,true': [2.6645352591003756e-16, 0.049861495844874704]}, {'': [0.00010167787476169008, 0.1222999837364056], 'false,false,true': [0.0, 0.21621176523798538], 'true': [0.00011071590807384031, 5.551115123125783e-17], 'false,false': [0.21704431180945796, 0.24999999999999994], 'false,true': [3.853769072202441e-05, 6.069219201284189e-17], 'false': [0.0904697462907527, 0.2185893615074469], 'false,false,false': [0.24999999999999994, nan], 'false,true,true': [0.0, 3.575567991239618e-05]}, {'': [7.761879085456589e-05, 0.09609983004436627], 'false,false,true': [-3.700743415417188e-17, 0.05285072807799038], 'true': [7.911317997963963e-05, 1.3225818102430903e-06], 'false,false': [0.054279313726763444, 0.20629485917141857], 'false,true': [0.014921005588929614, 0.001326985135677028], 'false': [0.008098346304770096, 0.09419473133173094], 'false,false,false': [0.18750000000000008, 0.2246224394004478], 'false,true,true': [0.0, 0.0]}, {'': [4.5950225991266335e-05, 0.10636118977385593], 'false,false,true': [0.007825186719313227, -4.229421046191072e-17], 'true': [7.63302710938089e-05, 1.3877787807814457e-17], 'false,true,false': [0.020445518395330906, -3.872871016134267e-18], 'false,false': [0.20834961873977503, 0.22473711490033962], 'false,true': [0.05859844266534122, 0.06268594398478942], 'false': [0.06208051941134217, 0.21672127454468715], 'false,false,false': [0.22411139984917774, 0.2222222222222222]}, {'': [3.110363639475493e-05, 0.07408340336680952], 'false,false,true': [0.0, 0.0], 'true': [4.09901347775965e-05, 0.0], 'false,false': [0.0004823700905105949, 0.192468729175963], 'true,true,true': [0.0, nan], 'true,true': [0.0, 8.048889243744695e-06], 'false': [0.040089236813332166, 0.1878282486702931], 'false,false,false': [0.1895213462000637, 0.0]}, {'': [1.636441315775291e-05, 0.07001245748075328], 'false,false,true': [0.016300793364073227, 0.005292884557822061], 'true': [2.8072113844174185e-05, 1.312067108942087e-06], 'false,false': [0.18968277148208693, nan], 'true,true,true': [0.0, 0.0], 'true,true': [2.8072113844174185e-05, nan], 'false': [0.0355397380332135, 0.18968277148208693]}, {'': [0.062097396484891994, 0.05642296842582045], 'true': [0.0, 0.08275028126184049], 'false,false': [0.0381812715447199, 0.11020960207368108], 'true,true': [0.0, nan], 'false,true': [0.02102434547915015, 0.026149910847748755], 'false': [0.023892036979432263, 0.05700451831152685], 'false,false,false': [0.10976109023103289, 0.0], 'false,true,true': [0.0, 0.020327069611991107]}, {'': [0.006844969771455174, 0.05974020959571096], 'true,false': [0.0002702069765056145, 0.012394712859450208], 'true': [6.649486210905665e-05, 0.01022080275248787], 'false,false': [1.3797543970350824e-06, 0.0683386865397214], 'true,true': [6.649486210905665e-05, nan], 'true,false,true': [0.0002702069765056145, nan], 'false': [0.03770375399062412, 0.06717278605034724], 'false,false,false': [0.03347222368480868, 0.08299182673662883]}, {'': [0.0004542858349502981, 0.06367416155319804], 'true': [0.0001519215251522682, 0.0002827564184533296], 'false,false': [0.044427535993927826, 0.10812089405932201], 'true,true': [0.00022723944424699605, 7.091532987210658e-05], 'false,true': [0.0, 0.13901806145192266], 'false': [0.12356760273360265, 0.06189926392155623], 'false,false,false': [0.10812089405932201, nan], 'true,true,false': [0.0, 7.162595621009252e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true,true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;true;interaction(A, D).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;true;interaction(A, C), phenotype(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(A, G), interaction(F, G).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false,true;recursion_proteinclass(H, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false,false;interaction(A, G), interaction(G, H).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true,true;interaction(F, E).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
3;true;interaction(D, C), interaction(A, D).;true;true
3;false,false;interaction(H, A).;true;true
3;false,true;phenotype(E, F), interaction(E, G).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true,true;phenotype(A, F), interaction(G, E).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false,true;phenotype(J, I), recursion_proteinclass(J, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false,false;interaction(A, H), phenotype(A, I).;true;true
4;false,true;interaction(F, E), interaction(F, A).;true;true
4;false;interaction(E, A).;true;true
4;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false,true;phenotype(A, I).;true;true
5;true,true;interaction(A, E), phenotype(A, F).;true;true
5;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(G, A).;true;true
5;false,false,false;interaction(A, J), interaction(J, K).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true,true;phenotype(C, E), phenotype(D, E).;true;true
6;true;interaction(A, D), interaction(D, C).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(C, D).;true;true
7;false,false;interaction(I, A).;true;true
7;false,true;interaction(F, G).;true;true
7;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
7;false,true,true;interaction(H, A), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(A, E), interaction(E, C).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(A, G), interaction(H, A).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true,true;phenotype(A, F), interaction(D, C).;true;true
9;true;interaction(C, D), interaction(D, E).;true;true
9;false,true;interaction(A, H).;true;true
9;true,true,false;interaction(E, C), interaction(E, A).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995121;  // std dev = 1,69e-07, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.14185106490048818;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.11529179224236952;  // std dev = 2,586, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.224815601766179;  // std dev = 2,639, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3861400788776212;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7019295525618316;  // std dev = 0,131, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.12544463852839124;  // std dev = 4,93e-09, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7413402823553742;  // std dev = 0,949, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.15647303063018383;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.24151457009773244;  // std dev = 1,265, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1285214297455284;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6087618559780185;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5596943071262317;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.265675361847232;  // std dev = 0,569, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08308238675579528;  // std dev = 3,552, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else return 0.142817663578202;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4314611468495848;  // std dev = 0,030, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(E, G) )
%   | | then if ( phenotype(A, F), interaction(G, E) )
%   | | | then return 0.42073112050033334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5293234106003492;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3535166369879654;  // std dev = 0,534, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4207311205003334;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04138716240836643;  // std dev = 3,116, 179,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=49 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.027845851484933102;  // std dev = 1,366, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.22483311848164161;  // std dev = 2,949, 39,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.3202066924148155;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E) )
%   | | then return 0.31577096950214334;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11881275427744786;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return -0.00440821866417191;  // std dev = 0,202, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0.07146696544734403;  // std dev = 0,242, 137,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5513766096889239;  // std dev = 0,978, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.17302284719826708;  // std dev = 0,035, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.2638629093863659;  // std dev = 2,261, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return -0.003692996722658548;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.2552682638352066;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2536251553393779;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.029491956055017088;  // std dev = 1,252, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.020439011551646572;  // std dev = 0,236, 200,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.27622363953529916;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4544470621171317;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.036505126846074556;  // std dev = 3,108, 65,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.2470055726889899;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(C, E), phenotype(D, E) )
%   | | then return 0.20982554141255083;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21009809669225332;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.03314422028425887;  // std dev = 0,918, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2499657580136658;  // std dev = 0,186, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(I, K), interaction(L, J) )
%   | | | then return 0.01245189187822742;  // std dev = 2,457, 129,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | | | else return 0.07668293915307414;  // std dev = 1,231, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.022141003248248123;  // std dev = 1,955, 53,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.06846998351241557;  // std dev = 2,724, 48,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else return -0.07965398291146274;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.17714624313422056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.18804965891063538;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.32286689645469885;  // std dev = 0,152, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2839227106973426;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.31413173845495124;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.05627252948101454;  // std dev = 0,665, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.023826759451482816;  // std dev = 2,967, 174,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=49 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -5.485028274097876E-4;  // std dev = 3,219, 66,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return -0.0670786980496536;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15253562437477813;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.25769242202741804;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1948133336376233;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.0467288980151;  // std dev = 0,674, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.03711782888560756;  // std dev = 1,326, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return -0.05309514089372476;  // std dev = 0,248, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.21949672433693243;  // std dev = 0,171, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.03302584209647672;  // std dev = 2,208, 38,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.060891700051029694;  // std dev = 3,402, 130,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( phenotype(A, F), interaction(D, C) )
%   | | then return 0.14724619175188444;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15017945747756495;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1925995718504516;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.21264742196359288;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18526693893506793;  // std dev = 0,151, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return -0.016693099076056456;  // std dev = 2,986, 98,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
%   | | | else return -0.09618368325417812;  // std dev = 1,265, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.06844884095374905;  // std dev = 1,337, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.024498206556558724;  // std dev = 2,732, 113,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */


Results
   AUC ROC   = 0.975106
   AUC PR    = 0.175243
   CLL	      = -0.195314
   Precision = 0.102433 at threshold = 0.5
   Recall    = 0.942238
   F1        = 0.184779


Total learning time: 4.783 seconds
Total inference time: 17.176 seconds
AUC ROC: 0.975106


Results scoring model
   AUC ROC   = 0.987716
   AUC PR    = 0.458289
   CLL	      = -0.178006
   Precision = 0.487013 at threshold = 0.5
   Recall    = 0.815217
   F1        = 0.609756


Total scoring time: 3.795 seconds
Refined model CLL: -0.178006


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978911
   AUC PR    = 0.181245
   CLL	      = -0.193088
   Precision = 0.092787 at threshold = 0.5
   Recall    = 0.98917
   F1        = 0.169659


Total learning time: 14.613999999999999 seconds
Total inference time: 19.196 seconds
AUC ROC: 0.978911
Total revision time: 14.613999999999999
Best scored revision CLL: -0.153069


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:27
{'Learning time': 14.613999999999999, 'Recall': 0.98917, 'Precision': [0.092787, 0.5], 'CLL': -0.193088, 'AUC PR': 0.181245, 'F1': 0.169659, 'Inference time': 19.196, 'AUC ROC': 0.978911, 'parameter': {'Learning time': 2.382, 'Recall': 0.98917, 'Precision': [0.092787, 0.5], 'CLL': -0.193088, 'AUC PR': 0.181245, 'F1': 0.169659, 'Inference time': 19.196, 'AUC ROC': 0.978911}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true,true;follows(C, D), recursion_accounttype(D, B).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
0;true;follows(A, D).;true;false
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false;follows(E, A).;true;true
0;false,false,false;follows(A, I), tweets(A, J).;false;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, C), tweets(A, D).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;tweets(A, J).;false;false
1;false,true,true;follows(A, G), follows(F, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(H, B).;false;false
2;true;follows(C, D), follows(D, A).;false;false
2;false,false;follows(A, G), follows(G, H).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false;follows(E, A).;true;true
2;false,false,false;follows(A, I).;false;false
2;false,true,true;follows(F, E).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;true;follows(D, C), follows(A, D).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(E, F), follows(E, G).;true;false
3;false;follows(A, E), recursion_accounttype(E, B).;true;true
3;false,false,false;tweets(A, J), follows(A, K).;false;false
3;false,true,true;tweets(A, F), follows(G, E).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
4;true;follows(D, C), follows(D, A).;false;false
4;false,false,false;follows(A, K), follows(K, L).;false;false
4;false,false;follows(A, H), tweets(A, I).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false;follows(E, A).;true;true
4;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;tweets(A, I).;false;false
5;true,true;follows(A, E), tweets(A, F).;true;false
5;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
5;true;follows(D, C), recursion_accounttype(D, B).;true;false
5;true,true,true;follows(E, D), tweets(D, F).;false;false
5;false,false,false;follows(A, J), follows(J, K).;false;false
5;false;follows(G, A).;false;true
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true,true;follows(A, C), follows(D, A).;true;false
6;false,false;follows(A, G).;true;true
6;true;follows(A, D), follows(D, C).;true;false
6;true,true,true;tweets(C, E), tweets(D, E).;false;false
6;false,false,false;tweets(A, I).;false;false
6;false;follows(F, A).;false;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,true;follows(A, E), follows(C, E).;false;false
7;false,false;follows(I, A).;false;true
7;true;follows(A, C), tweets(C, D).;true;false
7;false,true;follows(F, G).;true;false
7;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
7;false,true,true;follows(H, A), recursion_accounttype(G, B).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,false;follows(A, E), follows(E, C).;true;false
8;true,true;follows(C, D).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;true;follows(D, A), follows(D, C).;true;true
8;true,false,true;follows(C, F), recursion_accounttype(F, B).;false;false
8;false;follows(A, G), follows(H, A).;false;true
8;false,false,false;follows(J, A), tweets(A, K).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;tweets(A, F), follows(D, C).;false;true
9;false,false;follows(I, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, H).;false;false
9;true,true,false;follows(E, C), follows(E, A).;false;false
9;false,false,false;follows(A, J).;false;false
9;false;follows(G, A), recursion_accounttype(G, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7405018762759829;  // std dev = 1,328, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.14386322081379807;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.2119950889456654;  // std dev = 3,855, 65,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.728143866786754;  // std dev = 0,055, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.5287218970918073;  // std dev = 1,568, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.21947341221095448;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.17855420691277316;  // std dev = 3,749, 63,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.17305206306823115;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16366855618764126;  // std dev = 2,449, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5589972799805691;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5261422340369788;  // std dev = 1,338, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | else return -0.11231637819360617;  // std dev = 9,31e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.6731303773666395;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16724834501765312;  // std dev = 3,709, 60,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.17388675163880798;  // std dev = 2,641, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.29251358415830997;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( complex(A, F), interaction(E, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4185227568788567;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5633173064319621;  // std dev = 0,168, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35842735422991984;  // std dev = 0,503, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.016273075494907054;  // std dev = 2,619, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.1684942935619494;  // std dev = 2,225, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.1597811584682864;  // std dev = 3,766, 60,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.32627568979925353;  // std dev = 0,035, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.012106703333944356;  // std dev = 1,408, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.010292768227868626;  // std dev = 2,058, 80,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.40701944734087697;  // std dev = 0,245, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.10309130588605156;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7302114943508774;  // std dev = 0,235, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.24980308796851886;  // std dev = 0,246, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08063648122306964;  // std dev = 3,178, 45,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.06993614464261573;  // std dev = 2,471, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(A, F) )
%   | | then if ( interaction(D, E), complex(D, F) )
%   | | | then return 0.25411622336296;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2785273807714078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25899845484464956;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1989719068207816;  // std dev = 0,922, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.02807880283052079;  // std dev = 2,547, 127,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.33237111701376654;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.421790831588035;  // std dev = 0,094, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05597706937478941;  // std dev = 3,475, 62,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.0827879938085168;  // std dev = 2,580, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(C, A), interaction(A, D) )
%   | | then if ( complex(C, E), complex(D, E) )
%   | | | then return 0.20901147906173523;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20820546749891744;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.27656176835235735;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2809954920929108;  // std dev = 0,089, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.005528344885410303;  // std dev = 2,660, 144,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=36 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.617375721613211;  // std dev = 1,382, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.27119105076588146;  // std dev = 0,201, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.17654897485557108;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.03459199577807258;  // std dev = 1,702, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(A, H), recursion_proteinclass(G, B) )
%   | | | then return 0.23068640754100667;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2373555928685326;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08216852154624282;  // std dev = 0,314, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.005623566827221602;  // std dev = 2,511, 140,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03908062010134101;  // std dev = 2,793, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.03000902132851808;  // std dev = 2,116, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(D, C) )
%   | | then return 0.16667879747771597;  // std dev = 0,041, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.21157271747790302;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), interaction(C, E) )
%   | | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15238173515155662;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.01669293739626898;  // std dev = 0,860, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then return -0.004584807107016868;  // std dev = 2,006, 104,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=25 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.23159410356300858;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.07881959958283527;  // std dev = 0,994, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.0077226298148647355;  // std dev = 3,748, 132,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( complex(A, F), interaction(C, D) )
%   | | then return 0.13202936393470854;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, E), interaction(A, E) )
%   | | | then return 0.15761672894164946;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20578701384216633;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17327567186039705;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.04037118166067466;  // std dev = 0,881, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.19943522243511821;  // std dev = 1,076, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 7.682443745515619E-4;  // std dev = 2,526, 142,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=33 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030834920321843616;  // std dev = 3,450, 93,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.986573
   AUC PR    = 0.248537
   CLL	      = -0.204326
   Precision = 0.214054 at threshold = 0.5
   Recall    = 0.699647
   F1        = 0.327815


Total learning time: 2.262 seconds
Total inference time: 14.031 seconds
AUC ROC: 0.986573


Results scoring model
   AUC ROC   = 0.990974
   AUC PR    = 0.340813
   CLL	      = -0.186797
   Precision = 0.3 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.425676


Total scoring time: 3.89 seconds
Parameter learned model CLL: -0.186797


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), complex(A, J)', 'false,true,true': 'interaction(G, E), interaction(A, G)'}, {'true,false': [2.11e-08, 0, 3], 'false,true,true,true': [1.328, 2, 15], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,false': [3.855, 42, 23], 'true,true,true': [0.0, 0, 9], 'false,true,true,false': [0.0, 0, 21], 'false,false,false,true': [2.39, 20, 8], 'false,true,false': [8.16e-08, 88, 0], 'true,true,false': [0.0, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(C, A), complex(A, D)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'complex(A, J)', 'false,true,true': 'interaction(G, A), interaction(G, F)'}, {'true,false': [0.0, 0, 12], 'false,true,true,true': [0.055, 0, 24], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [2.449, 18, 9], 'true,true': [0.0, 0, 4], 'false,true,true,false': [1.568, 3, 12], 'false,false,true,false': [3.749, 41, 22], 'false,true,false': [0.0, 97, 0], 'false,false,true,true': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)', 'false,true,true': 'interaction(E, F)'}, {'true,false': [1.49e-08, 0, 5], 'false,true,true,true': [0.026, 0, 5], 'false,false,false,true': [2.641, 19, 11], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 11], 'false,true,true,false': [1.338, 2, 31], 'false,false,true,false': [3.709, 38, 22], 'false,true,false': [9.31e-08, 120, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, H)', 'false,true': 'complex(E, F), interaction(G, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, J), interaction(K, A)', 'false,true,true': 'complex(A, F), interaction(E, G)'}, {'true,false': [0.935, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [2.225, 13, 8], 'false,false,false,false': [3.766, 37, 23], 'true,true': [3.33e-08, 0, 9], 'false,true,true,false': [0.006, 0, 2], 'false,false,true,false': [2.619, 97, 27], 'false,true,false': [0.168, 0, 4], 'false,false,true,true': [0.503, 1, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'complex(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), complex(A, I)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,false': [1.408, 3, 6], 'false,false,true,false': [0.246, 32, 0], 'false,false,false,true': [3.178, 29, 16], 'false,true,false,true': [0.245, 0, 21], 'true,true': [0.035, 0, 10], 'false,false,false,false': [2.471, 19, 9], 'false,false,true,true': [0.235, 0, 9], 'false,true,false,false': [0.0, 52, 0], 'false,true,true': [2.058, 65, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'complex(A, I)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'interaction(E, A), complex(A, F)', 'true,true,true': 'interaction(D, E), complex(D, F)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false': 'interaction(A, G)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [0.922, 1, 6], 'false,false,false,true': [3.475, 42, 20], 'false,false,false,false': [2.58, 21, 11], 'false,false,true,true': [0.0, 0, 1], 'false,true': [2.547, 91, 36], 'false,false,true,false': [0.094, 0, 2], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.022, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false,false': 'interaction(G, A)', 'true,true': 'interaction(C, A), interaction(A, D)', 'true,true,true': 'complex(C, E), complex(D, E)', 'false': 'interaction(A, F)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [0.089, 0, 7], 'false,false,true,true': [1.382, 1, 34], 'false,true': [2.66, 108, 36], 'false,false,true,false': [0.201, 70, 0], 'true,true,true,false': [0.0, 0, 4], 'true,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'false,false': 'interaction(A, I)', 'true,true': 'interaction(E, A), interaction(E, C)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(G, B)'}, {'true,false': [1.702, 4, 12], 'false,true,true,true': [0.0, 0, 1], 'false,false,true': [2.511, 107, 33], 'false,false,false,false': [2.116, 23, 11], 'true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.108, 0, 3], 'false,false,false,true': [2.793, 39, 20], 'false,true,false': [0.314, 1, 2], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, A), interaction(C, E)', 'true,true': 'interaction(D, C)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false,true': 'interaction(F, C), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), interaction(A, H)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.994, 10, 5], 'false,false,false,false': [3.748, 94, 38], 'true,true,true': [0.041, 0, 8], 'true,false,true,true': [0.0, 0, 0], 'true,false,false': [0.86, 1, 4], 'false,true': [2.006, 79, 25], 'false,false,true': [0.052, 0, 3], 'true,true,false': [0.027, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,false': 'interaction(A, I)', 'true,true': 'complex(A, F), interaction(C, D)', 'false,true': 'interaction(H, A)', 'true,true,false': 'interaction(C, E), interaction(A, E)', 'false,false,false': 'interaction(J, A)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,false': [0.087, 0, 4], 'false,false,true': [2.526, 109, 33], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 4], 'false,true,true': [0.881, 1, 4], 'false,false,false,true': [3.45, 62, 31], 'false,true,false': [1.076, 2, 3], 'true,true,false,false': [0.073, 0, 3]}]]
[{'': [-2.220446049250313e-16, 0.21589156724292], 'true': [-2.7328566760003855e-16, 1.4802973661668753e-16], 'false,false': [1.4802973661668753e-16, 0.2222222222222236], 'true,true': [-2.9605947323337506e-16, 0.0], 'false,true': [0.04986149584487714, 7.569702440626067e-17], 'false': [0.2040816326530626, 0.22873263888889037], 'false,false,false': [0.2040816326530613, 0.2286390532544389], 'false,true,true': [0.10380622837370206, 0.0]}, {'': [1.1102230246251565e-16, 0.17887538762467964], 'false,false,true': [0.25, 0.22311230700693085], 'true': [0.0, 0.0], 'false,false': [0.223989554850893, 0.22223532059928675], 'false,true': [0.07250056650987592, -1.1445598192011922e-17], 'false': [0.14423604849004024, 0.22344540471172603], 'false,false,false': [0.22222222222222218, 0.22222222222222202], 'false,true,true': [0.0001252946375847793, 0.16382769566122804]}, {'': [-2.220446049250313e-16, 0.14345443946815448], 'false,false,true': [0.0, 0.22925329313006237], 'true': [-1.2111523905001707e-16, 4.4408920985006264e-17], 'false,false': [0.2296216207189575, 0.23255236271000107], 'false,true': [0.047240863982211174, 7.216449660063518e-17], 'false': [0.08683229184882281, 0.2305884044993353], 'false,false,false': [0.23255236271000107, nan], 'false,true,true': [0.00013330517325629287, 0.054236339465822556]}, {'': [0.0553633217993081, 0.13296859823075668], 'false,false,true': [0.036107405692920876, 0.055336438896296164], 'true': [1.2335811384723962e-16, 0.10937499999999999], 'false,false': [0.06023028810956465, 0.23628784337601486], 'false,true': [1.598183628193084e-05, 0.007094453355960539], 'false': [0.009393954311686955, 0.1313345977593013], 'false,false,false': [0.23581214527999994, 0.23643465507768927], 'false,true,true': [nan, 1.598183628193084e-05]}, {'': [0.1289956073781041, 0.11881690713236476], 'false,false,true': [0.0061621403388309026, 0.0018893955476359178], 'true': [0.00012382537965081042, 0.22023797518283245], 'false,true,false': [0.002859896245953397, -2.5620531337503614e-17], 'false,false': [0.1673742702155984, 0.22206098566453877], 'false,true': [0.05292396530589416, 0.05414464171779004], 'false': [0.054232389992470785, 0.20524125877388558], 'false,false,false': [0.2244740631839275, 0.21811224489795913]}, {'': [0.050922038021661446, 0.11465494294527243], 'false,false,true': [0.0, 0.004387093718053514], 'true': [9.53447369632543e-05, 0.1214120784053789], 'false,false': [0.004701592557489827, 0.1994320634627841], 'true,true,true': [0.0, 0.0], 'true,true': [9.534473696322099e-05, 9.534473696320989e-05], 'false': [0.05109579724522765, 0.19661192275786776], 'false,false,false': [0.1947334275197548, 0.20806155154413283]}, {'': [0.001785868224916165, 0.11033424272275424], 'false,false,true': [0.05454219089559582, 0.0005762436516272602], 'true': [0.0004562085959590302, 0.0011307978679762551], 'false,false': [0.19402065028321558, nan], 'true,true,true': [0.0, 0.0], 'true,true': [1.6241365985436573e-07, 0.0], 'false': [0.049153058227591064, 0.19402065028321558]}, {'': [0.15198210939320556, 0.0789533963959354], 'true': [0.0, 0.1810615348454835], 'false,false': [0.045053938888174515, 0.13206850722027674], 'true,true': [0.0, nan], 'false,true': [0.002916744387762432, 0.032850320865326604], 'false': [0.02151725381196885, 0.0800029477079195], 'false,false,false': [0.1322370725608854, 0.13172378881549054], 'false,true,true': [0.0, 0.0038778730087833577]}, {'': [0.051866933326641586, 0.07600748982337588], 'true,false': [0.0, 0.14783915254157606], 'true': [0.0005614995343320494, 0.1257564395952405], 'false,false': [0.0009114353185122048, 0.10276425360038567], 'true,true': [0.0002059344830883207, 0.00037138849692038706], 'true,false,true': [nan, 0.0], 'false': [0.03869041930321404, 0.10164688384917782], 'false,false,false': [0.06583011298118739, 0.10644552124763162]}, {'': [0.0015139149496408563, 0.08364388307423197], 'true': [0.0013347014327739215, 0.001904190777403704], 'false,false': [0.044921671884066754, 0.1279910782772429], 'true,true': [0.0, 0.0013201600318915874], 'false,true': [0.1553471771432294, 0.23157237619933874], 'false': [0.2078365545326227, 0.07801212307077815], 'false,false,false': [0.1279910782772429, nan], 'true,true,false': [0.0, 0.0017544440663773604]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true,true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;true;interaction(D, A).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;true;interaction(C, A), complex(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true,true;interaction(G, A), interaction(G, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false,true;recursion_proteinclass(H, B).;true;true
2;true;interaction(D, C), interaction(A, D).;true;true
2;false,false;interaction(G, A), interaction(H, G).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true,true;interaction(E, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;complex(E, F), interaction(G, E).;true;true
3;true;interaction(C, D), interaction(D, A).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false,true;complex(J, I), recursion_proteinclass(J, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;false,false;interaction(H, A), complex(A, I).;true;true
4;false,true;interaction(E, F), interaction(A, F).;true;true
4;false;interaction(A, E).;true;true
4;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,false,true;complex(A, I).;true;true
5;true,true;interaction(E, A), complex(A, F).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;true,true,true;interaction(D, E), complex(D, F).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true,true;interaction(C, A), interaction(A, D).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;true;interaction(D, A), interaction(C, D).;true;true
6;true,true,true;complex(C, E), complex(D, E).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,true;interaction(G, F).;true;true
7;true;interaction(C, A), complex(C, D).;true;true
7;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, H), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, A), interaction(C, E).;true;true
8;true,true;interaction(D, C).;true;true
8;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(G, A), interaction(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true,true;complex(A, F), interaction(C, D).;true;true
9;true;interaction(D, C), interaction(E, D).;true;true
9;true,true,false;interaction(C, E), interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.8126943896449667;  // std dev = 0,977, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.1134680840356819;  // std dev = 4,228, 94,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.752120675662648;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.5830303409589881;  // std dev = 0,895, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3989887196812545;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6720998271017022;  // std dev = 0,224, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5991765756984286;  // std dev = 2,746, 43,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | | | else return -0.16386899698808963;  // std dev = 0,105, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.054421652794403315;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.588209613014058;  // std dev = 0,123, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6138576059843592;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5759307046577334;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5731318660505506;  // std dev = 0,031, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.11231637819360617;  // std dev = 9,54e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.19593097500882561;  // std dev = 0,634, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.11717818650298632;  // std dev = 3,493, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07752971229949497;  // std dev = 2,446, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.01119767205619172;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.40692495884002144;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4459711186077371;  // std dev = 0,076, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.47029612859642145;  // std dev = 0,026, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.25648759215926625;  // std dev = 0,439, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.40762910175483924;  // std dev = 0,718, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.4335585478820463;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.016656233955430096;  // std dev = 3,898, 147,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=32 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.04676346272881794;  // std dev = 1,769, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.22429939100352977;  // std dev = 2,282, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3426865782241968;  // std dev = 0,028, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.08536889882461711;  // std dev = 0,417, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.027758877779252757;  // std dev = 1,664, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3543985317036534;  // std dev = 0,962, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.10527978696978593;  // std dev = 0,028, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6712146675097774;  // std dev = 0,180, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18253224074959085;  // std dev = 0,187, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.08663965960226222;  // std dev = 2,845, 50,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.161992163269946;  // std dev = 2,170, 23,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.26258614227624805;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.28327290325496485;  // std dev = 0,047, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.3045647262624234;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.07481170624550937;  // std dev = 0,985, 40,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.018245109575665774;  // std dev = 2,185, 114,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.3535782201226959;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1587212773098153;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.026195234089759073;  // std dev = 1,860, 23,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.05378153576375701;  // std dev = 3,520, 83,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22051198026299318;  // std dev = 0,021, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( location(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3534271221563214;  // std dev = 0,188, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09971440817239012;  // std dev = 0,028, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.0546650816057723;  // std dev = 1,428, 58,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   | | | else return 0.01910508165635437;  // std dev = 1,610, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.16416112923408005;  // std dev = 2,359, 28,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.31769303054676;  // std dev = 2,348, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.17931186376601257;  // std dev = 0,181, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.2017181595889182;  // std dev = 0,143, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.1654895517037009;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A) )
%   | | then return 0.18683747546618756;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.04227515548919511;  // std dev = 0,859, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(A, H), recursion_proteinclass(G, B) )
%   | | | then return 0.24573117361299435;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21792438241556686;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.36950037619294773;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08551979333079157;  // std dev = 0,011, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.004232517350875911;  // std dev = 3,252, 138,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | | | else return 0.07015338906740046;  // std dev = 2,690, 88,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15872306299857245;  // std dev = 0,020, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14686526417225926;  // std dev = 0,183, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3102890044394941;  // std dev = 0,070, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09295936674878734;  // std dev = 0,044, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.15812696447258515;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0010857972924232266;  // std dev = 1,409, 64,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.21262195726155184;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.020766638287529143;  // std dev = 2,496, 46,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.007174004164170964;  // std dev = 3,327, 103,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( complex(A, F), interaction(C, D) )
%   | | then return 0.12541354185374975;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, E), interaction(A, E) )
%   | | | then return 0.1383977362837046;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16772621584244288;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11215584726359454;  // std dev = 0,443, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.07651362836504638;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( phenotype(I, G), interaction(I, I) )
%   | | | then return -0.044314318577245486;  // std dev = 1,548, 53,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.043589287434270645;  // std dev = 1,364, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return -0.016084009068372256;  // std dev = 1,915, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.037749761787661165;  // std dev = 3,345, 113,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */


Results
   AUC ROC   = 0.977452
   AUC PR    = 0.247442
   CLL	      = -0.195684
   Precision = 0.22315 at threshold = 0.5
   Recall    = 0.660777
   F1        = 0.333631


Total learning time: 6.674 seconds
Total inference time: 118.707 seconds
AUC ROC: 0.977452


Results scoring model
   AUC ROC   = 0.986062
   AUC PR    = 0.299646
   CLL	      = -0.178391
   Precision = 0.296651 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.420339


Total scoring time: 7.964 seconds
Refined model CLL: -0.178391


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977452
   AUC PR    = 0.247442
   CLL	      = -0.195684
   Precision = 0.22315 at threshold = 0.5
   Recall    = 0.660777
   F1        = 0.333631


Total learning time: 20.79 seconds
Total inference time: 118.707 seconds
AUC ROC: 0.977452
Total revision time: 20.79
Best scored revision CLL: -0.178391


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:07:02
{'Learning time': 20.79, 'Recall': 0.660777, 'Precision': [0.22315, 0.5], 'CLL': -0.195684, 'AUC PR': 0.247442, 'F1': 0.333631, 'Inference time': 118.707, 'AUC ROC': 0.977452, 'parameter': {'Learning time': 2.262, 'Recall': 0.699647, 'Precision': [0.214054, 0.5], 'CLL': -0.204326, 'AUC PR': 0.248537, 'F1': 0.327815, 'Inference time': 14.031, 'AUC ROC': 0.986573}}


