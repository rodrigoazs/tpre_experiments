Starting experiment #2 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E) )
%   | | then return 0.8581489350995103;  // std dev = 8,00e-07, 134,000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0.8258908705833826;  // std dev = 0,177, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return 0.6581489350995121;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 1,69e-07, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.1418510649004872;  // std dev = 2,98e-07, 434,000 (wgt'ed) examples reached here.  /* #neg=434 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( tweets(A, I), follows(H, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.14786856126773526;  // std dev = 4,692, 107,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.17814893509951235;  // std dev = 4,040, 75,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.6822474270111198;  // std dev = 0,195, 152,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=146 */
%   | else return 0.6366787758890617;  // std dev = 0,277, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.10542941546891288;  // std dev = 0,133, 280,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.6956638884014312;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.813559071945054;  // std dev = 0,303, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.1465880238350259;  // std dev = 0,946, 67,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=1 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.08505025609950086;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.11197333302257795;  // std dev = 3,608, 65,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), tweets(C, E) )
%   | then return 0.543063817250084;  // std dev = 0,156, 161,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=157 */
%   | else return 0.5784531147090609;  // std dev = 0,070, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( tweets(A, H), tweets(F, I) )
%   | | | then return 0.591801268521727;  // std dev = 0,431, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.37879659617384803;  // std dev = 1,024, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.11369211971233587;  // std dev = 0,019, 402,000 (wgt'ed) examples reached here.  /* #neg=402 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( recursion_accounttype(K, B) )
%   | | | then return 0.6394205836007072;  // std dev = 1,042, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.13097446385748357;  // std dev = 0,953, 83,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.24082262479307506;  // std dev = 2,745, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.13332880029755617;  // std dev = 2,746, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.42129161942454346;  // std dev = 0,108, 170,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=168 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), follows(D, F) )
%   | | then if ( recursion_accounttype(F, B), follows(A, F) )
%   | | | then return 0.27956704483423334;  // std dev = 0,926, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.41211641708676566;  // std dev = 0,220, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( follows(G, A), follows(D, G) )
%   | | | then return -0.19977052414085975;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24208967704296294;  // std dev = 1,165, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.08789970058846625;  // std dev = 1,758, 260,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=6 */
%   | | | else return -0.013663452528006777;  // std dev = 2,358, 144,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=24 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.03843082756541918;  // std dev = 3,322, 123,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
%   | | | else return 0.10567710641295847;  // std dev = 4,053, 76,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.3330229314658262;  // std dev = 0,043, 97,000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | | else if ( tweets(D, E), follows(A, D) )
%   | | | then return 0.24155404882536993;  // std dev = 1,646, 33,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return 0.036857692438004595;  // std dev = 1,455, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.3373016577955972;  // std dev = 0,077, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( follows(F, A) )
%   | then return -0.04601897308650143;  // std dev = 0,166, 469,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=48 */
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.17934653197703992;  // std dev = 0,950, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5412550981494949;  // std dev = 0,315, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.04523023665823984;  // std dev = 3,209, 118,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | | | else return 0.12438659607739429;  // std dev = 3,944, 68,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then return 0.24133636298203023;  // std dev = 0,156, 120,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=117 */
%   | else return 0.27851447417061825;  // std dev = 0,139, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then return -0.07422790995646225;  // std dev = 0,110, 290,000 (wgt'ed) examples reached here.  /* #neg=283 #pos=7 */
%   | | else if ( follows(F, H), recursion_accounttype(H, B) )
%   | | | then return 0.40474502072794777;  // std dev = 0,352, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.09615727391637742;  // std dev = 0,000, 138,000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( recursion_accounttype(J, B) )
%   | | | then return 0.4349752679331711;  // std dev = 1,407, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.12737187411283427;  // std dev = 0,829, 93,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=1 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.14438062539186747;  // std dev = 2,793, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.09220167757864363;  // std dev = 2,708, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.21682870556716705;  // std dev = 0,086, 135,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | else return 0.13813898958089696;  // std dev = 0,274, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.0680523479065956;  // std dev = 0,118, 270,000 (wgt'ed) examples reached here.  /* #neg=263 #pos=7 */
%   | | else if ( follows(G, E), recursion_accounttype(G, B) )
%   | | | then return 0.29420096486396424;  // std dev = 0,928, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return -0.08924700328463601;  // std dev = 1,056, 144,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.42645073212241014;  // std dev = 1,666, 57,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.16175865231413586;  // std dev = 0,791, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10523297353767523;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.021596609901311545;  // std dev = 2,245, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.16750047044295263;  // std dev = 0,145, 140,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=137 */
%   | else if ( tweets(A, E) )
%   | | then return 0.16182924010509098;  // std dev = 0,183, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else if ( follows(A, C) )
%   | | | then return -0.05634740327236143;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1237058688000684;  // std dev = 0,781, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( follows(F, A) )
%   | then return -0.04203122562613485;  // std dev = 0,133, 476,000 (wgt'ed) examples reached here.  /* #neg=428 #pos=48 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.3057958298683848;  // std dev = 2,228, 58,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | | else return -0.14560180342146836;  // std dev = 0,678, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.054257534839563214;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08743648380089955;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, A), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( tweets(C, D), follows(E, A) )
%   | | | then return 0.12071136720611032;  // std dev = 1,687, 72,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=69 */
%   | | | else return 0.16548340669291853;  // std dev = 0,023, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.16785882499907803;  // std dev = 0,041, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.191107852483557;  // std dev = 0,087, 59,000 (wgt'ed) examples reached here.  /* #pos=59 */
%   else if ( follows(F, A), follows(A, G) )
%   | then if ( follows(G, F), follows(G, A) )
%   | | then return -0.0522347498389174;  // std dev = 0,128, 223,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=11 */
%   | | else return -0.025330478106771935;  // std dev = 0,164, 167,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=33 */
%   | else if ( follows(H, A) )
%   | | then return 0.010588559336913399;  // std dev = 0,127, 72,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.006364739419207489;  // std dev = 1,659, 110,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return -0.026759984842482404;  // std dev = 3,725, 93,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(E, C) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.14414298010891863;  // std dev = 0,051, 68,000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.11539405463453022;  // std dev = 0,206, 69,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=66 */
%   | else return 0.15580960983146405;  // std dev = 0,133, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(G, A), tweets(A, H) )
%   | | then return 0.21381192343138491;  // std dev = 0,085, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( follows(F, I), follows(I, F) )
%   | | | then return -0.11046380207272165;  // std dev = 1,261, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.20038199643425436;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( follows(J, A) )
%   | | then return -0.04696447236974437;  // std dev = 0,125, 444,000 (wgt'ed) examples reached here.  /* #neg=414 #pos=30 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return -0.007603156340257125;  // std dev = 1,699, 127,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=31 */
%   | | | else return 0.05466497612272104;  // std dev = 3,513, 69,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;tweets(A, I), follows(H, J).;false;false
0;true,true;tweets(A, E).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;true;false
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false;follows(F, A).;true;true
0;false,false,false;follows(A, K), follows(K, L).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, D).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false;follows(E, A).;true;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(K, B).;false;false
2;true;follows(D, C), tweets(C, E).;false;false
2;false,false;follows(A, J), follows(J, K).;true;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
2;false;follows(F, A).;true;true
2;false,false,false;follows(A, L).;false;false
2;false,true,true;tweets(A, H), tweets(F, I).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(I, H), follows(I, A).;false;false
3;false,false,false;follows(A, J), follows(J, K).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(A, E), follows(D, F).;true;true
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,true,false;follows(G, A), follows(D, G).;false;false
3;false,true,true;recursion_accounttype(F, B), follows(A, F).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(A, H).;false;false
4;true,true;recursion_accounttype(D, B).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true,false;tweets(D, E), follows(A, D).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
4;false;follows(F, A).;false;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;recursion_accounttype(J, B).;false;false
5;true;follows(A, D), tweets(A, E).;false;false
5;false,false,false;follows(A, K).;false;false
5;false,false;follows(A, I), follows(I, J).;true;true
5;false,true;follows(F, G), follows(G, A).;false;true
5;false;follows(F, A).;true;true
5;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
6;true;follows(D, C), follows(D, A).;false;false
6;false,false,false;tweets(A, J).;false;false
6;false,false;follows(A, H).;true;true
6;false,true;follows(E, F), follows(F, A).;false;true
6;false;follows(E, A).;true;true
6;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;tweets(A, E).;false;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;true;follows(A, D), follows(C, D).;false;true
7;false,false;follows(A, G).;true;true
7;true,false,false;follows(A, C).;false;false
7;false;follows(F, A).;false;true
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,true;follows(A, E), follows(E, C).;true;false
8;false,false;follows(H, A).;false;true
8;true;follows(C, A), tweets(A, D).;true;false
8;false,true;follows(G, F), follows(G, A).;false;false
8;true,true,true;tweets(C, D), follows(E, A).;false;false
8;false,false,false;follows(A, I), follows(I, J).;false;false
8;false;follows(F, A), follows(A, G).;true;true
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,false;follows(A, K), follows(K, L).;false;false
9;false,false;follows(J, A).;false;true
9;true;tweets(A, D), follows(E, C).;true;false
9;false,true;follows(G, A), tweets(A, H).;false;true
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true,false;follows(F, I), follows(I, F).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7748156017661781;  // std dev = 1,658, 36,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(J, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1798880655342935;  // std dev = 5,010, 115,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.09105783265570029;  // std dev = 3,081, 67,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6771576970228514;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4065292494163145;  // std dev = 1,072, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16988868831869047;  // std dev = 4,938, 110,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.077334239218108;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.077334239218108;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(F, I) )
%   | | | then return 0.6088337976558975;  // std dev = 0,950, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.638848076766622;  // std dev = 0,289, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.12324819475819351;  // std dev = 0,110, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.7241959943787846;  // std dev = 0,114, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14196934934062755;  // std dev = 4,947, 111,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.11600573968463097;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3341802508249765;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, A) )
%   | | | then return 0.4529213270475694;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6524878811391686;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7558376122945589;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.05898691119626197;  // std dev = 2,511, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.0594714828362933;  // std dev = 1,772, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0599211768279066;  // std dev = 5,166, 132,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | | | else return 0.2979468300689556;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.33913103078218093;  // std dev = 2,11e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.33913103078218104;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then return 0.06418634289493284;  // std dev = 3,014, 107,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.4772266632037945;  // std dev = 0,176, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.40753730972085767;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.11960488405279669;  // std dev = 4,898, 106,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
%   | | | else return 0.04565364251531044;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.2677045578539739;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.26770455785397396;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then return 0.030270575324779392;  // std dev = 2,479, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.39964155171893045;  // std dev = 0,012, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11453363515626946;  // std dev = 0,073, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.0934907764346855;  // std dev = 1,059, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.060987687913724054;  // std dev = 4,981, 119,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.16546999458361622;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.21857249734353235;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.031427502656467654;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -0.002004286804988743;  // std dev = 2,499, 84,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3134355224800802;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.029333125901282148;  // std dev = 1,309, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5873691491032834;  // std dev = 2,316, 49,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | | | else return -0.2587316063040228;  // std dev = 0,096, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1880299516634147;  // std dev = 0,038, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2239877191335461;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2239877191335461;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then return 0.0143596998249678;  // std dev = 2,834, 129,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4718689361355402;  // std dev = 2,279, 48,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   | | | else return -0.21267616075171572;  // std dev = 0,084, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then if ( phenotype(C, D), interaction(A, E) )
%   | | | then return 0.15701509920992396;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15701509920992396;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04792302971957428;  // std dev = 0,877, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.004362077772145155;  // std dev = 2,027, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else return 0.006432572754077645;  // std dev = 2,036, 61,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | else if ( interaction(A, H) )
%   | | then return 0.057655852756505754;  // std dev = 0,935, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.029695536359837627;  // std dev = 3,541, 111,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return 0.0391742557211339;  // std dev = 0,903, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13733275690883517;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3305918874838368;  // std dev = 0,688, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.027158096765282864;  // std dev = 0,909, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), phenotype(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, F), interaction(F, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15575447211283455;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then return 0.0034288042555848954;  // std dev = 2,845, 135,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=33 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.022345999362082442;  // std dev = 3,505, 113,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | | | else return 0.004107293494909767;  // std dev = 0,928, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */


Results
   AUC ROC   = 0.986151
   AUC PR    = 0.237483
   CLL	      = -0.198067
   Precision = 0.1864 at threshold = 0.5
   Recall    = 0.826241
   F1        = 0.304178


Total learning time: 2.687 seconds
Total inference time: 10.683 seconds
AUC ROC: 0.986151


Results scoring model
   AUC ROC   = 0.979493
   AUC PR    = 0.194469
   CLL	      = -0.204353
   Precision = 0.138614 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.236486


Total scoring time: 6.037 seconds
Parameter learned model CLL: -0.204353


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I), interaction(J, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'phenotype(A, E)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,false': [2.11e-08, 0, 3], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [5.01, 78, 37], 'false,false,false,false': [1.369, 5, 3], 'true,true,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 2], 'true,true,false': [2.11e-08, 0, 3], 'false,true,false': [7.6e-08, 80, 0], 'false,true,true': [1.658, 3, 33]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(D, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,false': [0.0, 0, 1], 'false,false,true,false': [4.938, 73, 37], 'false,false,false,true': [0.866, 3, 1], 'false,true,false,true': [0.97, 1, 16], 'true,true': [2.98e-08, 0, 10], 'false,false,false,false': [1.225, 6, 2], 'false,false,true,true': [1.072, 2, 3], 'false,true,false,false': [0.0, 28, 0], 'false,true,true': [3.081, 50, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(K, B)', 'true': 'interaction(C, D), phenotype(C, E)', 'false,false': 'interaction(J, A), interaction(K, J)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(L, A)', 'false,true,true': 'phenotype(A, H), phenotype(F, I)'}, {'true,false': [1.49e-08, 0, 6], 'false,true,true,true': [0.95, 1, 13], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'false,true,true,false': [0.289, 0, 20], 'false,false,true,false': [4.947, 74, 37], 'false,true,false': [0.11, 88, 0], 'false,false,true,true': [0.114, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,true,false': 'interaction(A, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,true': 'phenotype(A, E), interaction(F, D)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'recursion_proteinclass(F, B), interaction(F, A)'}, {'false,false,true,false': [1.772, 37, 16], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [5.166, 95, 37], 'false,true,false,true': [0.0, 0, 0], 'true': [0.957, 1, 11], 'false,false,false,false': [1.225, 3, 3], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.511, 47, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, G)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,false': [0.0, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [4.898, 69, 37], 'false,false,false,false': [1.449, 7, 3], 'true,true,true': [2.11e-08, 0, 8], 'false,false,true,true': [0.176, 0, 3], 'false,true': [3.014, 74, 33], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'true': 'interaction(D, A), phenotype(A, E)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), interaction(J, I)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(K, A)'}, {'true,false': [0.0, 0, 4], 'false,false,true,false': [4.981, 82, 37], 'false,false,false,true': [1.309, 4, 3], 'false,true,false,true': [0.012, 0, 16], 'true,true': [1.49e-08, 0, 7], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.059, 2, 3], 'false,true,false,false': [0.073, 34, 0], 'false,true,true': [2.479, 51, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,false': [0.866, 1, 3], 'false,false,true,false': [0.096, 84, 0], 'false,true,false,true': [0.0, 0, 1], 'true,true': [0.0, 0, 8], 'false,false,true,true': [2.316, 6, 43], 'false,true,false,false': [1.309, 32, 15], 'false,false,false': [0.0, 0, 0], 'false,true,true': [2.499, 67, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'phenotype(A, E)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false,false': 'interaction(G, A)', 'true,false,false': 'interaction(C, A)', 'false': 'interaction(A, F)'}, {'true,false,false,false': [0.0, 0, 1], 'false,false,true,false': [0.084, 73, 0], 'true,true': [0.038, 0, 9], 'false,false,true,true': [2.279, 5, 43], 'false,true': [2.834, 96, 33], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false,false': 'interaction(A, H)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,true': 'interaction(F, G), interaction(A, G)', 'true,true,true': 'phenotype(C, D), interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)', 'false': 'interaction(A, F), interaction(G, A)'}, {'true,true,true,true': [0.0, 0, 3], 'true,false': [0.877, 1, 7], 'false,false,true': [0.935, 9, 5], 'false,false,false,false': [0.903, 5, 3], 'false,true,true': [2.027, 38, 11], 'true,true,true,false': [0.0, 0, 1], 'false,false,false,true': [3.541, 74, 37], 'false,true,false': [2.036, 41, 20], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'false,true,false': 'interaction(I, F), interaction(F, I)', 'false,false': 'interaction(A, J)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, G), phenotype(A, H)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,false': [0.909, 1, 6], 'false,false,false,true': [3.505, 76, 37], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'false,false,false,false': [0.928, 6, 3], 'false,true,false,false': [0.092, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,false,true': [2.845, 102, 33], 'true,true,false': [0.688, 1, 1]}]]
[{'': [-1.6148698540002277e-16, 0.21494013446459845], 'false,false,true': [0.0, 0.25], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16], 'false,false': [0.18750000000000006, 0.21944609689999467], 'true,true': [0.0, 1.4802973661668753e-16], 'false,true': [0.07638888888889046, 7.216449660063518e-17], 'false': [0.2035523186682534, 0.22394444788889684], 'false,false,false': [0.218223062381854, 0.2343749999999999]}, {'': [8.074349270001139e-17, 0.19134586511530052], 'false,false,true': [0.22979934065359836, 0.22164237132106424], 'true': [8.881784197001253e-17, 0.0], 'false,true,false': [0.05536332179930813, -7.93016446160826e-18], 'false,false': [0.22432589288645827, 0.1875000000000001], 'false,true': [0.1416957791497597, 0.17233486591400018], 'false': [0.1558129597593181, 0.22175122671427658], 'false,false,false': [0.18750000000000003, 0.18749999999999994]}, {'': [-2.0185873175002846e-16, 0.1734681463025305], 'false,false,true': [0.004368555164676676, 0.22050868528300516], 'true': [-4.4408920985006264e-17, 3.700743415417188e-17], 'false,false': [0.22350676430282646, 0.21000000000000002], 'false,true': [0.02922501775581853, 0.0001369930934118509], 'false': [0.1212387810100569, 0.22254388194556624], 'false,false,false': [0.21000000000000002, nan], 'false,true,true': [0.06449173623133093, 0.004167373725679902]}, {'': [0.07638888888888899, 0.15087013075376376], 'false,false,true': [0.09854443262781817, 0.059258102125943166], 'false,true,false': [nan, 0.0], 'false,false': [0.0807481188746066, 0.20657776309014894], 'false,true': [0.009956702377998783, 0.0], 'false': [0.01580736136774689, 0.1488745554537629], 'false,false,false': [0.20214071150093002, 0.24999999999999997], 'false,true,true': [0.0, 0.0]}, {'': [8.074349270001139e-17, 0.1589812539570262], 'false,false,true': [0.010366494288639635, 0.0], 'true': [5.551115123125783e-17, -1.850371707708594e-17], 'false,false': [0.15455123717624494, 0.2253531712794452], 'true,true': [5.551115123125783e-17, nan], 'false': [0.08492499094228363, 0.2236502314413022], 'false,false,false': [0.22633013658456266, 0.21000000000000005]}, {'': [5.0464682937507114e-17, 0.14782294854778139], 'false,false,true': [0.2241713412451479, 0.2084496208824403], 'true': [3.172065784643304e-17, 0.0], 'false,true,false': [9.752114610434015e-06, 0.00015631305172938002], 'false,false': [0.20912444234635175, 0.24489795918367344], 'false,true': [0.0903780614429714, 0.05763765787272814], 'false': [0.07660008061269485, 0.2115743959359743], 'false,false,false': [0.24489795918367344, nan]}, {'': [0.07638888888888888, 0.1348085361532697], 'false,false,true': [0.10947081305064006, 0.00010921868298146855], 'true': [0.0, 0.18749999999999997], 'false,false': [0.20697779781917786, nan], 'false,true': [0.07436173416187516, 0.03736727285707052], 'false': [0.0612303987339902, 0.20697779781917786], 'false,true,false': [0.0, 0.03648077597111041]}, {'': [0.0003245759639142047, 0.10769983930590878], 'true,false': [0.0, 0.0], 'false,false,true': [0.108198258516308, 9.603384328161875e-05], 'true': [0.00016162013017949494, 0.0], 'false,false': [0.15512909802694205, nan], 'true,false,false': [nan, 0.0], 'false': [0.06225266089873746, 0.15512909802694205]}, {'': [0.06668057591996719, 0.09277624579768783], 'true': [0.0, 0.09605383733805503], 'false,false': [0.062499421627633944, 0.1122515406648556], 'true,true,true': [0.0, 0.0], 'true,true': [0.0, nan], 'false,true': [0.08385523393963526, 0.0679858580281424], 'false': [0.07505600264425069, 0.10708478781692639], 'false,false,false': [0.1129854476080709, 0.1019847757823563]}, {'': [0.12293356581428974, 0.0820579339295461], 'true,true': [0.0, 0.23693280529139468], 'false,true,false': [nan, 0.0028012112303821973], 'false,false': [0.059960195150240654, 0.10779318596975107], 'true': [0.1276339290593557, 0.1179365321375635], 'false,true': [nan, 0.0028012112303821926], 'false': [0.0028012112303821926, 0.08274390054346702], 'false,false,false': [0.10872581521831946, 0.0957753970179006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false,true;phenotype(A, I), interaction(J, H).;true;true
0;true,true;phenotype(A, E).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false;interaction(A, F).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;true;interaction(D, A).;true;true
1;false;interaction(A, E).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
2;true;interaction(C, D), phenotype(C, E).;true;true
2;false;interaction(A, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;phenotype(A, E), interaction(F, D).;true;true
3;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
3;false,true,true;recursion_proteinclass(F, B), interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false,true;phenotype(A, G).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(G, F), interaction(A, G).;true;true
5;true;interaction(D, A), phenotype(A, E).;true;true
5;false;interaction(A, F).;true;true
5;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(A, D).;true;true
6;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;false,true;interaction(F, E), interaction(A, F).;true;true
6;false;interaction(A, E).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true,false;phenotype(A, E).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;false;interaction(A, F).;true;true
7;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true,true;phenotype(C, D), interaction(A, E).;true;true
8;true;interaction(A, C), phenotype(A, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true;phenotype(A, D), interaction(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(J, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.32873717039363;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.17814893509951094;  // std dev = 4,665, 100,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7394699862198891;  // std dev = 0,033, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.18752258176734707;  // std dev = 2,610, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.03244843082836551;  // std dev = 1,182, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7242916525123169;  // std dev = 0,051, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( complex(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.17995327710549328;  // std dev = 2,218, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.3319358272327139;  // std dev = 1,871, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.16493465407400812;  // std dev = 2,905, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.07557922370804901;  // std dev = 3,372, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then return 0.5504232835445224;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.5743676802535554;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04620087038065444;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.5162615357741113;  // std dev = 1,296, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.6107860462458904;  // std dev = 0,304, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.12959116537588775;  // std dev = 0,017, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.682848798005898;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.126966708107795;  // std dev = 5,073, 119,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | | else return 0.3177176060995283;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.4138572616747038;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4080610759494195;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.592713133454417;  // std dev = 0,105, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H), interaction(I, G) )
%   | | then return 0.5216257702218279;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5197519631068808;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.051802538869095166;  // std dev = 1,449, 41,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.12024014325961375;  // std dev = 1,439, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06880337794627299;  // std dev = 1,897, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.12245910144439075;  // std dev = 5,226, 133,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.35257229082472513;  // std dev = 0,066, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(E, G), interaction(H, E) )
%   | | | then return 0.04335291695715776;  // std dev = 2,123, 61,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.23283794936253524;  // std dev = 1,077, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10068478143944645;  // std dev = 1,110, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.03676000072616128;  // std dev = 0,944, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.39247006489793074;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.6048426616485056;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.13692267044756726;  // std dev = 3,761, 60,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.07655078239632669;  // std dev = 3,446, 57,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.27814582154205203;  // std dev = 0,060, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.013489858007114266;  // std dev = 2,236, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.24112197305125288;  // std dev = 0,735, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.37865247605737457;  // std dev = 0,118, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11567621245499407;  // std dev = 0,065, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5775449480568867;  // std dev = 1,727, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.2767794556732697;  // std dev = 0,104, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.15446301641362664;  // std dev = 3,126, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.07016088261741289;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19791136477684518;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3035055545800766;  // std dev = 0,087, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.014630084088192488;  // std dev = 1,809, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.0994893416441357;  // std dev = 1,558, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3122736995322404;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0337598839216432;  // std dev = 1,245, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1756077050863592;  // std dev = 2,856, 50,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return 0.32192709150549303;  // std dev = 2,647, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else return -0.23979299202125362;  // std dev = 0,029, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.16993896318512394;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.27472972304421484;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.40384940704100325;  // std dev = 0,197, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.032531400182535926;  // std dev = 1,759, 43,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.09652576936759255;  // std dev = 1,512, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.012673849962897929;  // std dev = 1,012, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( interaction(M, A), location(M, N) )
%   | | | then return 0.3145459586395666;  // std dev = 3,162, 58,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | | | else return -0.008538783705747047;  // std dev = 1,048, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.193521275208701;  // std dev = 0,020, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.14673174745614537;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.03723663875769187;  // std dev = 0,273, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( location(E, G), enzyme(E, H) )
%   | | then if ( phenotype(E, I), phenotype(A, J) )
%   | | | then return -0.18263845612481033;  // std dev = 0,844, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.03553691835679819;  // std dev = 1,887, 46,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( interaction(A, F), phenotype(A, K) )
%   | | | then return 0.24608591197138652;  // std dev = 1,042, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.02356821883848359;  // std dev = 3,936, 145,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | else if ( interaction(L, A) )
%   | | then return 0.09444409686785812;  // std dev = 0,334, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.03707929230921303;  // std dev = 0,929, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.04543122361463431;  // std dev = 0,380, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1292957834006372;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.5917924759967503;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.16323850715315305;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1479502188187125;  // std dev = 0,802, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return -0.01492553270931703;  // std dev = 0,262, 66,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( complex(A, L), complex(J, M) )
%   | | | then return -0.012723675680891389;  // std dev = 2,232, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.05146002142394168;  // std dev = 3,396, 101,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.03883601792701867;  // std dev = 0,885, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.03066099423956375;  // std dev = 1,139, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */


Results
   AUC ROC   = 0.983335
   AUC PR    = 0.27522
   CLL	      = -0.225279
   Precision = 0.18064 at threshold = 0.5
   Recall    = 0.741135
   F1        = 0.290479


Total learning time: 15.927 seconds
Total inference time: 102.862 seconds
AUC ROC: 0.983335


Results scoring model
   AUC ROC   = 0.978205
   AUC PR    = 0.292181
   CLL	      = -0.23593
   Precision = 0.179063 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.288889


Total scoring time: 28.477 seconds
Refined model CLL: -0.23593


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986151
   AUC PR    = 0.237483
   CLL	      = -0.198067
   Precision = 0.1864 at threshold = 0.5
   Recall    = 0.826241
   F1        = 0.304178


Total learning time: 53.128 seconds
Total inference time: 10.683 seconds
AUC ROC: 0.986151
Total revision time: 53.128
Best scored revision CLL: -0.204353


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:10:34
{'Learning time': 53.128, 'Recall': 0.826241, 'Precision': [0.1864, 0.5], 'CLL': -0.198067, 'AUC PR': 0.237483, 'F1': 0.304178, 'Inference time': 10.683, 'AUC ROC': 0.986151, 'parameter': {'Learning time': 2.687, 'Recall': 0.826241, 'Precision': [0.1864, 0.5], 'CLL': -0.198067, 'AUC PR': 0.237483, 'F1': 0.304178, 'Inference time': 10.683, 'AUC ROC': 0.986151}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;tweets(A, I), follows(H, J).;false;false
0;true,true;tweets(A, E).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;true;false
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false;follows(F, A).;true;true
0;false,false,false;follows(A, K), follows(K, L).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, D).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false;follows(E, A).;true;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(K, B).;false;false
2;true;follows(D, C), tweets(C, E).;false;false
2;false,false;follows(A, J), follows(J, K).;true;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
2;false;follows(F, A).;true;true
2;false,false,false;follows(A, L).;false;false
2;false,true,true;tweets(A, H), tweets(F, I).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(I, H), follows(I, A).;false;false
3;false,false,false;follows(A, J), follows(J, K).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(A, E), follows(D, F).;true;true
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,true,false;follows(G, A), follows(D, G).;false;false
3;false,true,true;recursion_accounttype(F, B), follows(A, F).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(A, H).;false;false
4;true,true;recursion_accounttype(D, B).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true,false;tweets(D, E), follows(A, D).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
4;false;follows(F, A).;false;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;recursion_accounttype(J, B).;false;false
5;true;follows(A, D), tweets(A, E).;false;false
5;false,false,false;follows(A, K).;false;false
5;false,false;follows(A, I), follows(I, J).;true;true
5;false,true;follows(F, G), follows(G, A).;false;true
5;false;follows(F, A).;true;true
5;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
6;true;follows(D, C), follows(D, A).;false;false
6;false,false,false;tweets(A, J).;false;false
6;false,false;follows(A, H).;true;true
6;false,true;follows(E, F), follows(F, A).;false;true
6;false;follows(E, A).;true;true
6;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;tweets(A, E).;false;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;true;follows(A, D), follows(C, D).;false;true
7;false,false;follows(A, G).;true;true
7;true,false,false;follows(A, C).;false;false
7;false;follows(F, A).;false;true
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,true;follows(A, E), follows(E, C).;true;false
8;false,false;follows(H, A).;false;true
8;true;follows(C, A), tweets(A, D).;true;false
8;false,true;follows(G, F), follows(G, A).;false;false
8;true,true,true;tweets(C, D), follows(E, A).;false;false
8;false,false,false;follows(A, I), follows(I, J).;false;false
8;false;follows(F, A), follows(A, G).;true;true
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,false;follows(A, K), follows(K, L).;false;false
9;false,false;follows(J, A).;false;true
9;true;tweets(A, D), follows(E, C).;true;false
9;false,true;follows(G, A), tweets(A, H).;false;true
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true,false;follows(F, I), follows(I, F).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7592478361984129;  // std dev = 2,848, 91,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=82 */
%   | | else return -0.14185106490048832;  // std dev = 0,000, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(H, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.587126641696897;  // std dev = 1,307, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.729283093064501;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05602090693764547;  // std dev = 4,538, 153,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6117223832489608;  // std dev = 2,472, 55,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.12544463852839108;  // std dev = 7,74e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8289515275190196;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10684594785415778;  // std dev = 1,647, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), phenotype(C, E) )
%   | then return 0.5898484633423291;  // std dev = 0,055, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5900423401273087;  // std dev = 0,071, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(F, I) )
%   | | | then return 0.5417478312976151;  // std dev = 2,497, 54,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | | else return 0.5407406400303484;  // std dev = 1,811, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | else return -0.12134939832163769;  // std dev = 0,128, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.1790181272311624;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13694424513025302;  // std dev = 1,589, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.38803909512497775;  // std dev = 0,983, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4718502853568506;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(D, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4747994197705722;  // std dev = 0,666, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.03967442238770189;  // std dev = 3,664, 134,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.06621014191065257;  // std dev = 3,462, 139,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1413213911025169;  // std dev = 1,540, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.22741373152855035;  // std dev = 0,933, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( phenotype(D, E), interaction(A, D) )
%   | | | then return 0.025365737253763565;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3713945761984749;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.022743878054360733;  // std dev = 0,830, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then return 0.04089139281670891;  // std dev = 5,226, 293,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5555846666812118;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.019464348334214326;  // std dev = 1,698, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.05083390963181133;  // std dev = 1,453, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0.2896543287808934;  // std dev = 0,067, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.03807572759505832;  // std dev = 3,702, 137,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.295608301631555;  // std dev = 2,641, 56,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.11090367331709297;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.6102558991116336;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1354451711599624;  // std dev = 1,445, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.10464006059041256;  // std dev = 1,500, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return -0.01772675830181351;  // std dev = 0,828, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.06409517901342973;  // std dev = 3,603, 113,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.22665603360126352;  // std dev = 0,918, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.006227617112033324;  // std dev = 3,013, 152,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=41 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6165225558158235;  // std dev = 0,358, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.25405098192823683;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.12097353130324937;  // std dev = 1,345, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( phenotype(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, C) )
%   | | | then return -0.6884396464011798;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21566488612097365;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then return 0.019289111074286998;  // std dev = 4,880, 285,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=82 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4813662125527577;  // std dev = 0,364, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20896535778421071;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then if ( phenotype(C, D), interaction(E, A) )
%   | | | then return 0.26040440061199616;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.22315347163998797;  // std dev = 0,879, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return -0.021162499833036433;  // std dev = 2,459, 61,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | else return 0.0061534558770812;  // std dev = 1,949, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(H, A) )
%   | | then return 0.040365720692041265;  // std dev = 3,647, 145,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.053995965420584456;  // std dev = 1,167, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.19981855651915337;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08106032367712497;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.17596787972699476;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then return 0.2653067754056884;  // std dev = 0,161, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2936421006356139;  // std dev = 0,218, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then return 0.018226214021630147;  // std dev = 4,682, 263,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=76 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0671452743003337;  // std dev = 1,308, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987889
   AUC PR    = 0.2638
   CLL	      = -0.160562
   Precision = 0.248588 at threshold = 0.5
   Recall    = 0.664151
   F1        = 0.361768


Total learning time: 3.545 seconds
Total inference time: 10.794 seconds
AUC ROC: 0.987889


Results scoring model
   AUC ROC   = 0.971785
   AUC PR    = 0.166886
   CLL	      = -0.193957
   Precision = 0.097765 at threshold = 0.5
   Recall    = 0.673077
   F1        = 0.170732


Total scoring time: 7.577 seconds
Parameter learned model CLL: -0.193957


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I), interaction(H, J)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'phenotype(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,false': [0.935, 1, 7], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false,false,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'false,true,false': [0.0, 183, 0], 'false,true,true': [2.848, 9, 82]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(A, D)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,false': [0.027, 0, 5], 'false,false,true,false': [1.647, 10, 4], 'false,true,false,true': [2.472, 7, 48], 'true,true': [1.307, 2, 12], 'false,false,true,true': [0.0, 0, 1], 'false,true,false,false': [7.74e-08, 106, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [4.538, 119, 34]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(K, B)', 'true': 'interaction(D, C), phenotype(C, E)', 'false,false': 'interaction(A, J), interaction(J, K)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,true,true': 'phenotype(A, H), phenotype(F, I)'}, {'true,false': [0.071, 0, 7], 'false,true,true,true': [2.497, 7, 47], 'true,true': [0.055, 0, 10], 'false,true,false': [0.128, 174, 0], 'false,true,true,false': [1.811, 4, 35], 'false,false,true,false': [1.589, 8, 4], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,true,false': 'interaction(G, A), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,true': 'phenotype(A, E), interaction(D, F)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'recursion_proteinclass(F, B), interaction(A, F)'}, {'false,false,true,false': [3.462, 94, 45], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.54, 7, 4], 'false,true,false,true': [0.0, 0, 0], 'true': [0.983, 1, 17], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,false': [0.666, 1, 5], 'false,false,true,true': [3.664, 103, 31]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, H)', 'true': 'interaction(D, C), interaction(D, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'phenotype(D, E), interaction(A, D)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false': 'interaction(F, A)'}, {'true,false': [0.83, 1, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.698, 14, 4], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.933, 1, 8], 'true,true,false,true': [0.793, 1, 2], 'false,false,true,true': [0.0, 0, 0], 'false,true': [5.226, 211, 82], 'true,true,false,false': [0.029, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'true': 'interaction(A, D), phenotype(A, E)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)'}, {'true,false': [0.067, 0, 9], 'false,false,true,false': [1.445, 6, 4], 'false,true,false,true': [2.641, 8, 48], 'true,true': [1.453, 3, 8], 'false,false,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 84, 0], 'false,false,false': [0.0, 0, 0], 'false,true,true': [3.702, 103, 34]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)'}, {'true,false': [0.828, 1, 2], 'false,false,true,false': [0.0, 11, 0], 'false,true,false,true': [0.918, 1, 7], 'true,true': [1.5, 3, 15], 'false,false,true,true': [0.358, 0, 5], 'false,true,false,false': [3.013, 111, 41], 'false,false,false': [0.0, 0, 0], 'false,true,true': [3.603, 79, 34]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,false': 'phenotype(A, E)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false,false': 'interaction(A, G)', 'true,false,false': 'interaction(A, C)', 'false': 'interaction(F, A)'}, {'true,false,false,false': [0.074, 0, 5], 'false,false,true,false': [0.0, 9, 0], 'true,true': [1.345, 2, 12], 'false,false,true,true': [0.364, 0, 5], 'false,true': [4.88, 203, 82], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false,false': 'interaction(H, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,true': 'interaction(G, F), interaction(G, A)', 'true,true,true': 'phenotype(C, D), interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false': 'interaction(F, A), interaction(A, G)'}, {'true,true,true,true': [0.043, 0, 5], 'true,false': [0.879, 1, 11], 'false,false,true': [3.647, 93, 52], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [2.459, 48, 13], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [1.167, 13, 4], 'false,true,false': [1.949, 50, 19], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(E, C)', 'false,true,false': 'interaction(F, I), interaction(I, F)', 'false,false': 'interaction(J, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, A), phenotype(A, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,false': [0.069, 0, 9], 'false,false,false,true': [1.308, 14, 4], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [3.73e-09, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'false,true,false,false': [0.218, 0, 4], 'false,true,true': [0.161, 0, 3], 'false,false,true': [4.682, 187, 76], 'true,true,false': [0.913, 1, 5]}]]
[{'': [0.05246913580246885, 0.2116607169054727], 'false,false,true': [nan, 0.0], 'true': [-8.881784197001253e-17, 0.10937499999999978], 'false,false': [0.0, 0.2314049586776858], 'true,true': [0.0, 0.0], 'false,true': [0.08911967153725427, -2.0627094446587609e-16], 'false': [0.20970749640364486, 0.24305555555555536], 'false,false,false': [0.2314049586776858, nan]}, {'': [0.09392183157435886, 0.15203441731606385], 'false,false,true': [0.0, 0.19370535022625995], 'true': [0.12209577623979127, 0.00014434475767259868], 'false,false': [0.2132365960092372, nan], 'false,true': [0.13456846293770308, 0.16016644254777487], 'false': [0.14893043038852777, 0.2132365960092372], 'false,true,false': [0.11107438016528978, 5.655853144316835e-17]}, {'': [0.0004746044451871382, 0.13946406659453028], 'false,false,true': [0.24999999999999997, 0.21037493836167223], 'true': [0.00029766777972985994, 0.0007273489994154479], 'false,false': [0.21625242205143835, nan], 'false,true': [0.10232184105006727, 9.36836678384393e-05], 'false': [0.1353818485763793, 0.21625242205143835], 'false,true,true': [0.11545952878906324, 0.08413060746204323]}, {'': [0.05363899161698719, 0.10174876024373292], 'false,false,true': [0.10020013244565441, 0.08620176761297453], 'false,true,false': [nan, 0.07388670790007323], 'false,false': [0.0932487369282885, 0.21565954927947678], 'false,true': [0.0, 0.07388670790007339], 'false': [0.05541666168639067, 0.09827921949909585], 'false,false,false': [0.21565954927947678, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1263907108882798, 0.09784277096910159], 'false,false,true': [nan, 0.0], 'true,true': [0.09664552604150371, 0.1067551788581923], 'false,false': [0.0, 0.16023879693089527], 'true': [0.10145338711221152, 0.22972953360847537], 'true,true,false': [0.209559043363669, 0.00017187613687188463], 'false,false,false': [0.16023879693089527, nan], 'false': [0.09321916026099768, 0.16829344377958447]}, {'': [0.11987319287932237, 0.09974696322735768], 'false,false,true': [0.0, 0.20885043713075818], 'true': [0.19188243025488216, 0.0004925468222392778], 'false,false': [0.2084958707286228, nan], 'false,true': [0.1000232306457368, 0.0894904239614468], 'false': [0.09474619780706625, 0.2084958707286228], 'false,true,false': [0.12457486843762747, -5.815453938512725e-17]}, {'': [0.1416140596476644, 0.09052592904577689], 'false,false,true': [0.02568148978976028, 0.0], 'true': [0.12497086254556083, 0.22863869508959758], 'false,false': [0.170855175145673, nan], 'false,true': [0.11491155759481916, 0.06432947450417306], 'false': [0.08579875952002575, 0.170855175145673], 'false,true,false': [0.10530109319575318, 0.05974363918060823]}, {'': [0.12548941002544026, 0.08523348429006937], 'true,false': [nan, 0.11444285591385588], 'false,false,true': [0.026437049769443943, -2.4671622769447922e-17], 'true': [0.12928309162574636, 0.11444285591385588], 'false,false': [0.11885555586243256, nan], 'true,false,false': [0.0, 0.001097259475443435], 'false': [0.08356620610347354, 0.11885555586243256]}, {'': [0.04583886700207786, 0.08483345278068678], 'true': [0.0003694401871396802, 0.06437633453498516], 'false,false': [0.09173307797832353, 0.08017055206434139], 'true,true,true': [0.0003694401871396802, nan], 'true,true': [0.0003694401871396802, nan], 'false,true': [0.09915507994044723, 0.05506738571815373], 'false': [0.07594052232575212, 0.09135605765652528], 'false,false,false': [0.08017055206434139, nan]}, {'': [0.04892205349555012, 0.08445572161532465], 'true': [0.0957784335314063, 0.0005354404715292397], 'false,true,false': [nan, 0.011854410042740099], 'false,false': [0.08335594395755187, 0.09498411644506023], 'true,true': [4.625929269271485e-18, 0.13896647767452233], 'false,true': [0.008692375126377466, 0.011854410042740099], 'false': [0.010695878504515857, 0.08453776873335862], 'false,false,false': [0.09498411644506023, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true,true;phenotype(A, E).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false;interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D).;true;true
1;false,false;recursion_proteinclass(I, B).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;false;interaction(E, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
2;true;interaction(D, C), phenotype(C, E).;true;true
2;false;interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;phenotype(A, E), interaction(D, F).;true;true
3;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true,false;phenotype(D, E), interaction(A, D).;true;true
4;false;interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, D), phenotype(A, E).;true;true
5;false,false;recursion_proteinclass(J, B).;true;true
5;false,true;interaction(F, G), interaction(G, A).;true;true
5;false;interaction(F, A).;true;true
5;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(E, A).;true;true
6;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true,false;interaction(A, C).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), phenotype(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;true;phenotype(A, D), interaction(E, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.6323424834866099;  // std dev = 4,032, 93,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=72 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048835;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.037439581352249264;  // std dev = 2,808, 62,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return 0.1021937417268394;  // std dev = 3,601, 83,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5843423153565329;  // std dev = 2,858, 58,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.1254446385283911;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.8025751056621154;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11232543417506968;  // std dev = 1,124, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.18695181129447452;  // std dev = 0,044, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), phenotype(C, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.3553664367462845;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5553664367462844;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.30536643674628444;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.5928660850816848;  // std dev = 0,283, 90,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | | else return -0.12123728714407848;  // std dev = 0,011, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.07707534067968491;  // std dev = 1,294, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.14373391375083414;  // std dev = 0,677, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.14789595234446193;  // std dev = 0,687, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.43394296222206025;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.017513584158309968;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.4477970168558538;  // std dev = 0,028, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(F, H) )
%   | | then return 0.4976122971691639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.6082066358552847;  // std dev = 0,129, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.0388626281973866;  // std dev = 3,031, 89,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | | else return 0.1319282841058945;  // std dev = 3,014, 83,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.053620462855065;  // std dev = 1,213, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.027660189652682694;  // std dev = 2,746, 104,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.3473618769213082;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.05130928853469104;  // std dev = 0,835, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.47382951787249866;  // std dev = 0,923, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.13216358420755212;  // std dev = 0,411, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.0782578552541505;  // std dev = 2,342, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.021633259958202825;  // std dev = 3,718, 149,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=39 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5193865465680414;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.21535827982661682;  // std dev = 0,807, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.006831005214036959;  // std dev = 1,162, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.2014657865519118;  // std dev = 0,287, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.1756518302556232;  // std dev = 0,961, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.26406237374421876;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( location(A, I) )
%   | | | then return 0.05458586366406431;  // std dev = 3,520, 111,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | | else return -0.18218613062993777;  // std dev = 0,239, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05717080741608764;  // std dev = 0,284, 139,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.11073103384696592;  // std dev = 1,175, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.39782923729939795;  // std dev = 0,749, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.17920548997700222;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.23471942305906565;  // std dev = 0,032, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.33175810518278753;  // std dev = 0,115, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.18110783607570405;  // std dev = 0,250, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12350255782087984;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2862662577972275;  // std dev = 0,506, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04386265911862342;  // std dev = 4,646, 248,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=76 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.29714008766356764;  // std dev = 1,083, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07830212601638793;  // std dev = 0,465, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.17595167095021053;  // std dev = 0,114, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2014971272832283;  // std dev = 0,036, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2218498350321992;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.23826927582839677;  // std dev = 0,345, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.17800799408086374;  // std dev = 0,360, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.016745003741199516;  // std dev = 2,246, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.05775653172992277;  // std dev = 4,015, 196,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=68 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.36699271405455464;  // std dev = 0,733, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.24477003058932637;  // std dev = 0,185, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14007270747554265;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.1632041378264599;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.20397781271654405;  // std dev = 0,163, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.1645421109462731;  // std dev = 0,831, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, G), interaction(A, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, H), location(H, G) )
%   | | | then return 0.4685694194205536;  // std dev = 0,982, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.07037725094457166;  // std dev = 0,896, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.0915527269652079;  // std dev = 0,189, 122,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=14 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then return 0.021703915477771982;  // std dev = 0,238, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.08361147535852737;  // std dev = 2,560, 85,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.03797186694872096;  // std dev = 1,387, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13643102174587066;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19126631490863163;  // std dev = 0,075, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), location(F, G) )
%   | | then return 0.1345016537519876;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17424344204540673;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.08700857536228832;  // std dev = 0,004, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.24967049048060028;  // std dev = 1,614, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.009536855804994882;  // std dev = 3,654, 209,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=52 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return -0.03787205459148382;  // std dev = 1,461, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.04271476216249516;  // std dev = 1,259, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.982712
   AUC PR    = 0.265811
   CLL	      = -0.178646
   Precision = 0.165644 at threshold = 0.5
   Recall    = 0.815094
   F1        = 0.275335


Total learning time: 9.034 seconds
Total inference time: 43.377 seconds
AUC ROC: 0.982712


Results scoring model
   AUC ROC   = 0.980394
   AUC PR    = 0.158988
   CLL	      = -0.196151
   Precision = 0.107987 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.193353


Total scoring time: 11.686 seconds
Refined model CLL: -0.196151


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987889
   AUC PR    = 0.2638
   CLL	      = -0.160562
   Precision = 0.248588 at threshold = 0.5
   Recall    = 0.664151
   F1        = 0.361768


Total learning time: 31.842 seconds
Total inference time: 10.794 seconds
AUC ROC: 0.987889
Total revision time: 31.842
Best scored revision CLL: -0.193957


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:12:01
{'Learning time': 31.842, 'Recall': 0.664151, 'Precision': [0.248588, 0.5], 'CLL': -0.160562, 'AUC PR': 0.2638, 'F1': 0.361768, 'Inference time': 10.794, 'AUC ROC': 0.987889, 'parameter': {'Learning time': 3.545, 'Recall': 0.664151, 'Precision': [0.248588, 0.5], 'CLL': -0.160562, 'AUC PR': 0.2638, 'F1': 0.361768, 'Inference time': 10.794, 'AUC ROC': 0.987889}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;tweets(A, I), follows(H, J).;false;false
0;true,true;tweets(A, E).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;true;false
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false;follows(F, A).;true;true
0;false,false,false;follows(A, K), follows(K, L).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, D).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false;follows(E, A).;true;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(K, B).;false;false
2;true;follows(D, C), tweets(C, E).;false;false
2;false,false;follows(A, J), follows(J, K).;true;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
2;false;follows(F, A).;true;true
2;false,false,false;follows(A, L).;false;false
2;false,true,true;tweets(A, H), tweets(F, I).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(I, H), follows(I, A).;false;false
3;false,false,false;follows(A, J), follows(J, K).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(A, E), follows(D, F).;true;true
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,true,false;follows(G, A), follows(D, G).;false;false
3;false,true,true;recursion_accounttype(F, B), follows(A, F).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(A, H).;false;false
4;true,true;recursion_accounttype(D, B).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true,false;tweets(D, E), follows(A, D).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
4;false;follows(F, A).;false;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;recursion_accounttype(J, B).;false;false
5;true;follows(A, D), tweets(A, E).;false;false
5;false,false,false;follows(A, K).;false;false
5;false,false;follows(A, I), follows(I, J).;true;true
5;false,true;follows(F, G), follows(G, A).;false;true
5;false;follows(F, A).;true;true
5;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
6;true;follows(D, C), follows(D, A).;false;false
6;false,false,false;tweets(A, J).;false;false
6;false,false;follows(A, H).;true;true
6;false,true;follows(E, F), follows(F, A).;false;true
6;false;follows(E, A).;true;true
6;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;tweets(A, E).;false;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;true;follows(A, D), follows(C, D).;false;true
7;false,false;follows(A, G).;true;true
7;true,false,false;follows(A, C).;false;false
7;false;follows(F, A).;false;true
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,true;follows(A, E), follows(E, C).;true;false
8;false,false;follows(H, A).;false;true
8;true;follows(C, A), tweets(A, D).;true;false
8;false,true;follows(G, F), follows(G, A).;false;false
8;true,true,true;tweets(C, D), follows(E, A).;false;false
8;false,false,false;follows(A, I), follows(I, J).;false;false
8;false;follows(F, A), follows(A, G).;true;true
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,false;follows(A, K), follows(K, L).;false;false
9;false,false;follows(J, A).;false;true
9;true;tweets(A, D), follows(E, C).;true;false
9;false,true;follows(G, A), tweets(A, H).;false;true
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true,false;follows(F, I), follows(I, F).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004877;  // std dev = 5,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(H, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1504566274072046;  // std dev = 3,667, 65,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.052432845837786755;  // std dev = 2,123, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.12544463852839108;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.21947341221095448;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.17578939562615536;  // std dev = 3,616, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14207446911896834;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), phenotype(C, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462844;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(F, I) )
%   | | | then return 0.49489526975116677;  // std dev = 0,986, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.5570442920753407;  // std dev = 1,079, 44,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.11645122222440579;  // std dev = 0,095, 147,000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.6731303773666394;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18851486833160072;  // std dev = 3,508, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.28579738207750105;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, F) )
%   | | | then return 0.41710559303026506;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6405027301316674;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A), interaction(D, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.444702411401387;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.03759066474529592;  // std dev = 1,753, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.06171183783025544;  // std dev = 2,873, 141,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12506203782291445;  // std dev = 3,549, 55,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.23379816533557163;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3207118471601496;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then return 0.043822242636144586;  // std dev = 3,538, 185,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.48426621403106784;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40240478038577043;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07284029787957995;  // std dev = 3,617, 61,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.019052466028338693;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.007596981648463525;  // std dev = 1,755, 41,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.36795295239649356;  // std dev = 1,001, 49,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.11123252184913907;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.31048348951037386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.036389140535576445;  // std dev = 3,704, 68,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.18159871106383818;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.06690057277539271;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.09864660452142446;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.08429876811376545;  // std dev = 1,625, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.28320750122087224;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.029386001081980362;  // std dev = 2,260, 141,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6966100406562827;  // std dev = 0,597, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.26694174471782667;  // std dev = 0,222, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1980485613969795;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.19387377054679034;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.19387377054679034;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.19512620780184708;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then return 0.010417615764326468;  // std dev = 2,906, 203,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5452380343073774;  // std dev = 0,557, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.21730966915356414;  // std dev = 0,181, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then if ( phenotype(C, D), interaction(E, A) )
%   | | | then return 0.1691960714481442;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1769596461350197;  // std dev = 0,138, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return -0.08715609727451762;  // std dev = 0,650, 13,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.0014523907185309756;  // std dev = 1,517, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else if ( interaction(H, A) )
%   | | then return 0.032502644764772555;  // std dev = 2,397, 118,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.004551458693561447;  // std dev = 2,325, 65,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.04181577105018808;  // std dev = 0,422, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.14672376519906782;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1609185456093103;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1530280597871023;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then return 0.20376188931604222;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0.07397656919036677;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1583478391426222;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then return 0.002507076164454175;  // std dev = 2,986, 192,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=52 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.005971184410738787;  // std dev = 2,351, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.033125795732945496;  // std dev = 0,421, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.978016
   AUC PR    = 0.174722
   CLL	      = -0.187613
   Precision = 0.147493 at threshold = 0.5
   Recall    = 0.722022
   F1        = 0.244948


Total learning time: 2.514 seconds
Total inference time: 14.508 seconds
AUC ROC: 0.978016


Results scoring model
   AUC ROC   = 0.99637
   AUC PR    = 0.513999
   CLL	      = -0.149921
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.646154


Total scoring time: 3.347 seconds
Parameter learned model CLL: -0.149921


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I), interaction(H, J)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'phenotype(A, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,false': [0.0, 0, 4], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.707, 1, 1], 'true,true,true': [0.0, 0, 4], 'false,false,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 6], 'false,true,false': [5.58e-08, 117, 0], 'false,true,true': [0.0, 0, 56]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(A, D)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false': 'interaction(E, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,false': [0.0, 0, 5], 'false,false,true,false': [3.616, 39, 20], 'false,false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 48], 'true,true': [0.0, 0, 9], 'false,false,false,false': [0.816, 2, 1], 'false,false,true,true': [0.707, 1, 1], 'false,true,false,false': [7.88e-08, 112, 0], 'false,true,true': [2.123, 30, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(K, B)', 'true': 'interaction(D, C), phenotype(C, E)', 'false,false': 'interaction(A, J), interaction(J, K)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, L)', 'false,true,true': 'phenotype(A, H), phenotype(F, I)'}, {'true,false': [0.0, 0, 8], 'false,true,true,true': [0.986, 1, 13], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 6], 'false,true,true,false': [1.079, 1, 43], 'false,false,true,false': [3.508, 33, 20], 'false,true,false': [0.095, 147, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,true,false': 'interaction(G, A), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,true': 'phenotype(A, E), interaction(D, F)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'recursion_proteinclass(F, B), interaction(A, F)'}, {'false,false,true,false': [2.873, 97, 44], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [3.549, 36, 19], 'false,true,false,true': [0.0, 0, 0], 'true': [4.21e-08, 0, 14], 'false,false,false,false': [0.707, 1, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,false': [0.079, 0, 4], 'false,false,true,true': [1.753, 28, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, G)', 'true': 'interaction(D, C), interaction(D, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,false': [0.0, 0, 8], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [0.816, 2, 1], 'true,true,true': [0.0, 0, 6], 'false,false,true,true': [0.0, 0, 1], 'false,true': [3.538, 129, 56], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'true': 'interaction(A, D), phenotype(A, E)', 'false,true,false': 'interaction(F, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), interaction(I, J)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false': 'interaction(F, A)', 'false,false,false': 'interaction(A, K)'}, {'true,false': [0.0, 0, 9], 'false,false,true,false': [3.704, 48, 20], 'false,false,false,true': [0.707, 1, 1], 'false,true,false,true': [1.001, 1, 48], 'true,true': [0.0, 0, 5], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 100, 0], 'false,true,true': [1.755, 33, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false': 'interaction(E, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)'}, {'true,false': [0.943, 1, 8], 'false,false,true,false': [0.222, 48, 0], 'false,true,false,true': [0.061, 0, 3], 'true,true': [0.926, 1, 6], 'false,false,true,true': [0.597, 0, 22], 'false,true,false,false': [2.26, 96, 45], 'false,false,false': [0.0, 0, 0], 'false,true,true': [1.625, 18, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,false': 'phenotype(A, E)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false,false': 'interaction(A, G)', 'true,false,false': 'interaction(A, C)', 'false': 'interaction(F, A)'}, {'true,false,false,false': [0.004, 0, 4], 'false,false,true,false': [0.181, 41, 0], 'true,true': [0.005, 0, 6], 'false,false,true,true': [0.557, 0, 22], 'false,true': [2.906, 147, 56], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false,false': 'interaction(H, A)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false,true': 'interaction(G, F), interaction(G, A)', 'true,true,true': 'phenotype(C, D), interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false': 'interaction(F, A), interaction(A, G)'}, {'true,true,true,true': [0.0, 0, 4], 'true,false': [0.138, 0, 10], 'false,false,true': [2.397, 77, 41], 'false,false,false,false': [0.422, 1, 1], 'false,true,true': [0.65, 12, 1], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [2.325, 46, 19], 'false,true,false': [1.517, 49, 16], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(E, C)', 'false,true,false': 'interaction(F, I), interaction(I, F)', 'false,false': 'interaction(J, A)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(G, A), phenotype(A, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,false': [0.028, 0, 8], 'false,false,false,true': [2.351, 44, 19], 'false,true,false,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 4], 'false,false,false,false': [0.421, 1, 1], 'false,true,false,false': [0.055, 0, 3], 'false,true,true': [0.004, 0, 2], 'false,false,true': [2.986, 140, 52], 'true,true,false': [0.0, 0, 2]}]]
[{'': [-2.5376526277146434e-16, 0.21842770302575013], 'false,false,true': [0.0, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'false,false': [0.0, 0.2094007574069944], 'true,true': [0.0, -1.4802973661668753e-16], 'false,true': [-1.2688263138573217e-16, 2.6569439905559303e-17], 'false': [0.21891810618463733, 0.21718126444024455], 'false,false,false': [0.20686390532544327, 0.25]}, {'': [6.344131569286608e-17, 0.1645324811586488], 'false,false,true': [0.25, 0.22163645420324332], 'true': [0.0, 0.0], 'false,true,false': [-8.141635513917814e-16, 5.551115123125783e-17], 'false,false': [0.22262692214121482, 0.22222222222222224], 'false,true': [0.11865149791664976, 0.14991616761768756], 'false': [0.14480220250798675, 0.2226631433511065], 'false,false,false': [nan, 0.22222222222222224]}, {'': [-1.2688263138573217e-16, 0.13036640482728432], 'false,false,true': [0.0, 0.2321995448353854], 'true': [-1.1102230246251565e-16, -5.551115123125783e-17], 'false,false': [0.2321681287632131, 0.24999999999999997], 'false,true': [0.03755112681348998, 6.144211072780786e-05], 'false': [0.09863963547487066, 0.23307354623645282], 'false,false,false': [0.24999999999999997, nan], 'false,true,true': [0.0694527153576758, 0.026468293545855316]}, {'': [1.2688263138573217e-16, 0.10690942004233477], 'false,false,true': [0.08537675584222222, 0.058536753555651154], 'false,true,false': [nan, 0.0015619884890832325], 'false,false': [0.06409000672939824, 0.23019885548145425], 'false,true': [0.012476570216275684, 0.001561988489083177], 'false': [0.006771983372206895, 0.10550948832811542], 'false,false,false': [0.22906395261956475, 0.25], 'false,true,true': [0.0, 0.0]}, {'': [0.0, 0.10605047379781649], 'false,false,true': [0.0, 0.0], 'true': [0.0, -4.163336342344337e-17], 'false,false': [0.0016753235796158616, 0.21495166290344855], 'true,true': [0.0, nan], 'false': [0.067670564754234, 0.21257737713049105], 'false,false,false': [0.21445847890352113, 0.2222222222222222]}, {'': [2.3790493384824782e-17, 0.09969140500613363], 'false,false,true': [0.0, 0.20180214798778107], 'true': [0.0, -1.2335811384723961e-17], 'false,true,false': [0.02044313994536198, -6.217248937900877e-17], 'false,false': [0.19995050678096685, 0.25], 'false,true': [0.07514121617305265, 0.05740223803019453], 'false': [0.06148428909920113, 0.20190643700009522], 'false,false,false': [0.25, nan]}, {'': [0.10937499999999999, 0.0933737083608174], 'false,false,true': [0.016188200440932346, 0.0010227972657366653], 'true': [0.12244897959183675, 0.09876543209876543], 'false,false': [0.20587564591898164, nan], 'false,true': [0.10161985227105566, 0.036805750085519194], 'false': [0.047037528318866643, 0.20587564591898164], 'false,true,false': [0.001257669249479047, 0.036219897357367456]}, {'': [6.146347407095679e-06, 0.0646097148795921], 'true,false': [0.0, 3.4857757285576088e-06], 'false,false,true': [0.01410749526950239, 0.0008014430149380649], 'true': [3.4857757285576088e-06, 2.7450483862448416e-06], 'false,false': [0.13759565981340982, nan], 'true,false,false': [0.0, 4.705797233557629e-06], 'false': [0.041606764452709014, 0.13759565981340982]}, {'': [0.0013692287723412783, 0.054169308540516464], 'true': [0.0, 0.0018996993978724452], 'false,false': [0.048684750265823064, 0.0833926779031373], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'false,true': [0.03247397751231243, 0.03539222345273472], 'false': [0.0359260054234192, 0.06142104333298866], 'false,false,false': [0.08317732352327566, 0.08904451788443557]}, {'': [7.731314398147702e-05, 0.05619988633103677], 'true': [4.47759535322223e-05, 0.00010065601304425423], 'false,true,false': [0.0, 0.0010047168880258732], 'false,false': [0.046432003114321864, 0.08781674570367136], 'true,true': [0.0, 0.0], 'false,true': [7.85559352466797e-06, 0.0020882585147737227], 'false': [0.002377716084611172, 0.056902454460368686], 'false,false,false': [0.08776705623368942, 0.0886672794894599]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;phenotype(A, I), interaction(H, J).;true;true
0;true,true;phenotype(A, E).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false;interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;true;interaction(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false,true;recursion_proteinclass(K, B).;true;true
2;true;interaction(D, C), phenotype(C, E).;true;true
2;false,false;interaction(A, J), interaction(J, K).;true;true
2;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
2;false;interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;phenotype(A, E), interaction(D, F).;true;true
3;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
3;false,true,true;recursion_proteinclass(F, B), interaction(A, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,false,true;phenotype(A, G).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,false,true;recursion_proteinclass(J, B).;true;true
5;true;interaction(A, D), phenotype(A, E).;true;true
5;false,false;interaction(A, I), interaction(I, J).;true;true
5;false,true;interaction(F, G), interaction(G, A).;true;true
5;false;interaction(F, A).;true;true
5;false,true,false;interaction(F, H), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), interaction(F, A).;true;true
6;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;false;interaction(E, A).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true,false;phenotype(A, E).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;true,false,false;interaction(A, C).;true;true
7;false;interaction(F, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), phenotype(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;true;phenotype(A, D), interaction(E, C).;true;true
9;false,true;interaction(G, A), phenotype(A, H).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,true,false;interaction(F, I), interaction(I, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048813;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(H, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.21814893509951236;  // std dev = 2,400, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.18167834686421824;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.730486532899783;  // std dev = 0,017, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.007963474746242157;  // std dev = 1,343, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.2136810535079481;  // std dev = 1,488, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.12544463852839108;  // std dev = 7,74e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.812833337518946;  // std dev = 0,102, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16900437952043806;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.08606237010636576;  // std dev = 2,699, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.16591469368261816;  // std dev = 1,998, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), phenotype(C, E) )
%   | then return 0.560773574576349;  // std dev = 0,045, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.5526452849219572;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5892225883667204;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.5809604385216436;  // std dev = 0,183, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5731695989049924;  // std dev = 0,309, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11562272415205567;  // std dev = 0,009, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( recursion_proteinclass(M, B) )
%   | | | then return 0.27692035387588887;  // std dev = 0,601, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15821777991163877;  // std dev = 3,443, 57,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.13478183799118093;  // std dev = 0,681, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42205190760383166;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2416275874075345;  // std dev = 0,872, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F), interaction(E, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, G) )
%   | | | then return 0.41319038937115593;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49270050551538636;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.47009453454002975;  // std dev = 0,197, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), interaction(K, J) )
%   | | | then return 0.013569911940428142;  // std dev = 2,620, 129,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=28 */
%   | | | else return 0.10205592555356366;  // std dev = 1,449, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.002427800489121747;  // std dev = 1,420, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.0896213391564709;  // std dev = 3,617, 84,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33941836578281986;  // std dev = 0,030, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.00834181718565763;  // std dev = 1,061, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.08435688065377309;  // std dev = 0,416, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.1114191459530342;  // std dev = 1,218, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.06605204885570096;  // std dev = 2,771, 123,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.3724079271517903;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5271666711238212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.1096993664961897;  // std dev = 2,866, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.05287217669544947;  // std dev = 2,067, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.2684229705930677;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2680072273312978;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.20017617479683458;  // std dev = 0,804, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.027807476780728216;  // std dev = 1,313, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.35694604814910086;  // std dev = 0,988, 49,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.11276373961916254;  // std dev = 0,052, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.09647738146220718;  // std dev = 0,425, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12630403951309926;  // std dev = 3,337, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else return -0.02846243137095044;  // std dev = 0,720, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2190445117463284;  // std dev = 0,023, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.05339891308078213;  // std dev = 1,247, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.03311026605714815;  // std dev = 1,167, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.27930736098906467;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02263115942173523;  // std dev = 2,236, 145,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.2925946176645835;  // std dev = 1,095, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.41566749796946995;  // std dev = 2,186, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.22035634188448555;  // std dev = 0,085, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.2638677662390952;  // std dev = 0,019, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.14817514586671068;  // std dev = 0,806, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18189985197784828;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1857840798616917;  // std dev = 0,025, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then return -1.913234671163333E-4;  // std dev = 0,191, 85,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06753429137205494;  // std dev = 1,432, 42,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.008502728631130043;  // std dev = 1,640, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.14009676627862416;  // std dev = 1,240, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.327583347840412;  // std dev = 2,184, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | else return -0.2012395058487001;  // std dev = 0,022, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18103286639615382;  // std dev = 0,035, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(F, D), enzyme(F, G) )
%   | | | then return -0.02876267487177645;  // std dev = 1,378, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return -0.10390218315666747;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.009920469436603505;  // std dev = 1,316, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.352714989056219;  // std dev = 0,628, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), interaction(K, A) )
%   | | | then return 0.09504687739458231;  // std dev = 1,389, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0033304763774946915;  // std dev = 2,363, 146,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | | else if ( location(A, L) )
%   | | | then return 0.12509597484964557;  // std dev = 1,765, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.025948606718499478;  // std dev = 1,006, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then return 0.15633064404720337;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14858678318779367;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then return 0.2074184538180175;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0.008009265810571903;  // std dev = 0,260, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1683731385711843;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( enzyme(L, J), interaction(A, L) )
%   | | | then return -0.0957335453911392;  // std dev = 0,715, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.020456440181049734;  // std dev = 1,541, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.0019305135840998458;  // std dev = 2,182, 69,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.04875659017942893;  // std dev = 2,654, 99,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */


Results
   AUC ROC   = 0.976014
   AUC PR    = 0.194235
   CLL	      = -0.194897
   Precision = 0.134953 at threshold = 0.5
   Recall    = 0.722022
   F1        = 0.227402


Total learning time: 7.139 seconds
Total inference time: 44.689 seconds
AUC ROC: 0.976014


Results scoring model
   AUC ROC   = 0.992372
   AUC PR    = 0.477333
   CLL	      = -0.173524
   Precision = 0.331897 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.475309


Total scoring time: 7.857 seconds
Refined model CLL: -0.173524


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978016
   AUC PR    = 0.174722
   CLL	      = -0.187613
   Precision = 0.147493 at threshold = 0.5
   Recall    = 0.722022
   F1        = 0.244948


Total learning time: 20.857 seconds
Total inference time: 14.508 seconds
AUC ROC: 0.978016
Total revision time: 20.857
Best scored revision CLL: -0.149921


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:13:22
{'Learning time': 20.857, 'Recall': 0.722022, 'Precision': [0.147493, 0.5], 'CLL': -0.187613, 'AUC PR': 0.174722, 'F1': 0.244948, 'Inference time': 14.508, 'AUC ROC': 0.978016, 'parameter': {'Learning time': 2.514, 'Recall': 0.722022, 'Precision': [0.147493, 0.5], 'CLL': -0.187613, 'AUC PR': 0.174722, 'F1': 0.244948, 'Inference time': 14.508, 'AUC ROC': 0.978016}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;tweets(A, I), follows(H, J).;false;false
0;true,true;tweets(A, E).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;true;false
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false;follows(F, A).;true;true
0;false,false,false;follows(A, K), follows(K, L).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;true;follows(A, D).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false;follows(E, A).;true;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;recursion_accounttype(K, B).;false;false
2;true;follows(D, C), tweets(C, E).;false;false
2;false,false;follows(A, J), follows(J, K).;true;true
2;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
2;false;follows(F, A).;true;true
2;false,false,false;follows(A, L).;false;false
2;false,true,true;tweets(A, H), tweets(F, I).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(I, H), follows(I, A).;false;false
3;false,false,false;follows(A, J), follows(J, K).;false;false
3;false,false;follows(H, A).;true;true
3;false,true;tweets(A, E), follows(D, F).;true;true
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,true,false;follows(G, A), follows(D, G).;false;false
3;false,true,true;recursion_accounttype(F, B), follows(A, F).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;tweets(A, H).;false;false
4;true,true;recursion_accounttype(D, B).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true,false;tweets(D, E), follows(A, D).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
4;false;follows(F, A).;false;true
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;false,false,true;recursion_accounttype(J, B).;false;false
5;true;follows(A, D), tweets(A, E).;false;false
5;false,false,false;follows(A, K).;false;false
5;false,false;follows(A, I), follows(I, J).;true;true
5;false,true;follows(F, G), follows(G, A).;false;true
5;false;follows(F, A).;true;true
5;false,true,false;follows(F, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
6;true;follows(D, C), follows(D, A).;false;false
6;false,false,false;tweets(A, J).;false;false
6;false,false;follows(A, H).;true;true
6;false,true;follows(E, F), follows(F, A).;false;true
6;false;follows(E, A).;true;true
6;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;tweets(A, E).;false;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;true;follows(A, D), follows(C, D).;false;true
7;false,false;follows(A, G).;true;true
7;true,false,false;follows(A, C).;false;false
7;false;follows(F, A).;false;true
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true,true;follows(A, E), follows(E, C).;true;false
8;false,false;follows(H, A).;false;true
8;true;follows(C, A), tweets(A, D).;true;false
8;false,true;follows(G, F), follows(G, A).;false;false
8;true,true,true;tweets(C, D), follows(E, A).;false;false
8;false,false,false;follows(A, I), follows(I, J).;false;false
8;false;follows(F, A), follows(A, G).;true;true
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
9;false,false,false;follows(A, K), follows(K, L).;false;false
9;false,false;follows(J, A).;false;true
9;true;tweets(A, D), follows(E, C).;true;false
9;false,true;follows(G, A), tweets(A, H).;false;true
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true,false;follows(F, I), follows(I, F).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995121;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995115;  // std dev = 2,53e-07, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(J, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.17064893509951212;  // std dev = 3,708, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.15544623239680966;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.6480448407823829;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.058653726351454626;  // std dev = 2,903, 68,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3088548306776122;  // std dev = 0,669, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16682225069245019;  // std dev = 3,802, 66,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.40958218874710195;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.13815361731853026;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then return 0.5729277032086344;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4676593232699293;  // std dev = 0,943, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(F, I) )
%   | | | then return 0.608607706307709;  // std dev = 0,324, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.6314253932626052;  // std dev = 0,304, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.12281379327418653;  // std dev = 0,102, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.7243872985637265;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11226895314483339;  // std dev = 3,895, 72,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.050161682986944;  // std dev = 2,846, 42,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.44196968369567047;  // std dev = 0,047, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, A) )
%   | | | then return 0.4046251670079899;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5423726120159779;  // std dev = 0,182, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6452409981321177;  // std dev = 0,120, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.03571067108021812;  // std dev = 2,285, 60,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.030264696078922283;  // std dev = 1,886, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0719498868332656;  // std dev = 3,801, 72,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.02812384721299882;  // std dev = 2,875, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.33969162356741545;  // std dev = 0,036, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.33357998887451307;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then return 0.03442563630773976;  // std dev = 2,970, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11798255132935989;  // std dev = 1,071, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.10750553008587586;  // std dev = 3,683, 61,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.1288879716902278;  // std dev = 2,663, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.11775753620335963;  // std dev = 0,906, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2719628178423028;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then return -7.003573208270056E-4;  // std dev = 2,358, 77,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3325029332139598;  // std dev = 0,980, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.10665065093971558;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.012382567034751296;  // std dev = 0,544, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.05465048675314572;  // std dev = 3,879, 73,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.0749824397055556;  // std dev = 2,754, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.22887246112075613;  // std dev = 0,020, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08527849002429026;  // std dev = 0,896, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.014622769429046872;  // std dev = 2,293, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.13368208580453503;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.010341664136498596;  // std dev = 1,381, 60,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6947849948078227;  // std dev = 1,071, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.25279122229740375;  // std dev = 0,131, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.19233236280109395;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2101747126020971;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19756221920733644;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.006455436242839072;  // std dev = 2,878, 143,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=36 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5706896568644556;  // std dev = 0,499, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.20755961060802025;  // std dev = 0,105, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then if ( phenotype(C, D), interaction(A, E) )
%   | | | then return 0.1680172371746088;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2019389492093947;  // std dev = 0,246, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return -0.10979812318949539;  // std dev = 0,306, 17,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return 0.0336386934731132;  // std dev = 2,060, 79,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | else if ( interaction(A, H) )
%   | | then return 0.012269005252383289;  // std dev = 1,841, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.002415815941310699;  // std dev = 2,416, 73,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.010564407261500498;  // std dev = 1,856, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1458208191331023;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18256468527103872;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1484154057017358;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), phenotype(A, H) )
%   | | then return 0.243078219405234;  // std dev = 0,151, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, F), interaction(F, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1724044563362095;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then return -0.004166678050192882;  // std dev = 2,733, 149,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=33 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07455029585330564;  // std dev = 2,267, 50,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return 0.02045417974124258;  // std dev = 1,702, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */


Results
   AUC ROC   = 0.982611
   AUC PR    = 0.198673
   CLL	      = -0.191942
   Precision = 0.156398 at threshold = 0.5
   Recall    = 0.816254
   F1        = 0.2625


Total learning time: 2.191 seconds
Total inference time: 12.738 seconds
AUC ROC: 0.982611


Results scoring model
   AUC ROC   = 0.989609
   AUC PR    = 0.344915
   CLL	      = -0.178213
   Precision = 0.266667 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.404494


Total scoring time: 3.523 seconds
Parameter learned model CLL: -0.178213


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, I), interaction(J, H)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'phenotype(A, E)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,false': [2.98e-08, 0, 6], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [3.708, 44, 20], 'false,false,false,false': [2.78, 26, 11], 'true,true,true': [0.0, 0, 4], 'false,false,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 6], 'false,true,false': [7.88e-08, 84, 0], 'false,true,true': [2.53e-07, 0, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'interaction(D, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false': 'interaction(A, E)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,false': [0.0, 0, 3], 'false,false,true,false': [3.802, 44, 22], 'false,false,false,true': [1.852, 6, 8], 'false,true,false,true': [7.3e-08, 0, 21], 'true,true': [0.964, 1, 13], 'false,false,false,false': [1.449, 7, 3], 'false,false,true,true': [0.669, 1, 1], 'false,true,false,false': [0.0, 48, 0], 'false,true,true': [2.903, 53, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(K, B)', 'true': 'interaction(C, D), phenotype(C, E)', 'false,false': 'interaction(J, A), interaction(K, J)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(L, A)', 'false,true,true': 'phenotype(A, H), phenotype(F, I)'}, {'true,false': [0.943, 1, 9], 'false,true,true,true': [0.324, 0, 20], 'false,false,false,true': [2.846, 31, 11], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 7], 'false,true,true,false': [0.304, 0, 16], 'false,false,true,false': [3.895, 50, 22], 'false,true,false': [0.102, 107, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,true,false': 'interaction(A, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,true': 'phenotype(A, E), interaction(F, D)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'recursion_proteinclass(F, B), interaction(F, A)'}, {'false,false,true,false': [1.886, 54, 19], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [3.801, 52, 20], 'false,true,false,true': [0.0, 0, 0], 'true': [0.047, 0, 16], 'false,false,false,false': [2.875, 33, 11], 'false,true,true,false': [0.182, 0, 3], 'false,true,false,false': [0.12, 0, 2], 'false,false,true,true': [2.285, 46, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(A, G)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,false': [0.021, 0, 6], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.683, 41, 20], 'false,false,false,false': [2.663, 20, 11], 'true,true,true': [0.036, 0, 10], 'false,false,true,true': [1.071, 2, 3], 'false,true': [2.97, 102, 36], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(J, B)', 'true': 'interaction(D, A), phenotype(A, E)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), interaction(J, I)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(K, A)'}, {'true,false': [0.024, 0, 10], 'false,false,true,false': [3.879, 51, 22], 'false,false,false,true': [2.754, 22, 11], 'false,true,false,true': [0.98, 1, 21], 'true,true': [0.906, 1, 6], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.544, 1, 1], 'false,true,false,false': [0.0, 52, 0], 'false,true,true': [2.358, 62, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false': 'interaction(A, E)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,false': [0.896, 1, 6], 'false,false,true,false': [0.131, 66, 0], 'false,true,false,true': [0.901, 1, 5], 'true,true': [0.02, 0, 10], 'false,false,true,true': [1.071, 1, 34], 'false,true,false,false': [1.381, 44, 16], 'false,false,false': [0.0, 0, 0], 'false,true,true': [2.293, 56, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'phenotype(A, E)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false,false': 'interaction(G, A)', 'true,false,false': 'interaction(C, A)', 'false': 'interaction(A, F)'}, {'true,false,false,false': [0.025, 0, 3], 'false,false,true,false': [0.105, 60, 0], 'true,true': [0.011, 0, 9], 'false,false,true,true': [0.499, 0, 34], 'false,true': [2.878, 107, 36], 'true,false,true': [0.023, 0, 4], 'true,false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false,false': 'interaction(A, H)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false,true': 'interaction(F, G), interaction(A, G)', 'true,true,true': 'phenotype(C, D), interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)', 'false': 'interaction(A, F), interaction(G, A)'}, {'true,true,true,true': [3.73e-09, 0, 3], 'true,false': [0.246, 0, 12], 'false,false,true': [1.841, 37, 15], 'false,false,false,false': [1.856, 20, 11], 'false,true,true': [0.306, 16, 1], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [2.416, 53, 20], 'false,true,false': [2.06, 55, 24], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'false,true,false': 'interaction(I, F), interaction(F, I)', 'false,false': 'interaction(A, J)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, G), phenotype(A, H)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,false': [0.05, 0, 10], 'false,false,false,true': [2.267, 30, 20], 'false,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 3], 'false,false,false,false': [1.702, 22, 11], 'false,true,false,false': [0.067, 0, 3], 'false,true,true': [0.151, 0, 3], 'false,false,true': [2.733, 116, 33], 'true,true,false': [0.031, 0, 3]}]]
[{'': [-2.220446049250313e-16, 0.21432098765432236], 'false,false,true': [0.0, 0.22222222222222224], 'true': [-8.881784197001253e-17, 1.4802973661668753e-16], 'false,false': [0.18750000000000006, 0.21272424272130316], 'true,true': [0.0, -1.4802973661668753e-16], 'false,true': [1.7763568394002505e-15, 7.401486830834377e-17], 'false': [0.21000000000000138, 0.21895691609977466], 'false,false,false': [0.21484374999999956, 0.2089116143170192]}, {'': [0.05536332179930818, 0.1784427471059315], 'false,false,true': [0.22351535804399836, 0.21901070889628868], 'true': [0.06632653061224492, 0.0], 'false,true,false': [2.5376526277146434e-16, -3.0068540250264654e-17], 'false,false': [0.21971907865897994, 0.24826388888888873], 'false,true': [0.12393644054803907, 0.15114421435935632], 'false': [0.138973652617257, 0.23020184509354677], 'false,false,false': [0.24489795918367327, 0.2100000000000001]}, {'': [0.05504354713002022, 0.15061964116812507], 'false,false,true': [0.0, 0.21069034697883085], 'true': [-6.344131569286608e-17, 0.08901108760900903], 'false,false': [0.21286659078142564, 0.1928764251150002], 'false,true': [0.00562427139784215, 9.666291524039251e-05], 'false': [0.10507634846726578, 0.20671785912775803], 'false,false,false': [0.1928764251150002, nan], 'false,true,true': [0.005264318028379922, 0.005784964866351494]}, {'': [0.00013831095927299697, 0.130156018590896], 'false,false,true': [0.08705529812718928, 0.04870596028686093], 'false,true,false': [nan, 0.0072332920641628995], 'false,false': [0.06601375726946523, 0.19624730118895023], 'false,true': [0.011855697324747227, 0.0072332920641628995], 'false': [0.014504391338958053, 0.12681195340419624], 'false,false,false': [0.2006172839506175, 0.18790424818628104], 'false,true,true': [0.0, 0.011064006781439114]}, {'': [0.00011401777458794338, 0.1319403619271977], 'false,false,true': [0.2292682299342145, nan], 'true': [0.0001263823567920097, 7.006508844385288e-05], 'false,false': [0.2292682299342145, 0.22466119764960318], 'true,true': [0.0001263823567920097, nan], 'false': [0.06392799350237502, 0.22489919697106756], 'false,false,false': [0.22240941333246936, 0.22878897876110826]}, {'': [0.05407336775735888, 0.1259344239591387], 'false,false,true': [0.14817514156312342, 0.20612471761054246], 'true': [0.11725124519961247, 5.7389889109593636e-05], 'false,true,false': [0.043653979237207305, -8.540177112501205e-18], 'false,false': [0.2046960250624014, 0.22980380733338976], 'false,true': [0.07219127534209649, 0.053268041274944514], 'false': [0.06306897693895358, 0.21247166678245882], 'false,false,false': [0.22980380733338976, nan]}, {'': [0.052259255557675924, 0.12586033725732151], 'false,false,true': [0.03276258020752851, 0.0002607796924000385], 'true': [4.0223092697688756e-05, 0.11472891540287437], 'false,false': [0.214851942549683, nan], 'false,true': [0.0740707895510606, 0.042440245897745484], 'false': [0.05884471340502346, 0.214851942549683], 'false,true,false': [0.13523182315238955, 0.031778100934349365]}, {'': [0.00013384447153294565, 0.09259827654509693], 'true,false': [0.00012804195418794628, 0.000208084078832003], 'false,false,true': [0.007325064927143204, 0.00018475635592215175], 'true': [1.3704834492311857e-05, 0.00020130286221080912], 'false,false': [0.1426011379459372, nan], 'true,false,false': [nan, 0.000208084078832003], 'false': [0.057923247005355304, 0.1426011379459372]}, {'': [0.0042338753643246015, 0.06864983805600437], 'true': [4.625929269271485e-18, 0.005062207695931529], 'false,false': [0.06516733055832313, 0.08926727214146243], 'true,true,true': [4.625929269271485e-18, nan], 'true,true': [4.625929269271485e-18, nan], 'false,true': [0.005515397644829058, 0.0537179184413768], 'false': [0.048180215503304126, 0.08124620716206417], 'false,false,false': [0.0799613074643982, 0.11113471062412669]}, {'': [0.00040006298413080774, 0.06716430852021092], 'true': [0.0004960373732968287, 0.00024913160215931653], 'false,true,false': [nan, 0.0015066055078407682], 'false,false': [0.05013888752877812, 0.09747876092488962], 'true,true': [0.0, 0.0003170188972123576], 'false,true': [0.007614891861618928, 0.0015066055078407682], 'false': [0.00580944388131401, 0.06782713089636305], 'false,false,false': [0.10274277095636723, 0.087740102741243]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,false,true;phenotype(A, I), interaction(J, H).;true;true
0;true,true;phenotype(A, E).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false;interaction(A, F).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;true;interaction(D, A).;true;true
1;false;interaction(A, E).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false,true;recursion_proteinclass(K, B).;true;true
2;true;interaction(C, D), phenotype(C, E).;true;true
2;false,false;interaction(J, A), interaction(K, J).;true;true
2;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
2;false;interaction(A, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;phenotype(A, E), interaction(F, D).;true;true
3;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
3;false,true,true;recursion_proteinclass(F, B), interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(G, F), interaction(A, G).;true;true
5;true;interaction(D, A), phenotype(A, E).;true;true
5;false;interaction(A, F).;true;true
5;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, D), interaction(A, D).;true;true
6;false;interaction(A, E).;true;true
6;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true,false;phenotype(A, E).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;false;interaction(A, F).;true;true
7;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), phenotype(A, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false,true;interaction(A, G), phenotype(A, H).;true;true
9;true;phenotype(A, D), interaction(C, E).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.805517356152143;  // std dev = 0,223, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 1,83e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3,643, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.23314893509951234;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.724254606623596;  // std dev = 0,060, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.7401919213324014;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.09712857050522852;  // std dev = 2,859, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7299724186538795;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.12550996792843772;  // std dev = 2,912, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.2566083313300566;  // std dev = 3,313, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.22085215091614321;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5541854842494766;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5707127483312453;  // std dev = 0,033, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6260200052573457;  // std dev = 0,071, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.12138288444951646;  // std dev = 0,012, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1795938485157434;  // std dev = 3,610, 57,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.24833607936542412;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.020137156298018724;  // std dev = 2,494, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.44887974517424123;  // std dev = 0,042, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.415492181429957;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(H, F) )
%   | | then if ( recursion_proteinclass(H, B), interaction(H, A) )
%   | | | then return 0.41059413995629335;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4962362823787687;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15953213304015806;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6967238027763295;  // std dev = 0,358, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16739038231924855;  // std dev = 0,399, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.08232031364405053;  // std dev = 3,137, 71,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.03139320133836149;  // std dev = 4,079, 134,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.31558229786534836;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3688301133071064;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.16609998492668157;  // std dev = 1,043, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.31059293790811493;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.08658458575145829;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.38275516924115033;  // std dev = 0,152, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.016636329285348746;  // std dev = 2,962, 72,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.057631307390210385;  // std dev = 4,497, 159,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.277613010063171;  // std dev = 0,050, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.060366924343055794;  // std dev = 1,339, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.014755496367267362;  // std dev = 1,831, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3647418943554637;  // std dev = 0,242, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.10972079540330115;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.33601066470599705;  // std dev = 1,311, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09251596652776128;  // std dev = 3,800, 70,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08002211288261782;  // std dev = 1,467, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.08814100257525825;  // std dev = 0,746, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.21572880925735607;  // std dev = 0,021, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.24330306903528345;  // std dev = 0,157, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return -0.14102752290824982;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.030665102567063028;  // std dev = 0,871, 32,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.09622789757709976;  // std dev = 1,236, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.045004883259319985;  // std dev = 2,064, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.06622158613772319;  // std dev = 0,782, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3117811262258012;  // std dev = 3,473, 53,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | | else return -0.2537580258065994;  // std dev = 0,026, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.18285413093486827;  // std dev = 0,026, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.004413402448506054;  // std dev = 0,940, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1769779063363216;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.039527937126288604;  // std dev = 0,146, 38,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.052702573671393485;  // std dev = 1,539, 43,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.01913715507515503;  // std dev = 1,882, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.18012969565713013;  // std dev = 3,047, 41,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.26868053655605345;  // std dev = 1,996, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else return -0.21303977247446157;  // std dev = 0,023, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.14661677006196883;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.16857233328210625;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.27486813921954917;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.027595162000883612;  // std dev = 0,918, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.07128878514896439;  // std dev = 0,018, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.36167396179669514;  // std dev = 2,129, 53,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=44 */
%   | | | else return -0.1787055189212144;  // std dev = 1,075, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.013705468390741311;  // std dev = 1,344, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.08253679108376807;  // std dev = 2,244, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.1509262525404057;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.14553206270140595;  // std dev = 0,023, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16497161490373843;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), phenotype(A, I) )
%   | | then return -0.020079264027723198;  // std dev = 0,734, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.041354605247480775;  // std dev = 0,887, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L), location(K, J) )
%   | | | then return -0.05065098182774603;  // std dev = 1,784, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.017010506552951332;  // std dev = 3,500, 140,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
%   | | else if ( location(A, M) )
%   | | | then return 0.034856590833864116;  // std dev = 1,422, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.2055041910653778;  // std dev = 0,619, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.97536
   AUC PR    = 0.209679
   CLL	      = -0.221051
   Precision = 0.221785 at threshold = 0.5
   Recall    = 0.597173
   F1        = 0.323445


Total learning time: 7.764 seconds
Total inference time: 168.663 seconds
AUC ROC: 0.97536


Results scoring model
   AUC ROC   = 0.989258
   AUC PR    = 0.40111
   CLL	      = -0.191382
   Precision = 0.32967 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.447761


Total scoring time: 9.846 seconds
Refined model CLL: -0.191382


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982611
   AUC PR    = 0.198673
   CLL	      = -0.191942
   Precision = 0.156398 at threshold = 0.5
   Recall    = 0.816254
   F1        = 0.2625


Total learning time: 23.324 seconds
Total inference time: 12.738 seconds
AUC ROC: 0.982611
Total revision time: 23.324
Best scored revision CLL: -0.178213


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:16:48
{'Learning time': 23.324, 'Recall': 0.816254, 'Precision': [0.156398, 0.5], 'CLL': -0.191942, 'AUC PR': 0.198673, 'F1': 0.2625, 'Inference time': 12.738, 'AUC ROC': 0.982611, 'parameter': {'Learning time': 2.191, 'Recall': 0.816254, 'Precision': [0.156398, 0.5], 'CLL': -0.191942, 'AUC PR': 0.198673, 'F1': 0.2625, 'Inference time': 12.738, 'AUC ROC': 0.982611}}


