Starting experiment #3 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.8507959939230396;  // std dev = 0,085, 136,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=135 */
%   | else return 0.8010060779566543;  // std dev = 0,232, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( tweets(E, F), follows(E, G) )
%   | | then if ( follows(G, E), follows(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.12151208184964069;  // std dev = 2,424, 295,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=6 */
%   | | | else return 0.010047669276727159;  // std dev = 4,512, 158,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=24 */
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.12005369700427379;  // std dev = 4,030, 84,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.18814893509951197;  // std dev = 4,702, 100,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.7084907001964127;  // std dev = 0,119, 139,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=137 */
%   | else return 0.6627503797529526;  // std dev = 0,238, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(F, A), follows(E, F) )
%   | | then return 0.7246530394913161;  // std dev = 0,060, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( follows(G, A), follows(A, G) )
%   | | | then return 0.3319045176838227;  // std dev = 1,119, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6657584476687871;  // std dev = 0,948, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.8599985367390538;  // std dev = 0,034, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.1327713957124627;  // std dev = 0,146, 409,000 (wgt'ed) examples reached here.  /* #neg=409 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.13582955728265345;  // std dev = 5,559, 148,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | | else return 0.256745146931889;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(A, D) )
%   | then if ( tweets(A, E) )
%   | | then return 0.5503255889681157;  // std dev = 0,101, 97,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=96 */
%   | | else return 0.5196015728056314;  // std dev = 0,205, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.5720039643028141;  // std dev = 0,037, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( tweets(F, G), follows(F, H) )
%   | | then return 0.5760254977565642;  // std dev = 0,147, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.33394346856287455;  // std dev = 0,843, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), recursion_accounttype(J, B) )
%   | | | then return 0.7222486648558373;  // std dev = 0,057, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.11783999637038778;  // std dev = 0,134, 436,000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.1185766427182725;  // std dev = 5,551, 147,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | | else return 0.050777083223247386;  // std dev = 2,861, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then return 0.4163242028476606;  // std dev = 0,092, 118,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=117 */
%   | else return 0.3946824811790341;  // std dev = 0,190, 53,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(G, A), follows(G, F) )
%   | | then if ( tweets(A, H), follows(F, G) )
%   | | | then return 0.320334340516661;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.14179403963288362;  // std dev = 1,488, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.45099283123941214;  // std dev = 0,110, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return -0.08846389404387787;  // std dev = 1,664, 298,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=6 */
%   | | | else return -0.02981215716295945;  // std dev = 3,096, 180,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=24 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.043641118754946806;  // std dev = 4,844, 128,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.15636143798857796;  // std dev = 3,917, 66,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.29025914268767405;  // std dev = 0,192, 130,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=125 */
%   | else return 0.3378913171525015;  // std dev = 0,048, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return 0.28617676004667403;  // std dev = 0,989, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.4796789141666164;  // std dev = 1,630, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else return -0.10005901711607275;  // std dev = 0,168, 419,000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.3318196916428974;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.27595298170254334;  // std dev = 0,779, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.004160962711077918;  // std dev = 4,946, 148,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=31 */
%   | | | else return 0.07503649999464689;  // std dev = 4,077, 78,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | then return 0.24931232446255988;  // std dev = 0,219, 225,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=214 */
%   | else return -0.09159133126567803;  // std dev = 0,161, 444,000 (wgt'ed) examples reached here.  /* #neg=444 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( recursion_accounttype(G, B) )
%   | | then if ( follows(A, H), recursion_accounttype(H, B) )
%   | | | then return 0.263554297197589;  // std dev = 0,048, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.7467720224240809;  // std dev = 1,104, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.19860483818944244;  // std dev = 0,065, 96,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=1 */
%   | else if ( follows(A, I), tweets(A, J) )
%   | | then if ( tweets(K, J), recursion_accounttype(K, B) )
%   | | | then return 0.5899965684283645;  // std dev = 1,150, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.232518931531601;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.10510863585948557;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.0594396059462677;  // std dev = 2,746, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( tweets(D, E), follows(C, D) )
%   | | then if ( tweets(C, E) )
%   | | | then return 0.20263228098834296;  // std dev = 1,710, 155,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=152 */
%   | | | else return 0.0980708416574902;  // std dev = 0,934, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.02368203493710941;  // std dev = 0,899, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.02186954565205612;  // std dev = 0,903, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(A, G), follows(G, F) )
%   | | then return 0.24125460882945232;  // std dev = 0,246, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.10942289785508921;  // std dev = 1,239, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return -0.052657873286739564;  // std dev = 0,118, 451,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=30 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.04177086695857925;  // std dev = 4,827, 161,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
%   | | | else return 0.0019955273054852478;  // std dev = 2,837, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( recursion_accounttype(D, B), follows(A, E) )
%   | | then return 0.18714403152804887;  // std dev = 0,018, 81,000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( follows(A, C), tweets(C, F) )
%   | | | then return 0.0723490456618982;  // std dev = 1,589, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.16174260712110605;  // std dev = 0,983, 33,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return 0.1981441656286651;  // std dev = 0,090, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( follows(G, A) )
%   | then return -0.04297624046661474;  // std dev = 0,136, 488,000 (wgt'ed) examples reached here.  /* #neg=440 #pos=48 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then if ( tweets(J, H), recursion_accounttype(J, B) )
%   | | | then return 0.5201982522964673;  // std dev = 1,105, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.1793612018794147;  // std dev = 0,044, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( tweets(A, K) )
%   | | | then return -2.0562812910562833E-5;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.06512683312782667;  // std dev = 4,066, 96,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(A, C) )
%   | | then return 0.11924984461774385;  // std dev = 0,207, 110,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=105 */
%   | | else if ( tweets(C, E), tweets(A, E) )
%   | | | then return -0.1110765494608801;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.1639687924876641;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16996460398862973;  // std dev = 0,080, 50,000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(F, A) )
%   | then return -0.04276947127432872;  // std dev = 0,143, 497,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=48 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.4249691844436692;  // std dev = 1,811, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.1653302723982834;  // std dev = 0,683, 81,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=1 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.1261039987819902;  // std dev = 2,417, 30,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.02989148822922551;  // std dev = 2,767, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.17164475423950512;  // std dev = 0,177, 221,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=216 */
%   | else return -0.07422969049588289;  // std dev = 0,130, 429,000 (wgt'ed) examples reached here.  /* #neg=429 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), follows(E, G) )
%   | | | then return 0.22409851505379158;  // std dev = 1,120, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.44942790509301783;  // std dev = 0,224, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.1444605531031227;  // std dev = 0,080, 76,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=1 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( tweets(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.47903042703202964;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19183239316683995;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.09915281117125821;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.08492248871741971;  // std dev = 2,643, 30,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;true;follows(C, D), follows(D, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true;tweets(E, F), follows(E, G).;true;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,false,false;follows(A, J), tweets(A, K).;false;false
0;false,true,true;follows(G, E), follows(A, G).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;true;follows(C, D), follows(A, D).;false;false
1;false,false,false;follows(A, J).;false;false
1;false,false;follows(H, A).;true;true
1;false,true;follows(F, A), follows(E, F).;false;true
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true,false;follows(G, A), follows(A, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;true,true;tweets(A, E).;false;false
2;false,false;follows(I, A).;true;true
2;true;follows(D, C), follows(A, D).;true;false
2;false,true;tweets(F, G), follows(F, H).;false;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, J), follows(J, A).;false;false
3;true;follows(A, D), tweets(A, E).;false;false
3;false,false;follows(I, A).;true;true
3;false,true;follows(G, A), follows(G, F).;true;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,false,false;follows(A, K), follows(K, L).;false;false
3;false,true,true;tweets(A, H), follows(F, G).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(A, I), follows(H, I).;false;false
4;true;tweets(C, D), tweets(A, D).;false;false
4;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false;follows(E, A).;true;true
4;false,false,false;follows(A, J), follows(J, K).;false;false
4;false,true,true;follows(A, F), follows(F, G).;false;false
5;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
5;false,false,true;tweets(K, J), recursion_accounttype(K, B).;false;false
5;true;tweets(E, D), recursion_accounttype(E, B).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,true;recursion_accounttype(G, B).;true;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,false,false;follows(A, L).;false;false
5;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true;tweets(D, E), follows(C, D).;true;false
6;false,false;follows(H, A).;false;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;false,true;follows(A, G), follows(G, F).;false;false
6;true,true,true;tweets(C, E).;false;false
6;false,false,false;follows(A, I).;false;false
6;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
7;true,true;recursion_accounttype(D, B), follows(A, E).;false;true
7;false,false;tweets(A, H), follows(A, I).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true,false;follows(A, C), tweets(C, F).;false;false
7;false,false,false;tweets(A, K).;false;false
7;false;follows(G, A).;false;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;true,true;follows(A, C).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;true;follows(A, D), follows(D, C).;true;false
8;true,true,false;tweets(C, E), tweets(A, E).;false;false
8;false,false,false;follows(A, I).;false;false
8;false;follows(F, A).;false;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;false;false
9;false,false;follows(A, H), tweets(A, I).;true;true
9;false,true;recursion_accounttype(F, B).;true;false
9;false;follows(A, E), follows(E, F).;true;true
9;false,false,false;follows(A, K).;false;false
9;false,true,true;follows(A, G), follows(E, G).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.12377393509951237;  // std dev = 3,533, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.10814893509951234;  // std dev = 3,464, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.11269438964496692;  // std dev = 3,231, 55,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.2095002864508625;  // std dev = 4,107, 74,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.73891332354696;  // std dev = 0,021, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.38619689149295755;  // std dev = 0,998, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7711229590208141;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.03768066430054965;  // std dev = 4,017, 103,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15295959107718854;  // std dev = 5,224, 126,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.5778732311891362;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5778732311891362;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22498333469967755;  // std dev = 1,160, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then return 0.3021130714768154;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7418591766660868;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7610289735289463;  // std dev = 1,003, 34,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.16325499652012646;  // std dev = 0,126, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.17368347690913316;  // std dev = 5,058, 111,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.46482633931905004;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.45065501347360837;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5679690311543929;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.03554951323977146;  // std dev = 2,660, 68,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.13981524202358575;  // std dev = 2,744, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08747333708816649;  // std dev = 5,078, 123,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | | | else return 0.5377783252336839;  // std dev = 0,857, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.32549088786343217;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.35911385328072337;  // std dev = 0,091, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6219141647201517;  // std dev = 0,449, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.15043014260643633;  // std dev = 0,123, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.4220343011643466;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09362166578789037;  // std dev = 0,823, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13820390860083406;  // std dev = 4,831, 101,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
%   | | | else return 0.10550183177449421;  // std dev = 1,319, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3238981246299159;  // std dev = 1,052, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else return -0.017453054963225693;  // std dev = 1,879, 61,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.27773964617859764;  // std dev = 0,056, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39586864609611444;  // std dev = 0,811, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.03741232673574865;  // std dev = 5,143, 145,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6720303402540817;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(L, A) )
%   | | | then return -0.030014756660215955;  // std dev = 1,337, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.004216354411235556;  // std dev = 0,600, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(D, C) )
%   | | then if ( phenotype(C, E) )
%   | | | then return 0.19998599361196712;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2317242239132227;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16523893906469148;  // std dev = 1,111, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.26615834231743707;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3976558379554952;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.019211719991185146;  // std dev = 2,884, 119,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.08361550450976132;  // std dev = 5,053, 113,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(E, A) )
%   | | then return 0.18153684453459767;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, A), phenotype(C, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.7119908023348841;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2715212859979994;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.0014501465142559035;  // std dev = 2,907, 134,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=33 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4956059357265373;  // std dev = 1,648, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.2754888695816326;  // std dev = 0,131, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08892182396867815;  // std dev = 4,005, 68,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(C, A) )
%   | | then return 0.1518119246198982;  // std dev = 0,038, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2125916749226503;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then return 0.02828304762949256;  // std dev = 2,808, 113,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.06481311471803491;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05067270779006808;  // std dev = 4,552, 107,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.12149801273484899;  // std dev = 1,336, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.30208732390929277;  // std dev = 1,710, 47,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | else return -0.14122442847181668;  // std dev = 0,129, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return -0.0348826318631037;  // std dev = 0,780, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0667878241865606;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.008041958543264385;  // std dev = 4,678, 118,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3983436446791174;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.26293799755280234;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.06873192622456771;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.964564
   AUC PR    = 0.261961
   CLL	      = -0.243535
   Precision = 0.208382 at threshold = 0.5
   Recall    = 0.634752
   F1        = 0.31376


Total learning time: 2.86 seconds
Total inference time: 15.075 seconds
AUC ROC: 0.964564


Results scoring model
   AUC ROC   = 0.944527
   AUC PR    = 0.302408
   CLL	      = -0.251969
   Precision = 0.236453 at threshold = 0.5
   Recall    = 0.551724
   F1        = 0.331034


Total scoring time: 7.553 seconds
Parameter learned model CLL: -0.251969


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(A, H)', 'false,true': 'phenotype(E, F), interaction(G, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(J, A), phenotype(A, K)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [2.11e-08, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,false,false,true': [3.231, 41, 14], 'false,false,false,false': [4.107, 48, 26], 'true,true': [0.943, 1, 8], 'false,true,true,false': [0.0, 0, 2], 'false,false,true,false': [3.464, 48, 16], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [3.533, 47, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,true,false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(J, A)'}, {'true,false': [0.0, 0, 2], 'false,false,true,false': [4.017, 83, 20], 'false,false,false,true': [5.224, 86, 40], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.021, 0, 9], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.964, 1, 13], 'false,true,false,false': [0.998, 2, 3], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, I)', 'true,true': 'phenotype(A, E)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A)'}, {'true,false': [1.16, 2, 4], 'false,false,true,false': [0.126, 83, 0], 'false,false,false,true': [5.058, 71, 40], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'false,false,true,true': [1.003, 1, 33], 'true,true,false': [0.0, 0, 3], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'true': 'interaction(D, A), phenotype(A, E)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,false': [0.056, 0, 4], 'false,false,true,false': [2.744, 32, 16], 'false,false,false,true': [5.078, 86, 37], 'false,false,false,false': [0.857, 1, 3], 'true,true': [0.095, 0, 7], 'false,false,true,true': [2.66, 51, 17], 'false,true,false': [0.012, 0, 3], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(F, A), interaction(G, F)'}, {'true,false': [0.091, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [4.831, 64, 37], 'false,false,false,false': [1.319, 4, 3], 'true,true': [7.45e-09, 0, 3], 'false,true,true,false': [0.449, 0, 33], 'false,false,true,false': [0.823, 1, 2], 'false,true,false': [0.123, 96, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(C, D)', 'false,false,true': 'phenotype(K, J), recursion_proteinclass(K, B)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'false,false': 'interaction(I, A), phenotype(A, J)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,false,false': 'interaction(L, A)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,false': [1.879, 49, 12], 'false,true,true,true': [0.056, 0, 3], 'false,false,false,true': [1.337, 8, 3], 'false,false,false,false': [0.6, 4, 1], 'true,true': [1.052, 3, 21], 'false,true,true,false': [0.811, 1, 5], 'false,false,true,false': [0.0, 0, 0], 'false,true,false': [5.143, 104, 41], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H)', 'true,true': 'phenotype(D, E), interaction(D, C)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true,true,true': 'phenotype(C, E)', 'false,false,false': 'interaction(I, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'true,true,true,true': [0.005, 0, 4], 'true,false': [1.111, 2, 3], 'false,false,true': [2.884, 86, 33], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [5.053, 73, 40], 'false,true,false': [0.01, 0, 2], 'true,true,false': [0.052, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(E, A)', 'true,true,false': 'interaction(C, A), phenotype(C, F)', 'false,false,false': 'phenotype(A, K)', 'false': 'interaction(A, G)'}, {'true,false': [0.005, 0, 3], 'false,false,true,false': [0.131, 26, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.005, 42, 26], 'true,true,true': [0.056, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,true': [1.648, 3, 17], 'false,true': [2.907, 101, 33], 'true,true,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(G, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false,false': 'interaction(F, A), interaction(G, F)', 'true,true': 'interaction(C, A)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(H, A)'}, {'true,false': [0.03, 0, 4], 'false,false,true,false': [4.552, 70, 37], 'false,false,false,true': [1.336, 9, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.038, 0, 7], 'false,false,true,true': [1.081, 2, 3], 'false,true': [2.808, 80, 33], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'false,false,true': 'phenotype(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), phenotype(A, I)', 'false,true': 'recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(F, E)', 'false,false,false': 'interaction(K, A)', 'false,true,true': 'interaction(G, A), interaction(G, E)'}, {'true,false': [0.129, 71, 0], 'false,true,true,true': [0.78, 2, 2], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.0, 0, 0], 'true,true': [1.71, 3, 44], 'false,true,true,false': [0.816, 2, 1], 'false,false,true,false': [0.0, 1, 0], 'false,true,false': [4.678, 81, 37], 'false,false,true,true': [0.0, 0, 1]}]]
[{'': [0.07638888888888877, 0.20593205524153724], 'false,false,true': [0.19506835937499947, 0.18749999999999958], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,false': [0.19134521484375125, 0.2139294513550881], 'false,true': [0.22222222222222224, 0.25], 'false': [0.23999999999999994, 0.20336416902602641], 'false,false,false': [0.18975206611570195, 0.22790357925493188], 'false,true,true': [0.0, 0.0]}, {'': [9.486794123821211e-05, 0.21098204606934434], 'false,false,true': [0.06634786690119197, 0.1566450713924528], 'true': [4.723876909373814e-05, 0.0], 'false,true,false': [nan, 0.19918446439015164], 'false,false': [0.20250665352324454, 0.21659333153528915], 'false,true': [nan, 0.19918446439015164], 'false': [0.19918446439015164, 0.20999988811013806], 'false,false,false': [0.21659333153528915, nan]}, {'': [0.13445719289438623, 0.209385437305043], 'false,false,true': [0.02957439024340549, 0.00019087152615961328], 'true': [6.344131569286608e-17, 0.2242686138370382], 'false,false': [0.18484458302653722, 0.23044091136122682], 'true,true': [0.0, -7.401486830834377e-17], 'false,true': [0.22222222222222218, 0.0], 'false': [0.20292478610962933, 0.20820968276442067], 'false,false,false': [0.23044091136122682, nan]}, {'': [0.001158107371073903, 0.17446611009464397], 'false,false,true': [0.10402533401948888, 0.15686817263295663], 'true': [0.0012952240768178136, 0.0007903544693379227], 'false,false': [0.12852837997198086, 0.21497812412362366], 'false,true': [nan, 4.843518191636568e-05], 'false': [4.843518191636568e-05, 0.17384147926091298], 'false,false,false': [0.20961452172672113, 0.1835209164985001]}, {'': [0.0009735741838144458, 0.17095030372262962], 'false,false,true': [0.0, 0.22555111406357256], 'true': [1.850371707708594e-17, 0.0010303452836214477], 'false,false': [0.1893861216242249, 0.2322209713220953], 'false,true': [0.00610911741683207, 0.0001584779267227258], 'false': [0.11524132763351924, 0.2307452712805453], 'false,false,false': [0.23103280603360718, 0.2483643878642891], 'false,true,true': [nan, 0.00610911741683207]}, {'': [0.07815639820910619, 0.1790904396155662], 'false,false,true': [0.0, nan], 'true': [0.04611406995540279, 0.05786327391291677], 'false,false': [0.0, 0.13446629453499648], 'false,true': [0.07650777781987927, 0.18239461387482103], 'false': [0.181808745860235, 0.15322018241783963], 'false,false,false': [0.1626074413398074, 0.07209820074287479], 'false,true,true': [0.0010597760825769946, 0.10958029181469287]}, {'': [0.12967424641767963, 0.14627257344395764], 'true': [0.0005943963151096854, 0.24682805378832323], 'false,false': [0.06991784656527354, 0.22592423480413565], 'true,true,true': [5.370880780730669e-06, nan], 'true,true': [5.370880780730669e-06, 0.0006797641181108885], 'false,true': [0.0, 5.206434914573066e-05], 'false': [0.003877285423670699, 0.14693998499550678], 'false,false,false': [0.22592423480413565, nan]}, {'': [0.06612370909062563, 0.13841851802875033], 'false,false,true': [0.13587599248642776, 0.0006606376440736985], 'true': [0.07920713532616455, 7.4175682137726335e-06], 'false,false': [0.20556775948578093, 0.23594030667607574], 'true,true': [0.00039784327303363926, 0.0], 'false': [0.06306982580841905, 0.2238892659178335], 'false,false,false': [nan, 0.23594030667607574], 'true,true,false': [nan, 0.0]}, {'': [0.0010708379340060555, 0.13454166500539785], 'false,false,true': [0.23353289578110492, 0.19366492582694503], 'true': [0.0002086501601208974, 0.0002288259630274861], 'false,false': [0.19545327380344032, 0.14864420024350705], 'true,true': [0.0002086501601208974, nan], 'false': [0.06978657308551924, 0.19353344076677403], 'false,false,false': [0.14864420024350705, nan]}, {'': [0.07201264144054377, 0.18561146296096434], 'false,false,true': [0.0, 0.0], 'true': [0.062196530998730834, 0.00023359986860874501], 'false,false': [0.1093233525882362, 0.2040816326530612], 'false,true': [0.18240186112792925, 0.18544111093437665], 'false': [0.18544025543450654, 0.1862415478645192], 'false,false,false': [0.2040816326530612, nan], 'false,true,true': [0.15210032975126805, 0.22222222222222218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;phenotype(E, F), interaction(G, E).;true;true
0;true;interaction(D, C), interaction(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;true,true;phenotype(A, E).;true;true
2;false,false;interaction(A, I).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false,true;phenotype(F, G), interaction(H, F).;true;true
2;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), phenotype(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false,true;interaction(I, A), interaction(I, H).;true;true
4;true;phenotype(C, D), phenotype(A, D).;true;true
4;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false;interaction(A, E).;true;true
5;;proteinclass(A, B) :- interaction(A, C), phenotype(C, D).;true;true
5;false,true;recursion_proteinclass(G, B).;true;true
5;false;interaction(F, A), interaction(G, F).;true;true
5;false,false;interaction(I, A), phenotype(A, J).;true;true
5;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true,true;phenotype(D, E), interaction(D, C).;true;true
6;false,true;interaction(G, A), interaction(F, G).;true;true
6;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
7;true,true;recursion_proteinclass(D, B), interaction(E, A).;true;true
7;false,false;phenotype(A, H), interaction(I, A).;true;true
7;true;interaction(D, C), interaction(A, D).;true;true
7;false;interaction(A, G).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;false,false,true;phenotype(J, I), recursion_proteinclass(J, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false;interaction(E, A), interaction(F, E).;true;true
9;false,false;interaction(H, A), phenotype(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.27675358626230306;  // std dev = 3,235, 43,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.17243464938522615;  // std dev = 6,141, 175,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( complex(D, E), location(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.08161086654534801;  // std dev = 3,220, 55,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.40408874125271643;  // std dev = 1,849, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8290995663545808;  // std dev = 0,024, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1597807944615865;  // std dev = 0,131, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7870621209142441;  // std dev = 0,979, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.16416415681110874;  // std dev = 2,98e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1506743185640908;  // std dev = 3,499, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.0858358431888912;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then return 0.3598206502597378;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5386201564242976;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7013527635068071;  // std dev = 1,382, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.17645003327193762;  // std dev = 0,363, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.12520311765758027;  // std dev = 4,651, 115,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | | | else return 0.30285853529051904;  // std dev = 1,178, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.35091726470788964;  // std dev = 0,683, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.09295455020748754;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.07550217186663478;  // std dev = 2,127, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.08332187792662359;  // std dev = 3,480, 80,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return 0.18594989382214144;  // std dev = 4,167, 92,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.12071184716014967;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5820179189756965;  // std dev = 0,078, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.16685112700595267;  // std dev = 0,042, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.4445747973178489;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46307280015396013;  // std dev = 0,196, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0174839340305087;  // std dev = 2,980, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.08580207972907576;  // std dev = 3,815, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.26313813642865885;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.045606247214944134;  // std dev = 0,282, 45,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | else return 0.04228807271911446;  // std dev = 0,281, 56,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.27709962896887047;  // std dev = 0,267, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.021462670147049227;  // std dev = 1,795, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.11624357550302714;  // std dev = 4,085, 93,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then return 0.09065755632844082;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.010167120408819412;  // std dev = 0,765, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05395009449386433;  // std dev = 0,988, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(D, C) )
%   | | then return 0.21716995597912597;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22675409772467991;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.27326197399949886;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.28003458475820586;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07722338647818067;  // std dev = 0,680, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.405810886775365;  // std dev = 0,668, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.03831227428325405;  // std dev = 2,267, 93,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.024722326011502066;  // std dev = 3,165, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.09816004255323807;  // std dev = 3,510, 56,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.08210269806810472;  // std dev = 0,295, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.22253370503720712;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then return -0.014513388323250944;  // std dev = 0,258, 41,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.004843291132171681;  // std dev = 1,310, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.06555614777091748;  // std dev = 1,712, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5118130133666406;  // std dev = 1,409, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.21425125475044837;  // std dev = 0,242, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05664662769818808;  // std dev = 3,633, 65,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.02261128999746455;  // std dev = 1,069, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.1682748569664925;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1735701316169839;  // std dev = 0,821, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19672432112782842;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.06726192717209782;  // std dev = 0,164, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else return 0.06315714707305292;  // std dev = 0,363, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, I) )
%   | | | then return -0.16331404350130585;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09665098373301821;  // std dev = 1,846, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.04452981450197439;  // std dev = 1,451, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.010618085348061761;  // std dev = 4,053, 123,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return -0.004942139871295104;  // std dev = 0,236, 147,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.019184554377457474;  // std dev = 1,587, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.007568609754243767;  // std dev = 1,756, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.005187073737414272;  // std dev = 1,730, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.15757861955166622;  // std dev = 2,848, 37,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6051132134208139;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.23996329925348645;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.06058055438500025;  // std dev = 0,680, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04117593565505351;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.981976
   AUC PR    = 0.219596
   CLL	      = -0.237385
   Precision = 0.234793 at threshold = 0.5
   Recall    = 0.684397
   F1        = 0.349638


Total learning time: 6.415 seconds
Total inference time: 13.045 seconds
AUC ROC: 0.981976


Results scoring model
   AUC ROC   = 0.973975
   AUC PR    = 0.217095
   CLL	      = -0.250661
   Precision = 0.240566 at threshold = 0.5
   Recall    = 0.586207
   F1        = 0.341137


Total scoring time: 6.594 seconds
Refined model CLL: -0.250661


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981976
   AUC PR    = 0.219596
   CLL	      = -0.237385
   Precision = 0.234793 at threshold = 0.5
   Recall    = 0.684397
   F1        = 0.349638


Total learning time: 23.422 seconds
Total inference time: 13.045 seconds
AUC ROC: 0.981976
Total revision time: 23.422
Best scored revision CLL: -0.250661


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:19:17
{'Learning time': 23.422, 'Recall': 0.684397, 'Precision': [0.234793, 0.5], 'CLL': -0.237385, 'AUC PR': 0.219596, 'F1': 0.349638, 'Inference time': 13.045, 'AUC ROC': 0.981976, 'parameter': {'Learning time': 2.86, 'Recall': 0.634752, 'Precision': [0.208382, 0.5], 'CLL': -0.243535, 'AUC PR': 0.261961, 'F1': 0.31376, 'Inference time': 15.075, 'AUC ROC': 0.964564}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;true;follows(C, D), follows(D, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true;tweets(E, F), follows(E, G).;true;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,false,false;follows(A, J), tweets(A, K).;false;false
0;false,true,true;follows(G, E), follows(A, G).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;true;follows(C, D), follows(A, D).;false;false
1;false,false,false;follows(A, J).;false;false
1;false,false;follows(H, A).;true;true
1;false,true;follows(F, A), follows(E, F).;false;true
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true,false;follows(G, A), follows(A, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;true,true;tweets(A, E).;false;false
2;false,false;follows(I, A).;true;true
2;true;follows(D, C), follows(A, D).;true;false
2;false,true;tweets(F, G), follows(F, H).;false;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, J), follows(J, A).;false;false
3;true;follows(A, D), tweets(A, E).;false;false
3;false,false;follows(I, A).;true;true
3;false,true;follows(G, A), follows(G, F).;true;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,false,false;follows(A, K), follows(K, L).;false;false
3;false,true,true;tweets(A, H), follows(F, G).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(A, I), follows(H, I).;false;false
4;true;tweets(C, D), tweets(A, D).;false;false
4;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false;follows(E, A).;true;true
4;false,false,false;follows(A, J), follows(J, K).;false;false
4;false,true,true;follows(A, F), follows(F, G).;false;false
5;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
5;false,false,true;tweets(K, J), recursion_accounttype(K, B).;false;false
5;true;tweets(E, D), recursion_accounttype(E, B).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,true;recursion_accounttype(G, B).;true;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,false,false;follows(A, L).;false;false
5;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true;tweets(D, E), follows(C, D).;true;false
6;false,false;follows(H, A).;false;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;false,true;follows(A, G), follows(G, F).;false;false
6;true,true,true;tweets(C, E).;false;false
6;false,false,false;follows(A, I).;false;false
6;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
7;true,true;recursion_accounttype(D, B), follows(A, E).;false;true
7;false,false;tweets(A, H), follows(A, I).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true,false;follows(A, C), tweets(C, F).;false;false
7;false,false,false;tweets(A, K).;false;false
7;false;follows(G, A).;false;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;true,true;follows(A, C).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;true;follows(A, D), follows(D, C).;true;false
8;true,true,false;tweets(C, E), tweets(A, E).;false;false
8;false,false,false;follows(A, I).;false;false
8;false;follows(F, A).;false;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;false;false
9;false,false;follows(A, H), tweets(A, I).;true;true
9;false,true;recursion_accounttype(F, B).;true;false
9;false;follows(A, E), follows(E, F).;true;true
9;false,false,false;follows(A, K).;false;false
9;false,true,true;follows(A, G), follows(E, G).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F), interaction(E, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09845901261889105;  // std dev = 4,853, 129,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | | else return 0.1522665821583349;  // std dev = 5,636, 153,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.016851064900487787;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.6425503352878773;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.3861400788776212;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7189480371872952;  // std dev = 1,621, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.05650110131313252;  // std dev = 6,562, 256,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=55 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15965359200022758;  // std dev = 1,642, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5742715654613593;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5742715654613593;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4730505861622276;  // std dev = 0,963, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(F, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.578250187845599;  // std dev = 0,096, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5976150697159051;  // std dev = 3,950, 96,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=76 */
%   | | | else return -0.16742904208179002;  // std dev = 0,202, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.11977551310470543;  // std dev = 1,651, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.4316871714466405;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4420055101494611;  // std dev = 0,041, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then if ( enzyme(A, H), interaction(F, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.44492162005287944;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22735569483440612;  // std dev = 0,452, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), interaction(J, A) )
%   | | | then return 0.05710752717048349;  // std dev = 3,964, 122,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.11664499825994651;  // std dev = 4,836, 145,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09713728736247115;  // std dev = 1,659, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), enzyme(A, D) )
%   | then return 0.3313709807443398;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16011152748596783;  // std dev = 1,582, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.2230107959525498;  // std dev = 0,562, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6047744407776552;  // std dev = 2,313, 83,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=78 */
%   | | else return -0.15647228539988092;  // std dev = 0,193, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.3581901167540943;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17764489767956515;  // std dev = 1,531, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3539298940339132;  // std dev = 0,310, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.022199463975230035;  // std dev = 3,254, 110,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.17460959677610027;  // std dev = 0,940, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.22373433625651004;  // std dev = 1,319, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return -0.06801070719219648;  // std dev = 2,653, 87,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06938120582225252;  // std dev = 3,506, 105,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(C, D) )
%   | | then if ( enzyme(C, E) )
%   | | | then return 0.1990952166160297;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2785052254660625;  // std dev = 0,044, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2750268592543923;  // std dev = 0,125, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return -0.08884271126310625;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2912061106143062;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06397019539247023;  // std dev = 4,957, 233,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=76 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05619702150144352;  // std dev = 1,635, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | | then return 0.21965523592483321;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, C), enzyme(C, F) )
%   | | | then return 0.16923564431515226;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.01627701398268333;  // std dev = 0,930, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.08541952711214082;  // std dev = 0,947, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(G, A) )
%   | then return 0.019029312513473208;  // std dev = 5,246, 281,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=82 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7047121986762258;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2870545725789827;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07276931369523007;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, C) )
%   | | then return 0.05278602953166521;  // std dev = 0,906, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2181106384475783;  // std dev = 0,106, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.005526833703039917;  // std dev = 5,262, 301,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=82 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.49360654592511155;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.008343681435662347;  // std dev = 1,336, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.27623384195938483;  // std dev = 3,983, 118,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=99 */
%   | else return -0.15339104938367842;  // std dev = 0,481, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.373043586356415;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.035280628486553306;  // std dev = 1,370, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97926
   AUC PR    = 0.255396
   CLL	      = -0.187375
   Precision = 0.182186 at threshold = 0.5
   Recall    = 0.849057
   F1        = 0.3


Total learning time: 3.095 seconds
Total inference time: 11.616 seconds
AUC ROC: 0.97926


Results scoring model
   AUC ROC   = 0.969465
   AUC PR    = 0.142789
   CLL	      = -0.207201
   Precision = 0.078477 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.145219


Total scoring time: 7.787 seconds
Parameter learned model CLL: -0.207201


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(H, A)', 'false,true': 'enzyme(E, F), interaction(E, G)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,false': [0.0, 0, 6], 'false,false,true,false': [5.636, 108, 45], 'false,false,false,true': [1.309, 4, 3], 'false,false,false,false': [0.935, 7, 1], 'true,true': [0.0, 0, 11], 'false,false,true,true': [4.853, 98, 31], 'false,true,false': [2.98e-08, 0, 7], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false,true,false': 'interaction(G, A), interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, J)'}, {'true,false': [0.0, 0, 5], 'false,false,true,false': [6.562, 201, 55], 'false,false,false,true': [1.642, 8, 4], 'false,true,false,true': [0.816, 1, 2], 'true,true': [0.961, 1, 12], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.621, 3, 21], 'false,true,false,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(I, A)', 'true,true': 'enzyme(A, E)', 'false,true': 'enzyme(F, G), interaction(F, H)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, K)'}, {'true,false': [0.963, 1, 10], 'false,false,true,false': [0.202, 177, 0], 'false,false,false,true': [1.651, 9, 4], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 2], 'false,false,true,true': [3.95, 20, 76], 'true,true,false': [1.49e-08, 0, 5], 'false,true,false': [0.096, 0, 7], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, J), interaction(J, A)', 'true': 'interaction(A, D), enzyme(A, E)', 'false,false': 'interaction(I, A)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)', 'false,true,true': 'enzyme(A, H), interaction(F, G)'}, {'true,false': [0.041, 0, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.659, 9, 4], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,true,true,false': [0.09, 0, 5], 'false,false,true,false': [4.836, 100, 45], 'false,true,false': [0.452, 1, 2], 'false,false,true,true': [3.964, 91, 31]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(A, I), interaction(H, I)', 'true': 'enzyme(C, D), enzyme(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'interaction(A, F), interaction(F, G)'}, {'true,false': [1.582, 3, 14], 'false,true,true,true': [0.562, 1, 4], 'false,false,false,true': [1.531, 6, 4], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.003, 0, 3], 'false,true,true,false': [2.313, 5, 78], 'false,false,true,false': [0.0, 0, 0], 'false,true,false': [0.193, 184, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), enzyme(C, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, I), enzyme(A, J)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,false,false': 'interaction(A, K)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(H, B)'}, {'true,false': [3.254, 77, 33], 'false,true,true,true': [0.94, 1, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.506, 72, 33], 'true,true': [0.31, 0, 8], 'false,true,true,false': [1.319, 4, 9], 'false,false,false,true': [0.0, 0, 0], 'false,true,false': [2.653, 73, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A)', 'true,true': 'enzyme(D, E), interaction(C, D)', 'false,true': 'interaction(A, G), interaction(G, F)', 'true,true,true': 'enzyme(C, E)', 'false,false,false': 'interaction(A, I)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'true,true,true,true': [0.0, 0, 2], 'true,false': [0.125, 0, 7], 'false,false,true': [4.957, 157, 76], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.865, 2, 3], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [1.635, 9, 4], 'false,true,false': [0.016, 0, 4], 'true,true,false': [0.044, 0, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'enzyme(J, H), recursion_proteinclass(J, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'enzyme(A, H), interaction(A, I)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, E)', 'true,true,false': 'interaction(A, C), enzyme(C, F)', 'false,false,false': 'enzyme(A, K)', 'false': 'interaction(G, A)'}, {'true,false': [0.947, 1, 6], 'false,false,true,false': [0.055, 5, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.885, 3, 2], 'true,true,true': [0.029, 0, 5], 'true,true,false,true': [0.0, 0, 2], 'false,false,true,true': [0.05, 0, 3], 'false,true': [5.246, 199, 82], 'true,true,false,false': [0.93, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(G, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false,false': 'interaction(A, F), interaction(F, G)', 'true,true': 'interaction(A, C)', 'false': 'interaction(E, A)'}, {'true,false': [0.106, 0, 10], 'false,false,true,false': [1.336, 10, 4], 'true,true,true': [0.906, 1, 7], 'false,false,true,true': [0.0, 0, 1], 'false,true': [5.262, 219, 82], 'true,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'false,true': 'recursion_proteinclass(F, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(E, F)', 'false,true,true': 'interaction(A, G), interaction(E, G)'}, {'true,false': [0.481, 155, 0], 'false,true,true,true': [0.0, 0, 1], 'true,true': [3.983, 19, 99], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [1.37, 12, 4]}]]
[{'': [-2.0898315757650005e-16, 0.20428280817174566], 'false,false,true': [0.18256114416201066, 0.207612456747406], 'true': [-1.6148698540002277e-16, -1.4802973661668753e-16], 'false,false': [0.1968713847391986, 0.1955555555555554], 'false,true': [nan, 1.2688263138573217e-16], 'false': [-2.5376526277146434e-16, 0.19680531465043358], 'false,false,false': [0.24489795918367335, 0.10937500000000004]}, {'': [0.0524691358024694, 0.20235472115625447], 'false,false,true': [0.10953357694763317, 0.16821612733230965], 'true': [0.07100591715976347, 0.0], 'false,true,false': [0.22222222222222224, 0.0], 'false,false': [0.19757660302465194, 0.22470946444281883], 'false,true': [nan, 0.10937500000000006], 'false': [0.10937500000000006, 0.19877638902579314], 'false,false,false': [0.22470946444281883, nan]}, {'': [0.053948938794341435, 0.1923556376622609], 'false,false,true': [0.16252650543499855, 0.00023084008278235053], 'true': [1.2688263138573217e-16, 0.08429564796613845], 'false,false': [0.19074372551723703, 0.2097606428619852], 'true,true': [0.0, 4.4408920985006264e-17], 'false,true': [nan, 0.001309165160938581], 'false': [0.0013091651609384541, 0.1916224681958143], 'false,false,false': [0.2097606428619852, nan]}, {'': [0.0001111876018197243, 0.14921949834289727], 'false,false,true': [0.12878876116939444, 0.16131541157218776], 'true': [0.0, 0.00011348695497366279], 'false,false': [0.14733264870390306, 0.2117954789931914], 'false,true': [0.0016297940940277257, 0.06815681571696987], 'false': [0.0376715518470459, 0.15032818850283727], 'false,false,false': [0.2117954789931914, nan], 'false,true,true': [nan, 0.0016297940940277257]}, {'': [0.12890731779254364, 0.1464753929316933], 'false,false,true': [0.0, nan], 'true': [2.1352617323167067e-06, 0.14725582113078037], 'false,false': [0.0, 0.23446387273337907], 'false,true': [0.0721703913048145, 0.00020230912517335916], 'false': [0.14318891405987585, 0.21584290712378842], 'false,false,false': [0.23446387273337907, nan], 'false,true,true': [0.0631625200714559, 0.06443215457575723]}, {'': [0.0975123511209172, 0.1108273740350971], 'true': [0.012039258439345807, 0.09626789277359171], 'false,false': [nan, 0.11705630620123593], 'false,true': [0.12549635490889957, 0.0809248173381635], 'false': [0.10126805405657383, 0.11705630620123593], 'false,false,false': [nan, 0.11705630620123593], 'false,true,true': [0.11044748402471713, 0.13383786899507086]}, {'': [0.0016674198007224656, 0.1110562105649868], 'true': [0.0012001182240262032, 0.002244493378738364], 'false,false': [0.10546495476597978, 0.20569878386582444], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.00023895787892028175], 'false,true': [0.1495178110666429, 6.111624746260591e-05], 'false': [0.11875609658167614, 0.11076488874051618], 'false,false,false': [0.20569878386582444, nan]}, {'': [0.09884766694760662, 0.10271138036390008], 'false,false,true': [0.0008473256945506306, 0.0006100745000765628], 'true': [0.08117672350738193, 0.12807428368948354], 'false,false': [0.23123060508065615, 0.15681125372629728], 'true,true': [0.00016630230130111888, 0.1284178321262353], 'false': [0.09792273669496332, 0.20264236592781068], 'false,false,false': [nan, 0.15681125372629728], 'true,true,false': [0.0, 0.17310029566439092]}, {'': [0.05293842083596204, 0.09403076022989558], 'false,false,true': [0.0, 0.12749876530262164], 'true': [0.10252192154214101, 0.0011239641318190273], 'false,false': [0.13467598730673777, nan], 'true,true': [0.10252192154214101, nan], 'false': [0.09198702846483572, 0.13467598730673777]}, {'': [0.10425325118096196, 0.11964679421770776], 'false,true': [0.0, 0.11731715036060117], 'true': [0.13443614879629917, 0.0014945319751471136], 'false': [0.11964679421770776, nan], 'false,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), interaction(D, A).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(G, A), interaction(A, G).;true;true
1;true;interaction(C, D), interaction(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;true,true;enzyme(A, E).;true;true
2;false,false;interaction(I, A).;true;true
2;true;interaction(D, C), interaction(A, D).;true;true
2;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(G, A), interaction(G, F).;true;true
3;true;interaction(A, D), enzyme(A, E).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;true;enzyme(C, D), enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true,true;enzyme(D, E), interaction(C, D).;true;true
6;false,true;interaction(A, G), interaction(G, F).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false,false,true;enzyme(J, H), recursion_proteinclass(J, B).;true;true
7;true,true;recursion_proteinclass(D, B), interaction(A, E).;true;true
7;false,false;enzyme(A, H), interaction(A, I).;true;true
7;true;interaction(C, D), interaction(D, A).;true;true
7;true,true,false;interaction(A, C), enzyme(C, F).;true;true
7;false;interaction(G, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(D, C).;true;true
8;false;interaction(E, A).;true;true
8;false,false;recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;false;recursion_proteinclass(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, G) )
%   | | | then return 0.11871231538120397;  // std dev = 7,397, 284,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=74 */
%   | | | else return 0.2867203636709409;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109543;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0.42405077188448576;  // std dev = 0,724, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5717620920477201;  // std dev = 0,939, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.48283831080729656;  // std dev = 2,875, 36,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | | | else return -0.1554941064533522;  // std dev = 0,053, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.0604662708504281;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.16542804105210762;  // std dev = 5,925, 160,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.6638300115758561;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5914804772358124;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7005249241090307;  // std dev = 2,791, 85,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.17162847012559435;  // std dev = 0,376, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.26735711707589827;  // std dev = 1,425, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.20031156916328832;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.08418025082497664;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4175135841583098;  // std dev = 1,18e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return 0.48180690421767824;  // std dev = 0,125, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.44487709062632874;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.10700489856033686;  // std dev = 1,912, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.028161276197942436;  // std dev = 1,847, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.057984444530133405;  // std dev = 3,465, 84,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.1406387107049334;  // std dev = 4,488, 118,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), enzyme(A, D) )
%   | then return 0.346206022535402;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32617488474056094;  // std dev = 0,020, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.585901066984347;  // std dev = 1,002, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.43595776189426805;  // std dev = 3,314, 73,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=58 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.14632934234834927;  // std dev = 0,329, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.17211059490091823;  // std dev = 0,119, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.33933286764716286;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.4258751226946558;  // std dev = 0,728, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.019212702754055906;  // std dev = 1,245, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return -0.10917548954016369;  // std dev = 1,065, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.2513663414807522;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, F) )
%   | | | then return 0.4434760721909285;  // std dev = 0,549, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.26403251001024197;  // std dev = 0,573, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11965392354638925;  // std dev = 0,049, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1285941007038862;  // std dev = 2,005, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.033091098141225815;  // std dev = 3,808, 133,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.23501411879776957;  // std dev = 1,173, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.11878995355170767;  // std dev = 1,362, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(C, D) )
%   | | then return 0.2713996511759439;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.1994684220500391;  // std dev = 0,035, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10402132032819374;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21466150889869204;  // std dev = 0,045, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.22620920581143172;  // std dev = 0,055, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.003758997638419808;  // std dev = 1,469, 47,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return -0.0953598174982468;  // std dev = 1,341, 30,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.012608879455403246;  // std dev = 2,935, 91,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | | else return 0.07244563528692156;  // std dev = 3,707, 114,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | | then return 0.031694520904152555;  // std dev = 0,858, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, C), enzyme(C, F) )
%   | | | then return 0.2211577021120117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0036981389687796183;  // std dev = 0,933, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.16610459127900865;  // std dev = 0,042, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H) )
%   | | then return -0.01662363917050321;  // std dev = 0,289, 132,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | else return 0.04302026282172269;  // std dev = 0,310, 149,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6678157196651693;  // std dev = 0,150, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.24064048664875357;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.024822884449607324;  // std dev = 0,652, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.156017145008384;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.18974438989232456;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09485830303860099;  // std dev = 0,244, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), complex(A, I) )
%   | | then return -0.04411641905682597;  // std dev = 0,225, 117,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=26 */
%   | | else if ( location(A, J) )
%   | | | then return 0.03324962922611451;  // std dev = 4,258, 158,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
%   | | | else return -0.06483096250711817;  // std dev = 1,659, 26,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.32618811413432147;  // std dev = 0,669, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17244266527388788;  // std dev = 0,526, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1780377180379489;  // std dev = 0,054, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.39337341441264206;  // std dev = 0,628, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.5117428799006591;  // std dev = 0,179, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(A, G), complex(A, H) )
%   | | | then return 0.22567780902365392;  // std dev = 1,129, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.3565162559676081;  // std dev = 2,471, 50,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | else if ( complex(A, I) )
%   | | then return -0.10570022150055929;  // std dev = 0,027, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.1706613679759196;  // std dev = 0,018, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( recursion_proteinclass(J, B) )
%   | then if ( enzyme(A, K) )
%   | | then return 0.25687261029596076;  // std dev = 0,637, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.08520377397350953;  // std dev = 0,767, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.18331010766642025;  // std dev = 0,053, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.988871
   AUC PR    = 0.355541
   CLL	      = -0.176299
   Precision = 0.273446 at threshold = 0.5
   Recall    = 0.913208
   F1        = 0.42087


Total learning time: 11.789 seconds
Total inference time: 36.891 seconds
AUC ROC: 0.988871


Results scoring model
   AUC ROC   = 0.985247
   AUC PR    = 0.248576
   CLL	      = -0.191697
   Precision = 0.127318 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.22563


Total scoring time: 12.452 seconds
Refined model CLL: -0.191697


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988871
   AUC PR    = 0.355541
   CLL	      = -0.176299
   Precision = 0.273446 at threshold = 0.5
   Recall    = 0.913208
   F1        = 0.42087


Total learning time: 35.123 seconds
Total inference time: 36.891 seconds
AUC ROC: 0.988871
Total revision time: 35.123
Best scored revision CLL: -0.191697


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:20:42
{'Learning time': 35.123, 'Recall': 0.913208, 'Precision': [0.273446, 0.5], 'CLL': -0.176299, 'AUC PR': 0.355541, 'F1': 0.42087, 'Inference time': 36.891, 'AUC ROC': 0.988871, 'parameter': {'Learning time': 3.095, 'Recall': 0.849057, 'Precision': [0.182186, 0.5], 'CLL': -0.187375, 'AUC PR': 0.255396, 'F1': 0.3, 'Inference time': 11.616, 'AUC ROC': 0.97926}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;true;follows(C, D), follows(D, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true;tweets(E, F), follows(E, G).;true;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,false,false;follows(A, J), tweets(A, K).;false;false
0;false,true,true;follows(G, E), follows(A, G).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;true;follows(C, D), follows(A, D).;false;false
1;false,false,false;follows(A, J).;false;false
1;false,false;follows(H, A).;true;true
1;false,true;follows(F, A), follows(E, F).;false;true
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true,false;follows(G, A), follows(A, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;true,true;tweets(A, E).;false;false
2;false,false;follows(I, A).;true;true
2;true;follows(D, C), follows(A, D).;true;false
2;false,true;tweets(F, G), follows(F, H).;false;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, J), follows(J, A).;false;false
3;true;follows(A, D), tweets(A, E).;false;false
3;false,false;follows(I, A).;true;true
3;false,true;follows(G, A), follows(G, F).;true;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,false,false;follows(A, K), follows(K, L).;false;false
3;false,true,true;tweets(A, H), follows(F, G).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(A, I), follows(H, I).;false;false
4;true;tweets(C, D), tweets(A, D).;false;false
4;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false;follows(E, A).;true;true
4;false,false,false;follows(A, J), follows(J, K).;false;false
4;false,true,true;follows(A, F), follows(F, G).;false;false
5;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
5;false,false,true;tweets(K, J), recursion_accounttype(K, B).;false;false
5;true;tweets(E, D), recursion_accounttype(E, B).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,true;recursion_accounttype(G, B).;true;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,false,false;follows(A, L).;false;false
5;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true;tweets(D, E), follows(C, D).;true;false
6;false,false;follows(H, A).;false;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;false,true;follows(A, G), follows(G, F).;false;false
6;true,true,true;tweets(C, E).;false;false
6;false,false,false;follows(A, I).;false;false
6;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
7;true,true;recursion_accounttype(D, B), follows(A, E).;false;true
7;false,false;tweets(A, H), follows(A, I).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true,false;follows(A, C), tweets(C, F).;false;false
7;false,false,false;tweets(A, K).;false;false
7;false;follows(G, A).;false;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;true,true;follows(A, C).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;true;follows(A, D), follows(D, C).;true;false
8;true,true,false;tweets(C, E), tweets(A, E).;false;false
8;false,false,false;follows(A, I).;false;false
8;false;follows(F, A).;false;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;false;false
9;false,false;follows(A, H), tweets(A, I).;true;true
9;false,true;recursion_accounttype(F, B).;true;false
9;false;follows(A, E), follows(E, F).;true;true
9;false,false,false;follows(A, K).;false;false
9;false,true,true;follows(A, G), follows(E, G).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.6581489350995121;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.14386322081379807;  // std dev = 3,162, 49,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.12644161802634163;  // std dev = 4,012, 82,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.12130682983635448;  // std dev = 3,325, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.17158177092040747;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5986425107314688;  // std dev = 0,951, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5908841995673337;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08006530695135261;  // std dev = 5,012, 138,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14642609666579637;  // std dev = 4,993, 117,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4553664367462845;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.2516363746211154;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6325584930350716;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7962404358021092;  // std dev = 0,991, 37,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.16978740005552645;  // std dev = 0,012, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.09506925630749871;  // std dev = 5,101, 130,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then return 0.43282688860758123;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.433847775570866;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then if ( complex(A, H), interaction(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4776773642069304;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4957572428800482;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), interaction(A, J) )
%   | | | then return 0.04455542288710619;  // std dev = 2,718, 59,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | | else return 0.05901140611350164;  // std dev = 3,361, 88,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1221267851445882;  // std dev = 4,289, 85,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.14838664312256744;  // std dev = 2,425, 26,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.3327738032358137;  // std dev = 0,032, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.13043463014279816;  // std dev = 0,885, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6581284853779185;  // std dev = 0,360, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.15406315485283792;  // std dev = 0,002, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.35775827980746155;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.37903276492056676;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09469491835813491;  // std dev = 4,313, 87,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | | else return 0.09827997495376262;  // std dev = 2,473, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.35749201433703803;  // std dev = 0,503, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.009957626673323235;  // std dev = 2,473, 95,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.29697434068813344;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.06516393711089023;  // std dev = 4,519, 109,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7668360553058304;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.23316394469416965;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.032084035554134596;  // std dev = 2,408, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.05201628012334;  // std dev = 1,355, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(D, C) )
%   | | then if ( complex(C, E) )
%   | | | then return 0.19807821381366722;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2567706096179186;  // std dev = 0,049, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.07578330636239093;  // std dev = 0,922, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return -0.11007036315196711;  // std dev = 0,473, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2590957893041578;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then return 0.03604246105718856;  // std dev = 3,209, 131,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.046175934453765055;  // std dev = 5,001, 123,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(E, A) )
%   | | then return 0.1797353019607549;  // std dev = 0,070, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, A), complex(C, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17433928889676664;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21378494999797473;  // std dev = 0,120, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then return 0.018742176837030593;  // std dev = 3,237, 142,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=37 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.647892425022471;  // std dev = 0,814, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.23922627681735403;  // std dev = 0,111, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( complex(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.01713421639642226;  // std dev = 3,927, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(C, A) )
%   | | then return 0.15582346162079222;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07420311688531883;  // std dev = 0,951, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then return 0.011847156259814763;  // std dev = 3,263, 144,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=37 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.13257378523420493;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02967140787377165;  // std dev = 4,047, 98,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.022506147140020256;  // std dev = 2,349, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.36260617722218913;  // std dev = 1,388, 52,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.1438034924259001;  // std dev = 0,035, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.12895438048399743;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10719159467188044;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0427535022431562;  // std dev = 3,987, 91,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42729909796756993;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.16878828733458645;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.05361306906710342;  // std dev = 2,185, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.934493
   AUC PR    = 0.231046
   CLL	      = -0.237364
   Precision = 0.188222 at threshold = 0.5
   Recall    = 0.588448
   F1        = 0.285214


Total learning time: 1.972 seconds
Total inference time: 13.24 seconds
AUC ROC: 0.934493


Results scoring model
   AUC ROC   = 0.967781
   AUC PR    = 0.434222
   CLL	      = -0.212522
   Precision = 0.408451 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.495726


Total scoring time: 3.71 seconds
Parameter learned model CLL: -0.212522


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(A, H)', 'false,true': 'complex(E, F), interaction(G, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(J, A), complex(A, K)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [3.325, 42, 15], 'false,false,false,false': [3.797, 46, 21], 'true,true': [0.0, 0, 7], 'false,true,true,false': [0.0, 0, 2], 'false,false,true,false': [4.012, 60, 22], 'false,true,false': [0.894, 1, 4], 'false,false,true,true': [3.162, 35, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,true,false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(J, A)'}, {'true,false': [2.98e-08, 0, 9], 'false,false,true,false': [5.012, 105, 33], 'false,false,false,true': [4.993, 81, 36], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.867, 1, 3], 'false,true,false,false': [0.951, 1, 6], 'false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, I)', 'true,true': 'complex(A, E)', 'false,true': 'complex(F, G), interaction(H, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A)'}, {'true,false': [0.949, 1, 9], 'false,false,true,false': [0.012, 99, 0], 'false,false,false,true': [5.101, 94, 36], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 0, 3], 'false,false,true,true': [0.991, 1, 36], 'true,true,false': [0.0, 0, 2], 'false,true,false': [0.0, 0, 4], 'false,true,true': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(A, J)', 'true': 'interaction(D, A), complex(A, E)', 'false,false': 'interaction(A, I)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A), interaction(L, K)', 'false,true,true': 'complex(A, H), interaction(G, F)'}, {'true,false': [0.028, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [4.289, 58, 27], 'false,false,false,false': [2.425, 17, 9], 'true,true': [0.034, 0, 8], 'false,true,true,false': [0.0, 0, 1], 'false,false,true,false': [3.361, 66, 22], 'false,true,false': [0.05, 0, 5], 'false,false,true,true': [2.718, 45, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'true': 'complex(C, D), complex(A, D)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(F, A), interaction(G, F)'}, {'true,false': [0.885, 1, 4], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [4.313, 60, 27], 'false,false,false,false': [2.473, 19, 9], 'true,true': [0.032, 0, 10], 'false,true,true,false': [0.36, 0, 37], 'false,false,true,false': [0.043, 0, 4], 'false,true,false': [0.002, 105, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(C, D)', 'false,false,true': 'complex(K, J), recursion_proteinclass(K, B)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'false,false': 'interaction(I, A), complex(A, J)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,false,false': 'interaction(L, A)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,false': [2.473, 76, 19], 'false,true,true,true': [0.024, 0, 2], 'false,false,false,true': [2.408, 27, 10], 'false,false,false,false': [1.355, 15, 6], 'true,true': [0.503, 0, 18], 'false,true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 3, 0], 'false,true,false': [4.519, 74, 35], 'false,false,true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H)', 'true,true': 'complex(D, E), interaction(D, C)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true,true,true': 'complex(C, E)', 'false,false,false': 'interaction(I, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'true,true,true,true': [0.021, 0, 7], 'true,false': [0.922, 1, 5], 'false,false,true': [3.209, 95, 36], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.473, 1, 1], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [5.001, 87, 36], 'false,true,false': [0.06, 0, 5], 'true,true,false': [0.049, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'complex(J, H), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'complex(A, H), interaction(I, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(E, A)', 'true,true,false': 'interaction(C, A), complex(C, F)', 'false,false,false': 'complex(A, K)', 'false': 'interaction(A, G)'}, {'true,false': [0.12, 0, 7], 'false,false,true,false': [0.111, 37, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.927, 57, 23], 'true,true,true': [0.07, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,true': [0.814, 0, 18], 'false,true': [3.237, 105, 37], 'true,true,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(G, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false,false': 'interaction(F, A), interaction(G, F)', 'true,true': 'interaction(C, A)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(H, A)'}, {'true,false': [0.951, 1, 9], 'false,false,true,false': [4.047, 68, 30], 'false,false,false,true': [2.349, 22, 9], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.063, 0, 5], 'false,false,true,true': [0.017, 0, 2], 'false,true': [3.263, 107, 37], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'false,false,true': 'complex(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), complex(A, I)', 'false,true': 'recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(F, E)', 'false,false,false': 'interaction(K, A)', 'false,true,true': 'interaction(G, A), interaction(G, E)'}, {'true,false': [0.035, 99, 0], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [2.185, 15, 7], 'false,false,false,false': [0.0, 0, 0], 'true,true': [1.388, 1, 51], 'false,true,true,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 4, 0], 'false,true,false': [3.987, 61, 30], 'false,false,true,true': [0.0, 0, 2]}]]
[{'': [-2.5376526277146434e-16, 0.209078725016026], 'false,false,true': [0.20408163265306073, 0.19631171921475268], 'true': [-2.5376526277146434e-16, -2.5376526277146434e-16], 'false,false': [0.1992890857176169, 0.20603537981269648], 'false,true': [0.0, 0.16000000000000014], 'false': [0.12244897959183662, 0.20262975778546766], 'false,false,false': [0.1939058171745147, 0.2151926932501672], 'false,true,true': [nan, 0.0]}, {'': [1.9032394707859825e-16, 0.20476712486760107], 'false,false,true': [0.18808409323614822, 0.18204242704305051], 'true': [0.0, 9.868649107779169e-17], 'false,true,false': [nan, 0.1291060578959447], 'false,false': [0.18935587208665122, 0.21305560859090894], 'false,true': [nan, 0.1291060578959447], 'false': [0.12910605789594484, 0.20073089905838584], 'false,false,false': [0.21305560859090894, nan]}, {'': [0.062222222222222, 0.19785331515740728], 'false,false,true': [0.026535488082268653, 1.3998738550030811e-06], 'true': [-4.4408920985006264e-17, 0.09], 'false,false': [0.19203572917366207, 0.20016030121871273], 'true,true': [3.700743415417188e-17, 0.0], 'false,true': [0.22222222222222224, 0.0], 'false': [0.13077319571898732, 0.19600742481997735], 'false,false,false': [0.20016030121871273, nan]}, {'': [0.00013782698046720703, 0.1678180939665817], 'false,false,true': [0.1251800932687563, 0.1283313362843803], 'true': [0.00014069837589367196, 0.00013340290455099435], 'false,false': [0.12711676225815519, 0.2187950502639566], 'false,true': [0.0, 0.0004903230192519814], 'false': [0.00045400279560370294, 0.16794113310267506], 'false,false,false': [0.21640336742449975, 0.2260859565282027], 'false,true,true': [nan, 0.0]}, {'': [0.061338199250096474, 0.16575726866444185], 'false,false,true': [0.0, 0.00045260371682773193], 'true': [0.00010150033820177651, 0.15651750309524243], 'false,false': [0.00043449956815462266, 0.2149134976926622], 'false,true': [0.003507305757278282, 3.58668646698101e-08], 'false': [0.12800975035278706, 0.20908978944525816], 'false,false,false': [0.21379936456443085, 0.2183655451893507], 'false,true,true': [nan, 0.003507305757278282]}, {'': [0.07445853415627761, 0.16929832388378926], 'false,false,true': [0.0, -9.25185853854297e-18], 'true': [0.014041181552304098, 0.06439854319735819], 'false,false': [0.24000000000000005, 0.13172953171933863], 'false,true': [0.00027730390545131767, 0.1873457733089006], 'false': [0.1849259422539118, 0.14151086489632722], 'false,false,false': [0.15670505752025274, 0.08747158746890926], 'false,true,true': [0.00027730390545131767, nan]}, {'': [0.06160839939193422, 0.13725953685068074], 'true': [0.0009133376784237016, 0.14166122229673428], 'false,false': [0.07858705830589377, 0.20337178495700012], 'true,true,true': [6.089926800545431e-05, nan], 'true,true': [6.089926800545431e-05, 0.0012175853063652875], 'false,true': [0.11191315428827703, 0.0007189767207865128], 'false': [0.060301731152163175, 0.13903995418019036], 'false,false,false': [0.20337178495700012, nan]}, {'': [0.0016929270736720792, 0.13051361778871554], 'false,false,true': [0.03684263264262904, 0.0003337234025021777], 'true': [0.0007116660283387358, 0.002067954263522568], 'false,false': [0.1855476830244111, 0.19276988925478372], 'true,true': [0.000826117467778049, 0.0], 'false': [0.07378588624632935, 0.19010609373274343], 'false,false,false': [nan, 0.19276988925478372], 'true,true,false': [nan, 0.0]}, {'': [0.06203350276561032, 0.118487974980811], 'false,false,true': [0.0001444395696882303, 0.16708448655585995], 'true': [0.0007864625976611806, 0.0904363959580057], 'false,false': [0.1639532280417585, 0.17801643815244564], 'true,true': [0.0007864625976611806, nan], 'false': [0.07393651285979361, 0.16729653038124886], 'false,false,false': [0.17801643815244564, nan]}, {'': [0.07066751891825615, 0.17483954041004582], 'false,false,true': [0.0, 0.0], 'true': [0.03704766338599926, 1.226616248008702e-05], 'false,false': [0.07896003798141367, 0.2169421487603306], 'false,true': [0.00011840471157601937, 0.1746674328308991], 'false': [0.17103306715814456, 0.18746916823631574], 'false,false,false': [0.2169421487603306, nan], 'false,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;complex(E, F), interaction(G, E).;true;true
0;true;interaction(D, C), interaction(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), interaction(D, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;true,true;complex(A, E).;true;true
2;false,false;interaction(A, I).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false,true;complex(F, G), interaction(H, F).;true;true
2;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(A, G), interaction(F, G).;true;true
3;true;interaction(D, A), complex(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,false,true;interaction(I, A), interaction(I, H).;true;true
4;true;complex(C, D), complex(A, D).;true;true
4;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false;interaction(A, E).;true;true
5;;proteinclass(A, B) :- interaction(A, C), complex(C, D).;true;true
5;false,true;recursion_proteinclass(G, B).;true;true
5;false;interaction(F, A), interaction(G, F).;true;true
5;false,false;interaction(I, A), complex(A, J).;true;true
5;false,false,true;complex(K, J), recursion_proteinclass(K, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true,true;complex(D, E), interaction(D, C).;true;true
6;false,true;interaction(G, A), interaction(F, G).;true;true
6;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;complex(J, H), recursion_proteinclass(J, B).;true;true
7;true,true;recursion_proteinclass(D, B), interaction(E, A).;true;true
7;false,false;complex(A, H), interaction(I, A).;true;true
7;true;interaction(D, C), interaction(A, D).;true;true
7;false;interaction(A, G).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false,false,true;recursion_proteinclass(G, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,false;interaction(F, A), interaction(G, F).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;false,false,true;complex(J, I), recursion_proteinclass(J, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false,false;interaction(H, A), complex(A, I).;true;true
9;false,true;recursion_proteinclass(F, B).;true;true
9;false;interaction(E, A), interaction(F, E).;true;true
9;false,true,true;interaction(G, A), interaction(G, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.06867525088898606;  // std dev = 2,513, 38,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.16003572755234113;  // std dev = 6,684, 212,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=64 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), enzyme(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14417481581107242;  // std dev = 0,031, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, H), interaction(A, E) )
%   | | | then return 0.3375300759066995;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.050613437882082155;  // std dev = 3,417, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7895446343394261;  // std dev = 0,965, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.16038405019537721;  // std dev = 0,033, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.2928413803616038;  // std dev = 2,506, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.18466373296726737;  // std dev = 4,310, 83,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.6733258052044275;  // std dev = 0,077, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.6818545739197341;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8041922647967673;  // std dev = 0,240, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.16875852498138671;  // std dev = 0,272, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.20799467588639103;  // std dev = 1,603, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0991024024462588;  // std dev = 4,423, 103,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.5521553559698977;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5118598384003149;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.12794219479010302;  // std dev = 0,859, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07954215376562565;  // std dev = 0,805, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.11365608358169577;  // std dev = 3,474, 85,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.06299449871295319;  // std dev = 5,052, 150,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.012621486173183686;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.5078026510378755;  // std dev = 0,868, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.6304759051413762;  // std dev = 0,321, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.15486364695090782;  // std dev = 0,026, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3670938229778635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3916282598642947;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.043206877939734795;  // std dev = 4,213, 99,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
%   | | | else return 0.1292737567993091;  // std dev = 2,177, 25,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.2722461094800501;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0235778467620093;  // std dev = 0,271, 105,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.2690145919557936;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3157481140203394;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06864304248130375;  // std dev = 4,223, 101,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5985663516677768;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.20596458837177103;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.16518955819179607;  // std dev = 1,161, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.035388350759344815;  // std dev = 2,268, 41,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(D, C) )
%   | | then return 0.21944883990725925;  // std dev = 0,020, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2669549990512736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.26655591776358845;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.23490602251188564;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.24237874233464005;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.053777123884142325;  // std dev = 2,670, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.08306019619356926;  // std dev = 1,597, 31,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.014102355153058053;  // std dev = 2,360, 56,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.08440447856263346;  // std dev = 3,943, 109,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2011735219879412;  // std dev = 0,030, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), complex(F, E) )
%   | | | then return -0.06713969582825008;  // std dev = 1,515, 63,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
%   | | | else return 0.05849064334744584;  // std dev = 1,472, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.0034762247099572982;  // std dev = 1,490, 36,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.06947562937858685;  // std dev = 1,761, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5777139410370085;  // std dev = 0,823, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.23071136219014157;  // std dev = 0,213, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.024643546050395922;  // std dev = 1,511, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.04545680830957214;  // std dev = 3,371, 59,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17092237472428992;  // std dev = 0,026, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.258408124449028;  // std dev = 1,628, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.13592878234146782;  // std dev = 0,229, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.23716194677084584;  // std dev = 0,700, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02080188573094716;  // std dev = 2,190, 63,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.11071469121710936;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.020459133570137945;  // std dev = 3,886, 97,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.07925536094749079;  // std dev = 1,135, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.005416369714071147;  // std dev = 1,728, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.34110970315033173;  // std dev = 0,139, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.14352319931004937;  // std dev = 0,033, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.1002828701845706;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.027444619441453186;  // std dev = 2,313, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.02324453725210478;  // std dev = 3,139, 62,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2870371519816106;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.16069482978173605;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0962755626713663;  // std dev = 1,628, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3323988956652659;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.954147
   AUC PR    = 0.24681
   CLL	      = -0.210017
   Precision = 0.227979 at threshold = 0.5
   Recall    = 0.635379
   F1        = 0.335558


Total learning time: 4.892 seconds
Total inference time: 15.238 seconds
AUC ROC: 0.954147


Results scoring model
   AUC ROC   = 0.978014
   AUC PR    = 0.502794
   CLL	      = -0.20279
   Precision = 0.463768 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.556522


Total scoring time: 3.534 seconds
Refined model CLL: -0.20279


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954147
   AUC PR    = 0.24681
   CLL	      = -0.210017
   Precision = 0.227979 at threshold = 0.5
   Recall    = 0.635379
   F1        = 0.335558


Total learning time: 14.108 seconds
Total inference time: 15.238 seconds
AUC ROC: 0.954147
Total revision time: 14.108
Best scored revision CLL: -0.20279


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:21:25
{'Learning time': 14.108, 'Recall': 0.635379, 'Precision': [0.227979, 0.5], 'CLL': -0.210017, 'AUC PR': 0.24681, 'F1': 0.335558, 'Inference time': 15.238, 'AUC ROC': 0.954147, 'parameter': {'Learning time': 1.972, 'Recall': 0.588448, 'Precision': [0.188222, 0.5], 'CLL': -0.237364, 'AUC PR': 0.231046, 'F1': 0.285214, 'Inference time': 13.24, 'AUC ROC': 0.934493}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;true;follows(C, D), follows(D, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,true;tweets(E, F), follows(E, G).;true;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,false,false;follows(A, J), tweets(A, K).;false;false
0;false,true,true;follows(G, E), follows(A, G).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;true;follows(C, D), follows(A, D).;false;false
1;false,false,false;follows(A, J).;false;false
1;false,false;follows(H, A).;true;true
1;false,true;follows(F, A), follows(E, F).;false;true
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true,false;follows(G, A), follows(A, G).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;true,true;tweets(A, E).;false;false
2;false,false;follows(I, A).;true;true
2;true;follows(D, C), follows(A, D).;true;false
2;false,true;tweets(F, G), follows(F, H).;false;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;false,false,true;follows(I, J), follows(J, A).;false;false
3;true;follows(A, D), tweets(A, E).;false;false
3;false,false;follows(I, A).;true;true
3;false,true;follows(G, A), follows(G, F).;true;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,false,false;follows(A, K), follows(K, L).;false;false
3;false,true,true;tweets(A, H), follows(F, G).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;false,false,true;follows(A, I), follows(H, I).;false;false
4;true;tweets(C, D), tweets(A, D).;false;false
4;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false;follows(E, A).;true;true
4;false,false,false;follows(A, J), follows(J, K).;false;false
4;false,true,true;follows(A, F), follows(F, G).;false;false
5;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
5;false,false,true;tweets(K, J), recursion_accounttype(K, B).;false;false
5;true;tweets(E, D), recursion_accounttype(E, B).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,true;recursion_accounttype(G, B).;true;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,false,false;follows(A, L).;false;false
5;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true,true;tweets(D, E), follows(C, D).;true;false
6;false,false;follows(H, A).;false;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;false,true;follows(A, G), follows(G, F).;false;false
6;true,true,true;tweets(C, E).;false;false
6;false,false,false;follows(A, I).;false;false
6;false;follows(A, F), recursion_accounttype(F, B).;true;true
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
7;true,true;recursion_accounttype(D, B), follows(A, E).;false;true
7;false,false;tweets(A, H), follows(A, I).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true,false;follows(A, C), tweets(C, F).;false;false
7;false,false,false;tweets(A, K).;false;false
7;false;follows(G, A).;false;true
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;true,true;follows(A, C).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;true;follows(A, D), follows(D, C).;true;false
8;true,true,false;tweets(C, E), tweets(A, E).;false;false
8;false,false,false;follows(A, I).;false;false
8;false;follows(F, A).;false;true
9;;accounttype(A, B) :- follows(C, A).;true;true
9;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
9;true;follows(C, D), recursion_accounttype(D, B).;false;false
9;false,false;follows(A, H), tweets(A, I).;true;true
9;false,true;recursion_accounttype(F, B).;true;false
9;false;follows(A, E), follows(E, F).;true;true
9;false,false,false;follows(A, K).;false;false
9;false,true,true;follows(A, G), follows(E, G).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.049929757017320595;  // std dev = 3,364, 73,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | | else return 0.18573514199606406;  // std dev = 3,574, 58,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.24148226843284482;  // std dev = 3,766, 60,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.7230711072455374;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6106630398665784;  // std dev = 0,954, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7503101501396745;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6988422344463701;  // std dev = 0,915, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.028897724313613222;  // std dev = 4,681, 146,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=27 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14856888314861957;  // std dev = 4,592, 97,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.5626195099671345;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5544778654767806;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.48199005725802957;  // std dev = 0,921, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.5515528998846212;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5966535880555113;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7607768271339103;  // std dev = 1,381, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.1598058640710807;  // std dev = 0,096, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.09707281729384924;  // std dev = 4,689, 107,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then return 0.44023822257227;  // std dev = 0,086, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3608025389059692;  // std dev = 0,910, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then if ( complex(A, H), interaction(G, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41844131174164834;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.44131201806662396;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), interaction(A, J) )
%   | | | then return 0.014903127357350185;  // std dev = 2,847, 78,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | | else return 0.09984246405488191;  // std dev = 2,957, 62,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1307483389327893;  // std dev = 3,636, 59,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.13483436504147328;  // std dev = 2,683, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.20829988376299569;  // std dev = 0,940, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.27320895633988734;  // std dev = 0,940, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.32134086233917014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6455001443768253;  // std dev = 0,603, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.14552110387753447;  // std dev = 0,160, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09379567663358568;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07178920464528953;  // std dev = 3,737, 66,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.1015673482881567;  // std dev = 2,703, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.303692246308748;  // std dev = 1,089, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.013421659427379674;  // std dev = 2,141, 82,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.2909442711639589;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41032603481430197;  // std dev = 0,133, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05629013930675238;  // std dev = 4,195, 104,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7598970809362026;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.24010291906379747;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.0019052766983855944;  // std dev = 2,649, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.12419188254123349;  // std dev = 1,192, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(D, C) )
%   | | then if ( complex(C, E) )
%   | | | then return 0.2247272306341234;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.24922781045889889;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3007484888509196;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.2325252334784233;  // std dev = 0,043, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2524171880525593;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0026022754578851346;  // std dev = 3,200, 149,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=33 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.035517447101969364;  // std dev = 4,636, 107,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(E, A) )
%   | | then return 0.19397571716571438;  // std dev = 0,063, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, A), complex(C, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2389933348510841;  // std dev = 0,023, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.07060627210599903;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G) )
%   | then return 0.04116018146258743;  // std dev = 3,099, 121,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.658990359619684;  // std dev = 0,467, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.23767450251362693;  // std dev = 0,078, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07778486774104136;  // std dev = 3,961, 69,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(C, A) )
%   | | then return 0.1642375932903457;  // std dev = 0,055, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(C, E), complex(A, E) )
%   | | | then return 0.18231249812116823;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.21763783855154786;  // std dev = 0,090, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return -0.0011152745967102757;  // std dev = 3,285, 147,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=36 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.20726764265318653;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.025766388505180385;  // std dev = 3,574, 69,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05923102382641278;  // std dev = 2,534, 32,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32967244401688295;  // std dev = 1,665, 54,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.14966132134492913;  // std dev = 0,950, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.17526798135165644;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.044004364176923785;  // std dev = 3,492, 65,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4105915291953688;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17724226056100112;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.021212214479188994;  // std dev = 2,635, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.938251
   AUC PR    = 0.193493
   CLL	      = -0.240098
   Precision = 0.201701 at threshold = 0.5
   Recall    = 0.586572
   F1        = 0.300181


Total learning time: 2.453 seconds
Total inference time: 13.015 seconds
AUC ROC: 0.938251


Results scoring model
   AUC ROC   = 0.95113
   AUC PR    = 0.309219
   CLL	      = -0.220725
   Precision = 0.270142 at threshold = 0.5
   Recall    = 0.662791
   F1        = 0.383838


Total scoring time: 3.917 seconds
Parameter learned model CLL: -0.220725


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(A, H)', 'false,true': 'complex(E, F), interaction(G, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(J, A), complex(A, K)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [0.913, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [2.353, 18, 8], 'false,false,false,false': [3.766, 37, 23], 'true,true': [0.0, 0, 11], 'false,true,true,false': [0.0, 0, 2], 'false,false,true,false': [3.574, 39, 19], 'false,true,false': [0.894, 1, 4], 'false,false,true,true': [3.364, 59, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false,true,false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(J, A)'}, {'true,false': [0.954, 1, 7], 'false,false,true,false': [4.681, 119, 27], 'false,false,false,true': [4.592, 66, 31], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.031, 0, 9], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.915, 1, 6], 'false,true,false,false': [0.034, 0, 5], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(A, I)', 'true,true': 'complex(A, E)', 'false,true': 'complex(F, G), interaction(H, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A)'}, {'true,false': [0.921, 1, 7], 'false,false,true,false': [0.096, 111, 0], 'false,false,false,true': [4.689, 76, 31], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.036, 0, 5], 'false,false,true,true': [1.381, 2, 33], 'true,true,false': [0.0, 0, 4], 'false,true,false': [0.0, 0, 4], 'false,true,true': [0.005, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(J, I), interaction(A, J)', 'true': 'interaction(D, A), complex(A, E)', 'false,false': 'interaction(A, I)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(K, A), interaction(L, K)', 'false,true,true': 'complex(A, H), interaction(G, F)'}, {'true,false': [0.91, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [2.683, 21, 11], 'true,true': [0.086, 0, 7], 'false,true,true,false': [0.0, 0, 1], 'false,false,true,false': [2.957, 43, 19], 'false,true,false': [0.034, 0, 5], 'false,false,true,true': [2.847, 64, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'true': 'complex(C, D), complex(A, D)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(F, A), interaction(G, F)'}, {'true,false': [0.94, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [3.737, 46, 20], 'false,false,false,false': [2.703, 22, 11], 'true,true': [0.94, 1, 7], 'false,true,true,false': [0.603, 0, 35], 'false,false,true,false': [0.866, 1, 3], 'false,true,false': [0.16, 100, 0], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(C, D)', 'false,false,true': 'complex(K, J), recursion_proteinclass(K, B)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'false,false': 'interaction(I, A), complex(A, J)', 'false,true': 'recursion_proteinclass(G, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,false,false': 'interaction(L, A)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'true,false': [2.141, 66, 16], 'false,true,true,true': [0.039, 0, 3], 'false,false,false,true': [2.649, 25, 9], 'false,false,false,false': [1.192, 8, 5], 'true,true': [1.089, 1, 14], 'false,true,true,false': [0.133, 0, 4], 'false,false,true,false': [0.0, 2, 0], 'false,true,false': [4.195, 71, 33], 'false,false,true,true': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(A, H)', 'true,true': 'complex(D, E), interaction(D, C)', 'false,true': 'interaction(G, A), interaction(F, G)', 'true,true,true': 'complex(C, E)', 'false,false,false': 'interaction(I, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'true,true,true,true': [0.044, 0, 5], 'true,false': [0.094, 0, 6], 'false,false,true': [3.2, 116, 33], 'false,false,false,false': [0.0, 0, 0], 'false,true,true': [0.043, 0, 2], 'true,true,true,false': [0.0, 0, 0], 'false,false,false,true': [4.636, 76, 31], 'false,true,false': [0.118, 0, 4], 'true,true,false': [0.057, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'complex(J, H), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'complex(A, H), interaction(I, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(E, A)', 'true,true,false': 'interaction(C, A), complex(C, F)', 'false,false,false': 'complex(A, K)', 'false': 'interaction(A, G)'}, {'true,false': [0.927, 1, 5], 'false,false,true,false': [0.078, 14, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.961, 44, 25], 'true,true,true': [0.063, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'false,false,true,true': [0.467, 0, 9], 'false,true': [3.099, 85, 36], 'true,true,false,false': [0.023, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false,false': 'interaction(G, A), interaction(H, G)', 'true,true': 'interaction(C, A)', 'true,true,false': 'complex(C, E), complex(A, E)', 'false,false,false': 'interaction(I, A)', 'false': 'interaction(A, F)'}, {'true,false': [0.09, 0, 7], 'false,false,true,false': [3.574, 47, 22], 'false,false,false,true': [2.534, 21, 11], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.055, 0, 8], 'true,true,false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,true': [3.285, 111, 36], 'true,true,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'false,false,true': 'complex(J, I), recursion_proteinclass(J, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false,false': 'interaction(H, A), complex(A, I)', 'false,true': 'recursion_proteinclass(F, B)', 'false': 'interaction(E, A), interaction(F, E)', 'false,false,false': 'interaction(K, A)', 'false,true,true': 'interaction(G, A), interaction(G, E)'}, {'true,false': [0.95, 109, 0], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [2.635, 23, 9], 'false,false,false,false': [0.0, 0, 0], 'true,true': [1.665, 2, 52], 'false,true,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,true,false': [3.492, 43, 22], 'false,false,true,true': [0.0, 0, 2]}]]
[{'': [0.055363321799307655, 0.2148437500000014], 'false,false,true': [0.1550009382623376, 0.22027348394768087], 'true': [-1.6148698540002277e-16, 0.1388888888888887], 'false,false': [0.18845055649437803, 0.2305300162249879], 'false,true': [0.0, 0.15999999999999986], 'false': [0.12244897959183662, 0.2079466542079896], 'false,false,false': [0.21301775147929003, 0.23638888888888995], 'false,true,true': [nan, 0.0]}, {'': [0.056701375514128835, 0.19449722694090227], 'false,false,true': [0.11959588426614541, 0.15007852174834915], 'true': [0.00010354727649502454, 0.11368451095753401], 'false,true,false': [nan, 0.00023772610152121841], 'false,false': [0.16827891075001666, 0.21740583041467446], 'false,true': [0.0, 0.00023772610152121841], 'false': [0.0003301751410015689, 0.18922189434096154], 'false,false,false': [0.21740583041467446, nan]}, {'': [0.051449839196591914, 0.1854531409570195], 'false,false,true': [0.054457244426411325, 8.272318882293202e-05], 'true': [0.00016367006174651996, 0.10600700479525096], 'false,false': [0.16757589415918053, 0.20547106695765135], 'true,true': [0.0002651455000292291, 0.0], 'false,true': [1.4543063395267009e-05, 0.0], 'false': [0.0004568637041291179, 0.18392237348107782], 'false,false,false': [0.20547106695765135, nan]}, {'': [0.05071793878034462, 0.16286576481497395], 'false,false,true': [0.10389359882679787, 0.14100403672411888], 'true': [0.0010523852672725503, 0.08288557948204042], 'false,false': [0.12210833587940871, 0.2244088713793373], 'false,true': [0.0, 0.00023036186974714212], 'false': [0.00026461672587304214, 0.16392382438580277], 'false,false,false': [0.22406332448526498, 0.22503514883943518], 'false,true,true': [nan, 0.0]}, {'': [0.0992219171194855, 0.16212161507886538], 'false,false,true': [nan, 0.1875], 'true': [0.11045431417051385, 0.08836347161075517], 'false,false': [0.1875, 0.2150661009720351], 'false,true': [0.012948377428101003, 0.00025606119567890496], 'false': [0.12264591336660997, 0.21400102012667555], 'false,false,false': [0.21157908803132572, 0.2214489682942431], 'false,true,true': [0.0, 0.010399463287482596]}, {'': [0.07263365993047573, 0.17310028939275315], 'false,false,true': [0.0, 0.0], 'true': [0.07907224644463812, 0.055905164166343335], 'false,false': [0.25, 0.18266240523015492], 'false,true': [0.006251005418831311, 0.16923774463960217], 'false': [0.1643793664749076, 0.19166581603387142], 'false,false,false': [0.20632586454320873, 0.10927087308702986], 'false,true,true': [0.0005123740223340426, 0.004446976612375808]}, {'': [0.0019224058633827562, 0.12262781931385953], 'true': [0.000668269130059973, 0.001470923503202844], 'false,false': [0.06874533681317162, 0.2008700225779273], 'true,true,true': [0.0003920433353260866, nan], 'true,true': [0.0003920433353260866, 0.0006443557189187765], 'false,true': [0.000920099588728053, 0.003478546730906376], 'false': [0.002713662096131266, 0.12423288830505484], 'false,false,false': [0.2008700225779273, nan]}, {'': [0.05497230713055168, 0.14109980614987605], 'false,false,true': [0.02427209344940308, 0.00043289749338480476], 'true': [0.0007112705828603824, 0.14325250036448736], 'false,false': [0.2012640994044415, 0.22738364200177819], 'true,true': [0.00044395085216817097, 0.00025609363292130455], 'false': [0.07938839929538921, 0.22108884983369018], 'false,false,false': [nan, 0.22738364200177819], 'true,true,false': [nan, 0.00025609363292130455]}, {'': [0.001362347382828838, 0.12102309573437882], 'false,false,true': [0.0, 0.1851273854041624], 'true': [0.00036825173333441635, 0.0011548349053583373], 'false,false': [0.1829465955438486, 0.200737712148707], 'true,true': [0.00037798295726308023, 0.0], 'false': [0.0734123153105001, 0.1887333190637645], 'false,false,false': [0.200737712148707, nan], 'true,true,false': [0.0, nan]}, {'': [0.07343992410401966, 0.19245191545335447], 'false,false,true': [0.0, 0.0], 'true': [0.05133220001251639, 0.00827528030596846], 'false,false': [0.08638714109483402, 0.21698598753586212], 'false,true': [0.0, 0.18759564532575376], 'false': [0.18501039425277327, 0.2043528103333769], 'false,false,false': [0.21698598753586212, nan], 'false,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;complex(E, F), interaction(G, E).;true;true
0;true;interaction(D, C), interaction(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
1;true;interaction(D, C), interaction(D, A).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
2;true,true;complex(A, E).;true;true
2;false,false;interaction(A, I).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false,true;complex(F, G), interaction(H, F).;true;true
2;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(A, G), interaction(F, G).;true;true
3;true;interaction(D, A), complex(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true,true;interaction(F, A), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), complex(C, D).;true;true
5;false,false,true;complex(K, J), recursion_proteinclass(K, B).;true;true
5;false,false;interaction(I, A), complex(A, J).;true;true
5;false,true;recursion_proteinclass(G, B).;true;true
5;false;interaction(F, A), interaction(G, F).;true;true
5;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true,true;complex(D, E), interaction(D, C).;true;true
6;false,true;interaction(G, A), interaction(F, G).;true;true
6;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;complex(J, H), recursion_proteinclass(J, B).;true;true
7;true,true;recursion_proteinclass(D, B), interaction(E, A).;true;true
7;false,false;complex(A, H), interaction(I, A).;true;true
7;true;interaction(D, C), interaction(A, D).;true;true
7;false;interaction(A, G).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
8;true,true;interaction(C, A).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;false,true;recursion_proteinclass(F, B).;true;true
9;false;interaction(E, A), interaction(F, E).;true;true
9;false,false;interaction(H, A), complex(A, I).;true;true
9;false,false,true;complex(J, I), recursion_proteinclass(J, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.124815601766179;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11529179224236799;  // std dev = 5,171, 140,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | | | else return 0.23910131605189228;  // std dev = 3,854, 63,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.7259492632732041;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then return 0.4077262490851199;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7389009653977034;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return -0.04447799386732901;  // std dev = 2,095, 47,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | | else return 0.18494156207473395;  // std dev = 2,145, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( location(A, M) )
%   | | | then return 0.13643550261567244;  // std dev = 5,852, 165,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.42648227045752307;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5590028014468684;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.620385155070536;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3209652301750934;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.22203310341295115;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8169802535432554;  // std dev = 0,118, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.17148508382343589;  // std dev = 0,279, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.3122461382933158;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10743793910272095;  // std dev = 4,448, 97,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.41505640434511515;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.484848173067129;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.1823831613450734;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4505183023121606;  // std dev = 0,090, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), interaction(H, I) )
%   | | then return 0.5000861373182933;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.43402809479030663;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11380338253017269;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05323913972073135;  // std dev = 4,888, 150,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=38 */
%   | | | else return 0.137480467603106;  // std dev = 3,691, 75,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.3523937758493385;  // std dev = 0,032, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.10423956128074924;  // std dev = 0,818, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.3776013984890709;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6027130426503314;  // std dev = 0,968, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.14954135386250914;  // std dev = 0,032, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7489626048131703;  // std dev = 0,644, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.2159371271669411;  // std dev = 0,122, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.07211325043008267;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.02881109497547855;  // std dev = 1,349, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.20479276654804535;  // std dev = 0,262, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.010230575070827837;  // std dev = 0,256, 82,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.394035588478704;  // std dev = 0,126, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.012545159057890831;  // std dev = 1,551, 40,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.11129168859559001;  // std dev = 3,130, 64,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5956794212637986;  // std dev = 0,056, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.20252556227185733;  // std dev = 0,070, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, M) )
%   | | | then return 0.18573922531229123;  // std dev = 2,054, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return -0.04669714111107845;  // std dev = 0,843, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(D, C) )
%   | | then return 0.21826555175099083;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22775201882071583;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.27822382717129723;  // std dev = 0,111, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.21241733150898817;  // std dev = 0,118, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23317972806218562;  // std dev = 0,105, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), complex(H, J) )
%   | | | then return 0.04479436648816216;  // std dev = 0,893, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.06048554833822419;  // std dev = 1,623, 57,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.03835020843730241;  // std dev = 4,411, 158,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=47 */
%   | | | else return 0.148543935549188;  // std dev = 1,171, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13985765962251026;  // std dev = 0,249, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.46030609038163284;  // std dev = 0,258, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12736973015688935;  // std dev = 0,132, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.03456327910947937;  // std dev = 1,990, 65,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.03962215053734727;  // std dev = 2,002, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.521434516923726;  // std dev = 0,354, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21724627116673892;  // std dev = 0,629, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.0328208287661198;  // std dev = 2,995, 64,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return 0.1956776510665153;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1274991518532427;  // std dev = 0,213, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.34619822638286835;  // std dev = 1,159, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.13252551791452918;  // std dev = 0,164, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.01134921197953351;  // std dev = 1,067, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.06356184484878065;  // std dev = 1,610, 40,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.10384134776448195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.029955621270194445;  // std dev = 2,961, 68,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.15723028785220097;  // std dev = 0,789, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.016408683964749766;  // std dev = 2,055, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return -0.039966581550927305;  // std dev = 0,090, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.08776231976627483;  // std dev = 0,257, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else return 1.8183687989812945E-4;  // std dev = 0,224, 124,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return -0.09156255777393565;  // std dev = 0,263, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.21940901013630298;  // std dev = 1,337, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.036579447231358704;  // std dev = 2,380, 48,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then return -0.023195971243090252;  // std dev = 0,220, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.11083237112083255;  // std dev = 1,570, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.02924037398826823;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.979631
   AUC PR    = 0.226677
   CLL	      = -0.229085
   Precision = 0.285476 at threshold = 0.5
   Recall    = 0.60424
   F1        = 0.387755


Total learning time: 5.06 seconds
Total inference time: 19.317 seconds
AUC ROC: 0.979631


Results scoring model
   AUC ROC   = 0.989887
   AUC PR    = 0.310893
   CLL	      = -0.21041
   Precision = 0.351648 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.477612


Total scoring time: 4.131 seconds
Refined model CLL: -0.21041


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979631
   AUC PR    = 0.226677
   CLL	      = -0.229085
   Precision = 0.285476 at threshold = 0.5
   Recall    = 0.60424
   F1        = 0.387755


Total learning time: 15.561 seconds
Total inference time: 19.317 seconds
AUC ROC: 0.979631
Total revision time: 15.561
Best scored revision CLL: -0.21041


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:22:14
{'Learning time': 15.561, 'Recall': 0.60424, 'Precision': [0.285476, 0.5], 'CLL': -0.229085, 'AUC PR': 0.226677, 'F1': 0.387755, 'Inference time': 19.317, 'AUC ROC': 0.979631, 'parameter': {'Learning time': 2.453, 'Recall': 0.586572, 'Precision': [0.201701, 0.5], 'CLL': -0.240098, 'AUC PR': 0.193493, 'F1': 0.300181, 'Inference time': 13.015, 'AUC ROC': 0.938251}}


