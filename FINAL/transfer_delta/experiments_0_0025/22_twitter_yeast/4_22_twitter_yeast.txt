Starting experiment #4 for 22_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8406050754503868;  // std dev = 0,131, 171,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(A, D), tweets(A, F) )
%   | | | then return -0.10702519425372181;  // std dev = 2,599, 201,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=7 */
%   | | | else return -0.14185106490048768;  // std dev = 6,14e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.834339411289988;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.14185106490048802;  // std dev = 0,000, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.834339411289988;  // std dev = 0,988, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.13098149968309636;  // std dev = 0,995, 92,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.22957750652808379;  // std dev = 2,859, 35,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.1637044906550679;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then if ( recursion_accounttype(D, B), follows(C, D) )
%   | | then return 0.7230006425847018;  // std dev = 1,88e-07, 94,000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else return 0.7041327180564002;  // std dev = 0,136, 53,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return 0.6795223817151373;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.8706845748964287;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6560718984806054;  // std dev = 1,672, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | else return -0.1273989137017141;  // std dev = 0,039, 410,000 (wgt'ed) examples reached here.  /* #neg=410 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.7378086530795209;  // std dev = 0,142, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.0810569675006573;  // std dev = 4,119, 127,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=31 */
%   | | | else return 0.1797971427987242;  // std dev = 3,957, 69,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then return 0.519364688404351;  // std dev = 0,198, 122,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=117 */
%   | else return 0.5648939904518663;  // std dev = 0,031, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(F, G) )
%   | | then if ( follows(G, F), follows(A, G) )
%   | | | then return 0.5703998919344406;  // std dev = 0,044, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.3842491506198629;  // std dev = 1,208, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.03609565565200625;  // std dev = 0,759, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.09708379582292218;  // std dev = 2,073, 283,000 (wgt'ed) examples reached here.  /* #neg=277 #pos=6 */
%   | | | else return -0.011306090017506373;  // std dev = 3,118, 164,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=24 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.053877553708484384;  // std dev = 4,142, 137,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=31 */
%   | | | else return 0.1216337650911072;  // std dev = 4,050, 76,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.42917045254711444;  // std dev = 0,055, 168,000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), follows(A, E) )
%   | | then if ( follows(E, D) )
%   | | | then return 0.4288090626079066;  // std dev = 0,044, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.5101055534931482;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.586264769214129;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return -0.0876560980259607;  // std dev = 2,094, 287,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=6 */
%   | | | else return -0.014082712457940762;  // std dev = 3,137, 171,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=24 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.10379014090166468;  // std dev = 3,934, 105,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.12880605846636298;  // std dev = 3,970, 70,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.32290425896280656;  // std dev = 0,085, 138,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=137 */
%   | else if ( follows(C, E), follows(E, A) )
%   | | then return 0.2659540556017625;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.32247696805149645;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then if ( follows(A, H), recursion_accounttype(H, B) )
%   | | | then return 0.2616232024566345;  // std dev = 1,074, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5936490983311122;  // std dev = 0,927, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.09937060417959061;  // std dev = 0,044, 471,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=3 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.34423421892850964;  // std dev = 0,068, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.05987771101157998;  // std dev = 3,890, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return 0.13362689736886957;  // std dev = 3,928, 82,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.2557912668229125;  // std dev = 0,086, 136,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=135 */
%   | else if ( follows(E, C), follows(E, A) )
%   | | then return -0.13642661425591476;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.26114412756934474;  // std dev = 0,026, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(A, G), follows(F, G) )
%   | | then return 0.2820711881745298;  // std dev = 0,046, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.028850796115345845;  // std dev = 1,029, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.47893359104469785;  // std dev = 0,474, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.09354634842520622;  // std dev = 0,321, 415,000 (wgt'ed) examples reached here.  /* #neg=415 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.02808301784355113;  // std dev = 3,995, 129,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | | else return 0.10723472238164711;  // std dev = 3,911, 66,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), follows(A, C) )
%   | then return 0.19290250024735328;  // std dev = 0,156, 120,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=117 */
%   | else return 0.21658872143368463;  // std dev = 0,018, 51,000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, F), follows(A, E) )
%   | | | then return 0.06801260576762472;  // std dev = 1,537, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.3313889728547649;  // std dev = 0,948, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.08473694607282087;  // std dev = 0,104, 431,000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.5332325190295952;  // std dev = 2,271, 57,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.20346556733863969;  // std dev = 0,545, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.10228296967473348;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.11304999716684873;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D) )
%   | then return 0.17316441390277149;  // std dev = 0,111, 162,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=160 */
%   | else if ( follows(C, E), follows(E, A) )
%   | | then return -0.06586161468102636;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1820042490954709;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(F, A) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then return 0.23489468796653223;  // std dev = 0,198, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return -0.07926173360098418;  // std dev = 0,047, 422,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=3 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.3635612467818063;  // std dev = 2,063, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.1453221828802412;  // std dev = 0,737, 90,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.08890904034633874;  // std dev = 2,361, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.020774058470520034;  // std dev = 2,750, 35,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( recursion_accounttype(C, B), tweets(C, E) )
%   | | then return 0.13637003323698935;  // std dev = 0,154, 164,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=160 */
%   | | else return 0.18800882509309852;  // std dev = 0,201, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else return -0.07280298486122112;  // std dev = 0,086, 386,000 (wgt'ed) examples reached here.  /* #neg=386 */
%   else if ( follows(A, F) )
%   | then if ( follows(G, F), recursion_accounttype(G, B) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.035801126802467796;  // std dev = 0,994, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.47148492060525926;  // std dev = 0,458, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return -0.15259995326243356;  // std dev = 0,051, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.5142037377569999;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.28579626224300014;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16331180384894134;  // std dev = 0,499, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, E) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then return 0.13868119646570573;  // std dev = 0,085, 142,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=141 */
%   | | else if ( recursion_accounttype(D, B), follows(A, D) )
%   | | | then return 0.1709332935787705;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.009541204800708374;  // std dev = 0,914, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.23324376032545788;  // std dev = 0,189, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(F, A), recursion_accounttype(F, B) )
%   | then if ( follows(A, G) )
%   | | then return 0.139461392424783;  // std dev = 0,016, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.09635217701187637;  // std dev = 0,204, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( follows(H, A) )
%   | | then return -0.05216642413930034;  // std dev = 0,082, 461,000 (wgt'ed) examples reached here.  /* #neg=431 #pos=30 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.03305339762252174;  // std dev = 2,805, 126,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return -0.06517746005440167;  // std dev = 2,713, 44,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false;follows(D, A).;true;true
0;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true,true;recursion_accounttype(D, B), follows(C, D).;false;false
1;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
1;true;follows(A, D).;true;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, I), follows(I, J).;false;false
1;false,true,true;follows(E, G), follows(G, A).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;true;follows(A, D), tweets(A, E).;false;false
2;false,false;follows(H, A).;true;true
2;false,true;follows(F, G).;true;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, J), follows(J, K).;false;false
2;false,true,true;follows(G, F), follows(A, G).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(F, G), follows(G, A).;false;false
3;false,false;follows(F, A).;true;true
3;false,true;follows(D, E), follows(A, E).;true;false
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,false,false;follows(A, H), follows(H, I).;false;false
3;false,true,true;follows(E, D).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
4;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
4;false;follows(F, A).;true;true
4;false,false,false;tweets(A, J).;false;false
4;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, C), follows(E, A).;false;false
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;true;follows(C, D), follows(D, A).;false;true
5;false,false;follows(H, A).;true;true
5;false,true;follows(A, G), follows(F, G).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;tweets(C, D), follows(A, C).;false;false
6;false,false;follows(A, G).;true;true
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, I).;false;false
6;false,true,true;follows(A, F), follows(A, E).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;follows(C, E), follows(E, A).;false;false
7;false,false,true;recursion_accounttype(I, B).;false;false
7;true;tweets(C, D).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,true;follows(G, F), recursion_accounttype(G, B).;false;false
7;false;follows(F, A).;true;true
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
8;true,true;recursion_accounttype(C, B), tweets(C, E).;false;false
8;false,false;tweets(A, H).;true;false
8;true;follows(C, D), recursion_accounttype(D, B).;true;false
8;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
8;false;follows(A, F).;true;true
8;false,true,true;recursion_accounttype(F, B).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;follows(E, A), follows(A, E).;false;true
9;false,false;follows(H, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, G).;false;false
9;true,true,false;recursion_accounttype(D, B), follows(A, D).;false;false
9;false,false,false;follows(A, I).;false;false
9;false;follows(F, A), recursion_accounttype(F, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return 0.0545775065280838;  // std dev = 2,973, 56,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.16481560176617832;  // std dev = 3,993, 75,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7605879594897553;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6908649851440106;  // std dev = 2,269, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | | else return 0.7150034395303289;  // std dev = 0,890, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.1430260719309434;  // std dev = 0,225, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.837786654782979;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.3397187297348978;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12350094049726464;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.46248943402013676;  // std dev = 0,788, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7199713324398294;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3376302051993003;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.07521789665943729;  // std dev = 4,365, 128,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   | | | else return 0.13571225258555275;  // std dev = 3,326, 101,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18858514599420734;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04251762174990005;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4340555623449723;  // std dev = 0,034, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5558529502692586;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5556170405620064;  // std dev = 0,083, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.10004888129418664;  // std dev = 4,195, 112,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.08708853635550717;  // std dev = 3,440, 108,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.022339030372024133;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03616450167849325;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3319882831294428;  // std dev = 0,030, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6232503552787558;  // std dev = 0,988, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.04251287496321191;  // std dev = 4,838, 206,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4777190569003712;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, I) )
%   | | | then return 0.12137785328160687;  // std dev = 1,625, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1725408471732728;  // std dev = 0,789, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(E, C), interaction(E, A) )
%   | | then return 0.26773287442856697;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.24992119437064375;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.40757055074297044;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3568514817679379;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3247274663574583;  // std dev = 1,785, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.02000739210633231;  // std dev = 4,814, 219,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=55 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07001536974181295;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07461137670930919;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(C, D), interaction(A, C) )
%   | then return 0.23528665462482762;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21241581804063736;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), interaction(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4060206123673613;  // std dev = 3,203, 82,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15724930885984634;  // std dev = 0,258, 149,000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.656471117003008;  // std dev = 0,420, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23712791468268068;  // std dev = 0,080, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.10585622636351162;  // std dev = 0,962, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.1740455553960982;  // std dev = 1,741, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.019379118421094726;  // std dev = 4,084, 205,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=57 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03686603982838238;  // std dev = 0,932, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.015907284653988878;  // std dev = 1,046, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), function(C, E) )
%   | | then return 0.17386098126022062;  // std dev = 0,027, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.32503355479066964;  // std dev = 2,799, 80,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | else return -0.14417877202456295;  // std dev = 0,567, 143,000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.16852294709429438;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40982729371925747;  // std dev = 0,865, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.215246640368548;  // std dev = 0,092, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.15528982952213713;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11443960835336674;  // std dev = 0,936, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1002036004546821;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.017727333842037375;  // std dev = 3,788, 211,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=69 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13091791864525962;  // std dev = 1,000, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983458
   AUC PR    = 0.215756
   CLL	      = -0.187567
   Precision = 0.167672 at threshold = 0.5
   Recall    = 0.985816
   F1        = 0.286598


Total learning time: 3.823 seconds
Total inference time: 15.052 seconds
AUC ROC: 0.983458


Results scoring model
   AUC ROC   = 0.976523
   AUC PR    = 0.190367
   CLL	      = -0.197031
   Precision = 0.121255 at threshold = 0.5
   Recall    = 0.977011
   F1        = 0.215736


Total scoring time: 9.029 seconds
Parameter learned model CLL: -0.197031


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, J)', 'false,true,true': 'interaction(A, D), function(A, F)'}, {'false,false,true,false': [1.195, 5, 2], 'false,true,true,true': [2.973, 45, 11], 'false,false,false,true': [1.449, 7, 3], 'false,true,false,true': [1.9, 4, 37], 'true': [0.0, 0, 11], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [3.993, 52, 23], 'false,true,false,false': [6.14e-08, 60, 0], 'false,false,true,true': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [2.11e-08, 0, 3], 'false,true,true,true': [2.269, 6, 34], 'false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.195, 5, 2], 'true,true,true': [2.98e-08, 0, 8], 'false,true,true,false': [0.89, 1, 37], 'false,false,false,true': [1.0, 2, 2], 'false,true,false': [0.225, 180, 0], 'true,true,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'true': 'interaction(A, D), function(A, E)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.247, 7, 2], 'true,true': [0.788, 1, 8], 'false,true,true,false': [0.0, 0, 1], 'false,false,true,false': [3.326, 65, 36], 'false,true,false': [0.734, 1, 2], 'false,false,true,true': [4.365, 95, 33]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(F, A)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, D)'}, {'false,false,true,false': [3.44, 72, 36], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.247, 7, 2], 'true': [0.034, 0, 11], 'false,false,true,true': [4.195, 79, 33], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.083, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'function(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.03, 0, 11], 'false,true,true,false': [0.988, 1, 14], 'false,false,false,true': [1.625, 8, 4], 'false,true,false': [4.838, 149, 57]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), interaction(E, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true,false': [4.814, 164, 55], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.195, 5, 2], 'true,true': [0.789, 1, 8], 'false,false,true,true': [1.785, 4, 14], 'true,false,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 1], 'false,true,false': [0.007, 0, 2], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'function(C, D), interaction(A, C)', 'false,false': 'interaction(A, G)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(A, F), interaction(A, E)'}, {'true,false': [0.013, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'true,true': [7.45e-09, 0, 7], 'false,true,false': [0.258, 149, 0], 'false,true,true,false': [3.203, 11, 71], 'false,false,true,false': [0.08, 12, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.42, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'function(C, D)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,false': [0.0, 0, 0], 'false,false,true,false': [0.932, 4, 2], 'false,false,false,true': [1.046, 7, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.962, 1, 11], 'false,false,true,true': [0.0, 0, 0], 'false,true,false': [4.084, 148, 57], 'false,true,true': [1.741, 3, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B), function(C, E)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,true,true': 'recursion_proteinclass(F, B)'}, {'true,false': [0.567, 143, 0], 'false,true,true,true': [0.0, 0, 1], 'true,true,true': [0.027, 0, 11], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.865, 1, 4], 'true,true,false': [2.799, 9, 71], 'false,true,false': [0.092, 13, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,false': 'interaction(H, A)', 'true,true': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, G)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, I)'}, {'true,false': [0.936, 2, 4], 'false,false,false,true': [1.0, 5, 4], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 7], 'false,true,true': [0.0, 0, 0], 'false,false,true': [3.788, 142, 69], 'false,true,false': [0.832, 1, 3], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.21206109578877777], 'false,false,true': [nan, 0.20408163265306126], 'false,false,false': [0.20999999999999988, nan], 'false,false': [0.20408163265306126, 0.20999999999999988], 'false,true': [0.19217994289377205, 0.23213410449956012], 'false': [0.21237737812128438, 0.20761245674740467], 'false,true,false': [0.08804283164783049, 6.29126380620922e-17], 'false,true,true': [0.1578443877551015, 0.2126222222222232]}, {'': [1.6148698540002277e-16, 0.17803742800342143], 'true': [1.1102230246251565e-16, 1.4802973661668753e-16], 'false,false': [0.0, 0.2315974332314412], 'true,true': [1.1102230246251565e-16, nan], 'false,true': [0.07631808473056932, 0.00028049854591292414], 'false': [0.17410628507279344, 0.24316372258924435], 'false,false,false': [0.25, 0.20408163265306123], 'false,true,true': [0.1287378068024018, 0.020840627364185706]}, {'': [0.053374226618993194, 0.1385648003306368], 'false,false,true': [0.1488352628088124, 0.10952067717158098], 'true': [0.06900910108314287, 3.700743415417188e-17], 'false,false': [0.13239781562533465, 0.20172390434452317], 'false,true': [0.0, 0.17962975003145423], 'false': [0.1621319508197579, 0.1363947369947114], 'false,false,false': [0.24, 0.17283950617283952], 'false,true,true': [nan, 0.0]}, {'': [0.0001026138908730106, 0.13837631400228023], 'false,false,true': [0.15713652545383097, 0.10954578938385248], 'false,false': [0.13381577922739202, 0.173695171988436], 'false,true': [0.0, 0.0034718484517666237], 'false': [0.0023145780019311335, 0.13735827086944014], 'false,false,false': [0.17283950617283958, 0.1728395061728395], 'false,true,true': [nan, 0.0]}, {'': [8.291284991781353e-05, 0.13637472042235937], 'true': [8.291284991781353e-05, nan], 'false,false': [0.0, 0.2200879951312951], 'false,true': [0.06512185693732343, 0.11362245428205468], 'false': [0.13166757262168427, 0.21217441349845959], 'false,false,false': [0.2200879951312951, nan], 'false,true,true': [nan, 0.06512185693732349]}, {'': [0.05319792963606144, 0.1225420723140353], 'true,false': [0.0, 0.0], 'false,false,true': [0.17692162135294598, 0.10583898322436515], 'true': [0.0691716178781498, 7.05013214413001e-05], 'false,false': [0.11775427952821922, 0.21245946202676808], 'false,true': [0.0, 2.601532565227327e-05], 'false': [0.0005889933188113113, 0.12272138319002268], 'false,false,false': [0.22222222222222224, 0.2040816326530612]}, {'': [0.0001358247301981308, 0.12140945629722026], 'false,false,true': [0.035216355042576274, 0.0005331965222575655], 'true': [7.93016446160826e-18, 4.065199327896174e-05], 'false,false': [0.17651666448074582, nan], 'false,true': [0.12507760547291324, 0.00044756732008974996], 'false': [0.11733412768269814, 0.17651666448074582], 'false,true,true': [nan, 0.12507760547291316]}, {'': [0.07718654591646713, 0.09264276598771765], 'false,false,true': [nan, 0.1447975936663682], 'true': [0.07718654591646713, nan], 'false,false': [0.1447975936663682, 0.10931857755118798], 'false,true': [0.17825909553571978, 0.08135901310669685], 'false': [0.09047085587573307, 0.12272616236433218], 'false,false,false': [0.10931857755118798, nan]}, {'': [0.08411448623982982, 0.11627054230523855], 'true': [0.0885008901647974, 0.0022442439422086253], 'true,true': [6.528470240408317e-05, 0.09789831759866759], 'false,true': [0.13274365340570232, 0.0006495124130373112], 'false': [0.11627054230523855, nan], 'false,true,true': [0.0, 0.14958775280349287]}, {'': [0.08541905322377595, 0.07237040419360412], 'true': [-3.96508223080413e-18, 0.1458994008876853], 'false,false': [0.06800500547342272, 0.11106076589344692], 'true,true': [-3.96508223080413e-18, nan], 'false,true': [nan, 0.1731908517658158], 'false': [0.1731908517658158, 0.07026906744967357], 'false,false,false': [0.11106076589344692, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false;interaction(D, A).;true;true
0;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;true;interaction(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G).;true;true
2;true;interaction(A, D), function(A, E).;true;true
2;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(D, E), interaction(A, E).;true;true
3;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(E, C), interaction(E, A).;true;true
5;false,true;interaction(A, G), interaction(F, G).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;true;function(C, D), interaction(A, C).;true;true
6;false;interaction(E, A).;true;true
6;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true,true;recursion_proteinclass(C, B), function(C, E).;true;true
8;false,true;recursion_proteinclass(F, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.08891816586874314;  // std dev = 3,721, 78,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return 0.24839283753853675;  // std dev = 3,123, 41,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8318331456258272;  // std dev = 0,987, 38,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5283688349430377;  // std dev = 2,363, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.7392153490215164;  // std dev = 1,090, 54,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | else return -0.14611071523272173;  // std dev = 0,236, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8332054912315484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.33692437411356135;  // std dev = 1,007, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.012212560608401373;  // std dev = 1,297, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22203310341295115;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.7254913715008737;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6208290338826528;  // std dev = 0,090, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), complex(A, J) )
%   | | | then return -0.07694894763867592;  // std dev = 0,686, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1248473629267408;  // std dev = 4,547, 143,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.04316112065056114;  // std dev = 2,775, 78,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.10378616803342018;  // std dev = 1,933, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(D, E), recursion_proteinclass(D, B) )
%   | | then return 0.4587998607383017;  // std dev = 0,083, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16751358415830997;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.561284092642635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16769789185190329;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7091916588553616;  // std dev = 0,076, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.054422120027634434;  // std dev = 4,126, 137,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.07870367405768325;  // std dev = 1,135, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.08596754846744294;  // std dev = 3,113, 78,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.3276813147192636;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.379905045957489;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(H, G), complex(H, I) )
%   | | | then return 0.01780970955829727;  // std dev = 2,970, 82,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return -0.1309329291834533;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08396583222834032;  // std dev = 4,273, 141,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return -0.007288181252146432;  // std dev = 1,301, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.496696376725525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.04780496288155348;  // std dev = 0,912, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17807623999234284;  // std dev = 1,359, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.2507537805416871;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2866473545080798;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2960223145327849;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.41757927175563136;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3598304242842059;  // std dev = 0,022, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.08257623724419481;  // std dev = 1,256, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.026306057837717757;  // std dev = 1,792, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.1252554994046355;  // std dev = 2,054, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.06051176206945863;  // std dev = 4,557, 169,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(C, D), interaction(A, C) )
%   | then return 0.21307188423793624;  // std dev = 0,017, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.03756504112490533;  // std dev = 0,897, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.4492132054576863;  // std dev = 2,581, 76,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=68 */
%   | | | else return 0.5808487898776691;  // std dev = 0,167, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1585663096788436;  // std dev = 0,024, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.16922744664299055;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7545169004171123;  // std dev = 0,059, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.29370495682882075;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2136942808762367;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.28279990847104997;  // std dev = 0,262, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(F, A), interaction(C, G) )
%   | | then return -0.09482681763981048;  // std dev = 0,248, 54,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | else if ( complex(C, H), complex(A, H) )
%   | | | then return -0.039761341640870744;  // std dev = 0,822, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1937462100347633;  // std dev = 1,406, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.4374763106640847;  // std dev = 0,478, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12777156385590757;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.22954812310728667;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.01690356575137687;  // std dev = 2,744, 80,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.06564429340231981;  // std dev = 2,103, 57,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.14385211442227455;  // std dev = 0,061, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20455064091589303;  // std dev = 0,045, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.2503256841499421;  // std dev = 2,790, 51,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=41 */
%   | | | else return 0.3630838138412132;  // std dev = 0,943, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( interaction(A, I) )
%   | | then return -0.13046443616159464;  // std dev = 0,022, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.1428600467597728;  // std dev = 0,024, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | then if ( recursion_proteinclass(K, B) )
%   | | then return 0.4917840186614535;  // std dev = 0,315, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5750540956476398;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1743339743818625;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.138353794737571;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11207699424452904;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16813951403481273;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I), enzyme(H, J) )
%   | | then if ( enzyme(I, K), phenotype(I, L) )
%   | | | then return -0.15058520258632724;  // std dev = 0,995, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.03190672480371842;  // std dev = 1,464, 43,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.0738116291196016;  // std dev = 1,083, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.008729441161023059;  // std dev = 3,117, 180,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=54 */
%   | else if ( phenotype(A, P) )
%   | | then return 0.2154222126690421;  // std dev = 0,761, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.015328088246419042;  // std dev = 0,527, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.977205
   AUC PR    = 0.209526
   CLL	      = -0.203976
   Precision = 0.103113 at threshold = 0.5
   Recall    = 0.939716
   F1        = 0.185835


Total learning time: 9.372 seconds
Total inference time: 51.181 seconds
AUC ROC: 0.977205


Results scoring model
   AUC ROC   = 0.976185
   AUC PR    = 0.20035
   CLL	      = -0.200623
   Precision = 0.107143 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.192882


Total scoring time: 14.568 seconds
Refined model CLL: -0.200623


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983458
   AUC PR    = 0.215756
   CLL	      = -0.187567
   Precision = 0.167672 at threshold = 0.5
   Recall    = 0.985816
   F1        = 0.286598


Total learning time: 36.792 seconds
Total inference time: 15.052 seconds
AUC ROC: 0.983458
Total revision time: 36.792
Best scored revision CLL: -0.197031


Dataset: 22_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:25:25
{'Learning time': 36.792, 'Recall': 0.985816, 'Precision': [0.167672, 0.5], 'CLL': -0.187567, 'AUC PR': 0.215756, 'F1': 0.286598, 'Inference time': 15.052, 'AUC ROC': 0.983458, 'parameter': {'Learning time': 3.823, 'Recall': 0.985816, 'Precision': [0.167672, 0.5], 'CLL': -0.187567, 'AUC PR': 0.215756, 'F1': 0.286598, 'Inference time': 15.052, 'AUC ROC': 0.983458}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false;follows(D, A).;true;true
0;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true,true;recursion_accounttype(D, B), follows(C, D).;false;false
1;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
1;true;follows(A, D).;true;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, I), follows(I, J).;false;false
1;false,true,true;follows(E, G), follows(G, A).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;true;follows(A, D), tweets(A, E).;false;false
2;false,false;follows(H, A).;true;true
2;false,true;follows(F, G).;true;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, J), follows(J, K).;false;false
2;false,true,true;follows(G, F), follows(A, G).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(F, G), follows(G, A).;false;false
3;false,false;follows(F, A).;true;true
3;false,true;follows(D, E), follows(A, E).;true;false
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,false,false;follows(A, H), follows(H, I).;false;false
3;false,true,true;follows(E, D).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
4;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
4;false;follows(F, A).;true;true
4;false,false,false;tweets(A, J).;false;false
4;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, C), follows(E, A).;false;false
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;true;follows(C, D), follows(D, A).;false;true
5;false,false;follows(H, A).;true;true
5;false,true;follows(A, G), follows(F, G).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;tweets(C, D), follows(A, C).;false;false
6;false,false;follows(A, G).;true;true
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, I).;false;false
6;false,true,true;follows(A, F), follows(A, E).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;follows(C, E), follows(E, A).;false;false
7;false,false,true;recursion_accounttype(I, B).;false;false
7;true;tweets(C, D).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,true;follows(G, F), recursion_accounttype(G, B).;false;false
7;false;follows(F, A).;true;true
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
8;true,true;recursion_accounttype(C, B), tweets(C, E).;false;false
8;false,false;tweets(A, H).;true;false
8;true;follows(C, D), recursion_accounttype(D, B).;true;false
8;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
8;false;follows(A, F).;true;true
8;false,true,true;recursion_accounttype(F, B).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;follows(E, A), follows(A, E).;false;true
9;false,false;follows(H, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, G).;false;false
9;true,true,false;recursion_accounttype(D, B), follows(A, D).;false;false
9;false,false,false;follows(A, I).;false;false
9;false;follows(F, A), recursion_accounttype(F, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.07814893509951236;  // std dev = 2,929, 50,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.10814893509951233;  // std dev = 2,739, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7956489350995123;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1581489350995117;  // std dev = 5,422, 140,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13592671287729013;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | | then return 0.7311911912464265;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6200800801353155;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7311911912464264;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8011399871475834;  // std dev = 0,975, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.7319131893798132;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.14673024955915806;  // std dev = 0,132, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8075574779293506;  // std dev = 0,034, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15753200277380966;  // std dev = 5,342, 131,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | | | else return 0.19792689303367883;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.40236179079473616;  // std dev = 1,264, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.3567662579961033;  // std dev = 1,245, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.640776975715432;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4505838810008618;  // std dev = 0,945, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.027907073470905208;  // std dev = 3,518, 105,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=21 */
%   | | | else return 0.07147996036335123;  // std dev = 2,049, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10602360549928516;  // std dev = 5,454, 144,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | | else return 0.12497095016963157;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4273711776103378;  // std dev = 0,963, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.48449523654008386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4937878355083505;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.025174218314730434;  // std dev = 0,806, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.04924736385532054;  // std dev = 3,438, 92,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
%   | | | else return 0.08796253036574403;  // std dev = 1,924, 39,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1002391105359434;  // std dev = 5,411, 139,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
%   | | | else return 0.0868008233642416;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.13087365622179817;  // std dev = 1,483, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.38728228016596156;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3828892357702591;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.671660455569339;  // std dev = 0,270, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.03331245159230109;  // std dev = 2,526, 99,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.436828848090611;  // std dev = 0,174, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11090315140394574;  // std dev = 4,403, 88,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return 0.08117081783873563;  // std dev = 3,550, 60,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.32847372273234643;  // std dev = 0,081, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), interaction(A, E) )
%   | | then return 0.3300876248754858;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2895556180150298;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.31962810575042705;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.019563347763504213;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2383983272904834;  // std dev = 2,173, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return -0.04971290320395032;  // std dev = 2,465, 110,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0817950720290268;  // std dev = 5,349, 132,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
%   | | | else return 0.179489097294574;  // std dev = 1,707, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(C, A) )
%   | then return 0.2660078313386404;  // std dev = 0,050, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09178409719375143;  // std dev = 1,268, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4143455026983924;  // std dev = 1,814, 39,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else return -0.13534120808154215;  // std dev = 0,278, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5973570403247142;  // std dev = 2,784, 57,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.25157298786205984;  // std dev = 0,063, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.23016585444221643;  // std dev = 0,076, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.23911620500654904;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21955245411194965;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.13904715279320923;  // std dev = 1,821, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return -0.050389975537456;  // std dev = 2,207, 130,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=16 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.020922767803906863;  // std dev = 1,144, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.0745167375323805;  // std dev = 4,373, 120,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01762877082578926;  // std dev = 1,540, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), phenotype(C, E) )
%   | | then return 0.19204820789515376;  // std dev = 0,067, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.25837446879723697;  // std dev = 2,106, 48,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   | else return -0.11384140013456553;  // std dev = 0,267, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.18429823702613268;  // std dev = 0,159, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.48920121316434445;  // std dev = 2,302, 53,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | | else return -0.22056683729282212;  // std dev = 0,130, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1521015609246217;  // std dev = 0,036, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( recursion_proteinclass(D, B), interaction(D, A) )
%   | | | then return -0.12763102583894426;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1777340922904696;  // std dev = 0,123, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.02833061814200453;  // std dev = 0,945, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.308045122875889;  // std dev = 0,637, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.016481043611427017;  // std dev = 2,291, 123,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01020970327327534;  // std dev = 4,056, 145,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989822
   AUC PR    = 0.295821
   CLL	      = -0.171409
   Precision = 0.24302 at threshold = 0.5
   Recall    = 0.886792
   F1        = 0.381494


Total learning time: 3.46 seconds
Total inference time: 12.609 seconds
AUC ROC: 0.989822


Results scoring model
   AUC ROC   = 0.977287
   AUC PR    = 0.156964
   CLL	      = -0.206234
   Precision = 0.104603 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.188679


Total scoring time: 8.638 seconds
Parameter learned model CLL: -0.206234


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'interaction(J, A)', 'false,true,true': 'interaction(D, A), phenotype(A, F)'}, {'false,false,true,false': [5.422, 98, 42], 'false,true,true,true': [2.929, 39, 11], 'false,false,false,true': [1.9, 13, 5], 'false,true,false,true': [0.968, 1, 15], 'true': [0.97, 1, 16], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [2.739, 30, 10], 'false,true,false,false': [2.11e-08, 26, 0], 'false,false,true,true': [1.491, 4, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(D, C)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)', 'false,true,true': 'interaction(G, E), interaction(A, G)'}, {'true,false': [0.0, 0, 1], 'false,true,true,true': [0.975, 1, 21], 'false,false,true': [0.034, 0, 5], 'false,false,false,false': [1.793, 9, 5], 'true,true,true': [0.0, 0, 7], 'false,true,true,false': [0.0, 0, 15], 'false,false,false,true': [5.342, 89, 42], 'false,true,false': [0.132, 109, 0], 'true,true,false': [0.943, 1, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'true': 'interaction(D, A), phenotype(A, E)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,false': [1.245, 2, 7], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [5.454, 102, 42], 'false,false,false,false': [1.854, 11, 5], 'true,true': [1.264, 2, 9], 'false,true,true,false': [0.945, 2, 7], 'false,false,true,false': [2.049, 31, 12], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.518, 84, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(D, E)'}, {'false,false,true,false': [1.924, 27, 12], 'false,true,true,true': [0.0, 0, 1], 'false,false,false,true': [5.411, 97, 42], 'false,false,false,false': [1.879, 12, 5], 'true': [0.963, 1, 16], 'false,false,true,true': [3.438, 71, 21], 'false,true,true,false': [0.094, 0, 6], 'false,true,false': [0.806, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true': 'phenotype(A, D)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'phenotype(A, J)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)'}, {'false,true,true,true': [0.0, 0, 0], 'false,false,true': [0.174, 0, 5], 'false,false,false,false': [3.55, 42, 18], 'true,true': [1.483, 3, 9], 'false,true,true,false': [0.27, 0, 20], 'true,false,false': [0.022, 0, 3], 'true,false,true': [0.026, 0, 4], 'false,false,false,true': [4.403, 59, 29], 'false,true,false': [2.526, 83, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), interaction(A, E)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true,false': [2.465, 97, 13], 'false,false,false,true': [5.349, 90, 42], 'false,false,false,false': [1.707, 7, 5], 'true,true': [0.081, 0, 11], 'false,false,true,true': [2.173, 10, 20], 'true,false,false': [0.0, 0, 1], 'true,false,true': [0.06, 0, 4], 'false,true,false': [0.707, 1, 1], 'false,true,true': [0.068, 0, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'phenotype(C, D), interaction(C, A)', 'false,false': 'interaction(G, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,true,true': 'interaction(F, A), interaction(E, A)'}, {'true,false': [1.268, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.05, 0, 6], 'false,true,false': [0.278, 86, 0], 'false,true,true,false': [1.814, 3, 36], 'false,false,true,false': [0.063, 88, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [2.784, 5, 52]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false,false,true': 'recursion_proteinclass(I, B)', 'true': 'phenotype(C, D)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,false,false': 'interaction(J, A)'}, {'false,false,true,false': [4.373, 78, 42], 'false,false,false,true': [1.54, 12, 5], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.076, 0, 9], 'false,false,true,true': [1.144, 2, 5], 'true,false,false': [0.014, 0, 3], 'true,false,true': [0.043, 0, 4], 'false,true,false': [2.207, 114, 16], 'false,true,true': [1.821, 9, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B), phenotype(C, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,true,true': 'recursion_proteinclass(F, B)'}, {'true,false': [0.267, 105, 0], 'false,true,true,true': [0.159, 0, 5], 'true,true,true': [0.067, 0, 9], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.302, 6, 47], 'true,true,false': [2.106, 5, 43], 'false,true,false': [0.13, 95, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,false': 'interaction(A, H)', 'true,true': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(G, A)', 'true,true,false': 'recursion_proteinclass(D, B), interaction(D, A)', 'false,false,false': 'interaction(I, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'true,false': [0.0, 0, 0], 'false,false,true': [2.291, 90, 33], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.036, 0, 7], 'true,true,false,true': [0.877, 1, 3], 'false,true,true': [0.945, 1, 6], 'false,false,false,true': [4.056, 98, 47], 'false,true,false': [0.637, 1, 1], 'true,true,false,false': [0.123, 0, 7]}]]
[{'': [0.055363321799307655, 0.20769342624802953], 'false,false,true': [0.2469135802469134, 0.21000000000000119], 'false,true,false': [0.05859374999999978, 1.708035422500241e-17], 'false,false': [0.21593621908923108, 0.20061728395061712], 'false,true': [0.17888888888888926, 0.2295918367346934], 'false': [0.19834710743801787, 0.21442145648822178], 'false,false,false': [0.20061728395061712, nan], 'false,true,true': [0.17159999999999948, 0.18750000000000006]}, {'': [0.05536332179930808, 0.19885661916141886], 'true': [0.058593750000000056, 0.0], 'false,false': [0.0002284507833119065, 0.21910742442725067], 'true,true': [-6.344131569286608e-17, 0.09876543209876533], 'false,true': [0.02686015738484753, 0.00015925463061918695], 'false': [0.16699754296155433, 0.22526352353164428], 'false,false,false': [0.217829404881375, 0.22959183673469402], 'false,true,true': [0.04323105665261357, 0.0]}, {'': [0.15801706920911143, 0.16541114579390395], 'false,false,true': [0.1178864048437166, 0.0976480529393442], 'true': [0.14535274184963357, 0.17235226760120714], 'false,false': [0.11239769463335758, 0.20742095640795521], 'false,true': [0.09258581004116304, nan], 'false': [0.09258581004116304, 0.16289276527447802], 'false,false,false': [0.2065603013773888, 0.21484375000000008], 'false,true,true': [0.0, 0.09925578094024824]}, {'': [0.05457627134765364, 0.16990995175727366], 'false,false,true': [0.1284438162052067, 0.09490858535764736], 'false,false': [0.11877342578827019, 0.21032281861171356], 'false,true': [0.0012618044538491738, 0.32443653662116445], 'false': [0.11081900702832012, 0.16889375283452995], 'false,false,false': [0.21063462230359947, 0.20761245674740478], 'false,true,true': [0.0, 0.001459769139645258]}, {'': [0.13090859757671525, 0.17414915450439925], 'true,false': [0.00017368955156354948, 0.00015439071250089587], 'true': [0.18330511588485832, 0.00017014486683776729], 'false,false': [0.0060415558942366054, 0.2163609950706859], 'false,true': [0.003638790286394844, 0.06446024203299011], 'false': [0.12372715881219576, 0.21309882484142695], 'false,false,false': [0.2203191749982916, 0.21003003595605974], 'false,true,true': [nan, 0.003638790286394844]}, {'': [0.0007293871681702813, 0.1564080247324901], 'true,false': [0.0009001974734382107, 0.0], 'false,false,true': [0.15742284900913267, 0.055241466615180174], 'true': [0.0006009300504700267, 0.0009830129515723484], 'false,false': [0.09111332752368853, 0.21967528500255626], 'false,true': [0.0006531381285535622, 0.25], 'false': [0.07594888261747385, 0.1578169030064242], 'false,false,false': [0.21676774768329915, 0.2429094164895105]}, {'': [0.09623120376594509, 0.1640921104711438], 'false,false,true': [0.1360096207867046, 4.4812188166734856e-05], 'true': [0.0004169750045431945, 0.13402034830018303], 'false,false': [0.22542845175710907, nan], 'false,true': [0.08438323179347436, 0.0009002248914897888], 'false': [0.09180640976151982, 0.22542845175710907], 'false,true,true': [nan, 0.08438323179347441]}, {'': [0.000532311320909723, 0.10696623863113983], 'true,false': [0.00046810651460838654, 6.235211115691401e-05], 'false,false,true': [0.1870011958461702, 0.1593359750052465], 'true': [0.0006444568374176507, 0.0003879441006555446], 'false,false': [0.16133521169926365, 0.13956541327950991], 'false,true': [0.11435517582504334, 0.03746027341637939], 'false': [0.05683665170368174, 0.15904268344805536], 'false,false,false': [0.13956541327950991, nan]}, {'': [0.05788522960039285, 0.1476550991044482], 'true': [0.07845295135024745, 0.000677189263304811], 'true,true': [0.0004938639277108051, 0.09237567399693332], 'false,true': [0.09915345067635052, 0.00017730292180600428], 'false': [0.1476550991044482, nan], 'false,true,true': [0.005027573255971402, 0.10001895518661601]}, {'': [0.058589939289066556, 0.08377347650409045], 'true': [0.058589939289066556, nan], 'false,false': [0.04267129925482137, 0.11344331164468441], 'true,true': [0.00018274005875832628, 0.09292130835414424], 'false,true': [0.12750652222623482, 0.20269810517610304], 'false': [0.16377231779576992, 0.08097189302349832], 'false,false,false': [0.11344331164468441, nan], 'true,true,false': [0.19244199326834804, 0.002144034502321955]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(D, E), interaction(A, E).;true;true
0;false;interaction(A, D).;true;true
0;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true,true;recursion_proteinclass(D, B), interaction(D, C).;true;true
1;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
1;true;interaction(D, A).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G), interaction(G, A).;true;true
2;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, D), interaction(E, A).;true;true
3;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
3;false,true,true;interaction(D, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true,false;interaction(E, C), interaction(A, E).;true;true
4;true;phenotype(A, D).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true,false;interaction(C, E), interaction(A, E).;true;true
5;false,true;interaction(G, A), interaction(G, F).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
6;true;phenotype(C, D), interaction(C, A).;true;true
6;false;interaction(A, E).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true,false;interaction(E, C), interaction(A, E).;true;true
7;true;phenotype(C, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true,true;recursion_proteinclass(C, B), phenotype(C, E).;true;true
8;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true,false;recursion_proteinclass(D, B), interaction(D, A).;true;true
9;true;interaction(A, E), interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7002541982574071;  // std dev = 0,365, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.17158177092040747;  // std dev = 3,797, 67,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H), phenotype(A, I) )
%   | | | then return 0.13087620782678508;  // std dev = 2,089, 22,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.024815601766178873;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15226658215833488;  // std dev = 5,314, 136,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | | then return 0.7502124734683522;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.15021247346835226;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7502124734683523;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7502124734683523;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.67138719364601;  // std dev = 0,316, 41,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | else return -0.14946398722438511;  // std dev = 0,178, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7465989732739114;  // std dev = 0,121, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.0868055870159914;  // std dev = 3,361, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.19479452267751646;  // std dev = 4,539, 90,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.6163970541599304;  // std dev = 0,056, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.25317107433361785;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5865044076669512;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.595654291307784;  // std dev = 0,163, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5625697196994239;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10994382236327714;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.028721857562652355;  // std dev = 2,868, 72,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.0795883937790299;  // std dev = 2,673, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.14584791182617976;  // std dev = 5,699, 149,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), phenotype(A, E) )
%   | | then return 0.46344622261866497;  // std dev = 0,133, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, F) )
%   | | | then return -0.19670288813593592;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4361291098031794;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.472057584449421;  // std dev = 0,054, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3692997456465959;  // std dev = 0,203, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11572120424983483;  // std dev = 0,094, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.056501460492972416;  // std dev = 3,893, 126,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.053019986525563174;  // std dev = 3,361, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.19818879424915867;  // std dev = 4,398, 82,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.36598799040461993;  // std dev = 0,071, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), location(A, F) )
%   | | then if ( recursion_proteinclass(E, B), phenotype(D, G) )
%   | | | then return 0.6300289304093002;  // std dev = 0,847, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.038428876760631364;  // std dev = 5,572, 196,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=50 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.324313844616565;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.035032076816303756;  // std dev = 2,108, 42,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(J, J) )
%   | | | then return 0.05971055995957326;  // std dev = 0,745, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.029190094408935576;  // std dev = 0,598, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.501924388906503;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3390491403677554;  // std dev = 1,225, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.21466504699122244;  // std dev = 0,299, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(C, E), interaction(A, E) )
%   | | then return 0.2550235888207437;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.31861907000263634;  // std dev = 0,732, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.2246711170618971;  // std dev = 0,268, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.18773838939800394;  // std dev = 0,564, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.25043143645002713;  // std dev = 2,747, 43,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return -0.17593022520785284;  // std dev = 0,470, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.005392200504774184;  // std dev = 2,610, 70,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.08385422518913807;  // std dev = 5,122, 122,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(C, A) )
%   | then return 0.2678805947260608;  // std dev = 0,205, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.24899271398836703;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.12302301736804;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.28787826911122666;  // std dev = 1,932, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.5041704337155717;  // std dev = 0,533, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.14004444492314658;  // std dev = 0,271, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.3984840920717914;  // std dev = 3,744, 68,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | | | else return 0.2706815028529919;  // std dev = 1,413, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.24245010044933138;  // std dev = 0,034, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.1712914117239607;  // std dev = 0,000909, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25980091642771286;  // std dev = 0,141, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21929207954050095;  // std dev = 0,040, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, G) )
%   | | then return 0.24714078074494397;  // std dev = 0,132, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17378272245431842;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.09330555832972597;  // std dev = 2,754, 49,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | | else return -0.1375254869020919;  // std dev = 0,403, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.02686091191475477;  // std dev = 4,930, 160,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
%   | | | else return 0.13518471170462737;  // std dev = 1,627, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), phenotype(C, E) )
%   | | then return 0.17755146256082266;  // std dev = 0,053, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return -0.02198649636155746;  // std dev = 1,172, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.34964120381297986;  // std dev = 1,269, 38,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.11697166450241395;  // std dev = 0,032, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | then if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47060218052966574;  // std dev = 2,244, 35,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return -0.3147386911486925;  // std dev = 0,123, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.21114710001081977;  // std dev = 1,679, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.06204993337693237;  // std dev = 2,529, 31,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | else return -0.20519004461556867;  // std dev = 0,040, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15980085235733618;  // std dev = 0,051, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.7912208656457692;  // std dev = 0,148, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15990217160989215;  // std dev = 0,059, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( enzyme(F, H), interaction(I, F) )
%   | | then if ( enzyme(I, J), interaction(I, A) )
%   | | | then return 0.011282088254447629;  // std dev = 1,339, 20,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.09371027487610836;  // std dev = 2,240, 46,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else return -0.01567294988636288;  // std dev = 0,285, 186,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=48 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then return -0.12277628645879511;  // std dev = 0,218, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.05623500837688056;  // std dev = 1,368, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.06333212510246153;  // std dev = 1,478, 26,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */


Results
   AUC ROC   = 0.979289
   AUC PR    = 0.276578
   CLL	      = -0.214016
   Precision = 0.241473 at threshold = 0.5
   Recall    = 0.667925
   F1        = 0.354709


Total learning time: 19.0 seconds
Total inference time: 173.17000000000002 seconds
AUC ROC: 0.979289


Results scoring model
   AUC ROC   = 0.976331
   AUC PR    = 0.23109
   CLL	      = -0.222744
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.231884


Total scoring time: 37.413 seconds
Refined model CLL: -0.222744


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989822
   AUC PR    = 0.295821
   CLL	      = -0.171409
   Precision = 0.24302 at threshold = 0.5
   Recall    = 0.886792
   F1        = 0.381494


Total learning time: 68.511 seconds
Total inference time: 12.609 seconds
AUC ROC: 0.989822
Total revision time: 68.511
Best scored revision CLL: -0.206234


Dataset: 22_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:29:40
{'Learning time': 68.511, 'Recall': 0.886792, 'Precision': [0.24302, 0.5], 'CLL': -0.171409, 'AUC PR': 0.295821, 'F1': 0.381494, 'Inference time': 12.609, 'AUC ROC': 0.989822, 'parameter': {'Learning time': 3.46, 'Recall': 0.886792, 'Precision': [0.24302, 0.5], 'CLL': -0.171409, 'AUC PR': 0.295821, 'F1': 0.381494, 'Inference time': 12.609, 'AUC ROC': 0.989822}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false;follows(D, A).;true;true
0;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true,true;recursion_accounttype(D, B), follows(C, D).;false;false
1;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
1;true;follows(A, D).;true;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, I), follows(I, J).;false;false
1;false,true,true;follows(E, G), follows(G, A).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;true;follows(A, D), tweets(A, E).;false;false
2;false,false;follows(H, A).;true;true
2;false,true;follows(F, G).;true;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, J), follows(J, K).;false;false
2;false,true,true;follows(G, F), follows(A, G).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(F, G), follows(G, A).;false;false
3;false,false;follows(F, A).;true;true
3;false,true;follows(D, E), follows(A, E).;true;false
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,false,false;follows(A, H), follows(H, I).;false;false
3;false,true,true;follows(E, D).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
4;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
4;false;follows(F, A).;true;true
4;false,false,false;tweets(A, J).;false;false
4;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, C), follows(E, A).;false;false
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;true;follows(C, D), follows(D, A).;false;true
5;false,false;follows(H, A).;true;true
5;false,true;follows(A, G), follows(F, G).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;tweets(C, D), follows(A, C).;false;false
6;false,false;follows(A, G).;true;true
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, I).;false;false
6;false,true,true;follows(A, F), follows(A, E).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;follows(C, E), follows(E, A).;false;false
7;false,false,true;recursion_accounttype(I, B).;false;false
7;true;tweets(C, D).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,true;follows(G, F), recursion_accounttype(G, B).;false;false
7;false;follows(F, A).;true;true
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
8;true,true;recursion_accounttype(C, B), tweets(C, E).;false;false
8;false,false;tweets(A, H).;true;false
8;true;follows(C, D), recursion_accounttype(D, B).;true;false
8;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
8;false;follows(A, F).;true;true
8;false,true,true;recursion_accounttype(F, B).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;follows(E, A), follows(A, E).;false;true
9;false,false;follows(H, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, G).;false;false
9;true,true,false;recursion_accounttype(D, B), follows(A, D).;false;false
9;false,false,false;follows(A, I).;false;false
9;false;follows(F, A), recursion_accounttype(F, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D), function(A, F) )
%   | | | then return -0.05851773156715445;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.26991364098186527;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.837740771834206;  // std dev = 0,990, 49,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20902612808196822;  // std dev = 3,603, 57,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8274070910686683;  // std dev = 0,040, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7235739121503033;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.13249933115832;  // std dev = 0,203, 152,000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.7751132440591302;  // std dev = 0,079, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13057403362641062;  // std dev = 3,654, 63,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.35092203251355425;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.45536643674628463;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.5504888947113774;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2669708782129651;  // std dev = 0,603, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5593896406764332;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.05294996933058694;  // std dev = 2,032, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.05332473592154996;  // std dev = 3,865, 179,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13362771969800652;  // std dev = 3,589, 59,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.13407384979541442;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43326441159184614;  // std dev = 0,044, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.4139485350519151;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6338779661026749;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.42050410813073547;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.01715760377985928;  // std dev = 2,112, 50,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   | | | else return 0.07921110634878392;  // std dev = 3,716, 147,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0738882936481338;  // std dev = 3,689, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.11181760330058317;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3314626957144648;  // std dev = 0,040, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32273994932193306;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5943873525172522;  // std dev = 0,166, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03451151833725023;  // std dev = 4,184, 209,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3946417676785744;  // std dev = 0,119, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( function(A, I) )
%   | | | then return 0.04070399055332556;  // std dev = 3,835, 76,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.26618696979611767;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, C), interaction(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25977942674057486;  // std dev = 0,027, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.041652355608535224;  // std dev = 0,940, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2956805902513263;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.28830938118972865;  // std dev = 0,598, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.02293202901869869;  // std dev = 4,124, 211,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=49 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12917498439046504;  // std dev = 3,491, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.08440454199780074;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(C, D), interaction(A, C) )
%   | then return 0.2206177945303677;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20928687993305164;  // std dev = 0,020, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), interaction(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5040795109843569;  // std dev = 0,686, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13928601976262658;  // std dev = 0,251, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7057807381339601;  // std dev = 0,612, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.25410909704919926;  // std dev = 0,020, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.1808915696497968;  // std dev = 0,024, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.1481531149905259;  // std dev = 0,468, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.02791890911764218;  // std dev = 3,178, 181,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.1044037338198387;  // std dev = 0,325, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07669242516471755;  // std dev = 2,816, 55,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.577897491910597;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), function(C, E) )
%   | | then return 0.15562279071225887;  // std dev = 0,021, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.37631704815393163;  // std dev = 0,627, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12987668405548647;  // std dev = 0,748, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.17556667914494523;  // std dev = 0,054, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5675659775664392;  // std dev = 0,137, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.2230928501013991;  // std dev = 0,111, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.13952974206494143;  // std dev = 0,000920, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( recursion_proteinclass(D, B), interaction(A, D) )
%   | | | then return 0.1355965175832628;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1855298214992308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1170567667411791;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.14145025060932337;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.12959147870315058;  // std dev = 0,000646, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.011393479885035324;  // std dev = 2,586, 177,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=52 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.01363842590198439;  // std dev = 2,331, 71,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977212
   AUC PR    = 0.146342
   CLL	      = -0.19782
   Precision = 0.126253 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.224201


Total learning time: 2.432 seconds
Total inference time: 22.064 seconds
AUC ROC: 0.977212


Results scoring model
   AUC ROC   = 0.996421
   AUC PR    = 0.515454
   CLL	      = -0.150535
   Precision = 0.508287 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.673993


Total scoring time: 4.112 seconds
Parameter learned model CLL: -0.150535


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A)', 'false,false,false': 'interaction(A, J)', 'false,true,true': 'interaction(A, D), function(A, F)'}, {'false,false,true,false': [3.603, 37, 20], 'false,true,true,true': [0.957, 11, 1], 'false,false,false,true': [0.894, 4, 1], 'false,true,false,true': [0.99, 1, 48], 'true': [0.0, 0, 14], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [2.029, 10, 7], 'false,true,false,false': [8.43e-08, 107, 0], 'false,false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, D)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,false': [0.0, 0, 5], 'false,true,true,true': [0.04, 0, 8], 'false,false,true': [0.079, 0, 2], 'false,false,false,false': [0.707, 1, 1], 'true,true,true': [0.0, 0, 5], 'false,true,true,false': [0.0, 0, 48], 'false,false,false,true': [3.654, 44, 19], 'false,true,false': [0.203, 152, 0], 'true,true,false': [0.0, 0, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'true': 'interaction(A, D), function(A, E)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,false': [0.0, 0, 5], 'false,true,true,true': [0.013, 0, 2], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [0.816, 2, 1], 'true,true': [0.949, 1, 9], 'false,true,true,false': [0.603, 1, 1], 'false,false,true,false': [3.865, 135, 44], 'false,true,false': [1.05e-08, 0, 3], 'false,false,true,true': [2.032, 25, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(F, A)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)', 'false,true,true': 'interaction(E, D)'}, {'false,false,true,false': [3.716, 103, 44], 'false,true,true,true': [0.012, 0, 2], 'false,false,false,true': [3.689, 48, 19], 'false,false,false,false': [0.816, 2, 1], 'true': [0.044, 0, 14], 'false,false,true,true': [2.112, 42, 8], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [1.05e-08, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'function(A, I)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.119, 0, 2], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.04, 0, 14], 'false,true,true,false': [0.166, 0, 3], 'false,false,false,true': [3.835, 56, 20], 'false,true,false': [4.184, 157, 52]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), interaction(E, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false,false': 'interaction(H, A)', 'false,true': 'interaction(A, G), interaction(F, G)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'false,false,true,false': [4.124, 162, 49], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [0.816, 2, 1], 'true,true': [0.018, 0, 6], 'false,false,true,true': [0.598, 1, 3], 'true,false,false': [0.027, 0, 8], 'true,false,true': [0.0, 0, 0], 'false,true,false': [0.048, 0, 3], 'false,true,true': [0.94, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'true': 'function(C, D), interaction(A, C)', 'false,false': 'interaction(A, G)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,true,true': 'interaction(A, F), interaction(A, E)'}, {'true,false': [0.02, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.001, 0, 7], 'false,true,false': [0.251, 139, 0], 'false,true,true,false': [0.686, 0, 56], 'false,false,true,false': [0.02, 31, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.612, 0, 22]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'function(C, D)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(E, A)', 'false,false,false': 'interaction(A, I)'}, {'true,false': [0.0, 0, 0], 'false,false,true,false': [2.816, 35, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.024, 0, 14], 'false,false,true,true': [0.325, 1, 1], 'false,true,false': [3.178, 129, 52], 'false,true,true': [0.468, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B), function(C, E)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false': 'interaction(A, F)', 'false,true,true': 'recursion_proteinclass(F, B)'}, {'true,false': [0.748, 127, 0], 'false,true,true,true': [0.054, 0, 2], 'true,true,true': [0.021, 0, 14], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.137, 0, 20], 'true,true,false': [0.627, 0, 56], 'false,true,false': [0.111, 51, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, E)', 'false,false': 'interaction(H, A)', 'true,true': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, G)', 'true,true,false': 'recursion_proteinclass(D, B), interaction(A, D)', 'false,false,false': 'interaction(A, I)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)'}, {'true,false': [0.041, 0, 4], 'false,false,true': [2.586, 125, 52], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.00092, 0, 7], 'true,true,false,true': [0.025, 0, 2], 'false,true,true': [0.0, 0, 1], 'false,false,false,true': [2.331, 51, 20], 'false,true,false': [0.000646, 0, 5], 'true,true,false,false': [0.0, 0, 1]}]]
[{'': [-2.5376526277146434e-16, 0.21559573361082263], 'false,false,true': [0.0, 0.22776238842720795], 'false,false,false': [0.16000000000000003, nan], 'false,false': [0.23097502972651607, 0.16000000000000003], 'false,true': [0.19976218787158156, 0.21301775147929092], 'false': [0.21107377647918235, 0.22726127488032344], 'false,true,false': [0.019991670137443407, 6.640586315514955e-17], 'false,true,true': [0.07638888888888894, 0.24221453287197234]}, {'': [1.9032394707859825e-16, 0.1674348087289352], 'true': [9.868649107779169e-17, 0.0], 'false,false': [0.0030957908880931972, 0.2145118081804701], 'true,true': [0.0, 0.0], 'false,true': [0.0013491948127280576, 0.00027004249152552163], 'false': [0.14978780859931112, 0.21997985212267912], 'false,false,false': [0.2118912530513252, 0.25], 'false,true,true': [0.00020322450827214844, -7.401486830834377e-16]}, {'': [0.062222222222222, 0.1228243093336337], 'false,false,true': [0.1251282667937807, 0.08347017973541565], 'true': [0.0899999999999999, -4.4408920985006264e-17], 'false,false': [0.08995471174632731, 0.21851650269474948], 'false,true': [0.11103777364921016, 3.700743415417188e-17], 'false': [0.06900893878891241, 0.12017657360054512], 'false,false,false': [0.2183280666475146, 0.22222222222222224], 'false,true,true': [7.922327873444157e-05, 0.18180509118008886]}, {'': [0.0001378269804672705, 0.12406441138639937], 'false,false,true': [0.08924481550580207, 0.0939270355807535], 'false,false': [0.09449749746348299, 0.20403911279609374], 'false,true': [0.010799419008672281, 3.700743415417188e-17], 'false': [0.006513741552758819, 0.12329965485245227], 'false,false,false': [0.20316328803742423, 0.2222222222222222], 'false,true,true': [7.614363223820697e-05, 0.0]}, {'': [0.00011158912627563997, 0.11516186132195111], 'true': [0.00011158912627563997, nan], 'false,false': [0.007076840297320031, 0.19353839308192514], 'false,true': [0.020746556214583378, 0.08377949851227502], 'false': [0.08705556388977455, 0.19188706733853403], 'false,false,false': [0.19353839308192514, nan], 'false,true,true': [0.0, 0.00921399703708777]}, {'': [8.483635838517951e-05, 0.1151330376306279], 'true,false': [nan, 9.237736801943897e-05], 'false,false,true': [0.08950779321025584, 0.08061198830865093], 'true': [5.132076001080713e-05, 9.237736801943897e-05], 'false,false': [0.08206335033287149, 0.2296613741959804], 'false,true': [0.2208728120847229, 0.0007653809811371352], 'false': [0.14234440544744725, 0.11416708980115185], 'false,false,false': [0.22997508009967915, 0.22222222222222218]}, {'': [6.165489330817968e-05, 0.11974088624163004], 'false,false,true': [0.017043510063620978, 1.2804787196670524e-05], 'true': [2.4810411047848646e-07, 5.8866869700040834e-05], 'false,false': [0.2307870149728476, nan], 'false,true': [0.00841122791286659, 0.0004525466527285392], 'false': [0.08747045329463161, 0.2307870149728476], 'false,true,true': [nan, 0.00841122791286659]}, {'': [3.99761350678112e-05, 0.07722534119741974], 'false,false,true': [0.052935135674293934, 0.1441424401752793], 'true': [3.99761350678112e-05, nan], 'false,false': [0.14205253785295646, 0.0], 'false,true': [0.043852454350290115, 0.055809991350375246], 'false': [0.05586671495272635, 0.1439684388917231], 'false,false,false': [0.0, nan]}, {'': [0.05651063892822956, 0.1243137215809784], 'true': [0.013420676114006344, 0.004399946671638782], 'true,true': [3.140285049521574e-05, 0.0070268033763377325], 'false,true': [0.01367844174566445, 0.00024013624054617855], 'false': [0.1243137215809784, nan], 'false,true,true': [0.0014414909085761415, 0.0009327322872874522]}, {'': [0.00045079559540099027, 0.04821783292197244], 'true': [0.0002617482910321267, 0.000429862724218074], 'false,false': [0.037790011337358265, 0.07650186365220414], 'true,true': [1.2101812638110054e-07, 0.0007591095232538045], 'false,true': [0.0, 8.33419873141894e-08], 'false': [1.96014615342401e-05, 0.04900087130344218], 'false,false,false': [0.07650186365220414, nan], 'true,true,false': [0.0003075526715592275, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,true;interaction(E, D), interaction(E, A).;true;true
0;false;interaction(D, A).;true;true
0;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true,true;recursion_proteinclass(D, B), interaction(C, D).;true;true
1;true;interaction(A, D).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false,true;interaction(F, G).;true;true
2;true;interaction(A, D), function(A, E).;true;true
2;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, F), interaction(A, G).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(D, E), interaction(A, E).;true;true
3;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
3;false,true,true;interaction(E, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(A, G), interaction(F, G).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
6;true;function(C, D), interaction(A, C).;true;true
6;false;interaction(E, A).;true;true
6;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true,true;recursion_proteinclass(C, B), function(C, E).;true;true
8;false,true;recursion_proteinclass(F, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true,true;interaction(E, A), interaction(A, E).;true;true
9;true;interaction(C, D), interaction(D, E).;true;true
9;false,true;interaction(A, G).;true;true
9;true,true,false;recursion_proteinclass(D, B), interaction(A, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.16584124279182005;  // std dev = 2,353, 26,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 1,69e-07, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16584124279181983;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8367385506323293;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6990652489456486;  // std dev = 0,990, 49,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else return -0.13038991379198944;  // std dev = 0,145, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8367385506323293;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16326144936767076;  // std dev = 7,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2681535352521764;  // std dev = 1,451, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11826479568870883;  // std dev = 2,358, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), function(A, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.38119095274288095;  // std dev = 0,611, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6894223680175467;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5604000551880965;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.11182427175050823;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.017982022360695835;  // std dev = 1,131, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.06433448551993637;  // std dev = 3,692, 143,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=37 */
%   | | | else return 0.12468213016892471;  // std dev = 3,933, 94,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830986;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.08418025082497664;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.16856631465501593;  // std dev = 0,908, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5269732477870921;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25233560784017056;  // std dev = 0,585, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10616345122794284;  // std dev = 0,006, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.05250790298280827;  // std dev = 2,350, 54,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.1297057120035804;  // std dev = 4,716, 158,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33163792232097217;  // std dev = 0,027, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3612483974577635;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5802852108908921;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.020049988268656917;  // std dev = 2,050, 71,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return 0.04674824582360743;  // std dev = 3,632, 140,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6470549475293877;  // std dev = 0,342, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23126267336713588;  // std dev = 0,331, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1668171053504234;  // std dev = 1,748, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.029592944527751217;  // std dev = 2,282, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.25310120027147565;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.2802932459345623;  // std dev = 0,074, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25310120027147565;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.3642260645177329;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33303403779044316;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return -0.03614697666173578;  // std dev = 1,769, 41,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return 0.032364694189033864;  // std dev = 1,832, 33,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.14075824650298038;  // std dev = 1,639, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.043409738029687596;  // std dev = 4,227, 163,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2151925383950706;  // std dev = 0,020, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.6152707417126642;  // std dev = 0,082, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.46992951177970477;  // std dev = 0,459, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11841363294990691;  // std dev = 0,084, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.15010568886169767;  // std dev = 0,185, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.2667847790703355;  // std dev = 1,664, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.4235808387630267;  // std dev = 1,545, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return -0.13151380954403444;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2231707479230182;  // std dev = 0,249, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), enzyme(A, D) )
%   | then return -0.14050191464198317;  // std dev = 0,773, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1821616909418252;  // std dev = 0,019, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.09336054838183618;  // std dev = 0,051, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.023201292129753467;  // std dev = 0,977, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.019901637152253026;  // std dev = 0,874, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.03356868020375162;  // std dev = 2,915, 143,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.005306598769155589;  // std dev = 1,600, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.04498033271431578;  // std dev = 2,408, 44,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else return -0.19182854892098422;  // std dev = 0,643, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), function(C, E) )
%   | | then return 0.16228819755020707;  // std dev = 0,021, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.34545184533895473;  // std dev = 0,410, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3757181175217917;  // std dev = 0,230, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1318138892221872;  // std dev = 0,029, 146,000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.10335484802387929;  // std dev = 0,934, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.20224439616823292;  // std dev = 0,541, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.3396489012763339;  // std dev = 0,996, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.5552295297174028;  // std dev = 0,881, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.1867618869519753;  // std dev = 0,029, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.1415895036978843;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.20787918589138002;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.05794416066405661;  // std dev = 0,333, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return -0.48249945610666617;  // std dev = 0,799, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1384630630981331;  // std dev = 0,035, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.0679779962450336;  // std dev = 0,657, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.017609669971433716;  // std dev = 0,722, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.05143891749074231;  // std dev = 1,289, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return -0.006923758500241394;  // std dev = 3,296, 179,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=51 */


Results
   AUC ROC   = 0.977006
   AUC PR    = 0.15654
   CLL	      = -0.199078
   Precision = 0.109018 at threshold = 0.5
   Recall    = 0.981949
   F1        = 0.196248


Total learning time: 6.569 seconds
Total inference time: 67.69800000000001 seconds
AUC ROC: 0.977006


Results scoring model
   AUC ROC   = 0.995808
   AUC PR    = 0.560134
   CLL	      = -0.159192
   Precision = 0.439791 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.59364


Total scoring time: 10.629 seconds
Refined model CLL: -0.159192


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977212
   AUC PR    = 0.146342
   CLL	      = -0.19782
   Precision = 0.126253 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.224201


Total learning time: 23.741999999999997 seconds
Total inference time: 22.064 seconds
AUC ROC: 0.977212
Total revision time: 23.741999999999997
Best scored revision CLL: -0.150535


Dataset: 22_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:31:35
{'Learning time': 23.741999999999997, 'Recall': 1.0, 'Precision': [0.126253, 0.5], 'CLL': -0.19782, 'AUC PR': 0.146342, 'F1': 0.224201, 'Inference time': 22.064, 'AUC ROC': 0.977212, 'parameter': {'Learning time': 2.432, 'Recall': 1.0, 'Precision': [0.126253, 0.5], 'CLL': -0.19782, 'AUC PR': 0.146342, 'F1': 0.224201, 'Inference time': 22.064, 'AUC ROC': 0.977212}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,true;follows(E, D), follows(E, A).;true;true
0;false;follows(D, A).;true;true
0;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
0;false,true,true;follows(A, D), tweets(A, F).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true,true;recursion_accounttype(D, B), follows(C, D).;false;false
1;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
1;true;follows(A, D).;true;false
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false;follows(E, A).;true;true
1;false,false,false;follows(A, I), follows(I, J).;false;false
1;false,true,true;follows(E, G), follows(G, A).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;true;follows(A, D), tweets(A, E).;false;false
2;false,false;follows(H, A).;true;true
2;false,true;follows(F, G).;true;false
2;false;follows(A, F), recursion_accounttype(F, B).;true;true
2;false,false,false;follows(A, J), follows(J, K).;false;false
2;false,true,true;follows(G, F), follows(A, G).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
3;false,false,true;follows(F, G), follows(G, A).;false;false
3;false,false;follows(F, A).;true;true
3;false,true;follows(D, E), follows(A, E).;true;false
3;false;follows(A, D), recursion_accounttype(D, B).;true;true
3;false,false,false;follows(A, H), follows(H, I).;false;false
3;false,true,true;follows(E, D).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true,false;follows(C, E), follows(E, A).;false;false
4;true;tweets(A, D).;false;true
4;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
4;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
4;false;follows(F, A).;true;true
4;false,false,false;tweets(A, J).;false;false
4;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true,false;follows(E, C), follows(E, A).;false;false
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;true;follows(C, D), follows(D, A).;false;true
5;false,false;follows(H, A).;true;true
5;false,true;follows(A, G), follows(F, G).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
6;true;tweets(C, D), follows(A, C).;false;false
6;false,false;follows(A, G).;true;true
6;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
6;false;follows(E, A).;true;true
6;false,false,false;tweets(A, I).;false;false
6;false,true,true;follows(A, F), follows(A, E).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true,false;follows(C, E), follows(E, A).;false;false
7;false,false,true;recursion_accounttype(I, B).;false;false
7;true;tweets(C, D).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,true;follows(G, F), recursion_accounttype(G, B).;false;false
7;false;follows(F, A).;true;true
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A).;true;true
8;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
8;true,true;recursion_accounttype(C, B), tweets(C, E).;false;false
8;false,false;tweets(A, H).;true;false
8;true;follows(C, D), recursion_accounttype(D, B).;true;false
8;false,true;follows(G, F), recursion_accounttype(G, B).;true;false
8;false;follows(A, F).;true;true
8;false,true,true;recursion_accounttype(F, B).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true,true;follows(E, A), follows(A, E).;false;true
9;false,false;follows(H, A).;false;true
9;true;follows(C, D), follows(D, E).;true;false
9;false,true;follows(A, G).;false;false
9;true,true,false;recursion_accounttype(D, B), follows(A, D).;false;false
9;false,false,false;follows(A, I).;false;false
9;false;follows(F, A), recursion_accounttype(F, B).;true;true


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.13592671287729013;  // std dev = 3,291, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.17698951480965672;  // std dev = 3,871, 69,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2129876447769317;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.29090198363952585;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.778284035890822;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.7194734122109543;  // std dev = 7,30e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.13772512055776825;  // std dev = 0,162, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.826386974699182;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14770989415595542;  // std dev = 3,708, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.15372475885239825;  // std dev = 2,728, 34,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), function(A, E) )
%   | then return 0.5867073190043078;  // std dev = 0,170, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4793814544693715;  // std dev = 0,676, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3399758249062701;  // std dev = 0,807, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.019777544302377745;  // std dev = 2,853, 77,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.07570953495043911;  // std dev = 2,499, 66,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14173056563748118;  // std dev = 3,666, 61,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.1867233894083835;  // std dev = 2,613, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.43787296013707966;  // std dev = 0,181, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4361003822001204;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5591273919274119;  // std dev = 0,142, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.023072829749632373;  // std dev = 2,831, 74,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | | else return 0.06706186805777185;  // std dev = 2,418, 67,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0899380083972226;  // std dev = 3,746, 67,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.0740018396486812;  // std dev = 2,780, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.33534529374779787;  // std dev = 0,167, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3333428881973557;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4006013030276202;  // std dev = 0,901, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.036800665407444755;  // std dev = 3,431, 122,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.44792869532480656;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( function(A, I) )
%   | | | then return 0.08500384324777287;  // std dev = 4,614, 99,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.251740838110311;  // std dev = 0,082, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), interaction(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.29616493057075377;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.2637734928974217;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1850581271377755;  // std dev = 0,940, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.48322747215704176;  // std dev = 0,218, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.012428269016982258;  // std dev = 3,422, 129,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04679764322148391;  // std dev = 3,780, 70,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.17099862010758174;  // std dev = 2,519, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(C, D), interaction(C, A) )
%   | then return 0.1995213268085515;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12750783443513936;  // std dev = 0,917, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(E, A) )
%   | | | then return 0.21581548023504804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.507006575041975;  // std dev = 1,288, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.13863397878666547;  // std dev = 0,208, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6466068350389579;  // std dev = 1,517, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.2568823164150567;  // std dev = 0,119, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.19125459979963422;  // std dev = 0,128, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.25190816159588225;  // std dev = 0,193, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.0031555966485575467;  // std dev = 2,813, 130,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=29 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.17318325284275615;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1052496970205965;  // std dev = 2,911, 55,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.13195256923835985;  // std dev = 1,961, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), function(C, E) )
%   | | then return 0.16356450342984896;  // std dev = 0,113, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.40297370801522076;  // std dev = 0,837, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.12300338029291784;  // std dev = 0,232, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.16612386298796067;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5696639690965639;  // std dev = 0,145, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.22666036232423187;  // std dev = 0,112, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12524969354704296;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( recursion_proteinclass(D, B), interaction(D, A) )
%   | | | then return 0.10331538364363446;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17033529594854263;  // std dev = 0,065, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14037302259774845;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.18599510487062965;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13529588911879378;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.0064162189953307506;  // std dev = 2,443, 132,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.011683533738546003;  // std dev = 3,026, 100,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983864
   AUC PR    = 0.246372
   CLL	      = -0.194101
   Precision = 0.159797 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.27556


Total learning time: 2.101 seconds
Total inference time: 15.302 seconds
AUC ROC: 0.983864


Results scoring model
   AUC ROC   = 0.989685
   AUC PR    = 0.318606
   CLL	      = -0.180682
   Precision = 0.266254 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.420538


Total scoring time: 4.058 seconds
Parameter learned model CLL: -0.180682


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false': 'interaction(A, D)', 'false,false,false': 'interaction(J, A)', 'false,true,true': 'interaction(D, A), function(A, F)'}, {'false,false,true,false': [3.871, 47, 22], 'false,true,true,true': [7.45e-09, 20, 0], 'false,false,false,true': [2.664, 20, 11], 'false,true,false,true': [0.0, 0, 21], 'true': [0.0, 0, 16], 'false,false,false,false': [0.0, 0, 0], 'false,true,true,false': [3.291, 39, 15], 'false,true,false,false': [4.47e-08, 42, 0], 'false,false,true,true': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'true,true': 'recursion_proteinclass(D, B), interaction(D, C)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A), interaction(J, I)', 'false,true,true': 'interaction(G, E), interaction(A, G)'}, {'true,false': [2.11e-08, 0, 3], 'false,true,true,true': [0.968, 1, 15], 'false,false,true': [0.022, 0, 3], 'false,false,false,false': [2.728, 23, 11], 'true,true,true': [2.98e-08, 0, 9], 'false,true,true,false': [7.3e-08, 0, 21], 'false,false,false,true': [3.708, 44, 20], 'false,true,false': [0.162, 99, 0], 'true,true,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'true': 'interaction(D, A), function(A, E)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [2.613, 18, 11], 'true,true': [0.17, 0, 13], 'false,true,true,false': [0.676, 1, 4], 'false,false,true,false': [2.499, 47, 19], 'false,true,false': [0.807, 1, 2], 'false,false,true,true': [2.853, 63, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, F)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,false,false': 'interaction(H, A), interaction(I, H)', 'false,true,true': 'interaction(D, E)'}, {'false,false,true,false': [2.418, 48, 19], 'false,true,true,true': [0.0, 0, 0], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [2.78, 26, 11], 'true': [0.181, 0, 16], 'false,false,true,true': [2.831, 60, 14], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.142, 0, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'function(A, I)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)'}, {'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,false,true': [0.033, 0, 3], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.167, 0, 16], 'false,true,true,false': [0.901, 2, 6], 'false,false,false,true': [4.614, 68, 31], 'false,true,false': [3.431, 93, 29]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), interaction(A, E)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false,false': 'interaction(A, H)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'false,false,true,false': [3.422, 102, 27], 'false,false,false,true': [3.78, 50, 20], 'false,false,false,false': [2.519, 15, 11], 'true,true': [0.082, 0, 11], 'false,false,true,true': [0.218, 0, 6], 'true,false,false': [0.092, 0, 5], 'true,false,true': [0.0, 0, 0], 'false,true,false': [0.94, 1, 5], 'false,true,true': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'true': 'function(C, D), interaction(C, A)', 'false,false': 'interaction(G, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,true,true': 'interaction(F, A), interaction(E, A)'}, {'true,false': [0.917, 1, 8], 'false,true,true,true': [0.0, 0, 1], 'true,true': [0.0, 0, 8], 'false,true,false': [0.208, 108, 0], 'false,true,true,false': [1.288, 1, 35], 'false,false,true,false': [0.119, 53, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true,true': [1.517, 2, 34]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false,false,true': 'recursion_proteinclass(H, B)', 'true': 'function(C, D)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false': 'interaction(A, E)', 'false,false,false': 'interaction(I, A)'}, {'true,false': [0.0, 0, 0], 'false,false,true,false': [2.911, 33, 22], 'false,false,false,true': [1.961, 13, 11], 'false,false,false,false': [0.0, 0, 0], 'true,true': [0.128, 0, 16], 'false,false,true,true': [0.0, 0, 1], 'false,true,false': [2.813, 101, 29], 'false,true,true': [0.193, 0, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B), function(C, E)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false': 'interaction(F, A)', 'false,true,true': 'recursion_proteinclass(F, B)'}, {'true,false': [0.232, 116, 0], 'false,true,true,true': [0.025, 0, 3], 'true,true,true': [0.113, 0, 16], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.145, 0, 31], 'true,true,false': [0.837, 0, 36], 'false,true,false': [0.112, 58, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(E, D)', 'false,false': 'interaction(A, H)', 'true,true': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(G, A)', 'true,true,false': 'recursion_proteinclass(D, B), interaction(D, A)', 'false,false,false': 'interaction(I, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'true,false': [0.026, 0, 4], 'false,false,true': [2.443, 99, 33], 'false,false,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 8], 'true,true,false,true': [0.0, 0, 1], 'false,true,true': [0.006, 0, 4], 'false,false,false,true': [3.026, 69, 31], 'false,true,false': [0.004, 0, 3], 'true,true,false,false': [0.065, 0, 2]}]]
[{'': [-2.220446049250313e-16, 0.2071042173631428], 'false,false,true': [0.25, 0.21718126444024455], 'false,true,false': [0.0, 4.7580986769649563e-17], 'false,false': [0.2190041658401121, 0.22892819979188297], 'false,true': [0.1616143170197219, 0.22222222222222177], 'false': [0.19372369332409956, 0.22222222222222365], 'false,false,false': [0.22892819979188297, nan], 'false,true,true': [2.7755575615628915e-18, 0.20061728395061676]}, {'': [0.13296398891966787, 0.1888879083362204], 'true': [0.15234375000000006, 1.4802973661668753e-16], 'false,false': [0.0001556878154815126, 0.21624469166445393], 'true,true': [9.868649107779169e-17, 0.2448979591836735], 'false,true': [0.026186719983753402, 0.0002639179180292616], 'false': [0.16159892903496956, 0.2230195874360372], 'false,false,false': [0.21484375000000047, 0.2188581314878893], 'false,true,true': [0.05859374999999989, 2.5376526277146434e-16]}, {'': [0.0019453172135177055, 0.155671388834118], 'false,false,true': [0.10571812250073373, 0.09465700602907169], 'true': [0.0022100645266001596, 3.700743415417188e-17], 'false,false': [0.10139046092369389, 0.2256666551553245], 'false,true': [0.09130690758591849, 0.21706966426691043], 'false': [0.14302276858048218, 0.15229588578055014], 'false,false,false': [0.22037086804622427, 0.23543400713436366], 'false,true,true': [nan, 0.09130690758591849]}, {'': [0.0020455990573915728, 0.1480529756067515], 'false,false,true': [0.10831304645291691, 0.08726834970720605], 'false,false': [0.09879565073886938, 0.20928494267740616], 'false,true': [0.0, 0.00402227330220879], 'false': [0.0054540673521794964, 0.14609385193583294], 'false,false,false': [0.20940075740699535, 0.20891161431701985], 'false,true,true': [nan, 0.0]}, {'': [0.0017497111658397874, 0.15190608564237626], 'true': [0.0017497111658397874, nan], 'false,false': [0.00036797491538905397, 0.21502591935400064], 'false,true': [0.09069055417432582, 0.09650528717754626], 'false': [0.1042295859872203, 0.21247246492623834], 'false,false,false': [0.21502591935400064, nan], 'false,true,true': [0.0, 0.101524240738841]}, {'': [0.001378694922841206, 0.147510984033958], 'true,false': [nan, 0.0017028773037794376], 'false,false,true': [0.007886224933777256, 0.09079558874168908], 'true': [0.0006146205479751098, 0.0017028773037794376], 'false,false': [0.09652409233158384, 0.21796163705507351], 'false,true': [0.0, 0.14719734097166534], 'false': [0.1269278566051019, 0.14753004246705664], 'false,false,false': [0.20408163265306103, 0.24408284023668614]}, {'': [0.05077975763465676, 0.14189114791138244], 'false,false,true': [0.06393721997668672, 0.00026913834870846774], 'true': [0.0, 0.09347687617242545], 'false,false': [0.22265001243292462, nan], 'false,true': [0.04704015234978093, 0.00040017664481559087], 'false': [0.08960833032112898, 0.22265001243292462], 'false,true,true': [0.0, 0.04605514071609251]}, {'': [0.0010172168482475152, 0.09762713758770296], 'false,false,true': [0.0, 0.15408212772451757], 'true': [0.0010172168482475152, nan], 'false,false': [0.15141159969128812, 0.16020830263202565], 'false,true': [0.0053471041988609426, 0.060878409015706986], 'false': [0.061041140742352444, 0.15418705356437476], 'false,false,false': [0.16020830263202565, nan]}, {'': [0.052070876460775496, 0.14004097307680358], 'true,true': [0.0008046316800184965, 0.019469020186227908], 'true': [0.025935620294655733, 0.000462196917680222], 'false,true': [0.013740526225194708, 0.0002148607920805244], 'false': [0.14004097307680358, nan], 'false,true,true': [0.00020071121517165058, 0.0006821882061008902]}, {'': [0.0006163021989635143, 0.06415729910842663], 'true': [0.0007579739290412002, 0.00016835657538930016], 'false,false': [0.04521564100686389, 0.09155835095954645], 'true,true': [0.0, 0.0024029731882591145], 'false,true': [8.599641158048288e-06, 5.936803036503402e-06], 'false': [0.0006369467051103346, 0.06519775121203276], 'false,false,false': [0.09155835095954645, nan], 'true,true,false': [0.0, 0.0021072369006028095]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false,true;interaction(D, E), interaction(A, E).;true;true
0;false;interaction(A, D).;true;true
0;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(D, A), function(A, F).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true,true;recursion_proteinclass(D, B), interaction(D, C).;true;true
1;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
1;true;interaction(D, A).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), function(A, E).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false,true;interaction(E, D), interaction(E, A).;true;true
3;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false;interaction(A, E).;true;true
4;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false,true;interaction(G, A), interaction(G, F).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(C, D), interaction(C, A).;true;true
6;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
6;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
6;false;interaction(A, E).;true;true
6;false,true,true;interaction(F, A), interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false,false,true;recursion_proteinclass(H, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(G, A), interaction(H, G).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true,true;recursion_proteinclass(C, B), function(C, E).;true;true
8;false,true;recursion_proteinclass(F, B).;true;true
8;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true,true;interaction(A, E), interaction(E, A).;true;true
9;true;interaction(D, C), interaction(E, D).;true;true
9;false,true;interaction(G, A).;true;true
9;true,true,false;recursion_proteinclass(D, B), interaction(D, A).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), function(A, F) )
%   | | | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.12600607795665522;  // std dev = 3,314, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.26199508894566564;  // std dev = 3,538, 52,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8421075884809359;  // std dev = 8,43e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6378488111792143;  // std dev = 1,271, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return -0.13989864649696357;  // std dev = 0,169, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7886074779433968;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.03742667519266515;  // std dev = 2,127, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.09448892442706643;  // std dev = 4,104, 94,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), function(A, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11088334827754281;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.6100871880139127;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03485652197009263;  // std dev = 3,355, 115,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return 0.11912202815275975;  // std dev = 4,589, 112,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | | else return 0.3873587728050116;  // std dev = 0,889, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, D) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.07592935148477431;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.6139710635803671;  // std dev = 0,148, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10041399621055194;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.04161768856432256;  // std dev = 3,679, 131,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.0020078739377190273;  // std dev = 1,666, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.12428644589513886;  // std dev = 4,094, 78,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17928815283985033;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.45547430003755;  // std dev = 0,057, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.06789687999864545;  // std dev = 0,770, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.06786197948377026;  // std dev = 3,298, 98,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25917030537152025;  // std dev = 0,691, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.19873926478417822;  // std dev = 1,806, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.09606220255170596;  // std dev = 3,916, 79,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2904337277871751;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2763291337001008;  // std dev = 0,095, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.3350059316299504;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.31741964227160685;  // std dev = 0,594, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6481958202657951;  // std dev = 0,510, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.18654977988300148;  // std dev = 0,364, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.04203890154409831;  // std dev = 1,784, 48,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | | else return 0.06114024539504247;  // std dev = 4,066, 114,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2192524817730934;  // std dev = 0,030, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A), interaction(D, A) )
%   | | | then return 0.26490357008565524;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45317407542395316;  // std dev = 1,214, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( location(A, F), interaction(G, A) )
%   | | | then return -0.12008811510939373;  // std dev = 0,271, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.15719610246212487;  // std dev = 0,095, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.17365949690599936;  // std dev = 1,960, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.2865810660476901;  // std dev = 2,770, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | else if ( location(A, K) )
%   | | | then return -0.22559548230982437;  // std dev = 0,230, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.3004446992724627;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.17470468803534328;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2050727727097653;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07285511884361912;  // std dev = 0,003, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.0889226561297814;  // std dev = 1,109, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.012040753708073627;  // std dev = 2,448, 86,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.1787806348205579;  // std dev = 0,637, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04146987268485921;  // std dev = 3,066, 70,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.13503611559377796;  // std dev = 0,971, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.021058393037973504;  // std dev = 2,176, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), function(C, E) )
%   | | then return 0.15811636366330575;  // std dev = 0,023, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.456871219925363;  // std dev = 0,334, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3246188827394739;  // std dev = 0,517, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11983631667320226;  // std dev = 0,033, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09774773436101072;  // std dev = 1,498, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.531215139103497;  // std dev = 0,775, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.4339068130464369;  // std dev = 0,848, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1363201997693892;  // std dev = 2,558, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else return -0.19164254643352646;  // std dev = 0,036, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13256586226256972;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( recursion_proteinclass(D, B), interaction(D, A) )
%   | | | then return 0.16490182155222577;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20681953553356086;  // std dev = 0,054, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22781269128422377;  // std dev = 0,169, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.14640463041408186;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.044267936400531;  // std dev = 1,336, 88,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
%   | | | else return 0.004520526272282074;  // std dev = 1,705, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.011908862048207479;  // std dev = 3,000, 70,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.10156539137182022;  // std dev = 1,911, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */


Results
   AUC ROC   = 0.98133
   AUC PR    = 0.227639
   CLL	      = -0.199461
   Precision = 0.266304 at threshold = 0.5
   Recall    = 0.69258
   F1        = 0.384691


Total learning time: 8.539 seconds
Total inference time: 237.224 seconds
AUC ROC: 0.98133


Results scoring model
   AUC ROC   = 0.98821
   AUC PR    = 0.325992
   CLL	      = -0.186546
   Precision = 0.317073 at threshold = 0.5
   Recall    = 0.755814
   F1        = 0.446735


Total scoring time: 13.112 seconds
Refined model CLL: -0.186546


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983864
   AUC PR    = 0.246372
   CLL	      = -0.194101
   Precision = 0.159797 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.27556


Total learning time: 27.810000000000002 seconds
Total inference time: 15.302 seconds
AUC ROC: 0.983864
Total revision time: 27.810000000000002
Best scored revision CLL: -0.180682


Dataset: 22_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:36:16
{'Learning time': 27.810000000000002, 'Recall': 1.0, 'Precision': [0.159797, 0.5], 'CLL': -0.194101, 'AUC PR': 0.246372, 'F1': 0.27556, 'Inference time': 15.302, 'AUC ROC': 0.983864, 'parameter': {'Learning time': 2.101, 'Recall': 1.0, 'Precision': [0.159797, 0.5], 'CLL': -0.194101, 'AUC PR': 0.246372, 'F1': 0.27556, 'Inference time': 15.302, 'AUC ROC': 0.983864}}


