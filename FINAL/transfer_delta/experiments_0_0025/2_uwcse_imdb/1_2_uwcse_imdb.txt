Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.31648226843284566;  // std dev = 2,441, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.5925239350995126;  // std dev = 3,533, 64,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | | | else return 0.3966104735610508;  // std dev = 2,542, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   else return -0.141851064900488;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), professor(F) )
%   | | | then return -1.8246022781611578E-4;  // std dev = 2,008, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.4883757738664563;  // std dev = 1,387, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.6256934579846503;  // std dev = 2,073, 34,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return 0.40890391692265543;  // std dev = 3,452, 51,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   else return -0.1254446385283914;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.3053664367462845;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4998108811907291;  // std dev = 0,972, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return 0.2780772698729995;  // std dev = 1,881, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.19906214746554127;  // std dev = 0,078, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return 0.5439318936165025;  // std dev = 1,647, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.35700889727676083;  // std dev = 3,807, 65,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   else return -0.11231637819360633;  // std dev = 8,16e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), professor(E) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.3461012056615969;  // std dev = 1,854, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return -0.020491933607745337;  // std dev = 1,949, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.6631458143232215;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(I, F) )
%   | | | then return 0.21203271235589052;  // std dev = 0,795, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.45953186180911315;  // std dev = 1,306, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( publication(J, A), projectmember(K, B) )
%   | | | then return 0.6553336605557661;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29216413454758283;  // std dev = 3,279, 52,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=36 */
%   else return -0.1015963294878365;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.35751142565331084;  // std dev = 0,092, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.22952452301981704;  // std dev = 0,947, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.30815260727755994;  // std dev = 0,937, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( publication(I, B), ta(J, A, K) )
%   | | then if ( ta(L, M, K), publication(I, M) )
%   | | | then return 0.4179259504470333;  // std dev = 1,145, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.20120129727642538;  // std dev = 2,441, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else if ( tempadvisedby(N, B), publication(P, N) )
%   | | | then return -0.17540978199652024;  // std dev = 1,195, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10252268969932264;  // std dev = 3,887, 70,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=37 */
%   else return -0.09269127618926093;  // std dev = 4,94e-08, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( ta(H, F, I), publication(G, B) )
%   | | | then return 0.2721805881214769;  // std dev = 0,044, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.008111278432419208;  // std dev = 2,520, 39,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.3549585993926356;  // std dev = 0,994, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.20116249513202908;  // std dev = 3,307, 63,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=46 */
%   | else if ( publication(M, A), publication(N, B) )
%   | | then return 0.16764295727737374;  // std dev = 0,851, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(P, A, Q), publication(R, B) )
%   | | | then return 0.18325285779742698;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16891312429257815;  // std dev = 1,515, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( ta(S, A, T) )
%   | then return -0.09565438031238441;  // std dev = 0,065, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.08085196071906643;  // std dev = 0,053, 149,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.17038528417518525;  // std dev = 0,911, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2529491051047481;  // std dev = 0,123, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( publication(D, G), ta(H, G, I) )
%   | | | then return 0.19036978618269804;  // std dev = 1,802, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.04025902081307627;  // std dev = 2,030, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( projectmember(J, B) )
%   | | then if ( publication(K, A) )
%   | | | then return 0.21070819179168607;  // std dev = 0,898, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06042504320286214;  // std dev = 1,009, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.24443958205175015;  // std dev = 2,330, 47,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return 0.5430252934033236;  // std dev = 0,158, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07879275258510131;  // std dev = 0,006, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.29874129901172314;  // std dev = 0,161, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14699608136981038;  // std dev = 1,347, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.2860961754892381;  // std dev = 0,878, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.15528148772897085;  // std dev = 3,060, 92,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=74 */
%   | else if ( ta(J, A, K) )
%   | | then if ( publication(L, A) )
%   | | | then return -0.22827047671667575;  // std dev = 1,088, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.3952100365693686;  // std dev = 0,840, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(M, B), publication(N, A) )
%   | | | then return -0.10552621327624179;  // std dev = 0,988, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.25470479192492784;  // std dev = 1,218, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07330852543510767;  // std dev = 0,005, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( projectmember(F, B) )
%   | | then if ( ta(G, E, H), sameperson(B, D) )
%   | | | then return 0.13613455955833648;  // std dev = 0,728, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4482382577099022;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A), publication(I, E) )
%   | | | then return -0.08085816970613198;  // std dev = 1,013, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08887838737163266;  // std dev = 3,965, 120,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=92 */
%   | else if ( ta(J, A, K), publication(L, B) )
%   | | then return 0.09703679354570098;  // std dev = 0,955, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.08139352126160086;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.29547671816171833;  // std dev = 1,173, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( student(B) )
%   | then return -0.06848654000245295;  // std dev = 0,005, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else return -0.10753814448346459;  // std dev = 0,184, 25,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( student(A), publication(C, A) )
%   | then return 0.15151976614460172;  // std dev = 0,160, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return -0.1564447747524523;  // std dev = 0,438, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.019580500655602025;  // std dev = 2,018, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return -0.0904028211974216;  // std dev = 2,235, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.17257159270957034;  // std dev = 1,957, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   else if ( tempadvisedby(K, B) )
%   | then if ( ta(L, A, M), projectmember(N, B) )
%   | | then return -0.40535414318319574;  // std dev = 0,853, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(P, K, Q) )
%   | | | then return 0.05986017888940748;  // std dev = 0,898, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16448469743044114;  // std dev = 1,568, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.05710887792256482;  // std dev = 0,102, 178,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=5 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(H, B).;false;false
0;true,false;publication(D, A), publication(E, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(D, F), professor(F).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false,false;ta(G, A, H).;false;false
1;true,false;publication(D, A), publication(E, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), ta(L, K, M).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;tempadvisedby(I, B), publication(J, A).;true;true
2;true,true,false;ta(G, A, H).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;publication(D, A).;false;false
3;true;publication(C, A), publication(D, B).;true;true
3;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
3;true,false,true;publication(I, F).;false;false
3;true,true;publication(C, E), professor(E).;true;false
3;true,false,false;publication(J, A), projectmember(K, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;ta(L, M, K), publication(I, M).;false;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,false;publication(I, B), ta(J, A, K).;true;true
4;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
4;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
4;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true,true;ta(H, F, I), publication(G, B).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,false;publication(M, A), publication(N, B).;false;true
5;true,true,false;tempadvisedby(J, B), ta(K, J, L).;false;false
5;false;ta(S, A, T).;false;false
5;true,true;tempadvisedby(F, B), publication(G, A).;true;true
5;true,false,false;ta(P, A, Q), publication(R, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;ta(E, A, F).;false;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,false;projectmember(J, B).;true;true
6;true,true,false;publication(D, G), ta(H, G, I).;false;false
6;true,true;publication(D, A).;true;true
6;true,false,true;publication(K, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,true;ta(E, D, F).;false;false
7;true;publication(C, B).;true;true
7;true,false;ta(J, A, K).;true;true
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,false,false;tempadvisedby(M, B), publication(N, A).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;ta(G, E, H), sameperson(B, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,false;ta(J, A, K), publication(L, B).;false;true
8;true,true,false;publication(I, A), publication(I, E).;false;false
8;false;student(B).;false;false
8;true,true;projectmember(F, B).;true;true
8;true,false,false;publication(M, A).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true,false,true;tempadvisedby(E, B), ta(F, E, G).;false;false
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A).;true;true
9;false,true,false;ta(P, K, Q).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
9;false,true;ta(L, A, M), projectmember(N, B).;false;true
9;false;tempadvisedby(K, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7,88e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3,49e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,67e-09, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6,50e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1727045201398631;  // std dev = 0,033, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then return 0.14115132576994543;  // std dev = 0,404, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4,71e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13587289472109193;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.08925952320898092;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066948
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.387 seconds
Total inference time: 2.729 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.574 seconds
Parameter learned model CLL: -0.064482


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [7.3e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 56], 'false': [7.88e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)'}, {'true,true,true,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 100, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [5.67e-09, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(C, D)'}, {'true,true,false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 112, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.033, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'false': 'actor(B)'}, {'true,true,true': [0.404, 3, 56], 'true,true,false': [0.0, 0, 0], 'false,true': [4.71e-08, 99, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.014, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.37e-08, 0, 56], 'false': [0.0, 97, 0]}]]
[{'': [0.04826199367997677, 4.674623261579606e-17], 'true,false,true': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.044419605220055364, -6.00120553851436e-18], 'true,false,true': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.021515213257540407, 6.280049432223107e-17], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [1.9032394707859825e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.013005405691145715, -1.1789979022568034e-17], 'true,true,true': [-3.489272363107635e-16, -1.1564823173178713e-18], 'true': [0.013005405691145715, nan], 'true,true': [0.013005405691145715, nan]}, {'': [0.014938376650555559, 1.2212453270876722e-17], 'true,false,true': [1.1564823173178713e-18, nan], 'true': [-1.2688263138573217e-16, 1.1564823173178713e-18], 'true,true': [-1.2688263138573217e-16, nan], 'true,false': [1.1564823173178713e-18, nan]}, {'': [0.0038568379707602193, 3.112774835397635e-17], 'true,true,true': [-3.172065784643304e-17, 0.0], 'true': [0.0038568379707602193, nan], 'true,true': [0.0038568379707602193, nan]}, {'': [0.004017914282903511, 3.766828119263924e-17], 'true': [0.004017914282903511, nan], 'true,true': [-1.586032892321652e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0010802101680417507, -5.1879580589960584e-18], 'true': [0.0010802101680417507, nan], 'true,true': [0.0010802101680417507, nan]}, {'': [0.002760965700327928, 2.3314683517128286e-17], 'true': [0.002760965700327928, nan], 'true,true': [0.002760965700327928, nan], 'false': [2.2428747972225384e-17, 0.0]}, {'': [0.003167672987241569, -1.48792776496155e-17], 'true': [5.15460690004537e-17, 0.00020946291245113602], 'true,false': [0.00020946291245113602, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360618;  // std dev = 8,69e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.38171290045857575;  // std dev = 0,132, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.4175135841583101;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32449615086723027;  // std dev = 0,029, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14542253159604965;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926105;  // std dev = 2,36e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25775689259741286;  // std dev = 0,026, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1282655521800062;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4,59e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.2146779773592247;  // std dev = 3,33e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.11188921481890401;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.17831016381622405;  // std dev = 0,094, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 6,58e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18069695234513972;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16040812887157072;  // std dev = 0,078, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.07324622576333707;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15689800535417195;  // std dev = 0,010, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14586426313857526;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4,89e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13596360371867844;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13843236316081775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.13133036552096675;  // std dev = 0,029, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069808
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.703 seconds
Total inference time: 2.913 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065168
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.552 seconds
Refined model CLL: -0.065168


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066948
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.216000000000001 seconds
Total inference time: 2.729 seconds
AUC ROC: 1.0
Total revision time: 6.216000000000001
Best scored revision CLL: -0.064482


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:40:48
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.387, 'Inference time': 2.729, 'CLL': -0.066948, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 6.216000000000001, 'Inference time': 2.729, 'CLL': -0.066948, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(H, B).;false;false
0;true,false;publication(D, A), publication(E, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(D, F), professor(F).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false,false;ta(G, A, H).;false;false
1;true,false;publication(D, A), publication(E, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), ta(L, K, M).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;tempadvisedby(I, B), publication(J, A).;true;true
2;true,true,false;ta(G, A, H).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;publication(D, A).;false;false
3;true;publication(C, A), publication(D, B).;true;true
3;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
3;true,false,true;publication(I, F).;false;false
3;true,true;publication(C, E), professor(E).;true;false
3;true,false,false;publication(J, A), projectmember(K, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;ta(L, M, K), publication(I, M).;false;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,false;publication(I, B), ta(J, A, K).;true;true
4;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
4;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
4;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true,true;ta(H, F, I), publication(G, B).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,false;publication(M, A), publication(N, B).;false;true
5;true,true,false;tempadvisedby(J, B), ta(K, J, L).;false;false
5;false;ta(S, A, T).;false;false
5;true,true;tempadvisedby(F, B), publication(G, A).;true;true
5;true,false,false;ta(P, A, Q), publication(R, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;ta(E, A, F).;false;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,false;projectmember(J, B).;true;true
6;true,true,false;publication(D, G), ta(H, G, I).;false;false
6;true,true;publication(D, A).;true;true
6;true,false,true;publication(K, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,true;ta(E, D, F).;false;false
7;true;publication(C, B).;true;true
7;true,false;ta(J, A, K).;true;true
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,false,false;tempadvisedby(M, B), publication(N, A).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;ta(G, E, H), sameperson(B, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,false;ta(J, A, K), publication(L, B).;false;true
8;true,true,false;publication(I, A), publication(I, E).;false;false
8;false;student(B).;false;false
8;true,true;projectmember(F, B).;true;true
8;true,false,false;publication(M, A).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true,false,true;tempadvisedby(E, B), ta(F, E, G).;false;false
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A).;true;true
9;false,true,false;ta(P, K, Q).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
9;false,true;ta(L, A, M), projectmember(N, B).;false;true
9;false;tempadvisedby(K, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,29e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0,000, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 5,96e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,67e-09, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6,50e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16094535429310872;  // std dev = 0,062, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333709;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then return 0.14305253710189306;  // std dev = 0,405, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5,77e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13703449166814874;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.09675050127516913;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.345 seconds
Total inference time: 2.516 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.509 seconds
Parameter learned model CLL: -0.064876


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [8.69e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.29e-08, 0, 58], 'false': [7.15e-08, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)'}, {'true,true,true,false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 135, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 115, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [5.67e-09, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(C, D)'}, {'true,true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.062, 4, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'false': 'actor(B)'}, {'true,true,true': [0.405, 3, 58], 'true,true,false': [0.0, 0, 0], 'false,true': [5.77e-08, 122, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 108, 0]}]]
[{'': [0.07306626354245364, 7.783006770568107e-17], 'true,false,true': [-2.7755575615628915e-18, nan], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.052161020059183986, -1.3322676295501878e-17], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.042839038720619955, 5.803438537813318e-17], 'true,false,true': [-1.982541115402065e-18, nan], 'true': [2.4501473646900006e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.01626384593324757, -4.2764146133709734e-17], 'true,true,true': [-3.3689526264487507e-16, 0.0], 'true': [0.01626384593324757, nan], 'true,true': [0.01626384593324757, nan]}, {'': [0.010314593401574014, 3.089316242435218e-17], 'true,false,true': [0.0, nan], 'true': [-1.5313421029312505e-16, 0.0], 'true,true': [-1.5313421029312505e-16, nan], 'true,false': [0.0, nan]}, {'': [0.008464206643349464, 3.112774835397635e-17], 'true,true,true': [-3.062684205862501e-17, 0.0], 'true': [0.008464206643349464, nan], 'true,true': [0.008464206643349464, nan]}, {'': [0.002682568974502808, 3.7334933571465444e-17], 'true': [0.002682568974502808, nan], 'true,true': [-2.2970131543968756e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.003782461804781654, -3.6104813808948184e-18], 'true': [0.003782461804781654, nan], 'true,true': [0.003782461804781654, nan]}, {'': [0.002688887466289511, 2.7755575615628914e-17], 'true': [0.002688887466289511, nan], 'true,true': [0.002688887466289511, nan], 'false': [2.7300566179307128e-17, 0.0]}, {'': [0.003993467535499381, -1.644774851296528e-17], 'true': [-1.914177628664063e-17, 0.0], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839133;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684195;  // std dev = 0,149, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.3915580884760029;  // std dev = 0,113, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1,49e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3280084230797571;  // std dev = 0,017, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14266458660220144;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926087;  // std dev = 6,99e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.24439186138191055;  // std dev = 0,082, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.2488525163751185;  // std dev = 0,061, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18448473698113085;  // std dev = 0,107, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.17861611229864566;  // std dev = 0,109, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 5,87e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18646298086716412;  // std dev = 0,011, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18120814695690463;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 4,83e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1598131066005917;  // std dev = 0,010, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15535058505331747;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5,77e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14106509764533598;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13867963731699215;  // std dev = 4,17e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.12416928468259765;  // std dev = 0,026, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 2,24e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069788
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.664 seconds
Total inference time: 2.851 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.583 seconds
Refined model CLL: -0.066682


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.101 seconds
Total inference time: 2.516 seconds
AUC ROC: 1.0
Total revision time: 6.101
Best scored revision CLL: -0.064876


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:41:01
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.345, 'Inference time': 2.516, 'CLL': -0.066732, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 6.101, 'Inference time': 2.516, 'CLL': -0.066732, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(H, B).;false;false
0;true,false;publication(D, A), publication(E, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(D, F), professor(F).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false,false;ta(G, A, H).;false;false
1;true,false;publication(D, A), publication(E, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), ta(L, K, M).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;tempadvisedby(I, B), publication(J, A).;true;true
2;true,true,false;ta(G, A, H).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;publication(D, A).;false;false
3;true;publication(C, A), publication(D, B).;true;true
3;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
3;true,false,true;publication(I, F).;false;false
3;true,true;publication(C, E), professor(E).;true;false
3;true,false,false;publication(J, A), projectmember(K, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;ta(L, M, K), publication(I, M).;false;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,false;publication(I, B), ta(J, A, K).;true;true
4;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
4;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
4;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true,true;ta(H, F, I), publication(G, B).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,false;publication(M, A), publication(N, B).;false;true
5;true,true,false;tempadvisedby(J, B), ta(K, J, L).;false;false
5;false;ta(S, A, T).;false;false
5;true,true;tempadvisedby(F, B), publication(G, A).;true;true
5;true,false,false;ta(P, A, Q), publication(R, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;ta(E, A, F).;false;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,false;projectmember(J, B).;true;true
6;true,true,false;publication(D, G), ta(H, G, I).;false;false
6;true,true;publication(D, A).;true;true
6;true,false,true;publication(K, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,true;ta(E, D, F).;false;false
7;true;publication(C, B).;true;true
7;true,false;ta(J, A, K).;true;true
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,false,false;tempadvisedby(M, B), publication(N, A).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;ta(G, E, H), sameperson(B, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,false;ta(J, A, K), publication(L, B).;false;true
8;true,true,false;publication(I, A), publication(I, E).;false;false
8;false;student(B).;false;false
8;true,true;projectmember(F, B).;true;true
8;true,false,false;publication(M, A).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true,false,true;tempadvisedby(E, B), ta(F, E, G).;false;false
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A).;true;true
9;false,true,false;ta(P, K, Q).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
9;false,true;ta(L, A, M), projectmember(N, B).;false;true
9;false;tempadvisedby(K, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048804;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360686;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09269127618926107;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892606;  // std dev = 5,58e-08, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.2551722425694898;  // std dev = 4,21e-08, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.0851847513883968;  // std dev = 2,24e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04071143751123293;  // std dev = 0,115, 375,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.2244106222746752;  // std dev = 0,024, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.08027154319227364;  // std dev = 0,012, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08206528934569207;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11310299582530751;  // std dev = 0,120, 249,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07609150443718703;  // std dev = 0,000, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then return 0.10678132496293391;  // std dev = 1,276, 165,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0709117278727204;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0.05535634860863599;  // std dev = 1,421, 104,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15885712233762672;  // std dev = 0,290, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.08330478231555108;  // std dev = 0,007, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06637963128444438;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066781
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.083 seconds
Total inference time: 2.139 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.773 seconds
Parameter learned model CLL: -0.072635


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [6.83e-08, 69, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.09e-06, 0, 178], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 66, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'false': [0.0, 298, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [3.49e-08, 53, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [4.41e-08, 0, 178], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)'}, {'true,true,true,false': [2.98e-08, 50, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [3.77e-07, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 308, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)'}, {'true,true,true': [3.58e-07, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 319, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)'}, {'true,true,true,false': [2.24e-08, 36, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.21e-08, 0, 129], 'true,false': [0.0, 0, 0], 'false': [0.115, 326, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(C, D)'}, {'true,true,false,true': [0.012, 55, 0], 'true,true,true': [0.024, 0, 178], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.12, 71, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'false': 'actor(B)'}, {'true,true,true': [1.276, 36, 129], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 245, 0], 'true,false': [0.0, 0, 0], 'false,false': [1.421, 55, 49]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.007, 93, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.29, 0, 178], 'false': [0.0, 286, 0]}]]
[{'': [0.20131456014686921, -5.419393747322798e-17], 'true,false,true': [6.75787928032704e-17, nan], 'true': [6.706246045376226e-15, 6.75787928032704e-17], 'true,false': [6.75787928032704e-17, nan]}, {'': [0.14086836113344384, -5.960928991276008e-17], 'true,false,true': [-3.700743415417188e-17, nan], 'true': [-3.193450497798203e-15, -3.700743415417188e-17], 'true,false': [-3.700743415417188e-17, nan]}, {'': [0.07881562227933359, -9.464196275493137e-17], 'true,false,true': [2.3042364662031552e-17, nan], 'true': [1.9559884299013994e-15, 2.3042364662031552e-17], 'true,false': [2.3042364662031552e-17, nan]}, {'': [0.046135895886557844, -5.3348379105364664e-17], 'true,true,true': [7.983626244495507e-16, 1.7763568394002505e-17], 'true': [0.046135895886557844, nan], 'true,true': [0.046135895886557844, nan]}, {'': [0.032486396633908086, 9.744904291380684e-18], 'true,false,true': [-1.820037745287142e-18, nan], 'true': [7.185263620045957e-16, -1.820037745287142e-18], 'true,true': [7.185263620045957e-16, nan], 'true,false': [-1.820037745287142e-18, nan]}, {'': [0.019760306711207026, 0.013158927775360346], 'true,true,true': [1.3770208057366282e-17, 1.3877787807814457e-17], 'true': [0.019760306711207026, nan], 'true,true': [0.019760306711207026, nan]}, {'': [0.017172820196042243, -1.601633215852685e-17], 'true': [0.017172820196042243, nan], 'true,true': [0.000565250812758813, 2.681271052424277e-06], 'true,true,false': [2.681271052424277e-06, nan]}, {'': [0.014331033417573058, -3.0576634120823985e-17], 'true': [0.014331033417573058, nan], 'true,true': [0.014331033417573058, nan]}, {'': [0.009860701519093549, 0.009124817197164573], 'true': [0.009860701519093549, nan], 'true,true': [0.009860701519093549, nan], 'false': [-3.6252180395923476e-17, 0.019428263168060518]}, {'': [0.013546574560651227, -4.0371746350005693e-17], 'true': [0.00047268473936454064, 5.184001186743548e-05], 'true,false': [5.184001186744145e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048824;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283918;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360685;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.28664553870129916;  // std dev = 0,225, 119,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=89 */
%   | | else return 0.29668627667170777;  // std dev = 0,219, 116,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0,000, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.34872442201223586;  // std dev = 0,015, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1315019329376558;  // std dev = 0,004, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926067;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.16669116255017666;  // std dev = 0,175, 65,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | | else return 0.20938810822607343;  // std dev = 0,144, 98,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2752077600325822;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.11665773087610477;  // std dev = 1,18e-08, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.27320947667795;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.08765215367823478;  // std dev = 0,129, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1542630898031715;  // std dev = 0,148, 115,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=89 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.23277135363737902;  // std dev = 0,029, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.12126160473087114;  // std dev = 0,092, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07863943593882673;  // std dev = 0,001, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20068389141244372;  // std dev = 0,127, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12401990853418321;  // std dev = 0,150, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07313048171757885;  // std dev = 0,001, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1719154523644681;  // std dev = 0,103, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12739031091016592;  // std dev = 0,070, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(B) )
%   | then return -0.06832978712572178;  // std dev = 0,001, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.16650898830645244;  // std dev = 0,029, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06844311102751273;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08373703239694136;  // std dev = 0,113, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14767215586646665;  // std dev = 0,099, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0900297193254665;  // std dev = 0,232, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return -0.06410260319805175;  // std dev = 0,001, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065565
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.37 seconds
Total inference time: 2.46 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071938
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.674 seconds
Refined model CLL: -0.071938


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065565
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.9 seconds
Total inference time: 2.46 seconds
AUC ROC: 1.0
Total revision time: 7.9
Best scored revision CLL: -0.071938


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:41:14
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.083, 'Inference time': 2.139, 'CLL': -0.066781, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 7.9, 'Inference time': 2.46, 'CLL': -0.065565, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(H, B).;false;false
0;true,false;publication(D, A), publication(E, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(D, F), professor(F).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false,false;ta(G, A, H).;false;false
1;true,false;publication(D, A), publication(E, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), ta(L, K, M).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;tempadvisedby(I, B), publication(J, A).;true;true
2;true,true,false;ta(G, A, H).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;publication(D, A).;false;false
3;true;publication(C, A), publication(D, B).;true;true
3;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
3;true,false,true;publication(I, F).;false;false
3;true,true;publication(C, E), professor(E).;true;false
3;true,false,false;publication(J, A), projectmember(K, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;ta(L, M, K), publication(I, M).;false;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,false;publication(I, B), ta(J, A, K).;true;true
4;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
4;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
4;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true,true;ta(H, F, I), publication(G, B).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,false;publication(M, A), publication(N, B).;false;true
5;true,true,false;tempadvisedby(J, B), ta(K, J, L).;false;false
5;false;ta(S, A, T).;false;false
5;true,true;tempadvisedby(F, B), publication(G, A).;true;true
5;true,false,false;ta(P, A, Q), publication(R, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;ta(E, A, F).;false;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,false;projectmember(J, B).;true;true
6;true,true,false;publication(D, G), ta(H, G, I).;false;false
6;true,true;publication(D, A).;true;true
6;true,false,true;publication(K, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,true;ta(E, D, F).;false;false
7;true;publication(C, B).;true;true
7;true,false;ta(J, A, K).;true;true
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,false,false;tempadvisedby(M, B), publication(N, A).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;ta(G, E, H), sameperson(B, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,false;ta(J, A, K), publication(L, B).;false;true
8;true,true,false;publication(I, A), publication(I, E).;false;false
8;false;student(B).;false;false
8;true,true;projectmember(F, B).;true;true
8;true,false,false;publication(M, A).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true,false,true;tempadvisedby(E, B), ta(F, E, G).;false;false
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A).;true;true
9;false,true,false;ta(P, K, Q).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
9;false,true;ta(L, A, M), projectmember(N, B).;false;true
9;false;tempadvisedby(K, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 3,36e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,28e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1433965157345025;  // std dev = 0,085, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then return 0.133081092138502;  // std dev = 0,511, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3,87e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14032155817750194;  // std dev = 1,49e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.0943720530887393;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066492
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.317 seconds
Total inference time: 2.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065677
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.453 seconds
Parameter learned model CLL: -0.065677


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [8.16e-08, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 79, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [6.83e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)'}, {'true,true,true,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [5.05e-08, 90, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)'}, {'true,true,true': [2.98e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 61, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [3.36e-09, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(C, D)'}, {'true,true,false,true': [0.0, 6, 0], 'true,true,true': [7.9e-09, 0, 45], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.28e-08, 78, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.085, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'false': 'actor(B)'}, {'true,true,true': [0.511, 5, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [3.87e-08, 85, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 45], 'false': [0.0, 92, 0]}]]
[{'': [0.09000000000000079, 7.569702440626067e-17], 'true,false,true': [-2.7755575615628915e-18, nan], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.0831635545216455, -2.5296220814244072e-17], 'true,false,true': [-1.982541115402065e-18, nan], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.009480631078200644, 5.181040781584064e-17], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.024252759220113572, 2.837236618486511e-17], 'true,true,true': [-4.144832625267251e-16, 0.0], 'true': [0.024252759220113572, nan], 'true,true': [0.024252759220113572, nan]}, {'': [0.01774070682301534, 0.0], 'true,false,true': [1.1564823173178713e-18, nan], 'true': [1.973729821555834e-17, 1.1564823173178713e-18], 'true,true': [1.973729821555834e-17, nan], 'true,false': [1.1564823173178713e-18, nan]}, {'': [0.006787668945471587, 1.1895246692412391e-17], 'true,true,true': [-2.960594732333751e-17, 0.0], 'true': [0.006787668945471587, nan], 'true,true': [0.006787668945471587, nan]}, {'': [0.008642090718479508, 2.348548705937831e-17], 'true': [0.008642090718479508, nan], 'true,true': [6.908054375445419e-17, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.007300856491242112, -4.3175339846533866e-18], 'true': [0.007300856491242112, nan], 'true,true': [0.007300856491242112, nan]}, {'': [0.005216540169493267, 1.763295392051719e-17], 'true': [0.005216540169493267, nan], 'true,true': [0.005216540169493267, nan], 'false': [1.763295392051719e-17, nan]}, {'': [0.0041293612704931875, -1.2671023650613199e-17], 'true': [4.934324553889585e-18, 0.0], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 5,58e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926104;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.22680915973966553;  // std dev = 0,094, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.2193451905739226;  // std dev = 0,104, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21545007388521817;  // std dev = 0,004, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10420511459395251;  // std dev = 0,000913, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5,58e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18126050187093293;  // std dev = 0,003, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09470342101349649;  // std dev = 0,000585, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15589542404818876;  // std dev = 0,003, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08687567817488;  // std dev = 0,000549, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420265;  // std dev = 4,21e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13646265083891304;  // std dev = 0,003, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08014793744476986;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202626;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.431 seconds
Total inference time: 2.583 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064789
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.167 seconds
Refined model CLL: -0.064789


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.368 seconds
Total inference time: 2.583 seconds
AUC ROC: 1.0
Total revision time: 5.368
Best scored revision CLL: -0.064789


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:41:25
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.317, 'Inference time': 2.855, 'CLL': -0.066492, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.368, 'Inference time': 2.583, 'CLL': -0.065189, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;tempadvisedby(F, B), publication(G, F).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(H, B).;false;false
0;true,false;publication(D, A), publication(E, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(D, F), professor(F).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false,false;ta(G, A, H).;false;false
1;true,false;publication(D, A), publication(E, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), ta(L, K, M).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;tempadvisedby(I, B), publication(J, A).;true;true
2;true,true,false;ta(G, A, H).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;publication(D, A).;false;false
3;true;publication(C, A), publication(D, B).;true;true
3;true,false;tempadvisedby(F, B), ta(G, F, H).;true;true
3;true,false,true;publication(I, F).;false;false
3;true,true;publication(C, E), professor(E).;true;false
3;true,false,false;publication(J, A), projectmember(K, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;ta(L, M, K), publication(I, M).;false;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,false;publication(I, B), ta(J, A, K).;true;true
4;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
4;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
4;true,false,false;tempadvisedby(N, B), publication(P, N).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true,true;ta(H, F, I), publication(G, B).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,false;publication(M, A), publication(N, B).;false;true
5;true,true,false;tempadvisedby(J, B), ta(K, J, L).;false;false
5;false;ta(S, A, T).;false;false
5;true,true;tempadvisedby(F, B), publication(G, A).;true;true
5;true,false,false;ta(P, A, Q), publication(R, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;ta(E, A, F).;false;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,false;projectmember(J, B).;true;true
6;true,true,false;publication(D, G), ta(H, G, I).;false;false
6;true,true;publication(D, A).;true;true
6;true,false,true;publication(K, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,true;ta(E, D, F).;false;false
7;true;publication(C, B).;true;true
7;true,false;ta(J, A, K).;true;true
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,false,false;tempadvisedby(M, B), publication(N, A).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;ta(G, E, H), sameperson(B, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,false;ta(J, A, K), publication(L, B).;false;true
8;true,true,false;publication(I, A), publication(I, E).;false;false
8;false;student(B).;false;false
8;true,true;projectmember(F, B).;true;true
8;true,false,false;publication(M, A).;false;false
9;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
9;true,false,true;tempadvisedby(E, B), ta(F, E, G).;false;false
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A).;true;true
9;false,true,false;ta(P, K, Q).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
9;false,true;ta(L, A, M), projectmember(N, B).;false;true
9;false;tempadvisedby(K, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 5,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04264012714366103;  // std dev = 0,113, 80,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.22166947666483597;  // std dev = 0,022, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.08916700090836957;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08192011710507008;  // std dev = 6,14e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15470207894369528;  // std dev = 0,087, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07596621509139852;  // std dev = 1,05e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, F) )
%   | | then return 0.14088712726137279;  // std dev = 0,336, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07080255611555832;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.14842127576660344;  // std dev = 0,377, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14506070359837409;  // std dev = 0,106, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.10451920555517182;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06628369549634437;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069328
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.207 seconds
Total inference time: 2.743 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067351
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.372 seconds
Parameter learned model CLL: -0.067351


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [7.6e-08, 78, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [7.74e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)'}, {'true,true,true,false': [2.63e-09, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [5.05e-08, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B)'}, {'true,true,true': [2.98e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)'}, {'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 35], 'true,false': [0.0, 0, 0], 'false': [0.113, 70, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(C, D)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.022, 0, 45], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 99, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.087, 6, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 79, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, F)', 'false': 'actor(B)'}, {'true,true,true': [0.336, 2, 35], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 96, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.377, 2, 10]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.003, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.106, 0, 45], 'false': [0.0, 89, 0]}]]
[{'': [0.04074241738343243, 7.401486830834377e-17], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [-9.473903143468002e-16, -2.2204460492503132e-17], 'true': [-9.473903143468002e-16, nan]}, {'': [0.059402399173370445, 6.310741403132469e-17], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016448425137060203, 2.8060581941075384e-17], 'true,true,true': [-4.144832625267251e-16, 2.3129646346357427e-18], 'true': [0.016448425137060203, nan], 'true,true': [0.016448425137060203, nan]}, {'': [0.007266173673941729, 0.0], 'true,false,true': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,true': [1.973729821555834e-17, nan], 'true,false': [0.0, nan]}, {'': [0.006187459414043345, 0.012670315364880355], 'true,true,true': [-1.2688263138573217e-17, 0.0], 'true': [0.006187459414043345, nan], 'true,true': [0.006187459414043345, nan]}, {'': [0.002540577802106794, 3.812887155278315e-17], 'true': [0.002540577802106794, nan], 'true,true': [0.0004966151781172299, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0076300221039723075, 1.4053456007913374e-18], 'true': [0.0076300221039723075, nan], 'true,true': [0.0076300221039723075, nan]}, {'': [0.003057645925175713, 0.006059382016523634], 'true': [0.003057645925175713, nan], 'true,true': [0.003057645925175713, nan], 'false': [-1.6768993601109134e-17, 0.011815248401958753]}, {'': [0.0038839540685877555, -1.6840461609482713e-17], 'true': [0.0002493143696932999, 6.551689730523169e-06], 'true,false': [6.551689730523169e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- movie(C, B), director(B).;true;true
9;true;actor(A), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3406084117662882;  // std dev = 0,184, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0.3742544246877977;  // std dev = 0,143, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3340332072763031;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1391846504251388;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.2458351774933766;  // std dev = 0,089, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.2405851800941875;  // std dev = 0,086, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5,77e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( female(A) )
%   | | then return 0.1702048563713371;  // std dev = 0,168, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.2609037836794944;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2103117320777289;  // std dev = 0,073, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.1856180402316746;  // std dev = 0,103, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109169;  // std dev = 3,41e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.188916329725906;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17952452099862626;  // std dev = 0,000445, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07385848459718845;  // std dev = 0,038, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.16048868243624703;  // std dev = 0,001, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.15450267611048232;  // std dev = 0,000484, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06838795988336878;  // std dev = 3,65e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( female(A) )
%   | | then return 0.09224642077555209;  // std dev = 0,137, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.15753100429259548;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14228652637843398;  // std dev = 0,043, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14601822446642077;  // std dev = 0,015, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0641574133890475;  // std dev = 2,11e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.551 seconds
Total inference time: 2.371 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.251 seconds
Refined model CLL: -0.067118


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.381 seconds
Total inference time: 2.371 seconds
AUC ROC: 1.0
Total revision time: 5.381
Best scored revision CLL: -0.067118


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:41:37
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.207, 'Inference time': 2.743, 'CLL': -0.069328, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.381, 'Inference time': 2.371, 'CLL': -0.071138, 'AUC PR': 1.0, 'Recall': 1.0}


