Starting experiment #3 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.21529179224236947;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.7126943896449669;  // std dev = 2,615, 55,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | | else return 0.39148226843284567;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else return -0.14185106490048827;  // std dev = 0,000, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4694734122109545;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.7194734122109546;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return -0.17871698488436277;  // std dev = 0,081, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.278262397512079;  // std dev = 2,325, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( ta(N, A, P), tempadvisedby(Q, B) )
%   | | | then return 0.3570509647029981;  // std dev = 2,707, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.6071883443168937;  // std dev = 2,580, 51,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=43 */
%   else return -0.12544463852839158;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B), publication(C, B) )
%   | | then return 0.5773954998510263;  // std dev = 0,097, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.13452604107038815;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4850730163005542;  // std dev = 1,512, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.04833515312588895;  // std dev = 2,270, 27,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.3414488715052113;  // std dev = 4,093, 79,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=55 */
%   else return -0.11231637819360635;  // std dev = 2,98e-08, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.7037934666834703;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.593912865469576;  // std dev = 0,068, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(E, F), tempadvisedby(F, B) )
%   | | | then return 0.051267218332257156;  // std dev = 1,107, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.42366372157381244;  // std dev = 0,133, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.35058147491370156;  // std dev = 2,843, 45,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | | | else return 0.18843868948854886;  // std dev = 3,356, 52,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   else return -0.10159632948783644;  // std dev = 0,000, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, E), publication(G, F) )
%   | | then if ( sameperson(A, F) )
%   | | | then return 0.28149883836088374;  // std dev = 1,630, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.2871969454736605;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.5034896440370246;  // std dev = 0,058, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4080950306800937;  // std dev = 0,935, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( publication(K, B), publication(K, A) )
%   | | then return 0.3224351745653707;  // std dev = 0,084, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | then return 0.007227260335436349;  // std dev = 2,413, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.15177963920890403;  // std dev = 3,177, 45,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   else return -0.09269127618926097;  // std dev = 0,000, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.5028573282407348;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.400679403362689;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.20574435140499645;  // std dev = 2,236, 37,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.03369598687217882;  // std dev = 2,969, 54,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | else if ( ta(H, A, I), publication(J, A) )
%   | | | then return -0.021518694967749302;  // std dev = 1,588, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.2633721169199674;  // std dev = 2,258, 46,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   else return -0.08518475138839678;  // std dev = 6,99e-08, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( ta(E, C, F), publication(G, A) )
%   | | then return 0.17433518773027326;  // std dev = 0,201, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(H, A), ta(I, A, J) )
%   | | | then return -0.2870015677045929;  // std dev = 1,155, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02766570069157368;  // std dev = 1,403, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( ta(K, A, L), publication(M, B) )
%   | | then if ( ta(N, P, L), publication(M, P) )
%   | | | then return 0.3216131456542264;  // std dev = 0,439, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.09936590906021767;  // std dev = 2,268, 31,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | else if ( tempadvisedby(Q, B) )
%   | | | then return 0.1412905164146803;  // std dev = 2,541, 43,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=30 */
%   | | | else return 0.03843170754679068;  // std dev = 2,867, 44,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   else return -0.07877675473109158;  // std dev = 6,99e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), tempadvisedby(E, B) )
%   | then if ( publication(D, A) )
%   | | then if ( ta(F, A, G), publication(H, E) )
%   | | | then return 0.33836877667723364;  // std dev = 0,180, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17959936033119905;  // std dev = 0,890, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.13048337731973547;  // std dev = 1,329, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.08096535917453515;  // std dev = 2,808, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | else if ( hasposition(J, C), tempadvisedby(K, J) )
%   | | then if ( publication(L, B), publication(L, J) )
%   | | | then return 0.24044477575165352;  // std dev = 1,663, 37,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return 0.09004179815935362;  // std dev = 1,741, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( publication(M, B) )
%   | | | then return -0.03466591781947276;  // std dev = 1,293, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.26294570074631485;  // std dev = 0,804, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07275468359213848;  // std dev = 0,049, 192,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.17642219684286267;  // std dev = 0,119, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.3163162252574331;  // std dev = 0,210, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( ta(D, A, H) )
%   | | | then return -0.33441059343048146;  // std dev = 0,787, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2704960459199445;  // std dev = 1,292, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.06743388593074058;  // std dev = 1,309, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.17966284214139308;  // std dev = 0,077, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( publication(K, B) )
%   | | | then return -0.047452747507895555;  // std dev = 3,818, 72,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return 0.14508249293287612;  // std dev = 1,641, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.06845831771318642;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), ta(E, A, F) )
%   | then if ( tempadvisedby(G, B), publication(H, G) )
%   | | then return 0.2730911488234999;  // std dev = 0,178, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(I, J, F), publication(D, J) )
%   | | | then return 0.21696502740959256;  // std dev = 0,433, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.12946220407592715;  // std dev = 1,896, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | else if ( hasposition(K, C), tempadvisedby(L, K) )
%   | | then if ( publication(M, A), publication(M, B) )
%   | | | then return 0.16629890499138664;  // std dev = 0,110, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.003846334850195161;  // std dev = 3,490, 62,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | | else if ( publication(N, B) )
%   | | | then return -0.3429871545749849;  // std dev = 0,639, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.024530548395690178;  // std dev = 1,017, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( professor(B), publication(P, A) )
%   | then return -0.08970465361591565;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06443756961619691;  // std dev = 0,056, 172,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=1 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(I, A), publication(J, B).;true;true
1;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), ta(D, A, E).;true;true
2;true,false;publication(J, B), publication(J, A).;false;true
2;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
2;true,true;tempadvisedby(F, B), publication(C, B).;false;true
2;true,false,false;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(E, F), tempadvisedby(F, B).;false;false
3;true;projectmember(C, B).;true;true
3;true,false;publication(E, A), publication(E, B).;true;true
3;true,true;publication(D, A).;false;false
3;true,false,false;ta(G, A, H).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;sameperson(A, F).;false;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,false;publication(K, B), publication(K, A).;false;true
4;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,true;ta(D, F, E), publication(G, F).;true;true
4;true,false,false;tempadvisedby(L, B), publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;ta(F, A, G).;false;false
5;true;projectmember(C, B).;true;true
5;true,false;tempadvisedby(E, B).;true;true
5;true,true;publication(D, A).;false;false
5;true,false,false;ta(H, A, I), publication(J, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(N, P, L), publication(M, P).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;ta(K, A, L), publication(M, B).;true;true
6;true,true,false;publication(H, A), ta(I, A, J).;false;false
6;true,true;ta(E, C, F), publication(G, A).;false;true
6;true,false,false;tempadvisedby(Q, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true,true;ta(F, A, G), publication(H, E).;false;false
7;true;publication(D, B), tempadvisedby(E, B).;true;true
7;true,false;hasposition(J, C), tempadvisedby(K, J).;true;true
7;true,true,false;publication(I, A).;false;false
7;true,true;publication(D, A).;true;true
7;true,false,true;publication(L, B), publication(L, J).;false;false
7;true,false,false;publication(M, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,true;publication(F, B).;false;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false;publication(I, B), publication(I, A).;true;true
8;true,true,false;ta(D, A, H).;false;false
8;true,true;publication(F, A), publication(G, B).;true;true
8;true,false,true;tempadvisedby(J, B).;false;false
8;true,false,false;publication(K, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(M, A), publication(M, B).;false;false
9;true;publication(D, B), ta(E, A, F).;true;true
9;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
9;true,true,false;ta(I, J, F), publication(D, J).;false;false
9;false;professor(B), publication(P, A).;false;false
9;true,true;tempadvisedby(G, B), publication(H, G).;false;true
9;true,false,false;publication(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 9,31e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.35128483886432055;  // std dev = 1,402, 64,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.29533323725782007;  // std dev = 0,134, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2,79e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.25684824046256205;  // std dev = 0,650, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.15489820650495906;  // std dev = 1,349, 66,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.10837912271630046;  // std dev = 1,177, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08219743407784837;  // std dev = 0,328, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.1824654343341099;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2514058125217308;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0720741299355527;  // std dev = 0,065, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return -0.0030455592049125624;  // std dev = 1,477, 182,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0639730990274975;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08311
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.38 seconds
Total inference time: 3.409 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.453 seconds
Parameter learned model CLL: -0.075796


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [8.16e-08, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.03e-07, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.402, 8, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 97, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.134, 5, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.65, 2, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 98, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [1.349, 10, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 104, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,true': [0.328, 65, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.177, 28, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false': [0.065, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'false': 'director(B), movie(F, A)'}, {'true,true,true': [1.477, 126, 56], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}]]
[{'': [0.03329369797859664, 7.569702440626067e-17], 'true,false,true': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.05371895283263886, -1.4173059888831785e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [1.9032394707859825e-16, 7.216449660063518e-17], 'true': [1.9032394707859825e-16, nan], 'true,true': [1.9032394707859825e-16, nan]}, {'': [0.030703726922512928, 1.8312957107219077e-17], 'true': [0.030703726922512928, nan], 'true,true': [0.030703726922512928, nan]}, {'': [0.01789752230260305, 8.540177112501205e-18], 'true': [0.01789752230260305, nan], 'true,true': [0.01789752230260305, nan]}, {'': [0.0072773294300415075, 3.172065784643304e-17], 'true': [0.0072773294300415075, nan], 'true,true': [0.0072773294300415075, nan]}, {'': [0.02756198687966575, 3.202566417187951e-17], 'true': [0.02756198687966575, nan], 'true,true': [0.02756198687966575, nan]}, {'': [0.018953149906674543, 6.938893903907229e-19], 'true,true,true': [0.01649388360517501, nan], 'true': [0.018953149906674543, nan], 'true,true': [0.01649388360517501, 0.001655898692655375], 'true,true,false': [0.001655898692655375, nan]}, {'': [0.00908504323082578, 3.693405216471791e-05], 'true': [0.00908504323082578, nan], 'true,true': [-1.586032892321652e-17, 0.0]}, {'': [0.011990746972875846, 0.0], 'true': [0.011990746972875846, nan], 'true,true': [0.011990746972875846, nan], 'false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1254446385283911;  // std dev = 8,16e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2940406779118005;  // std dev = 0,102, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.09269127618926103;  // std dev = 3,33e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.24165132969187125;  // std dev = 0,070, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.24757998886986002;  // std dev = 0,068, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21381295499866998;  // std dev = 0,013, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15069263540477862;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109158;  // std dev = 6,23e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( female(A) )
%   | | | then return 0.15695774042292487;  // std dev = 0,426, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.17111671488472335;  // std dev = 0,307, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15706591599590397;  // std dev = 0,003, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15254588045646014;  // std dev = 0,000982, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5,67e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( female(A) )
%   | | then return 0.1272870222592472;  // std dev = 0,050, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.12871194566141614;  // std dev = 0,049, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06419184008202622;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.705 seconds
Total inference time: 2.13 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066707
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.374 seconds
Refined model CLL: -0.066707


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.912000000000001 seconds
Total inference time: 2.13 seconds
AUC ROC: 1.0
Total revision time: 5.912000000000001
Best scored revision CLL: -0.066707


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:43:20
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.38, 'Inference time': 3.409, 'CLL': -0.08311, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.912000000000001, 'Inference time': 2.13, 'CLL': -0.072779, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(I, A), publication(J, B).;true;true
1;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), ta(D, A, E).;true;true
2;true,false;publication(J, B), publication(J, A).;false;true
2;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
2;true,true;tempadvisedby(F, B), publication(C, B).;false;true
2;true,false,false;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(E, F), tempadvisedby(F, B).;false;false
3;true;projectmember(C, B).;true;true
3;true,false;publication(E, A), publication(E, B).;true;true
3;true,true;publication(D, A).;false;false
3;true,false,false;ta(G, A, H).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;sameperson(A, F).;false;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,false;publication(K, B), publication(K, A).;false;true
4;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,true;ta(D, F, E), publication(G, F).;true;true
4;true,false,false;tempadvisedby(L, B), publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;ta(F, A, G).;false;false
5;true;projectmember(C, B).;true;true
5;true,false;tempadvisedby(E, B).;true;true
5;true,true;publication(D, A).;false;false
5;true,false,false;ta(H, A, I), publication(J, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(N, P, L), publication(M, P).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;ta(K, A, L), publication(M, B).;true;true
6;true,true,false;publication(H, A), ta(I, A, J).;false;false
6;true,true;ta(E, C, F), publication(G, A).;false;true
6;true,false,false;tempadvisedby(Q, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true,true;ta(F, A, G), publication(H, E).;false;false
7;true;publication(D, B), tempadvisedby(E, B).;true;true
7;true,false;hasposition(J, C), tempadvisedby(K, J).;true;true
7;true,true,false;publication(I, A).;false;false
7;true,true;publication(D, A).;true;true
7;true,false,true;publication(L, B), publication(L, J).;false;false
7;true,false,false;publication(M, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,true;publication(F, B).;false;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false;publication(I, B), publication(I, A).;true;true
8;true,true,false;ta(D, A, H).;false;false
8;true,true;publication(F, A), publication(G, B).;true;true
8;true,false,true;tempadvisedby(J, B).;false;false
8;true,false,false;publication(K, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(M, A), publication(M, B).;false;false
9;true;publication(D, B), ta(E, A, F).;true;true
9;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
9;true,true,false;ta(I, J, F), publication(D, J).;false;false
9;false;professor(B), publication(P, A).;false;false
9;true,true;tempadvisedby(G, B), publication(H, G).;false;true
9;true,false,false;publication(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,82e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.3840226219875912;  // std dev = 1,004, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2977004478684331;  // std dev = 0,116, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3,80e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.2177265111093916;  // std dev = 1,122, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,23e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.17801736249337075;  // std dev = 1,108, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6,32e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.09477192358551656;  // std dev = 1,259, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08839392040211504;  // std dev = 0,476, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.18164713222587994;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.23316253943877122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0710772252026716;  // std dev = 0,060, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.003955157646178706;  // std dev = 1,466, 170,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06403282017733533;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081426
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.28 seconds
Total inference time: 3.179 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077076
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.58 seconds
Parameter learned model CLL: -0.077076


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [8.94e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [1.86e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.19e-07, 0, 58], 'true,true,false': [1.86e-09, 5, 0], 'true,false': [0.0, 0, 0], 'false': [8.82e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.004, 4, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.116, 4, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.8e-08, 104, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.122, 7, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [1.108, 7, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 117, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,true': [0.476, 93, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.259, 35, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)'}, {'true,true,true': [5.96e-08, 0, 58], 'true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.06, 117, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'false': 'director(B), movie(F, A)'}, {'true,true,true': [1.466, 112, 58], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 11, 0]}]]
[{'': [0.08496093749999956, 7.91446116564468e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.09566469123141852, -1.8052406904474092e-18], 'true': [-1.2250736823450003e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}, {'': [0.03257296522956836, 6.47630097698008e-17], 'true': [0.03257296522956836, nan], 'true,true': [2.4501473646900006e-16, 0.0]}, {'': [0.01626384593324757, -6.0557619525008536e-18], 'true': [0.01626384593324757, nan], 'true,true': [0.01626384593324757, nan]}, {'': [0.01335714145132329, 1.3877787807814457e-17], 'true': [0.01335714145132329, nan], 'true,true': [0.01335714145132329, nan]}, {'': [0.019355469737325583, 3.34981085016211e-17], 'true': [0.019355469737325583, nan], 'true,true': [0.019355469737325583, nan]}, {'': [0.018882117795802216, 3.416070845000482e-17], 'true': [0.018882117795802216, nan], 'true,true': [0.018882117795802216, nan]}, {'': [0.018124100956118595, 0.0], 'true,true,true': [0.017035404273646318, nan], 'true': [0.018124100956118595, nan], 'true,true': [0.017035404273646318, 0.002437934436740157], 'true,true,false': [0.002437934436740157, nan]}, {'': [0.010384900827241538, 3.097117269860447e-05], 'true': [0.010384900827241538, nan], 'true,true': [6.125368411725002e-17, 0.0]}, {'': [0.012643874645406568, -3.1540426835941946e-18], 'true': [0.012643874645406568, nan], 'true,true': [0.012643874645406568, nan], 'false': [nan, -3.1540426835941946e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048774;  // std dev = 4,71e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5235720169872421;  // std dev = 0,142, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.4917775972281992;  // std dev = 0,196, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6,99e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4303685941153546;  // std dev = 0,028, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17295231362277774;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32944571775979137;  // std dev = 0,025, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1509466165317965;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926096;  // std dev = 5,05e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2611262160831858;  // std dev = 0,022, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1301744685681305;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21395661356046863;  // std dev = 0,019, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11660278279662677;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109158;  // std dev = 6,66e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 4,34e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(A) )
%   | | | then return 0.16354182753087304;  // std dev = 0,278, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.1545023705306858;  // std dev = 0,545, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11812537892222737;  // std dev = 0,094, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0.13325644028056002;  // std dev = 0,082, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,16e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 2,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.14174573829047332;  // std dev = 0,011, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13564239985600496;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.651 seconds
Total inference time: 2.318 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.332 seconds
Refined model CLL: -0.06662


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.843 seconds
Total inference time: 2.318 seconds
AUC ROC: 1.0
Total revision time: 5.843
Best scored revision CLL: -0.06662


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:43:32
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.28, 'Inference time': 3.179, 'CLL': -0.081426, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.843, 'Inference time': 2.318, 'CLL': -0.069836, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(I, A), publication(J, B).;true;true
1;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), ta(D, A, E).;true;true
2;true,false;publication(J, B), publication(J, A).;false;true
2;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
2;true,true;tempadvisedby(F, B), publication(C, B).;false;true
2;true,false,false;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(E, F), tempadvisedby(F, B).;false;false
3;true;projectmember(C, B).;true;true
3;true,false;publication(E, A), publication(E, B).;true;true
3;true,true;publication(D, A).;false;false
3;true,false,false;ta(G, A, H).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;sameperson(A, F).;false;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,false;publication(K, B), publication(K, A).;false;true
4;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,true;ta(D, F, E), publication(G, F).;true;true
4;true,false,false;tempadvisedby(L, B), publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;ta(F, A, G).;false;false
5;true;projectmember(C, B).;true;true
5;true,false;tempadvisedby(E, B).;true;true
5;true,true;publication(D, A).;false;false
5;true,false,false;ta(H, A, I), publication(J, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(N, P, L), publication(M, P).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;ta(K, A, L), publication(M, B).;true;true
6;true,true,false;publication(H, A), ta(I, A, J).;false;false
6;true,true;ta(E, C, F), publication(G, A).;false;true
6;true,false,false;tempadvisedby(Q, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true,true;ta(F, A, G), publication(H, E).;false;false
7;true;publication(D, B), tempadvisedby(E, B).;true;true
7;true,false;hasposition(J, C), tempadvisedby(K, J).;true;true
7;true,true,false;publication(I, A).;false;false
7;true,true;publication(D, A).;true;true
7;true,false,true;publication(L, B), publication(L, J).;false;false
7;true,false,false;publication(M, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,true;publication(F, B).;false;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false;publication(I, B), publication(I, A).;true;true
8;true,true,false;ta(D, A, H).;false;false
8;true,true;publication(F, A), publication(G, B).;true;true
8;true,false,true;tempadvisedby(J, B).;false;false
8;true,false,false;publication(K, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(M, A), publication(M, B).;false;false
9;true;publication(D, B), ta(E, A, F).;true;true
9;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
9;true,true,false;ta(I, J, F), publication(D, J).;false;false
9;false;professor(B), publication(P, A).;false;false
9;true,true;tempadvisedby(G, B), publication(H, G).;false;true
9;true,false,false;publication(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 5,59e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360683;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.3276676375657076;  // std dev = 2,453, 156,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10159632948783656;  // std dev = 0,000, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23054395527854596;  // std dev = 0,190, 232,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892606;  // std dev = 5,16e-08, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.1913987578793816;  // std dev = 2,419, 165,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return 0.14556000744616548;  // std dev = 1,552, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,66e-08, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.1318493378536998;  // std dev = 2,983, 249,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 1,07e-07, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16100202898359325;  // std dev = 1,875, 228,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.10651399862976108;  // std dev = 0,759, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.19981533486390565;  // std dev = 0,042, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.16871646204730462;  // std dev = 0,242, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0700815089462848;  // std dev = 0,110, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.023593316553748724;  // std dev = 2,613, 423,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return -0.06409252197107528;  // std dev = 7,45e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06409252197107516;  // std dev = 3,87e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077727
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.895 seconds
Total inference time: 3.292 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088522
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.688 seconds
Parameter learned model CLL: -0.088522


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 50, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.09e-06, 0, 178], 'false': [0.0, 307, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 60, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [5.9e-07, 0, 178], 'true,true,false': [5.59e-09, 58, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 279, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)', 'true,false': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.453, 27, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 49], 'true,false,false': [0.0, 28, 0], 'false': [0.0, 307, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.19, 54, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 332, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [2.419, 36, 129], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [1.552, 24, 49], 'false': [9.66e-08, 294, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [2.983, 71, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,true': [0.759, 205, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.875, 50, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.0, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.042, 0, 178], 'true,true,false': [0.242, 57, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 284, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'false': 'director(B), movie(F, A)'}, {'true,true,true': [2.613, 245, 178], 'true,true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 33, 0], 'true,false': [0.0, 0, 0], 'false,false': [3.87e-08, 88, 0]}]]
[{'': [0.17120652508464734, -2.8930893149841213e-17], 'true,false,true': [5.773159728050814e-17, nan], 'true': [6.706246045376226e-15, 5.773159728050814e-17], 'true,false': [5.773159728050814e-17, nan]}, {'': [0.13460045111799862, -6.832141690000964e-17], 'true': [-3.193450497798203e-15, -4.070817756958907e-17], 'true,false': [-4.070817756958907e-17, nan]}, {'': [0.0826350675858826, -8.91361854896183e-17], 'true': [0.0826350675858826, nan], 'true,true': [1.9559884299013994e-15, 3.062684205862501e-17]}, {'': [0.04859476602891015, -5.641524164219037e-17], 'true,false,true': [-3.6252180395923476e-17, nan], 'true': [0.03856762745802177, 0.06235787494611482], 'true,true': [0.03856762745802177, nan], 'true,false': [-3.6252180395923476e-17, -9.912705577010326e-18]}, {'': [0.036216297208862214, 8.025708611748119e-18], 'true': [0.036216297208862214, nan], 'true,true': [0.036216297208862214, nan]}, {'': [0.03514351452074084, 3.172065784643304e-17], 'true': [0.03544981320887376, 0.03299448749327533], 'true,true': [0.03544981320887376, nan], 'true,false': [0.03299448749327533, nan]}, {'': [0.03573367528680753, 3.887649648519067e-17], 'true': [0.03573367528680753, nan], 'true,true': [0.03573367528680753, nan]}, {'': [0.027293744679879665, 0.0], 'true,true,true': [0.015422726624686392, nan], 'true': [0.027293744679879665, nan], 'true,true': [0.015422726624686392, 0.002813538118480662], 'true,true,false': [0.002813538118480662, nan]}, {'': [0.025209314440646616, 4.255998464067798e-05], 'true': [0.025209314440646616, nan], 'true,true': [9.758952346353e-06, 0.0010295057561140854]}, {'': [0.016146747560854595, 2.7984960538072127e-17], 'true': [0.016146747560854595, nan], 'true,true': [0.016146747560854595, nan], 'false': [1.6821560979169039e-18, 1.7031830491408652e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;genre(B, C).;true;true
3;true,false;movie(E, A), movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A).;true;true
9;false;director(B), movie(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.14185106490048813;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839186;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.40894476680332564;  // std dev = 0,276, 114,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=89 */
%   | | else return 0.37476370811500237;  // std dev = 0,297, 122,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360682;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.45888596888274663;  // std dev = 0,046, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.15760521494319416;  // std dev = 0,010, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.45470504101724996;  // std dev = 0,021, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.15833245555728684;  // std dev = 0,013, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783656;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34815228050716224;  // std dev = 0,050, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1379733008148982;  // std dev = 0,016, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926064;  // std dev = 2,98e-08, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2738246839371833;  // std dev = 0,043, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12261923189018038;  // std dev = 0,015, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839678;  // std dev = 8,82e-08, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.222853467916538;  // std dev = 0,038, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10966309755789161;  // std dev = 0,012, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109148;  // std dev = 1,02e-07, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.18664515301152879;  // std dev = 0,033, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08157477821785049;  // std dev = 0,172, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else return -0.07324622576333702;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.09756024628955827;  // std dev = 0,107, 117,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=89 */
%   | | else return 0.09218247955666312;  // std dev = 0,113, 123,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0681743772836464;  // std dev = 0,004, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.06420701578342311;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.14761497769533083;  // std dev = 0,032, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07447526289636103;  // std dev = 0,250, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( director(B), movie(D, A) )
%   | then return -0.0642070157834231;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.06420701578342312;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064665
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.667 seconds
Total inference time: 2.341 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071486
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.51 seconds
Refined model CLL: -0.071486


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064665
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.76 seconds
Total inference time: 2.341 seconds
AUC ROC: 1.0
Total revision time: 7.76
Best scored revision CLL: -0.071486


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:43:46
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.895, 'Inference time': 3.292, 'CLL': -0.077727, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 7.76, 'Inference time': 2.341, 'CLL': -0.064665, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(I, A), publication(J, B).;true;true
1;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), ta(D, A, E).;true;true
2;true,false;publication(J, B), publication(J, A).;false;true
2;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
2;true,true;tempadvisedby(F, B), publication(C, B).;false;true
2;true,false,false;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(E, F), tempadvisedby(F, B).;false;false
3;true;projectmember(C, B).;true;true
3;true,false;publication(E, A), publication(E, B).;true;true
3;true,true;publication(D, A).;false;false
3;true,false,false;ta(G, A, H).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;sameperson(A, F).;false;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,false;publication(K, B), publication(K, A).;false;true
4;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,true;ta(D, F, E), publication(G, F).;true;true
4;true,false,false;tempadvisedby(L, B), publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;ta(F, A, G).;false;false
5;true;projectmember(C, B).;true;true
5;true,false;tempadvisedby(E, B).;true;true
5;true,true;publication(D, A).;false;false
5;true,false,false;ta(H, A, I), publication(J, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(N, P, L), publication(M, P).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;ta(K, A, L), publication(M, B).;true;true
6;true,true,false;publication(H, A), ta(I, A, J).;false;false
6;true,true;ta(E, C, F), publication(G, A).;false;true
6;true,false,false;tempadvisedby(Q, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true,true;ta(F, A, G), publication(H, E).;false;false
7;true;publication(D, B), tempadvisedby(E, B).;true;true
7;true,false;hasposition(J, C), tempadvisedby(K, J).;true;true
7;true,true,false;publication(I, A).;false;false
7;true,true;publication(D, A).;true;true
7;true,false,true;publication(L, B), publication(L, J).;false;false
7;true,false,false;publication(M, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,true;publication(F, B).;false;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false;publication(I, B), publication(I, A).;true;true
8;true,true,false;ta(D, A, H).;false;false
8;true,true;publication(F, A), publication(G, B).;true;true
8;true,false,true;tempadvisedby(J, B).;false;false
8;true,false,false;publication(K, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(M, A), publication(M, B).;false;false
9;true;publication(D, B), ta(E, A, F).;true;true
9;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
9;true,true,false;ta(I, J, F), publication(D, J).;false;false
9;false;professor(B), publication(P, A).;false;false
9;true,true;tempadvisedby(G, B), publication(H, G).;false;true
9;true,false,false;publication(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.38506921455542603;  // std dev = 0,871, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 4,21e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2894258762641959;  // std dev = 0,129, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.2146330042023383;  // std dev = 1,033, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4,83e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.18323063013437113;  // std dev = 0,940, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109169;  // std dev = 3,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.09107379136990212;  // std dev = 1,135, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.09978214645768024;  // std dev = 0,510, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.1829598808558404;  // std dev = 5,96e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.23022600481582942;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07072152221923865;  // std dev = 0,054, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.014120382473308506;  // std dev = 1,233, 120,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return -0.06405414169461042;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06405414169461042;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.204 seconds
Total inference time: 3.363 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079888
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.367 seconds
Parameter learned model CLL: -0.079888


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [8.94e-08, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [7.15e-08, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.871, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 98, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.129, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.033, 6, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.83e-08, 109, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [0.94, 5, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.49e-08, 78, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,true': [0.51, 66, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.135, 29, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [2.63e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)'}, {'true,true,true': [5.96e-08, 0, 45], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.054, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'false': 'director(B), movie(F, A)'}, {'true,true,true': [1.233, 75, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}]]
[{'': [0.07496876301541104, 7.993605777301127e-17], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.05351918877289897, -1.4640303621430636e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.03342110014406096, 5.803438537813318e-17], 'true': [0.03342110014406096, nan], 'true,true': [-3.947459643111668e-17, 0.0]}, {'': [0.015789556783927943, 1.8126090197961738e-17], 'true': [0.015789556783927943, nan], 'true,true': [0.015789556783927943, nan]}, {'': [0.016584386872693684, 0.0], 'true': [0.016584386872693684, nan], 'true,true': [0.016584386872693684, nan]}, {'': [0.020940131296869675, 2.1389617905622283e-17], 'true': [0.020940131296869675, nan], 'true,true': [0.020940131296869675, nan]}, {'': [0.01768913587921238, 1.5656991372918874e-17], 'true': [0.01768913587921238, nan], 'true,true': [0.01768913587921238, nan]}, {'': [0.02013323784540308, 8.673617379884035e-19], 'true,true,true': [0.017400688286430443, nan], 'true': [0.02013323784540308, nan], 'true,true': [0.017400688286430443, 0.003943268487740251], 'true,true,false': [0.003943268487740251, nan]}, {'': [0.006955650452985778, 3.2411882495020486e-05], 'true': [0.006955650452985778, nan], 'true,true': [7.894919286223336e-17, 0.0]}, {'': [0.012675895521075028, -1.1564823173178713e-18], 'true': [0.012675895521075028, nan], 'true,true': [0.012675895521075028, nan], 'false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A).;true;true
9;false;director(B), movie(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4997262021679602;  // std dev = 0,185, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.5182729470274015;  // std dev = 0,153, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42767165961113734;  // std dev = 0,013, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17422834381139346;  // std dev = 0,004, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783616;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3276082966328723;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15050561262567655;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926108;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25987345793616606;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13310763766690878;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 4,59e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21307364132534887;  // std dev = 0,009, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11813437089953643;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109169;  // std dev = 3,65e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( female(A) )
%   | | then return 0.1375136708439456;  // std dev = 0,103, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.17885528436159606;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.07324622576333707;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13866045768178106;  // std dev = 0,078, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.11830096698338277;  // std dev = 0,093, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,34e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.14045549039834906;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1378313080021585;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), movie(D, A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069234
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.408 seconds
Total inference time: 2.456 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068004
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.145 seconds
Refined model CLL: -0.068004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069234
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.124 seconds
Total inference time: 2.456 seconds
AUC ROC: 1.0
Total revision time: 5.124
Best scored revision CLL: -0.068004


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 05:43:58
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.204, 'Inference time': 3.363, 'CLL': -0.080389, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.124, 'Inference time': 2.456, 'CLL': -0.069234, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(I, A), publication(J, B).;true;true
1;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;ta(D, A, E).;true;false
1;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), ta(D, A, E).;true;true
2;true,false;publication(J, B), publication(J, A).;false;true
2;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
2;true,true;tempadvisedby(F, B), publication(C, B).;false;true
2;true,false,false;publication(K, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(E, F), tempadvisedby(F, B).;false;false
3;true;projectmember(C, B).;true;true
3;true,false;publication(E, A), publication(E, B).;true;true
3;true,true;publication(D, A).;false;false
3;true,false,false;ta(G, A, H).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;sameperson(A, F).;false;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,false;publication(K, B), publication(K, A).;false;true
4;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
4;true,true;ta(D, F, E), publication(G, F).;true;true
4;true,false,false;tempadvisedby(L, B), publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;ta(F, A, G).;false;false
5;true;projectmember(C, B).;true;true
5;true,false;tempadvisedby(E, B).;true;true
5;true,true;publication(D, A).;false;false
5;true,false,false;ta(H, A, I), publication(J, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(N, P, L), publication(M, P).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;ta(K, A, L), publication(M, B).;true;true
6;true,true,false;publication(H, A), ta(I, A, J).;false;false
6;true,true;ta(E, C, F), publication(G, A).;false;true
6;true,false,false;tempadvisedby(Q, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true,true;ta(F, A, G), publication(H, E).;false;false
7;true;publication(D, B), tempadvisedby(E, B).;true;true
7;true,false;hasposition(J, C), tempadvisedby(K, J).;true;true
7;true,true,false;publication(I, A).;false;false
7;true,true;publication(D, A).;true;true
7;true,false,true;publication(L, B), publication(L, J).;false;false
7;true,false,false;publication(M, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,true;publication(F, B).;false;false
8;true;tempadvisedby(C, B), ta(D, C, E).;true;true
8;true,false;publication(I, B), publication(I, A).;true;true
8;true,true,false;ta(D, A, H).;false;false
8;true,true;publication(F, A), publication(G, B).;true;true
8;true,false,true;tempadvisedby(J, B).;false;false
8;true,false,false;publication(K, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(M, A), publication(M, B).;false;false
9;true;publication(D, B), ta(E, A, F).;true;true
9;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
9;true,true,false;ta(I, J, F), publication(D, J).;false;false
9;false;professor(B), publication(P, A).;false;false
9;true,true;tempadvisedby(G, B), publication(H, G).;false;true
9;true,false,false;publication(N, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.4030938643348061;  // std dev = 0,512, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783621;  // std dev = 5,27e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2860280366267431;  // std dev = 0,125, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A) )
%   | | then return 0.2521591176892548;  // std dev = 0,442, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return 0.2618200092202252;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.19463344233568047;  // std dev = 0,617, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109168;  // std dev = 3,94e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.09602407990616751;  // std dev = 1,027, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.08932618715315413;  // std dev = 0,370, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.17218136110304028;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.19589974399540494;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07099027580537112;  // std dev = 0,053, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.010773037081227734;  // std dev = 1,202, 118,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06403803147990127;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082548
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.202 seconds
Total inference time: 3.427 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076215
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.344 seconds
Parameter learned model CLL: -0.076215


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [8.69e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)', 'true,false': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.512, 1, 35], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [3.65e-08, 0, 10], 'true,false,false': [0.0, 1, 0], 'false': [5.27e-08, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,true': 'movie(D, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.442, 1, 35], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 10], 'false': [2.98e-08, 82, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [0.617, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 82, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,true': [0.37, 53, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.027, 24, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.01, 0, 45], 'true,true,false': [0.087, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.053, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'false': 'director(B), movie(F, A)'}, {'true,true,true': [1.202, 73, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 6, 0]}]]
[{'': [0.021266540642723226, 7.783006770568107e-17], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.05351918877289897, -3.0417069167812506e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0181629835776121, 6.180623023686439e-17], 'true': [0.0181629835776121, nan], 'true,true': [-3.947459643111668e-17, 0.0]}, {'': [0.01097906709828568, 3.118604001756058e-17], 'true,false,true': [1.3322676295501878e-16, nan], 'true': [0.0072774911925922075, 0.02227066962361243], 'true,true': [0.0072774911925922075, nan], 'true,false': [1.3322676295501878e-16, 0.0]}, {'': [0.01555555785651411, 0.0], 'true': [0.01555555785651411, nan], 'true,true': [0.01555555785651411, nan]}, {'': [0.0042666147269337495, 1.0831444142684454e-17], 'true': [0.005431495739812424, 0.0], 'true,true': [0.005431495739812424, nan], 'true,false': [0.0, nan]}, {'': [0.007928124252490204, 1.8955027249697796e-17], 'true': [0.007928124252490204, nan], 'true,true': [0.007928124252490204, nan]}, {'': [0.01820880358466759, 0.0], 'true,true,true': [0.015282788885167299, nan], 'true': [0.01820880358466759, nan], 'true,true': [0.015282788885167299, 0.0025880141041061517], 'true,true,false': [0.0025880141041061517, nan]}, {'': [0.012347059369848217, 3.1101521527756676e-05], 'true': [0.012347059369848217, nan], 'true,true': [2.018321133255717e-06, 0.0015170988708394673]}, {'': [0.012239843930542107, -1.1564823173178713e-18], 'true': [0.012239843930542107, nan], 'true,true': [0.012239843930542107, nan], 'false': [nan, -1.1564823173178713e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;genre(B, C).;true;true
3;true,false;movie(E, A), movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;genre(B, C).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.28626158688103204;  // std dev = 0,114, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.09269127618926108;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.22362393658446722;  // std dev = 0,114, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0.25781329490383725;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839682;  // std dev = 5,87e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2146321633788342;  // std dev = 0,036, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1482442278197029;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109166;  // std dev = 4,28e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( female(A) )
%   | | then return 0.16329800427997251;  // std dev = 0,062, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.1852490070830908;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.07324622576333707;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15630043428553983;  // std dev = 0,019, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15352810525559693;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3,87e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.13677856668599506;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1348985139644673;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069264
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.629 seconds
Total inference time: 2.404 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066366
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.228 seconds
Refined model CLL: -0.066366


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069264
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.4030000000000005 seconds
Total inference time: 2.404 seconds
AUC ROC: 1.0
Total revision time: 5.4030000000000005
Best scored revision CLL: -0.066366


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 05:44:10
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.202, 'Inference time': 3.427, 'CLL': -0.082548, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.4030000000000005, 'Inference time': 2.404, 'CLL': -0.069264, 'AUC PR': 1.0, 'Recall': 1.0}


