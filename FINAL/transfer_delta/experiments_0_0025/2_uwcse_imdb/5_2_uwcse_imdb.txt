Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.7812258581764353;  // std dev = 0,961, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( publication(J, A) )
%   | | then if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.5423594614153018;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else if ( tempadvisedby(M, B), publication(N, M) )
%   | | | then return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6427643197148962;  // std dev = 3,314, 65,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=51 */
%   else return -0.14185106490048824;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( projectmember(F, B) )
%   | | then return 0.43342659791046434;  // std dev = 0,824, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.757744472361104;  // std dev = 0,176, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6516378975142513;  // std dev = 1,307, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( publication(H, B), publication(H, A) )
%   | | then if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.5194734122109542;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.7277972319421014;  // std dev = 0,036, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.1570679286082854;  // std dev = 2,725, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.6117807830272777;  // std dev = 2,427, 46,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=39 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.5588204093369374;  // std dev = 0,073, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3816567081678309;  // std dev = 1,263, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.5730925185047115;  // std dev = 0,096, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), professor(L) )
%   | | | then return -0.03354546999329506;  // std dev = 1,959, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.49384526316628774;  // std dev = 1,250, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( projectmember(M, B) )
%   | | | then return 0.4708157626607442;  // std dev = 1,300, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3120161648171037;  // std dev = 4,164, 79,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   else return -0.11231637819360638;  // std dev = 7,30e-08, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H), ta(E, I, H) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.44261307728201116;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5142254274677311;  // std dev = 0,230, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(J, A), publication(J, B) )
%   | | | then return 0.4328014870097044;  // std dev = 0,091, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.26346468464541667;  // std dev = 1,903, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | then if ( publication(L, A) )
%   | | | then return 0.31404816374257344;  // std dev = 1,256, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.0840028244375613;  // std dev = 2,450, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( projectmember(M, B), publication(N, A) )
%   | | | then return 0.630770012330481;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3107173611826158;  // std dev = 3,286, 63,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=46 */
%   else return -0.09986054221001833;  // std dev = 0,055, 184,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.2958406623848954;  // std dev = 1,887, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return 0.35322717603205916;  // std dev = 2,680, 66,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.03210409892487819;  // std dev = 1,167, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3680359178313841;  // std dev = 0,940, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then return 0.32651082481824995;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.13080157074262533;  // std dev = 1,256, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.06632125286673499;  // std dev = 1,317, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( student(B) )
%   | then return -0.09283735845477271;  // std dev = 0,000, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else return -0.074374276093745;  // std dev = 0,171, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( ta(E, C, F) )
%   | | | then return 0.259271134412292;  // std dev = 0,096, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.30647362062690164;  // std dev = 0,099, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( projectmember(G, B), publication(H, A) )
%   | | | then return 0.41884341488489624;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05375973542826953;  // std dev = 3,644, 63,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=37 */
%   | else if ( publication(I, A), ta(J, A, K) )
%   | | then return 0.4821663238412858;  // std dev = 0,323, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.2659933539372438;  // std dev = 1,921, 38,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return 0.41315575345050276;  // std dev = 0,765, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08546848024633771;  // std dev = 0,007, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(C, F), publication(E, F) )
%   | | | then return -0.06723931015782082;  // std dev = 1,134, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.23631548714384407;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22072314885163577;  // std dev = 0,022, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, A) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.18605897086888787;  // std dev = 1,432, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.13947767690509005;  // std dev = 1,694, 35,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( publication(C, J), tempadvisedby(J, K) )
%   | | | then return -0.016850241517200604;  // std dev = 1,938, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.10245492163223147;  // std dev = 3,094, 56,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   else if ( hasposition(B, L), publication(M, A) )
%   | then return -0.1292708464046196;  // std dev = 0,430, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return -0.07739682487374437;  // std dev = 0,149, 166,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(C, D) )
%   | | | then return 0.27809823174754306;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.186467415908393;  // std dev = 0,129, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( ta(E, A, F) )
%   | | | then return -0.14448545701320312;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19623902251037983;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( ta(I, A, J), ta(I, G, K) )
%   | | | then return -0.4049529669536257;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0010984855465022022;  // std dev = 3,386, 57,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.14335038403301192;  // std dev = 1,465, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.06687645198722311;  // std dev = 3,111, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   else return -0.07356963191234149;  // std dev = 0,035, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B), tempadvisedby(E, B) )
%   | | then if ( publication(D, E), ta(F, A, G) )
%   | | | then return -0.09305072386192077;  // std dev = 0,803, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16170877370736356;  // std dev = 0,125, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( publication(C, H), professor(H) )
%   | | | then return -0.1651400444891965;  // std dev = 2,557, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.2340560751072765;  // std dev = 1,004, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( publication(I, B) )
%   | | then if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.24224873209289924;  // std dev = 1,567, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.13428472072849074;  // std dev = 2,359, 36,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.06501422127168709;  // std dev = 1,412, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.0711376684114601;  // std dev = 1,916, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else return -0.06877639412900946;  // std dev = 0,026, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.12214612532005294;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2665260223853743;  // std dev = 0,825, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.22305595288030766;  // std dev = 0,081, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.40148044199499766;  // std dev = 0,329, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then if ( publication(J, B), publication(K, A) )
%   | | | then return -0.17442533628783805;  // std dev = 0,803, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04951909988712387;  // std dev = 1,350, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.10266119893113633;  // std dev = 3,289, 86,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=67 */
%   | | | else return 0.00460726115495704;  // std dev = 2,185, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.06407678064107515;  // std dev = 0,010, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(I, B).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
0;true,false,true;tempadvisedby(K, B), publication(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true,true;ta(G, D, H).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;publication(G, A).;false;false
1;true,false;publication(H, B), publication(H, A).;true;true
1;true,false,false;publication(K, A).;false;false
1;true,true;projectmember(F, B).;false;true
1;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
1;true;tempadvisedby(C, B), ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;publication(J, A), publication(K, B).;true;true
2;true,false,false;projectmember(M, B).;false;false
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(J, L), professor(L).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
3;true,true,false;publication(J, A), publication(J, B).;false;false
3;true,false;tempadvisedby(K, B), publication(L, B).;true;true
3;true,false,false;projectmember(M, B), publication(N, A).;false;false
3;true,true;ta(G, A, H), ta(E, I, H).;true;true
3;true,false,true;publication(L, A).;false;false
3;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;true,true,true;samecourse(E, G).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(J, A, K).;false;false
4;false;student(B).;false;false
4;true,false;publication(L, A), publication(L, B).;false;true
4;true,false,false;ta(M, A, N).;false;false
4;true,true;publication(F, B).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(G, B), publication(H, A).;false;false
5;true,false;publication(I, A), ta(J, A, K).;false;true
5;true,false,false;publication(L, B).;false;false
5;true,true;publication(D, A), publication(D, B).;true;true
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;ta(E, C, F).;false;false
6;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
6;false;hasposition(B, L), publication(M, A).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;publication(C, J), tempadvisedby(J, K).;false;false
6;true,true;tempadvisedby(D, B), publication(E, D).;true;false
6;true,false,true;ta(H, A, I).;false;false
6;true;publication(C, A), student(A).;true;true
6;true,true,true;publication(C, F), publication(E, F).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,false;ta(E, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,false;tempadvisedby(L, B).;false;false
7;true,true;tempadvisedby(D, B).;true;true
7;true,false,true;ta(I, A, J), ta(I, G, K).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,true;publication(C, D).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,false;publication(C, H), professor(H).;false;false
8;true,false;publication(I, B).;true;true
8;true,false,false;publication(M, A).;false;false
8;true,true;publication(C, B), tempadvisedby(E, B).;true;true
8;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true,true;publication(D, E), ta(F, A, G).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(C, B).;false;false
9;true,false;tempadvisedby(I, B), publication(J, I).;true;true
9;true,false,false;publication(L, B).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,true;publication(J, B), publication(K, A).;false;false
9;true;publication(C, A), ta(D, A, E).;true;true
9;true,true,true;publication(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5,16e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.6903383070130459;  // std dev = 1,174, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,60e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5625488070714548;  // std dev = 2,89e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.2224383830466405;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 6,83e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2439290733049018;  // std dev = 2,292, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1068929840648658;  // std dev = 0,183, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then return 0.0419548103413793;  // std dev = 0,217, 180,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3550486803238081;  // std dev = 1,29e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.17669679375406316;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10564079130681739;  // std dev = 0,192, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.27848909035521396;  // std dev = 8,94e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1524405747938597;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.09646033523528637;  // std dev = 0,153, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22610132695146615;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.13377021688465954;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08433561631321829;  // std dev = 0,121, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.18899417678423514;  // std dev = 2,11e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, F), director(F) )
%   | | | then return -0.11901438809492072;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08142787295329905;  // std dev = 0,135, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16171085237981767;  // std dev = 4,94e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10709046867409028;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07384931670646444;  // std dev = 0,113, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.383 seconds
Total inference time: 2.644 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07506
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.461 seconds
Parameter learned model CLL: -0.07506


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'false': [5.16e-08, 118, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [7.6e-08, 99, 0], 'true,true': [1.174, 2, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.89e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false': [6.83e-08, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.183, 80, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true': [2.292, 29, 56]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'false': 'actor(B)', 'true,true': 'movie(E, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'true,true,true': [0.217, 124, 56], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.192, 126, 0], 'true,true': [1.29e-08, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(G, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), actor(A)', 'false': 'movie(H, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [8.94e-08, 0, 56], 'false,true': [0.153, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'false': [0.121, 98, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, F), director(F)', 'true': 'movie(C, A), movie(D, B)', 'true,true,true': 'movie(D, E)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [3.73e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.11e-08, 0, 56], 'false': [0.135, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [4.94e-08, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false': [0.113, 103, 0]}]]
[{'': [0.04826199367997677, 2.258080728051166e-17], 'true,false,true': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.023767921937009287, 5.8314744727786e-17], 'true': [0.023767921937009287, nan]}, {'': [0.060859742088840506, 5.124106267500723e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [8.247371040072592e-16, 0.0], 'true,true': [8.247371040072592e-16, nan]}, {'': [0.06279447616935728, 0.0], 'true,false,true': [nan, 0.0004208182456254247], 'true': [0.061825827058526184, 0.0004208182456254247], 'true,false': [0.0004208182456254247, nan]}, {'': [0.04724300036063937, 0.0], 'true': [0.04724300036063937, nan], 'false': [0.0, 0.0], 'true,true': [0.04724300036063937, nan]}, {'': [0.009413901281408526, 0.0002934902447977626], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01397369131027638, 0.00023066347906309443], 'false': [0.00023066347906309443, nan], 'true,true': [1.427429603089487e-16, nan], 'true': [1.427429603089487e-16, -2.7755575615628915e-18], 'true,true,true': [1.427429603089487e-16, nan], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.008058246190586364, 0.00014909222171783604], 'true,true': [-1.1102230246251565e-16, nan], 'true': [-1.1102230246251565e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.008292423712038572, 0.00017096158461390643], 'true,true,false': [2.3129646346357427e-18, nan], 'true': [0.008292423712038572, nan], 'true,true,true': [7.93016446160826e-18, nan], 'true,true': [7.93016446160826e-18, 2.3129646346357427e-18]}, {'': [0.0034871293403202987, 0.0001231180802385744], 'true,true,false': [nan, 2.3129646346357427e-18], 'true': [0.0034871293403202987, nan], 'true,true': [4.3615904538845435e-17, 2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), movie(C, B).;true;true
6;true;movie(C, A), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839133;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360618;  // std dev = 8,94e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.10159632948783613;  // std dev = 5,96e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.0926912761892609;  // std dev = 6,05e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839693;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839693;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(A) )
%   | | | then return -0.0851847513883969;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.0787767547310918;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06842697784420278;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12079377200200832;  // std dev = 0,049, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.812 seconds
Total inference time: 2.123 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063843
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.329 seconds
Refined model CLL: -0.063843


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.985 seconds
Total inference time: 2.123 seconds
AUC ROC: 1.0
Total revision time: 5.985
Best scored revision CLL: -0.063843


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:38:28
{'CLL': -0.0653, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.075508, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.644, 'Learning time': 1.383, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.123, 'Learning time': 5.985, 'F1': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(I, B).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
0;true,false,true;tempadvisedby(K, B), publication(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true,true;ta(G, D, H).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;publication(G, A).;false;false
1;true,false;publication(H, B), publication(H, A).;true;true
1;true,false,false;publication(K, A).;false;false
1;true,true;projectmember(F, B).;false;true
1;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
1;true;tempadvisedby(C, B), ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;publication(J, A), publication(K, B).;true;true
2;true,false,false;projectmember(M, B).;false;false
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(J, L), professor(L).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
3;true,true,false;publication(J, A), publication(J, B).;false;false
3;true,false;tempadvisedby(K, B), publication(L, B).;true;true
3;true,false,false;projectmember(M, B), publication(N, A).;false;false
3;true,true;ta(G, A, H), ta(E, I, H).;true;true
3;true,false,true;publication(L, A).;false;false
3;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;true,true,true;samecourse(E, G).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(J, A, K).;false;false
4;false;student(B).;false;false
4;true,false;publication(L, A), publication(L, B).;false;true
4;true,false,false;ta(M, A, N).;false;false
4;true,true;publication(F, B).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(G, B), publication(H, A).;false;false
5;true,false;publication(I, A), ta(J, A, K).;false;true
5;true,false,false;publication(L, B).;false;false
5;true,true;publication(D, A), publication(D, B).;true;true
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;ta(E, C, F).;false;false
6;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
6;false;hasposition(B, L), publication(M, A).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;publication(C, J), tempadvisedby(J, K).;false;false
6;true,true;tempadvisedby(D, B), publication(E, D).;true;false
6;true,false,true;ta(H, A, I).;false;false
6;true;publication(C, A), student(A).;true;true
6;true,true,true;publication(C, F), publication(E, F).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,false;ta(E, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,false;tempadvisedby(L, B).;false;false
7;true,true;tempadvisedby(D, B).;true;true
7;true,false,true;ta(I, A, J), ta(I, G, K).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,true;publication(C, D).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,false;publication(C, H), professor(H).;false;false
8;true,false;publication(I, B).;true;true
8;true,false,false;publication(M, A).;false;false
8;true,true;publication(C, B), tempadvisedby(E, B).;true;true
8;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true,true;publication(D, E), ta(F, A, G).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(C, B).;false;false
9;true,false;tempadvisedby(I, B), publication(J, I).;true;true
9;true,false,false;publication(L, B).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,true;publication(J, B), publication(K, A).;false;false
9;true;publication(C, A), ta(D, A, E).;true;true
9;true,true,true;publication(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.6779200654532815;  // std dev = 1,427, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5656023718272213;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.22029793485167753;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,69e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2455766977665716;  // std dev = 2,342, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10799580516686902;  // std dev = 0,196, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then return 0.060288354958746015;  // std dev = 0,224, 167,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3526213772674676;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.1777105462587261;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10539153635486576;  // std dev = 0,154, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.27684660132402383;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.15320951607414549;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.09487096984975582;  // std dev = 0,159, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2249578430176223;  // std dev = 6,66e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.13437045709477136;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08604016862964665;  // std dev = 0,129, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1881673881442845;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, F), director(F) )
%   | | | then return -0.11949438691700975;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08039096203814776;  // std dev = 0,123, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1610914298249018;  // std dev = 4,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10748219176141588;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07628206325260413;  // std dev = 0,130, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.302 seconds
Total inference time: 2.924 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075965
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.356 seconds
Parameter learned model CLL: -0.075965


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'false': [8.69e-08, 104, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 118, 0], 'true,true': [1.427, 3, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [8.69e-08, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.196, 78, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 7, 0], 'true,true': [2.342, 30, 58]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'false': 'actor(B)', 'true,true': 'movie(E, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'true,true,true': [0.224, 109, 58], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,true': [5.27e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.154, 96, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(G, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), actor(A)', 'false': 'movie(H, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'false,true': [0.159, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true,true': [6.66e-08, 0, 58], 'true,false,false': [0.0, 0, 0], 'false': [0.129, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, F), director(F)', 'true': 'movie(C, A), movie(D, B)', 'true,true,true': 'movie(D, E)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'false': [0.123, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [4.94e-08, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.13, 117, 0]}]]
[{'': [0.016661878770467882, 7.259150545626024e-17], 'true,false,true': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.033382492117425555, -3.7634678800852764e-18], 'true': [0.033382492117425555, nan]}, {'': [0.03727687714693329, 6.344131569286608e-17], 'true,false,true': [0.0, nan], 'true,true': [-5.512831570552502e-16, nan], 'true': [-5.512831570552502e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0644199905982029, -1.982541115402065e-18], 'true,false,true': [nan, 0.0004914394675984296], 'true': [0.062342643544650224, 0.0004914394675984296], 'true,false': [0.0004914394675984296, nan]}, {'': [0.05009607255241395, 0.0], 'true': [0.05009607255241395, nan], 'false': [0.0, nan], 'true,true': [0.05009607255241395, nan]}, {'': [0.020550029035572265, 0.0002478530391832809], 'true': [-4.134623677914376e-16, 5.551115123125783e-18], 'true,false': [5.551115123125783e-18, nan]}, {'': [0.015713377907917936, 0.00020631053431198894], 'true,false': [0.0, nan], 'true,true': [-2.4501473646900006e-16, nan], 'true,true,true': [-2.4501473646900006e-16, nan], 'true': [-2.4501473646900006e-16, 0.0], 'false': [0.00020631053431198894, nan]}, {'': [0.006037712427715551, 0.0001536155926793632], 'true,false': [-2.3129646346357427e-18, nan], 'true': [7.656710514656253e-17, -2.3129646346357427e-18], 'true,true': [7.656710514656253e-17, nan]}, {'': [0.0030500191857577943, 0.00014233022946268654], 'true,true,false': [0.0, nan], 'true': [0.0030500191857577943, nan], 'true,true,true': [-1.2250736823450003e-16, nan], 'true,true': [-1.2250736823450003e-16, 0.0]}, {'': [0.004353427504990123, 0.0001452632003773514], 'true,true,false': [nan, 0.0], 'true': [0.004353427504990123, nan], 'true,true': [4.2111907830609384e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), movie(C, B).;true;true
6;true;movie(C, A), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1418510649004877;  // std dev = 5,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839105;  // std dev = 8,02e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360622;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783638;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.1015963294878364;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.30004169099267897;  // std dev = 0,090, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.09269127618926089;  // std dev = 6,50e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return -0.09269127618926101;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25775912377774535;  // std dev = 0,014, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12214543331201042;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839682;  // std dev = 5,67e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.21158413398951587;  // std dev = 0,012, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10127567416787839;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109157;  // std dev = 6,50e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17843540144716047;  // std dev = 0,011, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09980544552144092;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14035898372257835;  // std dev = 0,052, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.14839101314771802;  // std dev = 0,039, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,47e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11298483730822478;  // std dev = 0,069, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.11869597010905798;  // std dev = 0,063, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06417956156079106;  // std dev = 0,001, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06921
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.62 seconds
Total inference time: 1.927 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.205 seconds
Refined model CLL: -0.066294


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06921
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.4830000000000005 seconds
Total inference time: 1.927 seconds
AUC ROC: 1.0
Total revision time: 5.4830000000000005
Best scored revision CLL: -0.066294


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:38:39
{'CLL': -0.06921, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.076635, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.924, 'Learning time': 1.302, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 1.927, 'Learning time': 5.4830000000000005, 'F1': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(I, B).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
0;true,false,true;tempadvisedby(K, B), publication(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true,true;ta(G, D, H).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;publication(G, A).;false;false
1;true,false;publication(H, B), publication(H, A).;true;true
1;true,false,false;publication(K, A).;false;false
1;true,true;projectmember(F, B).;false;true
1;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
1;true;tempadvisedby(C, B), ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;publication(J, A), publication(K, B).;true;true
2;true,false,false;projectmember(M, B).;false;false
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(J, L), professor(L).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
3;true,true,false;publication(J, A), publication(J, B).;false;false
3;true,false;tempadvisedby(K, B), publication(L, B).;true;true
3;true,false,false;projectmember(M, B), publication(N, A).;false;false
3;true,true;ta(G, A, H), ta(E, I, H).;true;true
3;true,false,true;publication(L, A).;false;false
3;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;true,true,true;samecourse(E, G).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(J, A, K).;false;false
4;false;student(B).;false;false
4;true,false;publication(L, A), publication(L, B).;false;true
4;true,false,false;ta(M, A, N).;false;false
4;true,true;publication(F, B).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(G, B), publication(H, A).;false;false
5;true,false;publication(I, A), ta(J, A, K).;false;true
5;true,false,false;publication(L, B).;false;false
5;true,true;publication(D, A), publication(D, B).;true;true
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;ta(E, C, F).;false;false
6;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
6;false;hasposition(B, L), publication(M, A).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;publication(C, J), tempadvisedby(J, K).;false;false
6;true,true;tempadvisedby(D, B), publication(E, D).;true;false
6;true,false,true;ta(H, A, I).;false;false
6;true;publication(C, A), student(A).;true;true
6;true,true,true;publication(C, F), publication(E, F).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,false;ta(E, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,false;tempadvisedby(L, B).;false;false
7;true,true;tempadvisedby(D, B).;true;true
7;true,false,true;ta(I, A, J), ta(I, G, K).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,true;publication(C, D).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,false;publication(C, H), professor(H).;false;false
8;true,false;publication(I, B).;true;true
8;true,false,false;publication(M, A).;false;false
8;true,true;publication(C, B), tempadvisedby(E, B).;true;true
8;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true,true;publication(D, E), ta(F, A, G).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(C, B).;false;false
9;true,false;tempadvisedby(I, B), publication(J, I).;true;true
9;true,false,false;publication(L, B).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,true;publication(J, B), publication(K, A).;false;false
9;true;publication(C, A), ta(D, A, E).;true;true
9;true,true,true;publication(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.5311483045160407;  // std dev = 4,531, 166,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=129 */
%   | else if ( movie(D, A) )
%   | | then return 0.3794454161817055;  // std dev = 3,752, 82,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283919;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.6110983841610333;  // std dev = 0,016, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.18538370063721002;  // std dev = 0,094, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34305505246118695;  // std dev = 3,435, 225,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11581500649360223;  // std dev = 0,357, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then return 0.0824209832652823;  // std dev = 0,241, 446,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return -0.09269127618926089;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.35813237103043466;  // std dev = 0,016, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.1639015421022425;  // std dev = 2,98e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.144157073049318;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1022885625561374;  // std dev = 0,356, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.2806484385197059;  // std dev = 0,185, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.11253606334996184;  // std dev = 0,028, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.09582517567185797;  // std dev = 0,348, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.22764718756458532;  // std dev = 0,162, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12396000242698993;  // std dev = 0,007, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08481452120961795;  // std dev = 0,326, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1901381670329976;  // std dev = 0,142, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, F), director(F) )
%   | | | then return -0.11023039596630292;  // std dev = 0,048, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07965951623178046;  // std dev = 0,296, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1625850052908491;  // std dev = 0,126, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10025471014725924;  // std dev = 0,047, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0738346684571351;  // std dev = 0,274, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.232 seconds
Total inference time: 2.685 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078963
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.534 seconds
Parameter learned model CLL: -0.078963


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [6.83e-08, 69, 0], 'false': [0.0, 301, 0], 'true,true': [8.09e-08, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'movie(D, A)'}, {'true,false,true': [3.752, 33, 49], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 314, 0], 'true,true': [4.531, 37, 129]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.016, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.094, 68, 0], 'false': [0.0, 277, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.357, 205, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 111, 0], 'true,true': [3.435, 47, 178]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'false': 'actor(B)', 'true,true': 'movie(E, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 80, 0], 'true,true,true': [0.241, 268, 178], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,false': 'movie(F, A)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,true': [2.98e-08, 37, 0], 'true,false,false,true': [0.0, 22, 0], 'true,true': [0.016, 0, 178], 'false': [0.356, 263, 0], 'true,false,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(G, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), actor(A)', 'false': 'movie(H, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.028, 106, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.185, 0, 178], 'false,true': [0.348, 275, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.007, 62, 0], 'true,true,true': [0.162, 0, 178], 'true,false,false': [0.0, 0, 0], 'false': [0.326, 309, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, F), director(F)', 'true': 'movie(C, A), movie(D, B)', 'true,true,true': 'movie(D, E)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.048, 57, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.142, 0, 178], 'false': [0.296, 286, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.126, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.047, 66, 0], 'true,false': [0.0, 0, 0], 'false': [0.274, 274, 0]}]]
[{'': [0.20131456014686921, -4.7212141910970113e-17], 'true,false,true': [6.75787928032704e-17, nan], 'true': [6.706246045376226e-15, 6.75787928032704e-17], 'true,false': [6.75787928032704e-17, nan]}, {'': [0.14462516170193668, -7.354343602612502e-17], 'true': [0.1236529367105614, 0.1716767535181729], 'true,false': [0.1716767535181729, nan]}, {'': [0.12710551688152846, -7.695408690542601e-17], 'true,false': [0.00012975482872415293, nan], 'true,false,true': [0.00012975482872415293, nan], 'true': [0.00025501228617581855, 0.00012975482872415293], 'true,true': [0.00025501228617581855, nan]}, {'': [0.0802570559927812, -2.2004420307885986e-17], 'true,false,true': [nan, 0.0006205790043360169], 'true': [0.0524306539660931, 0.0006205790043360169], 'true,false': [0.0006205790043360169, nan]}, {'': [0.05821935817421182, 1.67580833905684e-17], 'true': [0.05821935817421182, nan], 'false': [-1.9428902930940238e-17, -5.337610695313253e-18], 'true,true': [0.05821935817421182, nan]}, {'': [0.04973444274093075, 0.00048192545931291015], 'true': [0.0002469487830042179, 9.116146606152239e-05], 'true,false,false': [-1.0092936587501423e-17, nan], 'true,false': [2.400482215405744e-17, -1.0092936587501423e-17]}, {'': [0.03658688011559497, 0.00044058675334738786], 'true,false': [0.0008085621682650707, nan], 'true,true': [0.00019247239123834856, nan], 'true,true,true': [0.00019247239123834856, nan], 'true': [0.00019247239123834856, 0.0008085621682650749], 'false': [0.00044058675334738786, nan]}, {'': [0.023808037735263177, 0.0003440210783515976], 'true,false': [4.755031993627117e-05, nan], 'true': [0.00014702841809668933, 4.755031993627117e-05], 'true,true': [0.00014702841809668933, nan]}, {'': [0.016671372217344906, 0.00030677213476498495], 'true,true,false': [4.1097728877525274e-05, nan], 'true': [0.016671372217344906, nan], 'true,true,true': [0.00011333933279284328, nan], 'true,true': [0.00011333933279284328, 4.1097728877525274e-05]}, {'': [0.013706279918764164, 0.0002735154244545817], 'true,true,false': [nan, 3.3989148236793476e-05], 'true': [0.013706279918764164, nan], 'true,true': [8.89315780122797e-05, 3.3989148236793476e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
5;true,false;genre(B, D), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), movie(C, B).;true;true
6;true;movie(C, A), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.14185106490048816;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.12544463852839183;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5,58e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.11231637819360688;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783616;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878365;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else return -0.1015963294878363;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.09269127618926053;  // std dev = 7,74e-08, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return -0.09269127618926093;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694898;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694898;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 1,86e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( director(A) )
%   | | then return -0.07877675473109169;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109157;  // std dev = 5,27e-09, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return -0.0787767547310916;  // std dev = 4,56e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109169;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.07324622576333702;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1012644393839937;  // std dev = 0,093, 116,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | | else return 0.0865667575768271;  // std dev = 0,101, 127,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420283;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.08582589775787101;  // std dev = 0,093, 119,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=89 */
%   | | else return 0.09449948533364493;  // std dev = 0,089, 114,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.488 seconds
Total inference time: 2.365 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.66 seconds
Refined model CLL: -0.069616


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.914 seconds
Total inference time: 2.365 seconds
AUC ROC: 1.0
Total revision time: 7.914
Best scored revision CLL: -0.069616


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:38:53
{'CLL': -0.064753, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.080002, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.685, 'Learning time': 2.232, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.365, 'Learning time': 7.914, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(I, B).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
0;true,false,true;tempadvisedby(K, B), publication(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true,true;ta(G, D, H).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;publication(G, A).;false;false
1;true,false;publication(H, B), publication(H, A).;true;true
1;true,false,false;publication(K, A).;false;false
1;true,true;projectmember(F, B).;false;true
1;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
1;true;tempadvisedby(C, B), ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;publication(J, A), publication(K, B).;true;true
2;true,false,false;projectmember(M, B).;false;false
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(J, L), professor(L).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
3;true,true,false;publication(J, A), publication(J, B).;false;false
3;true,false;tempadvisedby(K, B), publication(L, B).;true;true
3;true,false,false;projectmember(M, B), publication(N, A).;false;false
3;true,true;ta(G, A, H), ta(E, I, H).;true;true
3;true,false,true;publication(L, A).;false;false
3;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;true,true,true;samecourse(E, G).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(J, A, K).;false;false
4;false;student(B).;false;false
4;true,false;publication(L, A), publication(L, B).;false;true
4;true,false,false;ta(M, A, N).;false;false
4;true,true;publication(F, B).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(G, B), publication(H, A).;false;false
5;true,false;publication(I, A), ta(J, A, K).;false;true
5;true,false,false;publication(L, B).;false;false
5;true,true;publication(D, A), publication(D, B).;true;true
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;ta(E, C, F).;false;false
6;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
6;false;hasposition(B, L), publication(M, A).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;publication(C, J), tempadvisedby(J, K).;false;false
6;true,true;tempadvisedby(D, B), publication(E, D).;true;false
6;true,false,true;ta(H, A, I).;false;false
6;true;publication(C, A), student(A).;true;true
6;true,true,true;publication(C, F), publication(E, F).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,false;ta(E, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,false;tempadvisedby(L, B).;false;false
7;true,true;tempadvisedby(D, B).;true;true
7;true,false,true;ta(I, A, J), ta(I, G, K).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,true;publication(C, D).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,false;publication(C, H), professor(H).;false;false
8;true,false;publication(I, B).;true;true
8;true,false,false;publication(M, A).;false;false
8;true,true;publication(C, B), tempadvisedby(E, B).;true;true
8;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true,true;publication(D, E), ta(F, A, G).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(C, B).;false;false
9;true,false;tempadvisedby(I, B), publication(J, I).;true;true
9;true,false,false;publication(L, B).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,true;publication(J, B), publication(K, A).;false;false
9;true;publication(C, A), ta(D, A, E).;true;true
9;true,true,true;publication(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.6835194526050253;  // std dev = 1,169, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5642261210138138;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.22126122956827116;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2623591616608692;  // std dev = 1,956, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11253884207647524;  // std dev = 0,235, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then return 0.050297995530009756;  // std dev = 0,226, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.35011092402789534;  // std dev = 9,13e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.1762688685360233;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10595093208339339;  // std dev = 0,167, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.27514715664826267;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.14380096400372883;  // std dev = 0,024, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.0941157426471154;  // std dev = 0,133, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2237735404508594;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.13448133532882103;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08903933025772222;  // std dev = 0,136, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1873102203725176;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, F), director(F) )
%   | | | then return -0.11958301175447227;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08124738971261314;  // std dev = 0,123, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.16044867437017893;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10755448881638519;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07652877839150067;  // std dev = 0,119, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07558
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.312 seconds
Total inference time: 3.145 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.173 seconds
Parameter learned model CLL: -0.07659


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'false': [7.6e-08, 78, 0], 'true,true': [3.33e-08, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 81, 0], 'true,true': [1.169, 2, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [7.3e-08, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.235, 69, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 6, 0], 'true,true': [1.956, 20, 45]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'false': 'actor(B)', 'true,true': 'movie(E, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'true,true,true': [0.226, 86, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.167, 89, 0], 'true,true': [9.13e-09, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(G, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), actor(A)', 'false': 'movie(H, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.024, 9, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'false,true': [0.133, 76, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [0.136, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, F), director(F)', 'true': 'movie(C, A), movie(D, B)', 'true,true,true': 'movie(D, E)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [0.123, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.73e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 84, 0]}]]
[{'': [0.11649408284023735, 7.401486830834377e-17], 'true,false,true': [-7.93016446160826e-18, nan], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.02908546225525768, -2.1930331350620375e-17], 'true': [0.02908546225525768, nan]}, {'': [0.055529134013201614, 5.98771968337163e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true': [3.947459643111668e-17, 0.0], 'true,true': [3.947459643111668e-17, nan]}, {'': [0.06407451993182424, -2.3129646346357427e-18], 'true,false,true': [nan, 0.0007982572116835405], 'true': [0.058872710905464434, 0.0007982572116835405], 'true,false': [0.0007982572116835405, nan]}, {'': [0.051175412978121816, 0.0], 'true': [0.051175412978121816, nan], 'false': [0.0, 0.0], 'true,true': [0.051175412978121816, nan]}, {'': [0.020772021442538226, 0.00031223441044452217], 'true': [5.921189464667501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.02446961481181119, 0.00023332451994975104], 'true,false': [0.0005530823726713269, nan], 'true,true': [-1.0855514018557086e-16, nan], 'true,true,true': [-1.0855514018557086e-16, nan], 'true': [-1.0855514018557086e-16, 0.0005530823726713269], 'false': [0.00023332451994975104, nan]}, {'': [0.009621982542101084, 0.0002478625357817184], 'true,false': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,true': [1.973729821555834e-17, nan]}, {'': [0.00977682933481142, 0.0001952168138484708], 'true,true,false': [-4.625929269271485e-18, nan], 'true': [0.00977682933481142, nan], 'true,true,true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, -4.625929269271485e-18]}, {'': [0.008367268519072197, 0.00016960851512400925], 'true,true,false': [nan, 1.982541115402065e-18], 'true': [0.008367268519072197, nan], 'true,true': [-3.454027187722709e-17, 1.982541115402065e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), movie(C, B).;true;true
6;true;movie(C, A), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.08518475138839691;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1348110876122217;  // std dev = 0,060, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.0684269778442027;  // std dev = 1,86e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11627068705641048;  // std dev = 0,059, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.11877976483380866;  // std dev = 0,058, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066299
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.781 seconds
Total inference time: 2.624 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.166 seconds
Refined model CLL: -0.065616


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066299
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.432 seconds
Total inference time: 2.624 seconds
AUC ROC: 1.0
Total revision time: 5.432
Best scored revision CLL: -0.065616


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:39:05
{'CLL': -0.066299, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.07558, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.145, 'Learning time': 1.312, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.624, 'Learning time': 5.432, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(I, B).;false;false
0;true,false;publication(J, A).;true;true
0;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
0;true,false,true;tempadvisedby(K, B), publication(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true,true;ta(G, D, H).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;publication(G, A).;false;false
1;true,false;publication(H, B), publication(H, A).;true;true
1;true,false,false;publication(K, A).;false;false
1;true,true;projectmember(F, B).;false;true
1;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
1;true;tempadvisedby(C, B), ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;publication(J, A), publication(K, B).;true;true
2;true,false,false;projectmember(M, B).;false;false
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(J, L), professor(L).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
3;true,true,false;publication(J, A), publication(J, B).;false;false
3;true,false;tempadvisedby(K, B), publication(L, B).;true;true
3;true,false,false;projectmember(M, B), publication(N, A).;false;false
3;true,true;ta(G, A, H), ta(E, I, H).;true;true
3;true,false,true;publication(L, A).;false;false
3;true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;true,true,true;samecourse(E, G).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(J, A, K).;false;false
4;false;student(B).;false;false
4;true,false;publication(L, A), publication(L, B).;false;true
4;true,false,false;ta(M, A, N).;false;false
4;true,true;publication(F, B).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(G, B), publication(H, A).;false;false
5;true,false;publication(I, A), ta(J, A, K).;false;true
5;true,false,false;publication(L, B).;false;false
5;true,true;publication(D, A), publication(D, B).;true;true
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;ta(E, C, F).;false;false
6;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
6;false;hasposition(B, L), publication(M, A).;false;false
6;true,false;publication(G, A).;true;true
6;true,false,false;publication(C, J), tempadvisedby(J, K).;false;false
6;true,true;tempadvisedby(D, B), publication(E, D).;true;false
6;true,false,true;ta(H, A, I).;false;false
6;true;publication(C, A), student(A).;true;true
6;true,true,true;publication(C, F), publication(E, F).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true,false;ta(E, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,false;tempadvisedby(L, B).;false;false
7;true,true;tempadvisedby(D, B).;true;true
7;true,false,true;ta(I, A, J), ta(I, G, K).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true,true;publication(C, D).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true,false;publication(C, H), professor(H).;false;false
8;true,false;publication(I, B).;true;true
8;true,false,false;publication(M, A).;false;false
8;true,true;publication(C, B), tempadvisedby(E, B).;true;true
8;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true,true;publication(D, E), ta(F, A, G).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(C, B).;false;false
9;true,false;tempadvisedby(I, B), publication(J, I).;true;true
9;true,false,false;publication(L, B).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,true;publication(J, B), publication(K, A).;false;false
9;true;publication(C, A), ta(D, A, E).;true;true
9;true,true,true;publication(C, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( genre(B, C) )
%   | then return 0.6955477322911925;  // std dev = 0,849, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( movie(D, A) )
%   | | then return 0.6411711870190051;  // std dev = 0,821, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5642313709695896;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.24556445595160858;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25685929159210646;  // std dev = 1,990, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10913469411693177;  // std dev = 0,221, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then return 0.048300387871377505;  // std dev = 0,220, 138,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3518472452067955;  // std dev = 0,005, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.19609986130819348;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.18766908302452392;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10714160574626475;  // std dev = 0,161, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.2763304359700813;  // std dev = 0,031, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1644945604780505;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.0968573760937911;  // std dev = 0,160, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2246029391473436;  // std dev = 0,027, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.14349084352221808;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09002202700996333;  // std dev = 0,143, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.18791352264314157;  // std dev = 0,023, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, F), director(F) )
%   | | | then return -0.1274161639969503;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07991901881019871;  // std dev = 0,117, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1609030276721003;  // std dev = 0,021, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11406273622458964;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07576082041510139;  // std dev = 0,107, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076187
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.128 seconds
Total inference time: 3.224 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.331 seconds
Parameter learned model CLL: -0.075361


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'false': [8.3e-08, 91, 0], 'true,true': [3.33e-08, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'genre(B, C)', 'true,false': 'movie(D, A)'}, {'true,false,true': [0.821, 1, 10], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 93, 0], 'true,true': [0.849, 1, 35]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.006, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.008, 3, 0], 'false': [6.66e-08, 82, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.221, 68, 0], 'true,false,true,true': [0.0, 0, 0], 'false': [0.0, 6, 0], 'true,true': [1.99, 21, 45]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'false': 'actor(B)', 'true,true': 'movie(E, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 6, 0], 'true,true,true': [0.22, 93, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,false': 'movie(F, A)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,true': [0.0, 5, 0], 'true,false,false,true': [3.73e-09, 3, 0], 'true,true': [0.005, 0, 45], 'false': [0.161, 76, 0], 'true,false,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(G, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), actor(A)', 'false': 'movie(H, A)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.003, 5, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.031, 0, 45], 'false,true': [0.16, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.003, 3, 0], 'true,true,true': [0.027, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [0.143, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, F), director(F)', 'true': 'movie(C, A), movie(D, B)', 'true,true,true': 'movie(D, E)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.005, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.023, 0, 45], 'false': [0.117, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.021, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 6, 0], 'true,false': [0.0, 0, 0], 'false': [0.107, 67, 0]}]]
[{'': [1.105288700071267e-15, 7.564156871072495e-17], 'true': [1.105288700071267e-15, nan]}, {'': [0.03022597869552514, -1.4325458382260084e-17], 'true': [0.020035335586801532, 0.06131238470010744], 'true,false': [0.06131238470010744, nan]}, {'': [0.03845422288302055, 5.415722071342227e-17], 'true,false': [2.2339899009839643e-05, nan], 'true,false,true': [2.2339899009839643e-05, nan], 'true': [3.0768334101299246e-05, 2.2339899009839643e-05], 'true,true': [3.0768334101299246e-05, nan]}, {'': [0.0633881539964077, -2.3129646346357427e-18], 'true,false,true': [nan, 0.000716919731496937], 'true': [0.05998307899690771, 0.000716919731496937], 'true,false': [0.000716919731496937, nan]}, {'': [0.04829559772437391, 0.0], 'true': [0.04829559772437391, nan], 'false': [0.0, 0.0], 'true,true': [0.04829559772437391, nan]}, {'': [0.03806190091887371, 0.0003391906264128275], 'true': [2.6810975634520654e-05, 1.665891151603205e-05], 'true,false,false': [4.625929269271485e-18, nan], 'true,false': [0.0, 4.625929269271485e-18]}, {'': [0.017508990347950882, 0.00027082073374789834], 'false': [0.00027082073374789834, nan], 'true,true': [2.070940753580904e-05, nan], 'true': [2.070940753580904e-05, 9.509067540480753e-06], 'true,true,true': [2.070940753580904e-05, nan], 'true,false': [9.509067540480753e-06, nan]}, {'': [0.007954254743966225, 0.00024737766370637476], 'true,false': [7.007431249111499e-06, nan], 'true': [1.5756678981531595e-05, 7.007431249111499e-06], 'true,true': [1.5756678981531595e-05, nan]}, {'': [0.008960274119191812, 0.00017868902889069262], 'true,true,false': [4.0895842294108585e-06, nan], 'true': [0.008960274119191812, nan], 'true,true,true': [1.2124606533762498e-05, nan], 'true,true': [1.2124606533762498e-05, 4.0895842294108585e-06]}, {'': [0.007857123273807488, 0.00016988254127928024], 'true,true,false': [nan, 2.9236029286764755e-06], 'true': [0.007857123273807488, nan], 'true,true': [9.50621243952633e-06, 2.9236029286764755e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
5;true,false;genre(B, D), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), movie(C, B).;true;true
6;true;movie(C, A), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0,200, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7237321131963371;  // std dev = 0,028, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27552724315403115;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5595631808348952;  // std dev = 0,034, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22476824350978236;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.42064809292947564;  // std dev = 0,034, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10423937128081424;  // std dev = 0,116, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.0925185787191669;  // std dev = 0,000831, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( female(A) )
%   | | then return 0.3065927026844859;  // std dev = 0,099, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.2967225625175571;  // std dev = 0,101, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2636625658409673;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.2575359969249519;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.22003011960808894;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.22275841820393752;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08505123067763379;  // std dev = 0,000492, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08505506493059381;  // std dev = 0,000454, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return -0.08505123067763379;  // std dev = 0,000426, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.0851247205260343;  // std dev = 0,000369, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.21573757968439153;  // std dev = 2,63e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.211426052370113;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.18220339978047828;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.18690632530413961;  // std dev = 0,000371, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07879898015044835;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07860733599707002;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.0786964919386992;  // std dev = 0,000370, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07866608240538098;  // std dev = 8,95e-05, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1814701773792846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.17831917975783362;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.15822961591171464;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07322213104592468;  // std dev = 0,000350, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07315731193035505;  // std dev = 0,000435, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.07314415510207585;  // std dev = 0,000303, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07315856718100615;  // std dev = 0,000399, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07325373869022982;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.15605370094978935;  // std dev = 2,79e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.15367075364371582;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.13755140343259414;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06831650276518862;  // std dev = 0,000285, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06831542541782734;  // std dev = 0,000219, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0683449460843591;  // std dev = 7,89e-05, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.06842960830837816;  // std dev = 7,20e-06, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13658570082962027;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.13473022778308244;  // std dev = 1,67e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.12215414317116696;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06422003962081957;  // std dev = 1,28e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0640694937620684;  // std dev = 2,32e-06, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.06413057983867572;  // std dev = 0,000371, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06409136498768468;  // std dev = 0,000323, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.06419478065604296;  // std dev = 7,59e-06, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.067 seconds
Total inference time: 3.148 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06582
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.456 seconds
Refined model CLL: -0.06582


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.981999999999999 seconds
Total inference time: 3.148 seconds
AUC ROC: 1.0
Total revision time: 5.981999999999999
Best scored revision CLL: -0.06582


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:39:18
{'CLL': -0.068174, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.076187, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.224, 'Learning time': 1.128, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.148, 'Learning time': 5.981999999999999, 'F1': 1.0}


