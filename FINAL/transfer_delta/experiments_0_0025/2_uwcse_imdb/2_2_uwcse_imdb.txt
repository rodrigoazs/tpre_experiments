Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.44905802600860323;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.03206197857777315;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.5939979917032856;  // std dev = 3,210, 53,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=39 */
%   else return -0.14185106490048816;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5194734122109546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109543;  // std dev = 7,30e-08, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( projectmember(H, B) )
%   | | | then return 0.5442835867510752;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.025085971217204506;  // std dev = 1,937, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( publication(I, B), publication(J, A) )
%   | | | then return 0.35118126973183095;  // std dev = 1,795, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.543895423237504;  // std dev = 3,520, 73,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=57 */
%   else return -0.12544463852839136;  // std dev = 2,98e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D), publication(G, B) )
%   | | | then return -0.06261460561864758;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.5617167355682501;  // std dev = 0,079, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then if ( publication(I, J), tempadvisedby(K, J) )
%   | | | then return 0.2175952686092399;  // std dev = 1,279, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.34026655531940103;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( publication(L, B), publication(M, A) )
%   | | | then return 0.23951554340594172;  // std dev = 2,381, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.40572885787285584;  // std dev = 3,793, 76,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=57 */
%   else return -0.11231637819360642;  // std dev = 5,58e-08, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), inphase(D, E) )
%   | | then if ( tempadvisedby(F, B), inphase(F, E) )
%   | | | then return 0.25231948687158534;  // std dev = 1,854, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.37827426124698754;  // std dev = 3,048, 81,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.13676595899901048;  // std dev = 1,801, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.3535415322260544;  // std dev = 1,140, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.6279502296836;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3932576689873509;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.163745649360348;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.03233414449481567;  // std dev = 1,717, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return -0.10159632948783649;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.39107792895368537;  // std dev = 0,183, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3340518574356948;  // std dev = 0,037, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.09676859228966139;  // std dev = 1,259, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2797004577283817;  // std dev = 0,953, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( publication(L, B), ta(M, A, N) )
%   | | | then return 0.20931734691110152;  // std dev = 1,213, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.08446654330241898;  // std dev = 1,607, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( publication(P, B) )
%   | | | then return 0.2237406568223496;  // std dev = 3,773, 74,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | | | else return 0.07737938202777865;  // std dev = 2,219, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   else return -0.09269127618926094;  // std dev = 2,58e-08, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.28447643314280685;  // std dev = 0,040, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, G), professor(G) )
%   | | | then return -0.14719104385488618;  // std dev = 1,913, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.45807404907073884;  // std dev = 1,007, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(H, B), ta(I, A, J) )
%   | | | then return 0.29656849402484164;  // std dev = 1,649, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.11623762371014004;  // std dev = 3,429, 53,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   else if ( ta(K, A, L) )
%   | then return -0.09305818368151933;  // std dev = 0,053, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( publication(M, A) )
%   | | then return -0.08879751160416222;  // std dev = 0,034, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( student(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.07427077724069388;  // std dev = 0,552, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(D, E), professor(E) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.1427063425261223;  // std dev = 1,903, 45,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return -0.06408296921177313;  // std dev = 1,814, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.4978385130440359;  // std dev = 0,144, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23133073705228113;  // std dev = 0,684, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( projectmember(H, B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.07476266826051796;  // std dev = 0,785, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.456796219793328;  // std dev = 0,045, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(K, A, L), publication(M, B) )
%   | | | then return 0.25639985788177005;  // std dev = 1,374, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.16641501518630747;  // std dev = 2,724, 39,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   else return -0.07870365366454207;  // std dev = 0,022, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( sameperson(B, D), publication(F, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1775554615984881;  // std dev = 0,966, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.0415145386587071;  // std dev = 2,936, 49,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | | else if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.3716523051241537;  // std dev = 0,353, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18280409191583097;  // std dev = 2,252, 45,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=37 */
%   | else if ( publication(J, B) )
%   | | then if ( ta(K, A, L) )
%   | | | then return 0.008893456388304485;  // std dev = 1,264, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.3336944762102717;  // std dev = 0,695, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.24069570931480333;  // std dev = 0,876, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( professor(B), publication(M, A) )
%   | then return -0.09699872891968564;  // std dev = 0,090, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.07254178843361962;  // std dev = 0,052, 177,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.2733365180807719;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1721223539015509;  // std dev = 0,107, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( publication(H, A) )
%   | | | then return -0.17644185932592013;  // std dev = 0,739, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19011818383767065;  // std dev = 1,532, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.05072228025090339;  // std dev = 3,918, 71,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return 0.12257742081690402;  // std dev = 1,768, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.06834215238848362;  // std dev = 0,026, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.11567211116553401;  // std dev = 0,811, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.22328206831049305;  // std dev = 0,972, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.047244742296867544;  // std dev = 2,980, 52,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.12854863906406094;  // std dev = 2,222, 43,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then return 0.16627231522365774;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return -0.5562214823023566;  // std dev = 0,472, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06679883738098805;  // std dev = 1,794, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( ta(M, A, N) )
%   | then return -0.08442154451937026;  // std dev = 0,098, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.06017615800625623;  // std dev = 0,047, 136,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=1 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true;publication(C, A), publication(C, B).;false;true
0;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;publication(E, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;projectmember(H, B).;false;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,false,false;publication(I, B), publication(J, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D), publication(G, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;tempadvisedby(H, B), publication(I, H).;true;true
2;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,false;publication(L, B), publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;tempadvisedby(F, B), inphase(F, E).;false;false
3;true;publication(C, B).;true;true
3;true,false;publication(H, A).;true;true
3;true,true,false;tempadvisedby(G, B).;false;false
3;true,true;publication(C, D), inphase(D, E).;true;true
3;true,false,true;publication(H, I), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;publication(G, D).;false;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(J, A), tempadvisedby(K, B).;true;true
4;true,true,false;ta(H, A, I).;false;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,false,true;publication(L, B), ta(M, A, N).;false;false
4;true,false,false;publication(P, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,false,true;publication(E, G), professor(G).;false;false
5;false,false,false;student(B).;false;false
5;true;publication(D, B), publication(D, A).;false;true
5;true,false;publication(E, A), publication(F, B).;true;true
5;false,false;publication(M, A).;false;true
5;true,false,false;publication(H, B), ta(I, A, J).;false;false
5;false;ta(K, A, L).;false;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;publication(C, A).;false;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,false;ta(F, A, G).;false;false
6;true,true;publication(D, E), professor(E).;true;true
6;true,false,true;ta(I, A, J).;false;false
6;true,false,false;ta(K, A, L), publication(M, B).;false;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
7;true,true,true;publication(F, A).;false;false
7;true;hasposition(D, C), tempadvisedby(E, D).;true;true
7;true,false;publication(J, B).;true;false
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;sameperson(B, D), publication(F, B).;true;true
7;true,false,true;ta(K, A, L).;false;false
7;false;professor(B), publication(M, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,false,true;publication(H, A).;false;false
8;true;publication(C, B), publication(C, A).;true;true
8;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
8;true,true;tempadvisedby(D, B), publication(C, D).;false;false
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;true,false;publication(K, A), publication(K, B).;false;true
9;true,true,false;tempadvisedby(J, B).;false;false
9;false;ta(M, A, N).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.374963591236495;  // std dev = 0,142, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.33005144816462106;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14128614875143106;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13297620569972946;  // std dev = 1,580, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.08728014981121114;  // std dev = 0,078, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.0851847513883969;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(D, E), director(E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.2366778850823352;  // std dev = 4,21e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11575945214487637;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08297203015455377;  // std dev = 0,079, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.11600280326351356;  // std dev = 1,136, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | | else return -0.0743811796893054;  // std dev = 0,062, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(D, A) )
%   | then return -0.0729619547268854;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.0729619547268854;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17892309254130742;  // std dev = 7,88e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09767268242521703;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07659918509986884;  // std dev = 0,145, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.006164117411315067;  // std dev = 1,376, 162,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06346979751579084;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077472
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.409 seconds
Total inference time: 3.534 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.646 seconds
Parameter learned model CLL: -0.076476


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [8.3e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'genre(B, G)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false': 'movie(F, G)'}, {'true,true,true': [1.03e-07, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.02e-08, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.142, 5, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.83e-08, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'false': 'movie(G, A)'}, {'false,true': [3.73e-09, 10, 0], 'true,false,true,true': [0.078, 76, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [1.58, 33, 56], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(D, E), director(E)'}, {'true,true,true,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.21e-08, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.079, 109, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'false': 'director(B), movie(D, A)'}, {'true,true,true': [1.136, 22, 56], 'true,true,false': [0.062, 81, 0], 'false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [7.88e-08, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false': [0.145, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [1.376, 106, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.11928994082840205, 7.734137924355023e-17], 'true,false,true': [-9.25185853854297e-18, nan], 'true': [-1.2688263138573217e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.062400069768027915, -8.458842092382146e-18], 'true,false,true': [-2.3129646346357427e-18, nan], 'true': [-1.9032394707859825e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,true,true': [-1.9032394707859825e-16, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.027738687907221463, 6.439293542825907e-17], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan]}, {'': [0.020277621253640864, 2.5342047301226398e-17], 'true': [0.020277621253640864, nan], 'true,true': [0.020277621253640864, nan]}, {'': [0.007396498986283852, 1.9401955770148367e-17], 'true,false,true': [0.0, nan], 'true': [-1.586032892321652e-17, 0.0], 'true,true': [-1.586032892321652e-17, nan], 'true,false': [0.0, nan]}, {'': [0.027217489570165627, 1.3877787807814458e-18], 'true,false,true': [7.90325019060161e-05, nan], 'true': [0.028046584027161297, 7.90325019060161e-05], 'true,false': [7.90325019060161e-05, nan], 'false': [1.3877787807814458e-18, nan]}, {'': [0.009346783517362612, 5.705394149851277e-05], 'true,true,true': [3.172065784643304e-17, -2.7755575615628915e-18], 'true': [0.009346783517362612, nan], 'true,true': [0.009346783517362612, nan]}, {'': [0.017194458866885788, 0.0], 'true': [0.017194458866885788, nan], 'true,true': [0.016536568375802484, 4.689653236246204e-05], 'false': [0.0, 0.0]}, {'': [0.004760324969825247, 0.0001937585861033548], 'true': [1.1102230246251565e-16, 0.0], 'true,true': [1.1102230246251565e-16, nan], 'true,false': [0.0, nan]}, {'': [0.011682097357575595, 0.0], 'true': [0.011682097357575595, nan], 'true,true': [0.011682097357575595, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
7;false;director(B), movie(D, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 8,30e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783637;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926094;  // std dev = 5,16e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883969;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839682;  // std dev = 4,34e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.18985878664194053;  // std dev = 0,073, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.20975771563253548;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6,14e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1785036770329957;  // std dev = 0,011, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09427182000740719;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333707;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.15515233115229854;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15256183953230906;  // std dev = 4,93e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08678741261110143;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420278;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13588449148149553;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13386491489433083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.08029794926219058;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.74 seconds
Total inference time: 2.858 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063933
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.366 seconds
Refined model CLL: -0.063933


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.161 seconds
Total inference time: 2.858 seconds
AUC ROC: 1.0
Total revision time: 6.161
Best scored revision CLL: -0.063933


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:21:31
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.409, 'Inference time': 3.534, 'CLL': -0.077472, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 6.161, 'Inference time': 2.858, 'CLL': -0.065668, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true;publication(C, A), publication(C, B).;false;true
0;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;publication(E, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;projectmember(H, B).;false;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,false,false;publication(I, B), publication(J, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D), publication(G, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;tempadvisedby(H, B), publication(I, H).;true;true
2;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,false;publication(L, B), publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;tempadvisedby(F, B), inphase(F, E).;false;false
3;true;publication(C, B).;true;true
3;true,false;publication(H, A).;true;true
3;true,true,false;tempadvisedby(G, B).;false;false
3;true,true;publication(C, D), inphase(D, E).;true;true
3;true,false,true;publication(H, I), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;publication(G, D).;false;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(J, A), tempadvisedby(K, B).;true;true
4;true,true,false;ta(H, A, I).;false;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,false,true;publication(L, B), ta(M, A, N).;false;false
4;true,false,false;publication(P, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,false,true;publication(E, G), professor(G).;false;false
5;false,false,false;student(B).;false;false
5;true;publication(D, B), publication(D, A).;false;true
5;true,false;publication(E, A), publication(F, B).;true;true
5;false,false;publication(M, A).;false;true
5;true,false,false;publication(H, B), ta(I, A, J).;false;false
5;false;ta(K, A, L).;false;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;publication(C, A).;false;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,false;ta(F, A, G).;false;false
6;true,true;publication(D, E), professor(E).;true;true
6;true,false,true;ta(I, A, J).;false;false
6;true,false,false;ta(K, A, L), publication(M, B).;false;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
7;true,true,true;publication(F, A).;false;false
7;true;hasposition(D, C), tempadvisedby(E, D).;true;true
7;true,false;publication(J, B).;true;false
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;sameperson(B, D), publication(F, B).;true;true
7;true,false,true;ta(K, A, L).;false;false
7;false;professor(B), publication(M, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,false,true;publication(H, A).;false;false
8;true;publication(C, B), publication(C, A).;true;true
8;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
8;true,true;tempadvisedby(D, B), publication(C, D).;false;false
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;true,false;publication(K, A), publication(K, B).;false;true
9;true,true,false;tempadvisedby(J, B).;false;false
9;false;ta(M, A, N).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 7,45e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.39198358840522113;  // std dev = 0,112, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.32629897382147827;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.143363723316744;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6,50e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13910306913726936;  // std dev = 1,547, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.08895348284671536;  // std dev = 0,105, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.0851847513883969;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(D, E), director(E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.23319197855918186;  // std dev = 5,58e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1171246057923654;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08065265217833939;  // std dev = 0,057, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.09314145509397935;  // std dev = 1,289, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | | else return -0.0749065874544241;  // std dev = 0,071, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07311898945906534;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17994681704079926;  // std dev = 5,58e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09868010416897663;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07639463363193169;  // std dev = 0,149, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.0010008797593887141;  // std dev = 1,437, 177,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06361063445921601;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.444 seconds
Total inference time: 3.0 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075606
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.57 seconds
Parameter learned model CLL: -0.075606


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'genre(B, G)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 11, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false': 'movie(F, G)'}, {'true,true,true': [1.19e-07, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.112, 3, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'false': 'movie(G, A)'}, {'false,true': [0.0, 8, 0], 'true,false,true,true': [0.105, 77, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [1.547, 31, 58], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(D, E), director(E)'}, {'true,true,true,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [5.58e-08, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.057, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'false': 'director(B), movie(D, A)'}, {'true,true,true': [1.289, 32, 58], 'true,true,false': [0.071, 80, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [5.58e-08, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'false': [0.149, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [1.437, 119, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 8, 0]}]]
[{'': [0.07306626354245364, -2.7755575615628914e-17], 'true,false,true': [-2.7755575615628915e-18, nan], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.09566469123141852, 5.652044489000796e-17], 'true,false,true': [2.523234146875356e-18, nan], 'true': [-1.2250736823450003e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,true,true': [-1.2250736823450003e-16, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.05183955851928754, 5.607186993056347e-17], 'true,false,true': [-1.5419764230904951e-18, nan], 'true': [2.4501473646900006e-16, -1.5419764230904951e-18], 'true,true': [2.4501473646900006e-16, nan], 'true,false': [-1.5419764230904951e-18, nan]}, {'': [0.012601093207619572, -1.1485065771984378e-17], 'true': [0.012601093207619572, nan], 'true,true': [0.012601093207619572, nan]}, {'': [0.016117179197307322, 3.515706244646329e-17], 'true,false,true': [0.0, nan], 'true': [-9.188052617587502e-17, 0.0], 'true,true': [-9.188052617587502e-17, nan], 'true,false': [0.0, nan]}, {'': [0.02741579354174845, 0.0], 'true,false,true': [0.00014203336804922558, nan], 'true': [0.026887169302082195, 0.00014203336804922558], 'true,false': [0.00014203336804922558, nan], 'false': [0.0, nan]}, {'': [0.005738666329825879, 3.400268212878005e-05], 'true,true,true': [5.3596973602593766e-17, 0.0], 'true': [0.005738666329825879, nan], 'true,true': [0.005738666329825879, nan]}, {'': [0.016846083471444475, -1.3877787807814458e-18], 'true': [0.016846083471444475, nan], 'true,true': [0.0184752703188822, 6.258347753874404e-05], 'false': [nan, -1.3877787807814458e-18]}, {'': [0.009027490701341515, 0.00017960550629229148], 'true': [5.3596973602593766e-17, -1.5419764230904951e-18], 'true,true': [5.3596973602593766e-17, nan], 'true,false': [-1.5419764230904951e-18, nan]}, {'': [0.011667193914826934, 8.673617379884035e-19], 'true': [0.011667193914826934, nan], 'true,true': [0.011667193914826934, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839105;  // std dev = 8,02e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360621;  // std dev = 8,82e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783634;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883969;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0851847513883968;  // std dev = 4,94e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return -0.0851847513883969;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6,14e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420265;  // std dev = 5,48e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.458 seconds
Total inference time: 2.566 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.519 seconds
Refined model CLL: -0.063422


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.9910000000000005 seconds
Total inference time: 2.566 seconds
AUC ROC: 1.0
Total revision time: 5.9910000000000005
Best scored revision CLL: -0.063422


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:21:44
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.444, 'Inference time': 3.0, 'CLL': -0.077289, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.9910000000000005, 'Inference time': 2.566, 'CLL': -0.064225, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true;publication(C, A), publication(C, B).;false;true
0;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;publication(E, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;projectmember(H, B).;false;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,false,false;publication(I, B), publication(J, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D), publication(G, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;tempadvisedby(H, B), publication(I, H).;true;true
2;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,false;publication(L, B), publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;tempadvisedby(F, B), inphase(F, E).;false;false
3;true;publication(C, B).;true;true
3;true,false;publication(H, A).;true;true
3;true,true,false;tempadvisedby(G, B).;false;false
3;true,true;publication(C, D), inphase(D, E).;true;true
3;true,false,true;publication(H, I), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;publication(G, D).;false;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(J, A), tempadvisedby(K, B).;true;true
4;true,true,false;ta(H, A, I).;false;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,false,true;publication(L, B), ta(M, A, N).;false;false
4;true,false,false;publication(P, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,false,true;publication(E, G), professor(G).;false;false
5;false,false,false;student(B).;false;false
5;true;publication(D, B), publication(D, A).;false;true
5;true,false;publication(E, A), publication(F, B).;true;true
5;false,false;publication(M, A).;false;true
5;true,false,false;publication(H, B), ta(I, A, J).;false;false
5;false;ta(K, A, L).;false;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;publication(C, A).;false;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,false;ta(F, A, G).;false;false
6;true,true;publication(D, E), professor(E).;true;true
6;true,false,true;ta(I, A, J).;false;false
6;true,false,false;ta(K, A, L), publication(M, B).;false;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
7;true,true,true;publication(F, A).;false;false
7;true;hasposition(D, C), tempadvisedby(E, D).;true;true
7;true,false;publication(J, B).;true;false
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;sameperson(B, D), publication(F, B).;true;true
7;true,false,true;ta(K, A, L).;false;false
7;false;professor(B), publication(M, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,false,true;publication(H, A).;false;false
8;true;publication(C, B), publication(C, A).;true;true
8;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
8;true,true;tempadvisedby(D, B), publication(C, D).;false;false
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;true,false;publication(K, A), publication(K, B).;false;true
9;true,true,false;tempadvisedby(J, B).;false;false
9;false;ta(M, A, N).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0,000, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.11231637819360625;  // std dev = 5,27e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360683;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28993572402493545;  // std dev = 0,223, 236,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.34911661027017926;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.13128137534190262;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926065;  // std dev = 2,11e-08, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20319016405827278;  // std dev = 2,136, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.09614442561005372;  // std dev = 0,205, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.08518475138839678;  // std dev = 4,08e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(D, E), director(E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.23591070741847633;  // std dev = 1,69e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1074456606724217;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08313384176421643;  // std dev = 0,164, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.12927113911058297;  // std dev = 1,860, 231,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   | | else return -0.07851684910306773;  // std dev = 0,147, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(D, A) )
%   | then return -0.07295101078729552;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.0729510107872955;  // std dev = 1,05e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1764752260144356;  // std dev = 1,66e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09086946435930768;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07516228402385555;  // std dev = 0,263, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.028106280043748228;  // std dev = 2,248, 394,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06354628404756624;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.717 seconds
Total inference time: 2.961 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078965
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.89 seconds
Parameter learned model CLL: -0.078965


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [6.14e-08, 59, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.09e-06, 0, 178], 'false': [0.0, 303, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'genre(B, G)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 178], 'true,false,true,false': [0.0, 28, 0], 'true,false,true,true': [0.0, 25, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false': 'movie(F, G)'}, {'true,true,true': [5.9e-07, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-08, 67, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.223, 58, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 301, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 288, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'false': 'movie(G, A)'}, {'false,true': [4.08e-08, 109, 0], 'true,false,true,true': [0.205, 183, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [2.136, 44, 178], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(D, E), director(E)'}, {'true,true,true,false': [0.0, 66, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.69e-07, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.164, 291, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'false': 'director(B), movie(D, A)'}, {'true,true,true': [1.86, 53, 178], 'true,true,false': [0.147, 181, 0], 'false,true': [0.0, 30, 0], 'true,false': [0.0, 0, 0], 'false,false': [1.05e-08, 79, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.66e-07, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 61, 0], 'false': [0.263, 290, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [2.248, 216, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 101, 0]}]]
[{'': [0.18697146112624974, -3.8106664871622534e-17], 'true,false,true': [6.39789539614497e-17, nan], 'true': [6.706246045376226e-15, 6.39789539614497e-17], 'true,false': [6.39789539614497e-17, nan]}, {'': [0.126212127932316, -6.53509205130527e-17], 'true,false,true': [-6.661338147750939e-18, -7.93016446160826e-18], 'true': [-3.193450497798203e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan], 'true,true,true': [-3.193450497798203e-15, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.08857334229290718, -9.208538799566516e-17], 'true,false,true': [4.142623226213271e-17, nan], 'true': [1.9559884299013994e-15, 4.142623226213271e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,false': [4.142623226213271e-17, nan]}, {'': [0.049950821560785535, -5.753979795399482e-17], 'true': [0.049950821560785535, nan], 'true,true': [0.049950821560785535, nan]}, {'': [0.03511704666261887, 1.5419764230904951e-18], 'true,false,true': [-2.7078610356711136e-18, nan], 'true': [-8.781988868945058e-16, -2.7078610356711136e-18], 'true,true': [-8.781988868945058e-16, nan], 'true,false': [-2.7078610356711136e-18, nan]}, {'': [0.03356392812896747, 1.5278298504015917e-17], 'true,false,true': [0.00022878944579975325, nan], 'true': [0.020556427201069847, 0.00022878944579975325], 'true,false': [0.00022878944579975325, nan], 'false': [1.5278298504015917e-17, nan]}, {'': [0.023263470169892237, 9.263487524912327e-05], 'true,true,true': [1.5967252488991015e-16, -1.6821560979169039e-18], 'true': [0.023263470169892237, nan], 'true,true': [0.023263470169892237, nan]}, {'': [0.019085996927949513, 1.731540497121804e-17], 'true': [0.019085996927949513, nan], 'true,true': [0.014978700394866592, 0.00012008804794696631], 'false': [0.0, 1.4053456007913374e-18]}, {'': [0.013586173668676689, 0.0002387221388740636], 'true': [1.5468275848710047e-16, -5.4601132358614255e-18], 'true,true': [1.5468275848710047e-16, nan], 'true,false': [-5.4601132358614255e-18, nan]}, {'': [0.012827559709685755, 0.0], 'true': [0.012827559709685755, nan], 'true,true': [0.012827559709685755, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
1;true,false;genre(B, G).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
7;false;director(B), movie(D, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.14185106490048782;  // std dev = 1,07e-07, 331,000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839177;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360676;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783658;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( actor(A) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.08518475138839678;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13521964412193194;  // std dev = 0,126, 120,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=89 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5,58e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.07877675473109153;  // std dev = 5,96e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.07877675473109168;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18265914836923924;  // std dev = 0,074, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08136202628896665;  // std dev = 0,057, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(E, A) )
%   | then return -0.07324622576333702;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1618855244685977;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.15202536756760843;  // std dev = 3,73e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.08277499265007025;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.0679114468671216;  // std dev = 1,86e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(B) )
%   | then return -0.06842697784420282;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.06842697784420267;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420265;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820261;  // std dev = 1,05e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06419184008202611;  // std dev = 1,05e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return 0.14110398322576445;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.1334458653681256;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( director(B), female(A) )
%   | | then return -0.0767035895768095;  // std dev = 2,63e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( actor(B) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.06373679183534108;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06419184008202622;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063762
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.387 seconds
Total inference time: 2.788 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066515
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.655 seconds
Refined model CLL: -0.066515


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063762
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.649 seconds
Total inference time: 2.788 seconds
AUC ROC: 1.0
Total revision time: 9.649
Best scored revision CLL: -0.066515


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:22:00
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.717, 'Inference time': 2.961, 'CLL': -0.079315, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 9.649, 'Inference time': 2.788, 'CLL': -0.063762, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true;publication(C, A), publication(C, B).;false;true
0;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;publication(E, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;projectmember(H, B).;false;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,false,false;publication(I, B), publication(J, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D), publication(G, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;tempadvisedby(H, B), publication(I, H).;true;true
2;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,false;publication(L, B), publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;tempadvisedby(F, B), inphase(F, E).;false;false
3;true;publication(C, B).;true;true
3;true,false;publication(H, A).;true;true
3;true,true,false;tempadvisedby(G, B).;false;false
3;true,true;publication(C, D), inphase(D, E).;true;true
3;true,false,true;publication(H, I), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;publication(G, D).;false;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(J, A), tempadvisedby(K, B).;true;true
4;true,true,false;ta(H, A, I).;false;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,false,true;publication(L, B), ta(M, A, N).;false;false
4;true,false,false;publication(P, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,false,true;publication(E, G), professor(G).;false;false
5;false,false,false;student(B).;false;false
5;true;publication(D, B), publication(D, A).;false;true
5;true,false;publication(E, A), publication(F, B).;true;true
5;false,false;publication(M, A).;false;true
5;true,false,false;publication(H, B), ta(I, A, J).;false;false
5;false;ta(K, A, L).;false;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;publication(C, A).;false;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,false;ta(F, A, G).;false;false
6;true,true;publication(D, E), professor(E).;true;true
6;true,false,true;ta(I, A, J).;false;false
6;true,false,false;ta(K, A, L), publication(M, B).;false;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
7;true,true,true;publication(F, A).;false;false
7;true;hasposition(D, C), tempadvisedby(E, D).;true;true
7;true,false;publication(J, B).;true;false
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;sameperson(B, D), publication(F, B).;true;true
7;true,false,true;ta(K, A, L).;false;false
7;false;professor(B), publication(M, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,false,true;publication(H, A).;false;false
8;true;publication(C, B), publication(C, A).;true;true
8;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
8;true,true;tempadvisedby(D, B), publication(C, D).;false;false
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;true,false;publication(K, A), publication(K, B).;false;true
9;true,true,false;tempadvisedby(J, B).;false;false
9;false;ta(M, A, N).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.36560259279369556;  // std dev = 0,156, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,77e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.33212461167390817;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14015424060778736;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13861315062155186;  // std dev = 1,396, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.08817823629446095;  // std dev = 0,084, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.08518475138839689;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(D, E), director(E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.23697626693196303;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11482847305440168;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08369145398986265;  // std dev = 0,078, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.09194560053872917;  // std dev = 1,163, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | else return -0.07496226091121408;  // std dev = 0,060, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(D, A) )
%   | then return -0.07291330891925385;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07291330891925384;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18268652486694764;  // std dev = 3,94e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09690184391763118;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07812436457439018;  // std dev = 0,133, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.013880506169450855;  // std dev = 1,226, 118,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06333939182587557;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.301 seconds
Total inference time: 3.494 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.25 seconds
Parameter learned model CLL: -0.077519


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [7.6e-08, 78, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'genre(B, G)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.83e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.156, 5, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 76, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 79, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'false': 'movie(G, A)'}, {'false,true': [3.73e-09, 12, 0], 'true,false,true,true': [0.084, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [1.396, 25, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(D, E), director(E)'}, {'true,true,true,false': [3.73e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.078, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'false': 'director(B), movie(D, A)'}, {'true,true,true': [1.163, 26, 45], 'true,true,false': [0.06, 55, 0], 'false,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [6.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [3.94e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false': [0.133, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [1.226, 73, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.10380622837370317, 7.401486830834377e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.0831635545216455, -2.0898315757650005e-17], 'true,false,true': [-1.982541115402065e-18, nan], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,true,true': [-9.473903143468002e-16, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.05193310189730332, 5.551115123125783e-17], 'true,false,true': [-1.982541115402065e-18, nan], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,true': [-3.947459643111668e-17, nan], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.024252759220113572, 4.382459307730881e-17], 'true': [0.024252759220113572, nan], 'true,true': [0.024252759220113572, nan]}, {'': [0.025983692310814304, 0.0], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,true': [-1.7763568394002506e-16, nan], 'true,false': [0.0, nan]}, {'': [0.027320641105915675, 1.1564823173178713e-18], 'true,false,true': [0.00010753142259403158, nan], 'true': [0.027825278302252607, 0.00010753142259403158], 'true,false': [0.00010753142259403158, nan], 'false': [1.1564823173178713e-18, nan]}, {'': [0.01718980209401028, 6.591372950801154e-05], 'true,true,true': [0.0, 1.5419764230904951e-18], 'true': [0.01718980209401028, nan], 'true,true': [0.01718980209401028, nan]}, {'': [0.017606629240764792, 8.163404592832033e-19], 'true': [0.017606629240764792, nan], 'true,true': [0.019035179543891317, 6.460678526215064e-05], 'false': [0.0, 2.7755575615628915e-18]}, {'': [0.005860282412633056, 0.00019754589569981017], 'true': [3.454027187722709e-17, 0.0], 'true,true': [3.454027187722709e-17, nan], 'true,false': [0.0, nan]}, {'': [0.012734589575168922, 6.938893903907229e-19], 'true': [0.012734589575168922, nan], 'true,true': [0.012734589575168922, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
7;false;director(B), movie(D, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,28e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0.17165426462552502;  // std dev = 0,248, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.15344948653347498;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08578615119950496;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 5,27e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1345576624627994;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.13455766246279935;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07929292121393748;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06484083709247848;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065265
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.554 seconds
Total inference time: 2.514 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.188 seconds
Refined model CLL: -0.064737


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065265
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.293 seconds
Total inference time: 2.514 seconds
AUC ROC: 1.0
Total revision time: 5.293
Best scored revision CLL: -0.064737


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:22:12
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.301, 'Inference time': 3.494, 'CLL': -0.077101, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.293, 'Inference time': 2.514, 'CLL': -0.065265, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(D, E), ta(F, E, G).;false;false
0;true;publication(C, A), publication(C, B).;false;true
0;true,false,false;tempadvisedby(H, B), ta(I, A, J).;false;false
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,true;publication(E, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;projectmember(H, B).;false;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,false,false;publication(I, B), publication(J, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true,true;publication(G, D), publication(G, B).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,false;tempadvisedby(H, B), publication(I, H).;true;true
2;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
2;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
2;true,false,false;publication(L, B), publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,true;tempadvisedby(F, B), inphase(F, E).;false;false
3;true;publication(C, B).;true;true
3;true,false;publication(H, A).;true;true
3;true,true,false;tempadvisedby(G, B).;false;false
3;true,true;publication(C, D), inphase(D, E).;true;true
3;true,false,true;publication(H, I), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true,true;publication(G, D).;false;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(J, A), tempadvisedby(K, B).;true;true
4;true,true,false;ta(H, A, I).;false;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,false,true;publication(L, B), ta(M, A, N).;false;false
4;true,false,false;publication(P, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,false,true;publication(E, G), professor(G).;false;false
5;false,false,false;student(B).;false;false
5;true;publication(D, B), publication(D, A).;false;true
5;true,false;publication(E, A), publication(F, B).;true;true
5;false,false;publication(M, A).;false;true
5;true,false,false;publication(H, B), ta(I, A, J).;false;false
5;false;ta(K, A, L).;false;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,true;publication(C, A).;false;false
6;true;publication(C, B), publication(D, A).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,true,false;ta(F, A, G).;false;false
6;true,true;publication(D, E), professor(E).;true;true
6;true,false,true;ta(I, A, J).;false;false
6;true,false,false;ta(K, A, L), publication(M, B).;false;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
7;true,true,true;publication(F, A).;false;false
7;true;hasposition(D, C), tempadvisedby(E, D).;true;true
7;true,false;publication(J, B).;true;false
7;true,true,false;publication(G, A), ta(H, A, I).;false;false
7;true,true;sameperson(B, D), publication(F, B).;true;true
7;true,false,true;ta(K, A, L).;false;false
7;false;professor(B), publication(M, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true,false,true;publication(H, A).;false;false
8;true;publication(C, B), publication(C, A).;true;true
8;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
8;true,true;tempadvisedby(D, B), publication(C, D).;false;false
8;true,false,false;publication(I, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;true,false;publication(K, A), publication(K, B).;false;true
9;true,true,false;tempadvisedby(J, B).;false;false
9;false;ta(M, A, N).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3751372646769921;  // std dev = 0,142, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,87e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.33001304706295187;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.14130722088541403;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 1,05e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1345508618715407;  // std dev = 1,407, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.08717621446089455;  // std dev = 0,067, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.0851847513883969;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(D, E), director(E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.23636910600133734;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1157857136206918;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08304544965130885;  // std dev = 0,073, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.11157491354745228;  // std dev = 1,044, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | else return -0.07451667514958901;  // std dev = 0,053, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07295698889737036;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1793681820105571;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07483736767657749;  // std dev = 0,118, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, A) )
%   | | then return 0.005950584851645942;  // std dev = 1,233, 132,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06357052783444651;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077997
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.368 seconds
Total inference time: 3.169 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076912
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.238 seconds
Parameter learned model CLL: -0.076912


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [8.69e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'genre(B, G)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 2, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, H)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.142, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.87e-08, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false,true': 'movie(D, F), director(F)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'false': 'movie(G, A)'}, {'false,true': [0.0, 8, 0], 'true,false,true,true': [0.067, 60, 0], 'true,false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [1.407, 26, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(D, E), director(E)'}, {'true,true,true,false': [3.73e-09, 6, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.21e-08, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.073, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'false': 'director(B), movie(D, A)'}, {'true,true,true': [1.044, 19, 45], 'true,true,false': [0.053, 56, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [4.71e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.118, 86, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, A)'}, {'true,true,true': [1.233, 87, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 6, 0]}]]
[{'': [0.05859375000000089, 7.783006770568107e-17], 'true,false,true': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.04182928783975578, -1.4640303621430636e-17], 'true,false,true': [0.0, 0.0], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,true,true': [-9.473903143468002e-16, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.0181629835776121, 6.530723674265627e-17], 'true,false,true': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,true': [-3.947459643111668e-17, nan], 'true,false': [0.0, nan]}, {'': [0.020202215093805483, 4.469729060179202e-17], 'true': [0.020202215093805483, nan], 'true,true': [0.020202215093805483, nan]}, {'': [0.013016179393296098, 1.206764157201257e-18], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [0.0, 2.3129646346357427e-18], 'true,true': [0.0, nan], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.027358471842282468, 0.0], 'true,false,true': [7.535257821333722e-05, nan], 'true': [0.0278972718467275, 7.535257821333722e-05], 'true,false': [7.535257821333722e-05, nan], 'false': [0.0, nan]}, {'': [0.012873323562251654, 5.8315918731584374e-05], 'true,true,true': [3.947459643111668e-17, 2.3129646346357427e-18], 'true': [0.012873323562251654, nan], 'true,true': [0.012873323562251654, nan]}, {'': [0.017727754115991434, 1.734723475976807e-18], 'true': [0.017727754115991434, nan], 'true,true': [0.017034461695181302, 5.071263984893215e-05], 'false': [nan, 1.734723475976807e-18]}, {'': [4.9343245538895844e-17, 0.0001628937948224913], 'true': [4.9343245538895844e-17, nan], 'true,true': [4.9343245538895844e-17, nan]}, {'': [0.011518875654100843, 0.0], 'true': [0.011518875654100843, nan], 'true,true': [0.011518875654100843, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
1;true,false;genre(B, G).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839683;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.18517917671412454;  // std dev = 0,082, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(A) )
%   | | | then return 0.1654250984829858;  // std dev = 0,274, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.1807068820744768;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15426042025060752;  // std dev = 4,93e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.15547721579576546;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.11836410662241381;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420271;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.06842697784420265;  // std dev = 1,44e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1351898761812587;  // std dev = 1,67e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.1361373207350218;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.10691469048087776;  // std dev = 0,000973, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.022 seconds
Total inference time: 2.76 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065335
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.316 seconds
Refined model CLL: -0.065335


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.944 seconds
Total inference time: 2.76 seconds
AUC ROC: 1.0
Total revision time: 5.944
Best scored revision CLL: -0.065335


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:22:24
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.368, 'Inference time': 3.169, 'CLL': -0.077997, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 5.944, 'Inference time': 2.76, 'CLL': -0.06726, 'AUC PR': 1.0, 'Recall': 1.0}


