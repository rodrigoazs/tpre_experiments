Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04862512557570276;  // std dev = 1,799, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.6637044906550671;  // std dev = 2,375, 36,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | | else return 0.5248156017661779;  // std dev = 3,266, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   else return -0.14185106490048818;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.6430183348041467;  // std dev = 0,948, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7258931177423782;  // std dev = 0,034, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.21947341221095437;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6285643213018633;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return 0.08535300653347228;  // std dev = 2,614, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.6732869483132528;  // std dev = 0,884, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.4471305047655547;  // std dev = 2,605, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | | else return 0.66405073237716;  // std dev = 1,893, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   else return -0.1254446385283914;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3741242734921423;  // std dev = 0,918, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5625454541999259;  // std dev = 0,027, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.579220947285696;  // std dev = 0,149, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return -0.20637173831047131;  // std dev = 0,164, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.20779745008582942;  // std dev = 2,282, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( projectmember(K, B), publication(L, A) )
%   | | | then return 0.7581258864467508;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39232554808246706;  // std dev = 3,886, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   else return -0.11231637819360622;  // std dev = 8,94e-08, 164,000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, F) )
%   | | | then return 0.18138176610939535;  // std dev = 0,867, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41998901937585625;  // std dev = 0,053, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.4516797793482343;  // std dev = 0,160, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | then if ( ta(J, H, K) )
%   | | | then return 0.29207001537153554;  // std dev = 2,311, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.028452194888419182;  // std dev = 2,533, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.5923689165881448;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2615188762425785;  // std dev = 3,291, 53,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   else return -0.10159632948783646;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( publication(G, A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.35989750140044435;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.42470223703422344;  // std dev = 0,819, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(H, D, I), ta(E, J, I) )
%   | | | then return 0.3900812469099631;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.17079510931590822;  // std dev = 1,627, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.46420232374259135;  // std dev = 0,092, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(L, B), publication(M, L) )
%   | | | then return -0.005008456267699933;  // std dev = 1,844, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.1643937267087082;  // std dev = 4,198, 97,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=64 */
%   else if ( ta(N, A, P) )
%   | then return -0.10156547771061133;  // std dev = 0,063, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08864950390126902;  // std dev = 0,580, 144,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.27840087811182207;  // std dev = 0,065, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08405647479663159;  // std dev = 0,914, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.3331832292152548;  // std dev = 0,057, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.29686875400631224;  // std dev = 0,132, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | then if ( ta(M, K, N), ta(P, A, N) )
%   | | | then return -0.46559748228030307;  // std dev = 0,255, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.002481971549243819;  // std dev = 1,722, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( tempadvisedby(Q, B), ta(R, Q, S) )
%   | | | then return 0.3181139732474349;  // std dev = 1,622, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.16166481742877029;  // std dev = 3,683, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   else return -0.08526389365647404;  // std dev = 0,006, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.26784364716334214;  // std dev = 0,019, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.23636913094665915;  // std dev = 0,024, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(I, G) )
%   | | | then return -0.26930891071737073;  // std dev = 0,233, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.019117394268021542;  // std dev = 1,901, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.2455829613479362;  // std dev = 1,582, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.07243839616036662;  // std dev = 3,876, 68,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   else if ( professor(B) )
%   | then if ( hasposition(B, M) )
%   | | then return -0.07906480709189466;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.05603212492965539;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07881297947448176;  // std dev = 0,005, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(G, B), publication(G, A) )
%   | | | then return 0.1659991128617295;  // std dev = 0,983, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.07254453657704327;  // std dev = 3,322, 62,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | | else if ( publication(H, B), publication(H, A) )
%   | | | then return 0.13015593629977826;  // std dev = 0,906, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.24306620799835993;  // std dev = 2,030, 30,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.18866532825834972;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04587305588643377;  // std dev = 1,145, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.14390426367514567;  // std dev = 0,831, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10854676353271553;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07292023357957343;  // std dev = 0,053, 190,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.06847587257948362;  // std dev = 0,005, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( student(A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, H), ta(G, I, F) )
%   | | | then return -0.021564708029220045;  // std dev = 1,752, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.13853248703772392;  // std dev = 1,500, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else if ( ta(J, A, K), publication(L, A) )
%   | | | then return 0.24123805187831987;  // std dev = 1,142, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.11410499982615818;  // std dev = 2,985, 65,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=49 */
%   | else if ( ta(M, A, N), projectmember(P, B) )
%   | | then return -0.487067157898517;  // std dev = 0,931, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( student(A), hasposition(B, Q) )
%   | | | then return 0.13870466588023084;  // std dev = 1,581, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.06076632775332946;  // std dev = 0,714, 18,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.1714837779243269;  // std dev = 0,041, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(D, B) )
%   | | | then return -0.010612015257239699;  // std dev = 0,944, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.32097015784675104;  // std dev = 0,911, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.15153834282738174;  // std dev = 0,056, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.16611559332146794;  // std dev = 0,055, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( projectmember(H, B), publication(I, A) )
%   | | | then return 0.3474397639369866;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11061535828483303;  // std dev = 3,786, 88,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=65 */
%   else return -0.06430745048489613;  // std dev = 0,005, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,false;ta(L, A, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;ta(G, A, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;tempadvisedby(D, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,true;ta(E, A, F).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,false;projectmember(K, B), publication(L, A).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;publication(E, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;tempadvisedby(H, B), publication(I, B).;true;true
3;true,false,false;projectmember(L, B).;false;false
3;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
3;true,false,true;ta(J, H, K).;false;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true,true;ta(G, A, F).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(H, D, I), ta(E, J, I).;false;false
4;false;ta(N, A, P).;false;false
4;true,false;projectmember(K, B).;false;true
4;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
4;true,true;publication(G, A).;true;true
4;true;tempadvisedby(D, B), ta(E, A, F).;true;true
4;true,true,true;publication(G, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true,false;tempadvisedby(I, B), publication(J, I).;false;false
5;true,false;tempadvisedby(K, B), publication(L, A).;true;true
5;true,false,false;tempadvisedby(Q, B), ta(R, Q, S).;false;false
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
5;true,false,true;ta(M, K, N), ta(P, A, N).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true,true;ta(G, D, H).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;tempadvisedby(G, B), publication(H, A).;true;true
6;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
6;true,true;tempadvisedby(E, B), publication(F, E).;false;false
6;true,false,true;publication(I, G).;false;false
6;false,true;hasposition(B, M).;false;false
6;true;publication(D, B), publication(D, A).;true;true
6;false;professor(B).;true;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,true,false;publication(H, B), publication(H, A).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,false;publication(J, A).;false;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,false,true;publication(I, A).;false;false
7;true;hasposition(D, C), projectmember(E, D).;true;true
7;true,true,true;publication(G, B), publication(G, A).;false;false
8;;advisedby(A, B) :- student(B).;false;true
8;false,true,false;ta(J, A, K), publication(L, A).;false;false
8;false,false,false;student(A), hasposition(B, Q).;false;false
8;false,false;ta(M, A, N), projectmember(P, B).;false;true
8;false,true,true;ta(G, A, H), ta(G, I, F).;false;false
8;false,true;tempadvisedby(D, B), ta(E, D, F).;true;true
8;false;student(A), publication(C, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(D, B).;false;false
9;true,false;publication(F, B), publication(F, A).;true;true
9;true,false,false;projectmember(H, B), publication(I, A).;false;false
9;true,true;publication(E, A), publication(E, B).;false;true
9;true,false,true;tempadvisedby(G, B).;false;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 7,60e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B) )
%   | | then return -0.11231637819360639;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109158;  // std dev = 5,87e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(F, B), movie(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.14125283688060264;  // std dev = 0,381, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13534617040313449;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.08343169216443679;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.494 seconds
Total inference time: 2.951 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.489 seconds
Parameter learned model CLL: -0.064052


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 103, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 123, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.03e-07, 0, 56], 'false': [7.6e-08, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,true': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.83e-08, 92, 0], 'true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'false': [5.48e-08, 97, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'true,false,true': 'movie(H, I)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [5.87e-08, 101, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, B), movie(F, A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false,true': 'movie(D, A)', 'false': 'actor(A), movie(C, B)'}, {'false,true,true': [0.381, 3, 56], 'false,true,false': [0.0, 0, 0], 'true': [4.15e-08, 87, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [3.65e-08, 0, 56], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}]]
[{'': [0.07524858908895435, 7.329627735389383e-17], 'true': [-1.2688263138573217e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [-1.9032394707859825e-16, -1.8052406904474092e-18], 'true': [-1.9032394707859825e-16, nan]}, {'': [0.028840231480148047, 5.395476381355901e-17], 'true,false': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,true,true': [1.9032394707859825e-16, nan], 'true,true': [1.9032394707859825e-16, nan]}, {'': [0.013548096682843753, 2.5342047301226398e-17], 'true': [-3.489272363107635e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.00307395351787302, 0.0], 'true': [0.00307395351787302, nan], 'true,true': [-1.2688263138573217e-16, 0.0]}, {'': [0.0020857203909695884, 3.0903115118432194e-17], 'true,true': [-3.172065784643304e-17, nan], 'true': [-3.172065784643304e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0028962540402699332, 3.407615224097015e-17], 'true,false': [0.0, nan], 'true,true': [-1.586032892321652e-17, nan], 'true,false,true': [0.0, nan], 'true': [-1.586032892321652e-17, 0.0], 'false': [nan, 3.407615224097015e-17]}, {'': [0.006466283588428164, -4.229421046191073e-18], 'true,true,false': [nan, -9.912705577010326e-19], 'true': [0.006466283588428164, nan], 'true,true': [-3.9650822308041306e-17, -9.912705577010326e-19]}, {'': [1.9779835496195318e-17, 0.0024648132790247345], 'false,true': [0.0024648132790247345, nan], 'false': [0.0024648132790247345, nan]}, {'': [0.004183720358552942, -1.586032892321652e-17], 'true,true,false': [0.0, nan], 'true': [0.004183720358552942, nan], 'true,true': [2.3790493384824782e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(E, B), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(E, A), movie(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 2,98e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839108;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360622;  // std dev = 8,02e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2940406779118005;  // std dev = 0,102, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6,14e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2578144114365854;  // std dev = 0,019, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12055682497675242;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21162374403878267;  // std dev = 0,017, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1104312726588486;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109157;  // std dev = 6,41e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1784647987318122;  // std dev = 0,015, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 4,83e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 5,77e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( female(A) )
%   | then return 0.15198491274013662;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.13909402940286533;  // std dev = 0,062, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1334142539204772;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13805491400235817;  // std dev = 1,05e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11511768061906373;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 3,16e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return -0.06692218869326938;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.495 seconds
Total inference time: 2.22 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064941
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.387 seconds
Refined model CLL: -0.064941


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.865 seconds
Total inference time: 2.951 seconds
AUC ROC: 1.0
Total revision time: 5.865
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:39:26
{'CLL': -0.067115, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.067115, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.951, 'Learning time': 1.494, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.951, 'Learning time': 5.865, 'F1': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,false;ta(L, A, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;ta(G, A, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;tempadvisedby(D, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,true;ta(E, A, F).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,false;projectmember(K, B), publication(L, A).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;publication(E, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;tempadvisedby(H, B), publication(I, B).;true;true
3;true,false,false;projectmember(L, B).;false;false
3;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
3;true,false,true;ta(J, H, K).;false;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true,true;ta(G, A, F).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(H, D, I), ta(E, J, I).;false;false
4;false;ta(N, A, P).;false;false
4;true,false;projectmember(K, B).;false;true
4;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
4;true,true;publication(G, A).;true;true
4;true;tempadvisedby(D, B), ta(E, A, F).;true;true
4;true,true,true;publication(G, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true,false;tempadvisedby(I, B), publication(J, I).;false;false
5;true,false;tempadvisedby(K, B), publication(L, A).;true;true
5;true,false,false;tempadvisedby(Q, B), ta(R, Q, S).;false;false
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
5;true,false,true;ta(M, K, N), ta(P, A, N).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true,true;ta(G, D, H).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;tempadvisedby(G, B), publication(H, A).;true;true
6;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
6;true,true;tempadvisedby(E, B), publication(F, E).;false;false
6;true,false,true;publication(I, G).;false;false
6;false,true;hasposition(B, M).;false;false
6;true;publication(D, B), publication(D, A).;true;true
6;false;professor(B).;true;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,true,false;publication(H, B), publication(H, A).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,false;publication(J, A).;false;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,false,true;publication(I, A).;false;false
7;true;hasposition(D, C), projectmember(E, D).;true;true
7;true,true,true;publication(G, B), publication(G, A).;false;false
8;;advisedby(A, B) :- student(B).;false;true
8;false,true,false;ta(J, A, K), publication(L, A).;false;false
8;false,false,false;student(A), hasposition(B, Q).;false;false
8;false,false;ta(M, A, N), projectmember(P, B).;false;true
8;false,true,true;ta(G, A, H), ta(G, I, F).;false;false
8;false,true;tempadvisedby(D, B), ta(E, D, F).;true;true
8;false;student(A), publication(C, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(D, B).;false;false
9;true,false;publication(F, B), publication(F, A).;true;true
9;true,false,false;projectmember(H, B), publication(I, A).;false;false
9;true,true;publication(E, A), publication(E, B).;false;true
9;true,false,true;tempadvisedby(G, B).;false;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 7,45e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 3,23e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,27e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( genre(B, J) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109155;  // std dev = 6,91e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(F, B), movie(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4,94e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.14186660386721797;  // std dev = 0,374, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13527435880979338;  // std dev = 5,37e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.07804284260947869;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.433 seconds
Total inference time: 2.729 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064067
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.378 seconds
Parameter learned model CLL: -0.064067


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 102, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'false': [0.0, 101, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.19e-07, 0, 58], 'false': [7.45e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 110, 0], 'true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [3.23e-09, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [9.31e-10, 6, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-08, 94, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'true,false,true': 'movie(H, I)', 'false,true': 'genre(B, J)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [6.91e-08, 120, 0], 'false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, B), movie(F, A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false,true': 'movie(D, A)', 'false': 'actor(A), movie(C, B)'}, {'false,true,true': [0.374, 3, 58], 'false,true,false': [0.0, 0, 0], 'true': [4.94e-08, 103, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [5.37e-08, 0, 58], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}]]
[{'': [0.06035379812695064, 7.401486830834377e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.08301375796543166, -1.0992307174506501e-17], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0378756149402803, 5.722799096005961e-17], 'true,false': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0], 'true,true,true': [2.4501473646900006e-16, nan], 'true,true': [2.4501473646900006e-16, nan]}, {'': [0.01626384593324757, -6.0557619525008536e-18], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.005506846810506941, 1.0980227716072976e-17], 'true': [0.005506846810506941, nan], 'true,true': [-1.5313421029312505e-16, 0.0]}, {'': [0.009842119970933802, 2.9527208101732886e-17], 'true,true': [-3.062684205862501e-17, nan], 'true': [-3.062684205862501e-17, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}, {'': [0.0070731799132398646, 3.9454206660232834e-17], 'true,false': [-1.1564823173178713e-18, nan], 'true,true': [-2.2970131543968756e-17, nan], 'true,false,true': [-1.1564823173178713e-18, nan], 'false,true': [0.0, nan], 'true': [-2.2970131543968756e-17, -1.1564823173178713e-18], 'false': [0.0, 3.9782991715734776e-17]}, {'': [0.006675749851965439, -3.112774835397635e-18], 'true,true,false': [nan, 8.673617379884035e-19], 'true': [0.006675749851965439, nan], 'true,true': [-3.062684205862501e-17, 8.673617379884035e-19]}, {'': [2.3713501496848002e-17, 0.0022874167504664433], 'false,true': [0.0022874167504664433, nan], 'false': [0.0022874167504664433, nan]}, {'': [0.0038660819068921243, -1.805240690447409e-17], 'true,true,false': [0.0, nan], 'true': [0.0038660819068921243, nan], 'true,true': [4.976861834526564e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(E, B), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(E, A), movie(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839127;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 7,60e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2726417165381251;  // std dev = 0,133, 43,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 7,15e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.26122811976649757;  // std dev = 0,033, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1200087087496519;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0851847513883968;  // std dev = 6,32e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2140306086842625;  // std dev = 0,029, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10635030932302118;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109158;  // std dev = 6,23e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.17559626857629423;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.18266385938956226;  // std dev = 9,13e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.07324622576333707;  // std dev = 1,67e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333709;  // std dev = 9,13e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333707;  // std dev = 1,49e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.0684269778442028;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420279;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420275;  // std dev = 1,29e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.06842697784420278;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.151604827986273;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15695427550984317;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.10093708784601238;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08744363108191847;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13311717752981417;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.137285519719371;  // std dev = 3,23e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.0892872085647463;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.707 seconds
Total inference time: 2.037 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.704 seconds
Refined model CLL: -0.064622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.2219999999999995 seconds
Total inference time: 2.729 seconds
AUC ROC: 1.0
Total revision time: 6.2219999999999995
Best scored revision CLL: -0.064067


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:39:38
{'CLL': -0.066488, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.066488, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.729, 'Learning time': 1.433, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.729, 'Learning time': 6.2219999999999995, 'F1': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,false;ta(L, A, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;ta(G, A, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;tempadvisedby(D, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,true;ta(E, A, F).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,false;projectmember(K, B), publication(L, A).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;publication(E, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;tempadvisedby(H, B), publication(I, B).;true;true
3;true,false,false;projectmember(L, B).;false;false
3;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
3;true,false,true;ta(J, H, K).;false;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true,true;ta(G, A, F).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(H, D, I), ta(E, J, I).;false;false
4;false;ta(N, A, P).;false;false
4;true,false;projectmember(K, B).;false;true
4;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
4;true,true;publication(G, A).;true;true
4;true;tempadvisedby(D, B), ta(E, A, F).;true;true
4;true,true,true;publication(G, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true,false;tempadvisedby(I, B), publication(J, I).;false;false
5;true,false;tempadvisedby(K, B), publication(L, A).;true;true
5;true,false,false;tempadvisedby(Q, B), ta(R, Q, S).;false;false
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
5;true,false,true;ta(M, K, N), ta(P, A, N).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true,true;ta(G, D, H).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;tempadvisedby(G, B), publication(H, A).;true;true
6;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
6;true,true;tempadvisedby(E, B), publication(F, E).;false;false
6;true,false,true;publication(I, G).;false;false
6;false,true;hasposition(B, M).;false;false
6;true;publication(D, B), publication(D, A).;true;true
6;false;professor(B).;true;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,true,false;publication(H, B), publication(H, A).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,false;publication(J, A).;false;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,false,true;publication(I, A).;false;false
7;true;hasposition(D, C), projectmember(E, D).;true;true
7;true,true,true;publication(G, B), publication(G, A).;false;false
8;;advisedby(A, B) :- student(B).;false;true
8;false,true,false;ta(J, A, K), publication(L, A).;false;false
8;false,false,false;student(A), hasposition(B, Q).;false;false
8;false,false;ta(M, A, N), projectmember(P, B).;false;true
8;false,true,true;ta(G, A, H), ta(G, I, F).;false;false
8;false,true;tempadvisedby(D, B), ta(E, D, F).;true;true
8;false;student(A), publication(C, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(D, B).;false;false
9;true,false;publication(F, B), publication(F, A).;true;true
9;true,false,false;projectmember(H, B), publication(I, A).;false;false
9;true,true;publication(E, A), publication(E, B).;false;true
9;true,false,true;tempadvisedby(G, B).;false;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004882;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.11231637819360628;  // std dev = 5,74e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360632;  // std dev = 3,65e-08, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 2,79e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then return -0.10159632948783633;  // std dev = 2,63e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783659;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.3207118471601498;  // std dev = 1,69e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03924337897522082;  // std dev = 0,139, 379,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27558389914050824;  // std dev = 0,442, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.08710107904648533;  // std dev = 0,002, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08944325729526037;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.20639433389618161;  // std dev = 1,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.07863779716876867;  // std dev = 9,13e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( genre(B, J) )
%   | | then return -0.08242125513588626;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.13706805953963777;  // std dev = 1,527, 79,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=49 */
%   | else return -0.0824212551358865;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17462565760286827;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(F, B), movie(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07312566719498267;  // std dev = 1,05e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03773907069560301;  // std dev = 2,121, 390,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07377786260188506;  // std dev = 2,58e-08, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.12148662374987838;  // std dev = 1,720, 230,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(A), genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07738150511603928;  // std dev = 0,039, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1618752927173519;  // std dev = 0,561, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.08729780096585169;  // std dev = 0,088, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06955449235496838;  // std dev = 0,056, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.528 seconds
Total inference time: 2.422 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0741
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.748 seconds
Parameter learned model CLL: -0.0741


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [8.12e-09, 62, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 284, 0], 'true,true': [8.09e-08, 0, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 53, 0], 'false': [0.0, 280, 0], 'true,true': [0.0, 0, 178]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [5.74e-09, 59, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [5.9e-07, 0, 178], 'false': [3.65e-08, 278, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,true': [2.63e-09, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 300, 0], 'true,true': [2.79e-08, 0, 178]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 27, 0], 'true,true,true': [1.69e-07, 0, 129], 'true,false': [0.0, 0, 0], 'false': [0.139, 330, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.002, 60, 0], 'true,true,true': [0.442, 0, 178], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'true,false,true': 'movie(H, I)', 'false,true': 'genre(B, J)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false': [1.527, 30, 49], 'false,false': [0.0, 290, 0], 'false,true,true': [0.0, 27, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 27, 0], 'true,true,true': [1.49e-07, 0, 129]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, B), movie(F, A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.05e-08, 30, 0], 'true,false': [0.0, 0, 0], 'false': [2.121, 341, 49]}], ['workedunder(A, B)', {'': 'actor(B)', 'false,true': 'movie(D, A)', 'false': 'actor(A), movie(C, B)', 'false,false': 'actor(A), genre(B, E)'}, {'false,true,true': [1.72, 52, 178], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.58e-08, 240, 0], 'false,false,false': [0.039, 32, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.561, 0, 178], 'true,true,false,true': [0.088, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.056, 313, 0]}]]
[{'': [0.19159722222222797, -1.1571338566515715e-16], 'true': [6.706246045376226e-15, 6.446456272017038e-17], 'true,false': [6.446456272017038e-17, nan]}, {'': [0.126212127932316, -6.026924990822278e-17], 'true,false,true': [-3.561092720495785e-17, nan], 'true': [-3.193450497798203e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan]}, {'': [0.08335194119579264, 4.792329602698518e-18], 'true,false': [3.198947698072485e-17, nan], 'true': [1.9559884299013994e-15, 3.198947698072485e-17], 'true,true,true': [1.9559884299013994e-15, nan], 'true,true': [1.9559884299013994e-15, nan]}, {'': [0.04162388152653173, -5.625129991434127e-17], 'true': [7.983626244495507e-16, 5.28677630773884e-18], 'true,false': [5.28677630773884e-18, nan]}, {'': [0.024459737095741268, 0.019238849928139932], 'true': [0.024459737095741268, nan], 'true,true': [2.2032332891786052e-16, -1.1307827102663631e-17]}, {'': [0.025622886075749404, -1.6326809185664067e-17], 'true,false': [4.488380958304431e-06, nan], 'true': [0.001096857314133982, 4.488380958304431e-06], 'true,true': [0.001096857314133982, nan]}, {'': [0.011627649109156223, 0.013585238187182082], 'true,false': [3.0839528461809902e-18, nan], 'true,true': [1.7212760071707854e-16, nan], 'true,false,true': [3.0839528461809902e-18, nan], 'false,true': [-8.22387425648264e-18, 0.029533377480336923], 'true': [1.7212760071707854e-16, 3.0839528461809902e-18], 'false': [0.031156191786663304, -3.062684205862501e-17]}, {'': [0.009396122870704418, 0.011537053943014325], 'true,true,false': [nan, 3.7007434154171884e-18], 'true': [0.009396122870704418, nan], 'true,true': [-1.3770208057366282e-17, 3.7007434154171884e-18]}, {'': [2.7755575615628915e-18, 0.015532620350524834], 'false,true': [0.012856872647136147, nan], 'false,false': [nan, 4.63794263207782e-05], 'false': [0.012856872647136147, 4.63794263207782e-05]}, {'': [0.012265842716265542, 9.905203733952825e-06], 'true,true,false': [0.00014777356464136846, nan], 'true': [0.012265842716265542, nan], 'true,true': [0.001768839796746475, 0.00014777356464136846]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false,true;genre(B, J).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(E, B), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;actor(A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(E, A), movie(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.1418510649004879;  // std dev = 2,98e-08, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.12544463852839183;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360632;  // std dev = 1,01e-07, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3,33e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783658;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.156410605828974;  // std dev = 0,202, 78,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | else return 0.24972343203954445;  // std dev = 0,156, 99,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926051;  // std dev = 1,13e-07, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.3207118471601497;  // std dev = 6,66e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0926912761892609;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.270065719354034;  // std dev = 0,160, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10183670869037667;  // std dev = 0,091, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 9,66e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.22517836295499327;  // std dev = 0,090, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10065945142759637;  // std dev = 0,026, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1857089803113133;  // std dev = 0,550, 53,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | | else return -0.07784771934970956;  // std dev = 0,003, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.07877675473109143;  // std dev = 4,94e-08, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1883384189331826;  // std dev = 0,079, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09185883819283874;  // std dev = 0,023, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), female(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1784346706895621;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.07218606999201746;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06823738459093082;  // std dev = 0,660, 343,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06874695607685288;  // std dev = 5,37e-08, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.09757098879858399;  // std dev = 0,106, 122,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=89 */
%   | | else return 0.10867353158896896;  // std dev = 0,098, 113,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | else return -0.07066656009923475;  // std dev = 0,036, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14714042384268258;  // std dev = 0,106, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08659061916457725;  // std dev = 0,072, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06487801360007553;  // std dev = 0,046, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065248
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.109 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069592
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.624 seconds
Refined model CLL: -0.069592


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065248
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.009 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0
Total revision time: 8.009
Best scored revision CLL: -0.069592


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:39:52
{'CLL': -0.065248, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.068289, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.422, 'Learning time': 2.528, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.808, 'Learning time': 8.009, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,false;ta(L, A, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;ta(G, A, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;tempadvisedby(D, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,true;ta(E, A, F).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,false;projectmember(K, B), publication(L, A).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;publication(E, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;tempadvisedby(H, B), publication(I, B).;true;true
3;true,false,false;projectmember(L, B).;false;false
3;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
3;true,false,true;ta(J, H, K).;false;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true,true;ta(G, A, F).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(H, D, I), ta(E, J, I).;false;false
4;false;ta(N, A, P).;false;false
4;true,false;projectmember(K, B).;false;true
4;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
4;true,true;publication(G, A).;true;true
4;true;tempadvisedby(D, B), ta(E, A, F).;true;true
4;true,true,true;publication(G, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true,false;tempadvisedby(I, B), publication(J, I).;false;false
5;true,false;tempadvisedby(K, B), publication(L, A).;true;true
5;true,false,false;tempadvisedby(Q, B), ta(R, Q, S).;false;false
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
5;true,false,true;ta(M, K, N), ta(P, A, N).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true,true;ta(G, D, H).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;tempadvisedby(G, B), publication(H, A).;true;true
6;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
6;true,true;tempadvisedby(E, B), publication(F, E).;false;false
6;true,false,true;publication(I, G).;false;false
6;false,true;hasposition(B, M).;false;false
6;true;publication(D, B), publication(D, A).;true;true
6;false;professor(B).;true;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,true,false;publication(H, B), publication(H, A).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,false;publication(J, A).;false;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,false,true;publication(I, A).;false;false
7;true;hasposition(D, C), projectmember(E, D).;true;true
7;true,true,true;publication(G, B), publication(G, A).;false;false
8;;advisedby(A, B) :- student(B).;false;true
8;false,true,false;ta(J, A, K), publication(L, A).;false;false
8;false,false,false;student(A), hasposition(B, Q).;false;false
8;false,false;ta(M, A, N), projectmember(P, B).;false;true
8;false,true,true;ta(G, A, H), ta(G, I, F).;false;false
8;false,true;tempadvisedby(D, B), ta(E, D, F).;true;true
8;false;student(A), publication(C, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(D, B).;false;false
9;true,false;publication(F, B), publication(F, A).;true;true
9;true,false,false;projectmember(H, B), publication(I, A).;false;false
9;true,true;publication(E, A), publication(E, B).;false;true
9;true,false,true;tempadvisedby(G, B).;false;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 5,96e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then return -0.10159632948783627;  // std dev = 1,32e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5,87e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3,49e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( genre(B, J) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109166;  // std dev = 3,80e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(F, B), movie(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4,28e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.12672375974803868;  // std dev = 0,509, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13705549930430116;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.07696022055054584;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06424108586995854;  // std dev = 0,004, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.26 seconds
Total inference time: 3.213 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064658
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.198 seconds
Parameter learned model CLL: -0.064658


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 86, 0], 'true,true': [3.33e-08, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [0.0, 77, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [5.96e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,true': [1.32e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.87e-08, 85, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 8, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 88, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'true,false,true': 'movie(H, I)', 'false,true': 'genre(B, J)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [3.8e-08, 72, 0], 'false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,true,true': [5.58e-08, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, B), movie(F, A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false,true': 'movie(D, A)', 'false': 'actor(A), movie(C, B)'}, {'false,true,true': [0.509, 6, 45], 'false,true,false': [0.0, 0, 0], 'true': [4.28e-08, 91, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.36e-08, 0, 45], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.004, 86, 0]}]]
[{'': [0.07496876301541104, 7.229359230117299e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.06424978612186535, -2.5953265510717945e-17], 'true,false,true': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.05193310189730332, 4.229421046191072e-17], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.027973194025505906, 4.0490486780446883e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.021902730958425477, 0.0], 'true': [0.021902730958425477, nan], 'true,true': [1.973729821555834e-17, 0.0]}, {'': [0.010425859500244368, 1.3877787807814457e-17], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.00969838176228774, 1.8753767307857373e-17], 'true,false': [-2.9738116731030977e-18, nan], 'true,true': [6.908054375445419e-17, nan], 'true,false,true': [-2.9738116731030977e-18, nan], 'false,true': [0.0, nan], 'true': [6.908054375445419e-17, -2.9738116731030977e-18], 'false': [0.0, 2.0045693500176437e-17]}, {'': [0.007300856491242112, -5.551115123125783e-18], 'true,true,false': [nan, 9.912705577010326e-19], 'true': [0.007300856491242112, nan], 'true,true': [-8.388351741612294e-17, 9.912705577010326e-19]}, {'': [2.0130417479467123e-17, 0.00507784138437273], 'false,true': [0.00507784138437273, nan], 'false': [0.00507784138437273, nan]}, {'': [0.0041222455510489505, 2.0613754846035882e-07], 'true,true,false': [-6.938893903907229e-19, nan], 'true': [0.0041222455510489505, nan], 'true,true': [1.2335811384723961e-17, -6.938893903907229e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(E, B), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(E, A), movie(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 5,77e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.2571113666448558;  // std dev = 0,149, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.2771957289128432;  // std dev = 0,127, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,49e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.26448798283475916;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11843455153785093;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 4,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21631771887007606;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10629981855453975;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109164;  // std dev = 4,59e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1841590798660432;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.18116063594663398;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09719853289793698;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.07416798059129619;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0684269778442027;  // std dev = 1,67e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.06836824420341692;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.1580806983843349;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1308622661096396;  // std dev = 0,073, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13815976065777602;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13937068503425454;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.10045087989819172;  // std dev = 0,000707, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.06414001681703053;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0829906168554232;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.611 seconds
Total inference time: 2.816 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0661
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.263 seconds
Refined model CLL: -0.0661


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.332 seconds
Total inference time: 3.213 seconds
AUC ROC: 1.0
Total revision time: 5.332
Best scored revision CLL: -0.064658


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:40:04
{'CLL': -0.066069, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.066069, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.213, 'Learning time': 1.26, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.213, 'Learning time': 5.332, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,false;ta(L, A, M).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;ta(G, A, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
1;true,true;tempadvisedby(D, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true,true;ta(E, A, F).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,false;projectmember(K, B), publication(L, A).;false;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,false,true;tempadvisedby(H, B), ta(I, H, J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;publication(E, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;tempadvisedby(H, B), publication(I, B).;true;true
3;true,false,false;projectmember(L, B).;false;false
3;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
3;true,false,true;ta(J, H, K).;false;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true,true;ta(G, A, F).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,true,false;ta(H, D, I), ta(E, J, I).;false;false
4;false;ta(N, A, P).;false;false
4;true,false;projectmember(K, B).;false;true
4;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
4;true,true;publication(G, A).;true;true
4;true;tempadvisedby(D, B), ta(E, A, F).;true;true
4;true,true,true;publication(G, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true,false;tempadvisedby(I, B), publication(J, I).;false;false
5;true,false;tempadvisedby(K, B), publication(L, A).;true;true
5;true,false,false;tempadvisedby(Q, B), ta(R, Q, S).;false;false
5;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
5;true,false,true;ta(M, K, N), ta(P, A, N).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true,true;ta(G, D, H).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;tempadvisedby(G, B), publication(H, A).;true;true
6;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
6;true,true;tempadvisedby(E, B), publication(F, E).;false;false
6;true,false,true;publication(I, G).;false;false
6;false,true;hasposition(B, M).;false;false
6;true;publication(D, B), publication(D, A).;true;true
6;false;professor(B).;true;false
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,true,false;publication(H, B), publication(H, A).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,false;publication(J, A).;false;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,false,true;publication(I, A).;false;false
7;true;hasposition(D, C), projectmember(E, D).;true;true
7;true,true,true;publication(G, B), publication(G, A).;false;false
8;;advisedby(A, B) :- student(B).;false;true
8;false,true,false;ta(J, A, K), publication(L, A).;false;false
8;false,false,false;student(A), hasposition(B, Q).;false;false
8;false,false;ta(M, A, N), projectmember(P, B).;false;true
8;false,true,true;ta(G, A, H), ta(G, I, F).;false;false
8;false,true;tempadvisedby(D, B), ta(E, D, F).;true;true
8;false;student(A), publication(C, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,false;publication(D, B).;false;false
9;true,false;publication(F, B), publication(F, A).;true;true
9;true,false,false;projectmember(H, B), publication(I, A).;false;false
9;true,true;publication(E, A), publication(E, B).;false;true
9;true,false,true;tempadvisedby(G, B).;false;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6,32e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05610692899019816;  // std dev = 0,117, 113,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27247974427674854;  // std dev = 0,217, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.08614960492497625;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08807931199813512;  // std dev = 1,83e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2069032445660761;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, I) )
%   | | | then return -0.07870676281811265;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( genre(B, J) )
%   | | then return -0.08125661239622321;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2430579122262836;  // std dev = 0,340, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.08125661239622327;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17500003005788553;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( movie(F, B), movie(F, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07318550466058418;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04279756415755933;  // std dev = 0,914, 92,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07246352227037026;  // std dev = 2,98e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.15356207869068114;  // std dev = 0,510, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(A), genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0975160167550155;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1498669744970571;  // std dev = 0,218, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.07882792939271238;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06772186019167577;  // std dev = 0,002, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069284
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.296 seconds
Total inference time: 3.039 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.357 seconds
Parameter learned model CLL: -0.068297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)'}, {'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 85, 0], 'true,true': [3.33e-08, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [0.0, 87, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,true,true': 'movie(D, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [6.32e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.05e-08, 90, 0], 'true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 5, 0], 'true,true,true': [2.98e-08, 0, 35], 'true,false': [0.0, 0, 0], 'false': [0.117, 103, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true': [0.001, 3, 0], 'true,true,true': [0.217, 0, 45], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 96, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true': 'movie(E, F)', 'true,false,true': 'movie(H, I)', 'false,true': 'genre(B, J)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true,false': [0.34, 1, 10], 'false,false': [0.0, 93, 0], 'false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 35]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, B), movie(F, A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.0, 0, 35], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.914, 82, 10]}], ['workedunder(A, B)', {'': 'actor(B)', 'false,true': 'movie(D, A)', 'false': 'actor(A), movie(C, B)', 'false,false': 'actor(A), genre(B, E)'}, {'false,true,true': [0.51, 3, 45], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true': [2.98e-08, 91, 0], 'false,false,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.218, 0, 45], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.002, 80, 0]}]]
[{'': [0.04074241738343243, 7.314410515177502e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.06424978612186535, -1.7865657867531254e-17], 'true,false,true': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0181629835776121, 4.815425167048872e-17], 'true,true': [-3.947459643111668e-17, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false': [0.0, nan]}, {'': [0.015789556783927943, 2.837236618486511e-17], 'true': [-4.144832625267251e-16, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.01869242182445835, 0.013785668937810195], 'true': [0.01869242182445835, nan], 'true,true': [2.5376526277146434e-17, 0.0]}, {'': [0.00851904929171555, 3.469446951953614e-18], 'true,false': [1.861884694100378e-06, nan], 'true': [0.0010484236537136975, 1.861884694100378e-06], 'true,true': [0.0010484236537136975, nan]}, {'': [0.004171011937370098, 0.01096735702489746], 'true,false': [0.0, nan], 'true,true': [-6.344131569286608e-17, nan], 'true,false,true': [0.0, nan], 'false,true': [0.0, 0.010527344890401717], 'true': [-6.344131569286608e-17, 0.0], 'false': [0.01768464267517621, -1.6713034779303432e-17]}, {'': [0.005669591288684366, 0.009070816610520682], 'true,true,false': [nan, 0.0], 'true': [0.005669591288684366, nan], 'true,true': [-4.4408920985006264e-17, 0.0]}, {'': [9.760202414287091e-18, 0.006562790480405842], 'false,true': [0.005412980383863851, nan], 'false,false': [nan, 0.0], 'false': [0.005412980383863851, 0.0]}, {'': [0.002146690707808338, 3.023639595436944e-08], 'true,true,false': [0.0, nan], 'true': [0.002146690707808338, nan], 'true,true': [0.001057408879125922, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false,true;genre(B, J).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;true;movie(E, B), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;actor(A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(E, A), movie(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360626;  // std dev = 5,37e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18291080604367949;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2575776226780979;  // std dev = 0,052, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.209359279587047;  // std dev = 5,58e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21884827949695707;  // std dev = 0,037, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.10565890695824968;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0787767547310916;  // std dev = 5,48e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1768042086232429;  // std dev = 3,33e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.18376019772386765;  // std dev = 0,032, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3,87e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( actor(A), movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1536941540240769;  // std dev = 0,032, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1347514837391368;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08315957833539718;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202626;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.367 seconds
Total inference time: 2.577 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06463
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.239 seconds
Refined model CLL: -0.06463


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.2589999999999995 seconds
Total inference time: 2.577 seconds
AUC ROC: 1.0
Total revision time: 5.2589999999999995
Best scored revision CLL: -0.06463


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:40:16
{'CLL': -0.066591, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.069284, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.039, 'Learning time': 1.296, 'F1': 1.0}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.577, 'Learning time': 5.2589999999999995, 'F1': 1.0}


