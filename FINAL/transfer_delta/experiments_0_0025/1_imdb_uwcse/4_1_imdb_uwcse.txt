Starting experiment #4 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.141851064900489;  // std dev = 0,000, 672,000 (wgt'ed) examples reached here.  /* #neg=672 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.12544463852839238;  // std dev = 0,000, 723,000 (wgt'ed) examples reached here.  /* #neg=723 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360657;  // std dev = 0,000, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1015963294878362;  // std dev = 3,94e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783516;  // std dev = 4,45e-07, 732,000 (wgt'ed) examples reached here.  /* #neg=732 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926201;  // std dev = 0,000, 700,000 (wgt'ed) examples reached here.  /* #neg=700 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839675;  // std dev = 1,37e-07, 727,000 (wgt'ed) examples reached here.  /* #neg=727 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109272;  // std dev = 0,000, 686,000 (wgt'ed) examples reached here.  /* #neg=686 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0732462257633366;  // std dev = 2,16e-07, 668,000 (wgt'ed) examples reached here.  /* #neg=668 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06842697784420256;  // std dev = 1,85e-07, 703,000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0641918400820253;  // std dev = 2,53e-07, 710,000 (wgt'ed) examples reached here.  /* #neg=710 */


Starting fold 1

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos	 examples: 78
Target test neg examples: 2265

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4945125714631487;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7327299667445832;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.46417641452806163;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.12544463852839152;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5685132372860081;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.21093638079344673;  // std dev = 3,201, 41,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   else return -0.11231637819360633;  // std dev = 2,79e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4273367575997043;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.22014197185094195;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.10159632948783633;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2607126129286026;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.13960520382823047;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   else return -0.09269127618926103;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.27273806493080466;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2672469383862711;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   else return -0.08518475138839682;  // std dev = 2,58e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22209263006422827;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.08417846231597029;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   else return -0.0787767547310917;  // std dev = 2,58e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.06109209457760878;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.11617513244095674;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17701585473912035;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06856238792173043;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.06842697784420272;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1526826795237839;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.013364962240892534;  // std dev = 3,065, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   else return -0.06419184008202623;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 0.935982
   AUC PR    = 0.358428
   CLL	      = -0.219325
   Precision = 0.157895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.272727


Total learning time: 1.079 seconds
Total inference time: 1.396 seconds
AUC ROC: 0.935982


Results scoring model
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.223944
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total scoring time: 1.188 seconds
Parameter learned model CLL: -0.223944


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.763, 12, 21], 'false': [4.94e-08, 51, 0], 'true,true': [0.966, 1, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.0, 51, 0], 'true,true': [4.21e-08, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.201, 20, 21], 'false': [2.79e-08, 55, 0], 'true,true': [4.21e-08, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'false': [0.0, 38, 0], 'true,true': [5.16e-08, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.113, 18, 21], 'false': [0.0, 70, 0], 'true,true': [0.966, 1, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.51, 9, 21], 'false': [2.58e-08, 51, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.958, 15, 21], 'false': [2.58e-08, 69, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.763, 12, 21], 'false': [7.45e-09, 56, 0], 'true,true': [1.323, 2, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.834, 13, 21], 'false': [0.0, 48, 0], 'true,true': [2.11e-08, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.065, 17, 21], 'false': [0.0, 74, 0], 'true,true': [0.0, 0, 14]}]]
[{'': [0.1974826388888907, 4.7891973611281265e-17], 'true': [0.06222222222222188, 0.23140495867768573]}, {'': [0.16599468058989555, -2.829980258848438e-17], 'true': [1.2688263138573217e-16, 0.21852237252861637]}, {'': [0.21051470006943032, 1.413011122250199e-17], 'true': [1.2688263138573217e-16, 0.24985127900059484]}, {'': [0.18661003805544754, -1.0225738384705389e-17], 'true': [1.9032394707859825e-16, 0.24543462381300207]}, {'': [0.19971358471877027, -2.061842760018148e-17], 'true': [0.06222222222222219, 0.2485207100591716]}, {'': [0.1431883595236086, 1.3061447348531253e-17], 'true': [0.0, 0.21000000000000024]}, {'': [0.17883449604140417, 9.654113257610057e-18], 'true': [-3.172065784643304e-17, 0.2430555555555555]}, {'': [0.19222567457793954, 9.912705577010326e-19], 'true': [0.10937499999999999, 0.23140495867768593]}, {'': [0.16970944020446385, -5.782411586589357e-19], 'true': [3.172065784643304e-17, 0.23615916955017302]}, {'': [0.18609264928846841, -1.50030138462859e-18], 'true': [-3.96508223080413e-18, 0.2472299168975069]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(E, A), publication(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.14185106490048768;  // std dev = 5,77e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7275971321409967;  // std dev = 0,110, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.23292803776327825;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.012549340425502396;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.5965546562416296;  // std dev = 1,264, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.2620505204621715;  // std dev = 2,123, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return -0.12544463852839152;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5533595179209926;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.040346288916683716;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(E, A) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.7170348185316593;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0633930537680119;  // std dev = 1,528, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.0032338652366373046;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.534361275689827;  // std dev = 1,356, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.4160267574693534;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4631199909986761;  // std dev = 0,258, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(F, A), projectmember(G, B) )
%   | | then return 0.5529916743445464;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return -0.21647830099649007;  // std dev = 0,118, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.12554088572011415;  // std dev = 2,880, 33,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   else return -0.10159632948783634;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | | then return 0.31589612983725296;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.36191172035568137;  // std dev = 0,254, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | | then return -0.15385886413265257;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22379673884111753;  // std dev = 1,980, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( publication(I, A) )
%   | | then return 0.3174860727543316;  // std dev = 0,757, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5635100486073157;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926103;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.09802588597883176;  // std dev = 0,664, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.25141567819854566;  // std dev = 0,012, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.32945396415605616;  // std dev = 0,214, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( ta(K, A, L) )
%   | | | then return -0.015844232624995992;  // std dev = 0,412, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1485165209109884;  // std dev = 1,000, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( tempadvisedby(M, B), publication(N, M) )
%   | | | then return -0.1676261398956616;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1955182120847624;  // std dev = 2,086, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   else return -0.08518475138839682;  // std dev = 2,47e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.21084468817424407;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.24571614770388417;  // std dev = 0,198, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then return 0.0020139274736115757;  // std dev = 0,747, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.4316632771648612;  // std dev = 0,242, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22353480912726537;  // std dev = 1,651, 20,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.07877675473109177;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( ta(E, C, F), publication(G, A) )
%   | | then return 0.12963432819567142;  // std dev = 0,289, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.2032342324629569;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08482624782097911;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( ta(J, A, K) )
%   | | then return 0.22240654844594354;  // std dev = 0,527, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.10136499328803818;  // std dev = 1,556, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.06813809274248397;  // std dev = 1,717, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.1611350882017354;  // std dev = 0,021, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2062970510361776;  // std dev = 0,167, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return -0.29696751665218685;  // std dev = 0,085, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.013936018042529315;  // std dev = 1,287, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( ta(K, A, L), publication(M, A) )
%   | | | then return -0.11072316764736101;  // std dev = 0,935, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22436643402589548;  // std dev = 1,212, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.0684269778442027;  // std dev = 1,97e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.14053224097429912;  // std dev = 0,019, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.17535889170687172;  // std dev = 0,149, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return -0.1951182597870367;  // std dev = 1,484, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.028759758643246536;  // std dev = 0,549, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | | then return -0.05792945606034126;  // std dev = 0,954, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1807100444050236;  // std dev = 1,283, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.06419184008202622;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 0.946335
   AUC PR    = 0.338174
   CLL	      = -0.227625
   Precision = 0.19774 at threshold = 0.5
   Recall    = 0.897436
   F1        = 0.324074


Total learning time: 6.375 seconds
Total inference time: 1.502 seconds
AUC ROC: 0.946335


Results scoring model
   AUC ROC   = 0.962947
   AUC PR    = 0.345846
   CLL	      = -0.220319
   Precision = 0.132296 at threshold = 0.5
   Recall    = 0.971429
   F1        = 0.232877


Total scoring time: 1.361 seconds
Refined model CLL: -0.220319


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.946335
   AUC PR    = 0.338174
   CLL	      = -0.227625
   Precision = 0.19774 at threshold = 0.5
   Recall    = 0.897436
   F1        = 0.324074


Total learning time: 10.003 seconds
Total inference time: 1.502 seconds
AUC ROC: 0.946335
Total revision time: 10.003
Best scored revision CLL: -0.220319


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:38:15
{'CLL': -0.227625, 'Precision': [0.19774, 0.5], 'AUC ROC': 0.946335, 'parameter': {'CLL': -0.219325, 'Precision': [0.157895, 0.5], 'AUC ROC': 0.935982, 'AUC PR': 0.358428, 'Recall': 1.0, 'Inference time': 1.396, 'Learning time': 1.079, 'F1': 0.272727}, 'AUC PR': 0.338174, 'Recall': 0.897436, 'Inference time': 1.502, 'Learning time': 10.003, 'F1': 0.324074}


Starting fold 2

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos	 examples: 93
Target test neg examples: 3738

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004877;  // std dev = 2,98e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.27326254996983335;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4804671938866069;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3175135841583098;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.27216836680355744;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.10159632948783635;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.34287633872849804;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.36359654213872805;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2702452365503476;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21278873327400954;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 1,97e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22035068138598174;  // std dev = 1,67e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.012894740943908602;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.07877675473109176;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18482782615452364;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06652434830366047;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15858390852746618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14921182080407355;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.06842697784420275;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13854992661020582;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.01722533299791254;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 0.932863
   AUC PR    = 0.29479
   CLL	      = -0.274849
   Precision = 0.114251 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.205072


Total learning time: 0.873 seconds
Total inference time: 1.359 seconds
AUC ROC: 0.932863


Results scoring model
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.226222
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total scoring time: 0.744 seconds
Parameter learned model CLL: -0.226222


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [2.98e-08, 33, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.289, 10, 11], 'false': [0.0, 37, 0], 'true,true': [2.98e-08, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'false': [0.0, 28, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.0, 41, 0], 'true,true': [0.949, 1, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'false': [5.27e-09, 28, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'false': [1.97e-08, 39, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.068, 7, 11], 'false': [0.0, 50, 0], 'true,true': [1.67e-08, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [5.27e-09, 33, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'false': [0.0, 35, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.0, 35, 0], 'true,true': [7.45e-09, 0, 9]}]]
[{'': [0.08264462809917356, 2.6914497566670462e-17], 'true': [-2.9605947323337506e-16, 0.1301775147928993]}, {'': [0.21641504265538689, -3.00060276925718e-18], 'true': [9.868649107779169e-17, 0.24943310657596385]}, {'': [0.10382066669846099, 0.0], 'true': [-1.4802973661668753e-16, 0.16836734693877548]}, {'': [0.1673135949673255, -5.415722071342227e-18], 'true': [0.09000000000000011, 0.21484374999999994]}, {'': [0.0770268604748027, 9.912705577010326e-19], 'true': [-7.401486830834377e-17, 0.1301775147928994]}, {'': [0.10327078106833178, 9.963539964584738e-18], 'true': [0.0, 0.16836734693877556]}, {'': [0.17052586444462484, -2.220446049250313e-18], 'true': [3.0839528461809905e-17, 0.23765432098765427]}, {'': [0.14072461224561889, 8.410780489584519e-19], 'true': [0.0, 0.21484375]}, {'': [0.1025053932965045, -3.1720657846433043e-18], 'true': [-6.1679056923619804e-18, 0.1683673469387755]}, {'': [0.14089140897629934, -7.930164461608261e-19], 'true': [6.1679056923619804e-18, 0.21484375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), ta(G, A, H) )
%   | | | then return 0.2505511758931249;  // std dev = 0,938, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5244358222680234;  // std dev = 1,176, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(I, B), ta(J, A, K) )
%   | | | then return 0.3861400788776212;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.005530172414164864;  // std dev = 0,959, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.18099460946694174;  // std dev = 0,967, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.6497872189661574;  // std dev = 0,068, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.30971061219031454;  // std dev = 1,141, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.09990186772291133;  // std dev = 1,126, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5817890564826212;  // std dev = 0,255, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5624486767737316;  // std dev = 0,064, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.015058592791531922;  // std dev = 0,818, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3287923399512942;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), student(F) )
%   | | | then return -0.211330882331428;  // std dev = 0,662, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11088599318952214;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.35812673040858767;  // std dev = 0,844, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18989455425903962;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926098;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.26082189560427216;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.03327009190190807;  // std dev = 0,919, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37545245382595266;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.1849905049561747;  // std dev = 0,792, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1319688162057941;  // std dev = 0,895, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08518475138839683;  // std dev = 1,97e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2138296484713852;  // std dev = 0,054, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( publication(D, G), tempadvisedby(G, H) )
%   | | | then return 0.38126102212237184;  // std dev = 0,153, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27752639927229084;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return -0.40758163840986034;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1048785320250423;  // std dev = 1,132, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1801345506633162;  // std dev = 0,048, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.21341780621816886;  // std dev = 1,025, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.039056838780527965;  // std dev = 1,133, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.30281092999343157;  // std dev = 0,608, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15508294116115096;  // std dev = 0,043, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return -0.1571344415497406;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.34843534767355017;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.3155934174156085;  // std dev = 0,193, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0684705638142756;  // std dev = 0,851, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420275;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13585711512824025;  // std dev = 0,038, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(F, G, E), tempadvisedby(G, H) )
%   | | | then return 0.27854496618091007;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25929104303437;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return -0.37346429982838564;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11591752875091858;  // std dev = 1,054, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 0.945714
   AUC PR    = 0.332878
   CLL	      = -0.236457
   Precision = 0.148225 at threshold = 0.5
   Recall    = 0.763441
   F1        = 0.248252


Total learning time: 4.156 seconds
Total inference time: 1.81 seconds
AUC ROC: 0.945714


Results scoring model
   AUC ROC   = 0.98739
   AUC PR    = 0.825582
   CLL	      = -0.169833
   Precision = 0.463415 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.622951


Total scoring time: 0.907 seconds
Refined model CLL: -0.169833


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.945714
   AUC PR    = 0.332878
   CLL	      = -0.236457
   Precision = 0.148225 at threshold = 0.5
   Recall    = 0.763441
   F1        = 0.248252


Total learning time: 6.68 seconds
Total inference time: 1.81 seconds
AUC ROC: 0.945714
Total revision time: 6.68
Best scored revision CLL: -0.169833


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:38:26
{'CLL': -0.236457, 'Precision': [0.148225, 0.5], 'AUC ROC': 0.945714, 'parameter': {'CLL': -0.274849, 'Precision': [0.114251, 0.5], 'AUC ROC': 0.932863, 'AUC PR': 0.29479, 'Recall': 1.0, 'Inference time': 1.359, 'Learning time': 0.873, 'F1': 0.205072}, 'AUC PR': 0.332878, 'Recall': 0.763441, 'Inference time': 1.81, 'Learning time': 6.68, 'F1': 0.248252}


Starting fold 3

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos	 examples: 104
Target test neg examples: 3988

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.6763307532813305;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.6546686895771392;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.43332899258935137;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5089169456196602;  // std dev = 4,21e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783628;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20203021182286102;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.15549837384213988;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.12166326203709575;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09657675800938041;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07759630554851277;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.24478720181599803;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06419184008202618;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.904213
   AUC PR    = 0.119816
   CLL	      = -0.353138
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 0.815 seconds
Total inference time: 1.487 seconds
AUC ROC: 0.904213


Results scoring model
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.184551
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.552 seconds
Parameter learned model CLL: -0.184551


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 10, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [5.27e-09, 11, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [1.67e-08, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [4.21e-08, 0, 9], 'false': [5.27e-09, 13, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 13, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 15, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 19, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'false': [0.0, 16, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.14876033057851218, -1.1102230246251566e-17], 'true': [nan, 0.14876033057851218]}, {'': [0.09000000000000022, 2.523234146875356e-18], 'true': [nan, 0.09000000000000022]}, {'': [0.14876033057851235, 1.5419764230904953e-17], 'true': [nan, 0.14876033057851235]}, {'': [1.9737298215558337e-16, 2.135044278125301e-18], 'true': [nan, 1.9737298215558337e-16]}, {'': [0.14876033057851237, -2.135044278125301e-18], 'true': [nan, 0.14876033057851237]}, {'': [0.14876033057851237, 0.0], 'true': [nan, 0.14876033057851237]}, {'': [0.14876033057851243, -4.382459307730881e-18], 'true': [nan, 0.14876033057851243]}, {'': [0.14876033057851237, 0.0], 'true': [nan, 0.14876033057851237]}, {'': [0.14876033057851243, -1.5419764230904951e-18], 'true': [nan, 0.14876033057851243]}, {'': [-1.2335811384723961e-17, 0.0], 'true': [nan, -1.2335811384723961e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.3861400788776211;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.590963382900774;  // std dev = 0,119, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.24118781336010464;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.42260030486028716;  // std dev = 0,075, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783634;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.4203688773919517;  // std dev = 0,038, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(E, B) )
%   | | then return -0.3547526052280457;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.311914061438621;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926103;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.2978150808929186;  // std dev = 0,149, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839685;  // std dev = 1,18e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.2400790491823544;  // std dev = 0,130, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.2253593128871484;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.05151258611776374;  // std dev = 0,414, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return -0.11289993520856641;  // std dev = 1,132, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.17626410971401585;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.20633463988131306;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.055884447498583734;  // std dev = 0,410, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.905714
   AUC PR    = 0.119546
   CLL	      = -0.343406
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.727 seconds
Total inference time: 1.663 seconds
AUC ROC: 0.905714


Results scoring model
   AUC ROC   = 0.9884
   AUC PR    = 0.906713
   CLL	      = -0.172991
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.538 seconds
Refined model CLL: -0.172991


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.905714
   AUC PR    = 0.119546
   CLL	      = -0.343406
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 3.6320000000000006 seconds
Total inference time: 1.663 seconds
AUC ROC: 0.905714
Total revision time: 3.6320000000000006
Best scored revision CLL: -0.172991


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:33
{'CLL': -0.343406, 'Precision': [0.119816, 0.5], 'AUC ROC': 0.905714, 'parameter': {'CLL': -0.353138, 'Precision': [0.119816, 0.5], 'AUC ROC': 0.904213, 'AUC PR': 0.119816, 'Recall': 1.0, 'Inference time': 1.487, 'Learning time': 0.815, 'F1': 0.213992}, 'AUC PR': 0.119546, 'Recall': 1.0, 'Inference time': 1.663, 'Learning time': 3.6320000000000006, 'F1': 0.213992}


Starting fold 4

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos	 examples: 80
Target test neg examples: 2591

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.4295775065280838;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6480448407823828;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3237641946428186;  // std dev = 3,078, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   else return -0.12544463852839152;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5729277032086343;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.28067322524842514;  // std dev = 3,031, 37,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   else return -0.11231637819360632;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3592405988837225;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.39693745957059484;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else return -0.10159632948783635;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.27418831626804235;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.28088400078513626;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else return -0.092691276189261;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.28647823133734907;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.16718792804764032;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else return -0.08518475138839682;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.23164806368169044;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.10525419601102763;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else return -0.07877675473109176;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19299327010472206;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.16834601692498102;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16469935962364302;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.03169831949183147;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   else return -0.06842697784420268;  // std dev = 2,11e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.00993943278641444;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.045450040398097136;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else return -0.06419184008202622;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */


Results
   AUC ROC   = 0.936897
   AUC PR    = 0.369816
   CLL	      = -0.227561
   Precision = 0.142857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.25


Total learning time: 1.021 seconds
Total inference time: 1.419 seconds
AUC ROC: 0.936897


Results scoring model
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.239288
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total scoring time: 1.043 seconds
Parameter learned model CLL: -0.239288


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.928, 15, 20], 'false': [5.16e-08, 58, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.078, 18, 20], 'false': [0.0, 52, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.031, 17, 20], 'false': [2.98e-08, 56, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.39, 8, 20], 'false': [0.0, 57, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.491, 9, 20], 'false': [0.0, 47, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.664, 11, 20], 'false': [2.11e-08, 44, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.739, 12, 20], 'false': [0.0, 53, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.39, 8, 20], 'false': [0.0, 34, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.981, 16, 20], 'false': [2.11e-08, 62, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.739, 12, 20], 'false': [0.0, 60, 0], 'true,true': [1.317, 2, 13]}]]
[{'': [0.2148437500000017, 4.594026308793751e-17], 'true': [-2.7328566760003855e-16, 0.24489795918367321]}, {'': [0.22073273519311057, -2.5620531337503614e-17], 'true': [0.06632653061224499, 0.2493074792243768]}, {'': [0.2002171833941955, 1.586032892321652e-17], 'true': [-1.3664283380001927e-16, 0.24835646457268098]}, {'': [0.15847905492959946, -3.895519384649672e-18], 'true': [0.0663265306122448, 0.20408163265306098]}, {'': [0.16595095999043669, -1.4173059888831785e-17], 'true': [0.06632653061224494, 0.21403091557669443]}, {'': [0.16425249257700755, 1.0092936587501423e-17], 'true': [0.0, 0.2289281997918834]}, {'': [0.1699485286273855, -1.047380211910525e-18], 'true': [0.0, 0.23437500000000006]}, {'': [0.13950436620239254, 0.0], 'true': [-1.708035422500241e-17, 0.20408163265306126]}, {'': [0.18892431244854035, 7.162729191130042e-18], 'true': [-4.270088556250602e-18, 0.24691358024691354]}, {'': [0.1967279077537725, -1.3877787807814458e-18], 'true': [0.11555555555555556, 0.234375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.524815601766179;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.14185106490048768;  // std dev = 5,37e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.38614007887762103;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.3780996811704399;  // std dev = 1,201, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.13050825577278802;  // std dev = 0,917, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5184710448384532;  // std dev = 1,919, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.04110838975046757;  // std dev = 0,899, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.1254446385283914;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5676884565689925;  // std dev = 0,104, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.22659568778383624;  // std dev = 1,111, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.680639742310203;  // std dev = 4,21e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.34119828281563785;  // std dev = 1,056, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12220192821855132;  // std dev = 1,540, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(H, G) )
%   | | then return 0.538549669491756;  // std dev = 0,352, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11900923614347861;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( tempadvisedby(J, B), publication(I, B) )
%   | | | then return 0.4475142665973467;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11842544329081466;  // std dev = 1,864, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.2690092361434786;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.43307084515260597;  // std dev = 0,873, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), student(D) )
%   | | then if ( ta(E, D, F), ta(G, A, H) )
%   | | | then return 0.4422945998356208;  // std dev = 0,350, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22883506653217306;  // std dev = 1,878, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else return -0.13784355054949893;  // std dev = 0,992, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.06885682671212576;  // std dev = 0,838, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.092691276189261;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.28568995749621856;  // std dev = 0,180, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.22370985812104646;  // std dev = 1,043, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.23691430890995113;  // std dev = 0,140, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.2525882089964362;  // std dev = 1,339, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.35939420950606715;  // std dev = 0,799, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839682;  // std dev = 2,36e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2316807585159045;  // std dev = 0,156, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.19945162898423247;  // std dev = 0,687, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.33058121317931316;  // std dev = 0,132, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return -0.07286813566397879;  // std dev = 1,131, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.058738993139328496;  // std dev = 1,286, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19337181985173352;  // std dev = 0,136, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.11912142634286273;  // std dev = 1,036, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return -0.0617677901953768;  // std dev = 2,465, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.22740971596527207;  // std dev = 0,175, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16521013104133028;  // std dev = 0,120, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.22217569322311975;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return -0.10563831192456478;  // std dev = 1,228, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06230056102442598;  // std dev = 1,784, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14381951500353274;  // std dev = 0,107, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return -0.02262682673595881;  // std dev = 1,219, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.32071203030528117;  // std dev = 0,989, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, A, K) )
%   | | | then return 0.3489149261895744;  // std dev = 0,184, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.028796544729789854;  // std dev = 1,813, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.06419184008202622;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 0.953763
   AUC PR    = 0.495312
   CLL	      = -0.204303
   Precision = 0.201238 at threshold = 0.5
   Recall    = 0.8125
   F1        = 0.322581


Total learning time: 5.836 seconds
Total inference time: 1.618 seconds
AUC ROC: 0.953763


Results scoring model
   AUC ROC   = 0.960645
   AUC PR    = 0.297766
   CLL	      = -0.222019
   Precision = 0.166667 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.283105


Total scoring time: 1.265 seconds
Refined model CLL: -0.222019


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.953763
   AUC PR    = 0.495312
   CLL	      = -0.204303
   Precision = 0.201238 at threshold = 0.5
   Recall    = 0.8125
   F1        = 0.322581


Total learning time: 9.165000000000001 seconds
Total inference time: 1.618 seconds
AUC ROC: 0.953763
Total revision time: 9.165000000000001
Best scored revision CLL: -0.222019


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:38:46
{'CLL': -0.204303, 'Precision': [0.201238, 0.5], 'AUC ROC': 0.953763, 'parameter': {'CLL': -0.227561, 'Precision': [0.142857, 0.5], 'AUC ROC': 0.936897, 'AUC PR': 0.369816, 'Recall': 1.0, 'Inference time': 1.419, 'Learning time': 1.021, 'F1': 0.25}, 'AUC PR': 0.495312, 'Recall': 0.8125, 'Inference time': 1.618, 'Learning time': 9.165000000000001, 'F1': 0.322581}


Starting fold 5

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos	 examples: 97
Target test neg examples: 3734

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6581489350995123;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.463901687563031;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3299475327754189;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.186132947712287;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.10159632948783627;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2903790964814225;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.09269127618926103;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21791659238936428;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08518475138839685;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21424918205201682;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16339106679274068;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1935019776983142;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   else return -0.06842697784420274;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.03705177233207433;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 9,86e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.937621
   AUC PR    = 0.323785
   CLL	      = -0.253137
   Precision = 0.12125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216276


Total learning time: 0.839 seconds
Total inference time: 1.852 seconds
AUC ROC: 0.937621


Results scoring model
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.255684
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total scoring time: 0.759 seconds
Parameter learned model CLL: -0.255684


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.549, 3, 12], 'false': [0.0, 21, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.0, 26, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [1.49e-08, 27, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.191, 8, 12], 'false': [7.45e-09, 18, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [0.0, 26, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [1.29e-08, 25, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.549, 3, 12], 'false': [0.0, 15, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.549, 3, 12], 'false': [7.45e-09, 25, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.498, 13, 12], 'false': [0.0, 22, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [9.86e-09, 29, 0], 'true,true': [0.0, 0, 4]}]]
[{'': [0.13296398891966726, -5.28677630773884e-18], 'true': [0.0, 0.15999999999999973]}, {'': [0.17813876801975148, 0.0], 'true': [0.0, 0.20761245674740486]}, {'': [0.18937724199019543, 8.22387425648264e-18], 'true': [0.0, 0.22222222222222227]}, {'': [0.20743569429474543, 3.0839528461809902e-18], 'true': [0.0, 0.24000000000000005]}, {'': [0.1501472121221979, -7.472654973438553e-18], 'true': [0.0, 0.18749999999999983]}, {'': [0.1502220773552551, 6.661338147750939e-18], 'true': [0.0, 0.18750000000000006]}, {'': [0.12631914237184444, -9.251858538542971e-19], 'true': [0.0, 0.15999999999999998]}, {'': [0.12634700922508502, 2.220446049250313e-18], 'true': [0.0, 0.16000000000000003]}, {'': [0.22942760746769217, -1.8924256101565167e-18], 'true': [0.0, 0.24960000000000007]}, {'': [0.18321657682510856, 3.3498108501621104e-18], 'true': [0.0, 0.22222222222222227]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(D, G, H), publication(I, G) )
%   | | | then return 0.2712696850145719;  // std dev = 1,200, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6046030183479052;  // std dev = 0,903, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.4022595602377965;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0556643768433092;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.6879346235347975;  // std dev = 0,083, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.08139891037900387;  // std dev = 0,993, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.48403243657135897;  // std dev = 0,871, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( ta(E, G, H), publication(I, G) )
%   | | | then return 0.5999553534352122;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22936289715569272;  // std dev = 1,173, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.233226818173743;  // std dev = 1,029, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09477317346572732;  // std dev = 0,834, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10159632948783628;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( projectmember(F, B) )
%   | | | then return 0.11868485924309846;  // std dev = 0,845, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43497094300963024;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.23251552566419265;  // std dev = 0,852, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15926412068470577;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926096;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), ta(G, F, H) )
%   | | | then return -0.2510412805340279;  // std dev = 0,738, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12366125518106462;  // std dev = 1,196, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.5158830493287532;  // std dev = 0,135, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.1959219065462207;  // std dev = 0,914, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(E, A, F), hasposition(B, G) )
%   | | | then return 0.023675165368522256;  // std dev = 1,470, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.1884772565842121;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.07877675473109175;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.399531443661626;  // std dev = 0,850, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.32225087294082916;  // std dev = 0,082, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.042424442068854276;  // std dev = 1,214, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( hasposition(B, D) )
%   | | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | | then return 0.045138246578669605;  // std dev = 1,181, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1735968445918942;  // std dev = 0,859, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.20203128035070245;  // std dev = 0,858, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.06842697784420275;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), projectmember(G, F) )
%   | | | then return 0.357935858355982;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09482466025605014;  // std dev = 0,599, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.24067655997989207;  // std dev = 0,905, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.41097834232286007;  // std dev = 0,226, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202619;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 0.946522
   AUC PR    = 0.343161
   CLL	      = -0.232526
   Precision = 0.15739 at threshold = 0.5
   Recall    = 0.845361
   F1        = 0.265372


Total learning time: 4.648 seconds
Total inference time: 2.087 seconds
AUC ROC: 0.946522


Results scoring model
   AUC ROC   = 0.9625
   AUC PR    = 0.589961
   CLL	      = -0.246101
   Precision = 0.280702 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.438356


Total scoring time: 0.812 seconds
Refined model CLL: -0.246101


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.946522
   AUC PR    = 0.343161
   CLL	      = -0.232526
   Precision = 0.15739 at threshold = 0.5
   Recall    = 0.845361
   F1        = 0.265372


Total learning time: 7.058 seconds
Total inference time: 2.087 seconds
AUC ROC: 0.946522
Total revision time: 7.058
Best scored revision CLL: -0.246101


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:38:58
{'CLL': -0.232526, 'Precision': [0.15739, 0.5], 'AUC ROC': 0.946522, 'parameter': {'CLL': -0.253137, 'Precision': [0.12125, 0.5], 'AUC ROC': 0.937621, 'AUC PR': 0.323785, 'Recall': 1.0, 'Inference time': 1.852, 'Learning time': 0.839, 'F1': 0.216276}, 'AUC PR': 0.343161, 'Recall': 0.845361, 'Inference time': 2.087, 'Learning time': 7.058, 'F1': 0.265372}


