Starting experiment #1 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21464780812730577;  // std dev = 0,479, 7.986,000 (wgt'ed) examples reached here.  /* #neg=5.139 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8019691598186129;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.13859373591025984;  // std dev = 0,998, 307,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2152917922423695;  // std dev = 3,105, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.05683082198550799;  // std dev = 4,383, 247,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.02887029566971866;  // std dev = 0,317, 416,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=47 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18375762971667883;  // std dev = 0,478, 8.047,000 (wgt'ed) examples reached here.  /* #neg=5.200 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.430404255423766;  // std dev = 0,736, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22130524916500613;  // std dev = 3,006, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.49040032115077253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12547019511216265;  // std dev = 0,000345, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08851350661227952;  // std dev = 2,914, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return -0.02167958876345641;  // std dev = 1,138, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01799052879145082;  // std dev = 8,505, 722,000 (wgt'ed) examples reached here.  /* #neg=634 #pos=88 */
%   | | | else return 0.026421797769899547;  // std dev = 5,321, 257,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=46 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16304477930577757;  // std dev = 0,480, 7.895,000 (wgt'ed) examples reached here.  /* #neg=5.048 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6892225267298719;  // std dev = 1,712, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.12539885576966867;  // std dev = 1,010, 321,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.12964554436753223;  // std dev = 3,162, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.04810121334662774;  // std dev = 4,384, 245,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.007908169700364814;  // std dev = 6,365, 365,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=47 */
%   | | | else return -0.10138269589229679;  // std dev = 1,390, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.14103100625292145;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7753114821090791;  // std dev = 1,03e-07, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2246885178909206;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.7164879526973148;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.05161159481399754;  // std dev = 4,725, 156,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | else return 0.14375361266578254;  // std dev = 0,482, 7.491,000 (wgt'ed) examples reached here.  /* #neg=4.731 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.006828048942439262;  // std dev = 0,300, 698,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=121 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.006438717669041838;  // std dev = 6,365, 363,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=47 */
%   | | | else return -0.08796115043972974;  // std dev = 1,389, 53,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | else return -0.12323187742966353;  // std dev = 0,026, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10764030296644143;  // std dev = 0,478, 7.944,000 (wgt'ed) examples reached here.  /* #neg=5.097 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.1518317015116003;  // std dev = 0,632, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0981218108744086;  // std dev = 3,172, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.16050190289157623;  // std dev = 1,067, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10510673958117014;  // std dev = 0,030, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.020016649767071935;  // std dev = 8,096, 697,000 (wgt'ed) examples reached here.  /* #neg=615 #pos=82 */
%   | | | else return 0.03124953386505239;  // std dev = 2,822, 101,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.010751259566190344;  // std dev = 4,428, 256,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=48 */
%   | | | else return -0.11237464910380172;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09006532745440594;  // std dev = 0,479, 7.870,000 (wgt'ed) examples reached here.  /* #neg=5.023 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.12653655707764513;  // std dev = 0,883, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0603507670178353;  // std dev = 3,202, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.07058585793340058;  // std dev = 1,206, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09669142248205524;  // std dev = 0,029, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.026171347363420933;  // std dev = 7,661, 639,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=66 */
%   | | | else return 0.0018014281455079582;  // std dev = 4,011, 202,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0012877594772150644;  // std dev = 4,504, 271,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=48 */
%   | | | else return -0.1016443545961048;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07301499366563625;  // std dev = 0,479, 7.853,000 (wgt'ed) examples reached here.  /* #neg=5.006 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.005882368861212799;  // std dev = 1,226, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.06974070533995179;  // std dev = 2,284, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.3479032490189373;  // std dev = 0,563, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13000541592454248;  // std dev = 0,134, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.01626099571062067;  // std dev = 6,248, 523,000 (wgt'ed) examples reached here.  /* #neg=441 #pos=82 */
%   | | | else return 0.03717823264159693;  // std dev = 4,150, 129,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=21 */
%   | | else return -0.01193536340781123;  // std dev = 0,317, 416,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=48 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03770651078497781;  // std dev = 0,473, 7.616,000 (wgt'ed) examples reached here.  /* #neg=5.007 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7512992410255132;  // std dev = 2,368, 138,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=133 */
%   | | | else return -0.1305056412265404;  // std dev = 1,499, 627,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.124369048468363;  // std dev = 4,703, 150,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=27 */
%   | | | else return -0.03949905865266801;  // std dev = 0,958, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.43416951734697007;  // std dev = 4,461, 105,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=78 */
%   | | | else return 0.06330357285382651;  // std dev = 4,476, 193,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5758064599396148;  // std dev = 0,321, 77,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | else return 0.019888191737606562;  // std dev = 0,280, 246,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=49 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.5270447500038935;  // std dev = 0,145, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.008213021034299217;  // std dev = 6,691, 215,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
%   | | else return 0.5763264795196257;  // std dev = 0,137, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.046708660464339705;  // std dev = 0,476, 7.622,000 (wgt'ed) examples reached here.  /* #neg=4.862 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.5393324537494051;  // std dev = 1,019, 85,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=84 */
%   | | | else return -0.1174809995644907;  // std dev = 0,930, 296,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=1 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.06591097676363207;  // std dev = 3,038, 181,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=17 */
%   | | | else return 0.033672814311301036;  // std dev = 3,493, 112,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
%   | else return -0.011658785910588363;  // std dev = 0,281, 420,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5127469121478601;  // std dev = 0,338, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.24822480942101072;  // std dev = 5,37e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.31045233487719587;  // std dev = 1,381, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.11560904873746813;  // std dev = 4,611, 159,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=27 */
%   | else return 0.037450860789347826;  // std dev = 0,477, 7.607,000 (wgt'ed) examples reached here.  /* #neg=4.847 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.6599298323951325;  // std dev = 2,430, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.11482852075876829;  // std dev = 0,775, 526,000 (wgt'ed) examples reached here.  /* #neg=525 #pos=1 */
%   | | else return -0.021487219376015606;  // std dev = 0,213, 214,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=36 */
%   | else return -0.020931177473845354;  // std dev = 0,218, 292,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;author(K, J), venue(K, A).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,false,true;haswordtitle(K, I).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;true,true;author(F, E), venue(F, A).;true;true
3;false,false,true;title(M, L), venue(M, B).;false;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false,true;haswordvenue(B, C).;false;false
7;true;venue(E, A), title(E, D).;true;true
7;true,false;title(G, D), venue(G, B).;true;true
7;true,true,false;samebib(E, F), venue(F, B).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
7;true,true;haswordvenue(B, C).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,true;haswordauthor(G, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true,true;samebib(J, K), venue(K, B).;false;false
8;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;false,true;title(J, I), venue(J, A).;true;true
8;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,true;samebib(F, G), venue(G, B).;false;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;false,true,true;samebib(K, L), venue(L, A).;false;false
9;true,true,false;haswordauthor(H, C).;false;false
9;true,true;author(F, E), venue(F, A).;true;true
9;false,true;title(K, J), venue(K, B).;true;false
9;false;haswordvenue(A, I), haswordtitle(J, I).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4735335504841285;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,54e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4490790728275394;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3651040583715331;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360621;  // std dev = 7,57e-09, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.21481526906958825;  // std dev = 0,492, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34165245967779695;  // std dev = 3,601, 73,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08584077545818596;  // std dev = 4,745, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839682;  // std dev = 4,83e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.041157603531874386;  // std dev = 4,875, 98,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109165;  // std dev = 4,34e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.48909361032547966;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4573085027909027;  // std dev = 1,98e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.542691497209097;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.127742936623992;  // std dev = 0,343, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420265;  // std dev = 4,66e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.4001156747146152;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.05475873028500858;  // std dev = 0,362, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979497
   AUC PR    = 0.867039
   CLL	      = -0.202625
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.193 seconds
Total inference time: 2.25 seconds
AUC ROC: 0.979497


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.214945
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.481 seconds
Parameter learned model CLL: -0.214945


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.54e-09, 75, 0], 'true': [4.641, 35, 56], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.371, 29, 56], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 86, 0], 'false,true,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [7.57e-09, 88, 0], 'true': [4.371, 29, 56], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.492, 39, 56], 'false,true': [5.37e-08, 87, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 64, 0], 'true': [3.601, 17, 56], 'false,true,true': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.745, 38, 56], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.83e-08, 81, 0], 'false,true,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false': [4.34e-08, 81, 0], 'true': [4.875, 42, 56], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 72, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,true,true': [1.98e-07, 0, 56], 'true,true,false,false': [1.86e-09, 3, 0], 'true,false,false,true': [0.0, 37, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [4.66e-09, 92, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.343, 23, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, I)', 'true,true': 'genre(A, E)', 'false,true': 'genre(B, H)', 'false': 'movie(G, A)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.362, 30, 56], 'false,true,false': [0.0, 86, 0], 'true,true,true,false': [0.0, 4, 0], 'true,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.2366863905325441, 7.307797124114954e-17], 'false,true': [0.0, 7.105427357601002e-17], 'false,true,true': [nan, 0.0], 'false': [7.307797124114954e-17, nan]}, {'': [0.2247750865051892, -1.4325458382260084e-17], 'false,true,false': [nan, -1.8073398075293247e-17], 'false,true': [-1.982541115402065e-18, -1.8073398075293247e-17], 'false': [-1.4325458382260084e-17, nan]}, {'': [0.22477508650519076, 5.921189464667501e-17], 'false,true': [0.0, 5.803438537813318e-17], 'false,true,true': [nan, 0.0], 'false': [5.921189464667501e-17, nan]}, {'': [0.24199445983379497, 3.317907889684376e-17], 'true': [0.24199445983379497, nan], 'true,true': [nan, 0.24199445983379497], 'false': [3.317907889684376e-17, nan]}, {'': [0.17759824822393433, -1.6570492904853082e-18], 'false,true': [1.1564823173178713e-18, -1.734723475976807e-18], 'false': [-1.6570492904853082e-18, nan]}, {'': [0.23953400464589167, 2.9077269692563625e-17], 'false,true,false': [nan, 2.878355989768924e-17], 'false,true': [0.0, 2.878355989768924e-17], 'false': [2.9077269692563625e-17, nan]}, {'': [0.24250821759885152, 2.6752362039160398e-17], 'false,true': [0.0, 2.3300977060034148e-17], 'false': [2.6752362039160398e-17, nan]}, {'': [0.13506813763633962, nan], 'true,false,true': [6.97854472621527e-16, 0.0], 'true': [0.04150297133932187, 0.1361898971432791], 'true,false': [0.01751482879945699, 0.04941413102598516], 'true,true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [-3.3606751015680416e-16, -4.625929269271485e-18], 'true,true': [0.0, 1.1564823173178713e-18]}, {'': [0.11796110976814349, 2.1973164029039556e-17], 'true': [0.11796110976814349, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.1118372751022e-17], 'false': [2.1973164029039556e-17, nan]}, {'': [0.13376983071910148, -1.2335811384723961e-17], 'true,true,true': [nan, 0.0], 'true': [0.13376983071910148, nan], 'false,true,true': [nan, 0.0], 'true,true': [0.0, 0.1307956511185204], 'false,true': [0.0, -1.0973134545713756e-17], 'false': [-1.2335811384723961e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(A, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false,true;movie(C, B).;true;true
7;false;genre(B, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(A, E).;true;true
9;false;genre(B, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13513726035718227;  // std dev = 0,150, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.1113536353445037;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1016842370858417;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10080228077206066;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09276487570789022;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09202602979963884;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08470949290724542;  // std dev = 0,000220, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07886944098793099;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07828502073043651;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.17164754261953977;  // std dev = 0,539, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07325410801152661;  // std dev = 0,000171, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.07317655293798428;  // std dev = 0,001, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684280203500292;  // std dev = 9,17e-06, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06809350713156095;  // std dev = 0,000621, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06229197214204606;  // std dev = 0,000300, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.06241459348238135;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0684264753941565;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842656202347486;  // std dev = 1,02e-06, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(B) )
%   | | | then return -0.06843141925294914;  // std dev = 1,39e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.05886717165781319;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06421236560415802;  // std dev = 0,000139, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06388301044606114;  // std dev = 0,000473, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1340070300080109;  // std dev = 5,89e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, E) )
%   | then if ( female(A) )
%   | | then return -0.06419186506090067;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419441658563067;  // std dev = 1,26e-05, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.06419340717824489;  // std dev = 1,36e-05, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.05886037857889811;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074916
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.11 seconds
Total inference time: 2.898 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064006
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.77 seconds
Refined model CLL: -0.064006


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074916
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.554 seconds
Total inference time: 2.898 seconds
AUC ROC: 1.0
Total revision time: 7.554
Best scored revision CLL: -0.064006


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:38:19
{'AUC ROC': 1.0, 'F1': 0.847854, 'parameter': {'AUC ROC': 0.979497, 'F1': 0.900506, 'Precision': [1.0, 0.5], 'Learning time': 1.193, 'Inference time': 2.25, 'CLL': -0.202625, 'AUC PR': 0.867039, 'Recall': 0.819018}, 'Precision': [0.735892, 0.5], 'Learning time': 7.554, 'Inference time': 2.898, 'CLL': -0.074916, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;author(K, J), venue(K, A).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,false,true;haswordtitle(K, I).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;true,true;author(F, E), venue(F, A).;true;true
3;false,false,true;title(M, L), venue(M, B).;false;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false,true;haswordvenue(B, C).;false;false
7;true;venue(E, A), title(E, D).;true;true
7;true,false;title(G, D), venue(G, B).;true;true
7;true,true,false;samebib(E, F), venue(F, B).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
7;true,true;haswordvenue(B, C).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,true;haswordauthor(G, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true,true;samebib(J, K), venue(K, B).;false;false
8;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;false,true;title(J, I), venue(J, A).;true;true
8;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,true;samebib(F, G), venue(G, B).;false;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;false,true,true;samebib(K, L), venue(L, A).;false;false
9;true,true,false;haswordauthor(H, C).;false;false
9;true,true;author(F, E), venue(F, A).;true;true
9;false,true;title(K, J), venue(K, B).;true;false
9;false;haswordvenue(A, I), haswordtitle(J, I).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4499856697933907;  // std dev = 4,866, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43149460836522124;  // std dev = 4,586, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.39709333401262786;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360622;  // std dev = 7,21e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3725187570426958;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2791666362157311;  // std dev = 0,476, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18047116025129423;  // std dev = 4,678, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17807237365220036;  // std dev = 4,406, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839678;  // std dev = 4,21e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21864844247063914;  // std dev = 3,801, 78,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109158;  // std dev = 5,77e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4214672287215427;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4170410230736766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5829589769263231;  // std dev = 5,96e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06696696115782191;  // std dev = 0,353, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420267;  // std dev = 4,17e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3382162323349364;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.04097455470061117;  // std dev = 0,362, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978798
   AUC PR    = 0.865522
   CLL	      = -0.209152
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.321 seconds
Total inference time: 2.581 seconds
AUC ROC: 0.978798


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.207961
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.496 seconds
Parameter learned model CLL: -0.207961


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.93e-09, 90, 0], 'true': [4.866, 40, 58], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.586, 33, 58], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 84, 0], 'false,true,true': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [7.21e-09, 78, 0], 'true': [4.292, 27, 58], 'false,true,true,false': [0.0, 7, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)'}, {'false,true': [4.21e-08, 97, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.476, 31, 58], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 3, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 85, 0], 'true': [4.678, 36, 58], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.406, 30, 58], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.21e-08, 98, 0], 'false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false': [5.77e-08, 102, 0], 'true': [3.801, 20, 58], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 1, 0], 'true,false,false,false': [0.0, 79, 0], 'true,true,false,true': [0.0, 2, 0], 'true,false,true,false': [2.63e-09, 8, 0], 'true,false,true,true': [5.96e-08, 0, 58], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,true': [5.96e-08, 32, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [1.86e-09, 6, 0], 'false,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [4.17e-09, 78, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.353, 30, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, I)', 'true,true': 'genre(A, E)', 'false,true': 'genre(B, H)', 'false': 'movie(G, A)'}, {'false,true,true,false': [3.73e-09, 10, 0], 'false,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.362, 31, 58], 'false,true,false': [0.0, 89, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.24156601416076598, 7.946859544685331e-17], 'false,true': [-2.7755575615628915e-18, 7.401486830834377e-17], 'false,true,true': [0.0, 0.0], 'false': [7.946859544685331e-17, nan]}, {'': [0.2311315058567789, -1.68946982008176e-17], 'false,true,false': [nan, -2.114710523095536e-17], 'false,true': [0.0, -2.114710523095536e-17], 'false': [-1.68946982008176e-17, nan]}, {'': [0.2167474048442919, 5.680210823663592e-17], 'false,true': [-1.734723475976807e-18, 4.981769982292369e-17], 'false,true,true': [0.0, -1.982541115402065e-18], 'false': [5.680210823663592e-17, nan]}, {'': [0.23298676748582303, 1.8312957107219077e-17], 'true,true,true': [nan, -3.700743415417188e-17], 'true': [0.23298676748582303, nan], 'true,true': [-3.700743415417188e-17, 0.2269915414720371], 'false': [1.8312957107219077e-17, nan]}, {'': [0.23284747303787123, 6.237208003512115e-18], 'false,true': [0.0, 0.0], 'false': [6.237208003512115e-18, nan]}, {'': [0.22056335902930274, 1.850371707708594e-17], 'false,true,false': [nan, 1.8126090197961738e-17], 'false,true': [0.0, 1.8126090197961738e-17], 'false': [1.850371707708594e-17, nan]}, {'': [0.18520898939512095, 3.3835368369528583e-17], 'false,true': [0.0, 3.2653618371328135e-17], 'false': [3.3835368369528583e-17, nan]}, {'': [0.11629811850338989, nan], 'true,false,true': [6.125368411725002e-17, 8.673617379884035e-19], 'true': [0.011976085619873449, 0.12104658366911061], 'true,false': [0.025605384774262156, 0.05330673810801828], 'true,true,false': [0.0, 0.0], 'true,false,false': [1.1102230246251565e-16, -5.6213824031653495e-18], 'true,true': [0.0, 8.673617379884035e-19]}, {'': [0.12468660870257632, 1.8939098655370318e-17], 'true': [0.12468660870257632, nan], 'false,true,true': [0.0, 5.782411586589357e-19], 'false,true': [9.912705577010326e-19, 1.708035422500241e-17], 'false': [1.8939098655370318e-17, nan]}, {'': [0.13152254433398897, -1.4432899320127036e-17], 'true,true,true': [nan, 0.0], 'true': [0.13152254433398897, nan], 'false,true,true': [0.0, 1.3877787807814458e-18], 'true,true': [0.0, 0.13140270736463744], 'false,true': [2.523234146875356e-18, -1.1850695206673019e-17], 'false': [-1.4432899320127036e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(A, D).;true;true
7;true;movie(C, B).;true;true
7;true,false;genre(B, E).;true;true
7;false,false;movie(C, B).;true;true
7;false,true;movie(C, B).;true;true
7;false;genre(B, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, G).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(A, E).;true;true
9;false,true;genre(A, I).;true;true
9;false;genre(B, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then return -0.12872592380281067;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11198964535733912;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10643991075492928;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09203753599034946;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0998783221070439;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.08836679052790002;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07774949884040985;  // std dev = 0,000562, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.07493454198133738;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1444430990267625;  // std dev = 0,404, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.15325433360159993;  // std dev = 0,476, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06841353498533417;  // std dev = 0,000142, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return 0.15701771997212774;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15585495865988452;  // std dev = 1,86e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08493395846818866;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06748318941307663;  // std dev = 0,000493, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 4,56e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.08416032032636578;  // std dev = 0,000306, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06409110017169817;  // std dev = 6,98e-07, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419231114354747;  // std dev = 1,38e-06, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return 0.13733479217888395;  // std dev = 2,36e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.13643115829922517;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.07856136071867964;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07786629930906086;  // std dev = 0,000516, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.06328093454302441;  // std dev = 0,000380, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999922
   AUC PR    = 0.997597
   CLL	      = -0.081152
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.468 seconds
Total inference time: 3.094 seconds
AUC ROC: 0.999922


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065533
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.594 seconds
Refined model CLL: -0.065533


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999922
   AUC PR    = 0.997597
   CLL	      = -0.081152
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.8790000000000004 seconds
Total inference time: 3.094 seconds
AUC ROC: 0.999922
Total revision time: 6.8790000000000004
Best scored revision CLL: -0.065533


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:38:32
{'AUC ROC': 0.999922, 'F1': 0.848168, 'parameter': {'AUC ROC': 0.978798, 'F1': 0.89983, 'Precision': [1.0, 0.5], 'Learning time': 1.321, 'Inference time': 2.581, 'CLL': -0.209152, 'AUC PR': 0.865522, 'Recall': 0.817901}, 'Precision': [0.736364, 0.5], 'Learning time': 6.8790000000000004, 'Inference time': 3.094, 'CLL': -0.081152, 'AUC PR': 0.997597, 'Recall': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;author(K, J), venue(K, A).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,false,true;haswordtitle(K, I).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;true,true;author(F, E), venue(F, A).;true;true
3;false,false,true;title(M, L), venue(M, B).;false;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false,true;haswordvenue(B, C).;false;false
7;true;venue(E, A), title(E, D).;true;true
7;true,false;title(G, D), venue(G, B).;true;true
7;true,true,false;samebib(E, F), venue(F, B).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
7;true,true;haswordvenue(B, C).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,true;haswordauthor(G, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true,true;samebib(J, K), venue(K, B).;false;false
8;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;false,true;title(J, I), venue(J, A).;true;true
8;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,true;samebib(F, G), venue(G, B).;false;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;false,true,true;samebib(K, L), venue(L, A).;false;false
9;true,true,false;haswordauthor(H, C).;false;false
9;true,true;author(F, E), venue(F, A).;true;true
9;false,true;title(K, J), venue(K, B).;true;false
9;false;haswordvenue(A, I), haswordtitle(J, I).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5817261708718665;  // std dev = 7,015, 246,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.1418510649004885;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43593873724208027;  // std dev = 7,732, 268,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839163;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3981831613623515;  // std dev = 7,160, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.11231637819360678;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.4051258934924845;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.40512589349248446;  // std dev = 2,58e-08, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.3755758608934824;  // std dev = 0,414, 228,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783659;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16763262420370448;  // std dev = 7,559, 275,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.09269127618926049;  // std dev = 7,60e-08, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1730925942328407;  // std dev = 7,038, 254,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839678;  // std dev = 8,43e-08, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1576109097782693;  // std dev = 6,671, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310917;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07877675473109144;  // std dev = 7,15e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.42777333999121203;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.07324622576333702;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3799500933513689;  // std dev = 2,46e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15338323998196363;  // std dev = 5,112, 105,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=49 */
%   | | | else return -0.07324622576333667;  // std dev = 1,12e-07, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08908905979127432;  // std dev = 0,394, 246,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.0684269778442027;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.06842697784420261;  // std dev = 4,47e-09, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3475953514497253;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3475953514497254;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.03855452292192554;  // std dev = 0,420, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.06419184008202615;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202611;  // std dev = 1,05e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.296737
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.705 seconds
Total inference time: 2.277 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.234624
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.757 seconds
Parameter learned model CLL: -0.234624


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 226, 0], 'true': [7.015, 68, 178], 'false,true,true,false': [3.94e-08, 38, 0], 'false,true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [7.732, 90, 178], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 199, 0], 'false,true,true': [0.0, 51, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 234, 0], 'true': [7.16, 72, 178], 'false,true,true,false': [0.0, 41, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)'}, {'false,true': [0.0, 260, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.414, 50, 178], 'false,false': [0.0, 0, 0], 'true,true,true,false': [2.58e-08, 11, 0], 'true,true,true,true': [1.49e-08, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.6e-08, 234, 0], 'true': [7.559, 97, 178], 'false,true,true': [0.0, 60, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [7.038, 76, 178], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [8.43e-08, 224, 0], 'false,true,true': [1.67e-08, 37, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false': [7.15e-08, 223, 0], 'true': [6.671, 67, 178], 'false,true,true': [0.0, 47, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 22, 0], 'true,false,false,false': [1.12e-07, 190, 0], 'true,true,false,true': [2.63e-09, 6, 0], 'true,false,true,false': [0.0, 46, 0], 'true,false,true,true': [2.46e-07, 0, 129], 'true,true,false,false': [1.18e-08, 42, 0], 'true,false,false,true': [5.112, 56, 49], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 36, 0], 'false,true,true,true': [2.63e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [4.47e-09, 215, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.394, 68, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, I)', 'true,true': 'genre(A, E)', 'false,true': 'genre(B, H)', 'false': 'movie(G, A)'}, {'false,true,true,false': [1.05e-08, 32, 0], 'false,true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.42, 75, 178], 'false,true,false': [0.0, 192, 0], 'true,true,true,false': [2.11e-08, 16, 0], 'true,true,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.20001321964439722, -6.296787303844171e-17], 'false,true': [4.7580986769649563e-17, -2.2793959443631533e-16], 'false,true,true': [0.0, 4.0902953538821554e-17], 'false': [-6.296787303844171e-17, nan]}, {'': [0.2230452216529318, -7.815970093361102e-17], 'false,true,false': [nan, -5.1326893600761006e-17], 'false,true': [-1.959217102279688e-17, -5.1326893600761006e-17], 'false': [-7.815970093361102e-17, nan]}, {'': [0.2050560000000026, -1.149592635427467e-16], 'false,true': [1.61907524424502e-17, -7.97083197166779e-17], 'false,true,true': [-1.982541115402065e-18, -2.7078610356711136e-18], 'false': [-1.149592635427467e-16, nan]}, {'': [0.202588449531736, -6.661338147750939e-17], 'true,true,true': [2.4671622769447922e-17, 6.055761952500853e-17], 'true': [0.202588449531736, nan], 'true,true': [6.661338147750939e-17, 0.17120652508463982], 'false': [-6.661338147750939e-17, nan]}, {'': [0.20777725937856772, 7.703588334133739e-17], 'false,true': [-2.4054832200211726e-17, 2.4671622769447922e-17], 'false': [7.703588334133739e-17, nan]}, {'': [0.19502245159198156, 3.402982450958334e-17], 'false,true,false': [nan, 3.172065784643304e-17], 'false,true': [7.50150692314295e-18, 3.172065784643304e-17], 'false': [3.402982450958334e-17, nan]}, {'': [0.18166210398038524, 1.0691036533427433e-17], 'false,true': [-1.1810883240693154e-18, 2.2901461494509957e-17], 'false': [1.0691036533427433e-17, nan]}, {'': [0.09770797088738355, nan], 'true,false,true': [4.681870739504537e-16, -1.0860877414811314e-17], 'true': [0.027087364348411993, 0.10207062589783243], 'true,false': [0.03979643710410452, 0.09005976509323095], 'true,true,false': [1.1564823173178713e-18, 3.3042351923367752e-18], 'true,false,false': [0.24888888888888897, 6.544472566211448e-17], 'true,true': [-1.2111523905001707e-16, 1.1564823173178713e-18]}, {'': [0.1550736023289631, -2.0417894705750005e-17], 'true': [0.1550736023289631, nan], 'false,true,true': [6.938893903907229e-19, -1.5419764230904951e-18], 'false,true': [4.2236745502044e-18, 2.1688077690351895e-17], 'false': [-2.0417894705750005e-17, nan]}, {'': [0.1733868785521709, 1.4737473778210042e-18], 'true,true,true': [-2.2204460492503132e-17, 2.7755575615628914e-17], 'true': [0.1733868785521709, nan], 'false,true,true': [0.0, 3.469446951953614e-18], 'true,true': [-4.229421046191072e-17, 0.17635040386489428], 'false,true': [3.2653618371328133e-18, -3.469446951953614e-18], 'false': [1.4737473778210042e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
3;true,true;genre(B, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(A, D).;true;true
7;true;movie(C, B).;true;true
7;true,false;genre(B, E).;true;true
7;false,false;movie(C, B).;true;true
7;false,true;movie(C, B).;true;true
7;false;genre(B, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, G).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(A, E).;true;true
9;true,true;genre(B, F).;true;true
9;false,true;genre(A, I).;true;true
9;false;genre(B, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 4,21e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.14185106490048832;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839147;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.12544463852839177;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360635;  // std dev = 2,95e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.1123163781936067;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.41751358415831014;  // std dev = 1,69e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.41751358415831014;  // std dev = 1,69e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783662;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.09269127618926079;  // std dev = 1,49e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3,73e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 1,61e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109169;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0787767547310915;  // std dev = 7,30e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109164;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.12366969699648762;  // std dev = 1,314, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | | | else return -0.07324622576333696;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.12513857399820658;  // std dev = 0,739, 53,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | | | else return -0.06528077546988112;  // std dev = 0,652, 220,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1596939680141355;  // std dev = 9,84e-05, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1619125013884383;  // std dev = 0,007, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.06893648211034363;  // std dev = 3,95e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.0687666473549634;  // std dev = 0,000832, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06858619792737179;  // std dev = 0,000945, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420264;  // std dev = 3,23e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( director(B), female(A) )
%   | | then return -0.08213487995784369;  // std dev = 5,26e-05, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( director(B), actor(A) )
%   | | | then return -0.07435548007504336;  // std dev = 0,038, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.0689056878964559;  // std dev = 0,002, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06418056501782135;  // std dev = 3,95e-06, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.13940977758590273;  // std dev = 0,000830, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.14113207748255294;  // std dev = 0,062, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.06464417764707397;  // std dev = 6,51e-06, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( actor(A) )
%   | | | then return -0.07638271207828197;  // std dev = 0,002, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.06416308937056503;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then return -0.06457009821316842;  // std dev = 0,000166, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else return -0.06865530337495296;  // std dev = 0,006, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064507
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.71 seconds
Total inference time: 3.197 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.744 seconds
Refined model CLL: -0.067363


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064507
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.916 seconds
Total inference time: 3.197 seconds
AUC ROC: 1.0
Total revision time: 8.916
Best scored revision CLL: -0.067363


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:47
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 0.993692, 'F1': 0.129114, 'Precision': [0.069012, 0.5], 'Learning time': 1.705, 'Inference time': 2.277, 'CLL': -0.296737, 'AUC PR': 0.961008, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 8.916, 'Inference time': 3.197, 'CLL': -0.064507, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;author(K, J), venue(K, A).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,false,true;haswordtitle(K, I).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;true,true;author(F, E), venue(F, A).;true;true
3;false,false,true;title(M, L), venue(M, B).;false;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false,true;haswordvenue(B, C).;false;false
7;true;venue(E, A), title(E, D).;true;true
7;true,false;title(G, D), venue(G, B).;true;true
7;true,true,false;samebib(E, F), venue(F, B).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
7;true,true;haswordvenue(B, C).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,true;haswordauthor(G, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true,true;samebib(J, K), venue(K, B).;false;false
8;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;false,true;title(J, I), venue(J, A).;true;true
8;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,true;samebib(F, G), venue(G, B).;false;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;false,true,true;samebib(K, L), venue(L, A).;false;false
9;true,true,false;haswordauthor(H, C).;false;false
9;true,true;author(F, E), venue(F, A).;true;true
9;false,true;title(K, J), venue(K, B).;true;false
9;false;haswordvenue(A, I), haswordtitle(J, I).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4137044906550685;  // std dev = 4,472, 81,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 7,68e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4081082918240522;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1295462451214155;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.28924837262502423;  // std dev = 4,437, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11190809203425059;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360624;  // std dev = 6,84e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3342691740439528;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.2738389340641548;  // std dev = 0,488, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10158030042352663;  // std dev = 0,000569, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2436220472027954;  // std dev = 3,984, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09631429602663984;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269262423601524;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19907852842225873;  // std dev = 3,914, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08461757057859323;  // std dev = 4,56e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518589546224428;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2825739560224726;  // std dev = 3,078, 57,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.08540944270694752;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07874130216279687;  // std dev = 0,001, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4468177833006546;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.09133288941340963;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07279287673059417;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.42307211647994697;  // std dev = 5,96e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07279817700180059;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.576927883520053;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324955130051612;  // std dev = 1,97e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07771448193931053;  // std dev = 0,353, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06803000589581087;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06839260194728083;  // std dev = 0,000116, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.33916067059270216;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.019646604547513047;  // std dev = 0,377, 79,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06382418369873166;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06416052911310123;  // std dev = 0,000825, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979741
   AUC PR    = 0.868436
   CLL	      = -0.200527
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.227 seconds
Total inference time: 2.71 seconds
AUC ROC: 0.979741


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.214405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.517 seconds
Parameter learned model CLL: -0.214405


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [7.68e-09, 53, 0], 'true': [4.472, 36, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.199, 29, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 77, 0], 'false,true,true': [0.014, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.84e-09, 73, 0], 'true': [4.437, 35, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)'}, {'false,true': [0.000569, 63, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.488, 29, 45], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 53, 0], 'true': [3.984, 26, 45], 'false,true,true': [0.022, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [3.914, 24, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.49e-08, 56, 0], 'false,true,true': [4.56e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false': [0.001, 67, 0], 'true': [3.078, 12, 45], 'false,true,true': [0.023, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.072, 4, 0], 'true,false,false,false': [1.97e-08, 51, 0], 'true,true,false,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,true,true': [5.96e-08, 0, 45], 'true,true,false,false': [0.0, 5, 0], 'true,false,false,true': [0.0, 27, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [1.86e-09, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.000116, 53, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.353, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, I)', 'true,true': 'genre(A, E)', 'false,true': 'genre(B, H)', 'false': 'movie(G, A)'}, {'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.377, 34, 45], 'false,true,false': [0.000825, 59, 0], 'true,true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.24691358024691384, 6.232831015439475e-17], 'false,true': [0.0, 5.86532918669894e-17], 'false,true,true': [nan, 0.0], 'false': [6.232831015439475e-17, nan]}, {'': [0.23831263696128457, 3.28207073679248e-06], 'false,true,false': [nan, -2.5953265510717945e-17], 'false,true': [5.046952993181114e-05, -2.5953265510717945e-17], 'false': [3.28207073679248e-06, nan]}, {'': [0.24609374999999972, 8.209764878020952e-09], 'false,true': [0.0, 4.7146457210109385e-17], 'false,true,true': [nan, 0.0], 'false': [8.209764878020952e-09, nan]}, {'': [0.24151662049861514, 5.1386180848352875e-09], 'true,true,true': [nan, 0.0], 'true': [0.24151662049861514, nan], 'true,true': [0.0, 0.23831263696128582], 'false': [5.1386180848352875e-09, nan]}, {'': [0.22352268238254724, 9.058830401190012e-06], 'false,true': [7.729587440912418e-05, -2.51371250858526e-17], 'false': [9.058830401190012e-06, nan]}, {'': [0.22201739146864147, 3.5327378347313476e-08], 'false,true,false': [nan, 3.96508223080413e-18], 'false,true': [2.6020852139652106e-18, 3.96508223080413e-18], 'false': [3.5327378347313476e-08, nan]}, {'': [0.16620498614958412, 1.0598824777420808e-05], 'false,true': [8.795903782652752e-05, 1.6461081083624843e-08], 'false': [1.0598824777420808e-05, nan]}, {'': [0.1313040908115548, nan], 'true,false,true': [7.894919286223336e-17, 0.0], 'true': [0.03356781948093478, 0.13545577951844776], 'true,false': [0.022129861316190737, 0.057418424466213425], 'true,true,false': [0.0, -6.938893903907229e-19], 'true,false,false': [-6.579099405186112e-17, 7.619177619976565e-18], 'true,true': [0.0012923158479783148, 4.774056531652027e-05]}, {'': [0.12474694648084506, 2.400033736438644e-08], 'true': [0.12474694648084506, nan], 'false,true,true': [nan, 5.782411586589357e-19], 'false,true': [5.782411586589357e-19, 1.3346926534111522e-08], 'false': [2.400033736438644e-08, nan]}, {'': [0.14076842883946158, 1.61754246403999e-08], 'true,true,true': [nan, 0.0], 'true': [0.14076842883946158, nan], 'false,true,true': [nan, -5.782411586589357e-19], 'true,true': [0.0, 0.14181146459577937], 'false,true': [-5.782411586589357e-19, 1.1523956871153976e-08], 'false': [1.61754246403999e-08, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(A, D).;true;true
7;true;movie(C, B).;true;true
7;true,false;genre(B, E).;true;true
7;false,false;movie(C, B).;true;true
7;false,true;movie(C, B).;true;true
7;false;genre(B, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(A, E).;true;true
9;false;genre(B, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.278474970723661;  // std dev = 0,332, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.08740252939595627;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09189037783273711;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08431989452837568;  // std dev = 0,011, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07837363789351415;  // std dev = 0,002, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06966626275730602;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1562346041195595;  // std dev = 0,240, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.13435505714624574;  // std dev = 0,603, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07328428115123693;  // std dev = 0,000463, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15546326381156383;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15835762977995496;  // std dev = 6,18e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.06844249411681803;  // std dev = 2,69e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06726835374337632;  // std dev = 0,003, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.06865553448651505;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06865553448651505;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.06842478680766294;  // std dev = 7,17e-07, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( female(A) )
%   | | | then return -0.08458453380352694;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08290572651341721;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.05592939934859544;  // std dev = 0,000184, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.13612646519899863;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1383745099373632;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( female(B) )
%   | | | then return -0.06420187445118355;  // std dev = 3,10e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06435201231069072;  // std dev = 0,000278, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(B, E) )
%   | then return -0.07571846993696627;  // std dev = 0,004, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06418968569936344;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0641901253149571;  // std dev = 4,59e-06, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06439345753174278;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073447
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.397 seconds
Total inference time: 3.067 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066069
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.385 seconds
Refined model CLL: -0.066069


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073447
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.526 seconds
Total inference time: 3.067 seconds
AUC ROC: 1.0
Total revision time: 6.526
Best scored revision CLL: -0.066069


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:39:00
{'AUC ROC': 1.0, 'F1': 0.853165, 'parameter': {'AUC ROC': 0.979741, 'F1': 0.904065, 'Precision': [1.0, 0.5], 'Learning time': 1.227, 'Inference time': 2.71, 'CLL': -0.200527, 'AUC PR': 0.868436, 'Recall': 0.824926}, 'Precision': [0.743929, 0.5], 'Learning time': 6.526, 'Inference time': 3.067, 'CLL': -0.073447, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;author(K, J), venue(K, A).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,false,true;haswordtitle(K, I).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;samebib(F, G), venue(G, B).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;true,true,false;haswordauthor(H, C).;false;false
3;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
3;true,true;author(F, E), venue(F, A).;true;true
3;false,false,true;title(M, L), venue(M, B).;false;false
3;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false,true;haswordvenue(B, C).;false;false
7;true;venue(E, A), title(E, D).;true;true
7;true,false;title(G, D), venue(G, B).;true;true
7;true,true,false;samebib(E, F), venue(F, B).;false;false
7;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
7;true,true;haswordvenue(B, C).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,true;haswordauthor(G, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true,true;samebib(J, K), venue(K, B).;false;false
8;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;false,true;title(J, I), venue(J, A).;true;true
8;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,true;samebib(F, G), venue(G, B).;false;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;false,true,true;samebib(K, L), venue(L, A).;false;false
9;true,true,false;haswordauthor(H, C).;false;false
9;true,true;author(F, E), venue(F, A).;true;true
9;false,true;title(K, J), venue(K, B).;true;false
9;false;haswordvenue(A, I), haswordtitle(J, I).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.39220064687492395;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44813556572931973;  // std dev = 3,436, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360625;  // std dev = 6,59e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3895174750697909;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.22692088109459244;  // std dev = 0,486, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22701869914211623;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16061504766239917;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18705059627778592;  // std dev = 3,484, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.43433790727819815;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07924304633062715;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4128334457903393;  // std dev = 8,43e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.27466655420966035;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.016651549170626233;  // std dev = 0,424, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07365058003812426;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06842697784420268;  // std dev = 2,79e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.33584620061104387;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.06320251283552054;  // std dev = 0,414, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06433089945542418;  // std dev = 0,006, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.241782
   Precision = 0.106309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192187


Total learning time: 1.194 seconds
Total inference time: 2.524 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.251686
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total scoring time: 1.226 seconds
Parameter learned model CLL: -0.251686


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.12e-09, 61, 0], 'true': [3.956, 24, 45], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.199, 29, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 52, 0], 'false,true,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.59e-09, 70, 0], 'true': [3.436, 16, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)', 'false': 'movie(G, B)'}, {'false,true': [5.67e-08, 75, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.486, 28, 45], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 69, 0], 'true': [3.844, 22, 45], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [3.901, 23, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.83e-08, 62, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,false': [2.11e-08, 58, 0], 'true': [3.484, 17, 45], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 73, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [1.86e-09, 3, 0], 'true,false,true,true': [8.43e-08, 0, 35], 'true,true,false,false': [0.0, 1, 0], 'true,false,false,true': [2.622, 22, 10], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [2.79e-09, 62, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.424, 29, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(A, I)', 'true,true': 'genre(A, E)', 'false,true': 'genre(B, H)', 'false': 'movie(G, A)'}, {'false,true,true,false': [1.32e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.414, 22, 45], 'false,true,false': [0.006, 66, 0], 'true,true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.2268431001890362, 6.591949208711867e-17], 'false,true': [0.0, 6.188128333976282e-17], 'false,true,true': [nan, 0.0], 'false': [6.591949208711867e-17, nan]}, {'': [0.2383126369612866, -3.027880976250427e-17], 'false,true,false': [nan, -3.416070845000482e-17], 'false,true': [0.0, -3.416070845000482e-17], 'false': [-3.027880976250427e-17, nan]}, {'': [0.1934963719430255, 4.884981308350689e-17], 'false,true': [0.0, 4.4408920985006264e-17], 'false,true,true': [nan, 0.0], 'false': [4.884981308350689e-17, nan]}, {'': [0.23831263696128577, 4.2928623618839385e-17], 'true,true,true': [nan, 0.0], 'true': [0.23831263696128577, nan], 'true,true': [0.0, 0.2364421092137363], 'false': [4.2928623618839385e-17, nan]}, {'': [0.22053909556694143, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.223832179930796, 5.3720468933475315e-18], 'false,true,false': [nan, 5.3720468933475315e-18], 'false,true': [nan, 5.3720468933475315e-18], 'false': [5.3720468933475315e-18, nan]}, {'': [0.1958166842749372, 1.0920226471722851e-17], 'false,true': [0.0, 7.656710514656252e-18], 'false': [1.0920226471722851e-17, nan]}, {'': [0.10986678253792755, nan], 'true,false,true': [2.0301221021717148e-16, 1.1564823173178713e-18], 'true': [0.028020524504749955, 0.10952388727791766], 'true,false': [0.017180548438546984, 0.07407227822130504], 'true,true,false': [nan, 0.0], 'true,false,false': [0.21484374999999997, -3.802133645976563e-18], 'true,true': [0.0, 0.0]}, {'': [0.18003747937538306, 4.2623664213051415e-07], 'true': [0.18003747937538306, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 8.058070340021298e-18], 'false': [4.2623664213051415e-07, nan]}, {'': [0.17089128443412133, 5.927001441815041e-07], 'true,true,true': [nan, 0.0], 'true': [0.17089128443412133, nan], 'false,true,true': [nan, 5.782411586589357e-19], 'true,true': [0.0, 0.1713768682341773], 'false,true': [5.782411586589357e-19, 6.188002985523849e-07], 'false': [5.927001441815041e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(A, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false,true;movie(C, B).;true;true
7;false;genre(B, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(A, E).;true;true
9;false;genre(B, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839682;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839685;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.12712275529436062;  // std dev = 0,143, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return 0.1353727104938416;  // std dev = 0,323, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0681688615512689;  // std dev = 0,000894, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.15417294996323755;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1537398918209446;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.0650714660360631;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.0684269778442027;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07813108191855128;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06104519759735493;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.1351224716183991;  // std dev = 0,010, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.13478472200930477;  // std dev = 0,009, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06420734719410337;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, E) )
%   | then return -0.06361136191359719;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(A), actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.06881254678485806;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072192
   Precision = 0.873057 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932227


Total learning time: 2.79 seconds
Total inference time: 3.082 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064954
   Precision = 0.978261 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.989011


Total scoring time: 1.478 seconds
Refined model CLL: -0.064954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072192
   Precision = 0.873057 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932227


Total learning time: 6.688 seconds
Total inference time: 3.082 seconds
AUC ROC: 1.0
Total revision time: 6.688
Best scored revision CLL: -0.064954


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:39:13
{'AUC ROC': 1.0, 'F1': 0.932227, 'parameter': {'AUC ROC': 0.983069, 'F1': 0.192187, 'Precision': [0.106309, 0.5], 'Learning time': 1.194, 'Inference time': 2.524, 'CLL': -0.241782, 'AUC PR': 0.891379, 'Recall': 1.0}, 'Precision': [0.873057, 0.5], 'Learning time': 6.688, 'Inference time': 3.082, 'CLL': -0.072192, 'AUC PR': 1.0, 'Recall': 1.0}


