Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22017843662544812;  // std dev = 0,481, 7.864,000 (wgt'ed) examples reached here.  /* #neg=5.017 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20698614440183793;  // std dev = 3,125, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09624417319475047;  // std dev = 3,381, 63,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.00851773156715447;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0199674083907927;  // std dev = 8,791, 722,000 (wgt'ed) examples reached here.  /* #neg=634 #pos=88 */
%   | | | else return 0.02979072614428805;  // std dev = 6,173, 268,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=46 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.19001574741681587;  // std dev = 0,480, 7.890,000 (wgt'ed) examples reached here.  /* #neg=5.043 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7866075389106336;  // std dev = 2,361, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.1418959886807792;  // std dev = 1,015, 292,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13103970901474937;  // std dev = 3,240, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.055302701129020713;  // std dev = 4,385, 247,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0029610019493126406;  // std dev = 6,333, 329,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=47 */
%   | | | else return -0.10836088641201717;  // std dev = 1,393, 62,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=2 */
%   | | else return -0.1455163056210864;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8005612409656744;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.33480781630813994;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return -0.02855268308495871;  // std dev = 4,731, 158,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.27617099706323517;  // std dev = 4,522, 82,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=39 */
%   | | | else return 0.02556124096567419;  // std dev = 4,574, 120,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=27 */
%   | | else return 0.16120381124676353;  // std dev = 0,480, 7.470,000 (wgt'ed) examples reached here.  /* #neg=4.776 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.21786184898910857;  // std dev = 0,483, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else return 0.00800085331884279;  // std dev = 0,324, 664,000 (wgt'ed) examples reached here.  /* #neg=560 #pos=104 */
%   | else return -0.027384822316098605;  // std dev = 0,313, 442,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.24343336085064582;  // std dev = 5,758, 144,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=69 */
%   | | | else return 0.8050809518584213;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07692708053920551;  // std dev = 0,319, 89,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | else return 0.12910892022817602;  // std dev = 0,479, 7.765,000 (wgt'ed) examples reached here.  /* #neg=5.005 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6778063134786587;  // std dev = 1,955, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.126228918871922;  // std dev = 1,018, 334,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=1 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.10961234128093254;  // std dev = 3,162, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.04623128579675696;  // std dev = 4,377, 237,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=21 */
%   | else return -0.019006597557440445;  // std dev = 0,319, 423,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10791903711189511;  // std dev = 0,478, 7.959,000 (wgt'ed) examples reached here.  /* #neg=5.112 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5470646905672273;  // std dev = 1,428, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   | | | else return -0.11284849257740037;  // std dev = 1,017, 314,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06198174140859219;  // std dev = 3,668, 167,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=17 */
%   | | | else return 0.022070333309575314;  // std dev = 4,017, 126,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.006559693359784966;  // std dev = 6,387, 367,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=47 */
%   | | | else return -0.09069255056299905;  // std dev = 1,393, 62,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=2 */
%   | | else return -0.12227259794749641;  // std dev = 0,017, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09124101614411072;  // std dev = 0,479, 7.865,000 (wgt'ed) examples reached here.  /* #neg=5.018 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.05334029923248867;  // std dev = 1,862, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.016336935580599076;  // std dev = 5,482, 503,000 (wgt'ed) examples reached here.  /* #neg=419 #pos=84 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.03772443041676794;  // std dev = 4,114, 122,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=21 */
%   | | | else return -0.13569922422976394;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.005199972287528995;  // std dev = 6,348, 337,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=47 */
%   | | | else return -0.08111009538485099;  // std dev = 1,393, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return -0.11018651051920415;  // std dev = 0,005, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0693263162822845;  // std dev = 0,478, 7.944,000 (wgt'ed) examples reached here.  /* #neg=5.097 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6282547244148913;  // std dev = 0,360, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13720075477253293;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03463610908764104;  // std dev = 1,695, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.10420852778584891;  // std dev = 0,035, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.02648516663043248;  // std dev = 5,528, 545,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=82 */
%   | | | else return 0.019717086930549774;  // std dev = 4,147, 133,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=21 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006962743339433173;  // std dev = 6,456, 388,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=48 */
%   | | | else return -0.09927505996644291;  // std dev = 0,014, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.5025251534493327;  // std dev = 0,218, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.19155907775449627;  // std dev = 4,203, 78,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return -0.08668739837016018;  // std dev = 4,351, 132,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=25 */
%   | else return 0.061035909908937445;  // std dev = 0,481, 7.576,000 (wgt'ed) examples reached here.  /* #neg=4.816 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordauthor(I, G) )
%   | | then return 0.1158297989322024;  // std dev = 0,449, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else return -0.009100003744592713;  // std dev = 0,254, 627,000 (wgt'ed) examples reached here.  /* #neg=523 #pos=104 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.009606687608516438;  // std dev = 6,388, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.06674844830100207;  // std dev = 1,389, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.09057993201635516;  // std dev = 0,013, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04987722229664257;  // std dev = 0,480, 7.769,000 (wgt'ed) examples reached here.  /* #neg=4.922 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return -0.05180942583418759;  // std dev = 0,525, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2119602114259139;  // std dev = 2,798, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.31805284282861157;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10450903468953307;  // std dev = 0,071, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1638487208788996;  // std dev = 0,805, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.007488208137081823;  // std dev = 1,701, 58,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.021516632626749608;  // std dev = 6,191, 627,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=88 */
%   | | | else return -0.009188697270244527;  // std dev = 6,345, 395,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=46 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.022736922011741226;  // std dev = 0,475, 7.456,000 (wgt'ed) examples reached here.  /* #neg=4.847 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7048090368848429;  // std dev = 3,100, 142,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=133 */
%   | | | else return -0.13725858748172784;  // std dev = 1,638, 546,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.15082360071025047;  // std dev = 4,713, 154,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=27 */
%   | | | else return -0.07932352441404376;  // std dev = 0,849, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3587271793648756;  // std dev = 4,886, 112,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=78 */
%   | | | else return 0.05086040933179385;  // std dev = 4,000, 190,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5715716702459894;  // std dev = 0,291, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return -1.3313291616497244E-4;  // std dev = 0,233, 259,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false,true;haswordtitle(F, D).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,false,true;haswordtitle(K, I).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,false,true;author(I, H), venue(I, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
2;true,true,false;author(F, E), venue(F, A).;false;false
2;true,true;haswordvenue(A, D).;false;true
2;false,true;haswordauthor(L, J).;false;false
2;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;haswordtitle(F, C).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordauthor(K, G).;false;false
3;true,true;haswordtitle(F, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;haswordvenue(A, F).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true;author(F, E), venue(F, B).;true;true
6;false,true,true;samebib(F, G), venue(G, A).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;true,true;haswordvenue(A, D).;false;true
7;false,true;haswordauthor(I, G).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;haswordtitle(F, D).;true;true
8;false,true,true;author(G, E), title(G, F).;false;false
8;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
8;false,true,false;author(H, E), venue(H, A).;false;false
8;false,false,true;author(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4735335504841285;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.40564015880039006;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3046841224201073;  // std dev = 4,795, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.11250664283613937;  // std dev = 0,002, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2715628595281386;  // std dev = 0,485, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10157896449116229;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10157896449116238;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1747761453614645;  // std dev = 4,795, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09267673642157566;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09267673642157549;  // std dev = 5,10e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10800565070537785;  // std dev = 4,932, 99,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08549931248930444;  // std dev = 0,028, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06446407121735674;  // std dev = 5,025, 102,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07874244122936222;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07874244122936223;  // std dev = 1,86e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.1581568901775365;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07358503742663917;  // std dev = 0,003, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14280740119038826;  // std dev = 4,214, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07441192359091373;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06837743809739943;  // std dev = 5,32e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5753298674280413;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06378681158595836;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4246701325719586;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06414812932629818;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5753298674280409;  // std dev = 9,42e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06414812932629817;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979497
   AUC PR    = 0.867039
   CLL	      = -0.200382
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.245 seconds
Total inference time: 3.256 seconds
AUC ROC: 0.979497


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.20906
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.487 seconds
Parameter learned model CLL: -0.20906


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.641, 35, 56], 'false,true,false,true': [0.0, 3, 0], 'false,true,false,false': [7.3e-08, 74, 0], 'false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 92, 0], 'true': [4.641, 35, 56], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [4.795, 39, 56], 'true,true,false': [0.0, 0, 0], 'false,true': [0.002, 69, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 60, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.485, 34, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.1e-09, 81, 0], 'true': [4.795, 39, 56], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.932, 43, 56], 'false,true,true': [0.028, 87, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [1.86e-09, 72, 0], 'true': [5.025, 46, 56], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [4.371, 29, 56], 'true,true,false': [0.0, 0, 0], 'false,true': [0.003, 87, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.32e-08, 93, 0], 'true': [4.214, 26, 56], 'false,true,true': [0.027, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 1, 0], 'true,false,false,false': [0.0, 80, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,true,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [9.42e-08, 25, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2366863905325441, 7.311224796312007e-17], 'false,true,false': [0.0, 7.201446646217232e-17], 'false,true': [-2.7755575615628915e-18, 7.209240419643874e-17], 'false': [7.311224796312007e-17, nan]}, {'': [0.23668639053254323, -9.55030558817339e-18], 'false,true': [0.0, -9.654113257610057e-18], 'false,true,true': [nan, 0.0], 'false': [-9.55030558817339e-18, nan]}, {'': [0.2419944598337943, 2.4616431255265647e-06], 'true': [0.2419944598337943, nan], 'true,true': [0.2419944598337943, nan], 'false': [2.4616431255265647e-06, nan]}, {'': [0.23506172839506168, -3.469446951953614e-18], 'true': [0.23506172839506168, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -3.7007434154171884e-18], 'false': [-3.469446951953614e-18, nan]}, {'': [0.24199445983379525, 2.9692011123696044e-17], 'false,true': [0.0, 2.6042268478861695e-17], 'false,true,true': [nan, 0.0], 'false': [2.9692011123696044e-17, nan]}, {'': [0.24568921538618438, 9.19032712963109e-06], 'false,true': [9.19032712963109e-06, nan], 'false': [9.19032712963109e-06, nan]}, {'': [0.24759707804690548, 2.921639538487254e-18], 'false,true': [0.0, 4.625929269271485e-18], 'false,true,true': [nan, 0.0], 'false': [2.921639538487254e-18, nan]}, {'': [0.22477508650519068, 1.1683160232273052e-05], 'true': [0.22477508650519068, nan], 'true,true': [0.22477508650519068, nan], 'false': [1.1683160232273052e-05, nan]}, {'': [0.21653777513384914, 9.194753414310315e-06], 'false,true': [0.0001456600606857296, 3.044159906230268e-17], 'false': [9.194753414310315e-06, nan]}, {'': [0.11181113549950757, nan], 'true,false,true': [-9.516197353929913e-17, 0.0], 'true': [0.04186820767684102, 0.1128644064912233], 'true,false': [0.014867582685836597, 0.04740258854761333], 'true,true,false': [nan, 0.0], 'true,false,false': [3.552713678800501e-16, -6.938893903907229e-19], 'true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false;genre(A, F).;true;true
0;false;genre(B, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 1,05e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.19777434675860708;  // std dev = 0,430, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09096286553702376;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08529707532702101;  // std dev = 0,000174, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.256087120353676;  // std dev = 0,436, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0851847513883968;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A), female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0763979867504638;  // std dev = 0,006, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07326022556886977;  // std dev = 4,43e-05, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07211936095345226;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06728404991341413;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.06857069893579022;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06875418299111126;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420267;  // std dev = 1,12e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06137944879887773;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080109;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06422737796865799;  // std dev = 0,000277, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06423925632617167;  // std dev = 0,000740, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074659
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.743 seconds
Total inference time: 2.986 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064152
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.455 seconds
Refined model CLL: -0.064152


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074659
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.93 seconds
Total inference time: 2.986 seconds
AUC ROC: 1.0
Total revision time: 6.93
Best scored revision CLL: -0.064152


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:18:56
{'AUC ROC': 1.0, 'F1': 0.847854, 'parameter': {'AUC ROC': 0.979497, 'F1': 0.900506, 'Precision': [1.0, 0.5], 'Learning time': 1.245, 'Inference time': 3.256, 'CLL': -0.200382, 'AUC PR': 0.867039, 'Recall': 0.819018}, 'Precision': [0.735892, 0.5], 'Learning time': 6.93, 'Inference time': 2.986, 'CLL': -0.074659, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false,true;haswordtitle(F, D).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,false,true;haswordtitle(K, I).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,false,true;author(I, H), venue(I, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
2;true,true,false;author(F, E), venue(F, A).;false;false
2;true,true;haswordvenue(A, D).;false;true
2;false,true;haswordauthor(L, J).;false;false
2;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;haswordtitle(F, C).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordauthor(K, G).;false;false
3;true,true;haswordtitle(F, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;haswordvenue(A, F).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true;author(F, E), venue(F, B).;true;true
6;false,true,true;samebib(F, G), venue(G, A).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;true,true;haswordvenue(A, D).;false;true
7;false,true;haswordauthor(I, G).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;haswordtitle(F, D).;true;true
8;false,true,true;author(G, E), title(G, F).;false;false
8;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
8;false,true,false;author(H, E), venue(H, A).;false;false
8;false,false,true;author(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5569441158224046;  // std dev = 4,180, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4427621538453161;  // std dev = 4,397, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32739994675013806;  // std dev = 4,586, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.11246388673669368;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2534310844254742;  // std dev = 0,481, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10158286650827612;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10158286650827623;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21373742739758858;  // std dev = 4,447, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09268000362599185;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09268000362599169;  // std dev = 6,18e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17584991868121289;  // std dev = 4,346, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08517518438327366;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23090445505547222;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.10531742212702691;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07876853965309429;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07876853965309422;  // std dev = 4,06e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.08341805338561394;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07323909917150996;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05562115023736456;  // std dev = 4,346, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842073977302075;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842073977302067;  // std dev = 3,65e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.631828307216603;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06418633619839616;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3681716927833966;  // std dev = 8,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06418633619839616;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.6318283072166031;  // std dev = 5,96e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06418633619839618;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973223
   AUC PR    = 0.851779
   CLL	      = -0.222603
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.218 seconds
Total inference time: 3.047 seconds
AUC ROC: 0.973223


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.219043
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.568 seconds
Parameter learned model CLL: -0.219043


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.18, 25, 58], 'false,true,false,true': [0.0, 5, 0], 'false,true,false,false': [7.88e-08, 85, 0], 'false,true,true': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 71, 0], 'true': [4.397, 29, 58], 'false,true,true,false': [0.0, 9, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [4.586, 33, 58], 'true,true,false': [0.0, 0, 0], 'false,true': [0.001, 89, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 71, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.481, 33, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.18e-09, 66, 0], 'true': [4.447, 30, 58], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.346, 28, 58], 'false,true,true': [0.0, 102, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [4.06e-09, 78, 0], 'true': [3.626, 17, 58], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [4.292, 27, 58], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 87, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [3.65e-08, 74, 0], 'true': [4.346, 28, 58], 'false,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 76, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [1.86e-09, 6, 0], 'true,false,true,true': [8.94e-08, 0, 58], 'true,true,false,false': [0.0, 7, 0], 'true,false,false,true': [5.96e-08, 27, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.21048047612135246, 7.91446116564468e-17], 'false,true,false': [-2.7755575615628915e-18, 7.314410515177502e-17], 'false,true': [-1.0092936587501423e-17, 7.401486830834377e-17], 'false': [7.91446116564468e-17, nan]}, {'': [0.22222222222222102, -1.9428902930940238e-17], 'false,true': [0.0, -2.5019110414088035e-17], 'false,true,true': [nan, 0.0], 'false': [-1.9428902930940238e-17, nan]}, {'': [0.2311315058567803, 1.9147717850302555e-06], 'true': [0.2311315058567803, nan], 'true,true': [0.2311315058567803, nan], 'false': [1.9147717850302555e-06, nan]}, {'': [0.23113150585678083, -1.7529837230923523e-17], 'true': [0.23113150585678083, nan], 'false,true,true': [nan, -1.3877787807814458e-18], 'false,true': [-1.3877787807814458e-18, -1.8764332810566026e-17], 'false': [-1.7529837230923523e-17, nan]}, {'': [0.22469008264462903, 4.065605442289306e-17], 'false,true': [0.0, 3.868959025208879e-17], 'false,true,true': [nan, 0.0], 'false': [4.065605442289306e-17, nan]}, {'': [0.21957815035154069, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.17528888888888866, 8.389771980043691e-06], 'false,true': [0.00011277490569834847, 1.6368672798960642e-17], 'false,true,true': [0.0, 0.0], 'false': [8.389771980043691e-06, nan]}, {'': [0.21674740484429056, -1.2761184191093753e-18], 'true': [0.21674740484429056, nan], 'true,true': [0.21674740484429056, nan], 'false': [-1.2761184191093753e-18, nan]}, {'': [0.21957815035154155, 2.178285681226573e-17], 'false,true': [-6.938893903907229e-19, 1.800361661554308e-17], 'false': [2.178285681226573e-17, nan]}, {'': [0.11229964087142665, nan], 'true,false,true': [1.3782078926381254e-16, 5.782411586589357e-19], 'true': [0.05569189755135911, 0.11360912547194266], 'true,false': [0.015882042455641593, 0.06232351019893135], 'true,true,false': [nan, 0.0], 'true,false,false': [1.3158198810372225e-16, -1.460819769243627e-18], 'true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false;genre(A, F).;true;true
0;false;genre(B, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, F).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(B, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839682;  // std dev = 3,48e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0851847513883968;  // std dev = 1,29e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839686;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11072908958790632;  // std dev = 0,731, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06607594981553487;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.0694660886723211;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06362545127881628;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.11542588593706998;  // std dev = 0,058, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06386582001277398;  // std dev = 0,000756, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0822
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.677 seconds
Total inference time: 3.292 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065697
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.797 seconds
Refined model CLL: -0.065697


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0822
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.26 seconds
Total inference time: 3.292 seconds
AUC ROC: 1.0
Total revision time: 7.26
Best scored revision CLL: -0.065697


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:19:11
{'AUC ROC': 1.0, 'F1': 0.848168, 'parameter': {'AUC ROC': 0.973223, 'F1': 0.89983, 'Precision': [1.0, 0.5], 'Learning time': 1.218, 'Inference time': 3.047, 'CLL': -0.222603, 'AUC PR': 0.851779, 'Recall': 0.817901}, 'Precision': [0.736364, 0.5], 'Learning time': 7.26, 'Inference time': 3.292, 'CLL': -0.0822, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false,true;haswordtitle(F, D).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,false,true;haswordtitle(K, I).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,false,true;author(I, H), venue(I, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
2;true,true,false;author(F, E), venue(F, A).;false;false
2;true,true;haswordvenue(A, D).;false;true
2;false,true;haswordauthor(L, J).;false;false
2;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;haswordtitle(F, C).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordauthor(K, G).;false;false
3;true,true;haswordtitle(F, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;haswordvenue(A, F).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true;author(F, E), venue(F, B).;true;true
6;false,true,true;samebib(F, G), venue(G, A).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;true,true;haswordvenue(A, D).;false;true
7;false,true;haswordauthor(I, G).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;haswordtitle(F, D).;true;true
8;false,true,true;author(G, E), title(G, F).;false;false
8;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
8;false,true,false;author(H, E), venue(H, A).;false;false
8;false,false,true;author(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5534614350995087;  // std dev = 7,364, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.14185106490048838;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.458692432263947;  // std dev = 7,524, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.12544463852839186;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3993686664954589;  // std dev = 7,160, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.11231637819360693;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3050794732134032;  // std dev = 0,454, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.10159632948783626;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20282975938274175;  // std dev = 7,524, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.09269127618926049;  // std dev = 5,27e-09, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16548999884267324;  // std dev = 7,364, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08518475138839678;  // std dev = 1,01e-07, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13559676138841764;  // std dev = 7,230, 252,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07877675473109144;  // std dev = 5,02e-09, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.10274188426305692;  // std dev = 7,230, 252,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333695;  // std dev = 5,89e-09, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08694959490868122;  // std dev = 7,124, 249,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 1,39e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.06842697784420261;  // std dev = 6,50e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6479887057674516;  // std dev = 6,66e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.35201129423254746;  // std dev = 3,32e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06419184008202614;  // std dev = 1,05e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1628401909159664;  // std dev = 5,023, 101,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.301084
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.813 seconds
Total inference time: 3.0 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.251124
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.688 seconds
Parameter learned model CLL: -0.251124


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [7.364, 78, 178], 'false,true,false,true': [5.37e-08, 51, 0], 'false,true,false,false': [0.0, 197, 0], 'false,true,true': [5.05e-08, 48, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 245, 0], 'true': [7.524, 83, 178], 'false,true,true,false': [0.0, 41, 0], 'false,true,true,true': [5.27e-09, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [7.16, 72, 178], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 268, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 37, 0], 'false,true,true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 229, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.454, 73, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.27e-09, 231, 0], 'true': [7.524, 83, 178], 'false,true,true,false': [0.0, 41, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [7.364, 78, 178], 'false,true,true': [1.01e-07, 287, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [5.02e-09, 212, 0], 'true': [7.23, 74, 178], 'false,true,true,false': [0.0, 45, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [7.23, 74, 178], 'true,true,false': [0.0, 0, 0], 'false,true': [5.89e-09, 290, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.5e-08, 221, 0], 'true': [7.124, 71, 178], 'false,true,true': [1.39e-08, 46, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [6.66e-08, 17, 0], 'true,false,false,false': [0.0, 187, 0], 'true,true,false,true': [1.86e-09, 6, 0], 'true,false,true,false': [1.05e-08, 37, 0], 'true,false,true,true': [3.32e-07, 0, 129], 'true,true,false,false': [0.0, 41, 0], 'true,false,false,true': [5.023, 52, 49], 'false': [0.0, 0, 0]}]]
[{'': [0.2118530273437555, 2.100421938480026e-17], 'false,true,false': [5.659960517696876e-17, -2.366972945901349e-16], 'false,true': [5.3198186596622086e-17, -1.360918546314708e-16], 'false': [2.100421938480026e-17, nan]}, {'': [0.21687878921331372, -7.908437983631252e-17], 'false,true': [-3.0708296425802203e-17, -6.525392471266227e-17], 'false,true,true': [4.625929269271485e-18, -2.4370749321040022e-17], 'false': [-7.908437983631252e-17, nan]}, {'': [0.20505600000000046, -1.0605115459105973e-16], 'true': [0.20505600000000046, nan], 'true,true': [0.20505600000000046, nan], 'false': [-1.0605115459105973e-16, nan]}, {'': [0.2062506944334198, -6.297992430600888e-17], 'true': [0.2062506944334198, nan], 'false,true,true': [-1.5419764230904951e-18, -9.00180830777154e-18], 'false,true': [7.240584943207542e-18, -7.950942185088457e-17], 'false': [-6.297992430600888e-17, nan]}, {'': [0.21687878921331114, 7.162729191130042e-17], 'false,true': [-1.850371707708594e-17, 2.6914497566670462e-17], 'false,true,true': [0.0, -1.4893235696191125e-17], 'false': [7.162729191130042e-17, nan]}, {'': [0.21185302734374845, 3.558903075453463e-17], 'false,true': [3.558903075453463e-17, nan], 'false': [3.558903075453463e-17, nan]}, {'': [0.20742000503905272, 1.0092936587501423e-17], 'false,true': [-1.0675221390626506e-17, 2.51371250858526e-17], 'false,true,true': [-9.912705577010326e-19, -1.4802973661668754e-17], 'false': [1.0092936587501423e-17, nan]}, {'': [0.2074200050390516, 3.522086836741876e-17], 'true': [0.2074200050390516, nan], 'true,true': [0.2074200050390516, nan], 'false': [3.522086836741876e-17, nan]}, {'': [0.20383542200932284, -2.6612087481651693e-17], 'false,true': [4.2236745502044e-18, 1.9089807663237986e-17], 'false': [-2.6612087481651693e-17, nan]}, {'': [0.10066561428983348, nan], 'true,false,true': [8.537528995567096e-16, 3.00060276925718e-18], 'true': [0.06648296033371995, 0.09767648464055045], 'true,false': [0.03000446940558766, 0.08981219792346508], 'true,true,false': [5.782411586589357e-19, -2.030895776753335e-18], 'true,false,false': [0.24977943338888342, -2.9685107610298302e-18], 'true,true': [2.612289469706251e-16, -2.9527208101732887e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false;genre(A, F).;true;true
0;false;genre(B, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, G).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(B, F).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(A, F).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( genre(B, D) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.14185106490048827;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839177;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360696;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783626;  // std dev = 3,23e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926075;  // std dev = 2,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.0926912761892609;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( actor(B) )
%   | | | then return -0.0926912761892609;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.09269127618926092;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,79e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.0851847513883968;  // std dev = 2,95e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.08518475138839675;  // std dev = 1,61e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.08518475138839679;  // std dev = 7,45e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839676;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(B, D) )
%   | then return -0.0787767547310917;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07877675473109147;  // std dev = 8,56e-08, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | | else return -0.07877675473109166;  // std dev = 2,89e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109164;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420265;  // std dev = 2,79e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(B) )
%   | | | then return -0.0684269778442027;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0684269778442027;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.0684269778442027;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.08983017342167748;  // std dev = 1,063, 166,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=129 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 1,49e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | | | else return 0.06031770651299716;  // std dev = 0,846, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.303 seconds
Total inference time: 2.698 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067312
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.661 seconds
Refined model CLL: -0.067312


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.465 seconds
Total inference time: 2.698 seconds
AUC ROC: 1.0
Total revision time: 9.465
Best scored revision CLL: -0.067312


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:19:27
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 0.993692, 'F1': 0.129114, 'Precision': [0.069012, 0.5], 'Learning time': 1.813, 'Inference time': 3.0, 'CLL': -0.301084, 'AUC PR': 0.961008, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 9.465, 'Inference time': 2.698, 'CLL': -0.064085, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false,true;haswordtitle(F, D).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,false,true;haswordtitle(K, I).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,false,true;author(I, H), venue(I, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
2;true,true,false;author(F, E), venue(F, A).;false;false
2;true,true;haswordvenue(A, D).;false;true
2;false,true;haswordauthor(L, J).;false;false
2;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;haswordtitle(F, C).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordauthor(K, G).;false;false
3;true,true;haswordtitle(F, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;haswordvenue(A, F).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true;author(F, E), venue(F, B).;true;true
6;false,true,true;samebib(F, G), venue(G, A).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;true,true;haswordvenue(A, D).;false;true
7;false,true;haswordauthor(I, G).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;haswordtitle(F, D).;true;true
8;false,true,true;author(G, E), title(G, F).;false;false
8;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
8;false,true,false;author(H, E), venue(H, A).;false;false
8;false,false,true;author(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3685081231824003;  // std dev = 4,324, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3970984252768112;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.11231637819360628;  // std dev = 5,74e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2050221927523024;  // std dev = 0,494, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1015963294878362;  // std dev = 5,74e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20409232504169608;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14514577072111093;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08518475138839679;  // std dev = 1,49e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17427133372400605;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109172;  // std dev = 3,36e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.09191921669586808;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06929974509638098;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420268;  // std dev = 2,24e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5904146984747334;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.40958530152526657;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5904146984747333;  // std dev = 9,42e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979741
   AUC PR    = 0.868436
   CLL	      = -0.205374
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.111 seconds
Total inference time: 3.018 seconds
AUC ROC: 0.979741


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.219194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.481 seconds
Parameter learned model CLL: -0.219194


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [3.956, 24, 45], 'false,true,false,true': [0.0, 4, 0], 'false,true,false,false': [6.32e-08, 63, 0], 'false,true,true': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 55, 0], 'true': [4.324, 32, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [3.784, 21, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [5.74e-09, 59, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [5.74e-09, 62, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.494, 33, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 67, 0], 'true': [4.108, 27, 45], 'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.155, 28, 45], 'false,true,true': [1.49e-08, 68, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [3.36e-09, 62, 0], 'true': [3.784, 21, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [4.009, 25, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 63, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.24e-08, 63, 0], 'true': [4.009, 25, 45], 'false,true,true': [2.63e-09, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 3, 0], 'true,false,false,false': [0.0, 51, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,true,true': [2.98e-08, 0, 45], 'true,true,false,false': [1.32e-09, 3, 0], 'true,false,false,true': [9.42e-08, 23, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2268431001890362, 7.401486830834377e-17], 'false,true,false': [0.0, 6.344131569286608e-17], 'false,true': [-1.0092936587501423e-17, 6.628197161941232e-17], 'false': [7.401486830834377e-17, nan]}, {'': [0.2428740091077763, -1.409807015397024e-17], 'false,true': [0.0, -3.633457171500512e-17], 'false,true,true': [0.0, 0.0], 'false': [-1.409807015397024e-17, nan]}, {'': [0.21694214876033102, 3.198947698072485e-17], 'true': [0.21694214876033102, nan], 'true,true': [0.21694214876033102, nan], 'false': [3.198947698072485e-17, nan]}, {'': [0.244082840236686, 3.7551661127027356e-17], 'true': [0.244082840236686, nan], 'false,true,true': [nan, -2.3129646346357427e-18], 'false,true': [-2.3129646346357427e-18, 3.40229636578677e-17], 'false': [3.7551661127027356e-17, nan]}, {'': [0.23437499999999975, -2.960594732333751e-18], 'false,true': [0.0, -4.9711478714559245e-18], 'false,true,true': [nan, 0.0], 'false': [-2.960594732333751e-18, nan]}, {'': [0.23644210921373576, 3.2653618371328133e-18], 'false,true': [3.2653618371328133e-18, nan], 'false': [3.2653618371328133e-18, nan]}, {'': [0.2169421487603306, 1.657049290485308e-17], 'false,true': [-6.938893903907229e-19, 1.1639434935586319e-17], 'false,true,true': [nan, -6.938893903907229e-19], 'false': [1.657049290485308e-17, nan]}, {'': [0.22959183673469374, -8.8112938462314e-19], 'true': [0.22959183673469374, nan], 'true,true': [0.22959183673469374, nan], 'false': [-8.8112938462314e-19, nan]}, {'': [0.2295918367346941, 1.1895246692412391e-17], 'false,true': [9.912705577010326e-19, 7.93016446160826e-18], 'false': [1.1895246692412391e-17, nan]}, {'': [0.13363141474867973, nan], 'true,false,true': [1.973729821555834e-17, 0.0], 'true': [0.06922762417374777, 0.13134948187747353], 'true,false': [0.0047735893648067, 0.05931629156742598], 'true,true,false': [nan, 5.782411586589357e-19], 'true,true': [0.0, 5.782411586589357e-19], 'true,false,false': [3.8616453030440226e-16, -2.7211348642773444e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false;genre(A, F).;true;true
0;false;genre(B, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048774;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10560820671283126;  // std dev = 0,014, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783626;  // std dev = 2,36e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.09235442978858831;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839679;  // std dev = 2,24e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08489879869377114;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 2,46e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.07853115685830693;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07303312854418097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.06824041745041248;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06406013777182153;  // std dev = 6,59e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10351489614800523;  // std dev = 0,258, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.12299598166967574;  // std dev = 0,272, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.972 seconds
Total inference time: 2.548 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.551 seconds
Refined model CLL: -0.065344


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.115 seconds
Total inference time: 2.548 seconds
AUC ROC: 1.0
Total revision time: 6.115
Best scored revision CLL: -0.065344


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:19:39
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 0.979741, 'F1': 0.904065, 'Precision': [1.0, 0.5], 'Learning time': 1.111, 'Inference time': 3.018, 'CLL': -0.205374, 'AUC PR': 0.868436, 'Recall': 0.824926}, 'Precision': [1.0, 0.5], 'Learning time': 6.115, 'Inference time': 2.548, 'CLL': -0.068052, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false,true;haswordtitle(F, D).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,false,true;haswordtitle(K, I).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,false,true;author(I, H), venue(I, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
2;true,true,false;author(F, E), venue(F, A).;false;false
2;true,true;haswordvenue(A, D).;false;true
2;false,true;haswordauthor(L, J).;false;false
2;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true,true,true;haswordtitle(F, C).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordauthor(K, G).;false;false
3;true,true;haswordtitle(F, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true;title(F, E), venue(F, A).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;haswordvenue(A, F).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true;author(F, E), venue(F, B).;true;true
6;false,true,true;samebib(F, G), venue(G, A).;false;false
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;true,true;haswordvenue(A, D).;false;true
7;false,true;haswordauthor(I, G).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;haswordtitle(F, D).;true;true
8;false,true,true;author(G, E), title(G, F).;false;false
8;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
8;false,true,false;author(H, E), venue(H, A).;false;false
8;false,false,true;author(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4919517520009212;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45882816491653317;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.31684186767836237;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.11251529122898178;  // std dev = 0,002, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2464759781011273;  // std dev = 0,486, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11361192823357048;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10157817523568342;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20479545502878044;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10266313123197661;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09267607556644296;  // std dev = 1,86e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1283736954512977;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08541567492027854;  // std dev = 0,012, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0578057244184269;  // std dev = 4,401, 79,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07874798647195042;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07922298882472727;  // std dev = 0,002, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.1355206871059441;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0737882816939279;  // std dev = 0,002, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08299728322876308;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06834064924404641;  // std dev = 5,86e-05, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5801990607113859;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0752248943381027;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4198009392886139;  // std dev = 7,88e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06414239271549559;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2576184155500956;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.06411388510739356;  // std dev = 3,87e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.238234
   Precision = 0.106309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192187


Total learning time: 1.161 seconds
Total inference time: 2.617 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.244897
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total scoring time: 1.298 seconds
Parameter learned model CLL: -0.244897


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.059, 26, 45], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [6.66e-08, 67, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 58, 0], 'true': [3.844, 22, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [4.155, 28, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [0.002, 66, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 55, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.486, 28, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [1.86e-09, 45, 0], 'true': [4.059, 26, 45], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.199, 29, 45], 'false,true,true': [0.012, 69, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.002, 66, 0], 'true': [4.401, 34, 45], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,true,true': [3.901, 23, 45], 'true,true,false': [0.0, 0, 0], 'false,true': [0.002, 49, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.86e-05, 64, 0], 'true': [4.009, 25, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 4, 0], 'true,false,false,false': [3.87e-08, 72, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,true,true': [7.88e-08, 0, 35], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,true': [2.603, 21, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.23209680618924847, 6.75787928032704e-17], 'false,true,false': [0.0, 6.628197161941232e-17], 'false,true': [0.0, 6.857259857978908e-17], 'false': [6.75787928032704e-17, nan]}, {'': [0.22053909556694254, -4.0197730201945323e-17], 'false,true': [nan, -4.0197730201945323e-17], 'false': [-4.0197730201945323e-17, nan]}, {'': [0.23644210921373537, 2.5718157167904443e-06], 'true': [0.23644210921373537, nan], 'true,true': [0.23644210921373537, nan], 'false': [2.5718157167904443e-06, nan]}, {'': [0.23644210921373582, 9.152101829089446e-06], 'true': [0.23644210921373582, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -1.413011122250199e-17], 'false': [9.152101829089446e-06, nan]}, {'': [0.2320968061892489, 2.1211520033047266e-06], 'false,true': [0.0, 2.4671622769447924e-18], 'false,true,true': [nan, 0.0], 'false': [2.1211520033047266e-06, nan]}, {'': [0.23831263696128577, 1.991584910189425e-06], 'false,true': [1.991584910189425e-06, nan], 'false': [1.991584910189425e-06, nan]}, {'': [0.24515302034930314, 3.2230223798222613e-06], 'false,true': [0.0, 3.4972221447525418e-06], 'false,true,true': [nan, 0.0], 'false': [3.2230223798222613e-06, nan]}, {'': [0.22383217993079582, 4.030116230303831e-06], 'true': [0.22383217993079582, nan], 'true,true': [0.22383217993079582, nan], 'false': [4.030116230303831e-06, nan]}, {'': [0.2295918367346941, 5.3613124356699515e-11], 'false,true': [nan, 5.3613124356699515e-11], 'false': [5.3613124356699515e-11, nan]}, {'': [0.11261652088901421, nan], 'true,false,true': [1.7763568394002506e-16, 0.0], 'true': [0.056666424156531635, 0.10766519236560172], 'true,false': [0.02155697620169221, 0.07364661616114615], 'true,true,false': [nan, 0.0], 'true,false,false': [0.21852237252861606, 2.0816681711721685e-17], 'true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,false;genre(A, F).;true;true
0;false;genre(B, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.30506575340243475;  // std dev = 0,539, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.0851847513883968;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A), female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07554325956288278;  // std dev = 0,018, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07331949132728337;  // std dev = 0,000254, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.05983252019623251;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.07324622576333702;  // std dev = 1,86e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0684223076985331;  // std dev = 5,89e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06460383564199192;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420271;  // std dev = 1,32e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.05686678178529214;  // std dev = 0,013, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.12357551052958815;  // std dev = 0,193, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06407614635957654;  // std dev = 0,011, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079035
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.679 seconds
Total inference time: 2.842 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066186
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.464 seconds
Refined model CLL: -0.066186


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079035
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.602 seconds
Total inference time: 2.842 seconds
AUC ROC: 1.0
Total revision time: 6.602
Best scored revision CLL: -0.066186


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:19:52
{'AUC ROC': 1.0, 'F1': 0.852086, 'parameter': {'AUC ROC': 0.983069, 'F1': 0.192187, 'Precision': [0.106309, 0.5], 'Learning time': 1.161, 'Inference time': 2.617, 'CLL': -0.238234, 'AUC PR': 0.891379, 'Recall': 1.0}, 'Precision': [0.742291, 0.5], 'Learning time': 6.602, 'Inference time': 2.842, 'CLL': -0.079035, 'AUC PR': 1.0, 'Recall': 1.0}


