Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31163730719253474;  // std dev = 4,617, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | | else return 0.06115645389650409;  // std dev = 4,639, 133,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1366299477577416;  // std dev = 6,901, 237,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=66 */
%   | | | else return 0.2176365251715648;  // std dev = 41,540, 7.494,000 (wgt'ed) examples reached here.  /* #neg=4.800 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, A) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(M, J) )
%   | | | then return 0.18423589162125148;  // std dev = 3,179, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.00503609463258376;  // std dev = 0,354, 1.028,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=151 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18600828733224578;  // std dev = 0,478, 7.990,000 (wgt'ed) examples reached here.  /* #neg=5.143 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8213070675426968;  // std dev = 1,702, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.14053394175913997;  // std dev = 1,011, 300,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.045705746975730405;  // std dev = 3,847, 164,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=17 */
%   | | | else return 0.009534788200753909;  // std dev = 4,014, 125,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.015317612808820677;  // std dev = 6,383, 370,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=47 */
%   | | | else return -0.1096783265533443;  // std dev = 1,391, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return -0.14156939215341136;  // std dev = 0,017, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16257059344376884;  // std dev = 0,480, 7.893,000 (wgt'ed) examples reached here.  /* #neg=5.046 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.08965747592524348;  // std dev = 0,905, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16063182738151477;  // std dev = 3,191, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.2842321476340726;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11872515593141096;  // std dev = 0,027, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.03803687832042355;  // std dev = 0,946, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10040753736420471;  // std dev = 2,934, 59,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.023601058711714733;  // std dev = 8,510, 740,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=88 */
%   | | | else return 0.025888285850874077;  // std dev = 5,294, 256,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=46 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13731133583604463;  // std dev = 0,480, 7.850,000 (wgt'ed) examples reached here.  /* #neg=5.003 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.04356728960465564;  // std dev = 1,247, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0777433888728622;  // std dev = 2,791, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.2838941856826186;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13688566696449642;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.01897646914507655;  // std dev = 8,453, 685,000 (wgt'ed) examples reached here.  /* #neg=602 #pos=83 */
%   | | | else return 0.017671348245430315;  // std dev = 3,579, 126,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=21 */
%   | | else return 0.016828903713451703;  // std dev = 0,325, 270,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=47 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10896800278182177;  // std dev = 0,479, 7.928,000 (wgt'ed) examples reached here.  /* #neg=5.081 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.739068879462123;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15534006173782122;  // std dev = 0,049, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06856620015473053;  // std dev = 2,767, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.12290527400682072;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07824671856107046;  // std dev = 3,288, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.0013109732189366076;  // std dev = 1,149, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.014487086487560434;  // std dev = 8,482, 713,000 (wgt'ed) examples reached here.  /* #neg=625 #pos=88 */
%   | | | else return 0.015289631998084164;  // std dev = 5,299, 263,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=46 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08038361712266634;  // std dev = 0,477, 8.101,000 (wgt'ed) examples reached here.  /* #neg=5.254 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.03604482610301281;  // std dev = 0,975, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.15492129581868305;  // std dev = 3,097, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.23624791358274658;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10665773119446223;  // std dev = 0,017, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.025941235433351518;  // std dev = 7,639, 612,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=66 */
%   | | | else return 0.037709311064282186;  // std dev = 4,637, 184,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023858985279074627;  // std dev = 5,318, 252,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=48 */
%   | | | else return -0.13255821724861241;  // std dev = 9,13e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5208057414024144;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15159767025190066;  // std dev = 4,594, 85,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=39 */
%   | | | else return -0.03887982968538231;  // std dev = 4,596, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.050669270926512106;  // std dev = 6,690, 205,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=66 */
%   | | | else return 0.07146717744383829;  // std dev = 41,554, 7.503,000 (wgt'ed) examples reached here.  /* #neg=4.809 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then if ( author(M, L), title(M, K) )
%   | | | then return 0.016214070725239695;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1534772162155459;  // std dev = 3,043, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else return 0.003968659786429887;  // std dev = 0,321, 650,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=104 */
%   | else return -0.024993714454094363;  // std dev = 0,304, 465,000 (wgt'ed) examples reached here.  /* #neg=416 #pos=49 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.05232174288697865;  // std dev = 0,477, 7.361,000 (wgt'ed) examples reached here.  /* #neg=4.752 #pos=2.609 */
%   | | else return 0.05492896015217962;  // std dev = 0,383, 632,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16605464144822946;  // std dev = 0,299, 295,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.45458572604331327;  // std dev = 4,264, 102,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=78 */
%   | | | else return 0.06742194417036637;  // std dev = 5,203, 197,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=49 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, G) )
%   | | | then return 0.08400957389798921;  // std dev = 1,249, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.11192237365460529;  // std dev = 6,447, 272,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=83 */
%   | | else return -0.17300978595012909;  // std dev = 0,138, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5729109982804115;  // std dev = 0,294, 36,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.032991810448138606;  // std dev = 0,475, 7.538,000 (wgt'ed) examples reached here.  /* #neg=4.929 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6933147624633508;  // std dev = 3,391, 144,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=131 */
%   | | | else return -0.14030133843743772;  // std dev = 1,682, 537,000 (wgt'ed) examples reached here.  /* #neg=534 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.12333758559797711;  // std dev = 0,315, 259,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=30 */
%   | | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | | then return 0.15598291798216216;  // std dev = 5,925, 188,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=87 */
%   | | | else return 0.09377056974466064;  // std dev = 4,323, 136,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.5092343195885042;  // std dev = 0,304, 77,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.015372742788292593;  // std dev = 0,340, 238,000 (wgt'ed) examples reached here.  /* #neg=189 #pos=49 */
%   | | else return -0.1816537050824986;  // std dev = 0,053, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.38833223981862586;  // std dev = 0,182, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.11500021401930509;  // std dev = 5,890, 146,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=61 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.35629478702998085;  // std dev = 0,227, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.24015947703515064;  // std dev = 2,169, 85,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=5 */
%   | else return 0.035490845841318765;  // std dev = 0,475, 7.711,000 (wgt'ed) examples reached here.  /* #neg=4.951 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.61526777417393;  // std dev = 1,970, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.15245759895281027;  // std dev = 1,024, 302,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=1 */
%   | | else return -0.03665099551461846;  // std dev = 0,275, 293,000 (wgt'ed) examples reached here.  /* #neg=257 #pos=36 */
%   | else return -0.019274390511697086;  // std dev = 0,281, 423,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,false;haswordtitle(M, J).;false;false
0;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
0;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
0;true,false,true;author(G, F), venue(G, B).;false;false
0;false,true;author(L, K), venue(L, A).;false;true
0;true;haswordauthor(D, C).;false;true
0;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(L, K), venue(L, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false,true;author(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
6;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
6;true,false,true;author(G, F), venue(G, B).;false;false
6;false,true;haswordauthor(L, J).;true;false
6;false,true,true;author(M, L), title(M, K).;false;false
6;true;haswordauthor(D, C).;false;true
6;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,true,true;haswordauthor(J, G).;false;false
7;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, J), haswordvenue(B, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,false;haswordauthor(H, C).;false;false
9;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,true,true;samebib(K, L), venue(L, B).;false;false
9;true,true;haswordtitle(F, D).;true;true
9;false,true;title(K, J), venue(K, A).;true;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;true,true,true;haswordauthor(G, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4122304846693737;  // std dev = 3,813, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32436028191075317;  // std dev = 3,714, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360625;  // std dev = 5,67e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24014611872402847;  // std dev = 3,690, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783616;  // std dev = 5,37e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24804155018890103;  // std dev = 3,233, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18323138694693772;  // std dev = 3,234, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839682;  // std dev = 4,21e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.38552581620301274;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.3696214256959097;  // std dev = 8,94e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07877675473109164;  // std dev = 5,02e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2990795991782578;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.2023021531695414;  // std dev = 0,236, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.28833943810701085;  // std dev = 2,11e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.22280567177835894;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, F) )
%   | | then return -0.1076487728849316;  // std dev = 0,230, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11474527318755869;  // std dev = 0,074, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.04119483708403657;  // std dev = 0,218, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.05479452179115325;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.061506290158623925;  // std dev = 0,003, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971455
   AUC PR    = 0.688786
   CLL	      = -0.126985
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.213 seconds
Total inference time: 2.329 seconds
AUC ROC: 0.971455


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.116768
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.527 seconds
Parameter learned model CLL: -0.116768


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [3.8e-08, 37, 0], 'false,true,false': [8.93e-09, 88, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.813, 32, 56], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 6, 0], 'false,true,false': [5.67e-08, 71, 0], 'true': [3.714, 34, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 4, 0], 'false,true,false': [5.37e-08, 71, 0], 'true': [3.69, 37, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.233, 26, 56], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.234, 27, 56], 'false,false': [0.0, 0, 0], 'false,true,false,false': [4.21e-08, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [8.94e-08, 33, 0], 'false,true': [5.02e-09, 83, 0], 'true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,true,false': [0.0, 5, 0], 'true,false,false,true': [2.11e-08, 24, 0], 'true,true,true': [0.0, 0, 56], 'true,false,true': [0.236, 5, 0], 'true,false,false,false': [0.0, 64, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 3, 0], 'true,true,true': [0.991, 1, 56], 'true,false,false': [0.074, 103, 0], 'true,false,true': [0.23, 8, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.003, 66, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.218, 33, 56], 'false,true,true,false': [0.0, 5, 0]}]]
[{'': [0.23956526766100097, 7.723290606088045e-17], 'false,true': [0.0, 7.569702440626067e-17], 'true': [0.23956526766100097, nan], 'false': [7.723290606088045e-17, nan], 'true,true': [-1.2688263138573217e-16, 3.900783600034334e-17]}, {'': [0.16519687891756196, -2.114710523095536e-17], 'false,true': [0.0, -2.140188963132832e-17], 'false,true,true': [nan, 0.0], 'false': [-2.114710523095536e-17, nan]}, {'': [0.1532521426355103, 5.190653102143589e-17], 'false,true': [0.0, 4.5347137625534564e-17], 'false': [5.190653102143589e-17, nan]}, {'': [0.1463786986678408, 4.2928623618839385e-17], 'false,true': [0.0, 4.065605442289306e-17], 'false': [4.2928623618839385e-17, nan]}, {'': [0.1274315879587297, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.12603036851829605, 2.550512353868603e-17], 'false,true,false': [nan, 2.4671622769447922e-17], 'false,true': [0.0, 2.4671622769447922e-17], 'false': [2.550512353868603e-17, nan]}, {'': [0.13304091852532185, 2.5414743937202377e-17], 'true': [0.13304091852532185, nan], 'false': [2.5414743937202377e-17, nan], 'true,true': [0.0, 2.4223047810003414e-16]}, {'': [0.04897966108411069, nan], 'true,false': [0.011103621599116997, 0.009176546776129694], 'true': [0.01043145003417434, 0.009532245389460441], 'true,false,false': [1.850371707708594e-17, -2.6020852139652106e-18], 'true,true': [-1.1102230246251565e-16, -6.938893903907229e-19]}, {'': [0.03445416334722448, nan], 'true,false': [0.006628177564312502, 0.005474429371726273], 'true,true,false': [nan, -5.782411586589357e-19], 'true': [0.02040305067564152, 0.0055609503761780065], 'true,true': [0.01723607263773481, -5.782411586589357e-19]}, {'': [0.04762457349574763, 3.0521182320582048e-06], 'false,true': [-3.4694469519536144e-19, 1.1095659062713181e-07], 'false,true,true': [nan, -3.4694469519536144e-19], 'true': [0.04762457349574763, nan], 'false': [3.0521182320582048e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,29e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202619;  // std dev = 1,86e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.995966
   AUC PR    = 0.793115
   CLL	      = -0.082252
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.562 seconds
Total inference time: 3.601 seconds
AUC ROC: 0.995966


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.065262
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.672 seconds
Refined model CLL: -0.065262


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995966
   AUC PR    = 0.793115
   CLL	      = -0.082252
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.973999999999999 seconds
Total inference time: 3.601 seconds
AUC ROC: 0.995966
Total revision time: 6.973999999999999
Best scored revision CLL: -0.065262


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:36:03
{'CLL': -0.082252, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.995966, 'parameter': {'CLL': -0.126985, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.971455, 'AUC PR': 0.688786, 'Recall': 0.819018, 'Inference time': 2.329, 'Learning time': 1.213, 'F1': 0.809091}, 'AUC PR': 0.793115, 'Recall': 1.0, 'Inference time': 3.601, 'Learning time': 6.973999999999999, 'F1': 0.847854}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,false;haswordtitle(M, J).;false;false
0;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
0;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
0;true,false,true;author(G, F), venue(G, B).;false;false
0;false,true;author(L, K), venue(L, A).;false;true
0;true;haswordauthor(D, C).;false;true
0;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(L, K), venue(L, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false,true;author(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
6;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
6;true,false,true;author(G, F), venue(G, B).;false;false
6;false,true;haswordauthor(L, J).;true;false
6;false,true,true;author(M, L), title(M, K).;false;false
6;true;haswordauthor(D, C).;false;true
6;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,true,true;haswordauthor(J, G).;false;false
7;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, J), haswordvenue(B, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,false;haswordauthor(H, C).;false;false
9;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,true,true;samebib(K, L), venue(L, B).;false;false
9;true,true;haswordtitle(F, D).;true;true
9;false,true;title(K, J), venue(K, A).;true;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;true,true,true;haswordauthor(G, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43783406196450536;  // std dev = 3,715, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3877257907520069;  // std dev = 3,318, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360624;  // std dev = 6,32e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2764735856159934;  // std dev = 3,371, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783616;  // std dev = 5,37e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2003990146845835;  // std dev = 3,387, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926108;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16461522288804853;  // std dev = 3,286, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839683;  // std dev = 3,80e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3716378973208416;  // std dev = 1,46e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.3834799777938134;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07877675473109165;  // std dev = 4,84e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.28970144101684714;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07487184762002926;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(A, E) )
%   | | then return -0.12935920038728668;  // std dev = 0,275, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.29769812425913567;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.233879050845521;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06832342569583348;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then return -0.1681567527409683;  // std dev = 0,253, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1127528595405791;  // std dev = 0,075, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.02965416961441311;  // std dev = 0,204, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.05544213183151503;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06165100970202967;  // std dev = 0,004, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970727
   AUC PR    = 0.688693
   CLL	      = -0.129775
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.224 seconds
Total inference time: 2.952 seconds
AUC ROC: 0.970727


Results scoring model
   AUC ROC   = 0.999416
   AUC PR    = 0.935484
   CLL	      = -0.114837
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.599 seconds
Parameter learned model CLL: -0.114837


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [4.08e-08, 39, 0], 'false,true,false': [8.33e-09, 83, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.715, 29, 58], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 100, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 5, 0], 'false,true,false': [6.32e-08, 77, 0], 'true': [3.318, 24, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 4, 0], 'false,true,false': [5.37e-08, 71, 0], 'true': [3.371, 28, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.387, 30, 58], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [2.63e-09, 7, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.286, 28, 58], 'false,false': [0.0, 0, 0], 'false,true,false,false': [3.8e-08, 63, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 39, 0], 'false,true': [4.84e-09, 79, 0], 'true,true,true': [1.46e-07, 0, 58], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,true,false': [0.015, 10, 0], 'true,false,false,true': [0.0, 29, 0], 'true,true,true': [5.96e-08, 0, 58], 'true,false,true': [0.275, 8, 0], 'true,false,false,false': [0.0, 65, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 6, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.075, 108, 0], 'true,false,true': [0.253, 6, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.004, 71, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.204, 38, 58], 'false,true,true,false': [0.0, 2, 0]}]]
[{'': [0.24040811988521593, 7.734137924355023e-17], 'false,true': [-6.938893903907228e-18, 7.490661370964911e-17], 'true': [0.24040811988521593, nan], 'false': [7.734137924355023e-17, nan], 'true,true': [-3.675221047035001e-16, 4.2700885562506023e-17]}, {'': [0.15864144721448412, -8.3790416952842e-18], 'false,true': [-2.3129646346357427e-18, -1.3322676295501878e-17], 'false,true,true': [nan, -2.3129646346357427e-18], 'false': [-8.3790416952842e-18, nan]}, {'': [0.13423058100870344, 5.415722071342227e-17], 'false,true': [0.0, 5.190653102143589e-17], 'false': [5.415722071342227e-17, nan]}, {'': [0.13213608813817335, 4.2928623618839385e-17], 'false,true': [0.0, 4.065605442289306e-17], 'false': [4.2928623618839385e-17, nan]}, {'': [0.13033246532962325, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.12556216770835874, 2.2204460492503132e-17], 'false,true,false': [nan, 2.2909364000201642e-17], 'false,true': [9.912705577010326e-19, 2.2909364000201642e-17], 'false': [2.2204460492503132e-17, nan]}, {'': [0.1370814324613216, 2.2485529612661398e-17], 'true': [0.1370814324613216, nan], 'false': [2.2485529612661398e-17, nan], 'true,true': [3.675221047035001e-16, -6.832141690000964e-17]}, {'': [0.04727524950766627, nan], 'true,false': [0.009445997763444049, 0.010747370323882297], 'true': [0.01667519658582415, 0.0106577680775806], 'true,false,false': [-1.5313421029312504e-17, -2.5620531337503614e-18], 'true,true': [6.125368411725002e-17, 2.3783817788599475e-05]}, {'': [0.030412692606450836, nan], 'true,false': [0.010654618900776236, 0.005613667966174718], 'true,true,false': [nan, -1.734723475976807e-18], 'true': [0.00775917119532446, 0.006032035591186098], 'true,true': [-7.656710514656253e-17, -1.734723475976807e-18]}, {'': [0.041542936887955094, 1.1963767252865422e-06], 'false,true': [0.0, 1.7390859013898894e-07], 'false,true,true': [nan, 0.0], 'true': [0.041542936887955094, nan], 'false': [1.1963767252865422e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 7,45e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 1,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.15135096385431993;  // std dev = 0,556, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.15602184586543094;  // std dev = 0,744, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839679;  // std dev = 1,49e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06987693897244998;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1645793615698468;  // std dev = 0,055, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.07227414818965307;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.07186650275552751;  // std dev = 0,023, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13102042264224945;  // std dev = 0,069, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.10848923070581135;  // std dev = 0,094, 47,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06851498029725493;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06120750467937744;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06851318639158077;  // std dev = 6,59e-06, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13654811945778406;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.14073329701925127;  // std dev = 1,86e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.05922481357079344;  // std dev = 0,011, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.15368417097017803;  // std dev = 0,230, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.06424507588898913;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06426958692657966;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.09559608091112144;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.075725
   Precision = 0.830769 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.907563


Total learning time: 2.577 seconds
Total inference time: 3.083 seconds
AUC ROC: 0.998889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065455
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.809 seconds
Refined model CLL: -0.065455


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.075725
   Precision = 0.830769 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.907563


Total learning time: 7.2090000000000005 seconds
Total inference time: 3.083 seconds
AUC ROC: 0.998889
Total revision time: 7.2090000000000005
Best scored revision CLL: -0.065455


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:36:17
{'CLL': -0.075725, 'Precision': [0.830769, 0.5], 'AUC ROC': 0.998889, 'parameter': {'CLL': -0.129775, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.970727, 'AUC PR': 0.688693, 'Recall': 0.817901, 'Inference time': 2.952, 'Learning time': 1.224, 'F1': 0.80916}, 'AUC PR': 0.966587, 'Recall': 1.0, 'Inference time': 3.083, 'Learning time': 7.2090000000000005, 'F1': 0.907563}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,false;haswordtitle(M, J).;false;false
0;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
0;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
0;true,false,true;author(G, F), venue(G, B).;false;false
0;false,true;author(L, K), venue(L, A).;false;true
0;true;haswordauthor(D, C).;false;true
0;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(L, K), venue(L, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false,true;author(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
6;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
6;true,false,true;author(G, F), venue(G, B).;false;false
6;false,true;haswordauthor(L, J).;true;false
6;false,true,true;author(M, L), title(M, K).;false;false
6;true;haswordauthor(D, C).;false;true
6;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,true,true;haswordauthor(J, G).;false;false
7;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, J), haswordvenue(B, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,false;haswordauthor(H, C).;false;false
9;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,true,true;samebib(K, L), venue(L, B).;false;false
9;true,true;haswordtitle(F, D).;true;true
9;false,true;title(K, J), venue(K, A).;true;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;true,true,true;haswordauthor(G, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7997547745155685;  // std dev = 2,745, 137,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=129 */
%   | | else return 0.27340317238764894;  // std dev = 5,353, 118,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.1418510649004884;  // std dev = 0,000, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4820491097292565;  // std dev = 6,802, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.12544463852839177;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3973229518156656;  // std dev = 6,579, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360626;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.11231637819360664;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27644236878130374;  // std dev = 6,899, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783619;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21166328717404273;  // std dev = 6,927, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.09269127618926054;  // std dev = 3,95e-09, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11185203482660569;  // std dev = 7,389, 281,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839686;  // std dev = 2,11e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839678;  // std dev = 8,43e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3747760164835387;  // std dev = 0,996, 130,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=129 */
%   | | else return -0.08981144700954626;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07877675473109143;  // std dev = 3,36e-09, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26854846006505895;  // std dev = 1,970, 133,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=129 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( genre(A, E) )
%   | | then return -0.16977189093687922;  // std dev = 1,320, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.06740994706257092;  // std dev = 5,430, 123,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=49 */
%   | | | else return -0.07324622576333664;  // std dev = 1,23e-07, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2228374388859178;  // std dev = 1,712, 132,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420262;  // std dev = 1,83e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(A, F) )
%   | | then return -0.14434163537423866;  // std dev = 1,101, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.047123867861611365;  // std dev = 0,305, 299,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.08773553282786642;  // std dev = 0,369, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.06419184008202622;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.054579331161281844;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06517414327508951;  // std dev = 0,009, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993054
   AUC PR    = 0.901018
   CLL	      = -0.215747
   Precision = 0.937198 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.944039


Total learning time: 1.584 seconds
Total inference time: 2.834 seconds
AUC ROC: 0.993054


Results scoring model
   AUC ROC   = 0.966161
   AUC PR    = 0.596149
   CLL	      = -0.207102
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total scoring time: 2.173 seconds
Parameter learned model CLL: -0.207102


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [5.353, 69, 49], 'false,true,false': [0.0, 200, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [4.71e-08, 45, 0], 'true,true,true': [2.745, 8, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 32, 0], 'false,true,true,true': [5.27e-09, 7, 0], 'true': [6.802, 73, 178], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [5.16e-08, 66, 0], 'false,true,false': [0.0, 206, 0], 'true': [6.579, 70, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 50, 0], 'false,true,false': [0.0, 228, 0], 'true': [6.899, 82, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 37, 0], 'false,true,true,true': [1.86e-09, 3, 0], 'true': [6.927, 79, 178], 'false,false': [0.0, 0, 0], 'false,true,false': [3.95e-09, 193, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [2.11e-08, 41, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [7.389, 103, 178], 'false,false': [0.0, 0, 0], 'false,true,false,false': [8.43e-08, 223, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [5.43, 74, 49], 'false,true': [3.36e-09, 266, 0], 'true,true,true': [0.996, 1, 129], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,true,false': [0.0, 45, 0], 'true,false,false,true': [5.43, 74, 49], 'true,true,true': [1.97, 4, 129], 'true,false,true': [1.32, 61, 0], 'true,false,false,false': [1.23e-07, 206, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)'}, {'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [1.83e-08, 46, 0], 'true,true,true': [1.712, 3, 129], 'true,false,false': [0.305, 250, 49], 'true,false,true': [1.101, 53, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.009, 238, 0], 'false,true,true,true': [1.86e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.369, 72, 178], 'false,true,true,false': [0.0, 43, 0]}]]
[{'': [0.21078046905037076, -1.4863393962328627e-16], 'false,true': [4.9343245538895844e-17, -2.3980817331903383e-16], 'true': [0.21078046905037076, nan], 'false': [-1.4863393962328627e-16, nan], 'true,true': [0.054984282593642964, 0.24281815570238463]}, {'': [0.1843218713387606, -8.410780489584519e-17], 'false,true': [-2.2773805633336544e-17, -6.513308411134252e-17], 'false,true,true': [3.96508223080413e-18, -1.0408340855860843e-17], 'false': [-8.410780489584519e-17, nan]}, {'': [0.17454822082880309, -1.0938962154394925e-16], 'false,true': [4.0371746350005693e-17, -5.1738548720395646e-17], 'false': [-1.0938962154394925e-16, nan]}, {'': [0.1830589483168133, -6.070284163418123e-17], 'false,true': [-4.440892098500626e-18, -7.985814738531828e-17], 'false': [-6.070284163418123e-17, nan]}, {'': [0.18668883406260434, 3.0495396384553656e-17], 'false,true': [-1.6653345369377347e-17, 1.495637235246325e-17], 'false,true,true': [1.1564823173178713e-18, -1.800361661554308e-17], 'false': [3.0495396384553656e-17, nan]}, {'': [0.19428199146370598, 3.448420000729653e-17], 'false,true,false': [nan, 3.1862902948883416e-17], 'false,true': [1.0831444142684454e-17, 3.1862902948883416e-17], 'false': [3.448420000729653e-17, nan]}, {'': [0.17436168873717328, 1.1686558153949016e-17], 'true': [0.17436168873717328, nan], 'false': [1.1686558153949016e-17, nan], 'true,true': [0.007633136094674242, 0.23967215281908907]}, {'': [0.08513153325014841, nan], 'true,true': [0.029170671038498734, -8.018277400070574e-18], 'true': [0.043863645866042425, 0.08135028502096939], 'true,false,false': [0.23967215281908963, 7.329627735389383e-17], 'true,false': [0.028572759047397176, 0.08961184832792801]}, {'': [0.0751114510473606, nan], 'true,true,false': [0.0, 7.240584943207542e-18], 'true,true': [0.022210743801652735, 8.074349270001138e-18], 'true': [0.033290966653029164, 0.083598682641259], 'true,false': [0.022871346581262914, 0.09293999573456299]}, {'': [0.13640693883324906, 1.4504731885763346e-05], 'false,true': [9.92889819235811e-06, 3.038696966898319e-07], 'false,true,true': [5.782411586589357e-19, -6.454785026890445e-19], 'true': [0.13640693883324906, nan], 'false': [1.4504731885763346e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;true,false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, G).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.14185106490048846;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.12544463852839183;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.11231637819360672;  // std dev = 0,000, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.10159632948783655;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926082;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926089;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.09269127618926094;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839679;  // std dev = 2,63e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 2,63e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.08518475138839676;  // std dev = 3,16e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 4,66e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109164;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.07877675473109161;  // std dev = 2,79e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.11964079071051355;  // std dev = 0,822, 61,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | | | else return 0.13838370545013076;  // std dev = 0,891, 97,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.07819566870483725;  // std dev = 1,101, 81,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=49 */
%   | | | else return -0.07324622576333671;  // std dev = 1,12e-07, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.09327933678741958;  // std dev = 0,874, 65,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | | | else return 0.12054813277907503;  // std dev = 0,858, 97,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.06842697784420271;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420293;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1659869550705846;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.07873459507054785;  // std dev = 1,97e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.0684269778442027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14632364084825544;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1425939758293822;  // std dev = 0,000488, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.06419184008202618;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08567788290126024;  // std dev = 0,034, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08243159058621212;  // std dev = 0,056, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064817
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.86 seconds
Total inference time: 3.197 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068764
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.25 seconds
Refined model CLL: -0.068764


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064817
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.867 seconds
Total inference time: 3.197 seconds
AUC ROC: 1.0
Total revision time: 9.867
Best scored revision CLL: -0.068764


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:36:34
{'CLL': -0.064817, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.215747, 'Precision': [0.937198, 0.5], 'AUC ROC': 0.993054, 'AUC PR': 0.901018, 'Recall': 0.95098, 'Inference time': 2.834, 'Learning time': 1.584, 'F1': 0.944039}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.197, 'Learning time': 9.867, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,false;haswordtitle(M, J).;false;false
0;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
0;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
0;true,false,true;author(G, F), venue(G, B).;false;false
0;false,true;author(L, K), venue(L, A).;false;true
0;true;haswordauthor(D, C).;false;true
0;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(L, K), venue(L, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false,true;author(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
6;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
6;true,false,true;author(G, F), venue(G, B).;false;false
6;false,true;haswordauthor(L, J).;true;false
6;false,true,true;author(M, L), title(M, K).;false;false
6;true;haswordauthor(D, C).;false;true
6;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,true,true;haswordauthor(J, G).;false;false
7;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, J), haswordvenue(B, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,false;haswordauthor(H, C).;false;false
9;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,true,true;samebib(K, L), venue(L, B).;false;false
9;true,true;haswordtitle(F, D).;true;true
9;false,true;title(K, J), venue(K, A).;true;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;true,true,true;haswordauthor(G, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048766;  // std dev = 7,90e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3815061919152159;  // std dev = 3,585, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3060847746607585;  // std dev = 3,471, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32162836358683744;  // std dev = 2,922, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.10159632948783628;  // std dev = 1,83e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24760879340574513;  // std dev = 2,849, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2056027852901856;  // std dev = 2,715, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08612306698850489;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839679;  // std dev = 1,05e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3727166567755043;  // std dev = 7,30e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.3823890562829829;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07888982086497821;  // std dev = 0,000910, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2904300141429825;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07539747330724789;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, E) )
%   | | then return -0.10514440289105484;  // std dev = 0,207, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2969614879969943;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07323855106698364;  // std dev = 1,58e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.212643690179868;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07435645220733923;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06828278076140076;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then return -0.11863921983807668;  // std dev = 0,256, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11838574172837178;  // std dev = 0,078, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.029258727046316265;  // std dev = 0,225, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.06939789766532219;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.059373608673062295;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06149620237602975;  // std dev = 0,006, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972658
   AUC PR    = 0.697907
   CLL	      = -0.126691
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.14 seconds
Total inference time: 2.676 seconds
AUC ROC: 0.972658


Results scoring model
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.122105
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.371 seconds
Parameter learned model CLL: -0.122105


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [2.11e-08, 26, 0], 'false,true,false': [7.9e-09, 54, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'true,true,true': [2.23e-07, 0, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [3.585, 30, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 60, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 5, 0], 'false,true,false': [3.8e-08, 55, 0], 'true': [3.471, 31, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [3.73e-09, 10, 0], 'false,true,false': [1.83e-08, 47, 0], 'true': [2.922, 20, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [2.849, 20, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 59, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.007, 8, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [2.715, 18, 45], 'false,false': [0.0, 0, 0], 'false,true,false,false': [1.05e-08, 60, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 32, 0], 'false,true': [0.00091, 57, 0], 'true,true,true': [7.3e-08, 0, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,true,false': [0.005, 3, 0], 'true,false,false,true': [0.0, 21, 0], 'true,true,true': [2.11e-08, 0, 45], 'true,false,true': [0.207, 7, 0], 'true,false,false,false': [1.58e-08, 39, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 5, 0], 'true,true,true': [0.989, 1, 45], 'true,false,false': [0.078, 58, 0], 'true,false,true': [0.256, 8, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.006, 57, 0], 'false,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.225, 28, 45], 'false,true,true,false': [2.63e-09, 8, 0]}]]
[{'': [0.23209680618924847, 6.39789539614497e-17], 'false,true': [-2.7755575615628915e-18, 5.756711979537848e-17], 'true': [0.23209680618924847, nan], 'false': [6.39789539614497e-17, nan], 'true,true': [1.105288700071267e-15, 1.708035422500241e-17]}, {'': [0.17133276299164268, -3.0744637605004337e-17], 'false,true': [0.0, -4.070817756958907e-17], 'false,true,true': [0.0, 0.0], 'false': [-3.0744637605004337e-17, nan]}, {'': [0.15850972615587736, 3.3306690738754695e-17], 'false,true': [0.0, 2.62416351275037e-17], 'false': [3.3306690738754695e-17, nan]}, {'': [0.13132986072282438, 2.1425356615573195e-17], 'false,true': [1.3877787807814458e-18, 7.086529944415892e-18], 'false': [2.1425356615573195e-17, nan]}, {'': [0.12484439316136464, -1.9884591485823698e-17], 'false,true': [0.0, -2.069907334046902e-17], 'false,true,true': [nan, 0.0], 'false': [-1.9884591485823698e-17, nan]}, {'': [0.11696160477441045, 8.164598350490117e-07], 'false,true,false': [nan, 1.8503717077085942e-18], 'false,true': [6.16305315784358e-06, 1.8503717077085942e-18], 'false': [8.164598350490117e-07, nan]}, {'': [0.13848302893687578, 8.281990672436719e-07], 'true': [0.13848302893687578, nan], 'false': [8.281990672436719e-07, nan], 'true,true': [1.1842378929335003e-16, -8.326672684688674e-17]}, {'': [0.0514365255892401, nan], 'true,true': [9.86864910777917e-18, 9.321890479015391e-06], 'true': [0.007842169565858962, 0.01103925028907066], 'true,false,false': [-6.344131569286608e-17, 6.4051328343759035e-18], 'true,false': [0.006132299023089867, 0.011386819195704076]}, {'': [0.03734780332241359, nan], 'true,false': [0.008200526617501236, 0.006021089643091249], 'true,true,false': [0.0, 0.0], 'true': [0.02692686919444411, 0.006285270665823807], 'true,true': [0.021266540642722164, 5.123539560167774e-06]}, {'': [0.05045748759858752, 2.0209983181107223e-06], 'false,true': [9.924579733366912e-06, 6.342946669899702e-07], 'false,true,true': [0.0, 8.673617379884035e-19], 'true': [0.05045748759858752, nan], 'false': [2.0209983181107223e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;true,false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(B, G).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1340603023762055;  // std dev = 0,036, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11146024926161192;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11153159333927813;  // std dev = 0,000237, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10162499079052614;  // std dev = 7,85e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.10088569983490817;  // std dev = 1,22e-05, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10088811080021252;  // std dev = 5,28e-06, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09274168153643281;  // std dev = 2,64e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.09210016562510971;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09209418184310275;  // std dev = 1,92e-07, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08523976291700669;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08467837155634249;  // std dev = 1,64e-06, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.07881449592928925;  // std dev = 5,20e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.07834593601581182;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07834120501404122;  // std dev = 1,68e-07, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1385822325901059;  // std dev = 0,090, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.1395450892189853;  // std dev = 0,089, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.07292966382994695;  // std dev = 0,000723, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12071462170186345;  // std dev = 0,087, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.12152187799590601;  // std dev = 0,086, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return -0.06846957105827024;  // std dev = 5,78e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06808924592388693;  // std dev = 1,65e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06809126494560123;  // std dev = 1,98e-05, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06394659525298596;  // std dev = 0,000276, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.0642451399245726;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06389526498854524;  // std dev = 1,85e-05, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.14224370039540943;  // std dev = 9,28e-05, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.09298852831856519;  // std dev = 0,000149, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999064
   AUC PR    = 0.968999
   CLL	      = -0.076374
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 2.448 seconds
Total inference time: 3.4 seconds
AUC ROC: 0.999064


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0685
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.399 seconds
Refined model CLL: -0.0685


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999064
   AUC PR    = 0.968999
   CLL	      = -0.076374
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 6.358 seconds
Total inference time: 3.4 seconds
AUC ROC: 0.999064
Total revision time: 6.358
Best scored revision CLL: -0.0685


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:36:47
{'CLL': -0.076374, 'Precision': [0.836228, 0.5], 'AUC ROC': 0.999064, 'parameter': {'CLL': -0.126691, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.972658, 'AUC PR': 0.697907, 'Recall': 0.824926, 'Inference time': 2.676, 'Learning time': 1.14, 'F1': 0.816446}, 'AUC PR': 0.968999, 'Recall': 1.0, 'Inference time': 3.4, 'Learning time': 6.358, 'F1': 0.910811}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,false;haswordtitle(M, J).;false;false
0;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
0;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
0;true,false,true;author(G, F), venue(G, B).;false;false
0;false,true;author(L, K), venue(L, A).;false;true
0;true;haswordauthor(D, C).;false;true
0;false;haswordvenue(B, J), haswordauthor(K, J).;true;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
1;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(L, K), venue(L, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false,true;author(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, B).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;author(H, E), venue(H, A).;false;false
5;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,true,true;author(G, E), venue(G, A).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false,false,true;title(K, J), venue(K, A).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;true
6;true,false,false;haswordvenue(B, H), haswordauthor(I, H).;false;false
6;true,false,true;author(G, F), venue(G, B).;false;false
6;false,true;haswordauthor(L, J).;true;false
6;false,true,true;author(M, L), title(M, K).;false;false
6;true;haswordauthor(D, C).;false;true
6;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,true,true;haswordauthor(J, G).;false;false
7;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false;haswordvenue(A, J), haswordvenue(B, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true,true,false;haswordauthor(H, C).;false;false
9;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,true,true;samebib(K, L), venue(L, B).;false;false
9;true,true;haswordtitle(F, D).;true;true
9;false,true;title(K, J), venue(K, A).;true;false
9;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
9;true,true,true;haswordauthor(G, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.10814893509951236;  // std dev = 2,739, 40,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37900966287696586;  // std dev = 3,883, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48481722425164225;  // std dev = 2,749, 57,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18124412492013955;  // std dev = 3,860, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783615;  // std dev = 5,67e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2161057842726118;  // std dev = 3,434, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11285294927194887;  // std dev = 3,703, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08529198745698056;  // std dev = 0,007, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3936062029171781;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.14342902282124198;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07915221478613252;  // std dev = 0,002, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.30453707132376145;  // std dev = 4,21e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.0797570469836461;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, E) )
%   | | then return -0.0732207431615269;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.11641897962946542;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.07321346651221522;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24410169015672872;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0740959552340638;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, F) )
%   | | then return -0.36947468347266355;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.046633375047901104;  // std dev = 0,277, 85,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.08349005227365286;  // std dev = 0,341, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06567251485572338;  // std dev = 0,007, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979868
   AUC PR    = 0.72527
   CLL	      = -0.175396
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.118 seconds
Total inference time: 3.252 seconds
AUC ROC: 0.979868


Results scoring model
   AUC ROC   = 0.971189
   AUC PR    = 0.781021
   CLL	      = -0.174927
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.473 seconds
Parameter learned model CLL: -0.174927


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [2.739, 30, 10], 'false,true,false': [8.12e-09, 62, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,true': [2.38e-07, 0, 35]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.883, 31, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [2.63e-09, 3, 0], 'false,true,false': [2.98e-08, 50, 0], 'true': [2.749, 12, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [5.67e-08, 80, 0], 'true': [3.86, 35, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)', 'false,true,true': 'genre(A, F)'}, {'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.434, 24, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 73, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.703, 31, 45], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.007, 70, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [2.687, 26, 10], 'false,true': [0.002, 73, 0], 'true,true,true': [0.0, 0, 35], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,true,false': [1.86e-09, 3, 0], 'true,false,false,true': [2.701, 27, 10], 'true,true,true': [4.21e-08, 0, 35], 'true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 80, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 35], 'true,false,false': [0.277, 75, 10], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,true,true': [0.0, 0, 0], 'false,true,false': [0.007, 79, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true': [0.341, 23, 45]}]]
[{'': [0.2400000000000003, 6.832141690000964e-17], 'false,true': [0.0, 6.446456272017038e-17], 'true': [0.2400000000000003, nan], 'false': [6.832141690000964e-17, nan], 'true,true': [1.6240976817373718e-15, 0.18750000000000014]}, {'': [0.19843883243391636, -3.8163916471489756e-17], 'false,true': [0.0, -4.118569284899774e-17], 'false,true,true': [nan, 0.0], 'false': [-3.8163916471489756e-17, nan]}, {'': [0.13259174638343746, 2.3042364662031552e-17], 'false,true': [2.3129646346357427e-18, 1.7763568394002505e-17], 'false': [2.3042364662031552e-17, nan]}, {'': [0.186211227763229, 4.0245584642661923e-17], 'false,true': [nan, 4.0245584642661923e-17], 'false': [4.0245584642661923e-17, nan]}, {'': [0.17088312122959523, 3.0066991621987386e-06], 'false,true': [-1.1564823173178713e-18, 0.0], 'false,true,true': [nan, -1.1564823173178713e-18], 'false': [3.0066991621987386e-06, nan]}, {'': [0.1804612179376082, 7.824546758654565e-07], 'false,true,false': [nan, 7.934706339704104e-07], 'false,true': [0.0, 7.934706339704104e-07], 'false': [7.824546758654565e-07, nan]}, {'': [0.1738088451139676, 2.533582999854782e-06], 'true': [0.1738088451139676, nan], 'false': [2.533582999854782e-06, nan], 'true,true': [-1.2688263138573217e-16, 0.20061728395061706]}, {'': [0.07326954997135918, nan], 'true,true': [5.075305255429287e-17, 1.1564823173178713e-18], 'true': [0.010738647356921854, 0.06172176748170243], 'true,false,false': [0.1972242512783052, -1.6653345369377347e-17], 'true,false': [0.0, 0.06277370620355104]}, {'': [0.07053448481348841, nan], 'true,true,false': [nan, 0.0], 'true,true': [-6.344131569286608e-17, 0.0], 'true': [0.00931950283662994, 0.07690180357298096], 'true,false': [0.0, 0.0765945945061022]}, {'': [0.116389522609208, 6.524861440804079e-07], 'false,true': [nan, 6.524861440804079e-07], 'true': [0.116389522609208, nan], 'false': [6.524861440804079e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3207118471601494;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0876869263220182;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.1571261366851672;  // std dev = 0,223, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0841795060127011;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.12169187721372243;  // std dev = 0,222, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return 0.1354618420158834;  // std dev = 0,323, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.16725547454146028;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 1,83e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.0684269778442027;  // std dev = 1,05e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1582101727214363;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.08239031116313505;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.13511654526600922;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.14396822172936016;  // std dev = 0,003, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08303353515039413;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.995751
   AUC PR    = 0.826023
   CLL	      = -0.08615
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.992 seconds
Total inference time: 3.342 seconds
AUC ROC: 0.995751


Results scoring model
   AUC ROC   = 0.999528
   AUC PR    = 0.971864
   CLL	      = -0.06788
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.444 seconds
Refined model CLL: -0.06788


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995751
   AUC PR    = 0.826023
   CLL	      = -0.08615
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 7.027 seconds
Total inference time: 3.342 seconds
AUC ROC: 0.995751
Total revision time: 7.027
Best scored revision CLL: -0.06788


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:37:02
{'CLL': -0.08615, 'Precision': [0.742291, 0.5], 'AUC ROC': 0.995751, 'parameter': {'CLL': -0.175396, 'Precision': [0.808989, 0.5], 'AUC ROC': 0.979868, 'AUC PR': 0.72527, 'Recall': 0.854599, 'Inference time': 3.252, 'Learning time': 1.118, 'F1': 0.831169}, 'AUC PR': 0.826023, 'Recall': 1.0, 'Inference time': 3.342, 'Learning time': 7.027, 'F1': 0.852086}


