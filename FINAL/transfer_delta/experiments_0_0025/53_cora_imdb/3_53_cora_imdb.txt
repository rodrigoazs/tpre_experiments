Starting experiment #3 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22221543126319;  // std dev = 0,481, 7.820,000 (wgt'ed) examples reached here.  /* #neg=4.973 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7812258581764349;  // std dev = 2,542, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.13859373591025984;  // std dev = 0,998, 307,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14116780302404067;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.06260578188161985;  // std dev = 4,397, 265,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.007947930997354037;  // std dev = 6,380, 351,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=47 */
%   | | | else return -0.08921948595311933;  // std dev = 1,376, 38,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1887236948272666;  // std dev = 0,480, 7.912,000 (wgt'ed) examples reached here.  /* #neg=5.065 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7114779344312369;  // std dev = 1,398, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   | | | else return -0.12285257819381501;  // std dev = 0,999, 339,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.18891838640405934;  // std dev = 3,125, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.054854161325564144;  // std dev = 4,397, 264,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2591136802294068;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14088631977059324;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.029622455248946064;  // std dev = 6,461, 428,000 (wgt'ed) examples reached here.  /* #neg=381 #pos=47 */
%   | | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16205792311535144;  // std dev = 0,480, 7.873,000 (wgt'ed) examples reached here.  /* #neg=5.026 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.08399226377205135;  // std dev = 0,824, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13692012490294175;  // std dev = 3,176, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.34033374963887003;  // std dev = 0,970, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12377440133909273;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03873587162520462;  // std dev = 5,652, 369,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=83 */
%   | | | else return -0.05150274771362812;  // std dev = 4,403, 274,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03186750838379717;  // std dev = 6,482, 452,000 (wgt'ed) examples reached here.  /* #neg=405 #pos=47 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13536913381374036;  // std dev = 0,481, 7.863,000 (wgt'ed) examples reached here.  /* #neg=5.016 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.30084190361026586;  // std dev = 0,624, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07599398592461744;  // std dev = 3,255, 55,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.020438398829853533;  // std dev = 5,673, 405,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=83 */
%   | | | else return -0.037822928327071674;  // std dev = 4,384, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0069498882449806855;  // std dev = 6,383, 369,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=47 */
%   | | | else return -0.08601448207427492;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.10114087722847087;  // std dev = 0,004, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10438640655321561;  // std dev = 0,479, 8.004,000 (wgt'ed) examples reached here.  /* #neg=5.157 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6922833105966602;  // std dev = 0,269, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11877567276663385;  // std dev = 0,000517, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05055058652331572;  // std dev = 2,270, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return -0.12706992008788243;  // std dev = 0,037, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.009747153183870502;  // std dev = 8,245, 569,000 (wgt'ed) examples reached here.  /* #neg=486 #pos=83 */
%   | | | else return -0.03322637815046483;  // std dev = 3,086, 176,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.012375037575902319;  // std dev = 4,426, 297,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=47 */
%   | | | else return -0.0927295866499893;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08344291932948249;  // std dev = 0,478, 8.022,000 (wgt'ed) examples reached here.  /* #neg=5.175 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return 0.02016869383755079;  // std dev = 5,668, 417,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=85 */
%   | | | else return -0.04057608819844761;  // std dev = 3,368, 134,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=15 */
%   | | else return 0.04651357000306411;  // std dev = 0,369, 125,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.061329965318011284;  // std dev = 0,788, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.12248375887900806;  // std dev = 0,064, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.016339001134973625;  // std dev = 6,481, 417,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=48 */
%   | | | else return -0.08521726416902986;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06957383607423574;  // std dev = 0,479, 7.956,000 (wgt'ed) examples reached here.  /* #neg=5.109 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.029578096351045753;  // std dev = 0,739, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18597448317073081;  // std dev = 2,961, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.007258184886054304;  // std dev = 5,714, 504,000 (wgt'ed) examples reached here.  /* #neg=421 #pos=83 */
%   | | | else return 0.04675408521044409;  // std dev = 4,111, 121,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=21 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 6.396431043941472E-4;  // std dev = 6,343, 353,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=47 */
%   | | | else return -0.07051769058316149;  // std dev = 1,385, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | else return -0.07880467215764785;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6102922140160277;  // std dev = 0,282, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.19724873575515775;  // std dev = 4,416, 78,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | | else return -0.0850093287609709;  // std dev = 4,596, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | else return 0.050415722319492866;  // std dev = 0,478, 7.815,000 (wgt'ed) examples reached here.  /* #neg=5.055 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.01719032201649722;  // std dev = 0,280, 408,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=85 */
%   | | else return -0.023896662879172078;  // std dev = 0,312, 303,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=36 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.003850711036972972;  // std dev = 6,331, 344,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=47 */
%   | | | else return -0.06515605343982533;  // std dev = 1,387, 52,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | else return -0.07239695276911191;  // std dev = 0,006, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04777062269223256;  // std dev = 0,480, 7.874,000 (wgt'ed) examples reached here.  /* #neg=5.027 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6154213372210116;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2207149115049727;  // std dev = 0,161, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04694940348622105;  // std dev = 3,197, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.1060733654445508;  // std dev = 0,028, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.01735464927862323;  // std dev = 7,589, 606,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=66 */
%   | | | else return 0.002681649508844725;  // std dev = 3,871, 207,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009956860413376673;  // std dev = 4,312, 250,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=48 */
%   | | | else return -0.06850389302459027;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0244785525047358;  // std dev = 0,476, 7.486,000 (wgt'ed) examples reached here.  /* #neg=4.877 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7219559506476411;  // std dev = 2,803, 141,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=133 */
%   | | | else return -0.12894882803619276;  // std dev = 1,494, 576,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.14386974916628237;  // std dev = 4,705, 150,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=27 */
%   | | | else return -0.058288545314171505;  // std dev = 0,937, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4082377457092094;  // std dev = 4,522, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | | | else return 0.07272777277424328;  // std dev = 4,346, 184,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5792715348941816;  // std dev = 0,291, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return -0.007605236394625803;  // std dev = 0,267, 280,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;author(K, J), venue(K, A).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
5;false,true,true;author(H, G), title(H, E).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,false,true;author(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;true;true
6;false,true,true;author(G, F), title(G, E).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true,false;author(G, E), venue(G, B).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true,true;haswordauthor(F, C).;false;true
7;false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false,true,false;haswordtitle(H, D).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4945125714631494;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 8,54e-09, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3700903930226845;  // std dev = 4,830, 96,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3473824261960204;  // std dev = 4,557, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1188805083609989;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2940722660276113;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10099875659080397;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27296100872807205;  // std dev = 4,099, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1966031659169521;  // std dev = 4,157, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   else if ( movie(D, B) )
%   | then return -0.08517270426121912;  // std dev = 7,38e-05, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.045680727501265304;  // std dev = 4,795, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   else if ( movie(D, B) )
%   | then return -0.07875536527049616;  // std dev = 9,55e-05, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4273551972026027;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.5551009431482742;  // std dev = 7,30e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.07284449666486369;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324849551196702;  // std dev = 3,57e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04811956202217511;  // std dev = 3,570, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06807522140985998;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06842896459256427;  // std dev = 4,84e-09, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06388139440724969;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3325271247665423;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06419359298878036;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4290620904969819;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06419359298878027;  // std dev = 2,58e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973966
   AUC PR    = 0.853081
   CLL	      = -0.16572
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.169 seconds
Total inference time: 2.563 seconds
AUC ROC: 0.973966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.163835
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.691 seconds
Parameter learned model CLL: -0.163835


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.54e-09, 80, 0], 'true': [4.513, 32, 56], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 90, 0], 'true': [4.83, 40, 56], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.14e-08, 76, 0], 'true': [4.557, 33, 56], 'false,true,true': [0.009, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.42, 30, 56], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.58e-08, 84, 0], 'false,true,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 76, 0], 'true': [4.099, 24, 56], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.157, 25, 56], 'false,true': [7.38e-05, 77, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.795, 39, 56], 'false,true': [9.55e-05, 97, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,true': [0.991, 1, 56], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'true,true,false': [7.3e-08, 31, 0], 'false,true,false': [3.57e-08, 68, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [4.84e-09, 90, 0], 'true': [3.57, 35, 56], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 0], 'true,false,false,false': [2.58e-08, 65, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,true,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [0.0, 31, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.23140495867768565, 7.229359230117299e-17], 'false,true': [-6.938893903907228e-18, 7.216449660063518e-17], 'false,true,true': [nan, -6.938893903907228e-18], 'false': [7.229359230117299e-17, nan]}, {'': [0.2430555555555566, 2.8330564560950757e-06], 'false,true': [5.046952993181461e-05, -1.7270135938613546e-17], 'false,true,true': [0.0, 0.0], 'false': [2.8330564560950757e-06, nan]}, {'': [0.23330387577326048, 2.181302415431688e-06], 'false,true': [4.308780485447021e-05, 4.966787215428332e-17], 'false': [2.181302415431688e-06, nan]}, {'': [0.22714981070849152, 1.1888958751071638e-08], 'false,true,false': [nan, 3.700743415417188e-17], 'false,true': [-1.1564823173178713e-18, 3.700743415417188e-17], 'false': [1.1888958751071638e-08, nan]}, {'': [0.2099999999999999, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.21338210638622174, 5.442497758384097e-09], 'false': [5.442497758384097e-09, nan]}, {'': [0.24199445983379506, 9.120401210892606e-09], 'false': [9.120401210892606e-09, nan]}, {'': [0.2314049586776859, 1.216065522454409e-08], 'true': [0.2314049586776859, nan], 'true,true': [0.017236072637735054, 1.71905500587121e-16], 'false,true': [0.0, 1.8775830563513678e-17], 'false': [1.216065522454409e-08, nan]}, {'': [0.14001466446760488, 1.3599905487485638e-09], 'false,true': [0.0, 2.3438041630975527e-17], 'false,true,true': [nan, 0.0], 'false': [1.3599905487485638e-09, nan]}, {'': [0.07759879105390897, nan], 'true,false,true': [-1.9032394707859825e-16, 0.0], 'true': [0.0, 0.07949921048934211], 'true,false': [0.0027127394158793835, 0.029107527805435424], 'true,true,false': [nan, 0.0], 'true,false,false': [-2.0055641735164118e-16, 1.0248212535001446e-17], 'true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09685170810272666;  // std dev = 0,025, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0848610949989899;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08486109499898989;  // std dev = 6,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08486109499898992;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 2,95e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0784987657901048;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07300501758558196;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07300501758558196;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.07300501758558195;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07300501758558196;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0682158022660527;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.0682158022660527;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420267;  // std dev = 1,34e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( female(B) )
%   | then return -0.06406760470868454;  // std dev = 0,000152, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06412972239535537;  // std dev = 0,000215, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080109;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06413091696625292;  // std dev = 0,000630, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.06412855036353142;  // std dev = 0,000642, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068557
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.418 seconds
Total inference time: 3.095 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063753
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.851 seconds
Refined model CLL: -0.063753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068557
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.1290000000000004 seconds
Total inference time: 3.095 seconds
AUC ROC: 1.0
Total revision time: 7.1290000000000004
Best scored revision CLL: -0.063753


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 05:40:45
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 0.973966, 'F1': 0.809091, 'Precision': [0.799401, 0.5], 'Learning time': 1.169, 'Inference time': 2.563, 'CLL': -0.16572, 'AUC PR': 0.853081, 'Recall': 0.819018}, 'Precision': [1.0, 0.5], 'Learning time': 7.1290000000000004, 'Inference time': 3.095, 'CLL': -0.068557, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;author(K, J), venue(K, A).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
5;false,true,true;author(H, G), title(H, E).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,false,true;author(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;true;true
6;false,true,true;author(G, F), title(G, E).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true,false;author(G, E), venue(G, B).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true,true;haswordauthor(F, C).;false;true
7;false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false,true,false;haswordtitle(H, D).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.49551157246215044;  // std dev = 4,586, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048763;  // std dev = 8,74e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3724479947489233;  // std dev = 4,901, 99,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4248061348244559;  // std dev = 4,120, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19841533163363906;  // std dev = 4,969, 101,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783623;  // std dev = 5,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19361823466047542;  // std dev = 4,713, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.11774989839822231;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1457896506240263;  // std dev = 4,713, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, B) )
%   | then return -0.0851847513883968;  // std dev = 3,95e-09, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13679781093148285;  // std dev = 4,541, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then return -0.07877675473109164;  // std dev = 4,75e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.45825075068227783;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.5417492493177227;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333706;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03541457260691362;  // std dev = 3,705, 99,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08557749862158923;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0684269778442027;  // std dev = 2,46e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5377808669820237;  // std dev = 0,172, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3405033220085749;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06419184008202622;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.41606505597262194;  // std dev = 5,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.158088
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.227 seconds
Total inference time: 2.707 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150162
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.603 seconds
Parameter learned model CLL: -0.150162


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.74e-09, 92, 0], 'true': [4.586, 33, 58], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 87, 0], 'true': [4.901, 41, 58], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.15e-08, 87, 0], 'true': [4.12, 24, 58], 'false,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.969, 43, 58], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.05e-08, 91, 0], 'false,true,true': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 80, 0], 'true': [4.713, 36, 58], 'false,true,true,false': [0.0, 9, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.713, 36, 58], 'false,true': [3.95e-09, 99, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.541, 32, 58], 'false,true': [4.75e-09, 82, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,false': [0.0, 25, 0], 'false,true,false': [0.0, 71, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [2.46e-09, 59, 0], 'true': [3.705, 41, 58], 'false,true,true,false': [1.86e-09, 5, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.172, 2, 0], 'true,false,false,false': [0.0, 73, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [2.63e-09, 8, 0], 'true,false,true,true': [0.0, 0, 58], 'true,true,false,false': [0.0, 5, 0], 'true,false,false,true': [5.58e-08, 23, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2311315058567802, 7.703588334133739e-17], 'false,true': [-6.938893903907228e-18, 7.723290606088045e-17], 'false,true,true': [nan, -6.938893903907228e-18], 'false': [7.703588334133739e-17, nan]}, {'': [0.2426283032343658, -1.7270135938613546e-17], 'false,true': [0.0, -1.7865657867531254e-17], 'false,true,true': [nan, 0.0], 'false': [-1.7270135938613546e-17, nan]}, {'': [0.20701963117192262, 6.310741403132469e-17], 'false,true': [-1.734723475976807e-18, 5.870144727903127e-17], 'false': [6.310741403132469e-17, nan]}, {'': [0.24448583472208554, 1.0992307174506501e-17], 'false,true,false': [nan, 2.8060581941075384e-17], 'false,true': [1.3877787807814458e-18, 2.8060581941075384e-17], 'false': [1.0992307174506501e-17, nan]}, {'': [0.23630602082390215, 6.899527738775854e-06], 'false,true': [5.651410923103034e-05, 0.0], 'false,true,true': [0.0, 0.0], 'false': [6.899527738775854e-06, nan]}, {'': [0.23630602082390306, 1.570012358055777e-17], 'false': [1.570012358055777e-17, nan]}, {'': [0.2291358024691362, 2.3016818803204464e-17], 'false': [2.3016818803204464e-17, nan]}, {'': [0.210480476121353, -5.921189464667502e-18], 'true': [0.210480476121353, nan], 'true,true': [-1.5313421029312505e-16, -3.1974423109204507e-16], 'false,true': [0.0, -5.472930403081757e-18], 'false': [-5.921189464667502e-18, nan]}, {'': [0.13866629321919302, 4.45561733205108e-06], 'false,true': [4.0852828185496244e-05, 6.586068790149234e-18], 'false,true,true': [0.0, 6.938893903907229e-19], 'false': [4.45561733205108e-06, nan]}, {'': [0.06859541321690632, nan], 'true,false,true': [-1.6844763132243754e-16, 8.673617379884035e-19], 'true': [0.050005551124415, 0.06720288974111749], 'true,false': [0.017445609007774178, 0.022556964208196303], 'true,true,false': [nan, 0.0], 'true,true': [0.014814738649676362, 0.0], 'true,false,false': [1.351575856065408e-16, -7.604267291953127e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14759920270848487;  // std dev = 0,144, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11118822606386003;  // std dev = 0,001, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10169934731815154;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10169934731815153;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.10169934731815153;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09969316682882226;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09277752558293365;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09183138437023343;  // std dev = 0,003, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.16739088200235558;  // std dev = 0,339, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08525794560305423;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08410057567013139;  // std dev = 0,003, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07815215562360922;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 9,31e-10, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07895852437116511;  // std dev = 0,000191, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0779106230812582;  // std dev = 0,002, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0736175279562054;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B), actor(A) )
%   | | then return -0.07343566527543498;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.07336387088764273;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07169026452129089;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07488278983957201;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06845850516212598;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06852994483756475;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06766602605431929;  // std dev = 0,000401, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07446431254607873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06832272916847072;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0684269778442027;  // std dev = 2,08e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06331156931182483;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10815500347452803;  // std dev = 0,320, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.11513094714229326;  // std dev = 0,377, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06421976557715144;  // std dev = 0,000214, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06412067502045365;  // std dev = 0,002, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073737
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.956 seconds
Total inference time: 3.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064896
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.631 seconds
Refined model CLL: -0.064896


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073737
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.417 seconds
Total inference time: 3.302 seconds
AUC ROC: 1.0
Total revision time: 7.417
Best scored revision CLL: -0.064896


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 05:40:59
{'AUC ROC': 1.0, 'F1': 0.848168, 'parameter': {'AUC ROC': 0.977686, 'F1': 0.80916, 'Precision': [0.800604, 0.5], 'Learning time': 1.227, 'Inference time': 2.707, 'CLL': -0.158088, 'AUC PR': 0.861626, 'Recall': 0.817901}, 'Precision': [0.736364, 0.5], 'Learning time': 7.417, 'Inference time': 3.302, 'CLL': -0.073737, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;author(K, J), venue(K, A).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
5;false,true,true;author(H, G), title(H, E).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,false,true;author(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;true;true
6;false,true,true;author(G, F), title(G, E).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true,false;author(G, E), venue(G, B).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true,true;haswordauthor(F, C).;false;true
7;false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false,true,false;haswordtitle(H, D).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5101635871141607;  // std dev = 7,870, 273,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4609255827243556;  // std dev = 7,585, 263,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.12544463852839186;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3860470619685547;  // std dev = 7,429, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.11231637819360682;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.293556582038605;  // std dev = 7,493, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783626;  // std dev = 2,36e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783658;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23257010805035055;  // std dev = 7,364, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926075;  // std dev = 2,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.0926912761892605;  // std dev = 4,56e-09, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14090632416187762;  // std dev = 7,760, 269,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=178 */
%   else if ( movie(D, B) )
%   | then return -0.08518475138839676;  // std dev = 5,89e-09, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12880658555120916;  // std dev = 7,493, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, B) )
%   | then return -0.07877675473109143;  // std dev = 6,97e-09, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3474435848566454;  // std dev = 2,901, 138,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=129 */
%   | | else return -0.21891797120742718;  // std dev = 5,563, 133,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.07324622576333707;  // std dev = 1,83e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07324622576333664;  // std dev = 1,28e-07, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07183786045656894;  // std dev = 6,996, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420274;  // std dev = 1,39e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06842697784420262;  // std dev = 3,36e-09, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6211434491776348;  // std dev = 0,289, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3159910143387158;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06419184008202611;  // std dev = 1,18e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.0975891493809866;  // std dev = 5,174, 108,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993632
   AUC PR    = 0.960741
   CLL	      = -0.249048
   Precision = 0.06871 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.128585


Total learning time: 1.796 seconds
Total inference time: 2.506 seconds
AUC ROC: 0.993632


Results scoring model
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.216112
   Precision = 0.211401 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.34902


Total scoring time: 1.738 seconds
Parameter learned model CLL: -0.216112


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 210, 0], 'true': [7.87, 95, 178], 'false,true,true,false': [4.47e-08, 42, 0], 'false,true,true,true': [0.0, 12, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 245, 0], 'true': [7.585, 85, 178], 'false,true,true,false': [0.0, 45, 0], 'false,true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 241, 0], 'true': [7.429, 80, 178], 'false,true,true': [2.36e-08, 46, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [7.493, 82, 178], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 243, 0], 'false,true,true': [2.36e-08, 50, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [4.56e-09, 215, 0], 'true': [7.364, 78, 178], 'false,true,true,false': [2.47e-08, 42, 0], 'false,true,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [7.76, 91, 178], 'false,true': [5.89e-09, 278, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [7.493, 82, 178], 'false,true': [6.97e-09, 266, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,true': [2.901, 9, 129], 'true,false': [0.0, 0, 0], 'false,true,true': [1.83e-08, 49, 0], 'true,true,false': [5.563, 84, 49], 'false,true,false': [1.28e-07, 224, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.36e-09, 235, 0], 'true': [6.996, 86, 178], 'false,true,true,false': [1.39e-08, 44, 0], 'false,true,true,true': [0.0, 10, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.289, 19, 0], 'true,false,false,false': [0.0, 198, 0], 'true,true,false,true': [0.0, 5, 0], 'true,false,true,false': [1.18e-08, 33, 0], 'true,false,true,true': [0.0, 0, 129], 'true,true,false,false': [0.0, 53, 0], 'true,false,false,true': [5.174, 59, 49], 'false': [0.0, 0, 0]}]]
[{'': [0.2268915455728695, -7.737918050417758e-17], 'false,true': [5.756711979537848e-17, -2.3684757858670006e-16], 'false,true,true': [-1.1564823173178714e-17, 4.7580986769649563e-17], 'false': [-7.737918050417758e-17, nan]}, {'': [0.21873960878428106, -9.667248105579594e-17], 'false,true': [-3.172065784643304e-17, -7.612957883143931e-17], 'false,true,true': [0.0, -2.960594732333751e-17], 'false': [-9.667248105579594e-17, nan]}, {'': [0.21392945135508726, -1.0986179059008517e-16], 'false,true': [1.206764157201257e-17, -8.660660938984624e-17], 'false': [-1.0986179059008517e-16, nan]}, {'': [0.21591715976331347, -5.759518762560538e-17], 'false,true,false': [nan, -7.310110450206792e-17], 'false,true': [1.1102230246251566e-17, -7.310110450206792e-17], 'false': [-5.759518762560538e-17, nan]}, {'': [0.21185302734374872, 5.2544906508976876e-17], 'false,true': [7.086529944415892e-18, 2.0655312086049424e-17], 'false,true,true': [0.0, 1.4538634846281813e-17], 'false': [5.2544906508976876e-17, nan]}, {'': [0.223849863876949, 3.6741193620688633e-17], 'false': [3.6741193620688633e-17, nan]}, {'': [0.21591715976331266, 4.9250495077356566e-17], 'false': [4.9250495077356566e-17, nan]}, {'': [0.2254054274860089, 2.3587155834527135e-17], 'true': [0.2254054274860089, nan], 'true,true': [0.060964083175804415, 0.23268698060941823], 'false,true': [6.797283824235652e-18, 7.335402126987641e-17], 'false': [2.3587155834527135e-17, nan]}, {'': [0.18539352797997694, -4.8404187232792294e-17], 'false,true': [6.1679056923619804e-18, 1.1338447911065428e-17], 'false,true,true': [0.0, 4.4156597570318725e-18], 'false': [-4.8404187232792294e-17, nan]}, {'': [0.0904267535787361, nan], 'true,false,true': [-2.478637450325931e-16, 4.20539024479226e-18], 'true': [0.05873828860257888, 0.08787009342307674], 'true,false': [0.023445455528899782, 0.08773354220947446], 'true,true,false': [0.0, -3.6658307416868376e-18], 'true,false,false': [0.2478566529492456, -1.6821560979169039e-18], 'true,true': [0.00439119519708557, -3.828355257328126e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.14185106490048832;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.12544463852839174;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.11231637819360674;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926082;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.0926912761892608;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926092;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926089;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 2,28e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08518475138839679;  // std dev = 9,31e-10, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,08e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.08518475138839678;  // std dev = 1,32e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 4,47e-09, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310916;  // std dev = 3,80e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.07877675473109166;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310917;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07877675473109166;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109175;  // std dev = 1,61e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420268;  // std dev = 2,79e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420261;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420261;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.06842697784420261;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.10076076792839193;  // std dev = 0,922, 155,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=129 */
%   | | | else return -0.06419184008202612;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.09903075881565154;  // std dev = 0,540, 51,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   | | | else return -0.058956398230591275;  // std dev = 0,517, 265,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.315 seconds
Total inference time: 2.701 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067186
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.989 seconds
Refined model CLL: -0.067186


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.838000000000001 seconds
Total inference time: 2.701 seconds
AUC ROC: 1.0
Total revision time: 9.838000000000001
Best scored revision CLL: -0.067186


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 05:41:15
{'AUC ROC': 1.0, 'F1': 1.0, 'parameter': {'AUC ROC': 0.993632, 'F1': 0.128585, 'Precision': [0.06871, 0.5], 'Learning time': 1.796, 'Inference time': 2.506, 'CLL': -0.249048, 'AUC PR': 0.960741, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'Learning time': 9.838000000000001, 'Inference time': 2.701, 'CLL': -0.064363, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;author(K, J), venue(K, A).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
5;false,true,true;author(H, G), title(H, E).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,false,true;author(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;true;true
6;false,true,true;author(G, F), title(G, E).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true,false;author(G, E), venue(G, B).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true,true;haswordauthor(F, C).;false;true
7;false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false,true,false;haswordtitle(H, D).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5010060779566556;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048766;  // std dev = 7,90e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.370081197493701;  // std dev = 4,324, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2793546488226925;  // std dev = 4,437, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2733492253040699;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783619;  // std dev = 4,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2451323123623994;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.10379384736123361;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15772229761523604;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.08537543455672139;  // std dev = 0,001, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07775453863216687;  // std dev = 4,324, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.07901167337977151;  // std dev = 0,001, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.45218447551957197;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.5260763940456452;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.07457527065814909;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07321734064115194;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07265713923846918;  // std dev = 3,159, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07596199877548505;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06831521303286392;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.068401693576282;  // std dev = 3,23e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4613597830739405;  // std dev = 0,213, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06409322074814465;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3476824516104244;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06416953128414281;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.41362034174503187;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.06416953128414277;  // std dev = 2,04e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.155712
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.168 seconds
Total inference time: 2.904 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160061
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.259 seconds
Parameter learned model CLL: -0.160061


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [7.9e-09, 57, 0], 'true': [4.009, 25, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 52, 0], 'true': [4.324, 32, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.98e-08, 50, 0], 'true': [4.437, 35, 45], 'false,true,true': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.155, 28, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.83e-08, 65, 0], 'false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 54, 0], 'true': [3.956, 24, 45], 'false,true,true,false': [1.86e-09, 3, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.108, 27, 45], 'false,true': [0.001, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.324, 32, 45], 'false,true': [0.001, 70, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,true': [0.989, 1, 45], 'true,false': [0.0, 0, 0], 'false,true,true': [0.007, 6, 0], 'true,true,false': [0.0, 26, 0], 'false,true,false': [0.0, 61, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.23e-09, 52, 0], 'true': [3.159, 28, 45], 'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.213, 5, 0], 'true,false,false,false': [2.04e-08, 41, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,true,true': [0.0, 0, 45], 'true,true,false,false': [0.0, 3, 0], 'true,false,false,true': [0.0, 20, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.22959183673469416, 6.344131569286608e-17], 'false,true': [-6.938893903907228e-18, 6.232831015439475e-17], 'false,true,true': [0.0, -2.7755575615628915e-18], 'false': [6.344131569286608e-17, nan]}, {'': [0.2428740091077763, -3.289549702593056e-17], 'false,true': [0.0, -3.416070845000482e-17], 'false,true,true': [nan, 0.0], 'false': [-3.289549702593056e-17, nan]}, {'': [0.2460937499999996, 2.3042364662031552e-17], 'false,true': [2.3129646346357427e-18, 1.7763568394002505e-17], 'false': [2.3042364662031552e-17, nan]}, {'': [0.23644210921373562, 3.811213368116209e-17], 'false,true,false': [nan, 3.586874387250506e-17], 'false,true': [0.0, 3.586874387250506e-17], 'false': [3.811213368116209e-17, nan]}, {'': [0.2268431001890362, 4.036899705731867e-06], 'false,true': [2.958410079089424e-05, -9.25185853854297e-18], 'false,true,true': [0.0, 1.1564823173178713e-18], 'false': [4.036899705731867e-06, nan]}, {'': [0.23437500000000014, 1.7452833927579485e-06], 'false': [1.7452833927579485e-06, nan]}, {'': [0.242874009107775, 2.1038978703377277e-06], 'false': [2.1038978703377277e-06, nan]}, {'': [0.2343749999999999, 9.76004023207931e-07], 'true': [0.2343749999999999, nan], 'true,true': [0.021266540642722338, -6.832141690000964e-17], 'false,true': [9.219869655310853e-06, -9.10018872643571e-19], 'false': [9.76004023207931e-07, nan]}, {'': [0.13673209932776959, 9.253225042059264e-07], 'false,true': [5.775143920351247e-06, 1.120898246015783e-17], 'false,true,true': [0.0, 0.0], 'false': [9.253225042059264e-07, nan]}, {'': [0.08589318778016186, nan], 'true,false,true': [-2.1711028037114172e-16, 0.0], 'true': [0.04268686725743352, 0.08057956148066622], 'true,false': [0.012716355704520305, 0.026910780038713555], 'true,true,false': [nan, -5.782411586589357e-19], 'true,true': [0.009116217033585361, -5.782411586589357e-19], 'true,false,false': [-6.661338147750939e-17, 1.0154478883766675e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(B, F).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.1677025757036246;  // std dev = 0,303, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.13131199845929653;  // std dev = 0,091, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 2,63e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09022226544159168;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08577804622190419;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.10532993499071423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08308532367588131;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0792859681646712;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07697101822756217;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1079256857026651;  // std dev = 0,421, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08075720466520683;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.07018689666196586;  // std dev = 0,003, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0673021326842506;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, E) )
%   | then return -0.07311190398113869;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.0652322422317214;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06319851195220327;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06834543349146818;  // std dev = 5,70e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06842697784420271;  // std dev = 1,61e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06282382106094203;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.2408922566160242;  // std dev = 0,401, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09153584356014584;  // std dev = 0,304, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.12834420514829578;  // std dev = 0,195, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06334222521046363;  // std dev = 0,010, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070496
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 2.767 seconds
Total inference time: 3.288 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065406
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.353 seconds
Refined model CLL: -0.065406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070496
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 6.546999999999999 seconds
Total inference time: 3.288 seconds
AUC ROC: 1.0
Total revision time: 6.546999999999999
Best scored revision CLL: -0.065406


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 05:41:29
{'AUC ROC': 1.0, 'F1': 0.910811, 'parameter': {'AUC ROC': 0.978805, 'F1': 0.816446, 'Precision': [0.80814, 0.5], 'Learning time': 1.168, 'Inference time': 2.904, 'CLL': -0.155712, 'AUC PR': 0.865091, 'Recall': 0.824926}, 'Precision': [0.836228, 0.5], 'Learning time': 6.546999999999999, 'Inference time': 3.288, 'CLL': -0.070496, 'AUC PR': 1.0, 'Recall': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,true,false;haswordauthor(H, D).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false,true;author(K, J), venue(K, A).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
2;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
4;false,true;author(F, E), venue(F, B).;true;true
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
5;false,true,true;author(H, G), title(H, E).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,false,true;author(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;haswordauthor(F, D).;true;true
6;false,true,true;author(G, F), title(G, E).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false,true;title(M, L), venue(M, B).;false;false
7;true,true,false;author(G, E), venue(G, B).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true,true;haswordauthor(F, C).;false;true
7;false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;false,true;author(F, E), venue(F, A).;true;true
8;false,true,true;samebib(F, G), venue(G, B).;false;false
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
8;false,true,false;haswordtitle(H, D).;false;false
8;false,false,true;title(K, J), venue(K, A).;false;false
8;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;true,false;title(G, D), venue(G, B).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5199136409818657;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47477216858771143;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3161100888525326;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35762383913211004;  // std dev = 3,436, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783619;  // std dev = 4,34e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19461239316220033;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09297853597308606;  // std dev = 0,002, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08424718253586598;  // std dev = 4,243, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.08528095374672906;  // std dev = 0,000980, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12501128902833153;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.07887784570977906;  // std dev = 0,000985, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4323448421687516;  // std dev = 5,96e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.18303977321586362;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07321366540684622;  // std dev = 1,93e-05, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return -0.004662686776274909;  // std dev = 3,852, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08041295448574025;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06839896724020009;  // std dev = 3,73e-06, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5211344353966401;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07466375784224029;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.331818267834081;  // std dev = 6,66e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.1365190507812554;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.06416637565019954;  // std dev = 1,18e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.222928
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.093 seconds
Total inference time: 2.946 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.22818
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.224 seconds
Parameter learned model CLL: -0.22818


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.12e-09, 60, 0], 'true': [3.901, 23, 45], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 59, 0], 'true': [3.721, 20, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [3.49e-08, 53, 0], 'true': [4.108, 27, 45], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [3.436, 16, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.34e-08, 64, 0], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.002, 62, 0], 'true': [3.901, 23, 45], 'false,true,true,false': [1.86e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [4.243, 30, 45], 'false,true': [0.00098, 70, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'true': [3.901, 23, 45], 'false,true': [0.000985, 60, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)'}, {'true,true,true': [5.96e-08, 0, 35], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,false': [2.481, 16, 10], 'false,true,false': [1.93e-05, 60, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.73e-06, 69, 0], 'true': [3.852, 32, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,true': 'movie(C, B)', 'true': 'genre(A, D)', 'true,false': 'genre(B, F)', 'true,true,false': 'genre(B, E)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,true': [0.0, 1, 0], 'true,false,false,false': [1.18e-08, 58, 0], 'true,true,false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [6.66e-08, 0, 35], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,true': [2.481, 16, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.22383217993079618, 6.344131569286608e-17], 'false,true': [0.0, 6.29126380620922e-17], 'false,true,true': [nan, 0.0], 'false': [6.344131569286608e-17, nan]}, {'': [0.2130177514792895, -2.42861286636753e-17], 'false,true': [0.0, -3.95164127408954e-17], 'false,true,true': [nan, 0.0], 'false': [-2.42861286636753e-17, nan]}, {'': [0.23437499999999922, 2.4671622769447922e-17], 'false,true': [0.0, 2.3042364662031552e-17], 'false': [2.4671622769447922e-17, nan]}, {'': [0.19349637194302557, 2.949029909160572e-17], 'false,true,false': [nan, 2.949029909160572e-17], 'false,true': [nan, 2.949029909160572e-17], 'false': [2.949029909160572e-17, nan]}, {'': [0.22383217993079596, 2.364922309009506e-06], 'false,true': [1.1564823173178713e-18, 2.4755455020968895e-06], 'false,true,true': [nan, 1.1564823173178713e-18], 'false': [2.364922309009506e-06, nan]}, {'': [0.23999999999999966, 9.597374082221626e-07], 'false': [9.597374082221626e-07, nan]}, {'': [0.22383217993079604, 9.698169107304663e-07], 'false': [9.698169107304663e-07, nan]}, {'': [0.19349637194302596, 6.227962590088509e-12], 'true': [0.19349637194302596, nan], 'true,true': [1.0150610510858574e-16, 0.23668639053254428], 'false,true': [nan, 6.227962590088509e-12], 'false': [6.227962590088509e-12, nan]}, {'': [0.19271979275981987, 3.95128368063032e-06], 'false,true': [0.0, 1.393714692768831e-11], 'false,true,true': [nan, 0.0], 'false': [3.95128368063032e-06, nan]}, {'': [0.08936925977103738, nan], 'true,false,true': [1.2688263138573217e-16, nan], 'true': [0.04429690353686328, 0.08884351281099637], 'true,false': [1.2688263138573217e-16, 0.07437887196680773], 'true,true,false': [nan, 0.0], 'true,false,false': [0.23668639053254445, 2.392722035830079e-18], 'true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.23934049535190832;  // std dev = 0,508, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08398979256882637;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839685;  // std dev = 1,86e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839686;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07883196754362658;  // std dev = 0,000138, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.2734481888499603;  // std dev = 0,501, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324435185105953;  // std dev = 6,49e-06, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07106770785393024;  // std dev = 0,019, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367086;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.0684263151968881;  // std dev = 1,46e-06, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.06856597750367101;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06863880282467816;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.06419184008202618;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06400326553169923;  // std dev = 0,018, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return 0.11598895090891687;  // std dev = 0,189, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074497
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.969 seconds
Total inference time: 3.083 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065163
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.565 seconds
Refined model CLL: -0.065163


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074497
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.850999999999999 seconds
Total inference time: 3.083 seconds
AUC ROC: 1.0
Total revision time: 6.850999999999999
Best scored revision CLL: -0.065163


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 05:41:42
{'AUC ROC': 1.0, 'F1': 0.852086, 'parameter': {'AUC ROC': 0.982257, 'F1': 0.831169, 'Precision': [0.808989, 0.5], 'Learning time': 1.093, 'Inference time': 2.946, 'CLL': -0.222928, 'AUC PR': 0.888508, 'Recall': 0.854599}, 'Precision': [0.742291, 0.5], 'Learning time': 6.850999999999999, 'Inference time': 3.083, 'CLL': -0.074497, 'AUC PR': 1.0, 'Recall': 1.0}


