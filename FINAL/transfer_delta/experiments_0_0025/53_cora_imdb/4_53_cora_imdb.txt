Starting experiment #4 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8126943896449667;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3923955104419774;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return 0.01604367194161705;  // std dev = 4,768, 171,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=27 */
%   | else return 0.21677679372736575;  // std dev = 0,480, 7.696,000 (wgt'ed) examples reached here.  /* #neg=4.936 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.24276431971489698;  // std dev = 3,038, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else return -0.0168510649004878;  // std dev = 0,331, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.020395424959105426;  // std dev = 0,369, 641,000 (wgt'ed) examples reached here.  /* #neg=537 #pos=104 */
%   | | else return -0.02749583375693558;  // std dev = 0,318, 411,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=47 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1856469478619516;  // std dev = 0,478, 7.998,000 (wgt'ed) examples reached here.  /* #neg=5.151 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7879389899309289;  // std dev = 2,365, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.14188771053550908;  // std dev = 1,003, 320,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.15928966651712118;  // std dev = 3,162, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.06134801536023601;  // std dev = 4,388, 253,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0019497335559138498;  // std dev = 6,370, 344,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=47 */
%   | | | else return -0.1091438504967216;  // std dev = 1,393, 68,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2 */
%   | | else return -0.1386349600702013;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15809471763350375;  // std dev = 0,478, 7.992,000 (wgt'ed) examples reached here.  /* #neg=5.145 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6716296960151055;  // std dev = 2,171, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.1253542680990492;  // std dev = 1,005, 304,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1079801986297472;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.056785998580266416;  // std dev = 4,395, 262,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.007062105902536364;  // std dev = 6,390, 358,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=47 */
%   | | | else return -0.09377840731506032;  // std dev = 1,391, 62,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=2 */
%   | | else return -0.12288183915986886;  // std dev = 0,001, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13935979166282833;  // std dev = 0,480, 7.825,000 (wgt'ed) examples reached here.  /* #neg=4.978 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.0630026440745448;  // std dev = 0,749, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12260547902387396;  // std dev = 3,140, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.03429776833348005;  // std dev = 5,741, 373,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=83 */
%   | | | else return -0.04465034989786354;  // std dev = 4,382, 245,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 7.108224715192774E-4;  // std dev = 6,364, 340,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=47 */
%   | | | else return -0.0816010760444571;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=2 */
%   | | else return -0.11016933072423085;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11027821030256456;  // std dev = 0,479, 7.908,000 (wgt'ed) examples reached here.  /* #neg=5.061 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24077644020495384;  // std dev = 0,586, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13442163773882468;  // std dev = 3,058, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.03415839805096139;  // std dev = 5,609, 374,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=83 */
%   | | | else return -0.04430456010483908;  // std dev = 4,393, 259,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.012917702836557103;  // std dev = 6,414, 377,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=47 */
%   | | | else return -0.07221981288587466;  // std dev = 1,389, 56,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=2 */
%   | | else return -0.10000408800059855;  // std dev = 0,001, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08813756856182708;  // std dev = 0,479, 7.932,000 (wgt'ed) examples reached here.  /* #neg=5.085 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4927374139169031;  // std dev = 2,367, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.12019724320169996;  // std dev = 1,016, 302,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06966122698027634;  // std dev = 3,645, 191,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=17 */
%   | | | else return 0.03641767968766757;  // std dev = 4,002, 121,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 5.529033353754776E-4;  // std dev = 6,370, 344,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=47 */
%   | | | else return -0.061959103068885996;  // std dev = 1,386, 51,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | else return -0.09119039429802987;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6627995674170776;  // std dev = 0,206, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.32605393927450455;  // std dev = 2,11e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.06689462984256725;  // std dev = 5,047, 183,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=36 */
%   | | | else return 0.7007568620005379;  // std dev = 0,209, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.0675209140803867;  // std dev = 0,479, 7.748,000 (wgt'ed) examples reached here.  /* #neg=4.988 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.036352562059408663;  // std dev = 0,263, 74,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.007438496397561939;  // std dev = 0,271, 627,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=103 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001832853124175646;  // std dev = 6,443, 373,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=48 */
%   | | | else return -0.08390949045380856;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05586766265423963;  // std dev = 0,478, 7.937,000 (wgt'ed) examples reached here.  /* #neg=5.090 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.07561124688386649;  // std dev = 0,449, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.5295384501869128;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13127933925315774;  // std dev = 0,049, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.008477920555978747;  // std dev = 4,589, 380,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=83 */
%   | | | else return -0.03948678501516715;  // std dev = 4,379, 266,000 (wgt'ed) examples reached here.  /* #neg=245 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013224795339672446;  // std dev = 6,419, 401,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=47 */
%   | | | else return -0.07821389284265463;  // std dev = 0,009, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.47489332108839316;  // std dev = 0,213, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.1609271165663732;  // std dev = 4,522, 82,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=39 */
%   | | | else return -0.1018124831305143;  // std dev = 4,606, 128,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=27 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.10230602661503493;  // std dev = 5,095, 145,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=61 */
%   | | | else return -0.1936567920382013;  // std dev = 1,866, 73,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   | | else return 0.04432588925348321;  // std dev = 0,480, 7.504,000 (wgt'ed) examples reached here.  /* #neg=4.810 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return -0.010447821266126717;  // std dev = 0,275, 699,000 (wgt'ed) examples reached here.  /* #neg=578 #pos=121 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.017748014726150754;  // std dev = 0,312, 442,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=49 */
%   | | else return -0.07273337432402242;  // std dev = 0,009, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.024960777508785444;  // std dev = 0,474, 7.485,000 (wgt'ed) examples reached here.  /* #neg=4.876 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7279376361736245;  // std dev = 2,806, 137,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=131 */
%   | | | else return -0.13195164995588654;  // std dev = 1,633, 542,000 (wgt'ed) examples reached here.  /* #neg=539 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17949589681691583;  // std dev = 0,302, 292,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3966107380279918;  // std dev = 4,613, 107,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=78 */
%   | | | else return 0.028437576897706165;  // std dev = 4,073, 216,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.4009366471384898;  // std dev = 0,439, 50,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | else return 0.6321840483907112;  // std dev = 0,185, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.008799144633943929;  // std dev = 0,229, 266,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(G, E), venue(G, A).;false;false
0;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false,true,true;author(K, I), title(K, J).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordtitle(J, H).;true;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false;haswordvenue(A, I), haswordauthor(J, I).;false;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;true
6;true,true;author(F, E), venue(F, A).;true;true
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,true;samebib(F, G), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,true;haswordvenue(B, D).;false;true
8;true,false,true;haswordtitle(I, G).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.5169724645112778;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.14185106490048766;  // std dev = 8,33e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4428657559670634;  // std dev = 4,358, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4073600470392939;  // std dev = 4,038, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360624;  // std dev = 6,84e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3172025626108921;  // std dev = 4,015, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15808113583017971;  // std dev = 4,557, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10370371905307026;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926105;  // std dev = 2,11e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11859458861702896;  // std dev = 4,557, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1045977410391288;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08433048138149678;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839678;  // std dev = 3,95e-09, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1777664214304923;  // std dev = 0,450, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.07872029001077502;  // std dev = 0,002, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.016214796750432095;  // std dev = 4,715, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0725634587048639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07325005874958375;  // std dev = 1,49e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return -0.010523948311128881;  // std dev = 4,865, 97,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06841183052394427;  // std dev = 0,000837, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.4147085790052051;  // std dev = 1,52e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419591177466177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, F) )
%   | | then return -0.10310176027294066;  // std dev = 0,295, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5852914209947945;  // std dev = 5,16e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06419591177466177;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.200272
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.322 seconds
Total inference time: 3.245 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.21032
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.829 seconds
Parameter learned model CLL: -0.21032


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [4.371, 29, 56], 'false,true': [8.33e-09, 77, 0], 'true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.358, 29, 56], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.038, 23, 56], 'false,false': [0.0, 0, 0], 'false,true,false': [6.84e-09, 73, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 6, 0], 'false,true,false': [4.71e-08, 94, 0], 'true': [4.015, 23, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.016, 2, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [4.557, 33, 56], 'false,false': [0.0, 0, 0], 'false,true,false,false': [2.11e-08, 88, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.557, 33, 56], 'false,false': [0.0, 0, 0], 'false,true,false': [3.95e-09, 89, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, A)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.45, 22, 56], 'false,true': [0.002, 78, 0], 'true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 1, 0], 'false,true,false': [1.49e-08, 81, 0], 'true': [4.715, 38, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.000837, 65, 0], 'true,true,true': [4.865, 41, 56], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,false,false,true': [5.16e-08, 22, 0], 'true,false,false,false': [0.0, 73, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,true,true': [1.52e-07, 0, 56], 'true,false,true': [0.295, 8, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.22935658607477835, 7.209240419643874e-17], 'true': [0.22935658607477835, nan], 'false': [7.209240419643874e-17, nan], 'true,true': [0.0, 0.22477508650518999]}, {'': [0.22345280390501304, -1.7464182409833923e-17], 'false,true': [0.0, -2.0898315757650005e-17], 'false,true,true': [nan, 0.0], 'false': [-1.7464182409833923e-17, nan]}, {'': [0.2063771831437275, 4.966787215428332e-17], 'false,true': [2.3129646346357427e-18, 4.7146457210109385e-17], 'false,true,true': [nan, 2.3129646346357427e-18], 'false': [4.966787215428332e-17, nan]}, {'': [0.2040787938447419, 1.3322676295501878e-17], 'false,true': [-2.3129646346357427e-18, 2.362176648138631e-17], 'false': [1.3322676295501878e-17, nan]}, {'': [0.23330387577326125, 5.330062670005908e-06], 'false,true,false': [nan, 5.046468293750712e-18], 'false,true': [0.00012127389782866371, 5.046468293750712e-18], 'false': [5.330062670005908e-06, nan]}, {'': [0.23330387577326098, 4.107791675872436e-06], 'false,true': [0.00010269045350747193, 1.3721857607726653e-17], 'false,true,true': [0.0, 0.0], 'false': [4.107791675872436e-06, nan]}, {'': [0.20249835634450997, 3.825917569649926e-08], 'true': [0.20249835634450997, nan], 'false': [3.825917569649926e-08, nan], 'true,true': [nan, 0.20249835634450997]}, {'': [0.23649706478698282, 5.678909778065367e-09], 'false,true': [0.0, 2.741291418827547e-18], 'false': [5.678909778065367e-09, nan]}, {'': [0.24402168136890257, 1.0783663003580775e-08], 'true': [0.24402168136890257, nan], 'false': [1.0783663003580775e-08, nan], 'true,true': [0.24402168136890257, nan]}, {'': [0.10753666536265191, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.01090655223896522, 0.04832067487483656], 'true,false,false': [1.2111523905001707e-16, -4.562560375171876e-18], 'true,true': [4.123685520036296e-16, 0.0], 'true': [0.014270636257990283, 0.045893701489830685]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,97e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13520942281643306;  // std dev = 0,526, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06458122298294021;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06701526525681055;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(G, B), movie(G, A) )
%   | | | then return -0.06337487715734436;  // std dev = 0,007, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077692
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.721 seconds
Total inference time: 3.343 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064144
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.977 seconds
Refined model CLL: -0.064144


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077692
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.849 seconds
Total inference time: 3.343 seconds
AUC ROC: 1.0
Total revision time: 7.849
Best scored revision CLL: -0.064144


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:36:59
{'CLL': -0.077692, 'Precision': [0.735892, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.200272, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978388, 'AUC PR': 0.863056, 'Recall': 0.819018, 'Inference time': 3.245, 'Learning time': 1.322, 'F1': 0.900506}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.343, 'Learning time': 7.849, 'F1': 0.847854}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(G, E), venue(G, A).;false;false
0;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false,true,true;author(K, I), title(K, J).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordtitle(J, H).;true;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false;haswordvenue(A, I), haswordauthor(J, I).;false;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;true
6;true,true;author(F, E), venue(F, A).;true;true
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,true;samebib(F, G), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,true;haswordvenue(B, D).;false;true
8;true,false,true;haswordtitle(I, G).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5172398441904221;  // std dev = 4,447, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.14185106490048763;  // std dev = 8,93e-09, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4143500770068857;  // std dev = 4,618, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.38814682697134606;  // std dev = 4,275, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360622;  // std dev = 7,45e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3445569235099366;  // std dev = 3,971, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783619;  // std dev = 5,48e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2680518263973541;  // std dev = 3,927, 79,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.106102074684542;  // std dev = 4,566, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839679;  // std dev = 3,09e-09, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.21400229074652088;  // std dev = 0,419, 75,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.07877675473109165;  // std dev = 4,15e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.010613117557850651;  // std dev = 4,636, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.014535487603207267;  // std dev = 4,624, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3828193720143603;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, F) )
%   | | then return -0.139348155349628;  // std dev = 0,422, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.6171806279856397;  // std dev = 4,21e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.21342
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.227 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.21053
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.993 seconds
Parameter learned model CLL: -0.21053


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [4.447, 30, 58], 'false,true': [8.93e-09, 95, 0], 'true,true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.618, 34, 58], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 2, 0], 'true': [4.275, 27, 58], 'false,false': [0.0, 0, 0], 'false,true,false': [7.45e-09, 85, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 6, 0], 'false,true,false': [5.48e-08, 86, 0], 'true': [3.971, 22, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 7, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.927, 21, 58], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 71, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.566, 33, 58], 'false,false': [0.0, 0, 0], 'false,true,false': [3.09e-09, 80, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, A)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.419, 17, 58], 'false,true': [4.15e-08, 77, 0], 'true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 4, 0], 'false,true,false': [0.0, 86, 0], 'true': [4.636, 37, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [2.89e-08, 70, 0], 'true,true,true': [4.624, 35, 58], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,false,false,true': [4.21e-08, 26, 0], 'true,false,false,false': [0.0, 87, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 7, 0], 'true,true,true': [0.0, 0, 58], 'true,false,true': [0.422, 9, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.23298676748582192, 7.946859544685331e-17], 'true': [0.23298676748582192, nan], 'false': [7.946859544685331e-17, nan], 'true,true': [0.0, 0.2246900826446277]}, {'': [0.2318211666044696, -1.7270135938613546e-17], 'false,true': [0.0, -1.8073398075293247e-17], 'false,true,true': [nan, 0.0], 'false': [-1.7270135938613546e-17, nan]}, {'': [0.21502507166407195, 3.626768636206955e-06], 'false,true': [3.231585364085396e-05, 5.747036833353752e-17], 'false,true,true': [0.0, 0.0], 'false': [3.626768636206955e-06, nan]}, {'': [0.1970830906885338, 2.5342047301226398e-17], 'false,true': [-2.3129646346357427e-18, 3.4855839145208403e-17], 'false': [2.5342047301226398e-17, nan]}, {'': [0.19516103188591608, 0.0], 'false,true,false': [nan, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.22914993885923746, 1.1755302613678128e-17], 'false,true': [0.0, 1.1102230246251566e-17], 'false,true,true': [nan, 0.0], 'false': [1.1755302613678128e-17, nan]}, {'': [0.17528888888888902, 2.234864530089601e-17], 'true': [0.17528888888888902, nan], 'false': [2.234864530089601e-17, nan], 'true,true': [nan, 0.17528888888888902]}, {'': [0.22627765729262792, -6.784696261598179e-18], 'false,true': [0.0, -6.454785026890445e-18], 'false': [-6.784696261598179e-18, nan]}, {'': [0.22991770361110592, 1.1895246692412391e-17], 'true': [0.22991770361110592, nan], 'false': [1.1895246692412391e-17, nan], 'true,true': [0.22991770361110592, nan]}, {'': [0.10233597993148988, nan], 'true,true,false': [nan, -4.956352788505163e-19], 'true,false': [0.01976965103611104, 0.05417118867378473], 'true,false,false': [6.832141690000964e-17, -1.1485065771984378e-17], 'true,true': [-6.125368411725002e-17, -4.956352788505163e-19], 'true': [0.01920154405642385, 0.051818699569970816]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11231637819360629;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783634;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0851847513883968;  // std dev = 1,83e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08020113015494973;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.0743737855554767;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.07314959618063839;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06842697784420267;  // std dev = 3,61e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.06835513682079253;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0683423895317948;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.12892692148204285;  // std dev = 0,031, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06416014549550454;  // std dev = 7,76e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999579
   AUC PR    = 0.986436
   CLL	      = -0.081216
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.608 seconds
Total inference time: 3.114 seconds
AUC ROC: 0.999579


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065528
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.582 seconds
Refined model CLL: -0.065528


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999579
   AUC PR    = 0.986436
   CLL	      = -0.081216
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.41 seconds
Total inference time: 3.114 seconds
AUC ROC: 0.999579
Total revision time: 7.41
Best scored revision CLL: -0.065528


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:37:13
{'CLL': -0.081216, 'Precision': [0.736364, 0.5], 'AUC ROC': 0.999579, 'parameter': {'CLL': -0.21342, 'Precision': [1.0, 0.5], 'AUC ROC': 0.977686, 'AUC PR': 0.861626, 'Recall': 0.817901, 'Inference time': 2.821, 'Learning time': 1.227, 'F1': 0.89983}, 'AUC PR': 0.986436, 'Recall': 1.0, 'Inference time': 3.114, 'Learning time': 7.41, 'F1': 0.848168}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(G, E), venue(G, A).;false;false
0;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false,true,true;author(K, I), title(K, J).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordtitle(J, H).;true;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false;haswordvenue(A, I), haswordauthor(J, I).;false;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;true
6;true,true;author(F, E), venue(F, A).;true;true
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,true;samebib(F, G), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,true;haswordvenue(B, D).;false;true
8;true,false,true;haswordtitle(I, G).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.6029188095764964;  // std dev = 6,740, 239,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.14185106490048804;  // std dev = 0,000, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46807480214210756;  // std dev = 7,228, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1254446385283913;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1254446385283918;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.38632290114511597;  // std dev = 7,051, 254,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1123163781936068;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2763788552535132;  // std dev = 7,245, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 248,000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21875547588167554;  // std dev = 7,166, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926049;  // std dev = 7,15e-08, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14361859198597512;  // std dev = 7,394, 267,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839678;  // std dev = 5,51e-09, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3896697928323848;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3896697928323848;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.14137805997537767;  // std dev = 0,451, 249,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109143;  // std dev = 4,47e-08, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12007839976878641;  // std dev = 6,774, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07324622576333664;  // std dev = 1,23e-07, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.06114934803579321;  // std dev = 7,220, 262,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420312;  // std dev = 0,000, 327,000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3144927161892042;  // std dev = 1,782, 136,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06419184008202615;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202614;  // std dev = 1,05e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(A, F) )
%   | | then return -0.1454371745702459;  // std dev = 0,961, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.23466295623606973;  // std dev = 5,353, 118,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.285842
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.913 seconds
Total inference time: 2.434 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.232318
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.676 seconds
Parameter learned model CLL: -0.232318


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [6.74, 61, 178], 'false,true': [0.0, 273, 0], 'true,true,true': [0.0, 12, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [1.83e-08, 36, 0], 'false,true,true,true': [0.0, 8, 0], 'true': [7.228, 79, 178], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 231, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 36, 0], 'false,true,true,true': [0.0, 5, 0], 'true': [7.051, 76, 178], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [2.79e-08, 52, 0], 'false,true,false': [0.0, 248, 0], 'true': [7.245, 86, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 49, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [7.166, 80, 178], 'false,false': [0.0, 0, 0], 'false,true,false,false': [7.15e-08, 227, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [1.67e-08, 40, 0], 'false,true,true,true': [0.0, 5, 0], 'true': [7.394, 89, 178], 'false,false': [0.0, 0, 0], 'false,true,false': [5.51e-09, 210, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.451, 71, 178], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [2.11e-08, 9, 0], 'true,true,true,true': [2.11e-08, 7, 0], 'false,true': [4.47e-08, 282, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [1.18e-08, 43, 0], 'false,true,false': [1.23e-07, 206, 0], 'true': [6.774, 75, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 327, 0], 'true,true,true': [7.22, 84, 178], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,false,false,true': [5.353, 69, 49], 'true,false,false,false': [0.0, 198, 0], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [1.05e-08, 38, 0], 'true,true,true': [1.782, 7, 129], 'true,false,true': [0.961, 58, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.20625069443342725, -4.554761126667309e-17], 'true': [0.20625069443342725, nan], 'false': [-4.554761126667309e-17, nan], 'true,true': [-1.1564823173178714e-17, 0.19008770854852555]}, {'': [0.20330461553774926, -7.428401328401047e-17], 'false,true': [3.532527805625498e-17, -5.3828995133340925e-17], 'false,true,true': [0.0, 9.25185853854297e-18], 'false': [-7.428401328401047e-17, nan]}, {'': [0.19574197465724666, -1.1378798259503384e-16], 'false,true': [-2.7078610356711136e-18, -8.511709855459534e-17], 'false,true,true': [0.0, -1.0793834961633467e-17], 'false': [-1.1378798259503384e-16, nan]}, {'': [0.19883950205293663, -5.329070518200751e-17], 'false,true': [1.4945309946877107e-17, -6.983660961351791e-17], 'false': [-5.329070518200751e-17, nan]}, {'': [0.19901359229721297, 6.275173617446536e-17], 'false,true,false': [nan, 2.249791151222784e-17], 'false,true': [-2.0391851472706958e-17, 2.249791151222784e-17], 'false': [6.275173617446536e-17, nan]}, {'': [0.20473690626470065, 3.395976310618126e-17], 'false,true': [4.934324553889585e-18, 3.066330258488528e-17], 'false,true,true': [0.0, 6.938893903907228e-18], 'false': [3.395976310618126e-17, nan]}, {'': [0.20752745347128018, 7.086529944415892e-18], 'true,true,true': [6.344131569286608e-17, 4.9343245538895844e-17], 'true': [0.20752745347128018, nan], 'false': [7.086529944415892e-18, nan], 'true,true': [-5.551115123125783e-17, 0.203835422009324]}, {'': [0.18135879251218323, 5.707170568354218e-17], 'false,true': [3.2273925134452225e-18, 7.329627735389383e-17], 'false': [5.707170568354218e-17, nan]}, {'': [0.19897460593211858, -7.06196908630069e-17], 'true': [0.19897460593211858, nan], 'false': [-7.06196908630069e-17, nan], 'true,true': [0.19897460593211858, nan]}, {'': [0.09905708624975273, nan], 'true,true,false': [-6.938893903907229e-19, 2.921639538487254e-18], 'true,false': [0.015919587024718233, 0.09747206586624964], 'true,false,false': [0.24281815570238463, -1.6821560979169039e-18], 'true,true': [0.02334263341891259, 1.290957005378089e-18], 'true': [0.04390836503042868, 0.08486542447097503]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(A, E).;true;true
6;true,true;genre(B, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true
9;true,false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 4,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.141851064900488;  // std dev = 0,000, 279,000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839116;  // std dev = 6,50e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.12544463852839177;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.11231637819360635;  // std dev = 2,36e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.11231637819360674;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.1015963294878363;  // std dev = 1,83e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(A, D) )
%   | then return -0.092691276189261;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 1,49e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0851847513883968;  // std dev = 3,73e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.08518475138839678;  // std dev = 1,05e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109162;  // std dev = 2,89e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.07877675473109162;  // std dev = 3,07e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.07877675473109169;  // std dev = 3,23e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109166;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.06842697784420279;  // std dev = 0,000, 260,000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.07484318819008945;  // std dev = 0,742, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | | | else return 0.10870504659226148;  // std dev = 0,641, 94,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.05570624182429258;  // std dev = 0,872, 81,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=49 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.922 seconds
Total inference time: 2.856 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067165
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.594 seconds
Refined model CLL: -0.067165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.105 seconds
Total inference time: 2.856 seconds
AUC ROC: 1.0
Total revision time: 9.105
Best scored revision CLL: -0.067165


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:37:29
{'CLL': -0.064092, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.285842, 'Precision': [0.069012, 0.5], 'AUC ROC': 0.993692, 'AUC PR': 0.961008, 'Recall': 1.0, 'Inference time': 2.434, 'Learning time': 1.913, 'F1': 0.129114}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 2.856, 'Learning time': 9.105, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(G, E), venue(G, A).;false;false
0;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false,true,true;author(K, I), title(K, J).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordtitle(J, H).;true;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false;haswordvenue(A, I), haswordauthor(J, I).;false;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;true
6;true,true;author(F, E), venue(F, A).;true;true
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,true;samebib(F, G), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,true;haswordvenue(B, D).;false;true
8;true,false,true;haswordtitle(I, G).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.5297907261442888;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.14185106490048766;  // std dev = 8,12e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37006567608881136;  // std dev = 4,277, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2665345666718737;  // std dev = 4,472, 81,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1123163781936063;  // std dev = 4,93e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3371468936916373;  // std dev = 3,762, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783623;  // std dev = 3,80e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24201113492911944;  // std dev = 3,832, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13860938823188443;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09435498490403192;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3572124860908502;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.15061460379637492;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07912682188589235;  // std dev = 0,013, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06945729046530545;  // std dev = 4,056, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07403525796670479;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07322246632884974;  // std dev = 1,67e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.11486643736648587;  // std dev = 3,702, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06848560532430309;  // std dev = 0,007, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3967329179228262;  // std dev = 1,15e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06416872042302581;  // std dev = 5,89e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(A, F) )
%   | | then return -0.19134269980618945;  // std dev = 0,180, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.6032670820771737;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.06416872042302578;  // std dev = 2,04e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.20339
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.195 seconds
Total inference time: 2.717 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.21725
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.261 seconds
Parameter learned model CLL: -0.21725


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [3.844, 22, 45], 'false,true': [8.12e-09, 63, 0], 'true,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [5.27e-09, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.277, 32, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 3, 0], 'true': [4.472, 36, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [4.93e-09, 53, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 5, 0], 'false,true,false': [3.8e-08, 55, 0], 'true': [3.762, 21, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 5, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.832, 23, 45], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [2.63e-09, 7, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.108, 27, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [2.46e-09, 57, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.47, 22, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.013, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.007, 9, 0], 'false,true,false': [1.67e-08, 67, 0], 'true': [4.056, 28, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.007, 78, 0], 'true,true,true': [3.702, 21, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,false,false,true': [0.0, 30, 0], 'true,false,false,false': [2.04e-08, 54, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.89e-09, 11, 0], 'true,true,true': [1.15e-07, 0, 45], 'true,false,true': [0.18, 2, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2268431001890362, 6.344131569286608e-17], 'true': [0.2268431001890362, nan], 'false': [6.344131569286608e-17, nan], 'true,true': [0.0, 0.22053909556694173]}, {'': [0.23761312672882906, -3.633457171500512e-17], 'false,true': [4.625929269271485e-18, -3.172065784643304e-17], 'false,true,true': [nan, 4.625929269271485e-18], 'false': [-3.633457171500512e-17, nan]}, {'': [0.24691358024691243, 8.186682922373123e-06], 'false,true': [4.220846189825965e-05, 2.3042364662031552e-17], 'false,true,true': [-4.625929269271485e-18, 0.0], 'false': [8.186682922373123e-06, nan]}, {'': [0.21445132778967044, 3.14563190310461e-17], 'false,true': [0.0, 2.62416351275037e-17], 'false': [3.14563190310461e-17, nan]}, {'': [0.2159692003844913, -1.820037745287142e-18], 'false,true,false': [nan, -9.912705577010326e-19], 'false,true': [0.0, -9.912705577010326e-19], 'false': [-1.820037745287142e-18, nan]}, {'': [0.2343749999999996, 1.2738375609034647e-06], 'false,true': [9.197691861233953e-06, 5.843279076974508e-18], 'false,true,true': [0.0, 9.912705577010326e-19], 'false': [1.2738375609034647e-06, nan]}, {'': [0.2210325776533194, 2.6143362745797773e-06], 'true,true,true': [nan, 0.0], 'true': [0.2210325776533194, nan], 'false': [2.6143362745797773e-06, nan], 'true,true': [0.0, 0.22053909556694162]}, {'': [0.22538887253466283, 6.94828384334726e-07], 'false,true': [5.285041972538805e-06, 4.14262322621327e-18], 'false': [6.94828384334726e-07, nan]}, {'': [0.2076431185805875, 5.89802791307347e-07], 'true': [0.2076431185805875, nan], 'false': [5.89802791307347e-07, nan], 'true,true': [0.2076431185805875, nan]}, {'': [0.12825265452864648, nan], 'true,true,false': [nan, 3.1540426835941946e-18], 'true,false': [0.016185633492712265, 0.06672559673070584], 'true,false,false': [-7.105427357601002e-16, 7.709882115452476e-18], 'true,true': [2.9605947323337506e-16, 3.1540426835941946e-18], 'true': [0.033530933837307667, 0.0656472889624985]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360635;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10242094861904942;  // std dev = 0,003, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.13221537936718464;  // std dev = 0,137, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.09262194933633626;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08501641944028099;  // std dev = 0,000694, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.09429046334754465;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0851259111757901;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0851847513883968;  // std dev = 1,29e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07596759946971826;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.20975771563253542;  // std dev = 4,94e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07878897161134853;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07872622734864844;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07325152475669423;  // std dev = 1,06e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07308160509109775;  // std dev = 0,002, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.0740150265913766;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 5,27e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842686525016603;  // std dev = 3,90e-07, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06844461715281319;  // std dev = 2,47e-05, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06613569152491662;  // std dev = 2,25e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0683368515956235;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.11749045750050785;  // std dev = 0,055, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.09625486427657545;  // std dev = 0,078, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06411231567032612;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419389629970262;  // std dev = 1,55e-05, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06419736865669108;  // std dev = 6,27e-05, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070491
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 2.452 seconds
Total inference time: 3.347 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.407 seconds
Refined model CLL: -0.065402


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070491
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 6.3149999999999995 seconds
Total inference time: 3.347 seconds
AUC ROC: 1.0
Total revision time: 6.3149999999999995
Best scored revision CLL: -0.065402


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:37:42
{'CLL': -0.070491, 'Precision': [0.870801, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.20339, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978805, 'AUC PR': 0.865091, 'Recall': 0.824926, 'Inference time': 2.717, 'Learning time': 1.195, 'F1': 0.904065}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.347, 'Learning time': 6.3149999999999995, 'F1': 0.930939}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(G, E), venue(G, A).;false;false
0;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false,true,true;author(K, I), title(K, J).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;haswordtitle(J, H).;true;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false,true;title(K, J), venue(K, B).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(H, E), venue(H, A).;false;false
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false,true,true;author(G, F), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;true;true
4;false,false,true;title(K, J), venue(K, B).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true,false;haswordtitle(H, C).;false;false
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false;haswordvenue(A, I), haswordauthor(J, I).;false;true
6;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;true
6;true,true;author(F, E), venue(F, A).;true;true
6;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
6;true,true,true;samebib(F, G), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,true;haswordvenue(B, D).;false;true
8;true,false,true;haswordtitle(I, G).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3648133796043899;  // std dev = 4,326, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41116058987825566;  // std dev = 3,689, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360628;  // std dev = 5,74e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3339592736299035;  // std dev = 3,596, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1015963294878362;  // std dev = 3,94e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18940347594683213;  // std dev = 3,991, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12432165565762704;  // std dev = 4,091, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.4070095547042453;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.14837289241794765;  // std dev = 0,466, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.07877675473109166;  // std dev = 3,80e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03329706397190047;  // std dev = 4,214, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.11404364516564774;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3941992070339744;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, F) )
%   | | then return -0.23336609633983305;  // std dev = 0,309, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3116831459072021;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.238373
   Precision = 0.104077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.188531


Total learning time: 1.182 seconds
Total inference time: 3.425 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.247175
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total scoring time: 1.49 seconds
Parameter learned model CLL: -0.247175


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [3.956, 24, 45], 'false,true': [8.12e-09, 62, 0], 'true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.326, 33, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 65, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.689, 20, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [5.74e-09, 60, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 4, 0], 'false,true,false': [3.94e-08, 60, 0], 'true': [3.596, 19, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [3.991, 25, 45], 'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 63, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.091, 27, 45], 'false,false': [0.0, 0, 0], 'false,true,false': [2.08e-09, 65, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.466, 21, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [3.8e-08, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 67, 0], 'true': [4.214, 30, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [2.89e-08, 70, 0], 'true,true,true': [3.721, 20, 45], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)'}, {'true,false,false,true': [2.657, 24, 10], 'true,false,false,false': [0.0, 58, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.32e-09, 3, 0], 'true,true,true': [0.0, 0, 35], 'true,false,true': [0.309, 5, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2268431001890362, 6.446456272017038e-17], 'true': [0.2268431001890362, nan], 'false': [6.446456272017038e-17, nan], 'true,true': [nan, 0.2268431001890362]}, {'': [0.23996763064960883, -3.314098580970616e-17], 'false,true': [0.0, -3.75767792950053e-17], 'false,true,true': [nan, 0.0], 'false': [-3.314098580970616e-17, nan]}, {'': [0.2093626685608055, 3.45807171604557e-17], 'false,true': [0.0, 3.3306690738754695e-17], 'false,true,true': [nan, 0.0], 'false': [3.45807171604557e-17, nan]}, {'': [0.20202526533745918, 2.949029909160572e-17], 'false,true': [0.0, 2.590520390792032e-17], 'false': [2.949029909160572e-17, nan]}, {'': [0.22757306816682657, -1.734723475976807e-18], 'false,true,false': [nan, 0.0], 'false,true': [0.0, 0.0], 'false': [-1.734723475976807e-18, nan]}, {'': [0.23241844191064992, 4.081702296416017e-18], 'false,true': [0.0, 4.270088556250602e-18], 'false,true,true': [nan, 0.0], 'false': [4.081702296416017e-18, nan]}, {'': [0.2193667212577408, 2.0045693500176437e-17], 'true,true,true': [nan, 0.0], 'true': [0.2193667212577408, nan], 'false': [2.0045693500176437e-17, nan], 'true,true': [0.0, 0.21694214876033063]}, {'': [0.2367613005515977, -2.44902137784961e-18], 'false,true': [0.0, -2.4855739357279623e-18], 'false': [-2.44902137784961e-18, nan]}, {'': [0.2130177514792896, 1.1895246692412391e-17], 'true': [0.2130177514792896, nan], 'false': [1.1895246692412391e-17, nan], 'true,true': [0.2130177514792896, nan]}, {'': [0.12143223868053128, nan], 'true,true,false': [nan, 5.782411586589357e-19], 'true,false': [0.01907995265358805, 0.09099723571870628], 'true,false,false': [0.207612456747405, -3.3498108501621104e-18], 'true,true': [-2.5376526277146434e-17, 5.782411586589357e-19], 'true': [0.015278979894730477, 0.0875853950955988]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839682;  // std dev = 2,28e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,18e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.21595661032035535;  // std dev = 0,660, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06842697784420272;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.0614209227146324;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06408661537187206;  // std dev = 0,008, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079223
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.787 seconds
Total inference time: 3.143 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066015
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.391 seconds
Refined model CLL: -0.066015


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079223
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.85 seconds
Total inference time: 3.143 seconds
AUC ROC: 1.0
Total revision time: 6.85
Best scored revision CLL: -0.066015


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:37:56
{'CLL': -0.079223, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0, 'parameter': {'CLL': -0.238373, 'Precision': [0.104077, 0.5], 'AUC ROC': 0.982257, 'AUC PR': 0.888508, 'Recall': 1.0, 'Inference time': 3.425, 'Learning time': 1.182, 'F1': 0.188531}, 'AUC PR': 1.0, 'Recall': 1.0, 'Inference time': 3.143, 'Learning time': 6.85, 'F1': 0.852086}


