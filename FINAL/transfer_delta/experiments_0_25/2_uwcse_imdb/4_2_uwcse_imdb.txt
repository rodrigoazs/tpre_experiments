Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.15226658215833588;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.6522665821583351;  // std dev = 2,358, 34,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else return 0.5248156017661787;  // std dev = 3,055, 42,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   else return -0.14185106490048816;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.5194734122109546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109548;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), professor(H) )
%   | | | then return 0.11636225779630098;  // std dev = 1,900, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.619214921439247;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.5791536844429672;  // std dev = 2,985, 58,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | | else return 0.4352258444763723;  // std dev = 2,271, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   else return -0.1254446385283914;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, E) )
%   | | | then return 0.3053664367462845;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5675378428217183;  // std dev = 0,060, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5586121450330669;  // std dev = 0,067, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.12154545191443333;  // std dev = 2,597, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.5131431755214672;  // std dev = 0,942, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.24067402123410664;  // std dev = 1,456, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.42519945116631636;  // std dev = 3,401, 65,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=50 */
%   else return -0.11231637819360638;  // std dev = 6,66e-08, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.2651057906146961;  // std dev = 0,893, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4214437325378272;  // std dev = 0,105, 37,000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( projectmember(F, B) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.3220792954378023;  // std dev = 0,635, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6970277267699142;  // std dev = 0,126, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(H, B), ta(I, A, J) )
%   | | | then return 0.39748914326337825;  // std dev = 2,344, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | | else return 0.21643072998386062;  // std dev = 3,330, 54,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   else return -0.10159632948783646;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(G, I, D), publication(E, I) )
%   | | | then return 0.10512264035745356;  // std dev = 0,805, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.41572828680897916;  // std dev = 0,184, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( ta(J, K, D), publication(E, K) )
%   | | | then return 0.3011734720032867;  // std dev = 1,488, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.16843127921808038;  // std dev = 2,206, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.3265905430413005;  // std dev = 0,078, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.21819476105819305;  // std dev = 1,346, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( publication(Q, A) )
%   | | | then return -0.029429665384145015;  // std dev = 2,425, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.1822501713621614;  // std dev = 3,036, 43,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else return -0.09269127618926089;  // std dev = 4,94e-08, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then return 0.286369750627397;  // std dev = 0,155, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( publication(D, H), tempadvisedby(I, H) )
%   | | | then return 0.1642558613359436;  // std dev = 1,328, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.2737114405406644;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then if ( publication(L, A), ta(M, A, N) )
%   | | | then return -0.4302913712946978;  // std dev = 0,283, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11732010287484262;  // std dev = 1,405, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tempadvisedby(P, B), ta(Q, P, R) )
%   | | | then return 0.006843973522100382;  // std dev = 2,782, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.19644904668418284;  // std dev = 3,692, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   else return -0.08414441412349383;  // std dev = 0,655, 176,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.23940664116421126;  // std dev = 0,069, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.28779261857742416;  // std dev = 0,335, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.016765715608493936;  // std dev = 1,266, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( projectmember(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.5564865845791551;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4184511514920513;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.22775919519638482;  // std dev = 0,121, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.16877106608088804;  // std dev = 3,762, 86,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   else return -0.07885228611560234;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1925252525720461;  // std dev = 0,124, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return 0.41834487013525107;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.06484458846985419;  // std dev = 4,134, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | | | else return -0.05863261120800436;  // std dev = 2,320, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else return -0.07331174493129347;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.12909070991314237;  // std dev = 0,987, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.04298373661126536;  // std dev = 2,907, 49,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | | else if ( ta(H, A, I), publication(J, A) )
%   | | | then return 0.029981724089146428;  // std dev = 1,368, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.2840631694155138;  // std dev = 1,298, 39,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else if ( ta(K, A, L), publication(M, B) )
%   | | then return 0.39519641421016416;  // std dev = 0,239, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(N, B) )
%   | | | then return -0.24564278553560792;  // std dev = 0,909, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.03646718697270723;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( ta(P, A, Q) )
%   | then return -0.07609826549119977;  // std dev = 0,057, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06429169239890872;  // std dev = 0,049, 135,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, A, E) )
%   then if ( publication(F, C) )
%   | then if ( publication(F, B) )
%   | | then return 0.22817835369040176;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.21143759097369594;  // std dev = 1,011, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(G, C, H) )
%   | | then return 0.2541528249801966;  // std dev = 0,128, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.1628162331261308;  // std dev = 0,322, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( hasposition(B, I), student(A) )
%   | then if ( publication(J, A), ta(K, A, L) )
%   | | then if ( hasposition(M, I), publication(J, M) )
%   | | | then return -0.25832619994624406;  // std dev = 1,316, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.15768893537385498;  // std dev = 0,638, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(N, B), publication(N, A) )
%   | | | then return 0.14799336379053676;  // std dev = 0,118, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.0026898441779373435;  // std dev = 3,798, 77,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=46 */
%   | else return -0.06678675170590018;  // std dev = 0,061, 194,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=1 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,false;publication(F, B), tempadvisedby(G, B).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,true;publication(C, D), tempadvisedby(D, E).;false;false
1;true,false,true;publication(F, H), professor(H).;false;false
1;true,false;publication(F, A), publication(G, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(H, I), professor(I).;false;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false,false;projectmember(J, B).;false;false
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;publication(H, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,false;publication(H, B), ta(I, A, J).;false;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;false
3;true,false,true;publication(G, B).;false;false
3;true,false;projectmember(F, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
4;true,true,true;ta(G, I, D), publication(E, I).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,false;publication(Q, A).;false;false
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(L, A), ta(M, A, N).;false;false
5;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
5;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
5;true,true;publication(D, E), ta(F, E, G).;false;true
5;true;publication(D, A), publication(D, B).;true;true
5;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;publication(H, A).;false;false
6;true,true,false;publication(F, A).;false;false
6;true,false,false;publication(I, B), publication(I, A).;false;false
6;true,true;publication(E, A), publication(E, B).;false;true
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(G, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,false;publication(F, B).;false;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;projectmember(D, B), publication(E, A).;false;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;publication(G, A).;false;false
8;false;ta(P, A, Q).;false;false
8;true,false;ta(K, A, L), publication(M, B).;false;true
8;true,false,false;publication(N, B).;false;false
8;true,true,false;ta(H, A, I), publication(J, A).;false;false
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, A, E).;true;true
9;false,true;publication(J, A), ta(K, A, L).;true;true
9;false,true,true;hasposition(M, I), publication(J, M).;false;false
9;false;hasposition(B, I), student(A).;true;false
9;false,true,false;publication(N, B), publication(N, A).;false;false
9;true,true;publication(F, B).;false;false
9;true;publication(F, C).;true;true
9;true,false;ta(G, C, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.30645656704465274;  // std dev = 0,574, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 7,30e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14084164898989468;  // std dev = 1,500, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08571655799321923;  // std dev = 0,036, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.23186671139378828;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.11299887356264961;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08281259383142163;  // std dev = 0,080, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19315052871871125;  // std dev = 2,11e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.10215856833258387;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07752768446054505;  // std dev = 0,076, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.09472853933891276;  // std dev = 0,988, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | | | else return -0.0690554811250307;  // std dev = 0,049, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06789869330456255;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(C, B) )
%   | then return -8.097572403289292E-4;  // std dev = 1,387, 179,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077566
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.515 seconds
Total inference time: 4.446 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076036
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.858 seconds
Parameter learned model CLL: -0.076036


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [8.43e-08, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,false,true,true': [0.0, 8, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 105, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 56], 'false': [8.43e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, B)', 'true,false': 'genre(B, E)'}, {'true,false,true,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 110, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.574, 2, 56], 'false': [7.3e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.036, 69, 0], 'true,true,true': [1.5, 29, 56], 'false': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 4, 0], 'false': [0.08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [2.11e-08, 0, 56], 'true,false,true': [0.0, 3, 0], 'false': [0.076, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(C, D)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.049, 85, 0], 'true,true,true,true': [0.988, 22, 56], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.387, 123, 56], 'false': [0.0, 0, 0]}]]
[{'': [0.04826199367997677, 6.640586315514955e-17], 'true,false,true': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.07808133730087874, -8.458842092382146e-18], 'true,true': [-1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014842341924197077, 6.70323335622736e-17], 'true,false,true': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.013005405691145715, -6.0557619525008536e-18], 'true,true': [-3.489272363107635e-16, nan], 'true,false,true': [-1.1564823173178713e-18, nan], 'true': [-3.489272363107635e-16, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.005689964312795762, 4.263256414560601e-17], 'true,true': [0.005689964312795762, nan], 'true': [0.005689964312795762, nan]}, {'': [0.02730473304236687, -1.3877787807814458e-18], 'true,false,true': [1.9231642015450856e-05, nan], 'true,true': [0.026456251363768907, nan], 'true': [0.026456251363768907, 1.9231642015450856e-05], 'true,false': [1.9231642015450856e-05, nan]}, {'': [0.00740023023832365, 5.704440316709889e-05], 'true,true': [-9.516197353929913e-17, 0.0], 'true': [0.00740023023832365, nan], 'true,true,false': [0.0, nan]}, {'': [0.004208806018560833, 5.638417028648334e-05], 'true': [7.93016446160826e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.012692472865062457, 0.0], 'true,true': [0.012692472865062457, nan], 'true': [0.012692472865062457, nan], 'true,true,true': [0.012504137299842786, 2.869710496300536e-05]}, {'': [0.010752900435198052, nan], 'true': [0.010752900435198052, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 7,15e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839689;  // std dev = 7,45e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839683;  // std dev = 4,21e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.0851847513883969;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109158;  // std dev = 6,41e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0732462257633371;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 4,71e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( female(A) )
%   | | | then return 0.1448448996673182;  // std dev = 0,217, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.1320090922244952;  // std dev = 0,365, 32,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13570585177193165;  // std dev = 0,006, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07802718443464311;  // std dev = 0,000798, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.477 seconds
Total inference time: 2.556 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06386
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.319 seconds
Refined model CLL: -0.06386


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.1690000000000005 seconds
Total inference time: 2.556 seconds
AUC ROC: 1.0
Total revision time: 6.1690000000000005
Best scored revision CLL: -0.06386


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 02:16:40
{'Inference time': 2.556, 'CLL': -0.065346, 'parameter': {'Inference time': 4.446, 'CLL': -0.077566, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.515, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.1690000000000005, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,false;publication(F, B), tempadvisedby(G, B).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,true;publication(C, D), tempadvisedby(D, E).;false;false
1;true,false,true;publication(F, H), professor(H).;false;false
1;true,false;publication(F, A), publication(G, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(H, I), professor(I).;false;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false,false;projectmember(J, B).;false;false
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;publication(H, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,false;publication(H, B), ta(I, A, J).;false;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;false
3;true,false,true;publication(G, B).;false;false
3;true,false;projectmember(F, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
4;true,true,true;ta(G, I, D), publication(E, I).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,false;publication(Q, A).;false;false
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(L, A), ta(M, A, N).;false;false
5;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
5;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
5;true,true;publication(D, E), ta(F, E, G).;false;true
5;true;publication(D, A), publication(D, B).;true;true
5;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;publication(H, A).;false;false
6;true,true,false;publication(F, A).;false;false
6;true,false,false;publication(I, B), publication(I, A).;false;false
6;true,true;publication(E, A), publication(E, B).;false;true
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(G, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,false;publication(F, B).;false;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;projectmember(D, B), publication(E, A).;false;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;publication(G, A).;false;false
8;false;ta(P, A, Q).;false;false
8;true,false;ta(K, A, L), publication(M, B).;false;true
8;true,false,false;publication(N, B).;false;false
8;true,true,false;ta(H, A, I), publication(J, A).;false;false
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, A, E).;true;true
9;false,true;publication(J, A), ta(K, A, L).;true;true
9;false,true,true;hasposition(M, I), publication(J, M).;false;false
9;false;hasposition(B, I), student(A).;true;false
9;false,true,false;publication(N, B), publication(N, A).;false;false
9;true,true;publication(F, B).;false;false
9;true;publication(F, C).;true;true
9;true,false;ta(G, C, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,29e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2819553043461425;  // std dev = 0,964, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.152132594429896;  // std dev = 1,493, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08798721264363094;  // std dev = 0,080, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.23422785800730622;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.11034319433362552;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.084545226170225;  // std dev = 0,094, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19484693117055052;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.09996770036128377;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07720279585597078;  // std dev = 0,081, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.07700703556400335;  // std dev = 1,138, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | | | else return -0.06855583386253926;  // std dev = 0,040, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06780965354700204;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(C, B) )
%   | then return 0.008519059267018264;  // std dev = 1,395, 166,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.419 seconds
Total inference time: 4.461 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.939 seconds
Parameter learned model CLL: -0.076088


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [8.94e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,false,true,true': [0.0, 5, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 106, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.29e-08, 0, 58], 'false': [8.16e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, B)', 'true,false': 'genre(B, E)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58], 'false': [4.83e-08, 92, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.964, 6, 58], 'false': [5.16e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.08, 73, 0], 'true,true,true': [1.493, 27, 58], 'false': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false,true': [2.63e-09, 5, 0], 'false': [0.094, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true': [0.0, 5, 0], 'false': [0.081, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(C, D)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.04, 77, 0], 'true,true,true,true': [1.138, 32, 58], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.395, 108, 58], 'false': [0.0, 0, 0]}]]
[{'': [0.06035379812695064, 7.91446116564468e-17], 'true,false,true': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.052161020059183986, -8.3790416952842e-18], 'true,true': [-1.2250736823450003e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0378756149402803, 6.5953843047039e-17], 'true,false,true': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01626384593324757, 2.5342047301226398e-17], 'true,true': [-3.3689526264487507e-16, nan], 'true,false,true': [0.0, nan], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014520006238641608, 2.400482215405744e-17], 'true,true': [0.014520006238641608, nan], 'true': [0.014520006238641608, nan]}, {'': [0.02847621739271118, 0.0], 'true,false,true': [8.770064480584448e-05, nan], 'true,true': [0.026217708808766456, nan], 'true': [0.026217708808766456, 8.770064480584448e-05], 'true,false': [8.770064480584448e-05, nan]}, {'': [0.008675099756182305, 7.898895224660761e-05], 'true,true': [-3.828355257328126e-17, 1.3877787807814458e-18], 'true': [0.008675099756182305, nan], 'true,true,false': [1.3877787807814458e-18, nan]}, {'': [0.0063506030284511215, 6.059186011915531e-05], 'true': [-6.125368411725002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.013024693346725433, 0.0], 'true,true': [0.013024693346725433, nan], 'true': [0.013024693346725433, nan], 'true,true,true': [0.014380488335786184, 2.1019425852491986e-05]}, {'': [0.01172045399735217, nan], 'true': [0.01172045399735217, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.092691276189261;  // std dev = 3,94e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839693;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.08518475138839682;  // std dev = 4,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return -0.0851847513883969;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109157;  // std dev = 6,75e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333706;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 4,89e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3,94e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.547 seconds
Total inference time: 3.052 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063437
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.341 seconds
Refined model CLL: -0.063437


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.246 seconds
Total inference time: 3.052 seconds
AUC ROC: 1.0
Total revision time: 6.246
Best scored revision CLL: -0.063437


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 02:16:54
{'Inference time': 3.052, 'CLL': -0.064362, 'parameter': {'Inference time': 4.461, 'CLL': -0.077954, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.419, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.246, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,false;publication(F, B), tempadvisedby(G, B).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,true;publication(C, D), tempadvisedby(D, E).;false;false
1;true,false,true;publication(F, H), professor(H).;false;false
1;true,false;publication(F, A), publication(G, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(H, I), professor(I).;false;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false,false;projectmember(J, B).;false;false
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;publication(H, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,false;publication(H, B), ta(I, A, J).;false;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;false
3;true,false,true;publication(G, B).;false;false
3;true,false;projectmember(F, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
4;true,true,true;ta(G, I, D), publication(E, I).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,false;publication(Q, A).;false;false
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(L, A), ta(M, A, N).;false;false
5;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
5;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
5;true,true;publication(D, E), ta(F, E, G).;false;true
5;true;publication(D, A), publication(D, B).;true;true
5;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;publication(H, A).;false;false
6;true,true,false;publication(F, A).;false;false
6;true,false,false;publication(I, B), publication(I, A).;false;false
6;true,true;publication(E, A), publication(E, B).;false;true
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(G, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,false;publication(F, B).;false;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;projectmember(D, B), publication(E, A).;false;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;publication(G, A).;false;false
8;false;ta(P, A, Q).;false;false
8;true,false;ta(K, A, L), publication(M, B).;false;true
8;true,false,false;publication(N, B).;false;false
8;true,true,false;ta(H, A, I), publication(J, A).;false;false
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, A, E).;true;true
9;false,true;publication(J, A), ta(K, A, L).;true;true
9;false,true,true;hasposition(M, I), publication(J, M).;false;false
9;false;hasposition(B, I), student(A).;true;false
9;false,true,false;publication(N, B), publication(N, A).;false;false
9;true,true;publication(F, B).;false;false
9;true;publication(F, C).;true;true
9;true,false;ta(G, C, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004881;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.12544463852839155;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360682;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21264381076590427;  // std dev = 2,820, 241,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926064;  // std dev = 2,98e-08, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1862716109589393;  // std dev = 2,406, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.09365123969372142;  // std dev = 0,170, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3,16e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.24059544216288234;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.10319520404718194;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08216172816825733;  // std dev = 0,142, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19940564442723985;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.09402840430959387;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09402840430959382;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07638778328191734;  // std dev = 0,137, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.12138226726053207;  // std dev = 1,483, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | | else return -0.07297645584767457;  // std dev = 0,124, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0680121159168232;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(C, B) )
%   | then return 0.0045712210403914474;  // std dev = 2,448, 525,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.181 seconds
Total inference time: 4.432 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.338 seconds
Parameter learned model CLL: -0.078653


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.16e-08, 49, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.09e-06, 0, 178], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,false,true,true': [0.0, 69, 0], 'true,true,true': [0.0, 0, 178], 'false': [0.0, 309, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.36e-08, 46, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [4.41e-08, 0, 178], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false': 'movie(G, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 31, 0], 'true,false,false,true': [0.0, 26, 0], 'true,true,true': [3.77e-07, 0, 178], 'false': [0.0, 285, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.82, 63, 178], 'false': [2.98e-08, 293, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.17, 185, 0], 'true,true,true': [2.406, 59, 178], 'false': [3.16e-08, 93, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 178], 'true,true,false,true': [0.0, 66, 0], 'false': [0.142, 291, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 29, 0], 'true,true': [0.0, 0, 178], 'true,false,false,true': [7.45e-09, 22, 0], 'false': [0.137, 295, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(C, D)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.124, 209, 0], 'true,true,true,true': [1.483, 41, 178], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 100, 0]}], ['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [2.448, 347, 178], 'false': [0.0, 0, 0]}]]
[{'': [0.16926390964311952, -8.430168051391019e-17], 'true,false,true': [5.437827059388522e-17, nan], 'true': [6.706246045376226e-15, 5.437827059388522e-17], 'true,false': [5.437827059388522e-17, nan]}, {'': [0.1437157492517024, -6.611036780939444e-17], 'true,true': [-3.193450497798203e-15, nan], 'true,false,true': [-3.539841527790354e-17, nan], 'true': [-3.193450497798203e-15, -3.539841527790354e-17], 'true,false': [-3.539841527790354e-17, nan]}, {'': [0.07274819027234934, -8.731245481797842e-17], 'true,false,true': [1.206764157201257e-17, nan], 'true': [1.9559884299013994e-15, 1.206764157201257e-17], 'true,false': [1.206764157201257e-17, nan]}, {'': [0.04950827323520463, -6.232831015439475e-17], 'true': [7.983626244495507e-16, 2.1425356615573195e-17], 'true,false,false': [-1.2810265668751807e-17, nan], 'true,true': [7.983626244495507e-16, nan], 'true,false,true': [-1.0744093786695063e-17, nan], 'true,false': [-1.0744093786695063e-17, -1.2810265668751807e-17]}, {'': [0.03299696328951122, 3.031325664505547e-18], 'true,true': [0.03299696328951122, nan], 'true': [0.03299696328951122, nan]}, {'': [0.033077848051198726, 1.0744093786695063e-17], 'true,false,true': [0.0001569576013185129, nan], 'true,true': [0.02442485866782071, nan], 'true': [0.02442485866782071, 0.0001569576013185129], 'true,false': [0.0001569576013185129, nan]}, {'': [0.023322354792666086, 6.919180693288624e-05], 'true,true': [-1.3971345927867138e-16, -1.682156097916904e-17], 'true': [0.023322354792666086, nan], 'true,true,false': [-1.682156097916904e-17, nan]}, {'': [0.014905282981208417, 6.387677969302596e-05], 'true,false,false': [2.523234146875356e-18, nan], 'true': [-1.29733926473052e-16, -8.707631565687502e-18], 'true,false': [-7.656710514656252e-18, 2.523234146875356e-18]}, {'': [0.014610522382128052, 5.551115123125783e-19], 'true,true': [0.014610522382128052, nan], 'true': [0.014610522382128052, nan], 'true,true,true': [0.010037523644566948, 7.336787449627352e-05]}, {'': [0.011416978550467846, nan], 'true': [0.011416978550467846, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
3;true,false;genre(B, E).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
7;true,false;genre(B, D), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048802;  // std dev = 0,000, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839183;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,21e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360682;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.10159632948783656;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926065;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 1,05e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.08518475138839679;  // std dev = 7,45e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.08518475138839678;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5,37e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.07877675473109157;  // std dev = 4,83e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310917;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.0787767547310917;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.07877675473109168;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.07324622576333704;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( director(B) )
%   | | | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420262;  // std dev = 2,11e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 3,33e-08, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | | else return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420261;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.06842697784420268;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420267;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1340070300080109;  // std dev = 6,18e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06419184008202623;  // std dev = 0,000, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.895 seconds
Total inference time: 2.864 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.524 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.937999999999999 seconds
Total inference time: 2.864 seconds
AUC ROC: 1.0
Total revision time: 8.937999999999999
Best scored revision CLL: -0.065435


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 02:17:11
{'Inference time': 2.864, 'CLL': -0.063555, 'parameter': {'Inference time': 4.432, 'CLL': -0.077628, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 2.181, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 8.937999999999999, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,false;publication(F, B), tempadvisedby(G, B).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,true;publication(C, D), tempadvisedby(D, E).;false;false
1;true,false,true;publication(F, H), professor(H).;false;false
1;true,false;publication(F, A), publication(G, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(H, I), professor(I).;false;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false,false;projectmember(J, B).;false;false
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;publication(H, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,false;publication(H, B), ta(I, A, J).;false;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;false
3;true,false,true;publication(G, B).;false;false
3;true,false;projectmember(F, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
4;true,true,true;ta(G, I, D), publication(E, I).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,false;publication(Q, A).;false;false
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(L, A), ta(M, A, N).;false;false
5;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
5;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
5;true,true;publication(D, E), ta(F, E, G).;false;true
5;true;publication(D, A), publication(D, B).;true;true
5;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;publication(H, A).;false;false
6;true,true,false;publication(F, A).;false;false
6;true,false,false;publication(I, B), publication(I, A).;false;false
6;true,true;publication(E, A), publication(E, B).;false;true
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(G, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,false;publication(F, B).;false;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;projectmember(D, B), publication(E, A).;false;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;publication(G, A).;false;false
8;false;ta(P, A, Q).;false;false
8;true,false;ta(K, A, L), publication(M, B).;false;true
8;true,false,false;publication(N, B).;false;false
8;true,true,false;ta(H, A, I), publication(J, A).;false;false
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, A, E).;true;true
9;false,true;publication(J, A), ta(K, A, L).;true;true
9;false,true,true;hasposition(M, I), publication(J, M).;false;false
9;false;hasposition(B, I), student(A).;true;false
9;false,true,false;publication(N, B), publication(N, A).;false;false
9;true,true;publication(F, B).;false;false
9;true;publication(F, C).;true;true
9;true,false;ta(G, C, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2518113266019145;  // std dev = 1,132, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16349053330569652;  // std dev = 1,293, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08862542378148915;  // std dev = 0,065, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2376142269263113;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.10735743001135958;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0841801405804719;  // std dev = 0,091, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19727421456066985;  // std dev = 3,65e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.09749440144441533;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07859491846829397;  // std dev = 0,087, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.06868705445141764;  // std dev = 1,063, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | | else return -0.06985475539001353;  // std dev = 0,050, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0677447618012564;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(C, B) )
%   | then return 0.011767876792439012;  // std dev = 1,244, 122,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077539
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.31 seconds
Total inference time: 5.286 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077697
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.538 seconds
Parameter learned model CLL: -0.077697


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [6.66e-08, 65, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,false,true,true': [0.0, 6, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 76, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [7.3e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, B)', 'true,false': 'genre(B, E)'}, {'true,false,true,true': [3.73e-09, 8, 0], 'true,true,true': [0.0, 0, 45], 'false': [5.37e-08, 87, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.132, 9, 45], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.065, 45, 0], 'true,true,true': [1.293, 19, 45], 'false': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false,true': [7.45e-09, 8, 0], 'false': [0.091, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [3.65e-08, 0, 45], 'true,false,true': [0.0, 10, 0], 'false': [0.087, 99, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(C, D)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.05, 56, 0], 'true,true,true,true': [1.063, 29, 45], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.244, 77, 45], 'false': [0.0, 0, 0]}]]
[{'': [0.09000000000000079, 6.832141690000964e-17], 'true,false,true': [-2.7755575615628915e-18, nan], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.07410586634586562, -2.6294755846385285e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false,true': [-2.3129646346357427e-18, nan], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.026121113751917464, 5.98771968337163e-17], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-3.947459643111668e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.03453579098627794, 3.317907889684376e-17], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [1.734723475976807e-18, nan], 'true': [-4.144832625267251e-16, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan]}, {'': [0.023736408665978845, 0.0], 'true,true': [0.023736408665978845, nan], 'true': [0.023736408665978845, nan]}, {'': [0.030777505221624552, 0.0], 'true,false,true': [9.470581213271157e-05, nan], 'true,true': [0.026109967714134995, nan], 'true': [0.026109967714134995, 9.470581213271157e-05], 'true,false': [9.470581213271157e-05, nan]}, {'': [0.015251676707908883, 8.220863300554074e-05], 'true,true': [-9.86864910777917e-18, 6.938893903907228e-18], 'true': [0.015251676707908883, nan], 'true,true,false': [6.938893903907228e-18, nan]}, {'': [0.012925567484859183, 7.677773454435277e-05], 'true': [2.960594732333751e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.013417641772321551, 0.0], 'true,true': [0.013417641772321551, nan], 'true': [0.013417641772321551, nan], 'true,true,true': [0.015269272879947858, 4.512315767894142e-05]}, {'': [0.012692188423667735, nan], 'true': [0.012692188423667735, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783616;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926108;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883969;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839685;  // std dev = 2,89e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839691;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0787767547310917;  // std dev = 3,16e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420268;  // std dev = 2,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2,36e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.5 seconds
Total inference time: 2.556 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.184 seconds
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.532 seconds
Total inference time: 2.556 seconds
AUC ROC: 1.0
Total revision time: 5.532
Best scored revision CLL: -0.063847


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 02:17:25
{'Inference time': 2.556, 'CLL': -0.064062, 'parameter': {'Inference time': 5.286, 'CLL': -0.077539, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.31, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.532, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,false;publication(F, B), tempadvisedby(G, B).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
0;true;publication(C, B), publication(C, A).;false;true
0;true,false;publication(D, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false,false;publication(I, B).;false;false
1;true,true;publication(C, D), tempadvisedby(D, E).;false;false
1;true,false,true;publication(F, H), professor(H).;false;false
1;true,false;publication(F, A), publication(G, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(H, I), professor(I).;false;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false,false;projectmember(J, B).;false;false
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,false;publication(H, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,false;publication(H, B), ta(I, A, J).;false;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;false
3;true,false,true;publication(G, B).;false;false
3;true,false;projectmember(F, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
4;true,true,true;ta(G, I, D), publication(E, I).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,false;publication(Q, A).;false;false
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(L, A), ta(M, A, N).;false;false
5;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
5;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
5;true,true;publication(D, E), ta(F, E, G).;false;true
5;true;publication(D, A), publication(D, B).;true;true
5;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;publication(H, A).;false;false
6;true,true,false;publication(F, A).;false;false
6;true,false,false;publication(I, B), publication(I, A).;false;false
6;true,true;publication(E, A), publication(E, B).;false;true
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(G, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,false;publication(F, B).;false;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;projectmember(D, B), publication(E, A).;false;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,true;publication(G, A).;false;false
8;false;ta(P, A, Q).;false;false
8;true,false;ta(K, A, L), publication(M, B).;false;true
8;true,false,false;publication(N, B).;false;false
8;true,true,false;ta(H, A, I), publication(J, A).;false;false
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, A, E).;true;true
9;false,true;publication(J, A), ta(K, A, L).;true;true
9;false,true,true;hasposition(M, I), publication(J, M).;false;false
9;false;hasposition(B, I), student(A).;true;false
9;false,true,false;publication(N, B), publication(N, A).;false;false
9;true,true;publication(F, B).;false;false
9;true;publication(F, C).;true;true
9;true,false;ta(G, C, H).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 5,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.24554764291480224;  // std dev = 1,182, 55,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17662930314283742;  // std dev = 1,219, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(G, A) )
%   | | | then return -0.08799258171110333;  // std dev = 0,065, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2363710271263362;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(F, A) )
%   | | | then return -0.10681900807887441;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08330163202518495;  // std dev = 0,085, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1963838856676912;  // std dev = 2,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.09704724081444291;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.0970472408144429;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0785053144207794;  // std dev = 0,088, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.10383086802929636;  // std dev = 0,851, 60,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=45 */
%   | | | else return -0.0688309660941481;  // std dev = 0,036, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06780592894063464;  // std dev = 9,31e-10, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(C, B) )
%   | then return 0.011353899152971218;  // std dev = 1,207, 121,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.216 seconds
Total inference time: 5.142 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077625
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.412 seconds
Parameter learned model CLL: -0.077625


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [2.23e-07, 0, 45], 'false': [6.99e-08, 70, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 91, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [7.45e-08, 93, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,false': 'movie(G, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 45], 'false': [5.05e-08, 91, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.182, 10, 45], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(G, A)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.065, 54, 0], 'true,true,true': [1.219, 16, 45], 'false': [5.27e-09, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'movie(C, D)', 'true,true,false': 'movie(F, A)'}, {'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 2, 0], 'false': [0.085, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'genre(B, D), movie(E, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [2.58e-08, 0, 45], 'true,false,false,true': [1.86e-09, 3, 0], 'false': [0.088, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(C, D)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.036, 53, 0], 'true,true,true,true': [0.851, 15, 45], 'true,true,false': [0.0, 0, 0], 'false': [9.31e-10, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.207, 76, 45], 'false': [0.0, 0, 0]}]]
[{'': [0.09000000000000079, 6.97854472621527e-17], 'true,false,true': [-2.7755575615628915e-18, nan], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.05351918877289897, -1.4640303621430636e-17], 'true,true': [-9.473903143468002e-16, nan], 'true,false,true': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.05193310189730332, 5.968940992608368e-17], 'true,false,true': [-1.982541115402065e-18, nan], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.01097906709828568, 2.8060581941075384e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, 0.0]}, {'': [0.0254234591992633, -1.4418480839287748e-18], 'true,true': [0.0254234591992633, nan], 'true': [0.0254234591992633, nan]}, {'': [0.03040542532198849, 2.3129646346357427e-18], 'true,false,true': [7.726232898688276e-05, nan], 'true,true': [0.02437212414225211, nan], 'true': [0.02437212414225211, 7.726232898688276e-05], 'true,false': [7.726232898688276e-05, nan]}, {'': [0.004798617484732305, 7.851000864208205e-05], 'true,true': [-7.894919286223336e-17, 0.0], 'true': [0.004798617484732305, nan], 'true,true,false': [0.0, nan]}, {'': [0.006454947387731494, 8.171265418584354e-05], 'true,false,false': [1.1564823173178713e-18, nan], 'true': [1.4802973661668754e-17, 0.0], 'true,false': [0.0, 1.1564823173178713e-18]}, {'': [0.013837072737659082, 7.709882115452476e-19], 'true,true': [0.013837072737659082, nan], 'true': [0.013837072737659082, nan], 'true,true,true': [0.012055868400317284, 2.409209068032036e-05]}, {'': [0.01204814205348933, nan], 'true': [0.01204814205348933, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
3;true,false;genre(B, E).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(E, A), movie(E, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
7;true,false;genre(B, D), movie(E, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
8;true;movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360622;  // std dev = 6,50e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783613;  // std dev = 5,96e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.09269127618926108;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.09269127618926108;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839693;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839693;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839691;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0851847513883969;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D), movie(E, A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(A) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.11178629588295352;  // std dev = 0,446, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13883176938398953;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.07688021880821418;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065227
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.691 seconds
Total inference time: 2.84 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.262 seconds
Refined model CLL: -0.064273


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065227
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.5809999999999995 seconds
Total inference time: 2.84 seconds
AUC ROC: 1.0
Total revision time: 5.5809999999999995
Best scored revision CLL: -0.064273


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 02:17:40
{'Inference time': 2.84, 'CLL': -0.065227, 'parameter': {'Inference time': 5.142, 'CLL': -0.0782, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.216, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.5809999999999995, 'AUC PR': 1.0, 'F1': 1.0}


