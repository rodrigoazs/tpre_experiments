Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6081489350995122;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.8581489350995117;  // std dev = 1,69e-07, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, J), tempadvisedby(K, J) )
%   | | | then return 0.6284192053697831;  // std dev = 3,619, 74,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=57 */
%   | | | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3025933795439568;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return -0.1418510649004882;  // std dev = 0,000, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.40200626221954355;  // std dev = 1,183, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.23656936708290485;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3348592043456666;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.7458477446346387;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.560662695238489;  // std dev = 1,784, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else if ( publication(M, B), tempadvisedby(N, B) )
%   | | | then return 0.3273998430752439;  // std dev = 2,601, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.6012829284600971;  // std dev = 2,809, 60,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=50 */
%   else return -0.12544463852839133;  // std dev = 4,21e-08, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.5980004164570617;  // std dev = 0,291, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( hasposition(G, C), publication(E, G) )
%   | | | then return -0.09933741816989075;  // std dev = 1,499, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.3216779052451365;  // std dev = 1,627, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.27681147071529255;  // std dev = 3,671, 58,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.43066655582587526;  // std dev = 2,276, 31,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   else if ( professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.1123163781936063;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.043485602568479366;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360617;  // std dev = 1,02e-07, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.38160712615484854;  // std dev = 1,633, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | | else return 0.08767088278351232;  // std dev = 2,681, 35,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.401607761112843;  // std dev = 2,686, 53,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=44 */
%   | | | else return 0.15123390129038686;  // std dev = 1,494, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then return 0.442670554200489;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.2491540222343306;  // std dev = 1,140, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.12272896426573986;  // std dev = 1,501, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( ta(K, A, L) )
%   | then return -0.11171342802902544;  // std dev = 0,272, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.09651584481412245;  // std dev = 0,064, 158,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.1911964159076216;  // std dev = 1,606, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.3844536153916293;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35055024590420575;  // std dev = 0,134, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return -0.037720489844537804;  // std dev = 2,516, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.2619269059238542;  // std dev = 1,522, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.18691935226868225;  // std dev = 3,157, 47,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | | | else return 0.3043773268783255;  // std dev = 1,929, 28,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   else return -0.09285429663595596;  // std dev = 0,007, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2380396449535328;  // std dev = 1,032, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.017609352943569207;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.3138084612335521;  // std dev = 0,086, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.275662660985806;  // std dev = 0,119, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( projectmember(J, B) )
%   | | then if ( publication(K, A) )
%   | | | then return 0.28908594467727267;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4500609782104563;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | | then return -0.10912815808639492;  // std dev = 1,840, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.15295225842803992;  // std dev = 4,108, 87,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=59 */
%   else return -0.08525362470063985;  // std dev = 0,007, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.2344014026985606;  // std dev = 0,049, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3220759226989893;  // std dev = 0,139, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.16766706589732389;  // std dev = 0,932, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2189264361881926;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | then if ( ta(M, K, N), publication(L, B) )
%   | | | then return 0.01598096960539938;  // std dev = 0,894, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2233614654655036;  // std dev = 1,204, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( ta(P, A, Q), tempadvisedby(R, B) )
%   | | | then return 0.2052280132462178;  // std dev = 2,126, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.10508659068734032;  // std dev = 3,840, 74,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=49 */
%   else return -0.07889224773439901;  // std dev = 0,006, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B), ta(C, F, G) )
%   | | then return 0.038455603998260444;  // std dev = 0,820, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(H, I, D), publication(E, I) )
%   | | | then return 0.31962209921702195;  // std dev = 0,553, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.21377650652928296;  // std dev = 1,914, 29,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.20237908297871982;  // std dev = 0,105, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.18139966861939164;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return -0.152009878357359;  // std dev = 1,538, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.07458604541317836;  // std dev = 3,397, 53,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   else return -0.07333158558615595;  // std dev = 0,006, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.16623430923199775;  // std dev = 0,062, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2052071543833426;  // std dev = 0,083, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.15503342552858235;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1683745091222701;  // std dev = 0,070, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( publication(L, A), publication(M, B) )
%   | | then if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return -0.4207983593143614;  // std dev = 0,225, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0323093164452604;  // std dev = 2,206, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( tempadvisedby(R, B), ta(S, A, T) )
%   | | | then return 0.19901257092670985;  // std dev = 1,630, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.0630950023090201;  // std dev = 3,450, 62,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   else return -0.06846345956991504;  // std dev = 0,006, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.07874617459090924;  // std dev = 2,058, 51,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=40 */
%   | | | else return 0.20862951085952827;  // std dev = 1,570, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.14939858728397226;  // std dev = 0,049, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0477649939387669;  // std dev = 2,931, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | then return 0.43153320474878937;  // std dev = 0,155, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return -0.019820627434821454;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13590110700639219;  // std dev = 1,608, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.06425409441569507;  // std dev = 0,006, 203,000 (wgt'ed) examples reached here.  /* #neg=203 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
0;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
0;true,false,false;projectmember(L, B).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(J, A, K), publication(L, B).;false;false
1;true,true,true;publication(D, B).;false;false
1;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
1;true,false,false;publication(M, B), tempadvisedby(N, B).;false;false
1;true,true,false;publication(F, A).;false;false
1;true;tempadvisedby(C, B), publication(D, C).;true;true
1;true,true;publication(E, A), publication(E, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;false;true
2;false;professor(B).;true;false
2;true,false,false;tempadvisedby(H, B).;false;false
2;false,true;professor(A).;false;false
2;true,false,true;hasposition(G, C), publication(E, G).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true,true;publication(F, B).;false;false
3;false;ta(K, A, L).;false;false
3;true,false;publication(H, A), publication(H, B).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,true,false;publication(G, B).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true;publication(F, A).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,true,true;tempadvisedby(G, B).;false;false
4;true,false,false;tempadvisedby(J, B).;false;false
4;true,true;publication(C, D), ta(E, D, F).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(H, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;publication(K, A).;false;false
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;projectmember(J, B).;true;true
5;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
5;true,true,false;publication(C, G), ta(H, G, I).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(M, K, N), publication(L, B).;false;false
6;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
6;true,false;tempadvisedby(K, B), publication(L, K).;true;true
6;true,false,false;ta(P, A, Q), tempadvisedby(R, B).;false;false
6;true,true,false;tempadvisedby(J, B).;false;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,true;tempadvisedby(K, B).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;publication(L, A), publication(M, B).;false;false
7;true,true;tempadvisedby(F, B), ta(C, F, G).;false;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false;publication(J, B), publication(J, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;tempadvisedby(N, B), ta(P, N, Q).;false;false
8;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false;publication(L, A), publication(M, B).;true;true
8;true,false,false;tempadvisedby(R, B), ta(S, A, T).;false;false
8;true,true,false;tempadvisedby(J, B), publication(K, J).;false;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, A).;false;false
9;true,false;tempadvisedby(H, B), publication(I, A).;false;true
9;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
9;true,true,false;publication(C, A).;false;false
9;true;publication(C, B).;true;true
9;true,true;publication(C, D), ta(E, D, F).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360618;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,32e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 6,23e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16040698284470312;  // std dev = 0,484, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333714;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15491624085388958;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.08490816151326278;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,16e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.12141803980775959;  // std dev = 0,414, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0684
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.495 seconds
Total inference time: 3.414 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.685 seconds
Parameter learned model CLL: -0.064432


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [8.43e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,false,true': [0.0, 2, 0], 'false': [0.0, 99, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'false,true': 'director(A)', 'true,false,true': 'genre(G, C), movie(E, G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'false,false': [8.43e-08, 106, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [1.03e-07, 0, 56], 'false,true,true': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)', 'true,true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 7, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [2.63e-09, 3, 0], 'true,true,true': [0.0, 0, 56], 'false': [4.47e-08, 106, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 10, 0], 'false': [6.32e-08, 117, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, B)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.0, 7, 0], 'true,true,true': [0.0, 0, 56], 'false': [6.23e-08, 115, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.484, 4, 56], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false': [5.16e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.414, 4, 56], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}]]
[{'': [0.08740894901144611, 6.70323335622736e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [-1.2688263138573217e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.023767921937009287, -1.1214373986112692e-17], 'true,true,true': [-1.9032394707859825e-16, nan], 'true,true': [-1.9032394707859825e-16, 0.0], 'true': [0.023767921937009287, nan], 'true,true,false': [0.0, nan]}, {'': [0.021515213257540407, 6.315030048326579e-17], 'true,false,true': [2.3129646346357427e-18, nan], 'false': [2.3129646346357427e-18, 6.70323335622736e-17], 'false,true': [2.3129646346357427e-18, nan], 'true': [1.9032394707859825e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.026614824932909363, 0.0], 'true,true': [0.026614824932909363, nan], 'true': [0.026614824932909363, nan], 'true,true,true': [-3.489272363107635e-16, 0.0]}, {'': [0.008248078116164221, 1.885284381438945e-17], 'true,true': [-1.2688263138573217e-16, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-1.2688263138573217e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.014892565350823509, 3.416070845000482e-17], 'true,true': [-3.172065784643304e-17, nan], 'true': [-3.172065784643304e-17, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan]}, {'': [0.008222433638322845, 3.37893964016352e-17], 'true,true': [-1.586032892321652e-17, nan], 'true,false,true': [-9.912705577010326e-19, nan], 'true': [-1.586032892321652e-17, -9.912705577010326e-19], 'true,false': [-9.912705577010326e-19, nan]}, {'': [0.0038995587066308272, -1.0177044392397268e-17], 'true,true': [0.0038995587066308272, nan], 'true': [0.0038995587066308272, nan]}, {'': [0.003578757402625136, 2.4671622769447922e-17], 'true,true': [-5.947623346206196e-17, nan], 'true': [-5.947623346206196e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.002855921271220709, -1.650331523091449e-17], 'true,true': [0.002855921271220709, nan], 'true': [0.002855921271220709, nan], 'true,true,true': [0.002855921271220709, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(E, A), movie(E, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839133;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3840226219875909;  // std dev = 0,128, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.32805143086827643;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.14514807692715978;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2601742980708337;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12929050130710967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0851847513883968;  // std dev = 2,04e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3,84e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08518475138839682;  // std dev = 3,48e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.21328493517129213;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11429462927617774;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08162550557880771;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.17967925519763953;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1019387666989964;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return -0.07314965489525514;  // std dev = 0,000237, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15470032835896141;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09397333156368165;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420268;  // std dev = 2,95e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.06843313398434804;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06825174912542273;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13553256945005954;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08679842544157755;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return -0.06407722776394431;  // std dev = 0,000139, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.135 seconds
Total inference time: 2.272 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.537 seconds
Refined model CLL: -0.064107


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.851999999999999 seconds
Total inference time: 2.272 seconds
AUC ROC: 1.0
Total revision time: 6.851999999999999
Best scored revision CLL: -0.064107


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:36:07
{'Inference time': 2.272, 'CLL': -0.066602, 'parameter': {'Inference time': 3.414, 'CLL': -0.0684, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.495, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.851999999999999, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
0;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
0;true,false,false;projectmember(L, B).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(J, A, K), publication(L, B).;false;false
1;true,true,true;publication(D, B).;false;false
1;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
1;true,false,false;publication(M, B), tempadvisedby(N, B).;false;false
1;true,true,false;publication(F, A).;false;false
1;true;tempadvisedby(C, B), publication(D, C).;true;true
1;true,true;publication(E, A), publication(E, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;false;true
2;false;professor(B).;true;false
2;true,false,false;tempadvisedby(H, B).;false;false
2;false,true;professor(A).;false;false
2;true,false,true;hasposition(G, C), publication(E, G).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true,true;publication(F, B).;false;false
3;false;ta(K, A, L).;false;false
3;true,false;publication(H, A), publication(H, B).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,true,false;publication(G, B).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true;publication(F, A).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,true,true;tempadvisedby(G, B).;false;false
4;true,false,false;tempadvisedby(J, B).;false;false
4;true,true;publication(C, D), ta(E, D, F).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(H, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;publication(K, A).;false;false
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;projectmember(J, B).;true;true
5;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
5;true,true,false;publication(C, G), ta(H, G, I).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(M, K, N), publication(L, B).;false;false
6;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
6;true,false;tempadvisedby(K, B), publication(L, K).;true;true
6;true,false,false;ta(P, A, Q), tempadvisedby(R, B).;false;false
6;true,true,false;tempadvisedby(J, B).;false;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,true;tempadvisedby(K, B).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;publication(L, A), publication(M, B).;false;false
7;true,true;tempadvisedby(F, B), ta(C, F, G).;false;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false;publication(J, B), publication(J, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;tempadvisedby(N, B), ta(P, N, Q).;false;false
8;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false;publication(L, A), publication(M, B).;true;true
8;true,false,false;tempadvisedby(R, B), ta(S, A, T).;false;false
8;true,true,false;tempadvisedby(J, B), publication(K, J).;false;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, A).;false;false
9;true,false;tempadvisedby(H, B), publication(I, A).;false;true
9;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
9;true,true,false;publication(C, A).;false;false
9;true;publication(C, B).;true;true
9;true,true;publication(C, D), ta(E, D, F).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360622;  // std dev = 7,74e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5,77e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 5,37e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07890526980692837;  // std dev = 0,012, 133,000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1501365121366574;  // std dev = 0,626, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07323750248212678;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15626559258760786;  // std dev = 2,63e-09, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.08411355316687757;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06854891503738042;  // std dev = 0,011, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.1229048408584492;  // std dev = 0,415, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06423636168585714;  // std dev = 0,007, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068292
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.526 seconds
Total inference time: 3.307 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06485
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.486 seconds
Parameter learned model CLL: -0.06485


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [8.16e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,false,true': [0.0, 7, 0], 'false': [0.0, 125, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(D, B), movie(D, A)', 'true,false,true': 'genre(G, C), movie(E, G)', 'false': 'director(B)'}, {'false,false': [7.74e-08, 103, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.19e-07, 0, 58], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)', 'true,true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 6, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [2.63e-09, 3, 0], 'true,true,true': [0.0, 0, 58], 'false': [5.77e-08, 113, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'false': [5.37e-08, 93, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, B)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.0, 5, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.012, 133, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.626, 7, 58], 'false': [0.0, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,true': [2.63e-09, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false': [0.011, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.415, 4, 58], 'true,true,false': [0.0, 0, 0], 'false': [0.007, 120, 0]}]]
[{'': [0.08496093749999956, 6.055761952500853e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.06860069208541114, -1.7763568394002505e-18], 'true,true,true': [-1.2250736823450003e-16, nan], 'true,true': [-1.2250736823450003e-16, -1.982541115402065e-18], 'true': [0.06860069208541114, nan], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.055917862887610956, 5.82058673104451e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0], 'true': [2.4501473646900006e-16, 0.0], 'false': [nan, 5.82058673104451e-17]}, {'': [0.0228948573366958, -6.0557619525008536e-18], 'true,true': [0.0228948573366958, nan], 'true': [0.0228948573366958, nan], 'true,true,true': [-3.3689526264487507e-16, 0.0]}, {'': [0.007991661590093457, 2.947494755642009e-17], 'true,true': [-1.5313421029312505e-16, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-1.5313421029312505e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.008464206643349464, 3.1038493161563513e-17], 'true,true': [-3.062684205862501e-17, nan], 'true': [-3.062684205862501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0060829228446776015, 1.0818061690238707e-06], 'true,true': [-2.2970131543968756e-17, nan], 'true,false,true': [-6.938893903907229e-19, nan], 'true': [-2.2970131543968756e-17, -6.938893903907229e-19], 'true,false': [-6.938893903907229e-19, nan]}, {'': [0.006022395398997929, -4.989766402809692e-18], 'true,true': [0.006022395398997929, nan], 'true': [0.006022395398997929, nan]}, {'': [0.003487371233498515, 9.569806811562463e-07], 'true,true': [7.656710514656252e-18, nan], 'true': [7.656710514656252e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.0027796536845660727, 4.148154291339079e-07], 'true,true': [0.0027796536845660727, nan], 'true': [0.0027796536845660727, nan], 'true,true,true': [0.0027796536845660727, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(E, A), movie(E, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;true,false;genre(G, C), movie(E, G).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,99e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3927940644608743;  // std dev = 0,111, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.3680745447634391;  // std dev = 0,152, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32612083361722183;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.33157651632045193;  // std dev = 1,18e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.14346328711297623;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14045240315455387;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25885970918667833;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2625726353039159;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.12473368916898729;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08518475138839679;  // std dev = 2,24e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21235912916870747;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.21497185122257734;  // std dev = 5,89e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11192152909740652;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17900217252305328;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.16682716287969804;  // std dev = 0,061, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15635241906490488;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12047556969618384;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 5,27e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13681824104509135;  // std dev = 0,001, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10597600083294066;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.318 seconds
Total inference time: 2.673 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065279
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.498 seconds
Refined model CLL: -0.065279


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068292
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.828 seconds
Total inference time: 3.307 seconds
AUC ROC: 1.0
Total revision time: 6.828
Best scored revision CLL: -0.06485


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:36:21
{'Inference time': 3.307, 'CLL': -0.068292, 'parameter': {'Inference time': 3.307, 'CLL': -0.068292, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.526, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.828, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
0;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
0;true,false,false;projectmember(L, B).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(J, A, K), publication(L, B).;false;false
1;true,true,true;publication(D, B).;false;false
1;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
1;true,false,false;publication(M, B), tempadvisedby(N, B).;false;false
1;true,true,false;publication(F, A).;false;false
1;true;tempadvisedby(C, B), publication(D, C).;true;true
1;true,true;publication(E, A), publication(E, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;false;true
2;false;professor(B).;true;false
2;true,false,false;tempadvisedby(H, B).;false;false
2;false,true;professor(A).;false;false
2;true,false,true;hasposition(G, C), publication(E, G).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true,true;publication(F, B).;false;false
3;false;ta(K, A, L).;false;false
3;true,false;publication(H, A), publication(H, B).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,true,false;publication(G, B).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true;publication(F, A).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,true,true;tempadvisedby(G, B).;false;false
4;true,false,false;tempadvisedby(J, B).;false;false
4;true,true;publication(C, D), ta(E, D, F).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(H, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;publication(K, A).;false;false
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;projectmember(J, B).;true;true
5;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
5;true,true,false;publication(C, G), ta(H, G, I).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(M, K, N), publication(L, B).;false;false
6;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
6;true,false;tempadvisedby(K, B), publication(L, K).;true;true
6;true,false,false;ta(P, A, Q), tempadvisedby(R, B).;false;false
6;true,true,false;tempadvisedby(J, B).;false;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,true;tempadvisedby(K, B).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;publication(L, A), publication(M, B).;false;false
7;true,true;tempadvisedby(F, B), ta(C, F, G).;false;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false;publication(J, B), publication(J, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;tempadvisedby(N, B), ta(P, N, Q).;false;false
8;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false;publication(L, A), publication(M, B).;true;true
8;true,false,false;tempadvisedby(R, B), ta(S, A, T).;false;false
8;true,true,false;tempadvisedby(J, B), publication(K, J).;false;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, A).;false;false
9;true,false;tempadvisedby(H, B), publication(I, A).;false;true
9;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
9;true,true,false;publication(C, A).;false;false
9;true;publication(C, B).;true;true
9;true,true;publication(C, D), ta(E, D, F).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 8,43e-08, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.11231637819360635;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.3420788708627074;  // std dev = 2,642, 72,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | else return -0.11231637819360697;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.028113359608657778;  // std dev = 0,197, 363,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=49 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3637677563722504;  // std dev = 0,070, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11208058656740058;  // std dev = 0,216, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09905888391015535;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2858937145933502;  // std dev = 0,840, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10336859230127121;  // std dev = 0,197, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09056264259144461;  // std dev = 1,37e-07, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23218395616453474;  // std dev = 0,056, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.096627947459676;  // std dev = 0,166, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08337522731813757;  // std dev = 2,98e-08, 346,000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12979364924395953;  // std dev = 1,912, 231,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07722072447441206;  // std dev = 1,25e-07, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1747698537118572;  // std dev = 0,046, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.09434850758682353;  // std dev = 0,022, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07189468185939221;  // std dev = 0,000, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.09885332006282455;  // std dev = 1,598, 228,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06724263568591166;  // std dev = 9,06e-08, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067286
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.277 seconds
Total inference time: 2.843 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.555 seconds
Parameter learned model CLL: -0.075634


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [6.99e-08, 71, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [8.09e-08, 0, 178], 'false': [8.43e-08, 323, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,false,true': [0.0, 76, 0], 'false': [0.0, 291, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 178], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'false,true': 'director(A)', 'true,false,true': 'genre(G, C), movie(E, G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'false,false': [0.0, 278, 0], 'true,false,true,true': [0.0, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [2.642, 23, 49], 'true,false,true,false': [7.45e-09, 11, 0], 'true,true': [4.77e-07, 0, 129], 'false,true,true': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)', 'true,true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 37, 0], 'true,true,true,true': [3.77e-07, 0, 129], 'true,true,false': [0.0, 0, 0], 'false': [0.197, 314, 49]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.216, 68, 0], 'true,true,true': [0.07, 0, 178], 'false': [0.0, 299, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.84, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.197, 64, 0], 'false': [1.37e-07, 295, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, B)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.166, 52, 0], 'true,true,true': [0.056, 0, 178], 'false': [2.98e-08, 346, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.912, 53, 178], 'false': [1.25e-07, 332, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,true': [0.046, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 51, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.598, 50, 178], 'true,true,false': [0.0, 0, 0], 'false': [9.06e-08, 301, 0]}]]
[{'': [0.20383542200932803, 2.1998227113315797e-17], 'true,false,true': [6.880255363874209e-17, nan], 'true': [6.706246045376226e-15, 6.880255363874209e-17], 'true,false': [6.880255363874209e-17, nan]}, {'': [0.14969087886150273, -6.409534987526676e-17], 'true,true,true': [-3.193450497798203e-15, nan], 'true,true': [-3.193450497798203e-15, -2.6294755846385285e-17], 'true': [0.14969087886150273, nan], 'true,true,false': [-2.6294755846385285e-17, nan]}, {'': [0.0805409390934815, 0.05110278032035179], 'true,false,true': [-7.656710514656252e-18, 5.046468293750712e-18], 'false': [0.11112793802580936, -1.0223636485756838e-16], 'false,true': [-5.28677630773884e-18, 0.09691685662028365], 'true': [1.7625866313428842e-15, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan]}, {'': [0.0466760293211417, 0.03890332362313801], 'true,true': [0.0466760293211417, nan], 'true': [0.0466760293211417, nan], 'true,true,true': [1.1016166445893026e-15, -4.50090415388577e-18]}, {'': [0.04901121893696884, -4.0101701223918696e-17], 'true,false,true': [0.0006892331543896904, nan], 'true,true': [0.004880442041478932, nan], 'true': [0.004880442041478932, 0.0006892331543896904], 'true,false': [0.0006892331543896904, nan]}, {'': [0.03255270813362086, 6.322626038543265e-17], 'true,true': [0.003966989971764626, nan], 'true': [0.003966989971764626, 0.0006043584437296391], 'true,false': [0.0006043584437296391, nan]}, {'': [0.021447833341878636, 2.5669896523125005e-18], 'true,false,true': [0.000531697522741966, nan], 'true,true': [0.0031142610925635307, nan], 'true': [0.0031142610925635307, 0.000531697522741966], 'true,false': [0.000531697522741966, nan]}, {'': [0.01581907036911848, 4.68166335685307e-17], 'true,true': [0.01581907036911848, nan], 'true': [0.01581907036911848, nan]}, {'': [0.014282652514405284, -3.3390166154140044e-18], 'true,true': [0.0021006516089107597, nan], 'true': [0.0021006516089107597, 0.0005050485595046902], 'true,false': [0.0005050485595046902, nan]}, {'': [0.011201648098723661, 2.7294519542279596e-17], 'true,true': [0.011201648098723661, nan], 'true': [0.011201648098723661, nan], 'true,true,true': [0.011201648098723661, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(E, A), movie(E, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;false;director(B).;true;true
2;false,true;director(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;true,false;genre(G, C), movie(E, G).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.14185106490048816;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839183;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.11231637819360618;  // std dev = 3,33e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.5553664367462839;  // std dev = 2,02e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.1123163781936069;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.246948898246005;  // std dev = 0,244, 70,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=47 */
%   | | else return 0.3116756405993879;  // std dev = 0,209, 103,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), female(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831047;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583102;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3409034093941161;  // std dev = 0,019, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.3423460777291431;  // std dev = 0,006, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.12058395583022222;  // std dev = 0,013, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.11634880832570842;  // std dev = 0,020, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(A) )
%   | then return -0.09269127618926079;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926083;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return -0.09269127618926089;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.26900922662467175;  // std dev = 0,017, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.26989684221896076;  // std dev = 0,005, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10349516513858632;  // std dev = 0,014, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10080269915501511;  // std dev = 0,019, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 1,61e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21954706096241883;  // std dev = 0,015, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.22011363655658026;  // std dev = 0,005, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.09463390471774602;  // std dev = 0,013, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.09560053326353385;  // std dev = 0,017, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109151;  // std dev = 6,41e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.07877675473109155;  // std dev = 5,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310916;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07877675473109165;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18428207491525145;  // std dev = 0,013, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.18465973857013496;  // std dev = 0,004, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.08684560388638952;  // std dev = 0,012, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.08779669710896347;  // std dev = 0,016, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.073246225763337;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15819825591413622;  // std dev = 0,011, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.15846013500951606;  // std dev = 0,004, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07546456617360377;  // std dev = 0,012, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08352257560876666;  // std dev = 0,014, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420283;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13826799510563892;  // std dev = 0,010, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.138455798623093;  // std dev = 0,003, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07426502577320258;  // std dev = 0,011, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07240893019473753;  // std dev = 0,014, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0,000, 144,000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 153,000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064514
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.151 seconds
Total inference time: 2.345 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.917 seconds
Refined model CLL: -0.067075


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064514
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.9 seconds
Total inference time: 2.345 seconds
AUC ROC: 1.0
Total revision time: 9.9
Best scored revision CLL: -0.067075


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:36:36
{'Inference time': 2.345, 'CLL': -0.064514, 'parameter': {'Inference time': 2.843, 'CLL': -0.067286, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 2.277, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 9.9, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
0;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
0;true,false,false;projectmember(L, B).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(J, A, K), publication(L, B).;false;false
1;true,true,true;publication(D, B).;false;false
1;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
1;true,false,false;publication(M, B), tempadvisedby(N, B).;false;false
1;true,true,false;publication(F, A).;false;false
1;true;tempadvisedby(C, B), publication(D, C).;true;true
1;true,true;publication(E, A), publication(E, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;false;true
2;false;professor(B).;true;false
2;true,false,false;tempadvisedby(H, B).;false;false
2;false,true;professor(A).;false;false
2;true,false,true;hasposition(G, C), publication(E, G).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true,true;publication(F, B).;false;false
3;false;ta(K, A, L).;false;false
3;true,false;publication(H, A), publication(H, B).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,true,false;publication(G, B).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true;publication(F, A).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,true,true;tempadvisedby(G, B).;false;false
4;true,false,false;tempadvisedby(J, B).;false;false
4;true,true;publication(C, D), ta(E, D, F).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(H, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;publication(K, A).;false;false
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;projectmember(J, B).;true;true
5;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
5;true,true,false;publication(C, G), ta(H, G, I).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(M, K, N), publication(L, B).;false;false
6;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
6;true,false;tempadvisedby(K, B), publication(L, K).;true;true
6;true,false,false;ta(P, A, Q), tempadvisedby(R, B).;false;false
6;true,true,false;tempadvisedby(J, B).;false;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,true;tempadvisedby(K, B).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;publication(L, A), publication(M, B).;false;false
7;true,true;tempadvisedby(F, B), ta(C, F, G).;false;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false;publication(J, B), publication(J, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;tempadvisedby(N, B), ta(P, N, Q).;false;false
8;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false;publication(L, A), publication(M, B).;true;true
8;true,false,false;tempadvisedby(R, B), ta(S, A, T).;false;false
8;true,true,false;tempadvisedby(J, B), publication(K, J).;false;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, A).;false;false
9;true,false;tempadvisedby(H, B), publication(I, A).;false;true
9;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
9;true,true,false;publication(C, A).;false;false
9;true;publication(C, B).;true;true
9;true,true;publication(C, D), ta(E, D, F).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5,43e-09, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 1,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,58e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,34e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15206222539441605;  // std dev = 0,531, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1560118617633685;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.08426202601985519;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3,80e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.10079699984258987;  // std dev = 0,588, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.432 seconds
Total inference time: 3.269 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065612
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.295 seconds
Parameter learned model CLL: -0.065612


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [3.33e-08, 0, 45], 'false': [8.16e-08, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,false,true': [0.0, 3, 0], 'false': [0.0, 63, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'false,true': 'director(A)', 'true,false,true': 'genre(G, C), movie(E, G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'false,false': [7.45e-08, 92, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)', 'true,true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 5, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'false': [5.43e-09, 90, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true,true': [3.73e-09, 0, 45], 'false': [1.05e-08, 90, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'false': [2.58e-08, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, B)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.0, 6, 0], 'true,true,true': [7.9e-09, 0, 45], 'false': [4.34e-08, 90, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.531, 5, 45], 'false': [0.0, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'false': [3.8e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.588, 9, 45], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}]]
[{'': [0.10380622837370317, 7.569702440626067e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.04182928783975578, -4.053195169266444e-17], 'true,true,true': [-9.473903143468002e-16, nan], 'true,true': [-9.473903143468002e-16, 0.0], 'true': [0.04182928783975578, nan], 'true,true,false': [0.0, nan]}, {'': [0.05713354321530112, 6.141659285160441e-17], 'true,false,true': [-1.734723475976807e-18, nan], 'false': [0.0, 6.033820786006285e-17], 'false,true': [0.0, nan], 'true': [-3.947459643111668e-17, -1.734723475976807e-18], 'true,false': [-1.734723475976807e-18, nan]}, {'': [0.024252759220113572, 2.837236618486511e-17], 'true,true': [0.024252759220113572, nan], 'true': [0.024252759220113572, nan], 'true,true,true': [-4.144832625267251e-16, 0.0]}, {'': [0.012812322212040247, 1.2335811384723962e-18], 'true,false,true': [0.0, nan], 'true,true': [1.973729821555834e-17, nan], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.010425859500244368, 8.651088503572648e-18], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.008642090718479508, 2.0970879354030734e-17], 'true,false,true': [-1.1564823173178713e-18, nan], 'true,true': [6.908054375445419e-17, nan], 'true': [6.908054375445419e-17, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.005640433129233889, -2.960594732333751e-18], 'true,true': [0.005640433129233889, nan], 'true': [0.005640433129233889, nan]}, {'': [0.0051958387035418285, 1.738903532545426e-17], 'true,true': [-4.9343245538895844e-17, nan], 'true': [-4.9343245538895844e-17, -1.3877787807814458e-18], 'true,false': [-1.3877787807814458e-18, nan]}, {'': [0.0063925184111949356, -1.1102230246251566e-17], 'true,true': [0.0063925184111949356, nan], 'true': [0.0063925184111949356, nan], 'true,true,true': [0.0063925184111949356, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(E, A), movie(E, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360622;  // std dev = 6,50e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.33765052052044126;  // std dev = 0,187, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.4026818723398488;  // std dev = 0,086, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783631;  // std dev = 2,11e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.33835370459057185;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3239515765222228;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.14468260510093597;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2671769667247527;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2573816530956565;  // std dev = 7,45e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.12768182448926876;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21820288365762772;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2113172006586677;  // std dev = 4,56e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11305509266620066;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.07877675473109179;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18326629210456655;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.17823946365632623;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.0973184639768692;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10318281358881903;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15740833725504233;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15361036055494073;  // std dev = 1,86e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09204999642381677;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1,39e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13763807086380844;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13468313214098504;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.08494475214441145;  // std dev = 0,005, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065893
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.825 seconds
Total inference time: 2.774 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065066
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.268 seconds
Refined model CLL: -0.065066


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065893
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.819999999999999 seconds
Total inference time: 2.774 seconds
AUC ROC: 1.0
Total revision time: 5.819999999999999
Best scored revision CLL: -0.065066


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:36:49
{'Inference time': 2.774, 'CLL': -0.065893, 'parameter': {'Inference time': 3.269, 'CLL': -0.067682, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.432, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.819999999999999, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
0;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
0;true,false,false;projectmember(L, B).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(J, A, K), publication(L, B).;false;false
1;true,true,true;publication(D, B).;false;false
1;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
1;true,false,false;publication(M, B), tempadvisedby(N, B).;false;false
1;true,true,false;publication(F, A).;false;false
1;true;tempadvisedby(C, B), publication(D, C).;true;true
1;true,true;publication(E, A), publication(E, B).;true;true
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;publication(D, B), publication(D, A).;false;true
2;false;professor(B).;true;false
2;true,false,false;tempadvisedby(H, B).;false;false
2;false,true;professor(A).;false;false
2;true,false,true;hasposition(G, C), publication(E, G).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true,true;publication(F, B).;false;false
3;false;ta(K, A, L).;false;false
3;true,false;publication(H, A), publication(H, B).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,true,false;publication(G, B).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
3;true,true;publication(F, A).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,true,true;tempadvisedby(G, B).;false;false
4;true,false,false;tempadvisedby(J, B).;false;false
4;true,true;publication(C, D), ta(E, D, F).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,false;publication(H, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false,true;publication(K, A).;false;false
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;projectmember(J, B).;true;true
5;true,false,false;tempadvisedby(L, B), publication(M, A).;false;false
5;true,true,false;publication(C, G), ta(H, G, I).;false;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false,true;ta(M, K, N), publication(L, B).;false;false
6;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
6;true,false;tempadvisedby(K, B), publication(L, K).;true;true
6;true,false,false;ta(P, A, Q), tempadvisedby(R, B).;false;false
6;true,true,false;tempadvisedby(J, B).;false;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false,true;tempadvisedby(K, B).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;publication(L, A), publication(M, B).;false;false
7;true,true;tempadvisedby(F, B), ta(C, F, G).;false;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false;publication(J, B), publication(J, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;tempadvisedby(N, B), ta(P, N, Q).;false;false
8;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false;publication(L, A), publication(M, B).;true;true
8;true,false,false;tempadvisedby(R, B), ta(S, A, T).;false;false
8;true,true,false;tempadvisedby(J, B), publication(K, J).;false;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true,true;publication(G, A).;false;false
9;true,false;tempadvisedby(H, B), publication(I, A).;false;true
9;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
9;true,true,false;publication(C, A).;false;false
9;true;publication(C, B).;true;true
9;true,true;publication(C, D), ta(E, D, F).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( genre(G, C), movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.49466799902447617;  // std dev = 0,637, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.10516967905642632;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05687046115664719;  // std dev = 0,151, 116,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3486319548308585;  // std dev = 0,052, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12814515754426564;  // std dev = 0,051, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09652184787616667;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.27494842691301025;  // std dev = 0,314, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1146389968146308;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0884261886993239;  // std dev = 2,11e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22413532057923638;  // std dev = 0,041, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.13327785990739888;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0816499378056852;  // std dev = 0,009, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1719169226913616;  // std dev = 0,495, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07564250628414167;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16325283087284193;  // std dev = 0,033, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.11500526672521187;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0705203873185302;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.11992416056532346;  // std dev = 0,518, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06611303982081028;  // std dev = 0,007, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.275 seconds
Total inference time: 3.367 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067472
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.256 seconds
Parameter learned model CLL: -0.067472


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [3.33e-08, 0, 45], 'false': [8.16e-08, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,true': 'movie(C, B)', 'true,true,false': 'movie(F, A)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,false,true': [0.0, 8, 0], 'false': [0.0, 90, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B)', 'false,true': 'director(A)', 'true,false,true': 'genre(G, C), movie(E, G)', 'true,false': 'movie(E, A), movie(F, B)'}, {'false,false': [6.23e-08, 78, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true,false': [0.637, 1, 10], 'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 35], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)', 'true,true,true': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.009, 3, 0], 'true,true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 0, 0], 'false': [0.151, 106, 10]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.051, 2, 0], 'true,true,true': [0.052, 0, 45], 'false': [0.0, 92, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.314, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.046, 2, 0], 'false': [2.11e-08, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, B)', 'true,false': 'movie(E, F)'}, {'true,false,true,true': [0.0, 3, 0], 'true,true,true': [0.041, 0, 45], 'false': [0.009, 91, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.495, 3, 45], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,true': [0.033, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 5, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)', 'true,true,true': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.518, 5, 45], 'true,true,false': [0.0, 0, 0], 'false': [0.007, 94, 0]}]]
[{'': [0.10380622837370317, 7.656710514656253e-17], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.09149132947221877, -1.7270135938613546e-17], 'true,true,true': [-9.473903143468002e-16, nan], 'true,true': [-9.473903143468002e-16, 0.0], 'true': [0.09149132947221877, nan], 'true,true,false': [0.0, nan]}, {'': [0.022794758141434494, 0.04446184442358093], 'true,false,true': [0.0, nan], 'false': [0.03684300341868225, 4.981769982292369e-17], 'false,true': [nan, 0.03684300341868225], 'true': [-2.0301221021717148e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.019867506665714657, 0.022662668070096374], 'true,true': [0.019867506665714657, nan], 'true': [0.019867506665714657, nan], 'true,true,true': [-2.791417890486108e-16, 2.553765427868356e-05]}, {'': [0.01192808081672758, -1.206764157201257e-17], 'true,false,true': [0.00127834576751535, nan], 'true,true': [0.002728363443203878, nan], 'true': [0.002728363443203878, 0.00127834576751535], 'true,false': [0.00127834576751535, nan]}, {'': [0.008330796001782667, 5.28677630773884e-18], 'true,true': [0.0021956092286705797, nan], 'true': [0.0021956092286705797, 0.0010527913180107418], 'true,false': [0.0010527913180107418, nan]}, {'': [0.009098400325936326, 8.450642631939011e-07], 'true,false,true': [0.0, nan], 'true,true': [0.0017209489985671549, nan], 'true': [0.0017209489985671549, 0.0], 'true,false': [0.0, nan]}, {'': [0.00509778759634832, -1.0408340855860843e-17], 'true,true': [0.00509778759634832, nan], 'true': [0.00509778759634832, nan]}, {'': [0.008037057862333283, -1.939546247839129e-17], 'true,true': [0.0010998986959116941, nan], 'true': [0.0010998986959116941, 0.0007866783691283658], 'true,false': [0.0007866783691283658, nan]}, {'': [0.005357987532200823, 5.5689661844464e-07], 'true,true': [0.005357987532200823, nan], 'true': [0.005357987532200823, nan], 'true,true,true': [0.005357987532200823, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(E, A), movie(E, B).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
2;false;director(B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(E, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.459983177469157;  // std dev = 0,234, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5553664367462843;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360621;  // std dev = 7,15e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.3901920097558811;  // std dev = 0,116, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( female(A) )
%   | | then return 0.28891686960798835;  // std dev = 0,263, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32985314934939014;  // std dev = 0,111, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1782609088865264;  // std dev = 0,100, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926108;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.26147487164609834;  // std dev = 0,098, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14372376087063363;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839678;  // std dev = 3,49e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21424566335251888;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13632393012618976;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08052786031594483;  // std dev = 0,139, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18041031246311207;  // std dev = 0,076, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13831642648563858;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07312744737894614;  // std dev = 3,25e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.155272414885484;  // std dev = 0,067, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11232786501282586;  // std dev = 0,103, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06832299886616355;  // std dev = 4,08e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1359913152231782;  // std dev = 0,061, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08367398552701572;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06410009142588749;  // std dev = 2,11e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.292 seconds
Total inference time: 2.618 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.165 seconds
Refined model CLL: -0.06554


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.9879999999999995 seconds
Total inference time: 2.618 seconds
AUC ROC: 1.0
Total revision time: 4.9879999999999995
Best scored revision CLL: -0.06554


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:37:01
{'Inference time': 2.618, 'CLL': -0.069837, 'parameter': {'Inference time': 3.367, 'CLL': -0.068924, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.275, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 4.9879999999999995, 'AUC PR': 1.0, 'F1': 1.0}


