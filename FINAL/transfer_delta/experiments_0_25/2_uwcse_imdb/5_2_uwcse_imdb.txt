Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995117;  // std dev = 1,69e-07, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(G, B), ta(H, A, I) )
%   | | then if ( ta(H, J, K), tempadvisedby(J, L) )
%   | | | then return 0.7993254056877476;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.630876207826785;  // std dev = 1,966, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.3343394112899885;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.5831489350995114;  // std dev = 2,824, 40,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   else return -0.14185106490048804;  // std dev = 0,000, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, E) )
%   | | | then return 0.48598122643461616;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7359812264346162;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7254245937825999;  // std dev = 0,122, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.41643166913615387;  // std dev = 1,796, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.04474593644260065;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( tempadvisedby(M, B), publication(N, M) )
%   | | | then return 0.20415309629402717;  // std dev = 1,490, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.497014245644899;  // std dev = 3,888, 78,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=57 */
%   else return -0.1254446385283914;  // std dev = 0,000, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, G), publication(H, F) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.4605197038252341;  // std dev = 1,564, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.28114476823723367;  // std dev = 2,506, 27,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | else return 0.6462305317052054;  // std dev = 0,081, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.44278529321532795;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.553896404326439;  // std dev = 4,21e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return 0.03594623593320395;  // std dev = 1,706, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.31530684387664726;  // std dev = 3,577, 56,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   else return -0.1123163781936065;  // std dev = 2,11e-08, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.20386915653580132;  // std dev = 0,862, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(C, E), tempadvisedby(F, E) )
%   | | | then return 0.44891835018581155;  // std dev = 0,238, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.29459642379288337;  // std dev = 0,790, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return -0.001546913975296781;  // std dev = 2,593, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.419596035933491;  // std dev = 1,298, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.15096860397297454;  // std dev = 1,372, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.31222655378730885;  // std dev = 3,618, 68,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=51 */
%   else return -0.10159632948783644;  // std dev = 0,000, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B) )
%   | | then if ( ta(G, A, H), sameperson(B, D) )
%   | | | then return -0.17264559371061297;  // std dev = 0,740, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23737182043134583;  // std dev = 4,266, 120,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=91 */
%   | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | then return 0.6581107583566381;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39023427629277535;  // std dev = 0,899, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then return 0.3129447006190681;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.08088562953324854;  // std dev = 1,264, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.12865739254974515;  // std dev = 1,447, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( student(B) )
%   | then return -0.09269127618926064;  // std dev = 8,16e-08, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return -0.08050698547059854;  // std dev = 0,166, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3321111511313406;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07285016586457044;  // std dev = 1,253, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.32803179320580905;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27145369371723105;  // std dev = 0,073, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then if ( ta(K, A, L), publication(M, B) )
%   | | | then return 0.399944615340306;  // std dev = 0,227, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1407539023772586;  // std dev = 1,916, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else if ( tempadvisedby(N, B), publication(P, B) )
%   | | | then return -0.031402706489228265;  // std dev = 2,395, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.11797828662279113;  // std dev = 3,676, 63,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=38 */
%   else return -0.08531098322538741;  // std dev = 0,004, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(E, G), professor(G) )
%   | | | then return 0.07134052922247681;  // std dev = 1,991, 22,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.4323667924472558;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20855351811460424;  // std dev = 0,432, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | then if ( ta(H, K, I), tempadvisedby(K, L) )
%   | | | then return 0.013399277693843822;  // std dev = 0,892, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3498526303604582;  // std dev = 0,302, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.11471104282979112;  // std dev = 2,864, 51,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | | | else return 0.18505779961462018;  // std dev = 2,844, 50,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=38 */
%   else return -0.07886419031499568;  // std dev = 0,004, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then return 0.20167276754473665;  // std dev = 0,150, 42,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), student(A) )
%   | | | then return -0.16176577554960814;  // std dev = 1,534, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.016896639172215816;  // std dev = 1,875, 25,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( publication(C, F), ta(G, F, H) )
%   | | | then return 0.2050933004556169;  // std dev = 2,015, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.08849828057948196;  // std dev = 2,329, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   else if ( publication(I, A), professor(B) )
%   | then if ( ta(J, A, K), tempadvisedby(L, B) )
%   | | then return 0.18470008892523312;  // std dev = 0,819, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(M, B) )
%   | | | then return 0.10796027242453225;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09086548719947439;  // std dev = 1,078, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return -0.07327951589267394;  // std dev = 0,145, 188,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( publication(H, G), publication(H, B) )
%   | | | then return -0.11842025369107372;  // std dev = 0,849, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20778983939526022;  // std dev = 0,090, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.18415181860222032;  // std dev = 0,030, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, I) )
%   | | | then return -0.17371393316072034;  // std dev = 1,506, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.018562091047007945;  // std dev = 3,599, 61,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | else if ( publication(K, B), publication(L, A) )
%   | | | then return -0.06886887497994178;  // std dev = 2,059, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.1922306025450711;  // std dev = 2,002, 29,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   else if ( professor(A) )
%   | then return -0.0696790796387091;  // std dev = 0,027, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06753028537019283;  // std dev = 0,064, 123,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(E, B), ta(F, A, G) )
%   | | then if ( ta(H, D, I) )
%   | | | then return 0.09872080269443836;  // std dev = 0,618, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.31574372156715924;  // std dev = 0,386, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.1048689128357152;  // std dev = 0,987, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.1075471068285775;  // std dev = 1,676, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | then if ( ta(M, A, L) )
%   | | | then return -0.01953361498823525;  // std dev = 0,930, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2786180282348775;  // std dev = 0,880, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( ta(N, A, P), publication(Q, B) )
%   | | | then return 0.049512115423400616;  // std dev = 2,406, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.13909733809850547;  // std dev = 2,528, 44,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   else return -0.06476453958642722;  // std dev = 0,040, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false,false;publication(M, A).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(G, B), ta(H, A, I).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(I, J), ta(K, J, L).;false;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(H, B), publication(I, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(J, B), publication(K, J).;false;false
2;true,true,true;publication(H, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
2;true,true;ta(D, F, G), publication(H, F).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,false;publication(I, A), publication(I, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(G, H), professor(H).;false;false
3;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
3;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;publication(G, A).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true,true;ta(G, A, H), sameperson(B, D).;false;false
4;false;student(B).;false;false
4;true,false;publication(K, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M), publication(N, B).;false;false
4;true,true,false;publication(I, A), tempadvisedby(J, B).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false,true;ta(K, A, L), publication(M, B).;false;false
5;true,true,true;publication(E, B).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;true,true,false;ta(F, A, G).;false;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;tempadvisedby(D, B), publication(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, K, I), tempadvisedby(K, L).;false;false
6;true,true,true;publication(E, G), professor(G).;false;false
6;true,false,false;tempadvisedby(M, B).;false;false
6;true,true;publication(F, B).;true;false
6;true;ta(C, A, D), publication(E, A).;true;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true;publication(C, A), student(A).;false;true
7;false;publication(I, A), professor(B).;true;false
7;false,true,false;projectmember(M, B).;false;false
7;true,false,false;publication(C, F), ta(G, F, H).;false;false
7;false,true;ta(J, A, K), tempadvisedby(L, B).;false;true
7;true,false,true;tempadvisedby(E, B), student(A).;false;false
7;true,false;publication(D, A).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;publication(J, I).;false;false
8;true,true,true;publication(H, G), publication(H, B).;false;false
8;false;professor(A).;false;false
8;true,false,false;publication(K, B), publication(L, A).;false;false
8;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
8;true;publication(D, A), publication(D, B).;true;true
8;true,false;tempadvisedby(I, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;ta(M, A, L).;false;false
9;true,true,true;ta(H, D, I).;false;false
9;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
9;true,false,false;ta(N, A, P), publication(Q, B).;false;false
9;true,true,false;publication(C, B).;false;false
9;true;publication(C, A), tempadvisedby(D, B).;true;true
9;true,true;publication(E, B), ta(F, A, G).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5323428914035289;  // std dev = 0,928, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 7,74e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4231232237262326;  // std dev = 1,46e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.17727018562564467;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.27831803342863937;  // std dev = 0,141, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 3,94e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.266704687482969;  // std dev = 2,11e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.1924909746534785;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,87e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(C, E), director(E) )
%   | | | then return 0.19843818839896862;  // std dev = 0,645, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6,32e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.18594918214366576;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.193417089819137;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07979248206827697;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333707;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then return 0.1594268808704518;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, H) )
%   | | then return -0.1650153501757845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420264;  // std dev = 5,27e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.1294540700889937;  // std dev = 0,052, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.631 seconds
Total inference time: 2.939 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06717
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.546 seconds
Parameter learned model CLL: -0.06717


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true': [0.0, 5, 0], 'false': [8.16e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.928, 2, 56], 'true,true,false': [0.0, 0, 0], 'false': [7.74e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true,true': [1.46e-07, 0, 56], 'false': [5.05e-08, 90, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'actor(B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.94e-08, 96, 0], 'true,true,true': [0.141, 6, 56], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,true': 'movie(D, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(F, B)'}, {'false': [5.87e-08, 118, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.11e-08, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, E), director(E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.645, 3, 56], 'true,true,false': [0.0, 0, 0], 'false': [6.32e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), actor(A)', 'true,false,true': 'actor(A)', 'false': 'movie(E, A), director(B)'}, {'false,false': [0.0, 109, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, H)', 'true,true': 'movie(E, F), movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(A)'}, {'false,false': [5.27e-08, 110, 0], 'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'false,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.052, 2, 56], 'false': [0.0, 110, 0]}]]
[{'': [0.07524858908895435, 6.111319401606367e-17], 'true': [-1.2688263138573217e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.05371895283263886, -5.792467954566034e-18], 'true,false,true': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014842341924197077, 5.82058673104451e-17], 'true,true': [0.014842341924197077, nan], 'true': [0.014842341924197077, nan], 'true,true,true': [0.014842341924197077, nan]}, {'': [0.022429384195131043, 2.837236618486511e-17], 'true,false,true': [0.0, nan], 'true,true': [3.806478941571965e-16, nan], 'true': [3.806478941571965e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.019920852196860572, 4.625929269271485e-18], 'true,true': [0.019920852196860572, nan], 'true': [0.019920852196860572, nan], 'false': [1.61907524424502e-17, nan]}, {'': [0.007020331000592226, 2.9166876070660895e-17], 'true,false': [0.0, nan], 'true,true': [7.93016446160826e-18, nan], 'true': [7.93016446160826e-18, 0.0], 'true,true,true': [7.93016446160826e-18, nan]}, {'': [0.007049833851827108, 3.633457171500512e-17], 'true,true': [0.007049833851827108, nan], 'true': [0.007049833851827108, nan], 'true,true,true': [0.007049833851827108, nan]}, {'': [0.009740416474953889, -2.0371064672021222e-18], 'false': [nan, -2.0371064672021222e-18], 'true,false,true': [0.0, 0.0], 'true': [-4.3615904538845435e-17, 0.002065688237845892], 'true,false': [0.002065688237845892, nan]}, {'': [0.007920874270398412, 2.5620531337503614e-17], 'true,false': [0.0, nan], 'true,true': [-2.7755575615628914e-17, nan], 'true': [-2.7755575615628914e-17, 0.0], 'false': [-9.912705577010326e-19, 2.5232341468753557e-17]}, {'': [0.002661163808415684, -1.6653345369377347e-17], 'true,true': [0.002661163808415684, nan], 'true': [0.002661163808415684, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A), actor(A).;true;true
7;true,false;actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 7,88e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926097;  // std dev = 4,83e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 5,96e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19945291311954882;  // std dev = 0,054, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20013989995374792;  // std dev = 0,052, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07877675473109161;  // std dev = 5,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.17855107114556718;  // std dev = 0,000377, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then return -0.0945660114538474;  // std dev = 5,09e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15389271760223042;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15380328648659003;  // std dev = 3,49e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.08673270764374927;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08678713942208764;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(A) )
%   | then return -0.06923018583072514;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06842697784420265;  // std dev = 4,71e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13490328918147074;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.134833567017854;  // std dev = 1,83e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08011210850923821;  // std dev = 4,26e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419021881077513;  // std dev = 9,48e-05, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.56 seconds
Total inference time: 2.424 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.545 seconds
Refined model CLL: -0.063929


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.282 seconds
Total inference time: 2.424 seconds
AUC ROC: 1.0
Total revision time: 6.282
Best scored revision CLL: -0.063929


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:00:54
{'Inference time': 2.424, 'CLL': -0.066221, 'parameter': {'Inference time': 2.939, 'CLL': -0.073836, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.631, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.282, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false,false;publication(M, A).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(G, B), ta(H, A, I).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(I, J), ta(K, J, L).;false;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(H, B), publication(I, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(J, B), publication(K, J).;false;false
2;true,true,true;publication(H, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
2;true,true;ta(D, F, G), publication(H, F).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,false;publication(I, A), publication(I, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(G, H), professor(H).;false;false
3;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
3;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;publication(G, A).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true,true;ta(G, A, H), sameperson(B, D).;false;false
4;false;student(B).;false;false
4;true,false;publication(K, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M), publication(N, B).;false;false
4;true,true,false;publication(I, A), tempadvisedby(J, B).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false,true;ta(K, A, L), publication(M, B).;false;false
5;true,true,true;publication(E, B).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;true,true,false;ta(F, A, G).;false;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;tempadvisedby(D, B), publication(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, K, I), tempadvisedby(K, L).;false;false
6;true,true,true;publication(E, G), professor(G).;false;false
6;true,false,false;tempadvisedby(M, B).;false;false
6;true,true;publication(F, B).;true;false
6;true;ta(C, A, D), publication(E, A).;true;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true;publication(C, A), student(A).;false;true
7;false;publication(I, A), professor(B).;true;false
7;false,true,false;projectmember(M, B).;false;false
7;true,false,false;publication(C, F), ta(G, F, H).;false;false
7;false,true;ta(J, A, K), tempadvisedby(L, B).;false;true
7;true,false,true;tempadvisedby(E, B), student(A).;false;false
7;true,false;publication(D, A).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;publication(J, I).;false;false
8;true,true,true;publication(H, G), publication(H, B).;false;false
8;false;professor(A).;false;false
8;true,false,false;publication(K, B), publication(L, A).;false;false
8;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
8;true;publication(D, A), publication(D, B).;true;true
8;true,false;tempadvisedby(I, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;ta(M, A, L).;false;false
9;true,true,true;ta(H, D, I).;false;false
9;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
9;true,false,false;ta(N, A, P), publication(Q, B).;false;false
9;true,true,false;publication(C, B).;false;false
9;true;publication(C, A), tempadvisedby(D, B).;true;true
9;true,true;publication(E, B), ta(F, A, G).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 6,66e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.46567770041107454;  // std dev = 1,864, 67,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,30e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4394732668107817;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1677555980959904;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3196005137404391;  // std dev = 0,086, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 4,59e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.26847495447715763;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.19003649054540003;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,96e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(C, E), director(E) )
%   | | | then return 0.1888260395686516;  // std dev = 0,819, 63,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109154;  // std dev = 7,30e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.18851706533071472;  // std dev = 6,66e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.18985024465766437;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333709;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then return 0.16135347088922378;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, H) )
%   | | then return -0.16235164151516604;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.0687482610388117;  // std dev = 0,005, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06842697784420264;  // std dev = 5,58e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.13128785458678574;  // std dev = 0,051, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06427956897465481;  // std dev = 0,006, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.37 seconds
Total inference time: 2.428 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068669
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.859 seconds
Parameter learned model CLL: -0.068669


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'true,false,true': [0.0, 5, 0], 'false': [6.66e-08, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.864, 9, 58], 'true,true,false': [0.0, 0, 0], 'false': [8.3e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 58], 'false': [4.21e-08, 97, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'actor(B)'}, {'false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [4.59e-08, 99, 0], 'true,true,true': [0.086, 2, 58], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,true': 'movie(D, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(F, B)'}, {'false': [5.96e-08, 119, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, E), director(E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.819, 5, 58], 'true,true,false': [0.0, 0, 0], 'false': [7.3e-08, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), actor(A)', 'true,false,true': 'actor(A)', 'false': 'movie(E, A), director(B)'}, {'false,false': [0.0, 111, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [6.66e-08, 0, 58], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, H)', 'true,true': 'movie(E, F), movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(A)'}, {'false,false': [5.58e-08, 119, 0], 'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'false,true': [0.005, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.051, 2, 58], 'false': [0.006, 102, 0]}]]
[{'': [0.07306626354245364, 3.7956342722227575e-17], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.052161020059183986, -5.792467954566034e-18], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.05183955851928754, 6.373502548774047e-17], 'true,true': [0.05183955851928754, nan], 'true': [0.05183955851928754, nan], 'true,true,true': [0.05183955851928754, nan]}, {'': [0.011881199929892006, 1.8312957107219077e-17], 'true,true': [-2.756415785276251e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.756415785276251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.007463115669265111, 3.3306690738754695e-18], 'true,true': [0.007463115669265111, nan], 'true': [0.007463115669265111, nan], 'false': [2.1307310573614114e-17, 0.0]}, {'': [0.015360921167254942, 2.9854736796642864e-17], 'true,true,true': [-1.8376105235175005e-16, nan], 'true,true': [-1.8376105235175005e-16, nan], 'true': [-1.8376105235175005e-16, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan]}, {'': [0.010639969373507325, 4.131062417209885e-17], 'true,true': [0.010639969373507325, nan], 'true': [0.010639969373507325, nan], 'true,true,true': [0.010639969373507325, nan]}, {'': [0.015249560392166937, -4.0008036923429064e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true': [7.656710514656253e-17, -6.938893903907228e-18], 'false': [nan, -4.0008036923429064e-18]}, {'': [0.012184845153463438, 1.7202857082872908e-07], 'true,false': [0.0, nan], 'true,true': [-4.2111907830609384e-17, nan], 'true': [-4.2111907830609384e-17, 0.0], 'false': [1.4451204759347025e-06, 2.6122894697062506e-17]}, {'': [0.0025652909113010954, 3.9334642028075383e-07], 'true,true': [0.0025652909113010954, nan], 'true': [0.0025652909113010954, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360618;  // std dev = 8,69e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.09269127618926089;  // std dev = 6,50e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,18e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839693;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.08518475138839683;  // std dev = 3,87e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08818736130874255;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109176;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07855912780499998;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.07305740226980649;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(A) )
%   | then return -0.06826167167399277;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return -0.0640459702935674;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064978
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.758 seconds
Total inference time: 2.878 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063439
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.467 seconds
Refined model CLL: -0.063439


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064978
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.454000000000001 seconds
Total inference time: 2.878 seconds
AUC ROC: 1.0
Total revision time: 6.454000000000001
Best scored revision CLL: -0.063439


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:01:06
{'Inference time': 2.878, 'CLL': -0.064978, 'parameter': {'Inference time': 2.428, 'CLL': -0.072929, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.37, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.454000000000001, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false,false;publication(M, A).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(G, B), ta(H, A, I).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(I, J), ta(K, J, L).;false;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(H, B), publication(I, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(J, B), publication(K, J).;false;false
2;true,true,true;publication(H, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
2;true,true;ta(D, F, G), publication(H, F).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,false;publication(I, A), publication(I, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(G, H), professor(H).;false;false
3;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
3;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;publication(G, A).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true,true;ta(G, A, H), sameperson(B, D).;false;false
4;false;student(B).;false;false
4;true,false;publication(K, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M), publication(N, B).;false;false
4;true,true,false;publication(I, A), tempadvisedby(J, B).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false,true;ta(K, A, L), publication(M, B).;false;false
5;true,true,true;publication(E, B).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;true,true,false;ta(F, A, G).;false;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;tempadvisedby(D, B), publication(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, K, I), tempadvisedby(K, L).;false;false
6;true,true,true;publication(E, G), professor(G).;false;false
6;true,false,false;tempadvisedby(M, B).;false;false
6;true,true;publication(F, B).;true;false
6;true;ta(C, A, D), publication(E, A).;true;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true;publication(C, A), student(A).;false;true
7;false;publication(I, A), professor(B).;true;false
7;false,true,false;projectmember(M, B).;false;false
7;true,false,false;publication(C, F), ta(G, F, H).;false;false
7;false,true;ta(J, A, K), tempadvisedby(L, B).;false;true
7;true,false,true;tempadvisedby(E, B), student(A).;false;false
7;true,false;publication(D, A).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;publication(J, I).;false;false
8;true,true,true;publication(H, G), publication(H, B).;false;false
8;false;professor(A).;false;false
8;true,false,false;publication(K, B), publication(L, A).;false;false
8;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
8;true;publication(D, A), publication(D, B).;true;true
8;true,false;tempadvisedby(I, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;ta(M, A, L).;false;false
9;true,true,true;ta(H, D, I).;false;false
9;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
9;true,false,false;ta(N, A, P), publication(Q, B).;false;false
9;true,true,false;publication(C, B).;false;false
9;true;publication(C, A), tempadvisedby(D, B).;true;true
9;true,true;publication(E, B), ta(F, A, G).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then return -0.14185106490048766;  // std dev = 8,12e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 333,000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.39995750568268706;  // std dev = 4,298, 232,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360688;  // std dev = 0,000, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.45572133482360866;  // std dev = 3,48e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.15877938893139468;  // std dev = 3,94e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.22967993255001531;  // std dev = 0,208, 170,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926044;  // std dev = 1,26e-07, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else return 0.10551089819572142;  // std dev = 2,328, 104,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3040247852250369;  // std dev = 0,158, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.16103051230005846;  // std dev = 0,062, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08703517192485412;  // std dev = 0,089, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(C, E), director(E) )
%   | | | then return 0.1553256650382855;  // std dev = 2,468, 231,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08049314930668054;  // std dev = 0,083, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.21631383842146787;  // std dev = 0,127, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.16285652546035115;  // std dev = 0,059, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.08760572754947972;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07300447425445822;  // std dev = 0,000, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then return 0.17673227872908734;  // std dev = 1,33e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, H) )
%   | | then return -0.14616535184751198;  // std dev = 1,05e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.07205135279897777;  // std dev = 0,061, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return -0.024775080218139917;  // std dev = 1,750, 251,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.08585292101323667;  // std dev = 0,132, 244,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.066870336594033;  // std dev = 0,059, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069878
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.389 seconds
Total inference time: 3.26 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.685 seconds
Parameter learned model CLL: -0.083319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [8.09e-08, 0, 178], 'true,false,true': [8.12e-09, 63, 0], 'false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 55, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'false': [0.0, 333, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.298, 54, 178], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 314, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [3.94e-08, 61, 0], 'true,true,true': [3.48e-07, 0, 178], 'false': [0.0, 283, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'actor(B)'}, {'false,false': [2.328, 55, 49], 'true,false': [0.0, 0, 0], 'false,true': [1.26e-07, 271, 0], 'true,true,true': [0.208, 41, 129], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,true': 'movie(D, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(F, B)'}, {'false': [0.089, 290, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.158, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.062, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, E), director(E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.468, 53, 178], 'true,true,false': [0.0, 0, 0], 'false': [0.083, 270, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), actor(A)', 'true,false,true': 'actor(A)', 'false': 'movie(E, A), director(B)'}, {'false,false': [0.0, 264, 0], 'true,false,true,true': [0.059, 62, 0], 'true,false,true,false': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.127, 0, 178], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, H)', 'true,true': 'movie(E, F), movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(A)'}, {'false,false': [1.75, 202, 49], 'true,true,true': [1.33e-07, 0, 129], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.05e-08, 36, 0], 'false,true': [0.061, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.132, 66, 178], 'false': [0.059, 300, 0]}]]
[{'': [0.19307518809938418, -9.101474972192097e-17], 'true': [6.706246045376226e-15, 6.344131569286608e-17], 'true,false': [6.344131569286608e-17, nan]}, {'': [0.12873600466086896, -6.40128590774865e-17], 'true,false,true': [-3.633457171500512e-17, nan], 'true': [-3.193450497798203e-15, -3.633457171500512e-17], 'true,false': [-3.633457171500512e-17, nan]}, {'': [0.07961193670501408, -9.758648241928128e-17], 'true,true': [0.07961193670501408, nan], 'true': [0.07961193670501408, nan], 'true,true,true': [0.07961193670501408, nan]}, {'': [0.0717792362290808, -6.433801273446137e-17], 'true,false,true': [2.5480528434019987e-17, nan], 'true,true': [6.786082307821181e-16, nan], 'true': [6.786082307821181e-16, 2.5480528434019987e-17], 'true,false': [2.5480528434019987e-17, nan]}, {'': [0.043130991695616246, 0.022325697975928517], 'true,true': [0.043130991695616246, nan], 'true': [0.043130991695616246, nan], 'false': [5.899340057048802e-17, 0.05211200382162741]}, {'': [0.03949524067694846, 2.7606452804078466e-05], 'true,false': [6.881531417193434e-05, nan], 'true,true': [0.00014059807021795805, nan], 'true': [0.00014059807021795805, 6.881531417193434e-05], 'true,true,true': [0.00014059807021795805, nan]}, {'': [0.026374812244988145, 2.547071842539887e-05], 'true,true': [0.026374812244988145, nan], 'true': [0.026374812244988145, nan], 'true,true,true': [0.026374812244988145, nan]}, {'': [0.028543960222007527, -3.700743415417188e-17], 'false': [nan, -3.700743415417188e-17], 'true,false,true': [5.692844164063177e-05, 0.0], 'true': [9.112137470626651e-05, 0.0011127546070466795], 'true,false': [0.0011127546070466609, nan]}, {'': [0.017785006939934858, 0.00892347186388937], 'true,false': [3.0839528461809902e-18, nan], 'true,true': [1.3770208057366282e-16, nan], 'true': [1.3770208057366282e-16, 3.0839528461809902e-18], 'false': [3.375816563314292e-05, 0.012200595747354322]}, {'': [0.017388076527700157, 1.1457733095307325e-05], 'true,true': [0.017388076527700157, nan], 'true': [0.017388076527700157, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A), actor(A).;true;true
7;true,false;actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004881;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839183;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.1123163781936068;  // std dev = 0,000, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4,83e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783656;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601498;  // std dev = 1,69e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(B) )
%   | then return -0.09269127618926044;  // std dev = 1,21e-07, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.3207118471601497;  // std dev = 6,66e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.09269127618926085;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926089;  // std dev = 1,29e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694887;  // std dev = 1,93e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.08518475138839678;  // std dev = 8,16e-08, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 2,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109165;  // std dev = 4,28e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.07877675473109147;  // std dev = 5,58e-08, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.17709649774527822;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333677;  // std dev = 1,20e-07, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15274385809367141;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( director(A) )
%   | then if ( director(B) )
%   | | then return -0.06842697784420264;  // std dev = 1,61e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420264;  // std dev = 1,97e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06842697784420264;  // std dev = 1,90e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( female(A), director(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367094;  // std dev = 3,49e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420261;  // std dev = 6,14e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | | else return 0.013057014343434998;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080112;  // std dev = 2,63e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13534841320304186;  // std dev = 0,005, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 9,31e-10, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.06588255952752034;  // std dev = 0,002, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063565
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.647 seconds
Total inference time: 2.692 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065649
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.529 seconds
Refined model CLL: -0.065649


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063565
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.25 seconds
Total inference time: 2.692 seconds
AUC ROC: 1.0
Total revision time: 8.25
Best scored revision CLL: -0.065649


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:01:21
{'Inference time': 2.692, 'CLL': -0.063565, 'parameter': {'Inference time': 3.26, 'CLL': -0.069878, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 2.389, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 8.25, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false,false;publication(M, A).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(G, B), ta(H, A, I).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(I, J), ta(K, J, L).;false;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(H, B), publication(I, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(J, B), publication(K, J).;false;false
2;true,true,true;publication(H, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
2;true,true;ta(D, F, G), publication(H, F).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,false;publication(I, A), publication(I, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(G, H), professor(H).;false;false
3;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
3;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;publication(G, A).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true,true;ta(G, A, H), sameperson(B, D).;false;false
4;false;student(B).;false;false
4;true,false;publication(K, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M), publication(N, B).;false;false
4;true,true,false;publication(I, A), tempadvisedby(J, B).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false,true;ta(K, A, L), publication(M, B).;false;false
5;true,true,true;publication(E, B).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;true,true,false;ta(F, A, G).;false;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;tempadvisedby(D, B), publication(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, K, I), tempadvisedby(K, L).;false;false
6;true,true,true;publication(E, G), professor(G).;false;false
6;true,false,false;tempadvisedby(M, B).;false;false
6;true,true;publication(F, B).;true;false
6;true;ta(C, A, D), publication(E, A).;true;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true;publication(C, A), student(A).;false;true
7;false;publication(I, A), professor(B).;true;false
7;false,true,false;projectmember(M, B).;false;false
7;true,false,false;publication(C, F), ta(G, F, H).;false;false
7;false,true;ta(J, A, K), tempadvisedby(L, B).;false;true
7;true,false,true;tempadvisedby(E, B), student(A).;false;false
7;true,false;publication(D, A).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;publication(J, I).;false;false
8;true,true,true;publication(H, G), publication(H, B).;false;false
8;false;professor(A).;false;false
8;true,false,false;publication(K, B), publication(L, A).;false;false
8;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
8;true;publication(D, A), publication(D, B).;true;true
8;true,false;tempadvisedby(I, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;ta(M, A, L).;false;false
9;true,true,true;ta(H, D, I).;false;false
9;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
9;true,false,false;ta(N, A, P), publication(Q, B).;false;false
9;true,true,false;publication(C, B).;false;false
9;true;publication(C, A), tempadvisedby(D, B).;true;true
9;true,true;publication(E, B), ta(F, A, G).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5136362608125408;  // std dev = 1,120, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.42769576692053346;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.17455835923733842;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.2797793819568141;  // std dev = 0,144, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.26919045268149605;  // std dev = 7,60e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.19024201105691688;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 3,94e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(C, E), director(E) )
%   | | | then return 0.1884081066178777;  // std dev = 0,733, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 3,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.1890289289331568;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1899596585737007;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then return 0.16173687652695823;  // std dev = 5,16e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, H) )
%   | | then return -0.16243349909930824;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06842697784420267;  // std dev = 3,57e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.1233319525213752;  // std dev = 0,068, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06430130945728327;  // std dev = 0,006, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.255 seconds
Total inference time: 3.621 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.16 seconds
Parameter learned model CLL: -0.070532


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true': [0.0, 7, 0], 'false': [8.43e-08, 92, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.12, 3, 45], 'true,true,false': [0.0, 0, 0], 'false': [6.83e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true,true': [4.21e-08, 0, 45], 'false': [3.65e-08, 100, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'actor(B)'}, {'false,false': [1.86e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.05e-08, 83, 0], 'true,true,true': [0.144, 5, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,true': 'movie(D, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(F, B)'}, {'false': [3.94e-08, 104, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [7.6e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, E), director(E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.733, 4, 45], 'true,true,false': [0.0, 0, 0], 'false': [3.87e-08, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), actor(A)', 'true,false,true': 'actor(A)', 'false': 'movie(E, A), director(B)'}, {'false,false': [0.0, 85, 0], 'true,false,true,true': [7.45e-09, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.58e-08, 0, 45], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, H)', 'true,true': 'movie(E, F), movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(A)'}, {'false,false': [3.57e-08, 79, 0], 'true,true,true': [5.16e-08, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false,true': [2.63e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.068, 3, 45], 'false': [0.006, 83, 0]}]]
[{'': [0.11649408284023735, 7.723290606088045e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.07410586634586562, -1.8073398075293247e-17], 'true,false,true': [-2.3129646346357427e-18, nan], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.026121113751917464, 5.617996028223683e-17], 'true,true': [0.026121113751917464, nan], 'true': [0.026121113751917464, nan], 'true,true,true': [0.026121113751917464, nan]}, {'': [0.014777683532221078, 1.3322676295501878e-17], 'true,false,true': [0.0, nan], 'true,true': [3.947459643111668e-17, nan], 'true': [3.947459643111668e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.020601345686425035, -1.290957005378089e-18], 'true,true': [0.020601345686425035, nan], 'true': [0.020601345686425035, nan], 'false': [1.33761810195802e-18, 1.1564823173178713e-18]}, {'': [0.008599835666051412, 1.4945309946877107e-17], 'true,false': [0.0, nan], 'true,true': [1.282924384011292e-16, nan], 'true': [1.282924384011292e-16, 0.0], 'true,true,true': [1.282924384011292e-16, nan]}, {'': [0.010954495165070882, 2.0531521688273442e-17], 'true,true': [0.010954495165070882, nan], 'true': [0.010954495165070882, nan], 'true,true,true': [0.010954495165070882, nan]}, {'': [0.01673231881658271, -5.877651306839064e-18], 'false': [nan, -5.877651306839064e-18], 'true,false,true': [7.93016446160826e-18, nan], 'true': [6.908054375445419e-17, 7.93016446160826e-18], 'true,false': [7.93016446160826e-18, nan]}, {'': [0.007878199849255143, 1.933534481088756e-17], 'true,false': [0.0, nan], 'true,true': [5.921189464667501e-17, nan], 'true': [5.921189464667501e-17, 0.0], 'false': [6.938893903907229e-19, 1.616147440910038e-17]}, {'': [0.004676681037476847, 4.853335368158389e-07], 'true,true': [0.004676681037476847, nan], 'true': [0.004676681037476847, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1015963294878362;  // std dev = 5,48e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.0851847513883969;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839689;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839683;  // std dev = 3,80e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0684269778442027;  // std dev = 1,86e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.785 seconds
Total inference time: 2.68 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.208 seconds
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.408 seconds
Total inference time: 2.68 seconds
AUC ROC: 1.0
Total revision time: 5.408
Best scored revision CLL: -0.063847


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:01:34
{'Inference time': 2.68, 'CLL': -0.064529, 'parameter': {'Inference time': 3.621, 'CLL': -0.072149, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.255, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.408, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;ta(H, J, K), tempadvisedby(J, L).;false;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false,false;publication(M, A).;false;false
0;true,true;ta(D, A, E).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(G, B), ta(H, A, I).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(I, J), ta(K, J, L).;false;false
1;true,true,true;ta(G, F, E).;false;false
1;true,false,false;tempadvisedby(M, B), publication(N, M).;false;false
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;publication(H, B), publication(I, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(J, B), publication(K, J).;false;false
2;true,true,true;publication(H, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
2;true,true;ta(D, F, G), publication(H, F).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,false;publication(I, A), publication(I, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(G, H), professor(H).;false;false
3;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
3;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;true,true;tempadvisedby(D, B), publication(C, D).;false;true
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;publication(G, A).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true,true;ta(G, A, H), sameperson(B, D).;false;false
4;false;student(B).;false;false
4;true,false;publication(K, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M), publication(N, B).;false;false
4;true,true,false;publication(I, A), tempadvisedby(J, B).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false,true;ta(K, A, L), publication(M, B).;false;false
5;true,true,true;publication(E, B).;false;false
5;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
5;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;true,true,false;ta(F, A, G).;false;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;tempadvisedby(D, B), publication(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, K, I), tempadvisedby(K, L).;false;false
6;true,true,true;publication(E, G), professor(G).;false;false
6;true,false,false;tempadvisedby(M, B).;false;false
6;true,true;publication(F, B).;true;false
6;true;ta(C, A, D), publication(E, A).;true;true
6;true,false;ta(H, A, I), tempadvisedby(J, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true;publication(C, A), student(A).;false;true
7;false;publication(I, A), professor(B).;true;false
7;false,true,false;projectmember(M, B).;false;false
7;true,false,false;publication(C, F), ta(G, F, H).;false;false
7;false,true;ta(J, A, K), tempadvisedby(L, B).;false;true
7;true,false,true;tempadvisedby(E, B), student(A).;false;false
7;true,false;publication(D, A).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false,true;publication(J, I).;false;false
8;true,true,true;publication(H, G), publication(H, B).;false;false
8;false;professor(A).;false;false
8;true,false,false;publication(K, B), publication(L, A).;false;false
8;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
8;true;publication(D, A), publication(D, B).;true;true
8;true,false;tempadvisedby(I, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;ta(M, A, L).;false;false
9;true,true,true;ta(H, D, I).;false;false
9;true,false;tempadvisedby(J, B), ta(K, J, L).;true;true
9;true,false,false;ta(N, A, P), publication(Q, B).;false;false
9;true,true,false;publication(C, B).;false;false
9;true;publication(C, A), tempadvisedby(D, B).;true;true
9;true,true;publication(E, B), ta(F, A, G).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.4885981552522948;  // std dev = 1,416, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4338351903845456;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.17098002006015015;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.2825806236098183;  // std dev = 0,146, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 5,05e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.221056552991933;  // std dev = 0,729, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.27511617782933;  // std dev = 0,034, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.18432135587297083;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08581050090077566;  // std dev = 0,039, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(C, E), director(E) )
%   | | | then return 0.192853871332541;  // std dev = 0,726, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07873135544505352;  // std dev = 4,59e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.19205182780355262;  // std dev = 0,027, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.18560748939923477;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.097554798440275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07320684063965287;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F), movie(E, B) )
%   | | then return 0.16210368619843835;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, H) )
%   | | then return -0.16189818800570435;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.07187659091966088;  // std dev = 0,019, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.04619636569139609;  // std dev = 0,733, 100,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.13098377816986714;  // std dev = 0,072, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06539339382826077;  // std dev = 0,004, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074704
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.229 seconds
Total inference time: 2.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.274 seconds
Parameter learned model CLL: -0.069701


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true': [0.0, 2, 0], 'false': [8.16e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.416, 5, 45], 'true,true,false': [0.0, 0, 0], 'false': [8.16e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F), director(F)', 'true,false': 'movie(E, A)'}, {'true,false,true,true': [0.0, 5, 0], 'true,true,true': [0.0, 0, 45], 'false': [5.96e-08, 81, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'actor(B)'}, {'false,false': [0.729, 3, 10], 'true,false': [0.0, 0, 0], 'false,true': [5.05e-08, 102, 0], 'true,true,true': [0.146, 4, 35], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,true': 'movie(D, B)', 'true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(F, B)'}, {'false': [0.039, 89, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.034, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.008, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, E), director(E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.726, 4, 45], 'true,true,false': [0.0, 0, 0], 'false': [4.59e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, A), actor(A)', 'true,false,true': 'actor(A)', 'false': 'movie(E, A), director(B)'}, {'false,false': [0.0, 70, 0], 'true,false,true,true': [0.011, 6, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.027, 0, 45], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, H)', 'true,true': 'movie(E, F), movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(A)'}, {'false,false': [0.733, 90, 10], 'true,true,true': [1.05e-08, 0, 35], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'false,true': [0.019, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.072, 3, 45], 'false': [0.004, 82, 0]}]]
[{'': [0.04074241738343243, 7.401486830834377e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.07410586634586562, -1.1445598192011922e-17], 'true,false,true': [-2.3129646346357427e-18, nan], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.040122030722945186, 6.530723674265627e-17], 'true,true': [0.040122030722945186, nan], 'true': [0.040122030722945186, nan], 'true,true,true': [0.040122030722945186, nan]}, {'': [0.03292212949067345, 4.386066270124075e-17], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.02119718308620975, 0.014491070828730333], 'true,true': [0.02119718308620975, nan], 'true': [0.02119718308620975, nan], 'false': [2.503444075135157e-17, 0.04088028166626138]}, {'': [0.012394071918526197, 1.703296667256893e-05], 'true,false': [1.876282652879535e-05, nan], 'true,true': [2.6414563756057182e-05, nan], 'true': [2.6414563756057182e-05, 1.876282652879535e-05], 'true,true,true': [2.6414563756057182e-05, nan]}, {'': [0.010763875918929765, 2.5112187461759493e-17], 'true,true': [0.010763875918929765, nan], 'true': [0.010763875918929765, nan], 'true,true,true': [0.010763875918929765, nan]}, {'': [0.015670665792364338, -1.030921380009074e-17], 'false': [nan, -1.030921380009074e-17], 'true,false,true': [1.8966650757170262e-05, 0.0], 'true': [1.6082040978994252e-05, 0.0009656379110711424], 'true,false': [0.0009656379110711424, nan]}, {'': [0.005367717322239444, 0.005101262331340238], 'true,false': [0.0, nan], 'true,true': [3.1720657846433043e-18, nan], 'true': [3.1720657846433043e-18, 0.0], 'false': [6.069437028720428e-05, 0.005366367693846375]}, {'': [0.005227722210739247, 1.6390000792744192e-07], 'true,true': [0.005227722210739247, nan], 'true': [0.005227722210739247, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;false;actor(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A), actor(A).;true;true
7;true,false;actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0,133, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0,136, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11231637819360621;  // std dev = 7,30e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0,000991, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1765013916705758;  // std dev = 0,000193, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783621;  // std dev = 5,27e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3254174035537353;  // std dev = 0,000785, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1523026708090273;  // std dev = 0,000127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 4,47e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.3252808481623823;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.229997382741736;  // std dev = 0,427, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2600409328765571;  // std dev = 0,036, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15900600886404526;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08577743838624158;  // std dev = 0,040, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21319717205660094;  // std dev = 0,031, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17058874560016965;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.078733753592866;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A), actor(A) )
%   | then return 0.17961897515221573;  // std dev = 0,028, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.1261978784677653;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07320892117054185;  // std dev = 3,87e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15351946135652125;  // std dev = 0,000465, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.08906771205341178;  // std dev = 0,000108, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(A) )
%   | then return -0.07138963974495519;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then return -0.06839432346203693;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(A) )
%   | | | then return 0.0810289077895876;  // std dev = 0,355, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.16641479746063903;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13664738721807576;  // std dev = 0,026, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10297118927144934;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06415554404130071;  // std dev = 0,000352, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.286 seconds
Total inference time: 2.96 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.067 seconds
Refined model CLL: -0.065477


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.856 seconds
Total inference time: 2.96 seconds
AUC ROC: 1.0
Total revision time: 4.856
Best scored revision CLL: -0.065477


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:01:45
{'Inference time': 2.96, 'CLL': -0.067435, 'parameter': {'Inference time': 2.962, 'CLL': -0.074704, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.229, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 4.856, 'AUC PR': 1.0, 'F1': 1.0}


