Starting experiment #3 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E), ta(G, A, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), tempadvisedby(J, K) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2775037738091898;  // std dev = 2,747, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.4507415276921038;  // std dev = 3,611, 54,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.6000844189704794;  // std dev = 2,436, 31,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   else return -0.14185106490048816;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.727318456533524;  // std dev = 0,090, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.12058233322055996;  // std dev = 2,545, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.5986835462928061;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.6800089480638987;  // std dev = 1,638, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.5457589948825966;  // std dev = 2,631, 38,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   else return -0.12544463852839144;  // std dev = 0,000, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, F), sameperson(B, F) )
%   | | | then return 0.5778013030196645;  // std dev = 0,049, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34203857486564576;  // std dev = 1,227, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.47138217804324306;  // std dev = 0,913, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5639224006108233;  // std dev = 0,072, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( publication(J, K), professor(K) )
%   | | | then return -0.0035955873853174606;  // std dev = 1,994, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.5729611852982373;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.5287418936112404;  // std dev = 1,844, 26,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return 0.3169853683032319;  // std dev = 3,659, 60,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   else return -0.11231637819360656;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, A, G), ta(H, E, G) )
%   | | | then return 0.2788598413018799;  // std dev = 0,853, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.43194442425701723;  // std dev = 0,123, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.30569245280998697;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then if ( ta(K, A, L) )
%   | | | then return 0.30843081941378697;  // std dev = 0,620, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12899345099459567;  // std dev = 1,183, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.3186430776268621;  // std dev = 3,785, 75,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=54 */
%   | | | else return 0.17830876040729743;  // std dev = 2,463, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   else return -0.10159632948783646;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then return 0.5389483712053934;  // std dev = 0,129, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.1308309441779751;  // std dev = 1,695, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.33745123641032143;  // std dev = 0,147, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.08413733664340134;  // std dev = 3,433, 53,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.2559228906983496;  // std dev = 3,067, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   else return -0.0926912761892609;  // std dev = 4,71e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( publication(G, A) )
%   | | then if ( publication(G, B) )
%   | | | then return 0.2887915381680335;  // std dev = 0,188, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.11596984778521569;  // std dev = 0,834, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( publication(H, D) )
%   | | | then return 0.19859220260709468;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.38456757635533323;  // std dev = 0,955, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), student(K) )
%   | | | then return 0.03963374588431617;  // std dev = 2,494, 33,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.29394196308352405;  // std dev = 0,864, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.2687635177531812;  // std dev = 2,516, 49,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | | else return 0.0883925495706739;  // std dev = 1,646, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else return -0.08446782580339181;  // std dev = 0,055, 170,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.24800841753369166;  // std dev = 0,220, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return -0.05737478730951007;  // std dev = 0,847, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23074034988271963;  // std dev = 0,066, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I), ta(J, A, K) )
%   | | | then return -0.12379849718836634;  // std dev = 2,356, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.04999377422092611;  // std dev = 3,174, 51,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=29 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.055368060240956515;  // std dev = 1,968, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.17371798292020385;  // std dev = 2,172, 29,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   else return -0.0788287984359211;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then if ( tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.146090157313165;  // std dev = 1,585, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.23509163788446213;  // std dev = 1,354, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.41383465995665275;  // std dev = 0,300, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3178249097358529;  // std dev = 0,059, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( hasposition(K, C), tempadvisedby(L, K) )
%   | | then if ( sameperson(B, K), ta(M, L, N) )
%   | | | then return 0.1801916798347569;  // std dev = 1,414, 27,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.058214858102161544;  // std dev = 3,215, 56,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=39 */
%   | | else if ( publication(P, B) )
%   | | | then return -0.2550450655336838;  // std dev = 0,584, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13721322097208583;  // std dev = 1,348, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else return -0.074416744359545;  // std dev = 0,055, 186,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return 0.3008995495005056;  // std dev = 0,179, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.21810169928150872;  // std dev = 1,022, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.14643495025204756;  // std dev = 2,069, 35,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.10635234184903243;  // std dev = 1,413, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.16813119191236972;  // std dev = 1,602, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( tempadvisedby(L, B), publication(M, L) )
%   | | | then return -0.07846887460970411;  // std dev = 1,125, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12730472649882357;  // std dev = 2,619, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else return -0.06839475320272807;  // std dev = 0,000, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, E), student(E) )
%   | | then if ( ta(F, E, G), ta(H, A, I) )
%   | | | then return 0.14660095828737196;  // std dev = 1,349, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.04151899869300107;  // std dev = 2,537, 50,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | | else return 0.3406663985683312;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(J, B) )
%   | | then if ( publication(K, A) )
%   | | | then return 0.38736037221581887;  // std dev = 0,211, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14180019157506307;  // std dev = 2,503, 39,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.029975338106053077;  // std dev = 2,130, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return 0.09550915396457371;  // std dev = 1,362, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.06416340749466086;  // std dev = 3,16e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(J, K).;false;false
0;true,true,true;publication(F, E), ta(G, A, H).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,false;ta(F, A, G), publication(H, B).;false;false
1;true,false,true;publication(D, E), professor(E).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), professor(K).;false;false
2;true,true,true;publication(E, F), sameperson(B, F).;false;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;ta(G, A, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;ta(K, A, L).;false;false
3;true,true,true;ta(F, A, G), ta(H, E, G).;false;false
3;true,false,false;publication(M, B).;false;false
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;tempadvisedby(I, B), publication(J, I).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
4;true,false,true;ta(E, A, F).;false;false
4;true;projectmember(C, B).;false;true
4;true,false;publication(D, B), publication(D, A).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(I, K), student(K).;false;false
5;true,true,true;publication(G, B).;false;false
5;true,false;publication(I, B), tempadvisedby(J, B).;true;true
5;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
5;true,true,false;publication(H, D).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;true,true;publication(G, A).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, G, I), ta(J, A, K).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false,false;publication(L, A).;false;false
6;true,true;tempadvisedby(D, B).;false;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false;tempadvisedby(G, B).;true;true
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,false,true;sameperson(B, K), ta(M, L, N).;false;false
7;true,true,true;ta(H, G, I).;false;false
7;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
7;true,false,false;publication(P, B).;false;false
7;true,true,false;publication(J, A).;false;false
7;true;ta(D, A, E), publication(F, B).;true;true
7;true,true;tempadvisedby(G, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(J, B).;false;false
8;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
8;true,true;tempadvisedby(E, B), publication(F, E).;false;true
8;true;ta(C, A, D).;true;true
8;true,false;publication(J, A), publication(K, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(K, A).;false;false
9;true,true,true;ta(F, E, G), ta(H, A, I).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,true;publication(C, E), student(E).;true;false
9;true;publication(C, B), publication(D, A).;true;true
9;true,false;tempadvisedby(J, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, F) )
%   | | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B), movie(H, A) )
%   | | then if ( movie(H, I), director(I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,30e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 5,58e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.30645656704465274;  // std dev = 0,574, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,49e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.14084164898989468;  // std dev = 1,500, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | | else return -0.08564924070146954;  // std dev = 0,036, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23186671139378828;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.1130056209592072;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0840707638663702;  // std dev = 0,087, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.01259845565670687;  // std dev = 1,663, 166,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07288767287864796;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.18103885771106995;  // std dev = 0,409, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07903333797848232;  // std dev = 0,084, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, E), actor(E) )
%   | | then return 0.15488435067183487;  // std dev = 0,052, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07357826782577986;  // std dev = 0,083, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077727
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.356 seconds
Total inference time: 2.566 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074245
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.527 seconds
Parameter learned model CLL: -0.074245


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true,true,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'false': [8.16e-08, 111, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(H, I), director(I)', 'true,true,true': 'movie(D, F)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B), movie(H, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [8.3e-08, 112, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.03e-07, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'false': [5.58e-08, 85, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.574, 2, 56], 'false': [1.49e-08, 95, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.036, 79, 0], 'true,true,true': [1.5, 29, 56], 'false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'true,false,true': [0.0, 6, 0], 'false': [0.087, 112, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.663, 110, 56], 'false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.409, 2, 56], 'false': [0.084, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, E), actor(E)', 'true': 'movie(C, B), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.052, 2, 56], 'false': [0.083, 114, 0]}]]
[{'': [0.04826199367997677, 6.00120553851436e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,true,true': [-1.2688263138573217e-16, nan], 'true,true': [-1.2688263138573217e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.012304599783948732, -1.8052406904474092e-18], 'true,false,true': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.027738687907221463, 6.145877457746403e-17], 'true,false,true': [0.0, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,true': [1.9032394707859825e-16, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.016767339707732778, 3.657205257588751e-17], 'true,true': [-3.489272363107635e-16, nan], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.005689964312795762, 2.337311630789803e-18], 'true': [0.005689964312795762, nan]}, {'': [0.02652755320818495, -1.1564823173178713e-18], 'true,true': [0.026456251363768907, 1.6828525112812962e-05], 'true': [0.02652755320818495, nan]}, {'': [0.01039615166732349, 6.790730040857201e-05], 'true': [-9.516197353929913e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016655784793169256, 0.0], 'true,true': [0.016655784793169256, nan], 'true': [0.016655784793169256, nan]}, {'': [0.0028879683115203988, 6.348313864684456e-05], 'true': [0.0028879683115203988, nan]}, {'': [0.0027250636756440683, 6.005127137514317e-05], 'true,true': [0.0027250636756440683, nan], 'true': [0.0027250636756440683, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839136;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1015963294878363;  // std dev = 2,58e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926097;  // std dev = 4,71e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5,67e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return 0.25517224256948956;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.23321372683027108;  // std dev = 0,466, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2116546414241405;  // std dev = 0,014, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1065948615621492;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109162;  // std dev = 5,05e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1784871426027536;  // std dev = 0,012, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09622267340015106;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15379837177763964;  // std dev = 0,011, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08817377904707933;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420264;  // std dev = 5,58e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13483000142269244;  // std dev = 0,010, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08202314682125472;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065623
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.421 seconds
Total inference time: 2.328 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063961
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.287 seconds
Refined model CLL: -0.063961


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065623
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.591 seconds
Total inference time: 2.328 seconds
AUC ROC: 1.0
Total revision time: 5.591
Best scored revision CLL: -0.063961


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:40:03
{'Inference time': 2.328, 'CLL': -0.065623, 'parameter': {'Inference time': 2.566, 'CLL': -0.077727, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.356, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.591, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(J, K).;false;false
0;true,true,true;publication(F, E), ta(G, A, H).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,false;ta(F, A, G), publication(H, B).;false;false
1;true,false,true;publication(D, E), professor(E).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), professor(K).;false;false
2;true,true,true;publication(E, F), sameperson(B, F).;false;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;ta(G, A, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;ta(K, A, L).;false;false
3;true,true,true;ta(F, A, G), ta(H, E, G).;false;false
3;true,false,false;publication(M, B).;false;false
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;tempadvisedby(I, B), publication(J, I).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
4;true,false,true;ta(E, A, F).;false;false
4;true;projectmember(C, B).;false;true
4;true,false;publication(D, B), publication(D, A).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(I, K), student(K).;false;false
5;true,true,true;publication(G, B).;false;false
5;true,false;publication(I, B), tempadvisedby(J, B).;true;true
5;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
5;true,true,false;publication(H, D).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;true,true;publication(G, A).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, G, I), ta(J, A, K).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false,false;publication(L, A).;false;false
6;true,true;tempadvisedby(D, B).;false;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false;tempadvisedby(G, B).;true;true
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,false,true;sameperson(B, K), ta(M, L, N).;false;false
7;true,true,true;ta(H, G, I).;false;false
7;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
7;true,false,false;publication(P, B).;false;false
7;true,true,false;publication(J, A).;false;false
7;true;ta(D, A, E), publication(F, B).;true;true
7;true,true;tempadvisedby(G, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(J, B).;false;false
8;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
8;true,true;tempadvisedby(E, B), publication(F, E).;false;true
8;true;ta(C, A, D).;true;true
8;true,false;publication(J, A), publication(K, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(K, A).;false;false
9;true,true,true;ta(F, E, G), ta(H, A, I).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,true;publication(C, E), student(E).;true;false
9;true;publication(C, B), publication(D, A).;true;true
9;true,false;tempadvisedby(J, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, F) )
%   | | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B), movie(H, A) )
%   | | then if ( movie(H, I), director(I) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 1,01e-07, 135,000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783627;  // std dev = 1,32e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.27619151079944404;  // std dev = 1,033, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 5,96e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.15289523025365845;  // std dev = 1,498, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | | else return -0.08772205697657233;  // std dev = 0,072, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23512608352598544;  // std dev = 6,45e-09, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.1098045618150799;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08427945109193359;  // std dev = 0,096, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.0066695326308322265;  // std dev = 1,739, 185,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07287357208375059;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.17995773117785657;  // std dev = 0,497, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07768577331748104;  // std dev = 0,089, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, E), actor(E) )
%   | | then return 0.15828287195581142;  // std dev = 0,051, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07225999020658162;  // std dev = 0,074, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.427 seconds
Total inference time: 2.689 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074793
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.419 seconds
Parameter learned model CLL: -0.074793


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true,true,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [7.88e-08, 112, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(H, I), director(I)', 'true,true,true': 'movie(D, F)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B), movie(H, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'false': [1.01e-07, 135, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.19e-07, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 6, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.033, 7, 58], 'false': [5.96e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.072, 66, 0], 'true,true,true': [1.498, 27, 58], 'false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [6.45e-09, 0, 58], 'true,false,true': [3.73e-09, 8, 0], 'false': [0.096, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.739, 127, 58], 'false': [6.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.497, 3, 58], 'false': [0.089, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, E), actor(E)', 'true': 'movie(C, B), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.051, 2, 58], 'false': [0.074, 90, 0]}]]
[{'': [0.07306626354245364, 5.551115123125783e-17], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,true,true': [-3.675221047035001e-16, nan], 'true,true': [-3.675221047035001e-16, nan], 'true,false,true': [-2.7755575615628915e-18, nan], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.08301375796543166, -1.8073398075293247e-17], 'true,false,true': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.020846347594112944, 7.56596431596403e-17], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,true': [2.4501473646900006e-16, nan], 'true': [2.4501473646900006e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.0228948573366958, -1.5313421029312504e-17], 'true,true': [-3.3689526264487507e-16, nan], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01642278575441154, 3.089316242435218e-17], 'true': [0.01642278575441154, nan]}, {'': [0.02913265436078744, -1.1564823173178713e-18], 'true,true': [0.026386484427317152, 7.854261970301917e-05], 'true': [0.02913265436078744, nan]}, {'': [0.012673415437159698, 7.707602635144521e-05], 'true': [4.594026308793751e-17, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan]}, {'': [0.016341589153807012, 3.2025664171879517e-18], 'true,true': [0.016341589153807012, nan], 'true': [0.016341589153807012, nan]}, {'': [0.004057471154425168, 6.741974101939228e-05], 'true': [0.004057471154425168, nan]}, {'': [0.002623424674979517, 6.035421058416936e-05], 'true,true': [0.002623424674979517, nan], 'true': [0.002623424674979517, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360618;  // std dev = 8,56e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783631;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926083;  // std dev = 7,45e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6,05e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( female(A) )
%   | | | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.19597972188116153;  // std dev = 0,875, 46,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21629651093781996;  // std dev = 0,036, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10507428831349033;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109157;  // std dev = 6,32e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333718;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.181881752696147;  // std dev = 0,032, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09355962834512636;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15636697836832714;  // std dev = 0,028, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08812289477876052;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 4,94e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13683103233512495;  // std dev = 0,025, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08165955408401074;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065506
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.433 seconds
Total inference time: 2.012 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064135
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.354 seconds
Refined model CLL: -0.064135


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065506
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.633 seconds
Total inference time: 2.012 seconds
AUC ROC: 1.0
Total revision time: 5.633
Best scored revision CLL: -0.064135


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:40:14
{'Inference time': 2.012, 'CLL': -0.065506, 'parameter': {'Inference time': 2.689, 'CLL': -0.077304, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.427, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.633, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(J, K).;false;false
0;true,true,true;publication(F, E), ta(G, A, H).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,false;ta(F, A, G), publication(H, B).;false;false
1;true,false,true;publication(D, E), professor(E).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), professor(K).;false;false
2;true,true,true;publication(E, F), sameperson(B, F).;false;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;ta(G, A, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;ta(K, A, L).;false;false
3;true,true,true;ta(F, A, G), ta(H, E, G).;false;false
3;true,false,false;publication(M, B).;false;false
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;tempadvisedby(I, B), publication(J, I).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
4;true,false,true;ta(E, A, F).;false;false
4;true;projectmember(C, B).;false;true
4;true,false;publication(D, B), publication(D, A).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(I, K), student(K).;false;false
5;true,true,true;publication(G, B).;false;false
5;true,false;publication(I, B), tempadvisedby(J, B).;true;true
5;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
5;true,true,false;publication(H, D).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;true,true;publication(G, A).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, G, I), ta(J, A, K).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false,false;publication(L, A).;false;false
6;true,true;tempadvisedby(D, B).;false;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false;tempadvisedby(G, B).;true;true
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,false,true;sameperson(B, K), ta(M, L, N).;false;false
7;true,true,true;ta(H, G, I).;false;false
7;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
7;true,false,false;publication(P, B).;false;false
7;true,true,false;publication(J, A).;false;false
7;true;ta(D, A, E), publication(F, B).;true;true
7;true,true;tempadvisedby(G, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(J, B).;false;false
8;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
8;true,true;tempadvisedby(E, B), publication(F, E).;false;true
8;true;ta(C, A, D).;true;true
8;true,false;publication(J, A), publication(K, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(K, A).;false;false
9;true,true,true;ta(F, E, G), ta(H, A, I).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,true;publication(C, E), student(E).;true;false
9;true;publication(C, B), publication(D, A).;true;true
9;true,false;tempadvisedby(J, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004879;  // std dev = 0,000, 317,000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, F) )
%   | | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B), movie(H, A) )
%   | | then if ( movie(H, I), director(I) )
%   | | | then return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360686;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583096;  // std dev = 2,79e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783624;  // std dev = 3,95e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.23650009981119516;  // std dev = 2,119, 162,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=129 */
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.3207118471601497;  // std dev = 9,86e-09, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( movie(E, B) )
%   | | | then return -0.09269127618926105;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926068;  // std dev = 1,01e-07, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19720449607846052;  // std dev = 2,094, 222,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return -0.09109654983474427;  // std dev = 0,162, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4,34e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23023111553692313;  // std dev = 0,007, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.09422182733321106;  // std dev = 0,116, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08236430556119838;  // std dev = 0,155, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.03219509613538047;  // std dev = 2,794, 429,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07300307098087506;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.11877135985709462;  // std dev = 1,830, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07703238839143245;  // std dev = 0,185, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, E), actor(E) )
%   | | then return 0.11315419255890669;  // std dev = 0,110, 225,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07048334495627377;  // std dev = 0,158, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077014
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.956 seconds
Total inference time: 2.163 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081167
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.854 seconds
Parameter learned model CLL: -0.081167


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true,true,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [6.83e-08, 68, 0], 'false': [0.0, 317, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.09e-06, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 60, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 178], 'false': [0.0, 287, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(H, I), director(I)', 'true,true,true': 'movie(D, F)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B), movie(H, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 52, 0], 'false': [0.0, 288, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [5.9e-07, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, F)'}, {'true,true,true': [2.79e-08, 0, 178], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.95e-09, 52, 0], 'false': [0.0, 294, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,false': 'movie(E, B)', 'true': 'genre(B, C)', 'true,false': 'movie(D, B), movie(D, A)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true': [9.86e-09, 0, 49], 'true,true': [2.119, 33, 129], 'true,false,false,true': [0.0, 28, 0], 'false': [1.01e-07, 302, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.162, 189, 0], 'true,true,true': [2.094, 44, 178], 'false': [4.34e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.007, 0, 178], 'true,false,true': [0.116, 74, 0], 'false': [0.155, 324, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.794, 251, 178], 'false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.83, 59, 178], 'false': [0.185, 301, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, E), actor(E)', 'true': 'movie(C, B), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.11, 47, 178], 'false': [0.158, 285, 0]}]]
[{'': [0.20001321964439722, 0.0], 'true,false,true': [6.857259857978908e-17, nan], 'true,true,true': [6.706246045376226e-15, nan], 'true,true': [6.706246045376226e-15, nan], 'true': [6.706246045376226e-15, 6.857259857978908e-17], 'true,false': [6.857259857978908e-17, nan]}, {'': [0.13460045111799862, -6.808336318258799e-17], 'true,false,true': [-4.070817756958907e-17, nan], 'true': [-3.193450497798203e-15, -4.070817756958907e-17], 'true,false': [-4.070817756958907e-17, nan]}, {'': [0.07800241889762492, -8.018277400070575e-17], 'true,false,true': [2.1350442781253012e-17, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,true': [1.9559884299013994e-15, nan], 'true': [1.9559884299013994e-15, 2.1350442781253012e-17], 'true,false': [2.1350442781253012e-17, nan]}, {'': [0.047150501857041505, -5.890979314337566e-17], 'true,true': [7.983626244495507e-16, nan], 'true': [7.983626244495507e-16, 1.4945309946877107e-17], 'true,false': [1.4945309946877107e-17, nan]}, {'': [0.032486396633908086, 3.3821363664077617e-17], 'true,false,false': [-1.1895246692412391e-17, nan], 'true': [0.027721780985205276, 0.039547603198854114], 'true,false': [9.06304509898087e-17, -1.1895246692412391e-17]}, {'': [0.03137963941072304, 1.6411992537937097e-17], 'true,true': [0.01975459121667839, 0.00013887772345807907], 'true': [0.03137963941072304, nan]}, {'': [0.021919118693146583, 7.439351888717921e-05], 'true': [4.3513268069367595e-05, 0.0001816406085001506], 'true,false': [0.0001816406085001506, nan]}, {'': [0.018193668267285187, -2.590520390792032e-17], 'true,true': [0.018193668267285187, nan], 'true': [0.018193668267285187, nan]}, {'': [0.014125864433576097, 0.00011361389111942654], 'true': [0.014125864433576097, nan]}, {'': [0.012148464854869782, 8.741721045651514e-05], 'true,true': [0.012148464854869782, nan], 'true': [0.012148464854869782, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;genre(B, C).;true;true
4;true,false;movie(D, B), movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048793;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839186;  // std dev = 0,000, 289,000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360682;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.10159632948783653;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601498;  // std dev = 1,69e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( movie(E, B), movie(E, A) )
%   | | then return 0.3207118471601497;  // std dev = 6,66e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.09269127618926067;  // std dev = 1,05e-07, 314,000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 7,45e-08, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( female(A) )
%   | | | then return 0.16516047557236274;  // std dev = 1,651, 121,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | | | else return 0.17822196567466322;  // std dev = 1,527, 115,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3,16e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22393270371775423;  // std dev = 0,015, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09960875828937178;  // std dev = 0,005, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109146;  // std dev = 6,50e-08, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then return 0.1874257072696876;  // std dev = 0,013, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.07897657070052226;  // std dev = 0,109, 171,000 (wgt'ed) examples reached here.  /* #neg=171 */
%   else return -0.07324622576333698;  // std dev = 2,98e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16053546199734128;  // std dev = 0,012, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0846293274631974;  // std dev = 0,004, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06826350727501701;  // std dev = 0,003, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14006093461277835;  // std dev = 0,010, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07828156139559392;  // std dev = 0,003, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06404938976659307;  // std dev = 0,003, 318,000 (wgt'ed) examples reached here.  /* #neg=318 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064037
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.371 seconds
Total inference time: 2.624 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.335 seconds
Refined model CLL: -0.067715


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064037
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.516 seconds
Total inference time: 2.624 seconds
AUC ROC: 1.0
Total revision time: 7.516
Best scored revision CLL: -0.067715


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:40:27
{'Inference time': 2.624, 'CLL': -0.064037, 'parameter': {'Inference time': 2.163, 'CLL': -0.077014, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.956, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 7.516, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(J, K).;false;false
0;true,true,true;publication(F, E), ta(G, A, H).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,false;ta(F, A, G), publication(H, B).;false;false
1;true,false,true;publication(D, E), professor(E).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), professor(K).;false;false
2;true,true,true;publication(E, F), sameperson(B, F).;false;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;ta(G, A, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;ta(K, A, L).;false;false
3;true,true,true;ta(F, A, G), ta(H, E, G).;false;false
3;true,false,false;publication(M, B).;false;false
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;tempadvisedby(I, B), publication(J, I).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
4;true,false,true;ta(E, A, F).;false;false
4;true;projectmember(C, B).;false;true
4;true,false;publication(D, B), publication(D, A).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(I, K), student(K).;false;false
5;true,true,true;publication(G, B).;false;false
5;true,false;publication(I, B), tempadvisedby(J, B).;true;true
5;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
5;true,true,false;publication(H, D).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;true,true;publication(G, A).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, G, I), ta(J, A, K).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false,false;publication(L, A).;false;false
6;true,true;tempadvisedby(D, B).;false;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false;tempadvisedby(G, B).;true;true
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,false,true;sameperson(B, K), ta(M, L, N).;false;false
7;true,true,true;ta(H, G, I).;false;false
7;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
7;true,false,false;publication(P, B).;false;false
7;true,true,false;publication(J, A).;false;false
7;true;ta(D, A, E), publication(F, B).;true;true
7;true,true;tempadvisedby(G, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(J, B).;false;false
8;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
8;true,true;tempadvisedby(E, B), publication(F, E).;false;true
8;true;ta(C, A, D).;true;true
8;true,false;publication(J, A), publication(K, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(K, A).;false;false
9;true,true,true;ta(F, E, G), ta(H, A, I).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,true;publication(C, E), student(E).;true;false
9;true;publication(C, B), publication(D, A).;true;true
9;true,false;tempadvisedby(J, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, F) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B), movie(H, A) )
%   | | then if ( movie(H, I), director(I) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7,74e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5,37e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.26506142670926736;  // std dev = 1,017, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.13732894864169648;  // std dev = 1,425, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | else return -0.08885898293899279;  // std dev = 0,068, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23996110834264833;  // std dev = 2,63e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.10861121894190684;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08258203926426375;  // std dev = 0,074, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.02807836715664018;  // std dev = 1,467, 116,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0729883375222764;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.14525346132527042;  // std dev = 0,809, 54,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07829327169112336;  // std dev = 0,081, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, E), actor(E) )
%   | | then return 0.13890218478138086;  // std dev = 0,093, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0747359198536269;  // std dev = 0,073, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07729
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.351 seconds
Total inference time: 2.395 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.127 seconds
Parameter learned model CLL: -0.077238


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true,true,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [7.88e-08, 84, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.23e-07, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(H, I), director(I)', 'true,true,true': 'movie(D, F)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B), movie(H, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'false': [7.74e-08, 95, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'false': [5.37e-08, 72, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.017, 7, 45], 'false': [0.0, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.068, 44, 0], 'true,true,true': [1.425, 26, 45], 'false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [2.63e-09, 0, 45], 'true,false,true': [0.0, 7, 0], 'false': [0.074, 98, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.467, 71, 45], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.809, 9, 45], 'false': [0.081, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, E), actor(E)', 'true': 'movie(C, B), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.093, 6, 45], 'false': [0.073, 77, 0]}]]
[{'': [0.07496876301541104, 7.401486830834377e-17], 'true,false,true': [0.0, nan], 'true,true,true': [1.105288700071267e-15, nan], 'true,true': [1.105288700071267e-15, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.07410586634586562, -3.0417069167812506e-17], 'true,false,true': [-2.3129646346357427e-18, nan], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.040122030722945186, 6.310741403132469e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,true,true': [-3.947459643111668e-17, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.03453579098627794, 4.0091387000352874e-17], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, -5.204170427930421e-18], 'true,false': [-5.204170427930421e-18, nan]}, {'': [0.019909088333742615, 0.0], 'true': [0.019909088333742615, nan]}, {'': [0.029787294223569738, 2.3129646346357427e-18], 'true,true': [0.028607133649514303, 0.0001052998244016902], 'true': [0.029787294223569738, nan]}, {'': [0.014154341795414147, 5.619477660561689e-05], 'true': [9.86864910777917e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.01855447215757881, 0.0], 'true,true': [0.01855447215757881, nan], 'true': [0.01855447215757881, nan]}, {'': [0.01213373372468032, 6.825077306102407e-05], 'true': [0.01213373372468032, nan]}, {'': [0.00859806054059411, 6.952166478798031e-05], 'true,true': [0.00859806054059411, nan], 'true': [0.00859806054059411, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360621;  // std dev = 7,60e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926107;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 4,83e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( female(A) )
%   | | | then return 0.20280962811442999;  // std dev = 0,443, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.22757572954587718;  // std dev = 0,565, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21539552093371242;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10352602674767569;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109164;  // std dev = 4,71e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1812212274718429;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09536240571318785;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15586611350885685;  // std dev = 0,009, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08744707023907193;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420265;  // std dev = 4,47e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1364400949443956;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08045610029141805;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065241
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.305 seconds
Total inference time: 2.625 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064798
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.127 seconds
Refined model CLL: -0.064798


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065241
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.909999999999999 seconds
Total inference time: 2.625 seconds
AUC ROC: 1.0
Total revision time: 4.909999999999999
Best scored revision CLL: -0.064798


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:40:38
{'Inference time': 2.625, 'CLL': -0.065241, 'parameter': {'Inference time': 2.395, 'CLL': -0.07729, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.351, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 4.909999999999999, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, J), tempadvisedby(J, K).;false;false
0;true,true,true;publication(F, E), ta(G, A, H).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;publication(I, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,false;ta(F, A, G), publication(H, B).;false;false
1;true,false,true;publication(D, E), professor(E).;false;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;publication(J, K), professor(K).;false;false
2;true,true,true;publication(E, F), sameperson(B, F).;false;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;ta(G, A, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;ta(K, A, L).;false;false
3;true,true,true;ta(F, A, G), ta(H, E, G).;false;false
3;true,false,false;publication(M, B).;false;false
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,false;tempadvisedby(I, B), publication(J, I).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,false;publication(G, B), tempadvisedby(H, B).;false;false
4;true,false,true;ta(E, A, F).;false;false
4;true;projectmember(C, B).;false;true
4;true,false;publication(D, B), publication(D, A).;true;true
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
5;true,false,true;publication(I, K), student(K).;false;false
5;true,true,true;publication(G, B).;false;false
5;true,false;publication(I, B), tempadvisedby(J, B).;true;true
5;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
5;true,true,false;publication(H, D).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;true,true;publication(G, A).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;ta(H, G, I), ta(J, A, K).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false,false;publication(L, A).;false;false
6;true,true;tempadvisedby(D, B).;false;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false;tempadvisedby(G, B).;true;true
7;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
7;true,false,true;sameperson(B, K), ta(M, L, N).;false;false
7;true,true,true;ta(H, G, I).;false;false
7;true,false;hasposition(K, C), tempadvisedby(L, K).;true;true
7;true,false,false;publication(P, B).;false;false
7;true,true,false;publication(J, A).;false;false
7;true;ta(D, A, E), publication(F, B).;true;true
7;true,true;tempadvisedby(G, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(J, B).;false;false
8;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;tempadvisedby(L, B), publication(M, L).;false;false
8;true,true;tempadvisedby(E, B), publication(F, E).;false;true
8;true;ta(C, A, D).;true;true
8;true,false;publication(J, A), publication(K, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(K, A).;false;false
9;true,true,true;ta(F, E, G), ta(H, A, I).;false;false
9;true,false,false;publication(L, B).;false;false
9;true,true;publication(C, E), student(E).;true;false
9;true;publication(C, B), publication(D, A).;true;true
9;true,false;tempadvisedby(J, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, F) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B), movie(H, A) )
%   | | then if ( movie(H, I), director(I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,23e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5,27e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.30922842706711035;  // std dev = 0,408, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1591433098530451;  // std dev = 1,227, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | | else return -0.08572086188995068;  // std dev = 0,037, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2276866942311461;  // std dev = 0,000838, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.11327656330937545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08391311301176638;  // std dev = 0,086, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.010398864867365899;  // std dev = 1,476, 136,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07289832686197004;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.17666153158468031;  // std dev = 0,387, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07769553750784987;  // std dev = 0,076, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, E), actor(E) )
%   | | then return 0.15090711351257463;  // std dev = 0,057, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07281308579060346;  // std dev = 0,079, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.296 seconds
Total inference time: 2.638 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0746
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.268 seconds
Parameter learned model CLL: -0.0746


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true,true,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'false': [8.16e-08, 90, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.23e-07, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(D, E), director(E)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(H, I), director(I)', 'true,true,true': 'movie(D, F)', 'true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(G, B), movie(H, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'false': [6.23e-08, 79, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'false': [5.27e-08, 70, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)', 'true,false': 'movie(D, B), movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.408, 1, 35], 'true,false,true': [0.0, 0, 10], 'false': [0.0, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.037, 69, 0], 'true,true,true': [1.227, 18, 45], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,false': [0.0, 0, 0], 'true,true': [0.000838, 0, 45], 'true,false,true': [0.0, 3, 0], 'false': [0.086, 99, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [1.476, 91, 45], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.387, 2, 45], 'false': [0.076, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, E), actor(E)', 'true': 'movie(C, B), movie(D, A)'}, {'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.057, 2, 45], 'false': [0.079, 94, 0]}]]
[{'': [0.07496876301541104, 7.401486830834377e-17], 'true,false,true': [0.0, nan], 'true,true,true': [1.105288700071267e-15, nan], 'true,true': [1.105288700071267e-15, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.05351918877289897, -3.0417069167812506e-17], 'true,false,true': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0181629835776121, 4.9187096027696806e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,true,true': [-3.947459643111668e-17, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan]}, {'': [0.024252759220113572, 3.9650822308041306e-17], 'true,true': [-4.144832625267251e-16, nan], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.003634497357172579, 0.0], 'true': [0.00461541279616256, -4.4408920985006264e-17], 'true,false': [-4.4408920985006264e-17, nan]}, {'': [0.02636569146253477, 0.0], 'true,true': [0.023879071991205748, 1.9544183951597276e-05], 'true': [0.02636569146253477, nan]}, {'': [0.006812530083359543, 7.50909231070413e-05], 'true': [7.02318543282448e-07, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.016025900040496414, -1.3877787807814458e-18], 'true,true': [0.016025900040496414, nan], 'true': [0.016025900040496414, nan]}, {'': [0.003183721828141138, 6.532318502728977e-05], 'true': [0.003183721828141138, nan]}, {'': [0.0032839661852284248, 6.648476543662861e-05], 'true,true': [0.0032839661852284248, nan], 'true': [0.0032839661852284248, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360622;  // std dev = 6,66e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( female(A) )
%   | | then return 0.29774500697407125;  // std dev = 0,095, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.3207118471601496;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926108;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839683;  // std dev = 4,21e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( female(A) )
%   | | | then return 0.24260974364383545;  // std dev = 0,371, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.2403741123974075;  // std dev = 0,333, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21348853402689622;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 4,83e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.18089366051913328;  // std dev = 0,007, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.1787151419097014;  // std dev = 3,49e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.12805506932743757;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15561866167261137;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1539706562698648;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.13463563283872243;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420267;  // std dev = 3,73e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13624759424107116;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13496404534217318;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.1202899451522415;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.708 seconds
Total inference time: 2.282 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.215 seconds
Refined model CLL: -0.065237


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.487 seconds
Total inference time: 2.282 seconds
AUC ROC: 1.0
Total revision time: 5.487
Best scored revision CLL: -0.065237


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:40:49
{'Inference time': 2.282, 'CLL': -0.067461, 'parameter': {'Inference time': 2.638, 'CLL': -0.077348, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 1.296, 'AUC PR': 1.0, 'F1': 1.0}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 5.487, 'AUC PR': 1.0, 'F1': 1.0}


