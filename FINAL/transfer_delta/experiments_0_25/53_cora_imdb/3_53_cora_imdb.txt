Starting experiment #3 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2914822684328448;  // std dev = 4,701, 90,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=39 */
%   | | | else return 0.08696249442154541;  // std dev = 4,563, 118,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=27 */
%   | else return 0.21575453240450843;  // std dev = 0,479, 7.718,000 (wgt'ed) examples reached here.  /* #neg=4.958 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.7812258581764349;  // std dev = 2,542, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.13884806189748466;  // std dev = 0,998, 333,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=1 */
%   | | else return -0.028286396130772218;  // std dev = 0,317, 317,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=36 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.023493576977782517;  // std dev = 0,323, 414,000 (wgt'ed) examples reached here.  /* #neg=365 #pos=49 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18854163166879595;  // std dev = 0,479, 7.933,000 (wgt'ed) examples reached here.  /* #neg=5.086 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.647777226645595;  // std dev = 2,703, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.12273494988478104;  // std dev = 0,998, 329,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.26696286667734836;  // std dev = 2,986, 37,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return -0.050576429941445976;  // std dev = 4,377, 239,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0105998987034748;  // std dev = 6,400, 366,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=47 */
%   | | | else return -0.0973485325832561;  // std dev = 1,384, 48,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7876828708077581;  // std dev = 0,256, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.19849873294787201;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5220046432595665;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.0275659812826395;  // std dev = 4,731, 158,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */
%   | else return 0.16263372966732104;  // std dev = 0,480, 7.647,000 (wgt'ed) examples reached here.  /* #neg=4.887 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7180478839810762;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12780568900730385;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.035045553343824885;  // std dev = 0,294, 69,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | else return -0.00982521507104806;  // std dev = 0,306, 1.088,000 (wgt'ed) examples reached here.  /* #neg=937 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.198401036870178;  // std dev = 5,397, 153,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=69 */
%   | | | else return 0.8058505088591252;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0567803086879002;  // std dev = 0,295, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.16291132999353541;  // std dev = 4,829, 97,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=39 */
%   | | | else return 0.017373653677821746;  // std dev = 4,585, 122,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | else return 0.13528793879568357;  // std dev = 0,480, 7.464,000 (wgt'ed) examples reached here.  /* #neg=4.770 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return 0.005358152160932847;  // std dev = 0,301, 732,000 (wgt'ed) examples reached here.  /* #neg=611 #pos=121 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.022980273395964645;  // std dev = 0,315, 435,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=49 */
%   | | else return -0.11240350668830151;  // std dev = 0,008, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5166105584969676;  // std dev = 0,189, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2962362561396208;  // std dev = 4,108, 69,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   | | | else return 0.06056869097801195;  // std dev = 4,448, 101,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2517542238110588;  // std dev = 3,326, 70,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return -0.02455800067219614;  // std dev = 4,504, 142,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | else return 0.11068010888447889;  // std dev = 0,480, 7.466,000 (wgt'ed) examples reached here.  /* #neg=4.772 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.14433818460351922;  // std dev = 0,447, 53,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else return -0.00630349316777048;  // std dev = 0,319, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return -0.0030970293640769546;  // std dev = 0,305, 1.020,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.3442962994452034;  // std dev = 0,214, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22933713431537686;  // std dev = 3,087, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return -0.04970073633641869;  // std dev = 4,596, 167,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=27 */
%   | | else return 0.08723726665423047;  // std dev = 0,479, 7.701,000 (wgt'ed) examples reached here.  /* #neg=4.941 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.11330630940632172;  // std dev = 1,005, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09858107234685067;  // std dev = 2,251, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return -0.04550604682211563;  // std dev = 0,197, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.012660220304444225;  // std dev = 0,315, 810,000 (wgt'ed) examples reached here.  /* #neg=706 #pos=104 */
%   | | else return 0.004898992269170636;  // std dev = 0,280, 270,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=47 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.07927035066059984;  // std dev = 5,926, 174,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=69 */
%   | | | else return -0.0037643487976666713;  // std dev = 2,092, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else return 0.6078366550516183;  // std dev = 0,207, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06539471908370996;  // std dev = 0,476, 7.805,000 (wgt'ed) examples reached here.  /* #neg=5.045 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.025463993602920947;  // std dev = 0,290, 411,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=85 */
%   | | else return -0.017560109999398627;  // std dev = 0,322, 292,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=36 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.10015395293628544;  // std dev = 0,197, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011016090669426735;  // std dev = 6,493, 402,000 (wgt'ed) examples reached here.  /* #neg=354 #pos=48 */
%   | | | else return -0.10085844671947558;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.2757343514605238;  // std dev = 0,078, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.02777428596449188;  // std dev = 6,297, 199,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
%   | | else return 0.484491891087664;  // std dev = 0,205, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.058172735249428474;  // std dev = 0,478, 7.666,000 (wgt'ed) examples reached here.  /* #neg=4.906 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.1922786267287953;  // std dev = 0,461, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else return -0.004455062266303008;  // std dev = 0,286, 655,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=104 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return -0.082524286785534;  // std dev = 0,193, 20,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0033601663163817046;  // std dev = 6,471, 380,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=48 */
%   | | | else return -0.09207311111682695;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.10320211496236713;  // std dev = 4,857, 144,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=69 */
%   | | | else return 0.6383270896850981;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11220021658813632;  // std dev = 0,234, 87,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, C) )
%   | | | then return 0.008669156085908649;  // std dev = 6,278, 196,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=61 */
%   | | | else return 0.5260648476739649;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.046298246337862795;  // std dev = 0,480, 7.454,000 (wgt'ed) examples reached here.  /* #neg=4.760 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return 0.006547884981343905;  // std dev = 0,302, 701,000 (wgt'ed) examples reached here.  /* #neg=580 #pos=121 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.014762107231169273;  // std dev = 0,317, 429,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=49 */
%   | | else return -0.08465987025736378;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.034014881535595176;  // std dev = 0,476, 7.275,000 (wgt'ed) examples reached here.  /* #neg=4.666 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.708545089435916;  // std dev = 3,181, 141,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=131 */
%   | | | else return -0.1337404405532291;  // std dev = 1,606, 525,000 (wgt'ed) examples reached here.  /* #neg=522 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.20733106463034526;  // std dev = 4,881, 230,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=27 */
%   | | | else return -0.09068159830269545;  // std dev = 1,388, 63,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | | else if ( haswordtitle(D, H), haswordvenue(B, H) )
%   | | | then return 0.187720239007638;  // std dev = 6,697, 273,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=122 */
%   | | | else return 1.0918120120667172E-4;  // std dev = 1,688, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.6130446092152096;  // std dev = 0,216, 71,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=68 */
%   | else return 0.0023439942688000984;  // std dev = 0,272, 284,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true;title(J, I), venue(J, A).;true;false
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;author(K, J), venue(K, B).;true;false
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;true,false,true;author(I, H), venue(I, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
3;true,true;haswordtitle(F, D).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true;haswordtitle(M, K).;false;false
4;true,false,true;author(J, I), venue(J, A).;false;false
4;true,true,false;author(G, E), venue(G, B).;false;false
4;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
4;true,true;haswordauthor(F, C).;false;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;true;haswordauthor(D, C).;false;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;false,true,true;author(K, I), title(K, J).;false;false
5;false,true;haswordtitle(J, H).;true;false
5;true,false,true;author(G, F), venue(G, A).;false;false
5;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;false;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;true,true;haswordtitle(F, C).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false,true;title(I, H), venue(I, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordauthor(L, K).;false;true
7;true,true,true;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
7;true,true;haswordtitle(F, C).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,true;haswordauthor(J, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,false,true;haswordtitle(I, C).;false;false
8;true,true,true;haswordtitle(F, C).;false;false
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
8;true,true;haswordtitle(F, D).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;false;haswordvenue(A, I), haswordvenue(B, I).;false;false
9;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;true,false;title(G, D), venue(G, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45869623605683496;  // std dev = 3,513, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.18495137386965663;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3637420473939761;  // std dev = 0,374, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3175756716450045;  // std dev = 0,347, 77,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783615;  // std dev = 5,96e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.45062075931537837;  // std dev = 1,46e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.292882836857517;  // std dev = 0,213, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11480437779209364;  // std dev = 2,757, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.08518475138839679;  // std dev = 3,09e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09186487857334355;  // std dev = 0,286, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109168;  // std dev = 3,49e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08091009325907182;  // std dev = 0,283, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.07860345706893954;  // std dev = 0,278, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420267;  // std dev = 2,98e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26600903279369886;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.1990830891327539;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.13269424364235105;  // std dev = 1,166, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.144029
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.297 seconds
Total inference time: 2.598 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.142098
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.441 seconds
Parameter learned model CLL: -0.142098


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [6.99e-08, 72, 0], 'true,true,false': [2.79e-08, 30, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 73, 0], 'true': [3.513, 25, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [7.15e-08, 87, 0], 'true,true,false': [0.374, 26, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.96e-08, 78, 0], 'true,true': [0.347, 21, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 77, 0], 'true,true,true': [1.46e-07, 0, 56], 'true,true,false': [0.213, 31, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false': 'movie(F, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.09e-09, 79, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [2.757, 35, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [3.49e-08, 69, 0], 'true,true': [0.286, 35, 56], 'false,true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 72, 0], 'true,true': [0.283, 33, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.98e-08, 71, 0], 'true,true': [0.278, 30, 56]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(A, E)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [1.32e-09, 3, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,true': [1.166, 103, 0]}]]
[{'': [0.22714981070849077, 7.201446646217232e-17], 'false,true,true': [nan, 0.0], 'false': [7.201446646217232e-17, nan], 'false,true': [0.0, 6.78469626159818e-17], 'true': [0.22714981070849077, nan], 'true,true': [-1.2688263138573217e-16, 2.590520390792032e-17]}, {'': [0.15233060775053342, -2.6294755846385285e-17], 'false,true': [0.0, -3.0417069167812506e-17], 'false,true,true': [nan, 0.0], 'false': [-2.6294755846385285e-17, nan]}, {'': [0.1416794177499103, 5.968940992608368e-17], 'false,true,true': [nan, 0.0], 'true,true,true': [nan, 0.0], 'false': [5.968940992608368e-17, nan], 'false,true': [0.0, 5.870144727903127e-17], 'true': [0.1416794177499103, nan], 'true,true': [0.0, 0.1397799327497821]}, {'': [0.12046048721558196, 4.554761126667309e-17], 'true': [0.12046048721558196, nan], 'false': [4.554761126667309e-17, nan]}, {'': [0.12730760689083118, 0.0], 'true,true': [3.806478941571965e-16, 0.0014588977599027217], 'true': [0.12730760689083118, nan], 'false': [0.0, nan]}, {'': [0.08350985279783692, 9.837419205539362e-18], 'true,true': [nan, 0.08350985279783692], 'true': [0.08350985279783692, nan], 'false': [9.837419205539362e-18, nan]}, {'': [0.08185500181697633, 2.2204460492503132e-17], 'false,true': [-1.1564823173178713e-18, 1.769920763895177e-17], 'true': [0.08185500181697633, nan], 'false': [2.2204460492503132e-17, nan]}, {'': [0.08033707845443883, -3.854941057726238e-18], 'true': [0.08033707845443883, nan], 'false': [-3.854941057726238e-18, nan]}, {'': [0.07726905381450246, 1.2509555207044018e-17], 'true': [0.07726905381450246, nan], 'false': [1.2509555207044018e-17, nan]}, {'': [0.042662833337270674, nan], 'true,true,false': [nan, -5.782411586589357e-19], 'true,false,true': [0.0, 5.782411586589357e-19], 'true,false,false': [0.013208741715154135, nan], 'true,true': [0.0, -5.782411586589357e-19], 'true': [0.009530426411678257, 0.012808741801221256], 'true,false': [0.004366955776911705, 0.013208741715154135]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.6861400788776212;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5635816664138992;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.42363456653711407;  // std dev = 1,58e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.32486449829432773;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926105;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839685;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694891;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.25800381208789624;  // std dev = 8,33e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08518475138839682;  // std dev = 2,28e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 1,86e-09, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.21175591000853827;  // std dev = 5,89e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.17856069688536103;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.07324622576333704;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1538536949248889;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.20207791347934467;  // std dev = 0,598, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.0684269778442027;  // std dev = 9,31e-10, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420268;  // std dev = 2,08e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13487286732197656;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(D, B) )
%   | | then return -0.05964622218307377;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.076216
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.63 seconds
Total inference time: 2.861 seconds
AUC ROC: 0.99889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064405
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.524 seconds
Refined model CLL: -0.064405


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.076216
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.892 seconds
Total inference time: 2.861 seconds
AUC ROC: 0.99889
Total revision time: 6.892
Best scored revision CLL: -0.064405


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:37:41
{'Inference time': 2.861, 'CLL': -0.076216, 'parameter': {'Inference time': 2.598, 'CLL': -0.144029, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.978388, 'Recall': 0.819018, 'Learning time': 1.297, 'AUC PR': 0.863056, 'F1': 0.809091}, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.99889, 'Recall': 1.0, 'Learning time': 6.892, 'AUC PR': 0.966568, 'F1': 0.847854}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true;title(J, I), venue(J, A).;true;false
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;author(K, J), venue(K, B).;true;false
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;true,false,true;author(I, H), venue(I, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
3;true,true;haswordtitle(F, D).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true;haswordtitle(M, K).;false;false
4;true,false,true;author(J, I), venue(J, A).;false;false
4;true,true,false;author(G, E), venue(G, B).;false;false
4;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
4;true,true;haswordauthor(F, C).;false;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;true;haswordauthor(D, C).;false;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;false,true,true;author(K, I), title(K, J).;false;false
5;false,true;haswordtitle(J, H).;true;false
5;true,false,true;author(G, F), venue(G, A).;false;false
5;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;false;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;true,true;haswordtitle(F, C).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false,true;title(I, H), venue(I, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordauthor(L, K).;false;true
7;true,true,true;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
7;true,true;haswordtitle(F, C).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,true;haswordauthor(J, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,false,true;haswordtitle(I, C).;false;false
8;true,true,true;haswordtitle(F, C).;false;false
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
8;true,true;haswordtitle(F, D).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;false;haswordvenue(A, I), haswordvenue(B, I).;false;false
9;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;true,false;title(G, D), venue(G, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47218032418968203;  // std dev = 3,481, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.18699266491641214;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.3540923612602334;  // std dev = 0,376, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2340072782033168;  // std dev = 0,375, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783624;  // std dev = 4,71e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4704273312872499;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.28837018714790374;  // std dev = 0,096, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1530306454321631;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.1882979813046791;  // std dev = 2,410, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.08559203657953966;  // std dev = 0,004, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13157103260535843;  // std dev = 0,270, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.08682736436007585;  // std dev = 0,028, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07874720271688294;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.06646779409817193;  // std dev = 0,284, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07317450469623904;  // std dev = 0,000152, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.07332200634782222;  // std dev = 0,277, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06869588324202888;  // std dev = 0,028, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2595103549901267;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641573127218985;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.16900490881831617;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06367387564954916;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.13461194476715047;  // std dev = 1,246, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.145214
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.647 seconds
Total inference time: 2.833 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.136793
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.545 seconds
Parameter learned model CLL: -0.136793


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [7.88e-08, 86, 0], 'true,true,false': [0.0, 16, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 79, 0], 'true': [3.481, 24, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'true,true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [6.32e-08, 79, 0], 'true,true,false': [0.376, 28, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [4.71e-08, 94, 0], 'true,true': [0.375, 36, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 86, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.096, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false': 'movie(F, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.004, 85, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [2.41, 23, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 91, 0], 'true,true': [0.27, 27, 58], 'false,true,true': [0.028, 4, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.000152, 83, 0], 'true,true': [0.284, 35, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.028, 84, 0], 'true,true': [0.277, 31, 58]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(A, E)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 5, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false,false,true': [1.246, 113, 0]}]]
[{'': [0.16946676406135816, 7.946859544685331e-17], 'false,true,true': [nan, -9.25185853854297e-18], 'false': [7.946859544685331e-17, nan], 'false,true': [-9.25185853854297e-18, 7.229359230117299e-17], 'true': [0.16946676406135816, nan], 'true,true': [-3.675221047035001e-16, -6.938893903907228e-18]}, {'': [0.14778852250915056, -2.0898315757650005e-17], 'false,true': [-2.3129646346357427e-18, -2.5296220814244072e-17], 'false,true,true': [nan, -2.3129646346357427e-18], 'false': [-2.0898315757650005e-17, nan]}, {'': [0.1446291555464666, 5.551115123125783e-17], 'false,true,true': [nan, 0.0], 'true,true,true': [nan, 0.0], 'false': [5.551115123125783e-17, nan], 'false,true': [0.0, 5.0592441628488145e-17], 'true': [0.1446291555464666, nan], 'true,true': [0.0, 0.14133869233572846]}, {'': [0.1405779526400093, 2.362176648138631e-17], 'true': [0.1405779526400093, nan], 'false': [2.362176648138631e-17, nan]}, {'': [0.11491089288584684, 0.0], 'true,true': [-6.125368411725002e-17, 0.0004218786742449344], 'true': [0.11491089288584684, nan], 'false': [0.0, nan]}, {'': [0.07269472635704427, 1.3934023061651041e-05], 'true,true': [0.0, 0.07168230289781474], 'true': [0.07269472635704427, nan], 'false': [1.3934023061651041e-05, nan]}, {'': [0.072641547501708, 1.088029632341342e-05], 'false,true': [0.0001958670365403833, -1.0980227716072976e-17], 'true': [0.072641547501708, nan], 'false': [1.088029632341342e-05, nan]}, {'': [0.08078494359745154, 2.305790762808951e-08], 'true': [0.08078494359745154, nan], 'false': [2.305790762808951e-08, nan]}, {'': [0.07699433645402097, 9.151403359573487e-06], 'true': [0.07699433645402097, nan], 'false': [9.151403359573487e-06, nan]}, {'': [0.041097704001863855, nan], 'true,true,false': [nan, -1.4869058365515489e-18], 'true,false,true': [0.0, -6.938893903907229e-19], 'true,false,false': [0.013733332655348172, nan], 'true,true': [-5.3596973602593766e-17, -1.4869058365515489e-18], 'true': [0.010066951054104004, 0.013155935103816496], 'true,false': [0.0022642094996734455, 0.013733332655348172]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694892;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2551722425694892;  // std dev = 3,65e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(A) )
%   | then return -0.08518475138839682;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12456898857515225;  // std dev = 0,042, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.11950467365995959;  // std dev = 0,052, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 0.99881
   AUC PR    = 0.964909
   CLL	      = -0.078295
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.94 seconds
Total inference time: 3.126 seconds
AUC ROC: 0.99881


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065476
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.584 seconds
Refined model CLL: -0.065476


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99881
   AUC PR    = 0.964909
   CLL	      = -0.078295
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.715999999999999 seconds
Total inference time: 3.126 seconds
AUC ROC: 0.99881
Total revision time: 7.715999999999999
Best scored revision CLL: -0.065476


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:37:56
{'Inference time': 3.126, 'CLL': -0.078295, 'parameter': {'Inference time': 2.833, 'CLL': -0.145214, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.977686, 'Recall': 0.817901, 'Learning time': 1.647, 'AUC PR': 0.861626, 'F1': 0.80916}, 'Precision': [0.736364, 0.5], 'AUC ROC': 0.99881, 'Recall': 1.0, 'Learning time': 7.715999999999999, 'AUC PR': 0.964909, 'F1': 0.848168}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true;title(J, I), venue(J, A).;true;false
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;author(K, J), venue(K, B).;true;false
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;true,false,true;author(I, H), venue(I, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
3;true,true;haswordtitle(F, D).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true;haswordtitle(M, K).;false;false
4;true,false,true;author(J, I), venue(J, A).;false;false
4;true,true,false;author(G, E), venue(G, B).;false;false
4;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
4;true,true;haswordauthor(F, C).;false;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;true;haswordauthor(D, C).;false;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;false,true,true;author(K, I), title(K, J).;false;false
5;false,true;haswordtitle(J, H).;true;false
5;true,false,true;author(G, F), venue(G, A).;false;false
5;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;false;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;true,true;haswordtitle(F, C).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false,true;title(I, H), venue(I, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordauthor(L, K).;false;true
7;true,true,true;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
7;true,true;haswordtitle(F, C).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,true;haswordauthor(J, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,false,true;haswordtitle(I, C).;false;false
8;true,true,true;haswordtitle(F, C).;false;false
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
8;true,true;haswordtitle(F, D).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;false;haswordvenue(A, I), haswordvenue(B, I).;false;false
9;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;true,false;title(G, D), venue(G, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8208355022636894;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return 0.23219473662623064;  // std dev = 5,538, 131,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.14185106490048852;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4744318367055434;  // std dev = 6,865, 254,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.12544463852839177;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3764291221683344;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.2509835725756591;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.4232561111849441;  // std dev = 0,401, 240,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360617;  // std dev = 3,33e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.11231637819360672;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3354622569804627;  // std dev = 0,387, 239,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1015963294878366;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.38991101991563387;  // std dev = 2,206, 137,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=129 */
%   | | else return -0.008318242108306794;  // std dev = 5,332, 125,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.09269127618926042;  // std dev = 9,31e-09, 303,000 (wgt'ed) examples reached here.  /* #neg=303 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.30902859293976476;  // std dev = 0,345, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.21298745024598445;  // std dev = 5,576, 234,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.08518475138839678;  // std dev = 5,96e-09, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12965624177508908;  // std dev = 0,373, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07877675473109146;  // std dev = 6,50e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09284046947509142;  // std dev = 0,377, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333688;  // std dev = 6,59e-09, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.0765146198871311;  // std dev = 0,376, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.22354895714555098;  // std dev = 1,195, 132,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.26362143096771773;  // std dev = 1,83e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.05642382872877407;  // std dev = 4,953, 278,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.243985
   Precision = 0.06871 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.128585


Total learning time: 2.049 seconds
Total inference time: 2.527 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.204505
   Precision = 0.211401 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.34902


Total scoring time: 1.62 seconds
Parameter learned model CLL: -0.204505


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 9, 0], 'true,true,true': [2.194, 5, 129], 'false,true,true,false': [2.79e-08, 31, 0], 'false,true,false': [0.0, 224, 0], 'true,true,false': [5.538, 82, 49], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [3.65e-08, 43, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 225, 0], 'true': [6.865, 76, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [3.33e-08, 43, 0], 'true,true,true,false': [1.49e-08, 16, 0], 'true,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 221, 0], 'true,true,false': [0.401, 62, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 282, 0], 'true,true': [0.387, 61, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.31e-09, 303, 0], 'true,true,true': [2.206, 8, 129], 'true,true,false': [5.332, 76, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false': 'movie(F, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.96e-09, 286, 0], 'true,true,true': [0.345, 18, 0], 'true,true,false': [5.576, 56, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [6.5e-08, 226, 0], 'true,true': [0.373, 75, 178], 'false,true,true': [0.0, 51, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.59e-09, 273, 0], 'true,true': [0.377, 79, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 250, 0], 'true,true': [0.376, 77, 178]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(A, E)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 13, 0], 'true,true,true': [1.195, 3, 129], 'true,true,false,true': [0.0, 8, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 49, 0], 'true,true,false,false': [0.0, 38, 0], 'true,false,false,true': [4.953, 229, 49]}]]
[{'': [0.2205197579209737, -7.737918050417758e-17], 'false,true,true': [-9.25185853854297e-18, 2.5069552168955147e-17], 'false': [-7.737918050417758e-17, nan], 'false,true': [4.163336342344337e-17, -2.339398516174437e-16], 'true': [0.2205197579209737, nan], 'true,true': [0.035921140565832, 0.23413553988695346]}, {'': [0.18552824822605277, -8.752123113833351e-17], 'false,true': [4.531522549490435e-17, -6.513308411134252e-17], 'false,true,true': [-2.3129646346357427e-18, 3.0982968129074136e-17], 'false': [-8.752123113833351e-17, nan]}, {'': [0.1874162084011664, -1.0815456771256138e-16], 'false,true,true': [-1.982541115402065e-18, 2.581914010756178e-17], 'true,true,true': [-3.172065784643304e-17, 1.3877787807814457e-17], 'false': [-1.0815456771256138e-16, nan], 'true,true': [0.003331753539153367, 0.1606719646249707], 'true': [0.1874162084011664, nan], 'false,true': [3.3306690738754695e-17, -6.631196346177405e-17]}, {'': [0.14957064445250887, -5.984180841951198e-17], 'true': [0.14957064445250887, nan], 'false': [-5.984180841951198e-17, nan]}, {'': [0.1666311831585329, 8.793845739605201e-17], 'true,true': [0.035516682336654365, 0.2274076505512882], 'true': [0.1666311831585329, nan], 'false': [8.793845739605201e-17, nan]}, {'': [0.1419408034531028, 3.5713467925005034e-17], 'true,true': [0.006610080051810654, 0.13288651986054859], 'true': [0.1419408034531028, nan], 'false': [3.5713467925005034e-17, nan]}, {'': [0.13906892270296983, 7.214445647383688e-18], 'false,true': [0.0, 1.8667466785732722e-17], 'true': [0.13906892270296983, nan], 'false': [7.214445647383688e-18, nan]}, {'': [0.14180964941140248, 4.3920910864291905e-17], 'true': [0.14180964941140248, nan], 'false': [4.3920910864291905e-17, nan]}, {'': [0.14148403162045917, -6.217248937900877e-18], 'true': [0.14148403162045917, nan], 'false': [-6.217248937900877e-18, nan]}, {'': [0.0669890656120663, nan], 'true,true,false': [0.0, -2.1912296538654404e-18], 'true,false,true': [2.5620531337503614e-17, -2.2657612747452172e-18], 'true,false,false': [0.08824032864848111, nan], 'true,true': [0.01082293541761853, -3.0169103930031427e-18], 'true': [0.02389299053425543, 0.07371786149129682], 'true,false': [0.006590756247703286, 0.08824032864848111]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, H).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(A, I).;true;true
2;true,true;genre(B, F).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false;genre(A, F).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;true,false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return 0.8581489350995104;  // std dev = 7,54e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.8581489350995122;  // std dev = 1,69e-07, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.14185106490048768;  // std dev = 6,50e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048768;  // std dev = 4,94e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.14185106490048843;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109565;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.12544463852839194;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462833;  // std dev = 3,21e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.5553664367462834;  // std dev = 3,10e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(B, F) )
%   | then return -0.11231637819360613;  // std dev = 5,74e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360682;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 1,58e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415830997;  // std dev = 1,97e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1015963294878366;  // std dev = 0,000, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014944;  // std dev = 9,88e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.3207118471601501;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.3207118471601494;  // std dev = 1,83e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926071;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else return -0.09269127618926092;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 9,31e-10, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694896;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.25517224256948967;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.08518475138839679;  // std dev = 1,61e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( female(A) )
%   | then return -0.08518475138839675;  // std dev = 2,79e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839675;  // std dev = 1,05e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325357;  // std dev = 5,89e-09, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109148;  // std dev = 7,67e-08, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.07877675473109169;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109162;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527772;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367114;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0684269778442027;  // std dev = 6,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06842697784420286;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.08136045514034487;  // std dev = 0,700, 64,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | | | else return 0.09359755164013914;  // std dev = 0,810, 103,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=82 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06419184008202619;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( female(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080108;  // std dev = 4,21e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.06419184008202607;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | | | else return -0.020835837249830496;  // std dev = 0,463, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.754 seconds
Total inference time: 3.357 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066703
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.665 seconds
Refined model CLL: -0.066703


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.088000000000001 seconds
Total inference time: 3.357 seconds
AUC ROC: 1.0
Total revision time: 9.088000000000001
Best scored revision CLL: -0.066703


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:38:12
{'Inference time': 3.357, 'CLL': -0.064065, 'parameter': {'Inference time': 2.527, 'CLL': -0.243985, 'Precision': [0.06871, 0.5], 'AUC ROC': 0.993692, 'Recall': 1.0, 'Learning time': 2.049, 'AUC PR': 0.961008, 'F1': 0.128585}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 9.088000000000001, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true;title(J, I), venue(J, A).;true;false
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;author(K, J), venue(K, B).;true;false
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;true,false,true;author(I, H), venue(I, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
3;true,true;haswordtitle(F, D).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true;haswordtitle(M, K).;false;false
4;true,false,true;author(J, I), venue(J, A).;false;false
4;true,true,false;author(G, E), venue(G, B).;false;false
4;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
4;true,true;haswordauthor(F, C).;false;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;true;haswordauthor(D, C).;false;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;false,true,true;author(K, I), title(K, J).;false;false
5;false,true;haswordtitle(J, H).;true;false
5;true,false,true;author(G, F), venue(G, A).;false;false
5;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;false;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;true,true;haswordtitle(F, C).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false,true;title(I, H), venue(I, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordauthor(L, K).;false;true
7;true,true,true;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
7;true,true;haswordtitle(F, C).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,true;haswordauthor(J, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,false,true;haswordtitle(I, C).;false;false
8;true,true,true;haswordtitle(F, C).;false;false
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
8;true,true;haswordtitle(F, D).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;false;haswordvenue(A, I), haswordvenue(B, I).;false;false
9;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;true,false;title(G, D), venue(G, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4594986273680788;  // std dev = 3,144, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3816967854458773;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.18507236041485928;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3388682319562151;  // std dev = 0,383, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360628;  // std dev = 4,34e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.307583078787899;  // std dev = 0,352, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10159632948783617;  // std dev = 4,71e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4590670954376744;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2953892751583833;  // std dev = 0,134, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.16040321844019007;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.12669244994783124;  // std dev = 2,436, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.08518475138839679;  // std dev = 1,86e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10023988890367527;  // std dev = 0,281, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 2,24e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08284342282613316;  // std dev = 0,280, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.07646626860939537;  // std dev = 0,277, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420268;  // std dev = 2,47e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2504102320755215;  // std dev = 0,759, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.17420919487519368;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.15125581024085066;  // std dev = 1,049, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.138177
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.269 seconds
Total inference time: 2.786 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140356
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.306 seconds
Parameter learned model CLL: -0.140356


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [2.23e-07, 0, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [6.66e-08, 65, 0], 'true,true,false': [2.79e-08, 30, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 60, 0], 'true': [3.144, 20, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 4, 0], 'true,true,true,false': [0.0, 3, 0], 'true,true,true,true': [0.0, 1, 0], 'false,true,false': [4.34e-08, 59, 0], 'true,true,false': [0.383, 24, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [4.71e-08, 67, 0], 'true,true': [0.352, 19, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 56, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.134, 28, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false': 'movie(F, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.86e-09, 63, 0], 'true,true,true': [0.0, 5, 0], 'true,true,false': [2.436, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [2.24e-08, 59, 0], 'true,true': [0.281, 28, 45], 'false,true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 73, 0], 'true,true': [0.28, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.47e-08, 64, 0], 'true,true': [0.277, 25, 45]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(A, E)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 3, 0], 'true,true,true': [0.759, 1, 45], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 8, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,true': [1.049, 74, 0]}]]
[{'': [0.2400000000000003, 6.880255363874209e-17], 'false,true,true': [0.0, -2.7755575615628915e-18], 'false': [6.880255363874209e-17, nan], 'false,true': [-6.938893903907228e-18, 6.832141690000964e-17], 'true': [0.2400000000000003, nan], 'true,true': [1.105288700071267e-15, 2.590520390792032e-17]}, {'': [0.1520704996967241, -2.8548592061789737e-17], 'false,true': [2.7755575615628915e-18, -4.070817756958907e-17], 'false,true,true': [0.0, 0.0], 'false': [-2.8548592061789737e-17, nan]}, {'': [0.15579279667985593, 3.8163916471489756e-17], 'false,true,true': [0.0, 0.0], 'true,true,true': [0.0, 0.0], 'false': [3.8163916471489756e-17, nan], 'true,true': [0.0072489683472709635, 0.14640733031154896], 'true': [0.15579279667985593, nan], 'false,true': [0.0, 3.198947698072485e-17]}, {'': [0.12355702162533504, 3.314098580970616e-17], 'true': [0.12355702162533504, nan], 'false': [3.314098580970616e-17, nan]}, {'': [0.13482888352200198, -4.956352788505163e-18], 'true,true': [-5.921189464667501e-16, 0.0006387266248536789], 'true': [0.13482888352200198, nan], 'false': [-4.956352788505163e-18, nan]}, {'': [0.08206663586582642, 4.4056469231157e-18], 'true,true': [0.0, 0.08241350502126724], 'true': [0.08206663586582642, nan], 'false': [4.4056469231157e-18, nan]}, {'': [0.07882119796580701, 1.4518301091252048e-17], 'false,true': [-1.1564823173178713e-18, 8.467802730191872e-18], 'true': [0.07882119796580701, nan], 'false': [1.4518301091252048e-17, nan]}, {'': [0.07864364109184198, -3.802133645976563e-18], 'true': [0.07864364109184198, nan], 'false': [-3.802133645976563e-18, nan]}, {'': [0.07681223800369746, 9.540979117872439e-18], 'true': [0.07681223800369746, nan], 'false': [9.540979117872439e-18, nan]}, {'': [0.047309098561151675, nan], 'true,true,false': [nan, 0.0], 'true,false,true': [4.625929269271485e-18, 0.0], 'true,false,false': [0.014857064403640622, nan], 'true,true': [0.012528251286388884, 0.0], 'true': [0.018810511719586333, 0.013611879452791338], 'true,false': [0.002400757359805429, 0.014857064403640622]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, H).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(A, I).;true;true
2;true,true;genre(B, F).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360638;  // std dev = 2,28e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B), actor(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10465920054662778;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09366693094228117;  // std dev = 0,013, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08487056266812697;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09029697208072433;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07955998018328234;  // std dev = 0,004, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.0787767547310917;  // std dev = 3,36e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07840655386919576;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07321439335180442;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12031421061282134;  // std dev = 0,160, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.0729249823842492;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06840765460039466;  // std dev = 3,57e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06530336337950819;  // std dev = 0,000503, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0783550643799718;  // std dev = 0,000104, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367086;  // std dev = 4,93e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06841389579268758;  // std dev = 5,92e-05, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.08492241423762939;  // std dev = 0,086, 45,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.07285764436545561;  // std dev = 0,000110, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419251367600162;  // std dev = 7,28e-07, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06417926251285294;  // std dev = 4,20e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.061428691041823094;  // std dev = 0,000475, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06419247218651765;  // std dev = 3,12e-07, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */


Results
   AUC ROC   = 0.999064
   AUC PR    = 0.968999
   CLL	      = -0.075223
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.293 seconds
Total inference time: 3.232 seconds
AUC ROC: 0.999064


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066748
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.318 seconds
Refined model CLL: -0.066748


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999064
   AUC PR    = 0.968999
   CLL	      = -0.075223
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.186 seconds
Total inference time: 3.232 seconds
AUC ROC: 0.999064
Total revision time: 6.186
Best scored revision CLL: -0.066748


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:38:25
{'Inference time': 3.232, 'CLL': -0.075223, 'parameter': {'Inference time': 2.786, 'CLL': -0.138177, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.978805, 'Recall': 0.824926, 'Learning time': 1.269, 'AUC PR': 0.865091, 'F1': 0.816446}, 'Precision': [0.743929, 0.5], 'AUC ROC': 0.999064, 'Recall': 1.0, 'Learning time': 6.186, 'AUC PR': 0.968999, 'F1': 0.853165}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true;title(J, I), venue(J, A).;true;false
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;author(K, J), venue(K, B).;true;false
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;true,false,true;author(I, H), venue(I, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
3;true,true;haswordtitle(F, D).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true;haswordtitle(M, K).;false;false
4;true,false,true;author(J, I), venue(J, A).;false;false
4;true,true,false;author(G, E), venue(G, B).;false;false
4;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
4;true,true;haswordauthor(F, C).;false;true
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;true;haswordauthor(D, C).;false;true
5;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
5;false,true,true;author(K, I), title(K, J).;false;false
5;false,true;haswordtitle(J, H).;true;false
5;true,false,true;author(G, F), venue(G, A).;false;false
5;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;false;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;true,true;haswordtitle(F, C).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false,true;title(I, H), venue(I, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, K), haswordauthor(L, K).;false;true
7;true,true,true;haswordauthor(G, C).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
7;true,true;haswordtitle(F, C).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,true;haswordauthor(J, H).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
8;true,false,true;haswordtitle(I, C).;false;false
8;true,true,true;haswordtitle(F, C).;false;false
8;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
8;true,true;haswordtitle(F, D).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;false;haswordvenue(A, I), haswordvenue(B, I).;false;false
9;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;true,false;title(G, D), venue(G, A).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.24276431971489695;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4072675693239413;  // std dev = 3,735, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.24049490776226923;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.321819319981632;  // std dev = 0,438, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360625;  // std dev = 5,37e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.28567924756501933;  // std dev = 0,421, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.10254253343688174;  // std dev = 0,046, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.48177930398333535;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.10132990503572288;  // std dev = 2,705, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.09397754454032811;  // std dev = 0,006, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.23038941341038052;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.15305103818175497;  // std dev = 3,206, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.08539810607588337;  // std dev = 0,003, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.15390040152802367;  // std dev = 0,367, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.10026942338933195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07859944143894346;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11961760479775727;  // std dev = 0,375, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07366120920941946;  // std dev = 0,003, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.07710494903158643;  // std dev = 0,375, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06907064412616874;  // std dev = 0,029, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23414936854687596;  // std dev = 0,833, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06399226279587901;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.2523948695640504;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0803769925249304;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.12916760021243043;  // std dev = 2,879, 105,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.19208
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.119 seconds
Total inference time: 2.576 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.196065
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.377 seconds
Parameter learned model CLL: -0.196065


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [2.38e-07, 0, 35], 'false,true,false': [5.96e-08, 58, 0], 'true,true,false': [2.481, 16, 10], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 64, 0], 'true': [3.735, 26, 45], 'false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,true,true,false': [0.0, 3, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [5.37e-08, 68, 0], 'true,true,false': [0.438, 27, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.046, 86, 0], 'true,true': [0.421, 23, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.006, 55, 0], 'true,true,true': [0.0, 0, 35], 'true,true,false': [2.705, 28, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false': 'movie(F, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.003, 60, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [3.206, 25, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 66, 0], 'true,true': [0.367, 21, 45], 'false,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.003, 65, 0], 'true,true': [0.375, 20, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.029, 64, 0], 'true,true': [0.375, 23, 45]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(A, E)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true': [0.833, 1, 35], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 6, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,true': [2.879, 95, 10]}]]
[{'': [0.19349637194302646, 6.125368411725002e-17], 'false,true': [nan, 6.125368411725002e-17], 'true,true': [1.6240976817373718e-15, 0.23668639053254442], 'true': [0.19349637194302646, nan], 'false': [6.125368411725002e-17, nan]}, {'': [0.1964863589620431, -3.8163916471489756e-17], 'false,true': [nan, -3.8163916471489756e-17], 'false': [-3.8163916471489756e-17, nan]}, {'': [0.19599610721536814, 4.4408920985006264e-17], 'false,true,true': [nan, 0.0], 'true,true,true': [nan, -9.25185853854297e-18], 'false': [4.4408920985006264e-17, nan], 'false,true': [0.0, 4.244970388272657e-17], 'true': [0.19599610721536814, nan], 'true,true': [-9.25185853854297e-18, 0.19151472005374628]}, {'': [0.1775050730336709, 2.4770019598269576e-05], 'true': [0.1775050730336709, nan], 'false': [2.4770019598269576e-05, nan]}, {'': [0.18512964988406527, 3.233438573137666e-05], 'true,true': [-5.075305255429287e-17, 0.19262226359308549], 'true': [0.18512964988406527, nan], 'false': [3.233438573137666e-05, nan]}, {'': [0.14675921238381887, 8.843973601407873e-06], 'true,true': [0.0, 0.14686826107327614], 'true': [0.14675921238381887, nan], 'false': [8.843973601407873e-06, nan]}, {'': [0.1350202221597149, 6.904169251540592e-06], 'false,true': [0.0, -6.7286243916676156e-18], 'true': [0.1350202221597149, nan], 'false': [6.904169251540592e-06, nan]}, {'': [0.1407496518915911, 1.0192160400722938e-05], 'true': [0.1407496518915911, nan], 'false': [1.0192160400722938e-05, nan]}, {'': [0.1405362754087284, 1.3490239157734965e-05], 'true': [0.1405362754087284, nan], 'false': [1.3490239157734965e-05, nan]}, {'': [0.08385884842339078, nan], 'true,true,false': [nan, 0.0], 'true,false,true': [0.0, 0.0], 'true,false,false': [0.07893409518768613, nan], 'true,true': [0.019282744237276446, 0.0], 'true': [0.02269997316139469, 0.07426153147633327], 'true,false': [0.00362328367604643, 0.07893409518768613]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, F).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.5553664367462839;  // std dev = 1,58e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1123163781936063;  // std dev = 3,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831047;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.3207118471601496;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.32071184716014944;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.25517224256948956;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333704;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.12357551052958815;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06419184008202619;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return 0.13400703000801095;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09436725599000353;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.999958
   AUC PR    = 0.998614
   CLL	      = -0.07994
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.177 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.999958


Results scoring model
   AUC ROC   = 0.999979
   AUC PR    = 0.998999
   CLL	      = -0.06638
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.427 seconds
Refined model CLL: -0.06638


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999958
   AUC PR    = 0.998614
   CLL	      = -0.07994
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.1 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.999958
Total revision time: 6.1
Best scored revision CLL: -0.06638


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:38:37
{'Inference time': 2.821, 'CLL': -0.07994, 'parameter': {'Inference time': 2.576, 'CLL': -0.19208, 'Precision': [0.808989, 0.5], 'AUC ROC': 0.982257, 'Recall': 0.854599, 'Learning time': 1.119, 'AUC PR': 0.888508, 'F1': 0.831169}, 'Precision': [0.742291, 0.5], 'AUC ROC': 0.999958, 'Recall': 1.0, 'Learning time': 6.1, 'AUC PR': 0.998614, 'F1': 0.852086}


